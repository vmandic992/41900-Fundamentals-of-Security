Triple DES Capture

168-bit key: JOg4JjvthudIK3YE7Qboh

3 x 56-bit DES keys: JOg4Jjv, thudIK3, YE7Qboh

Initialization Vector: TQULdBgi

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: YE7Qboh
In Binary:  01011001010001010011011101010001011000100110111101101000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01101011101011001000101011101001110110010000100101111010
Subkey 2  : 01000101001101110101000101100010011011110110100001011001
Subkey 3  : 10101100100010101110100111011001000010010111101001101011
Subkey 4  : 00110111010100010110001001101111011010000101100101000101
Subkey 5  : 10001010111010011101100100001001011110100110101110101100
Subkey 6  : 01010001011000100110111101101000010110010100010100110111
Subkey 7  : 11101001110110010000100101111010011010111010110010001010
Subkey 8  : 01100010011011110110100001011001010001010011011101010001
Subkey 9  : 11011001000010010111101001101011101011001000101011101001
Subkey 10 : 01101111011010000101100101000101001101110101000101100010
Subkey 11 : 00001001011110100110101110101100100010101110100111011001
Subkey 12 : 01101000010110010100010100110111010100010110001001101111
Subkey 13 : 01111010011010111010110010001010111010011101100100001001
Subkey 14 : 01011001010001010011011101010001011000100110111101101000
Subkey 15 : 01101011101011001000101011101001110110010000100101111010
Subkey 16 : 01000101001101110101000101100010011011110110100001011001

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : û±zþò¤89É\?5%Õä«åMø+?µÌ"??q	Ç¦paI??ò(VmÉóÌæffuÛ?¢æÜ ?üWx?ùz?!!#yÇ

Data padded with spaces : û±zþò¤89É\?5%Õä«åMø+?µÌ"??q	Ç¦paI??ò(VmÉóÌæffuÛ?¢æÜ ?üWx?ùz?!!#yÇ[Padded with '0' spaces]

Data in ASCII           : 251,177,122,26,254,242,164,56,57,201,92,133,53,37,213,228,171,127,229,77,248,31,43,150,181,204,34,135,157,113,9,199,166,112,97,73,148,128,23,242,40,86,109,201,243,204,230,102,102,117,219,63,162,230,18,220,32,147,252,87,120,63,249,122,25,129,25,33,33,35,121,199,

Data in Binary          : 11111011,10110001,01111010,00011010,11111110,11110010,10100100,00111000,00111001,11001001,01011100,10000101,00110101,00100101,11010101,11100100,10101011,01111111,11100101,01001101,11111000,00011111,00101011,10010110,10110101,11001100,00100010,10000111,10011101,01110001,00001001,11000111,10100110,01110000,01100001,01001001,10010100,10000000,00010111,11110010,00101000,01010110,01101101,11001001,11110011,11001100,11100110,01100110,01100110,01110101,11011011,00111111,10100010,11100110,00010010,11011100,00100000,10010011,11111100,01010111,01111000,00111111,11111001,01111010,00011001,10000001,00011001,00100001,00100001,00100011,01111001,11000111,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101010001010001010101010100110001100100010000100110011101101001)

Ciphertext Block 1:                                      1111101110110001011110100001101011111110111100101010010000111000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011101100010111101000011010

       - Right 32 Bits:            11111110111100101010010000111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       11111110111100101010010000111000
          - S-Box Result:     10111100101111100100011100010010   [per every group of 4-bits]
          - Split Into Two:   1011110010111110 [L] 0100011100010010 [R]
          - Swap Halves:      01000111000100101011110010111110
          - Bit Inversion:    10111000111011010100001101000001
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     10100110101101000111110101000111

          - FUNCTION OUTPUT:  10100110101101000111110101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011101100010111101000011010

       - FUNCTION OUTPUT:          10100110101101000111110101000111

       - Left XOR FUNCTION OUTPUT: 01011101000001010000011101011101

       - Next Round Left 32 Bits:  11111110111100101010010000111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101000001010000011101011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110111100101010010000111000

       - Right 32 Bits:            01011101000001010000011101011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       01011101000001010000011101011101
          - S-Box Result:     10010110111110011111110110010110   [per every group of 4-bits]
          - Split Into Two:   1001011011111001 [L] 1111110110010110 [R]
          - Swap Halves:      11111101100101101001011011111001
          - Bit Inversion:    00000010011010010110100100000110
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     10100101010001001011000100010011

          - FUNCTION OUTPUT:  10100101010001001011000100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110111100101010010000111000

       - FUNCTION OUTPUT:          10100101010001001011000100010011

       - Left XOR FUNCTION OUTPUT: 01011011101101100001010100101011

       - Next Round Left 32 Bits:  01011101000001010000011101011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011101101100001010100101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101000001010000011101011101

       - Right 32 Bits:            01011011101101100001010100101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       01011011101101100001010100101011
          - S-Box Result:     10011000100000001010100111101000   [per every group of 4-bits]
          - Split Into Two:   1001100010000000 [L] 1010100111101000 [R]
          - Swap Halves:      10101001111010001001100010000000
          - Bit Inversion:    01010110000101110110011101111111
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     10010100100011010001000110101011

          - FUNCTION OUTPUT:  10010100100011010001000110101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101000001010000011101011101

       - FUNCTION OUTPUT:          10010100100011010001000110101011

       - Left XOR FUNCTION OUTPUT: 11001001100010000001011011110110

       - Next Round Left 32 Bits:  01011011101101100001010100101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001100010000001011011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011101101100001010100101011

       - Right 32 Bits:            11001001100010000001011011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       11001001100010000001011011110110
          - S-Box Result:     01010011001000101010000010110000   [per every group of 4-bits]
          - Split Into Two:   0101001100100010 [L] 1010000010110000 [R]
          - Swap Halves:      10100000101100000101001100100010
          - Bit Inversion:    01011111010011111010110011011101
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     10111010111010110001011111001011

          - FUNCTION OUTPUT:  10111010111010110001011111001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011101101100001010100101011

       - FUNCTION OUTPUT:          10111010111010110001011111001011

       - Left XOR FUNCTION OUTPUT: 11100001010111010000001011100000

       - Next Round Left 32 Bits:  11001001100010000001011011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001010111010000001011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001100010000001011011110110

       - Right 32 Bits:            11100001010111010000001011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       11100001010111010000001011100000
          - S-Box Result:     11001010100101101111111011001111   [per every group of 4-bits]
          - Split Into Two:   1100101010010110 [L] 1111111011001111 [R]
          - Swap Halves:      11111110110011111100101010010110
          - Bit Inversion:    00000001001100000011010101101001
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     10001000011100110110111111100110

          - FUNCTION OUTPUT:  10001000011100110110111111100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001100010000001011011110110

       - FUNCTION OUTPUT:          10001000011100110110111111100110

       - Left XOR FUNCTION OUTPUT: 01000001111110110111100100010000

       - Next Round Left 32 Bits:  11100001010111010000001011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001111110110111100100010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001010111010000001011100000

       - Right 32 Bits:            01000001111110110111100100010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       01000001111110110111100100010000
          - S-Box Result:     01111010101110001101001110101111   [per every group of 4-bits]
          - Split Into Two:   0111101010111000 [L] 1101001110101111 [R]
          - Swap Halves:      11010011101011110111101010111000
          - Bit Inversion:    00101100010100001000010101000111
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     10100001101101010000001001110001

          - FUNCTION OUTPUT:  10100001101101010000001001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001010111010000001011100000

       - FUNCTION OUTPUT:          10100001101101010000001001110001

       - Left XOR FUNCTION OUTPUT: 01000000111010000000000010010001

       - Next Round Left 32 Bits:  01000001111110110111100100010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000111010000000000010010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001111110110111100100010000

       - Right 32 Bits:            01000000111010000000000010010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       01000000111010000000000010010001
          - S-Box Result:     01111111110000101111111100111010   [per every group of 4-bits]
          - Split Into Two:   0111111111000010 [L] 1111111100111010 [R]
          - Swap Halves:      11111111001110100111111111000010
          - Bit Inversion:    00000000110001011000000000111101
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     10110101101111011110111000101100

          - FUNCTION OUTPUT:  10110101101111011110111000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001111110110111100100010000

       - FUNCTION OUTPUT:          10110101101111011110111000101100

       - Left XOR FUNCTION OUTPUT: 11110100010001101001011100111100

       - Next Round Left 32 Bits:  01000000111010000000000010010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100010001101001011100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000111010000000000010010001

       - Right 32 Bits:            11110100010001101001011100111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       11110100010001101001011100111100
          - S-Box Result:     10110111011100000011110100010101   [per every group of 4-bits]
          - Split Into Two:   1011011101110000 [L] 0011110100010101 [R]
          - Swap Halves:      00111101000101011011011101110000
          - Bit Inversion:    11000010111010100100100010001111
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     00000011000100111010100100101001

          - FUNCTION OUTPUT:  00000011000100111010100100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000111010000000000010010001

       - FUNCTION OUTPUT:          00000011000100111010100100101001

       - Left XOR FUNCTION OUTPUT: 01000011111110111010100110111000

       - Next Round Left 32 Bits:  11110100010001101001011100111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011111110111010100110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100010001101001011100111100

       - Right 32 Bits:            01000011111110111010100110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       01000011111110111010100110111000
          - S-Box Result:     01110001101110000100001110000010   [per every group of 4-bits]
          - Split Into Two:   0111000110111000 [L] 0100001110000010 [R]
          - Swap Halves:      01000011100000100111000110111000
          - Bit Inversion:    10111100011111011000111001000111
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     10011011100101111101011010010101

          - FUNCTION OUTPUT:  10011011100101111101011010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100010001101001011100111100

       - FUNCTION OUTPUT:          10011011100101111101011010010101

       - Left XOR FUNCTION OUTPUT: 01101111110100010100000110101001

       - Next Round Left 32 Bits:  01000011111110111010100110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111110100010100000110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011111110111010100110111000

       - Right 32 Bits:            01101111110100010100000110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       01101111110100010100000110101001
          - S-Box Result:     00001011011010100111101001000011   [per every group of 4-bits]
          - Split Into Two:   0000101101101010 [L] 0111101001000011 [R]
          - Swap Halves:      01111010010000110000101101101010
          - Bit Inversion:    10000101101111001111010010010101
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     00001100100101111100100111110000

          - FUNCTION OUTPUT:  00001100100101111100100111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011111110111010100110111000

       - FUNCTION OUTPUT:          00001100100101111100100111110000

       - Left XOR FUNCTION OUTPUT: 01001111011011000110000001001000

       - Next Round Left 32 Bits:  01101111110100010100000110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111011011000110000001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111110100010100000110101001

       - Right 32 Bits:            01001111011011000110000001001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       01001111011011000110000001001000
          - S-Box Result:     01111011000001010000111101110010   [per every group of 4-bits]
          - Split Into Two:   0111101100000101 [L] 0000111101110010 [R]
          - Swap Halves:      00001111011100100111101100000101
          - Bit Inversion:    11110000100011011000010011111010
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     10110100011001001001111010100001

          - FUNCTION OUTPUT:  10110100011001001001111010100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111110100010100000110101001

       - FUNCTION OUTPUT:          10110100011001001001111010100001

       - Left XOR FUNCTION OUTPUT: 11011011101101011101111100001000

       - Next Round Left 32 Bits:  01001111011011000110000001001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011101101011101111100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111011011000110000001001000

       - Right 32 Bits:            11011011101101011101111100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       11011011101101011101111100001000
          - S-Box Result:     01101000100010010110101111110010   [per every group of 4-bits]
          - Split Into Two:   0110100010001001 [L] 0110101111110010 [R]
          - Swap Halves:      01101011111100100110100010001001
          - Bit Inversion:    10010100000011011001011101110110
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     00110001011111011110000111001010

          - FUNCTION OUTPUT:  00110001011111011110000111001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111011011000110000001001000

       - FUNCTION OUTPUT:          00110001011111011110000111001010

       - Left XOR FUNCTION OUTPUT: 01111110000100011000000110000010

       - Next Round Left 32 Bits:  11011011101101011101111100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110000100011000000110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011101101011101111100001000

       - Right 32 Bits:            01111110000100011000000110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       01111110000100011000000110000010
          - S-Box Result:     11011100101010100010101000101110   [per every group of 4-bits]
          - Split Into Two:   1101110010101010 [L] 0010101000101110 [R]
          - Swap Halves:      00101010001011101101110010101010
          - Bit Inversion:    11010101110100010010001101010101
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     10101101000110000101000101001111

          - FUNCTION OUTPUT:  10101101000110000101000101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011101101011101111100001000

       - FUNCTION OUTPUT:          10101101000110000101000101001111

       - Left XOR FUNCTION OUTPUT: 01110110101011011000111001000111

       - Next Round Left 32 Bits:  01111110000100011000000110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110101011011000111001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110000100011000000110000010

       - Right 32 Bits:            01110110101011011000111001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       01110110101011011000111001000111
          - S-Box Result:     11010000010001100010110001111101   [per every group of 4-bits]
          - Split Into Two:   1101000001000110 [L] 0010110001111101 [R]
          - Swap Halves:      00101100011111011101000001000110
          - Bit Inversion:    11010011100000100010111110111001
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     01000010011011000110010100111110

          - FUNCTION OUTPUT:  01000010011011000110010100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110000100011000000110000010

       - FUNCTION OUTPUT:          01000010011011000110010100111110

       - Left XOR FUNCTION OUTPUT: 00111100011111011110010010111100

       - Next Round Left 32 Bits:  01110110101011011000111001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100011111011110010010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110101011011000111001000111

       - Right 32 Bits:            00111100011111011110010010111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       00111100011111011110010010111100
          - S-Box Result:     00010101110101101100011110000101   [per every group of 4-bits]
          - Split Into Two:   0001010111010110 [L] 1100011110000101 [R]
          - Swap Halves:      11000111100001010001010111010110
          - Bit Inversion:    00111000011110101110101000101001
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00100110001000111101010000101111

          - FUNCTION OUTPUT:  00100110001000111101010000101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110101011011000111001000111

       - FUNCTION OUTPUT:          00100110001000111101010000101111

       - Left XOR FUNCTION OUTPUT: 01010000100011100101101001101000

       - Next Round Left 32 Bits:  00111100011111011110010010111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000100011100101101001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100011111011110010010111100

       - Right 32 Bits:            01010000100011100101101001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       01010000100011100101101001101000
          - S-Box Result:     10011111001011001001010000000010   [per every group of 4-bits]
          - Split Into Two:   1001111100101100 [L] 1001010000000010 [R]
          - Swap Halves:      10010100000000101001111100101100
          - Bit Inversion:    01101011111111010110000011010011
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     11001100110100001011100011000110

          - FUNCTION OUTPUT:  11001100110100001011100011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100011111011110010010111100

       - FUNCTION OUTPUT:          11001100110100001011100011000110

       - Left XOR FUNCTION OUTPUT: 11110000101011010101110001111010

       - Next Round Left 32 Bits:  01010000100011100101101001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000101011010101110001111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111000010101101010111000111101001010000100011100101101001101000

 > Decrypted Block:     1111000010101101010111000111101001010000100011100101101001101000


!!!CBC: Previous Ciphertext:                             0101010001010001010101010100110001100100010000100110011101101001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1010010011111100000010010011011000110100110011000011110100000001

 > Final Processed Block:                                1010010011111100000010010011011000110100110011000011110100000001



Ciphertext Block 2:                                      0011100111001001010111001000010100110101001001011101010111100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001110010010101110010000101

       - Right 32 Bits:            00110101001001011101010111100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       00110101001001011101010111100100
          - S-Box Result:     00011001111010010110100111000111   [per every group of 4-bits]
          - Split Into Two:   0001100111101001 [L] 0110100111000111 [R]
          - Swap Halves:      01101001110001110001100111101001
          - Bit Inversion:    10010110001110001110011000010110
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     10001000011000011101100000010000

          - FUNCTION OUTPUT:  10001000011000011101100000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001110010010101110010000101

       - FUNCTION OUTPUT:          10001000011000011101100000010000

       - Left XOR FUNCTION OUTPUT: 10110001101010001000010010010101

       - Next Round Left 32 Bits:  00110101001001011101010111100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001101010001000010010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101001001011101010111100100

       - Right 32 Bits:            10110001101010001000010010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       10110001101010001000010010010101
          - S-Box Result:     10001010010000100010011100111001   [per every group of 4-bits]
          - Split Into Two:   1000101001000010 [L] 0010011100111001 [R]
          - Swap Halves:      00100111001110011000101001000010
          - Bit Inversion:    11011000110001100111010110111101
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     01111111111010111010110110101000

          - FUNCTION OUTPUT:  01111111111010111010110110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101001001011101010111100100

       - FUNCTION OUTPUT:          01111111111010111010110110101000

       - Left XOR FUNCTION OUTPUT: 01001010110011100111100001001100

       - Next Round Left 32 Bits:  10110001101010001000010010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010110011100111100001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001101010001000010010010101

       - Right 32 Bits:            01001010110011100111100001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       01001010110011100111100001001100
          - S-Box Result:     01110100010111001101001001110101   [per every group of 4-bits]
          - Split Into Two:   0111010001011100 [L] 1101001001110101 [R]
          - Swap Halves:      11010010011101010111010001011100
          - Bit Inversion:    00101101100010101000101110100011
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     11101111000100001111110101110111

          - FUNCTION OUTPUT:  11101111000100001111110101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001101010001000010010010101

       - FUNCTION OUTPUT:          11101111000100001111110101110111

       - Left XOR FUNCTION OUTPUT: 01011110101110000111100111100010

       - Next Round Left 32 Bits:  01001010110011100111100001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110101110000111100111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010110011100111100001001100

       - Right 32 Bits:            01011110101110000111100111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       01011110101110000111100111100010
          - S-Box Result:     10011100100000101101001111001110   [per every group of 4-bits]
          - Split Into Two:   1001110010000010 [L] 1101001111001110 [R]
          - Swap Halves:      11010011110011101001110010000010
          - Bit Inversion:    00101100001100010110001101111101
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     11001001100101011101100001101011

          - FUNCTION OUTPUT:  11001001100101011101100001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010110011100111100001001100

       - FUNCTION OUTPUT:          11001001100101011101100001101011

       - Left XOR FUNCTION OUTPUT: 10000011010110111010000000100111

       - Next Round Left 32 Bits:  01011110101110000111100111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011010110111010000000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110101110000111100111100010

       - Right 32 Bits:            10000011010110111010000000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       10000011010110111010000000100111
          - S-Box Result:     00100001100110000100111111101101   [per every group of 4-bits]
          - Split Into Two:   0010000110011000 [L] 0100111111101101 [R]
          - Swap Halves:      01001111111011010010000110011000
          - Bit Inversion:    10110000000100101101111001100111
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     00111001010100011000010011101000

          - FUNCTION OUTPUT:  00111001010100011000010011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110101110000111100111100010

       - FUNCTION OUTPUT:          00111001010100011000010011101000

       - Left XOR FUNCTION OUTPUT: 01100111111010011111110100001010

       - Next Round Left 32 Bits:  10000011010110111010000000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111111010011111110100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011010110111010000000100111

       - Right 32 Bits:            01100111111010011111110100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       01100111111010011111110100001010
          - S-Box Result:     00001101110000111011011011110100   [per every group of 4-bits]
          - Split Into Two:   0000110111000011 [L] 1011011011110100 [R]
          - Swap Halves:      10110110111101000000110111000011
          - Bit Inversion:    01001001000010111111001000111100
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     11000100111011100111010100001010

          - FUNCTION OUTPUT:  11000100111011100111010100001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011010110111010000000100111

       - FUNCTION OUTPUT:          11000100111011100111010100001010

       - Left XOR FUNCTION OUTPUT: 01000111101101011101010100101101

       - Next Round Left 32 Bits:  01100111111010011111110100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111101101011101010100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111111010011111110100001010

       - Right 32 Bits:            01000111101101011101010100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       01000111101101011101010100101101
          - S-Box Result:     01111101100010010110100111100110   [per every group of 4-bits]
          - Split Into Two:   0111110110001001 [L] 0110100111100110 [R]
          - Swap Halves:      01101001111001100111110110001001
          - Bit Inversion:    10010110000110011000001001110110
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     00100011011000011110110001100111

          - FUNCTION OUTPUT:  00100011011000011110110001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111111010011111110100001010

       - FUNCTION OUTPUT:          00100011011000011110110001100111

       - Left XOR FUNCTION OUTPUT: 01000100100010000001000101101101

       - Next Round Left 32 Bits:  01000111101101011101010100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100100010000001000101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111101101011101010100101101

       - Right 32 Bits:            01000100100010000001000101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       01000100100010000001000101101101
          - S-Box Result:     01110111001000101010101000000110   [per every group of 4-bits]
          - Split Into Two:   0111011100100010 [L] 1010101000000110 [R]
          - Swap Halves:      10101010000001100111011100100010
          - Bit Inversion:    01010101111110011000100011011101
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     10010100000000000110100101111011

          - FUNCTION OUTPUT:  10010100000000000110100101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111101101011101010100101101

       - FUNCTION OUTPUT:          10010100000000000110100101111011

       - Left XOR FUNCTION OUTPUT: 11010011101101011011110001010110

       - Next Round Left 32 Bits:  01000100100010000001000101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011101101011011110001010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100100010000001000101101101

       - Right 32 Bits:            11010011101101011011110001010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       11010011101101011011110001010110
          - S-Box Result:     01100001100010011000010110010000   [per every group of 4-bits]
          - Split Into Two:   0110000110001001 [L] 1000010110010000 [R]
          - Swap Halves:      10000101100100000110000110001001
          - Bit Inversion:    01111010011011111001111001110110
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     01011101100001011100011010100100

          - FUNCTION OUTPUT:  01011101100001011100011010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100100010000001000101101101

       - FUNCTION OUTPUT:          01011101100001011100011010100100

       - Left XOR FUNCTION OUTPUT: 00011001000011011101011111001001

       - Next Round Left 32 Bits:  11010011101101011011110001010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001000011011101011111001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011101101011011110001010110

       - Right 32 Bits:            00011001000011011101011111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       00011001000011011101011111001001
          - S-Box Result:     10100011111101100110110101010011   [per every group of 4-bits]
          - Split Into Two:   1010001111110110 [L] 0110110101010011 [R]
          - Swap Halves:      01101101010100111010001111110110
          - Bit Inversion:    10010010101011000101110000001001
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     00011011100001110110000101101100

          - FUNCTION OUTPUT:  00011011100001110110000101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011101101011011110001010110

       - FUNCTION OUTPUT:          00011011100001110110000101101100

       - Left XOR FUNCTION OUTPUT: 11001000001100101101110100111010

       - Next Round Left 32 Bits:  00011001000011011101011111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000001100101101110100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001000011011101011111001001

       - Right 32 Bits:            11001000001100101101110100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       11001000001100101101110100111010
          - S-Box Result:     01010010000111100110011000010100   [per every group of 4-bits]
          - Split Into Two:   0101001000011110 [L] 0110011000010100 [R]
          - Swap Halves:      01100110000101000101001000011110
          - Bit Inversion:    10011001111010111010110111100001
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     11011101000000101011011110111010

          - FUNCTION OUTPUT:  11011101000000101011011110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001000011011101011111001001

       - FUNCTION OUTPUT:          11011101000000101011011110111010

       - Left XOR FUNCTION OUTPUT: 11000100000011110110000001110011

       - Next Round Left 32 Bits:  11001000001100101101110100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100000011110110000001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000001100101101110100111010

       - Right 32 Bits:            11000100000011110110000001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       11000100000011110110000001110011
          - S-Box Result:     01010111111110110000111111010001   [per every group of 4-bits]
          - Split Into Two:   0101011111111011 [L] 0000111111010001 [R]
          - Swap Halves:      00001111110100010101011111111011
          - Bit Inversion:    11110000001011101010100000000100
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     01010101010111101101111010111000

          - FUNCTION OUTPUT:  01010101010111101101111010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000001100101101110100111010

       - FUNCTION OUTPUT:          01010101010111101101111010111000

       - Left XOR FUNCTION OUTPUT: 10011101011011000000001110000010

       - Next Round Left 32 Bits:  11000100000011110110000001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101011011000000001110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100000011110110000001110011

       - Right 32 Bits:            10011101011011000000001110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       10011101011011000000001110000010
          - S-Box Result:     00110110000001011111000100101110   [per every group of 4-bits]
          - Split Into Two:   0011011000000101 [L] 1111000100101110 [R]
          - Swap Halves:      11110001001011100011011000000101
          - Bit Inversion:    00001110110100011100100111111010
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     01110110000110001011101111100000

          - FUNCTION OUTPUT:  01110110000110001011101111100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100000011110110000001110011

       - FUNCTION OUTPUT:          01110110000110001011101111100000

       - Left XOR FUNCTION OUTPUT: 10110010000101111101101110010011

       - Next Round Left 32 Bits:  10011101011011000000001110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010000101111101101110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101011011000000001110000010

       - Right 32 Bits:            10110010000101111101101110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       10110010000101111101101110010011
          - S-Box Result:     10001110101011010110100000110001   [per every group of 4-bits]
          - Split Into Two:   1000111010101101 [L] 0110100000110001 [R]
          - Swap Halves:      01101000001100011000111010101101
          - Bit Inversion:    10010111110011100111000101010010
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     00000110001000000011101111010101

          - FUNCTION OUTPUT:  00000110001000000011101111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101011011000000001110000010

       - FUNCTION OUTPUT:          00000110001000000011101111010101

       - Left XOR FUNCTION OUTPUT: 10011011010011000011100001010111

       - Next Round Left 32 Bits:  10110010000101111101101110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011010011000011100001010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010000101111101101110010011

       - Right 32 Bits:            10011011010011000011100001010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       10011011010011000011100001010111
          - S-Box Result:     00111000011101010001001010011101   [per every group of 4-bits]
          - Split Into Two:   0011100001110101 [L] 0001001010011101 [R]
          - Swap Halves:      00010010100111010011100001110101
          - Bit Inversion:    11101101011000101100011110001010
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     11110011001110111111100110001100

          - FUNCTION OUTPUT:  11110011001110111111100110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010000101111101101110010011

       - FUNCTION OUTPUT:          11110011001110111111100110001100

       - Left XOR FUNCTION OUTPUT: 01000001001011000010001000011111

       - Next Round Left 32 Bits:  10011011010011000011100001010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001001011000010001000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011010011000011100001010111

       - Right 32 Bits:            01000001001011000010001000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       01000001001011000010001000011111
          - S-Box Result:     01111010111001011110111010101011   [per every group of 4-bits]
          - Split Into Two:   0111101011100101 [L] 1110111010101011 [R]
          - Swap Halves:      11101110101010110111101011100101
          - Bit Inversion:    00010001010101001000010100011010
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     10110110011110010101110100001111

          - FUNCTION OUTPUT:  10110110011110010101110100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011010011000011100001010111

       - FUNCTION OUTPUT:          10110110011110010101110100001111

       - Left XOR FUNCTION OUTPUT: 00101101001101010110010101011000

       - Next Round Left 32 Bits:  01000001001011000010001000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101001101010110010101011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010110100110101011001010101100001000001001011000010001000011111

 > Decrypted Block:     0010110100110101011001010101100001000001001011000010001000011111


!!!CBC: Previous Ciphertext:                             1111101110110001011110100001101011111110111100101010010000111000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101011010000100000111110100001010111111110111101000011000100111

 > Final Processed Block:                                1101011010000100000111110100001010111111110111101000011000100111



Ciphertext Block 3:                                      1010101101111111111001010100110111111000000111110010101110010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011011111111110010101001101

       - Right 32 Bits:            11111000000111110010101110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       11111000000111110010101110010110
          - S-Box Result:     10110010101010111110100000110000   [per every group of 4-bits]
          - Split Into Two:   1011001010101011 [L] 1110100000110000 [R]
          - Swap Halves:      11101000001100001011001010101011
          - Bit Inversion:    00010111110011110100110101010100
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00001001100101100111001101010010

          - FUNCTION OUTPUT:  00001001100101100111001101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011011111111110010101001101

       - FUNCTION OUTPUT:          00001001100101100111001101010010

       - Left XOR FUNCTION OUTPUT: 10100010111010011001011000011111

       - Next Round Left 32 Bits:  11111000000111110010101110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010111010011001011000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000000111110010101110010110

       - Right 32 Bits:            10100010111010011001011000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       10100010111010011001011000011111
          - S-Box Result:     01001110110000110011000010101011   [per every group of 4-bits]
          - Split Into Two:   0100111011000011 [L] 0011000010101011 [R]
          - Swap Halves:      00110000101010110100111011000011
          - Bit Inversion:    11001111010101001011000100111100
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     01101000011110010110100100101001

          - FUNCTION OUTPUT:  01101000011110010110100100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000000111110010101110010110

       - FUNCTION OUTPUT:          01101000011110010110100100101001

       - Left XOR FUNCTION OUTPUT: 10010000011001100100001010111111

       - Next Round Left 32 Bits:  10100010111010011001011000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000011001100100001010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010111010011001011000011111

       - Right 32 Bits:            10010000011001100100001010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       10010000011001100100001010111111
          - S-Box Result:     00111111000000000111111010001011   [per every group of 4-bits]
          - Split Into Two:   0011111100000000 [L] 0111111010001011 [R]
          - Swap Halves:      01111110100010110011111100000000
          - Bit Inversion:    10000001011101001100000011111111
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     01000011111011101011011000101011

          - FUNCTION OUTPUT:  01000011111011101011011000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010111010011001011000011111

       - FUNCTION OUTPUT:          01000011111011101011011000101011

       - Left XOR FUNCTION OUTPUT: 11100001000001110010000000110100

       - Next Round Left 32 Bits:  10010000011001100100001010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001000001110010000000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000011001100100001010111111

       - Right 32 Bits:            11100001000001110010000000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       11100001000001110010000000110100
          - S-Box Result:     11001010111111011110111100010111   [per every group of 4-bits]
          - Split Into Two:   1100101011111101 [L] 1110111100010111 [R]
          - Swap Halves:      11101111000101111100101011111101
          - Bit Inversion:    00010000111010000011010100000010
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     11110101010011001000111000010100

          - FUNCTION OUTPUT:  11110101010011001000111000010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000011001100100001010111111

       - FUNCTION OUTPUT:          11110101010011001000111000010100

       - Left XOR FUNCTION OUTPUT: 01100101001010101100110010101011

       - Next Round Left 32 Bits:  11100001000001110010000000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101001010101100110010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001000001110010000000110100

       - Right 32 Bits:            01100101001010101100110010101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       01100101001010101100110010101011
          - S-Box Result:     00001001111001000101010101001000   [per every group of 4-bits]
          - Split Into Two:   0000100111100100 [L] 0101010101001000 [R]
          - Swap Halves:      01010101010010000000100111100100
          - Bit Inversion:    10101010101101111111011000011011
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     00100011111101001010110010010100

          - FUNCTION OUTPUT:  00100011111101001010110010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001000001110010000000110100

       - FUNCTION OUTPUT:          00100011111101001010110010010100

       - Left XOR FUNCTION OUTPUT: 11000010111100111000110010100000

       - Next Round Left 32 Bits:  01100101001010101100110010101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010111100111000110010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101001010101100110010101011

       - Right 32 Bits:            11000010111100111000110010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       11000010111100111000110010100000
          - S-Box Result:     01011110101100010010010101001111   [per every group of 4-bits]
          - Split Into Two:   0101111010110001 [L] 0010010101001111 [R]
          - Swap Halves:      00100101010011110101111010110001
          - Bit Inversion:    11011010101100001010000101001110
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     01010111010101010010011001111000

          - FUNCTION OUTPUT:  01010111010101010010011001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101001010101100110010101011

       - FUNCTION OUTPUT:          01010111010101010010011001111000

       - Left XOR FUNCTION OUTPUT: 00110010011111111110101011010011

       - Next Round Left 32 Bits:  11000010111100111000110010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010011111111110101011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010111100111000110010100000

       - Right 32 Bits:            00110010011111111110101011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       00110010011111111110101011010011
          - S-Box Result:     00011110110110111100010001100001   [per every group of 4-bits]
          - Split Into Two:   0001111011011011 [L] 1100010001100001 [R]
          - Swap Halves:      11000100011000010001111011011011
          - Bit Inversion:    00111011100111101110000100100100
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     10001110111001101000111100110101

          - FUNCTION OUTPUT:  10001110111001101000111100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010111100111000110010100000

       - FUNCTION OUTPUT:          10001110111001101000111100110101

       - Left XOR FUNCTION OUTPUT: 01001100000101010000001110010101

       - Next Round Left 32 Bits:  00110010011111111110101011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100000101010000001110010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010011111111110101011010011

       - Right 32 Bits:            01001100000101010000001110010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       01001100000101010000001110010101
          - S-Box Result:     01110101101010011111000100111001   [per every group of 4-bits]
          - Split Into Two:   0111010110101001 [L] 1111000100111001 [R]
          - Swap Halves:      11110001001110010111010110101001
          - Bit Inversion:    00001110110001101000101001010110
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     11001111001111110110101111110000

          - FUNCTION OUTPUT:  11001111001111110110101111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010011111111110101011010011

       - FUNCTION OUTPUT:          11001111001111110110101111110000

       - Left XOR FUNCTION OUTPUT: 11111101010000001000000100100011

       - Next Round Left 32 Bits:  01001100000101010000001110010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101010000001000000100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100000101010000001110010101

       - Right 32 Bits:            11111101010000001000000100100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       11111101010000001000000100100011
          - S-Box Result:     10110110011111110010101011100001   [per every group of 4-bits]
          - Split Into Two:   1011011001111111 [L] 0010101011100001 [R]
          - Swap Halves:      00101010111000011011011001111111
          - Bit Inversion:    11010101000111100100100110000000
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     11110010111101000001000101010010

          - FUNCTION OUTPUT:  11110010111101000001000101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100000101010000001110010101

       - FUNCTION OUTPUT:          11110010111101000001000101010010

       - Left XOR FUNCTION OUTPUT: 10111110111000010001001011000111

       - Next Round Left 32 Bits:  11111101010000001000000100100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110111000010001001011000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101010000001000000100100011

       - Right 32 Bits:            10111110111000010001001011000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       10111110111000010001001011000111
          - S-Box Result:     10001100110010101010111001011101   [per every group of 4-bits]
          - Split Into Two:   1000110011001010 [L] 1010111001011101 [R]
          - Swap Halves:      10101110010111011000110011001010
          - Bit Inversion:    01010001101000100111001100110101
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     11011000100010010100111001010000

          - FUNCTION OUTPUT:  11011000100010010100111001010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101010000001000000100100011

       - FUNCTION OUTPUT:          11011000100010010100111001010000

       - Left XOR FUNCTION OUTPUT: 00100101110010011100111101110011

       - Next Round Left 32 Bits:  10111110111000010001001011000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101110010011100111101110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110111000010001001011000111

       - Right 32 Bits:            00100101110010011100111101110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       00100101110010011100111101110011
          - S-Box Result:     11101001010100110101101111010001   [per every group of 4-bits]
          - Split Into Two:   1110100101010011 [L] 0101101111010001 [R]
          - Swap Halves:      01011011110100011110100101010011
          - Bit Inversion:    10100100001011100001011010101100
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     11100000110001110000110011110111

          - FUNCTION OUTPUT:  11100000110001110000110011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110111000010001001011000111

       - FUNCTION OUTPUT:          11100000110001110000110011110111

       - Left XOR FUNCTION OUTPUT: 01011110001001100001111000110000

       - Next Round Left 32 Bits:  00100101110010011100111101110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110001001100001111000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101110010011100111101110011

       - Right 32 Bits:            01011110001001100001111000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       01011110001001100001111000110000
          - S-Box Result:     10011100111000001010110000011111   [per every group of 4-bits]
          - Split Into Two:   1001110011100000 [L] 1010110000011111 [R]
          - Swap Halves:      10101100000111111001110011100000
          - Bit Inversion:    01010011111000000110001100011111
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     11110110100100000001010110100011

          - FUNCTION OUTPUT:  11110110100100000001010110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101110010011100111101110011

       - FUNCTION OUTPUT:          11110110100100000001010110100011

       - Left XOR FUNCTION OUTPUT: 11010011010110011101101011010000

       - Next Round Left 32 Bits:  01011110001001100001111000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011010110011101101011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110001001100001111000110000

       - Right 32 Bits:            11010011010110011101101011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       11010011010110011101101011010000
          - S-Box Result:     01100001100100110110010001101111   [per every group of 4-bits]
          - Split Into Two:   0110000110010011 [L] 0110010001101111 [R]
          - Swap Halves:      01100100011011110110000110010011
          - Bit Inversion:    10011011100100001001111001101100
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     11100011010110011110110001110110

          - FUNCTION OUTPUT:  11100011010110011110110001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110001001100001111000110000

       - FUNCTION OUTPUT:          11100011010110011110110001110110

       - Left XOR FUNCTION OUTPUT: 10111101011111111111001001000110

       - Next Round Left 32 Bits:  11010011010110011101101011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101011111111111001001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011010110011101101011010000

       - Right 32 Bits:            10111101011111111111001001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       10111101011111111111001001000110
          - S-Box Result:     10000110110110111011111001110000   [per every group of 4-bits]
          - Split Into Two:   1000011011011011 [L] 1011111001110000 [R]
          - Swap Halves:      10111110011100001000011011011011
          - Bit Inversion:    01000001100011110111100100100100
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     11010000011000010011001110100011

          - FUNCTION OUTPUT:  11010000011000010011001110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011010110011101101011010000

       - FUNCTION OUTPUT:          11010000011000010011001110100011

       - Left XOR FUNCTION OUTPUT: 00000011001110001110100101110011

       - Next Round Left 32 Bits:  10111101011111111111001001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011001110001110100101110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101011111111111001001000110

       - Right 32 Bits:            00000011001110001110100101110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       00000011001110001110100101110011
          - S-Box Result:     11110001000100101100001111010001   [per every group of 4-bits]
          - Split Into Two:   1111000100010010 [L] 1100001111010001 [R]
          - Swap Halves:      11000011110100011111000100010010
          - Bit Inversion:    00111100001011100000111011101101
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00100010011101110011000011101011

          - FUNCTION OUTPUT:  00100010011101110011000011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101011111111111001001000110

       - FUNCTION OUTPUT:          00100010011101110011000011101011

       - Left XOR FUNCTION OUTPUT: 10011111000010001100001010101101

       - Next Round Left 32 Bits:  00000011001110001110100101110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111000010001100001010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011001110001110100101110011

       - Right 32 Bits:            10011111000010001100001010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       10011111000010001100001010101101
          - S-Box Result:     00111011111100100101111001000110   [per every group of 4-bits]
          - Split Into Two:   0011101111110010 [L] 0101111001000110 [R]
          - Swap Halves:      01011110010001100011101111110010
          - Bit Inversion:    10100001101110011100010000001101
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     00000110100101000001110000011000

          - FUNCTION OUTPUT:  00000110100101000001110000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011001110001110100101110011

       - FUNCTION OUTPUT:          00000110100101000001110000011000

       - Left XOR FUNCTION OUTPUT: 00000101101011001111010101101011

       - Next Round Left 32 Bits:  10011111000010001100001010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101101011001111010101101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000010110101100111101010110101110011111000010001100001010101101

 > Decrypted Block:     0000010110101100111101010110101110011111000010001100001010101101


!!!CBC: Previous Ciphertext:                             0011100111001001010111001000010100110101001001011101010111100100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011110001100101101010011110111010101010001011010001011101001001

 > Final Processed Block:                                0011110001100101101010011110111010101010001011010001011101001001



Ciphertext Block 4:                                      1011010111001100001000101000011110011101011100010000100111000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101110011000010001010000111

       - Right 32 Bits:            10011101011100010000100111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       10011101011100010000100111000111
          - S-Box Result:     00110110110110101111001101011101   [per every group of 4-bits]
          - Split Into Two:   0011011011011010 [L] 1111001101011101 [R]
          - Swap Halves:      11110011010111010011011011011010
          - Bit Inversion:    00001100101000101100100100100101
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00010010111110111111011100100011

          - FUNCTION OUTPUT:  00010010111110111111011100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101110011000010001010000111

       - FUNCTION OUTPUT:          00010010111110111111011100100011

       - Left XOR FUNCTION OUTPUT: 10100111001101111101010110100100

       - Next Round Left 32 Bits:  10011101011100010000100111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111001101111101010110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101011100010000100111000111

       - Right 32 Bits:            10100111001101111101010110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       10100111001101111101010110100100
          - S-Box Result:     01001101000111010110100101000111   [per every group of 4-bits]
          - Split Into Two:   0100110100011101 [L] 0110100101000111 [R]
          - Swap Halves:      01101001010001110100110100011101
          - Bit Inversion:    10010110101110001011001011100010
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     00110001100101010110101011110111

          - FUNCTION OUTPUT:  00110001100101010110101011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101011100010000100111000111

       - FUNCTION OUTPUT:          00110001100101010110101011110111

       - Left XOR FUNCTION OUTPUT: 10101100111001000110001100110000

       - Next Round Left 32 Bits:  10100111001101111101010110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100111001000110001100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111001101111101010110100100

       - Right 32 Bits:            10101100111001000110001100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       10101100111001000110001100110000
          - S-Box Result:     01000101110001110000000100011111   [per every group of 4-bits]
          - Split Into Two:   0100010111000111 [L] 0000000100011111 [R]
          - Swap Halves:      00000001000111110100010111000111
          - Bit Inversion:    11111110111000001011101000111000
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     00111100011110101100110011101100

          - FUNCTION OUTPUT:  00111100011110101100110011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111001101111101010110100100

       - FUNCTION OUTPUT:          00111100011110101100110011101100

       - Left XOR FUNCTION OUTPUT: 10011011010011010001100101001000

       - Next Round Left 32 Bits:  10101100111001000110001100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011010011010001100101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100111001000110001100110000

       - Right 32 Bits:            10011011010011010001100101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       10011011010011010001100101001000
          - S-Box Result:     00111000011101101010001101110010   [per every group of 4-bits]
          - Split Into Two:   0011100001110110 [L] 1010001101110010 [R]
          - Swap Halves:      10100011011100100011100001110110
          - Bit Inversion:    01011100100011011100011110001001
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     10111001001010010111110010011111

          - FUNCTION OUTPUT:  10111001001010010111110010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100111001000110001100110000

       - FUNCTION OUTPUT:          10111001001010010111110010011111

       - Left XOR FUNCTION OUTPUT: 00010101110011010001111110101111

       - Next Round Left 32 Bits:  10011011010011010001100101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101110011010001111110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011010011010001100101001000

       - Right 32 Bits:            00010101110011010001111110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       00010101110011010001111110101111
          - S-Box Result:     10101001010101101010101101001011   [per every group of 4-bits]
          - Split Into Two:   1010100101010110 [L] 1010101101001011 [R]
          - Swap Halves:      10101011010010111010100101010110
          - Bit Inversion:    01010100101101000101011010101001
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     11011101111101110000110000100110

          - FUNCTION OUTPUT:  11011101111101110000110000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011010011010001100101001000

       - FUNCTION OUTPUT:          11011101111101110000110000100110

       - Left XOR FUNCTION OUTPUT: 01000110101110100001010101101110

       - Next Round Left 32 Bits:  00010101110011010001111110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110101110100001010101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101110011010001111110101111

       - Right 32 Bits:            01000110101110100001010101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       01000110101110100001010101101110
          - S-Box Result:     01110000100001001010100100001100   [per every group of 4-bits]
          - Split Into Two:   0111000010000100 [L] 1010100100001100 [R]
          - Swap Halves:      10101001000011000111000010000100
          - Bit Inversion:    01010110111100111000111101111011
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     11011011000101100000100001001101

          - FUNCTION OUTPUT:  11011011000101100000100001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101110011010001111110101111

       - FUNCTION OUTPUT:          11011011000101100000100001001101

       - Left XOR FUNCTION OUTPUT: 11001110110110110001011111100010

       - Next Round Left 32 Bits:  01000110101110100001010101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110110110110001011111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110101110100001010101101110

       - Right 32 Bits:            11001110110110110001011111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       11001110110110110001011111100010
          - S-Box Result:     01011100011010001010110111001110   [per every group of 4-bits]
          - Split Into Two:   0101110001101000 [L] 1010110111001110 [R]
          - Swap Halves:      10101101110011100101110001101000
          - Bit Inversion:    01010010001100011010001110010111
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     11100111010010011100110110000110

          - FUNCTION OUTPUT:  11100111010010011100110110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110101110100001010101101110

       - FUNCTION OUTPUT:          11100111010010011100110110000110

       - Left XOR FUNCTION OUTPUT: 10100001111100111101100011101000

       - Next Round Left 32 Bits:  11001110110110110001011111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001111100111101100011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110110110110001011111100010

       - Right 32 Bits:            10100001111100111101100011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       10100001111100111101100011101000
          - S-Box Result:     01001010101100010110001011000010   [per every group of 4-bits]
          - Split Into Two:   0100101010110001 [L] 0110001011000010 [R]
          - Swap Halves:      01100010110000100100101010110001
          - Bit Inversion:    10011101001111011011010101001110
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     01011100110001000101010011101000

          - FUNCTION OUTPUT:  01011100110001000101010011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110110110110001011111100010

       - FUNCTION OUTPUT:          01011100110001000101010011101000

       - Left XOR FUNCTION OUTPUT: 10010010000111110100001100001010

       - Next Round Left 32 Bits:  10100001111100111101100011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010000111110100001100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001111100111101100011101000

       - Right 32 Bits:            10010010000111110100001100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       10010010000111110100001100001010
          - S-Box Result:     00111110101010110111000111110100   [per every group of 4-bits]
          - Split Into Two:   0011111010101011 [L] 0111000111110100 [R]
          - Swap Halves:      01110001111101000011111010101011
          - Bit Inversion:    10001110000010111100000101010100
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     10101001111000011001100110000110

          - FUNCTION OUTPUT:  10101001111000011001100110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001111100111101100011101000

       - FUNCTION OUTPUT:          10101001111000011001100110000110

       - Left XOR FUNCTION OUTPUT: 00001000000100100100000101101110

       - Next Round Left 32 Bits:  10010010000111110100001100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000100100100000101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010000111110100001100001010

       - Right 32 Bits:            00001000000100100100000101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       00001000000100100100000101101110
          - S-Box Result:     11110010101011100111101000001100   [per every group of 4-bits]
          - Split Into Two:   1111001010101110 [L] 0111101000001100 [R]
          - Swap Halves:      01111010000011001111001010101110
          - Bit Inversion:    10000101111100110000110101010001
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     00001100110110000011000000110100

          - FUNCTION OUTPUT:  00001100110110000011000000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010000111110100001100001010

       - FUNCTION OUTPUT:          00001100110110000011000000110100

       - Left XOR FUNCTION OUTPUT: 10011110110001110111001100111110

       - Next Round Left 32 Bits:  00001000000100100100000101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110110001110111001100111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000100100100000101101110

       - Right 32 Bits:            10011110110001110111001100111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       10011110110001110111001100111110
          - S-Box Result:     00111100010111011101000100011100   [per every group of 4-bits]
          - Split Into Two:   0011110001011101 [L] 1101000100011100 [R]
          - Swap Halves:      11010001000111000011110001011101
          - Bit Inversion:    00101110111000111100001110100010
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     01101010000010101101100111111001

          - FUNCTION OUTPUT:  01101010000010101101100111111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000100100100000101101110

       - FUNCTION OUTPUT:          01101010000010101101100111111001

       - Left XOR FUNCTION OUTPUT: 01100010000110001001100010010111

       - Next Round Left 32 Bits:  10011110110001110111001100111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010000110001001100010010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110110001110111001100111110

       - Right 32 Bits:            01100010000110001001100010010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       01100010000110001001100010010111
          - S-Box Result:     00001110101000100011001000111101   [per every group of 4-bits]
          - Split Into Two:   0000111010100010 [L] 0011001000111101 [R]
          - Swap Halves:      00110010001111010000111010100010
          - Bit Inversion:    11001101110000101111000101011101
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     01101000101100101000011111100001

          - FUNCTION OUTPUT:  01101000101100101000011111100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110110001110111001100111110

       - FUNCTION OUTPUT:          01101000101100101000011111100001

       - Left XOR FUNCTION OUTPUT: 11110110011101011111010011011111

       - Next Round Left 32 Bits:  01100010000110001001100010010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110011101011111010011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010000110001001100010010111

       - Right 32 Bits:            11110110011101011111010011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       11110110011101011111010011011111
          - S-Box Result:     10110000110110011011011101101011   [per every group of 4-bits]
          - Split Into Two:   1011000011011001 [L] 1011011101101011 [R]
          - Swap Halves:      10110111011010111011000011011001
          - Bit Inversion:    01001000100101000100111100100110
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     00110000010111010011110100111100

          - FUNCTION OUTPUT:  00110000010111010011110100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010000110001001100010010111

       - FUNCTION OUTPUT:          00110000010111010011110100111100

       - Left XOR FUNCTION OUTPUT: 01010010010001011010010110101011

       - Next Round Left 32 Bits:  11110110011101011111010011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010010001011010010110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110011101011111010011011111

       - Right 32 Bits:            01010010010001011010010110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       01010010010001011010010110101011
          - S-Box Result:     10011110011110010100100101001000   [per every group of 4-bits]
          - Split Into Two:   1001111001111001 [L] 0100100101001000 [R]
          - Swap Halves:      01001001010010001001111001111001
          - Bit Inversion:    10110110101101110110000110000110
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     00100111010110010010101100000001

          - FUNCTION OUTPUT:  00100111010110010010101100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110011101011111010011011111

       - FUNCTION OUTPUT:          00100111010110010010101100000001

       - Left XOR FUNCTION OUTPUT: 11010001001011001101111111011110

       - Next Round Left 32 Bits:  01010010010001011010010110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001001011001101111111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010010001011010010110101011

       - Right 32 Bits:            11010001001011001101111111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       11010001001011001101111111011110
          - S-Box Result:     01101010111001010110101101101100   [per every group of 4-bits]
          - Split Into Two:   0110101011100101 [L] 0110101101101100 [R]
          - Swap Halves:      01101011011011000110101011100101
          - Bit Inversion:    10010100100100111001010100011010
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     10001010110010101010101100011100

          - FUNCTION OUTPUT:  10001010110010101010101100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010010001011010010110101011

       - FUNCTION OUTPUT:          10001010110010101010101100011100

       - Left XOR FUNCTION OUTPUT: 11011000100011110000111010110111

       - Next Round Left 32 Bits:  11010001001011001101111111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000100011110000111010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001001011001101111111011110

       - Right 32 Bits:            11011000100011110000111010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       11011000100011110000111010110111
          - S-Box Result:     01100010001010111111110010001101   [per every group of 4-bits]
          - Split Into Two:   0110001000101011 [L] 1111110010001101 [R]
          - Swap Halves:      11111100100011010110001000101011
          - Bit Inversion:    00000011011100101001110111010100
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     10100100010111110100010111000001

          - FUNCTION OUTPUT:  10100100010111110100010111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001001011001101111111011110

       - FUNCTION OUTPUT:          10100100010111110100010111000001

       - Left XOR FUNCTION OUTPUT: 01110101011100111001101000011111

       - Next Round Left 32 Bits:  11011000100011110000111010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101011100111001101000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111010101110011100110100001111111011000100011110000111010110111

 > Decrypted Block:     0111010101110011100110100001111111011000100011110000111010110111


!!!CBC: Previous Ciphertext:                             1010101101111111111001010100110111111000000111110010101110010110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101111000001100011111110101001000100000100100000010010100100001

 > Final Processed Block:                                1101111000001100011111110101001000100000100100000010010100100001



Ciphertext Block 5:                                      1010011001110000011000010100100110010100100000000001011111110010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110011100000110000101001001

       - Right 32 Bits:            10010100100000000001011111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       10010100100000000001011111110010
          - S-Box Result:     00110111001011111010110110111110   [per every group of 4-bits]
          - Split Into Two:   0011011100101111 [L] 1010110110111110 [R]
          - Swap Halves:      10101101101111100011011100101111
          - Bit Inversion:    01010010010000011100100011010000
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     01001100000110001111011011010110

          - FUNCTION OUTPUT:  01001100000110001111011011010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110011100000110000101001001

       - FUNCTION OUTPUT:          01001100000110001111011011010110

       - Left XOR FUNCTION OUTPUT: 11101010011010001001011110011111

       - Next Round Left 32 Bits:  10010100100000000001011111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010011010001001011110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100100000000001011111110010

       - Right 32 Bits:            11101010011010001001011110011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       11101010011010001001011110011111
          - S-Box Result:     11000100000000100011110100111011   [per every group of 4-bits]
          - Split Into Two:   1100010000000010 [L] 0011110100111011 [R]
          - Swap Halves:      00111101001110111100010000000010
          - Bit Inversion:    11000010110001000011101111111101
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     01100101111010011110001111101000

          - FUNCTION OUTPUT:  01100101111010011110001111101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100100000000001011111110010

       - FUNCTION OUTPUT:          01100101111010011110001111101000

       - Left XOR FUNCTION OUTPUT: 11110001011010011111010000011010

       - Next Round Left 32 Bits:  11101010011010001001011110011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001011010011111010000011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010011010001001011110011111

       - Right 32 Bits:            11110001011010011111010000011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       11110001011010011111010000011010
          - S-Box Result:     10111010000000111011011110100100   [per every group of 4-bits]
          - Split Into Two:   1011101000000011 [L] 1011011110100100 [R]
          - Swap Halves:      10110111101001001011101000000011
          - Bit Inversion:    01001000010110110100010111111100
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     10001010110000010011001100101000

          - FUNCTION OUTPUT:  10001010110000010011001100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010011010001001011110011111

       - FUNCTION OUTPUT:          10001010110000010011001100101000

       - Left XOR FUNCTION OUTPUT: 01100000101010011010010010110111

       - Next Round Left 32 Bits:  11110001011010011111010000011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000101010011010010010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110001011010011111010000011010

       - Right 32 Bits:            01100000101010011010010010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       01100000101010011010010010110111
          - S-Box Result:     00001111010000110100011110001101   [per every group of 4-bits]
          - Split Into Two:   0000111101000011 [L] 0100011110001101 [R]
          - Swap Halves:      01000111100011010000111101000011
          - Bit Inversion:    10111000011100101111000010111100
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     01011101110101100100101110101010

          - FUNCTION OUTPUT:  01011101110101100100101110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110001011010011111010000011010

       - FUNCTION OUTPUT:          01011101110101100100101110101010

       - Left XOR FUNCTION OUTPUT: 10101100101111111011111110110000

       - Next Round Left 32 Bits:  01100000101010011010010010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100101111111011111110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000101010011010010010110111

       - Right 32 Bits:            10101100101111111011111110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       10101100101111111011111110110000
          - S-Box Result:     01000101100010111000101110001111   [per every group of 4-bits]
          - Split Into Two:   0100010110001011 [L] 1000101110001111 [R]
          - Swap Halves:      10001011100011110100010110001011
          - Bit Inversion:    01110100011100001011101001110100
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     11111101001100111110000011111011

          - FUNCTION OUTPUT:  11111101001100111110000011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000101010011010010010110111

       - FUNCTION OUTPUT:          11111101001100111110000011111011

       - Left XOR FUNCTION OUTPUT: 10011101100110100100010001001100

       - Next Round Left 32 Bits:  10101100101111111011111110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101100110100100010001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100101111111011111110110000

       - Right 32 Bits:            10011101100110100100010001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       10011101100110100100010001001100
          - S-Box Result:     00110110001101000111011101110101   [per every group of 4-bits]
          - Split Into Two:   0011011000110100 [L] 0111011101110101 [R]
          - Swap Halves:      01110111011101010011011000110100
          - Bit Inversion:    10001000100010101100100111001011
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     00000101011011110100111011111101

          - FUNCTION OUTPUT:  00000101011011110100111011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100101111111011111110110000

       - FUNCTION OUTPUT:          00000101011011110100111011111101

       - Left XOR FUNCTION OUTPUT: 10101001110100001111000101001101

       - Next Round Left 32 Bits:  10011101100110100100010001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001110100001111000101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101100110100100010001001100

       - Right 32 Bits:            10101001110100001111000101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       10101001110100001111000101001101
          - S-Box Result:     01000011011011111011101001110110   [per every group of 4-bits]
          - Split Into Two:   0100001101101111 [L] 1011101001110110 [R]
          - Swap Halves:      10111010011101100100001101101111
          - Bit Inversion:    01000101100010011011110010010000
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     11110000111100011101001010000001

          - FUNCTION OUTPUT:  11110000111100011101001010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101100110100100010001001100

       - FUNCTION OUTPUT:          11110000111100011101001010000001

       - Left XOR FUNCTION OUTPUT: 01101101011010111001011011001101

       - Next Round Left 32 Bits:  10101001110100001111000101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101011010111001011011001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001110100001111000101001101

       - Right 32 Bits:            01101101011010111001011011001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       01101101011010111001011011001101
          - S-Box Result:     00000110000010000011000001010110   [per every group of 4-bits]
          - Split Into Two:   0000011000001000 [L] 0011000001010110 [R]
          - Swap Halves:      00110000010101100000011000001000
          - Bit Inversion:    11001111101010011111100111110111
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     00001110010100000001100001010001

          - FUNCTION OUTPUT:  00001110010100000001100001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001110100001111000101001101

       - FUNCTION OUTPUT:          00001110010100000001100001010001

       - Left XOR FUNCTION OUTPUT: 10100111100000001110100100011100

       - Next Round Left 32 Bits:  01101101011010111001011011001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111100000001110100100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101011010111001011011001101

       - Right 32 Bits:            10100111100000001110100100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       10100111100000001110100100011100
          - S-Box Result:     01001101001011111100001110100101   [per every group of 4-bits]
          - Split Into Two:   0100110100101111 [L] 1100001110100101 [R]
          - Swap Halves:      11000011101001010100110100101111
          - Bit Inversion:    00111100010110101011001011010000
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     00011011101100001110101000000010

          - FUNCTION OUTPUT:  00011011101100001110101000000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101011010111001011011001101

       - FUNCTION OUTPUT:          00011011101100001110101000000010

       - Left XOR FUNCTION OUTPUT: 01110110110110110111110011001111

       - Next Round Left 32 Bits:  10100111100000001110100100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110110110110111110011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111100000001110100100011100

       - Right 32 Bits:            01110110110110110111110011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       01110110110110110111110011001111
          - S-Box Result:     11010000011010001101010101011011   [per every group of 4-bits]
          - Split Into Two:   1101000001101000 [L] 1101010101011011 [R]
          - Swap Halves:      11010101010110111101000001101000
          - Bit Inversion:    00101010101001000010111110010111
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     10100011100011110001001011110010

          - FUNCTION OUTPUT:  10100011100011110001001011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111100000001110100100011100

       - FUNCTION OUTPUT:          10100011100011110001001011110010

       - Left XOR FUNCTION OUTPUT: 00000100000011111111101111101110

       - Next Round Left 32 Bits:  01110110110110110111110011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100000011111111101111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110110110110111110011001111

       - Right 32 Bits:            00000100000011111111101111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       00000100000011111111101111101110
          - S-Box Result:     11110111111110111011100011001100   [per every group of 4-bits]
          - Split Into Two:   1111011111111011 [L] 1011100011001100 [R]
          - Swap Halves:      10111000110011001111011111111011
          - Bit Inversion:    01000111001100110000100000000100
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     00000011110110100001001001011111

          - FUNCTION OUTPUT:  00000011110110100001001001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110110110110111110011001111

       - FUNCTION OUTPUT:          00000011110110100001001001011111

       - Left XOR FUNCTION OUTPUT: 01110101000000010110111010010000

       - Next Round Left 32 Bits:  00000100000011111111101111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101000000010110111010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100000011111111101111101110

       - Right 32 Bits:            01110101000000010110111010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       01110101000000010110111010010000
          - S-Box Result:     11011001111110100000110000111111   [per every group of 4-bits]
          - Split Into Two:   1101100111111010 [L] 0000110000111111 [R]
          - Swap Halves:      00001100001111111101100111111010
          - Bit Inversion:    11110011110000000010011000000101
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     01010110101100000101000010111001

          - FUNCTION OUTPUT:  01010110101100000101000010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100000011111111101111101110

       - FUNCTION OUTPUT:          01010110101100000101000010111001

       - Left XOR FUNCTION OUTPUT: 01010010101111111010101101010111

       - Next Round Left 32 Bits:  01110101000000010110111010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010101111111010101101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101000000010110111010010000

       - Right 32 Bits:            01010010101111111010101101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       01010010101111111010101101010111
          - S-Box Result:     10011110100010110100100010011101   [per every group of 4-bits]
          - Split Into Two:   1001111010001011 [L] 0100100010011101 [R]
          - Swap Halves:      01001000100111011001111010001011
          - Bit Inversion:    10110111011000100110000101110100
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     11001111101010110001001101101110

          - FUNCTION OUTPUT:  11001111101010110001001101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101000000010110111010010000

       - FUNCTION OUTPUT:          11001111101010110001001101101110

       - Left XOR FUNCTION OUTPUT: 10111010101010100111110111111110

       - Next Round Left 32 Bits:  01010010101111111010101101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010101010100111110111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010101111111010101101010111

       - Right 32 Bits:            10111010101010100111110111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       10111010101010100111110111111110
          - S-Box Result:     10000100010001001101011010111100   [per every group of 4-bits]
          - Split Into Two:   1000010001000100 [L] 1101011010111100 [R]
          - Swap Halves:      11010110101111001000010001000100
          - Bit Inversion:    00101001010000110111101110111011
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     10111000101011010011000100111100

          - FUNCTION OUTPUT:  10111000101011010011000100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010101111111010101101010111

       - FUNCTION OUTPUT:          10111000101011010011000100111100

       - Left XOR FUNCTION OUTPUT: 11101010000100101001101001101011

       - Next Round Left 32 Bits:  10111010101010100111110111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010000100101001101001101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010101010100111110111111110

       - Right 32 Bits:            11101010000100101001101001101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       11101010000100101001101001101011
          - S-Box Result:     11000100101011100011010000001000   [per every group of 4-bits]
          - Split Into Two:   1100010010101110 [L] 0011010000001000 [R]
          - Swap Halves:      00110100000010001100010010101110
          - Bit Inversion:    11001011111101110011101101010001
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     11010101101011100000010101010111

          - FUNCTION OUTPUT:  11010101101011100000010101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010101010100111110111111110

       - FUNCTION OUTPUT:          11010101101011100000010101010111

       - Left XOR FUNCTION OUTPUT: 01101111000001000111100010101001

       - Next Round Left 32 Bits:  11101010000100101001101001101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111000001000111100010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010000100101001101001101011

       - Right 32 Bits:            01101111000001000111100010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       01101111000001000111100010101001
          - S-Box Result:     00001011111101111101001001000011   [per every group of 4-bits]
          - Split Into Two:   0000101111110111 [L] 1101001001000011 [R]
          - Swap Halves:      11010010010000110000101111110111
          - Bit Inversion:    00101101101111001111010000001000
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     10001010100100010010110000011101

          - FUNCTION OUTPUT:  10001010100100010010110000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010000100101001101001101011

       - FUNCTION OUTPUT:          10001010100100010010110000011101

       - Left XOR FUNCTION OUTPUT: 01100000100000111011011001110110

       - Next Round Left 32 Bits:  01101111000001000111100010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000100000111011011001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110000010000011101101100111011001101111000001000111100010101001

 > Decrypted Block:     0110000010000011101101100111011001101111000001000111100010101001


!!!CBC: Previous Ciphertext:                             1011010111001100001000101000011110011101011100010000100111000111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101010101001111100101001111000111110010011101010111000101101110

 > Final Processed Block:                                1101010101001111100101001111000111110010011101010111000101101110



Ciphertext Block 6:                                      0010100001010110011011011100100111110011110011001110011001100110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000010101100110110111001001

       - Right 32 Bits:            11110011110011001110011001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       11110011110011001110011001100110
          - S-Box Result:     10110001010101011100000000000000   [per every group of 4-bits]
          - Split Into Two:   1011000101010101 [L] 1100000000000000 [R]
          - Swap Halves:      11000000000000001011000101010101
          - Bit Inversion:    00111111111111110100111010101010
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00100001101001100111000010101100

          - FUNCTION OUTPUT:  00100001101001100111000010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000010101100110110111001001

       - FUNCTION OUTPUT:          00100001101001100111000010101100

       - Left XOR FUNCTION OUTPUT: 00001001111100000001110101100101

       - Next Round Left 32 Bits:  11110011110011001110011001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001111100000001110101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011110011001110011001100110

       - Right 32 Bits:            00001001111100000001110101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       00001001111100000001110101100101
          - S-Box Result:     11110011101111111010011000001001   [per every group of 4-bits]
          - Split Into Two:   1111001110111111 [L] 1010011000001001 [R]
          - Swap Halves:      10100110000010011111001110111111
          - Bit Inversion:    01011001111101100000110001000000
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     11111110110110111101010001010101

          - FUNCTION OUTPUT:  11111110110110111101010001010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011110011001110011001100110

       - FUNCTION OUTPUT:          11111110110110111101010001010101

       - Left XOR FUNCTION OUTPUT: 00001101000101110011001000110011

       - Next Round Left 32 Bits:  00001001111100000001110101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101000101110011001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001111100000001110101100101

       - Right 32 Bits:            00001101000101110011001000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       00001101000101110011001000110011
          - S-Box Result:     11110110101011010001111000010001   [per every group of 4-bits]
          - Split Into Two:   1111011010101101 [L] 0001111000010001 [R]
          - Swap Halves:      00011110000100011111011010101101
          - Bit Inversion:    11100001111011100000100101010010
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     00100011011101000111111110000110

          - FUNCTION OUTPUT:  00100011011101000111111110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001111100000001110101100101

       - FUNCTION OUTPUT:          00100011011101000111111110000110

       - Left XOR FUNCTION OUTPUT: 00101010100001000110001011100011

       - Next Round Left 32 Bits:  00001101000101110011001000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010100001000110001011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101000101110011001000110011

       - Right 32 Bits:            00101010100001000110001011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       00101010100001000110001011100011
          - S-Box Result:     11100100001001110000111011000001   [per every group of 4-bits]
          - Split Into Two:   1110010000100111 [L] 0000111011000001 [R]
          - Swap Halves:      00001110110000011110010000100111
          - Bit Inversion:    11110001001111100001101111011000
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     00010100100110101010000011001110

          - FUNCTION OUTPUT:  00010100100110101010000011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101000101110011001000110011

       - FUNCTION OUTPUT:          00010100100110101010000011001110

       - Left XOR FUNCTION OUTPUT: 00011001100011011001001011111101

       - Next Round Left 32 Bits:  00101010100001000110001011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001100011011001001011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010100001000110001011100011

       - Right 32 Bits:            00011001100011011001001011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       00011001100011011001001011111101
          - S-Box Result:     10100011001001100011111010110110   [per every group of 4-bits]
          - Split Into Two:   1010001100100110 [L] 0011111010110110 [R]
          - Swap Halves:      00111110101101101010001100100110
          - Bit Inversion:    11000001010010010101110011011001
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     01001000000010100000011001010110

          - FUNCTION OUTPUT:  01001000000010100000011001010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010100001000110001011100011

       - FUNCTION OUTPUT:          01001000000010100000011001010110

       - Left XOR FUNCTION OUTPUT: 01100010100011100110010010110101

       - Next Round Left 32 Bits:  00011001100011011001001011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010100011100110010010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001100011011001001011111101

       - Right 32 Bits:            01100010100011100110010010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       01100010100011100110010010110101
          - S-Box Result:     00001110001011000000011110001001   [per every group of 4-bits]
          - Split Into Two:   0000111000101100 [L] 0000011110001001 [R]
          - Swap Halves:      00000111100010010000111000101100
          - Bit Inversion:    11111000011101101111000111010011
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     01110101100100110111011011100101

          - FUNCTION OUTPUT:  01110101100100110111011011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001100011011001001011111101

       - FUNCTION OUTPUT:          01110101100100110111011011100101

       - Left XOR FUNCTION OUTPUT: 01101100000111101110010000011000

       - Next Round Left 32 Bits:  01100010100011100110010010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100000111101110010000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010100011100110010010110101

       - Right 32 Bits:            01101100000111101110010000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       01101100000111101110010000011000
          - S-Box Result:     00000101101011001100011110100010   [per every group of 4-bits]
          - Split Into Two:   0000010110101100 [L] 1100011110100010 [R]
          - Swap Halves:      11000111101000100000010110101100
          - Bit Inversion:    00111000010111011111101001010011
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     10001101001001011001010001000010

          - FUNCTION OUTPUT:  10001101001001011001010001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010100011100110010010110101

       - FUNCTION OUTPUT:          10001101001001011001010001000010

       - Left XOR FUNCTION OUTPUT: 11101111101010111111000011110111

       - Next Round Left 32 Bits:  01101100000111101110010000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111101010111111000011110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100000111101110010000011000

       - Right 32 Bits:            11101111101010111111000011110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       11101111101010111111000011110111
          - S-Box Result:     11001011010010001011111110111101   [per every group of 4-bits]
          - Split Into Two:   1100101101001000 [L] 1011111110111101 [R]
          - Swap Halves:      10111111101111011100101101001000
          - Bit Inversion:    01000000010000100011010010110111
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     10000001101110111101010100010001

          - FUNCTION OUTPUT:  10000001101110111101010100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100000111101110010000011000

       - FUNCTION OUTPUT:          10000001101110111101010100010001

       - Left XOR FUNCTION OUTPUT: 11101101101001010011000100001001

       - Next Round Left 32 Bits:  11101111101010111111000011110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101101001010011000100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111101010111111000011110111

       - Right 32 Bits:            11101101101001010011000100001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       11101101101001010011000100001001
          - S-Box Result:     11000110010010010001101011110011   [per every group of 4-bits]
          - Split Into Two:   1100011001001001 [L] 0001101011110011 [R]
          - Swap Halves:      00011010111100111100011001001001
          - Bit Inversion:    11100101000011000011100110110110
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     11000010111001100110000101100100

          - FUNCTION OUTPUT:  11000010111001100110000101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111101010111111000011110111

       - FUNCTION OUTPUT:          11000010111001100110000101100100

       - Left XOR FUNCTION OUTPUT: 00101101010011011001000110010011

       - Next Round Left 32 Bits:  11101101101001010011000100001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101010011011001000110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101101001010011000100001001

       - Right 32 Bits:            00101101010011011001000110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       00101101010011011001000110010011
          - S-Box Result:     11100110011101100011101000110001   [per every group of 4-bits]
          - Split Into Two:   1110011001110110 [L] 0011101000110001 [R]
          - Swap Halves:      00111010001100011110011001110110
          - Bit Inversion:    11000101110011100001100110001001
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     01001100111001010010010011101100

          - FUNCTION OUTPUT:  01001100111001010010010011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101101001010011000100001001

       - FUNCTION OUTPUT:          01001100111001010010010011101100

       - Left XOR FUNCTION OUTPUT: 10100001010000000001010111100101

       - Next Round Left 32 Bits:  00101101010011011001000110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001010000000001010111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101010011011001000110010011

       - Right 32 Bits:            10100001010000000001010111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       10100001010000000001010111100101
          - S-Box Result:     01001010011111111010100111001001   [per every group of 4-bits]
          - Split Into Two:   0100101001111111 [L] 1010100111001001 [R]
          - Swap Halves:      10101001110010010100101001111111
          - Bit Inversion:    01010110001101101011010110000000
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     00010010110111111010111111011011

          - FUNCTION OUTPUT:  00010010110111111010111111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101010011011001000110010011

       - FUNCTION OUTPUT:          00010010110111111010111111011011

       - Left XOR FUNCTION OUTPUT: 00111111100100100011111001001000

       - Next Round Left 32 Bits:  10100001010000000001010111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111100100100011111001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001010000000001010111100101

       - Right 32 Bits:            00111111100100100011111001001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       00111111100100100011111001001000
          - S-Box Result:     00011011001111100001110001110010   [per every group of 4-bits]
          - Split Into Two:   0001101100111110 [L] 0001110001110010 [R]
          - Swap Halves:      00011100011100100001101100111110
          - Bit Inversion:    11100011100011011110010011000001
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     01000110111111011001001001111101

          - FUNCTION OUTPUT:  01000110111111011001001001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001010000000001010111100101

       - FUNCTION OUTPUT:          01000110111111011001001001111101

       - Left XOR FUNCTION OUTPUT: 11100111101111011000011110011000

       - Next Round Left 32 Bits:  00111111100100100011111001001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111101111011000011110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111100100100011111001001000

       - Right 32 Bits:            11100111101111011000011110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       11100111101111011000011110011000
          - S-Box Result:     11001101100001100010110100110010   [per every group of 4-bits]
          - Split Into Two:   1100110110000110 [L] 0010110100110010 [R]
          - Swap Halves:      00101101001100101100110110000110
          - Bit Inversion:    11010010110011010011001001111001
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     10101010000001000100000001100011

          - FUNCTION OUTPUT:  10101010000001000100000001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111100100100011111001001000

       - FUNCTION OUTPUT:          10101010000001000100000001100011

       - Left XOR FUNCTION OUTPUT: 10010101100101100111111000101011

       - Next Round Left 32 Bits:  11100111101111011000011110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101100101100111111000101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111101111011000011110011000

       - Right 32 Bits:            10010101100101100111111000101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       10010101100101100111111000101011
          - S-Box Result:     00111001001100001101110011101000   [per every group of 4-bits]
          - Split Into Two:   0011100100110000 [L] 1101110011101000 [R]
          - Swap Halves:      11011100111010000011100100110000
          - Bit Inversion:    00100011000101111100011011001111
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     10110010111110011000110001001000

          - FUNCTION OUTPUT:  10110010111110011000110001001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111101111011000011110011000

       - FUNCTION OUTPUT:          10110010111110011000110001001000

       - Left XOR FUNCTION OUTPUT: 01010101010001000000101111010000

       - Next Round Left 32 Bits:  10010101100101100111111000101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101010001000000101111010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101100101100111111000101011

       - Right 32 Bits:            01010101010001000000101111010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       01010101010001000000101111010000
          - S-Box Result:     10011001011101111111100001101111   [per every group of 4-bits]
          - Split Into Two:   1001100101110111 [L] 1111100001101111 [R]
          - Swap Halves:      11111000011011111001100101110111
          - Bit Inversion:    00000111100100000110011010001000
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00011001110010010101100010001110

          - FUNCTION OUTPUT:  00011001110010010101100010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101100101100111111000101011

       - FUNCTION OUTPUT:          00011001110010010101100010001110

       - Left XOR FUNCTION OUTPUT: 10001100010111110010011010100101

       - Next Round Left 32 Bits:  01010101010001000000101111010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100010111110010011010100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101010001000000101111010000

       - Right 32 Bits:            10001100010111110010011010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       10001100010111110010011010100101
          - S-Box Result:     00100101100110111110000001001001   [per every group of 4-bits]
          - Split Into Two:   0010010110011011 [L] 1110000001001001 [R]
          - Swap Halves:      11100000010010010010010110011011
          - Bit Inversion:    00011111101101101101101001100100
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     10111000100110110000001001110001

          - FUNCTION OUTPUT:  10111000100110110000001001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101010001000000101111010000

       - FUNCTION OUTPUT:          10111000100110110000001001110001

       - Left XOR FUNCTION OUTPUT: 11101101110111110000100110100001

       - Next Round Left 32 Bits:  10001100010111110010011010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101110111110000100110100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110110111011111000010011010000110001100010111110010011010100101

 > Decrypted Block:     1110110111011111000010011010000110001100010111110010011010100101


!!!CBC: Previous Ciphertext:                             1010011001110000011000010100100110010100100000000001011111110010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100101110101111011010001110100000011000110111110011000101010111

 > Final Processed Block:                                0100101110101111011010001110100000011000110111110011000101010111



Ciphertext Block 7:                                      0110011001110101110110110011111110100010111001100001001011011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110011101011101101100111111

       - Right 32 Bits:            10100010111001100001001011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       10100010111001100001001011011100
          - S-Box Result:     01001110110000001010111001100101   [per every group of 4-bits]
          - Split Into Two:   0100111011000000 [L] 1010111001100101 [R]
          - Swap Halves:      10101110011001010100111011000000
          - Bit Inversion:    01010001100110101011000100111111
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     01001111110000111000111100111001

          - FUNCTION OUTPUT:  01001111110000111000111100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110011101011101101100111111

       - FUNCTION OUTPUT:          01001111110000111000111100111001

       - Left XOR FUNCTION OUTPUT: 00101001101101100101010000000110

       - Next Round Left 32 Bits:  10100010111001100001001011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001101101100101010000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010111001100001001011011100

       - Right 32 Bits:            00101001101101100101010000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       00101001101101100101010000000110
          - S-Box Result:     11100011100000001001011111110000   [per every group of 4-bits]
          - Split Into Two:   1110001110000000 [L] 1001011111110000 [R]
          - Swap Halves:      10010111111100001110001110000000
          - Bit Inversion:    01101000000011110001110001111111
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     11001111001000101100010001101010

          - FUNCTION OUTPUT:  11001111001000101100010001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010111001100001001011011100

       - FUNCTION OUTPUT:          11001111001000101100010001101010

       - Left XOR FUNCTION OUTPUT: 01101101110001001101011010110110

       - Next Round Left 32 Bits:  00101001101101100101010000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101110001001101011010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001101101100101010000000110

       - Right 32 Bits:            01101101110001001101011010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       01101101110001001101011010110110
          - S-Box Result:     00000110010101110110000010000000   [per every group of 4-bits]
          - Split Into Two:   0000011001010111 [L] 0110000010000000 [R]
          - Swap Halves:      01100000100000000000011001010111
          - Bit Inversion:    10011111011111111111100110101000
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     01011101111001011000111101111100

          - FUNCTION OUTPUT:  01011101111001011000111101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001101101100101010000000110

       - FUNCTION OUTPUT:          01011101111001011000111101111100

       - Left XOR FUNCTION OUTPUT: 01110100010100111101101101111010

       - Next Round Left 32 Bits:  01101101110001001101011010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100010100111101101101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101110001001101011010110110

       - Right 32 Bits:            01110100010100111101101101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       01110100010100111101101101111010
          - S-Box Result:     11010111100100010110100011010100   [per every group of 4-bits]
          - Split Into Two:   1101011110010001 [L] 0110100011010100 [R]
          - Swap Halves:      01101000110101001101011110010001
          - Bit Inversion:    10010111001010110010100001101110
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     01110010100011111001001101111000

          - FUNCTION OUTPUT:  01110010100011111001001101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101110001001101011010110110

       - FUNCTION OUTPUT:          01110010100011111001001101111000

       - Left XOR FUNCTION OUTPUT: 00011111010010110100010111001110

       - Next Round Left 32 Bits:  01110100010100111101101101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111010010110100010111001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100010100111101101101111010

       - Right 32 Bits:            00011111010010110100010111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       00011111010010110100010111001110
          - S-Box Result:     10101011011110000111100101011100   [per every group of 4-bits]
          - Split Into Two:   1010101101111000 [L] 0111100101011100 [R]
          - Swap Halves:      01111001010111001010101101111000
          - Bit Inversion:    10000110101000110101010010000111
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     00001111111000000000111000001000

          - FUNCTION OUTPUT:  00001111111000000000111000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100010100111101101101111010

       - FUNCTION OUTPUT:          00001111111000000000111000001000

       - Left XOR FUNCTION OUTPUT: 01111011101100111101010101110010

       - Next Round Left 32 Bits:  00011111010010110100010111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011101100111101010101110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111010010110100010111001110

       - Right 32 Bits:            01111011101100111101010101110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       01111011101100111101010101110010
          - S-Box Result:     11011000100000010110100111011110   [per every group of 4-bits]
          - Split Into Two:   1101100010000001 [L] 0110100111011110 [R]
          - Swap Halves:      01101001110111101101100010000001
          - Bit Inversion:    10010110001000010010011101111110
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     00011011110001001010000001001000

          - FUNCTION OUTPUT:  00011011110001001010000001001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111010010110100010111001110

       - FUNCTION OUTPUT:          00011011110001001010000001001000

       - Left XOR FUNCTION OUTPUT: 00000100100011111110010110000110

       - Next Round Left 32 Bits:  01111011101100111101010101110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100100011111110010110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011101100111101010101110010

       - Right 32 Bits:            00000100100011111110010110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       00000100100011111110010110000110
          - S-Box Result:     11110111001010111100100100100000   [per every group of 4-bits]
          - Split Into Two:   1111011100101011 [L] 1100100100100000 [R]
          - Swap Halves:      11001001001000001111011100101011
          - Bit Inversion:    00110110110111110000100011010100
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     10000011101001110110011011000101

          - FUNCTION OUTPUT:  10000011101001110110011011000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011101100111101010101110010

       - FUNCTION OUTPUT:          10000011101001110110011011000101

       - Left XOR FUNCTION OUTPUT: 11111000000101001011001110110111

       - Next Round Left 32 Bits:  00000100100011111110010110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000000101001011001110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100100011111110010110000110

       - Right 32 Bits:            11111000000101001011001110110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       11111000000101001011001110110111
          - S-Box Result:     10110010101001111000000110001101   [per every group of 4-bits]
          - Split Into Two:   1011001010100111 [L] 1000000110001101 [R]
          - Swap Halves:      10000001100011011011001010100111
          - Bit Inversion:    01111110011100100100110101011000
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     10111111100010111010110011111110

          - FUNCTION OUTPUT:  10111111100010111010110011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100100011111110010110000110

       - FUNCTION OUTPUT:          10111111100010111010110011111110

       - Left XOR FUNCTION OUTPUT: 10111011000001000100100101111000

       - Next Round Left 32 Bits:  11111000000101001011001110110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000001000100100101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000000101001011001110110111

       - Right 32 Bits:            10111011000001000100100101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       10111011000001000100100101111000
          - S-Box Result:     10001000111101110111001111010010   [per every group of 4-bits]
          - Split Into Two:   1000100011110111 [L] 0111001111010010 [R]
          - Swap Halves:      01110011110100101000100011110111
          - Bit Inversion:    10001100001011010111011100001000
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     10101011110001110010111111011010

          - FUNCTION OUTPUT:  10101011110001110010111111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000000101001011001110110111

       - FUNCTION OUTPUT:          10101011110001110010111111011010

       - Left XOR FUNCTION OUTPUT: 01010011110100111001110001101101

       - Next Round Left 32 Bits:  10111011000001000100100101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011110100111001110001101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000001000100100101111000

       - Right 32 Bits:            01010011110100111001110001101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       01010011110100111001110001101101
          - S-Box Result:     10010001011000010011010100000110   [per every group of 4-bits]
          - Split Into Two:   1001000101100001 [L] 0011010100000110 [R]
          - Swap Halves:      00110101000001101001000101100001
          - Bit Inversion:    11001010111110010110111010011110
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     01000011110100100101001111111011

          - FUNCTION OUTPUT:  01000011110100100101001111111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000001000100100101111000

       - FUNCTION OUTPUT:          01000011110100100101001111111011

       - Left XOR FUNCTION OUTPUT: 11111000110101100001101010000011

       - Next Round Left 32 Bits:  01010011110100111001110001101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000110101100001101010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011110100111001110001101101

       - Right 32 Bits:            11111000110101100001101010000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       11111000110101100001101010000011
          - S-Box Result:     10110010011000001010010000100001   [per every group of 4-bits]
          - Split Into Two:   1011001001100000 [L] 1010010000100001 [R]
          - Swap Halves:      10100100001000011011001001100000
          - Bit Inversion:    01011011110111100100110110011111
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     00011111001101110101011111000100

          - FUNCTION OUTPUT:  00011111001101110101011111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011110100111001110001101101

       - FUNCTION OUTPUT:          00011111001101110101011111000100

       - Left XOR FUNCTION OUTPUT: 01001100111001001100101110101001

       - Next Round Left 32 Bits:  11111000110101100001101010000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100111001001100101110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000110101100001101010000011

       - Right 32 Bits:            01001100111001001100101110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       01001100111001001100101110101001
          - S-Box Result:     01110101110001110101100001000011   [per every group of 4-bits]
          - Split Into Two:   0111010111000111 [L] 0101100001000011 [R]
          - Swap Halves:      01011000010000110111010111000111
          - Bit Inversion:    10100111101111001000101000111000
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     00000010110011001111110010000100

          - FUNCTION OUTPUT:  00000010110011001111110010000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000110101100001101010000011

       - FUNCTION OUTPUT:          00000010110011001111110010000100

       - Left XOR FUNCTION OUTPUT: 11111010000110101110011000000111

       - Next Round Left 32 Bits:  01001100111001001100101110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010000110101110011000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100111001001100101110101001

       - Right 32 Bits:            11111010000110101110011000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       11111010000110101110011000000111
          - S-Box Result:     10110100101001001100000011111101   [per every group of 4-bits]
          - Split Into Two:   1011010010100100 [L] 1100000011111101 [R]
          - Swap Halves:      11000000111111011011010010100100
          - Bit Inversion:    00111111000000100100101101011011
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     01000111110010110011100101000001

          - FUNCTION OUTPUT:  01000111110010110011100101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100111001001100101110101001

       - FUNCTION OUTPUT:          01000111110010110011100101000001

       - Left XOR FUNCTION OUTPUT: 00001011001011111111001011101000

       - Next Round Left 32 Bits:  11111010000110101110011000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011001011111111001011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010000110101110011000000111

       - Right 32 Bits:            00001011001011111111001011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       00001011001011111111001011101000
          - S-Box Result:     11111000111010111011111011000010   [per every group of 4-bits]
          - Split Into Two:   1111100011101011 [L] 1011111011000010 [R]
          - Swap Halves:      10111110110000101111100011101011
          - Bit Inversion:    01000001001111010000011100010100
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     11010000110100110100110110010011

          - FUNCTION OUTPUT:  11010000110100110100110110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010000110101110011000000111

       - FUNCTION OUTPUT:          11010000110100110100110110010011

       - Left XOR FUNCTION OUTPUT: 00101010110010011010101110010100

       - Next Round Left 32 Bits:  00001011001011111111001011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010110010011010101110010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011001011111111001011101000

       - Right 32 Bits:            00101010110010011010101110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       00101010110010011010101110010100
          - S-Box Result:     11100100010100110100100000110111   [per every group of 4-bits]
          - Split Into Two:   1110010001010011 [L] 0100100000110111 [R]
          - Swap Halves:      01001000001101111110010001010011
          - Bit Inversion:    10110111110010000001101110101100
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     10101001100100010010010110101010

          - FUNCTION OUTPUT:  10101001100100010010010110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011001011111111001011101000

       - FUNCTION OUTPUT:          10101001100100010010010110101010

       - Left XOR FUNCTION OUTPUT: 10100010101111101101011101000010

       - Next Round Left 32 Bits:  00101010110010011010101110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010101111101101011101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010110010011010101110010100

       - Right 32 Bits:            10100010101111101101011101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       10100010101111101101011101000010
          - S-Box Result:     01001110100011000110110101111110   [per every group of 4-bits]
          - Split Into Two:   0100111010001100 [L] 0110110101111110 [R]
          - Swap Halves:      01101101011111100100111010001100
          - Bit Inversion:    10010010100000011011000101110011
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     00110101101011000110100101100110

          - FUNCTION OUTPUT:  00110101101011000110100101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010110010011010101110010100

       - FUNCTION OUTPUT:          00110101101011000110100101100110

       - Left XOR FUNCTION OUTPUT: 00011111011001011100001011110010

       - Next Round Left 32 Bits:  10100010101111101101011101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111011001011100001011110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001111101100101110000101111001010100010101111101101011101000010

 > Decrypted Block:     0001111101100101110000101111001010100010101111101101011101000010


!!!CBC: Previous Ciphertext:                             0010100001010110011011011100100111110011110011001110011001100110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011011100110011101011110011101101010001011100100011000100100100

 > Final Processed Block:                                0011011100110011101011110011101101010001011100100011000100100100



Ciphertext Block 8:                                      0010000010010011111111000101011101111000001111111111100101111010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000100100111111110001010111

       - Right 32 Bits:            01111000001111111111100101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       01111000001111111111100101111010
          - S-Box Result:     11010010000110111011001111010100   [per every group of 4-bits]
          - Split Into Two:   1101001000011011 [L] 1011001111010100 [R]
          - Swap Halves:      10110011110101001101001000011011
          - Bit Inversion:    01001100001010110010110111100100
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     01010010011100100001001111100010

          - FUNCTION OUTPUT:  01010010011100100001001111100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000100100111111110001010111

       - FUNCTION OUTPUT:          01010010011100100001001111100010

       - Left XOR FUNCTION OUTPUT: 01110010111000011110111110110101

       - Next Round Left 32 Bits:  01111000001111111111100101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010111000011110111110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000001111111111100101111010

       - Right 32 Bits:            01110010111000011110111110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       01110010111000011110111110110101
          - S-Box Result:     11011110110010101100101110001001   [per every group of 4-bits]
          - Split Into Two:   1101111011001010 [L] 1100101110001001 [R]
          - Swap Halves:      11001011100010011101111011001010
          - Bit Inversion:    00110100011101100010000100110101
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     10010011010110111111100100100000

          - FUNCTION OUTPUT:  10010011010110111111100100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000001111111111100101111010

       - FUNCTION OUTPUT:          10010011010110111111100100100000

       - Left XOR FUNCTION OUTPUT: 11101011011001000000000001011010

       - Next Round Left 32 Bits:  01110010111000011110111110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011011001000000000001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010111000011110111110110101

       - Right 32 Bits:            11101011011001000000000001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       11101011011001000000000001011010
          - S-Box Result:     11001000000001111111111110010100   [per every group of 4-bits]
          - Split Into Two:   1100100000000111 [L] 1111111110010100 [R]
          - Swap Halves:      11111111100101001100100000000111
          - Bit Inversion:    00000000011010110011011111111000
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     11000010111100010100000100101100

          - FUNCTION OUTPUT:  11000010111100010100000100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010111000011110111110110101

       - FUNCTION OUTPUT:          11000010111100010100000100101100

       - Left XOR FUNCTION OUTPUT: 10110000000100001010111010011001

       - Next Round Left 32 Bits:  11101011011001000000000001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000000100001010111010011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011011001000000000001011010

       - Right 32 Bits:            10110000000100001010111010011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       10110000000100001010111010011001
          - S-Box Result:     10001111101011110100110000110011   [per every group of 4-bits]
          - Split Into Two:   1000111110101111 [L] 0100110000110011 [R]
          - Swap Halves:      01001100001100111000111110101111
          - Bit Inversion:    10110011110011000111000001010000
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     01010110011010001100101101000110

          - FUNCTION OUTPUT:  01010110011010001100101101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011011001000000000001011010

       - FUNCTION OUTPUT:          01010110011010001100101101000110

       - Left XOR FUNCTION OUTPUT: 10111101000011001100101100011100

       - Next Round Left 32 Bits:  10110000000100001010111010011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101000011001100101100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000000100001010111010011001

       - Right 32 Bits:            10111101000011001100101100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       10111101000011001100101100011100
          - S-Box Result:     10000110111101010101100010100101   [per every group of 4-bits]
          - Split Into Two:   1000011011110101 [L] 0101100010100101 [R]
          - Swap Halves:      01011000101001011000011011110101
          - Bit Inversion:    10100111010110100111100100001010
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     00101110000110010010001110000101

          - FUNCTION OUTPUT:  00101110000110010010001110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000000100001010111010011001

       - FUNCTION OUTPUT:          00101110000110010010001110000101

       - Left XOR FUNCTION OUTPUT: 10011110000010011000110100011100

       - Next Round Left 32 Bits:  10111101000011001100101100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110000010011000110100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101000011001100101100011100

       - Right 32 Bits:            10011110000010011000110100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       10011110000010011000110100011100
          - S-Box Result:     00111100111100110010011010100101   [per every group of 4-bits]
          - Split Into Two:   0011110011110011 [L] 0010011010100101 [R]
          - Swap Halves:      00100110101001010011110011110011
          - Bit Inversion:    11011001010110101100001100001100
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     01010100101111110100010000111010

          - FUNCTION OUTPUT:  01010100101111110100010000111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101000011001100101100011100

       - FUNCTION OUTPUT:          01010100101111110100010000111010

       - Left XOR FUNCTION OUTPUT: 11101001101100111000111100100110

       - Next Round Left 32 Bits:  10011110000010011000110100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001101100111000111100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110000010011000110100011100

       - Right 32 Bits:            11101001101100111000111100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       11101001101100111000111100100110
          - S-Box Result:     11000011100000010010101111100000   [per every group of 4-bits]
          - Split Into Two:   1100001110000001 [L] 0010101111100000 [R]
          - Swap Halves:      00101011111000001100001110000001
          - Bit Inversion:    11010100000111110011110001111110
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     01100001011001110101001001101111

          - FUNCTION OUTPUT:  01100001011001110101001001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110000010011000110100011100

       - FUNCTION OUTPUT:          01100001011001110101001001101111

       - Left XOR FUNCTION OUTPUT: 11111111011011101101111101110011

       - Next Round Left 32 Bits:  11101001101100111000111100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111011011101101111101110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001101100111000111100100110

       - Right 32 Bits:            11111111011011101101111101110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       11111111011011101101111101110011
          - S-Box Result:     10111011000011000110101111010001   [per every group of 4-bits]
          - Split Into Two:   1011101100001100 [L] 0110101111010001 [R]
          - Swap Halves:      01101011110100011011101100001100
          - Bit Inversion:    10010100001011100100010011110011
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     01010101110101111010010101010101

          - FUNCTION OUTPUT:  01010101110101111010010101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001101100111000111100100110

       - FUNCTION OUTPUT:          01010101110101111010010101010101

       - Left XOR FUNCTION OUTPUT: 10111100011001000010101001110011

       - Next Round Left 32 Bits:  11111111011011101101111101110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100011001000010101001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111011011101101111101110011

       - Right 32 Bits:            10111100011001000010101001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       10111100011001000010101001110011
          - S-Box Result:     10000101000001111110010011010001   [per every group of 4-bits]
          - Split Into Two:   1000010100000111 [L] 1110010011010001 [R]
          - Swap Halves:      11100100110100011000010100000111
          - Bit Inversion:    00011011001011100111101011111000
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     00111100110001000010001000101010

          - FUNCTION OUTPUT:  00111100110001000010001000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111011011101101111101110011

       - FUNCTION OUTPUT:          00111100110001000010001000101010

       - Left XOR FUNCTION OUTPUT: 11000011101010101111110101011001

       - Next Round Left 32 Bits:  10111100011001000010101001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011101010101111110101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100011001000010101001110011

       - Right 32 Bits:            11000011101010101111110101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       11000011101010101111110101011001
          - S-Box Result:     01010001010001001011011010010011   [per every group of 4-bits]
          - Split Into Two:   0101000101000100 [L] 1011011010010011 [R]
          - Swap Halves:      10110110100100110101000101000100
          - Bit Inversion:    01001001011011001010111010111011
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     11000000010001111001001111011110

          - FUNCTION OUTPUT:  11000000010001111001001111011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100011001000010101001110011

       - FUNCTION OUTPUT:          11000000010001111001001111011110

       - Left XOR FUNCTION OUTPUT: 01111100001000111011100110101101

       - Next Round Left 32 Bits:  11000011101010101111110101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100001000111011100110101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011101010101111110101011001

       - Right 32 Bits:            01111100001000111011100110101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       01111100001000111011100110101101
          - S-Box Result:     11010101111000011000001101000110   [per every group of 4-bits]
          - Split Into Two:   1101010111100001 [L] 1000001101000110 [R]
          - Swap Halves:      10000011010001101101010111100001
          - Bit Inversion:    01111100101110010010101000011110
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     00111000010100000011000001000101

          - FUNCTION OUTPUT:  00111000010100000011000001000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011101010101111110101011001

       - FUNCTION OUTPUT:          00111000010100000011000001000101

       - Left XOR FUNCTION OUTPUT: 11111011111110101100110100011100

       - Next Round Left 32 Bits:  01111100001000111011100110101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011111110101100110100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100001000111011100110101101

       - Right 32 Bits:            11111011111110101100110100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       11111011111110101100110100011100
          - S-Box Result:     10111000101101000101011010100101   [per every group of 4-bits]
          - Split Into Two:   1011100010110100 [L] 0101011010100101 [R]
          - Swap Halves:      01010110101001011011100010110100
          - Bit Inversion:    10101001010110100100011101001011
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     00001100001010100011000111110111

          - FUNCTION OUTPUT:  00001100001010100011000111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100001000111011100110101101

       - FUNCTION OUTPUT:          00001100001010100011000111110111

       - Left XOR FUNCTION OUTPUT: 01110000000010011000100001011010

       - Next Round Left 32 Bits:  11111011111110101100110100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000000010011000100001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011111110101100110100011100

       - Right 32 Bits:            01110000000010011000100001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       01110000000010011000100001011010
          - S-Box Result:     11011111111100110010001010010100   [per every group of 4-bits]
          - Split Into Two:   1101111111110011 [L] 0010001010010100 [R]
          - Swap Halves:      00100010100101001101111111110011
          - Bit Inversion:    11011101011010110010000000001100
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     10100101101000100101001000010110

          - FUNCTION OUTPUT:  10100101101000100101001000010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011111110101100110100011100

       - FUNCTION OUTPUT:          10100101101000100101001000010110

       - Left XOR FUNCTION OUTPUT: 01011110010110001001111100001010

       - Next Round Left 32 Bits:  01110000000010011000100001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110010110001001111100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000000010011000100001011010

       - Right 32 Bits:            01011110010110001001111100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       01011110010110001001111100001010
          - S-Box Result:     10011100100100100011101111110100   [per every group of 4-bits]
          - Split Into Two:   1001110010010010 [L] 0011101111110100 [R]
          - Swap Halves:      00111011111101001001110010010010
          - Bit Inversion:    11000100000010110110001101101101
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     01010101111001010010100111101010

          - FUNCTION OUTPUT:  01010101111001010010100111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000000010011000100001011010

       - FUNCTION OUTPUT:          01010101111001010010100111101010

       - Left XOR FUNCTION OUTPUT: 00100101111011001010000110110000

       - Next Round Left 32 Bits:  01011110010110001001111100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101111011001010000110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110010110001001111100001010

       - Right 32 Bits:            00100101111011001010000110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       00100101111011001010000110110000
          - S-Box Result:     11101001110001010100101010001111   [per every group of 4-bits]
          - Split Into Two:   1110100111000101 [L] 0100101010001111 [R]
          - Swap Halves:      01001010100011111110100111000101
          - Bit Inversion:    10110101011100000001011000111010
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     10101011001010010010100000111100

          - FUNCTION OUTPUT:  10101011001010010010100000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110010110001001111100001010

       - FUNCTION OUTPUT:          10101011001010010010100000111100

       - Left XOR FUNCTION OUTPUT: 11110101011100011011011100110110

       - Next Round Left 32 Bits:  00100101111011001010000110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101011100011011011100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101111011001010000110110000

       - Right 32 Bits:            11110101011100011011011100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       11110101011100011011011100110110
          - S-Box Result:     10111001110110101000110100010000   [per every group of 4-bits]
          - Split Into Two:   1011100111011010 [L] 1000110100010000 [R]
          - Swap Halves:      10001101000100001011100111011010
          - Bit Inversion:    01110010111011110100011000100101
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     11010101110000101001111000110000

          - FUNCTION OUTPUT:  11010101110000101001111000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101111011001010000110110000

       - FUNCTION OUTPUT:          11010101110000101001111000110000

       - Left XOR FUNCTION OUTPUT: 11110000001011100011111110000000

       - Next Round Left 32 Bits:  11110101011100011011011100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000001011100011111110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111000000101110001111111000000011110101011100011011011100110110

 > Decrypted Block:     1111000000101110001111111000000011110101011100011011011100110110


!!!CBC: Previous Ciphertext:                             0110011001110101110110110011111110100010111001100001001011011100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1001011001011011111001001011111101010111100101111010010111101010

 > Final Processed Block:                                1001011001011011111001001011111101010111100101111010010111101010



Ciphertext Block 9:                                      0001100110000001000110010010000100100001001000110111100111000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001100000010001100100100001

       - Right 32 Bits:            00100001001000110111100111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 16]
          - Input Half:       00100001001000110111100111000111
          - S-Box Result:     11101010111000011101001101011101   [per every group of 4-bits]
          - Split Into Two:   1110101011100001 [L] 1101001101011101 [R]
          - Swap Halves:      11010011010111011110101011100001
          - Bit Inversion:    00101100101000100001010100011110
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     00110010111110110010101100011000

          - FUNCTION OUTPUT:  00110010111110110010101100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001100000010001100100100001

       - FUNCTION OUTPUT:          00110010111110110010101100011000

       - Left XOR FUNCTION OUTPUT: 00101011011110100011001000111001

       - Next Round Left 32 Bits:  00100001001000110111100111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011011110100011001000111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001001000110111100111000111

       - Right 32 Bits:            00101011011110100011001000111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 15]
          - Input Half:       00101011011110100011001000111001
          - S-Box Result:     11101000110101000001111000010011   [per every group of 4-bits]
          - Split Into Two:   1110100011010100 [L] 0001111000010011 [R]
          - Swap Halves:      00011110000100111110100011010100
          - Bit Inversion:    11100001111011000001011100101011
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     01000110110000011100111100111110

          - FUNCTION OUTPUT:  01000110110000011100111100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001001000110111100111000111

       - FUNCTION OUTPUT:          01000110110000011100111100111110

       - Left XOR FUNCTION OUTPUT: 01100111111000101011011011111001

       - Next Round Left 32 Bits:  00101011011110100011001000111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111111000101011011011111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011011110100011001000111001

       - Right 32 Bits:            01100111111000101011011011111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010001010011011101010001011000100110111101101000   [Subkey: 14]
          - Input Half:       01100111111000101011011011111001
          - S-Box Result:     00001101110011101000000010110011   [per every group of 4-bits]
          - Split Into Two:   0000110111001110 [L] 1000000010110011 [R]
          - Swap Halves:      10000000101100110000110111001110
          - Bit Inversion:    01111111010011001111001000110001
          - Compressed Key:   11000010100110100111011011010100   [done by compression P-Box]
          - XOR with Key:     10111101110101101000010011100101

          - FUNCTION OUTPUT:  10111101110101101000010011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011011110100011001000111001

       - FUNCTION OUTPUT:          10111101110101101000010011100101

       - Left XOR FUNCTION OUTPUT: 10010110101011001011011011011100

       - Next Round Left 32 Bits:  01100111111000101011011011111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110101011001011011011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111111000101011011011111001

       - Right 32 Bits:            10010110101011001011011011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011010111010110010001010111010011101100100001001   [Subkey: 13]
          - Input Half:       10010110101011001011011011011100
          - S-Box Result:     00110000010001011000000001100101   [per every group of 4-bits]
          - Split Into Two:   0011000001000101 [L] 1000000001100101 [R]
          - Swap Halves:      10000000011001010011000001000101
          - Bit Inversion:    01111111100110101100111110111010
          - Compressed Key:   11100101101001001011101100010110   [done by compression P-Box]
          - XOR with Key:     10011010001111100111010010101100

          - FUNCTION OUTPUT:  10011010001111100111010010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111111000101011011011111001

       - FUNCTION OUTPUT:          10011010001111100111010010101100

       - Left XOR FUNCTION OUTPUT: 11111101110111001100001001010101

       - Next Round Left 32 Bits:  10010110101011001011011011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101110111001100001001010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110101011001011011011011100

       - Right 32 Bits:            11111101110111001100001001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010110010100010100110111010100010110001001101111   [Subkey: 12]
          - Input Half:       11111101110111001100001001010101
          - S-Box Result:     10110110011001010101111010011001   [per every group of 4-bits]
          - Split Into Two:   1011011001100101 [L] 0101111010011001 [R]
          - Swap Halves:      01011110100110011011011001100101
          - Bit Inversion:    10100001011001100100100110011010
          - Compressed Key:   10001001010000110101101010001111   [done by compression P-Box]
          - XOR with Key:     00101000001001010001001100010101

          - FUNCTION OUTPUT:  00101000001001010001001100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110101011001011011011011100

       - FUNCTION OUTPUT:          00101000001001010001001100010101

       - Left XOR FUNCTION OUTPUT: 10111110100010011010010111001001

       - Next Round Left 32 Bits:  11111101110111001100001001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110100010011010010111001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101110111001100001001010101

       - Right 32 Bits:            10111110100010011010010111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001011110100110101110101100100010101110100111011001   [Subkey: 11]
          - Input Half:       10111110100010011010010111001001
          - S-Box Result:     10001100001000110100100101010011   [per every group of 4-bits]
          - Split Into Two:   1000110000100011 [L] 0100100101010011 [R]
          - Swap Halves:      01001001010100111000110000100011
          - Bit Inversion:    10110110101011000111001111011100
          - Compressed Key:   10001101111001011000011100110110   [done by compression P-Box]
          - XOR with Key:     00111011010010011111010011101010

          - FUNCTION OUTPUT:  00111011010010011111010011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101110111001100001001010101

       - FUNCTION OUTPUT:          00111011010010011111010011101010

       - Left XOR FUNCTION OUTPUT: 11000110100101010011011010111111

       - Next Round Left 32 Bits:  10111110100010011010010111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110100101010011011010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110100010011010010111001001

       - Right 32 Bits:            11000110100101010011011010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011010000101100101000101001101110101000101100010   [Subkey: 10]
          - Input Half:       11000110100101010011011010111111
          - S-Box Result:     01010000001110010001000010001011   [per every group of 4-bits]
          - Split Into Two:   0101000000111001 [L] 0001000010001011 [R]
          - Swap Halves:      00010000100010110101000000111001
          - Bit Inversion:    11101111011101001010111111000110
          - Compressed Key:   10110101011110000110111000010001   [done by compression P-Box]
          - XOR with Key:     01011010000011001100000111010111

          - FUNCTION OUTPUT:  01011010000011001100000111010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110100010011010010111001001

       - FUNCTION OUTPUT:          01011010000011001100000111010111

       - Left XOR FUNCTION OUTPUT: 11100100100001010110010000011110

       - Next Round Left 32 Bits:  11000110100101010011011010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100100001010110010000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110100101010011011010111111

       - Right 32 Bits:            11100100100001010110010000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001000010010111101001101011101011001000101011101001   [Subkey: 9]
          - Input Half:       11100100100001010110010000011110
          - S-Box Result:     11000111001010010000011110101100   [per every group of 4-bits]
          - Split Into Two:   1100011100101001 [L] 0000011110101100 [R]
          - Swap Halves:      00000111101011001100011100101001
          - Bit Inversion:    11111000010100110011100011010110
          - Compressed Key:   11000001111110011110000110100110   [done by compression P-Box]
          - XOR with Key:     00111001101010101101100101110000

          - FUNCTION OUTPUT:  00111001101010101101100101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110100101010011011010111111

       - FUNCTION OUTPUT:          00111001101010101101100101110000

       - Left XOR FUNCTION OUTPUT: 11111111001111111110111111001111

       - Next Round Left 32 Bits:  11100100100001010110010000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111001111111110111111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100100001010110010000011110

       - Right 32 Bits:            11111111001111111110111111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010011011110110100001011001010001010011011101010001   [Subkey: 8]
          - Input Half:       11111111001111111110111111001111
          - S-Box Result:     10111011000110111100101101011011   [per every group of 4-bits]
          - Split Into Two:   1011101100011011 [L] 1100101101011011 [R]
          - Swap Halves:      11001011010110111011101100011011
          - Bit Inversion:    00110100101001000100010011100100
          - Compressed Key:   00100111111010100101100011010010   [done by compression P-Box]
          - XOR with Key:     00010011010011100001110000110110

          - FUNCTION OUTPUT:  00010011010011100001110000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100100001010110010000011110

       - FUNCTION OUTPUT:          00010011010011100001110000110110

       - Left XOR FUNCTION OUTPUT: 11110111110010110111100000101000

       - Next Round Left 32 Bits:  11111111001111111110111111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111110010110111100000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111001111111110111111001111

       - Right 32 Bits:            11110111110010110111100000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001110110010000100101111010011010111010110010001010   [Subkey: 7]
          - Input Half:       11110111110010110111100000101000
          - S-Box Result:     10111101010110001101001011100010   [per every group of 4-bits]
          - Split Into Two:   1011110101011000 [L] 1101001011100010 [R]
          - Swap Halves:      11010010111000101011110101011000
          - Bit Inversion:    00101101000111010100001010100111
          - Compressed Key:   10001001001010110011110101100101   [done by compression P-Box]
          - XOR with Key:     10100100001101100111111111000010

          - FUNCTION OUTPUT:  10100100001101100111111111000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111001111111110111111001111

       - FUNCTION OUTPUT:          10100100001101100111111111000010

       - Left XOR FUNCTION OUTPUT: 01011011000010011001000000001101

       - Next Round Left 32 Bits:  11110111110010110111100000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011000010011001000000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111110010110111100000101000

       - Right 32 Bits:            01011011000010011001000000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011000100110111101101000010110010100010100110111   [Subkey: 6]
          - Input Half:       01011011000010011001000000001101
          - S-Box Result:     10011000111100110011111111110110   [per every group of 4-bits]
          - Split Into Two:   1001100011110011 [L] 0011111111110110 [R]
          - Swap Halves:      00111111111101101001100011110011
          - Bit Inversion:    11000000000010010110011100001100
          - Compressed Key:   01000100111010010001101001011011   [done by compression P-Box]
          - XOR with Key:     10000100111000000111110101010111

          - FUNCTION OUTPUT:  10000100111000000111110101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111110010110111100000101000

       - FUNCTION OUTPUT:          10000100111000000111110101010111

       - Left XOR FUNCTION OUTPUT: 01110011001010110000010101111111

       - Next Round Left 32 Bits:  01011011000010011001000000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011001010110000010101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011000010011001000000001101

       - Right 32 Bits:            01110011001010110000010101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001010111010011101100100001001011110100110101110101100   [Subkey: 5]
          - Input Half:       01110011001010110000010101111111
          - S-Box Result:     11010001111010001111100111011011   [per every group of 4-bits]
          - Split Into Two:   1101000111101000 [L] 1111100111011011 [R]
          - Swap Halves:      11111001110110111101000111101000
          - Bit Inversion:    00000110001001000010111000010111
          - Compressed Key:   10100101011100000111011010111100   [done by compression P-Box]
          - XOR with Key:     10100011010101000101100010101011

          - FUNCTION OUTPUT:  10100011010101000101100010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011000010011001000000001101

       - FUNCTION OUTPUT:          10100011010101000101100010101011

       - Left XOR FUNCTION OUTPUT: 11111000010111011100100010100110

       - Next Round Left 32 Bits:  01110011001010110000010101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000010111011100100010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011001010110000010101111111

       - Right 32 Bits:            11111000010111011100100010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111010100010110001001101111011010000101100101000101   [Subkey: 4]
          - Input Half:       11111000010111011100100010100110
          - S-Box Result:     10110010100101100101001001000000   [per every group of 4-bits]
          - Split Into Two:   1011001010010110 [L] 0101001001000000 [R]
          - Swap Halves:      01010010010000001011001010010110
          - Bit Inversion:    10101101101111110100110101101001
          - Compressed Key:   01111000110010010111001000011010   [done by compression P-Box]
          - XOR with Key:     11010101011101100011111101110011

          - FUNCTION OUTPUT:  11010101011101100011111101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011001010110000010101111111

       - FUNCTION OUTPUT:          11010101011101100011111101110011

       - Left XOR FUNCTION OUTPUT: 10100110010111010011101000001100

       - Next Round Left 32 Bits:  11111000010111011100100010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110010111010011101000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000010111011100100010100110

       - Right 32 Bits:            10100110010111010011101000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100100010101110100111011001000010010111101001101011   [Subkey: 3]
          - Input Half:       10100110010111010011101000001100
          - S-Box Result:     01000000100101100001010011110101   [per every group of 4-bits]
          - Split Into Two:   0100000010010110 [L] 0001010011110101 [R]
          - Swap Halves:      00010100111101010100000010010110
          - Bit Inversion:    11101011000010101011111101101001
          - Compressed Key:   10010001111011100100101010000111   [done by compression P-Box]
          - XOR with Key:     01111010111001001111010111101110

          - FUNCTION OUTPUT:  01111010111001001111010111101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000010111011100100010100110

       - FUNCTION OUTPUT:          01111010111001001111010111101110

       - Left XOR FUNCTION OUTPUT: 10000010101110010011110101001000

       - Next Round Left 32 Bits:  10100110010111010011101000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010101110010011110101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110010111010011101000001100

       - Right 32 Bits:            10000010101110010011110101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101110101000101100010011011110110100001011001   [Subkey: 2]
          - Input Half:       10000010101110010011110101001000
          - S-Box Result:     00101110100000110001011001110010   [per every group of 4-bits]
          - Split Into Two:   0010111010000011 [L] 0001011001110010 [R]
          - Swap Halves:      00010110011100100010111010000011
          - Bit Inversion:    11101001100011011101000101111100
          - Compressed Key:   00011110010110010011111000000110   [done by compression P-Box]
          - XOR with Key:     11110111110101001110111101111010

          - FUNCTION OUTPUT:  11110111110101001110111101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110010111010011101000001100

       - FUNCTION OUTPUT:          11110111110101001110111101111010

       - Left XOR FUNCTION OUTPUT: 01010001100010011101010101110110

       - Next Round Left 32 Bits:  10000010101110010011110101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001100010011101010101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010101110010011110101001000

       - Right 32 Bits:            01010001100010011101010101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011101011001000101011101001110110010000100101111010   [Subkey: 1]
          - Input Half:       01010001100010011101010101110110
          - S-Box Result:     10011010001000110110100111010000   [per every group of 4-bits]
          - Split Into Two:   1001101000100011 [L] 0110100111010000 [R]
          - Swap Halves:      01101001110100001001101000100011
          - Bit Inversion:    10010110001011110110010111011100
          - Compressed Key:   10100111001011011101100000010101   [done by compression P-Box]
          - XOR with Key:     00110001000000101011110111001001

          - FUNCTION OUTPUT:  00110001000000101011110111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010101110010011110101001000

       - FUNCTION OUTPUT:          00110001000000101011110111001001

       - Left XOR FUNCTION OUTPUT: 10110011101110111000000010000001

       - Next Round Left 32 Bits:  01010001100010011101010101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011101110111000000010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011001110111011100000001000000101010001100010011101010101110110

 > Decrypted Block:     1011001110111011100000001000000101010001100010011101010101110110


!!!CBC: Previous Ciphertext:                             0010000010010011111111000101011101111000001111111111100101111010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1001001100101000011111001101011000101001101101100010110000001100

 > Final Processed Block:                                1001001100101000011111001101011000101001101101100010110000001100




BLOCKS IN ASCII:             ¤ü	64Ì=Ö?B¿Þ?'<e©îª-IÞR ?%!ÕO?ñòuqnK¯hèß1W73¯;Qr1$?[ä¿W?¥ê?(|Ö)¶,

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: thudIK3
In Binary:  01110100011010000111010101100100010010010100101100110011

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 10111001011110001010100110111011011010110100110011001000
Subkey 2  : 01101000011101010110010001001001010010110011001101110100
Subkey 3  : 01111000101010011011101101101011010011001100100010111001
Subkey 4  : 01110101011001000100100101001011001100110111010001101000
Subkey 5  : 10101001101110110110101101001100110010001011100101111000
Subkey 6  : 01100100010010010100101100110011011101000110100001110101
Subkey 7  : 10111011011010110100110011001000101110010111100010101001
Subkey 8  : 01001001010010110011001101110100011010000111010101100100
Subkey 9  : 01101011010011001100100010111001011110001010100110111011
Subkey 10 : 01001011001100110111010001101000011101010110010001001001
Subkey 11 : 01001100110010001011100101111000101010011011101101101011
Subkey 12 : 00110011011101000110100001110101011001000100100101001011
Subkey 13 : 11001000101110010111100010101001101110110110101101001100
Subkey 14 : 01110100011010000111010101100100010010010100101100110011
Subkey 15 : 10111001011110001010100110111011011010110100110011001000
Subkey 16 : 01101000011101010110010001001001010010110011001101110100

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ¤ü	64Ì=Ö?B¿Þ?'<e©îª-IÞR ?%!ÕO?ñòuqnK¯hèß1W73¯;Qr1$?[ä¿W?¥ê?(|Ö)¶,

Data padded with spaces : ¤ü	64Ì=Ö?B¿Þ?'<e©îª-IÞR ?%!ÕO?ñòuqnK¯hèß1W73¯;Qr1$?[ä¿W?¥ê?(|Ö)¶,[Padded with '0' spaces]

Data in ASCII           : 164,252,9,54,52,204,61,1,214,132,31,66,191,222,134,39,60,101,169,238,170,45,23,73,222,12,127,82,32,144,37,33,213,79,148,241,242,117,113,110,75,175,104,232,24,223,49,87,55,51,175,59,81,114,49,36,150,91,228,191,87,151,165,234,147,40,124,214,41,182,44,12,

Data in Binary          : 10100100,11111100,00001001,00110110,00110100,11001100,00111101,00000001,11010110,10000100,00011111,01000010,10111111,11011110,10000110,00100111,00111100,01100101,10101001,11101110,10101010,00101101,00010111,01001001,11011110,00001100,01111111,01010010,00100000,10010000,00100101,00100001,11010101,01001111,10010100,11110001,11110010,01110101,01110001,01101110,01001011,10101111,01101000,11101000,00011000,11011111,00110001,01010111,00110111,00110011,10101111,00111011,01010001,01110010,00110001,00100100,10010110,01011011,11100100,10111111,01010111,10010111,10100101,11101010,10010011,00101000,01111100,11010110,00101001,10110110,00101100,00001100,

Data in 64-bit Blocks



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101010001010001010101010100110001100100010000100110011101101001)

Plaintext Block: 1:                                      1010010011111100000010010011011000110100110011000011110100000001

!!!CBC: Previous Ciphertext:                             0101010001010001010101010100110001100100010000100110011101101001

!!!CBC: Current Block XOR with Previous Ciphertext:      1111000010101101010111000111101001010000100011100101101001101000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000101011010101110001111010

       - Right 32 Bits:            01010000100011100101101001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       01010000100011100101101001101000
          - S-Box Result:     10011111001011001001010000000010   [per every group of 4-bits]
          - Split Into Two:   1001111100101100 [L] 1001010000000010 [R]
          - Swap Halves:      10010100000000101001111100101100
          - Bit Inversion:    01101011111111010110000011010011
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10100110010110100001111010110111

          - FUNCTION OUTPUT:  10100110010110100001111010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000101011010101110001111010

       - FUNCTION OUTPUT:          10100110010110100001111010110111

       - Left XOR FUNCTION OUTPUT: 01010110111101110100001011001101

       - Next Round Left 32 Bits:  01010000100011100101101001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110111101110100001011001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000100011100101101001101000

       - Right 32 Bits:            01010110111101110100001011001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       01010110111101110100001011001101
          - S-Box Result:     10010000101111010111111001010110   [per every group of 4-bits]
          - Split Into Two:   1001000010111101 [L] 0111111001010110 [R]
          - Swap Halves:      01111110010101101001000010111101
          - Bit Inversion:    10000001101010010110111101000010
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00001111011000010011001111011010

          - FUNCTION OUTPUT:  00001111011000010011001111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000100011100101101001101000

       - FUNCTION OUTPUT:          00001111011000010011001111011010

       - Left XOR FUNCTION OUTPUT: 01011111111011110110100110110010

       - Next Round Left 32 Bits:  01010110111101110100001011001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111111011110110100110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110111101110100001011001101

       - Right 32 Bits:            01011111111011110110100110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       01011111111011110110100110110010
          - S-Box Result:     10011011110010110000001110001110   [per every group of 4-bits]
          - Split Into Two:   1001101111001011 [L] 0000001110001110 [R]
          - Swap Halves:      00000011100011101001101111001011
          - Bit Inversion:    11111100011100010110010000110100
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     00111001110010000011011100010010

          - FUNCTION OUTPUT:  00111001110010000011011100010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110111101110100001011001101

       - FUNCTION OUTPUT:          00111001110010000011011100010010

       - Left XOR FUNCTION OUTPUT: 01101111001111110111010111011111

       - Next Round Left 32 Bits:  01011111111011110110100110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111001111110111010111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111111011110110100110110010

       - Right 32 Bits:            01101111001111110111010111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       01101111001111110111010111011111
          - S-Box Result:     00001011000110111101100101101011   [per every group of 4-bits]
          - Split Into Two:   0000101100011011 [L] 1101100101101011 [R]
          - Swap Halves:      11011001011010110000101100011011
          - Bit Inversion:    00100110100101001111010011100100
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     01110000111111001001101010100000

          - FUNCTION OUTPUT:  01110000111111001001101010100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111111011110110100110110010

       - FUNCTION OUTPUT:          01110000111111001001101010100000

       - Left XOR FUNCTION OUTPUT: 00101111000100111111001100010010

       - Next Round Left 32 Bits:  01101111001111110111010111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111000100111111001100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111001111110111010111011111

       - Right 32 Bits:            00101111000100111111001100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       00101111000100111111001100010010
          - S-Box Result:     11101011101000011011000110101110   [per every group of 4-bits]
          - Split Into Two:   1110101110100001 [L] 1011000110101110 [R]
          - Swap Halves:      10110001101011101110101110100001
          - Bit Inversion:    01001110010100010001010001011110
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     11000011101110011000010101001010

          - FUNCTION OUTPUT:  11000011101110011000010101001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111001111110111010111011111

       - FUNCTION OUTPUT:          11000011101110011000010101001010

       - Left XOR FUNCTION OUTPUT: 10101100100001101111000010010101

       - Next Round Left 32 Bits:  00101111000100111111001100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100100001101111000010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111000100111111001100010010

       - Right 32 Bits:            10101100100001101111000010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       10101100100001101111000010010101
          - S-Box Result:     01000101001000001011111100111001   [per every group of 4-bits]
          - Split Into Two:   0100010100100000 [L] 1011111100111001 [R]
          - Swap Halves:      10111111001110010100010100100000
          - Bit Inversion:    01000000110001101011101011011111
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     01010001101001011100100011010101

          - FUNCTION OUTPUT:  01010001101001011100100011010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111000100111111001100010010

       - FUNCTION OUTPUT:          01010001101001011100100011010101

       - Left XOR FUNCTION OUTPUT: 01111110101101100011101111000111

       - Next Round Left 32 Bits:  10101100100001101111000010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110101101100011101111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100100001101111000010010101

       - Right 32 Bits:            01111110101101100011101111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       01111110101101100011101111000111
          - S-Box Result:     11011100100000000001100001011101   [per every group of 4-bits]
          - Split Into Two:   1101110010000000 [L] 0001100001011101 [R]
          - Swap Halves:      00011000010111011101110010000000
          - Bit Inversion:    11100111101000100010001101111111
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     00000010110011101000100101011001

          - FUNCTION OUTPUT:  00000010110011101000100101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100100001101111000010010101

       - FUNCTION OUTPUT:          00000010110011101000100101011001

       - Left XOR FUNCTION OUTPUT: 10101110010010000111100111001100

       - Next Round Left 32 Bits:  01111110101101100011101111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110010010000111100111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110101101100011101111000111

       - Right 32 Bits:            10101110010010000111100111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       10101110010010000111100111001100
          - S-Box Result:     01001100011100101101001101010101   [per every group of 4-bits]
          - Split Into Two:   0100110001110010 [L] 1101001101010101 [R]
          - Swap Halves:      11010011010101010100110001110010
          - Bit Inversion:    00101100101010101011001110001101
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     10101101001100011000000111010101

          - FUNCTION OUTPUT:  10101101001100011000000111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110101101100011101111000111

       - FUNCTION OUTPUT:          10101101001100011000000111010101

       - Left XOR FUNCTION OUTPUT: 11010011100001111011101000010010

       - Next Round Left 32 Bits:  10101110010010000111100111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011100001111011101000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110010010000111100111001100

       - Right 32 Bits:            11010011100001111011101000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       11010011100001111011101000010010
          - S-Box Result:     01100001001011011000010010101110   [per every group of 4-bits]
          - Split Into Two:   0110000100101101 [L] 1000010010101110 [R]
          - Swap Halves:      10000100101011100110000100101101
          - Bit Inversion:    01111011010100011001111011010010
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     11011000001101101110111111100101

          - FUNCTION OUTPUT:  11011000001101101110111111100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110010010000111100111001100

       - FUNCTION OUTPUT:          11011000001101101110111111100101

       - Left XOR FUNCTION OUTPUT: 01110110011111101001011000101001

       - Next Round Left 32 Bits:  11010011100001111011101000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110011111101001011000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011100001111011101000010010

       - Right 32 Bits:            01110110011111101001011000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       01110110011111101001011000101001
          - S-Box Result:     11010000110111000011000011100011   [per every group of 4-bits]
          - Split Into Two:   1101000011011100 [L] 0011000011100011 [R]
          - Swap Halves:      00110000111000111101000011011100
          - Bit Inversion:    11001111000111000010111100100011
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     01100011110001010001010101100101

          - FUNCTION OUTPUT:  01100011110001010001010101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011100001111011101000010010

       - FUNCTION OUTPUT:          01100011110001010001010101100101

       - Left XOR FUNCTION OUTPUT: 10110000010000101010111101110111

       - Next Round Left 32 Bits:  01110110011111101001011000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000010000101010111101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110011111101001011000101001

       - Right 32 Bits:            10110000010000101010111101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       10110000010000101010111101110111
          - S-Box Result:     10001111011111100100101111011101   [per every group of 4-bits]
          - Split Into Two:   1000111101111110 [L] 0100101111011101 [R]
          - Swap Halves:      01001011110111011000111101111110
          - Bit Inversion:    10110100001000100111000010000001
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     00100101100110011101100100010110

          - FUNCTION OUTPUT:  00100101100110011101100100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110011111101001011000101001

       - FUNCTION OUTPUT:          00100101100110011101100100010110

       - Left XOR FUNCTION OUTPUT: 01010011111001110100111100111111

       - Next Round Left 32 Bits:  10110000010000101010111101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011111001110100111100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000010000101010111101110111

       - Right 32 Bits:            01010011111001110100111100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       01010011111001110100111100111111
          - S-Box Result:     10010001110011010111101100011011   [per every group of 4-bits]
          - Split Into Two:   1001000111001101 [L] 0111101100011011 [R]
          - Swap Halves:      01111011000110111001000111001101
          - Bit Inversion:    10000100111001000110111000110010
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     11101010000011110001110000100101

          - FUNCTION OUTPUT:  11101010000011110001110000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000010000101010111101110111

       - FUNCTION OUTPUT:          11101010000011110001110000100101

       - Left XOR FUNCTION OUTPUT: 01011010010011011011001101010010

       - Next Round Left 32 Bits:  01010011111001110100111100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010010011011011001101010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011111001110100111100111111

       - Right 32 Bits:            01011010010011011011001101010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       01011010010011011011001101010010
          - S-Box Result:     10010100011101101000000110011110   [per every group of 4-bits]
          - Split Into Two:   1001010001110110 [L] 1000000110011110 [R]
          - Swap Halves:      10000001100111101001010001110110
          - Bit Inversion:    01111110011000010110101110001001
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     11110011100101001000010100010101

          - FUNCTION OUTPUT:  11110011100101001000010100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011111001110100111100111111

       - FUNCTION OUTPUT:          11110011100101001000010100010101

       - Left XOR FUNCTION OUTPUT: 10100000011100111100101000101010

       - Next Round Left 32 Bits:  01011010010011011011001101010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000011100111100101000101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010010011011011001101010010

       - Right 32 Bits:            10100000011100111100101000101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       10100000011100111100101000101010
          - S-Box Result:     01001111110100010101010011100100   [per every group of 4-bits]
          - Split Into Two:   0100111111010001 [L] 0101010011100100 [R]
          - Swap Halves:      01010100111001000100111111010001
          - Bit Inversion:    10101011000110111011000000101110
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     11111110110000101010101010111101

          - FUNCTION OUTPUT:  11111110110000101010101010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010010011011011001101010010

       - FUNCTION OUTPUT:          11111110110000101010101010111101

       - Left XOR FUNCTION OUTPUT: 10100100100011110001100111101111

       - Next Round Left 32 Bits:  10100000011100111100101000101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100100011110001100111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000011100111100101000101010

       - Right 32 Bits:            10100100100011110001100111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       10100100100011110001100111101111
          - S-Box Result:     01000111001010111010001111001011   [per every group of 4-bits]
          - Split Into Two:   0100011100101011 [L] 1010001111001011 [R]
          - Swap Halves:      10100011110010110100011100101011
          - Bit Inversion:    01011100001101001011100011010100
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10010001100100111100011010110000

          - FUNCTION OUTPUT:  10010001100100111100011010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000011100111100101000101010

       - FUNCTION OUTPUT:          10010001100100111100011010110000

       - Left XOR FUNCTION OUTPUT: 00110001111000000000110010011010

       - Next Round Left 32 Bits:  10100100100011110001100111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001111000000000110010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100100011110001100111101111

       - Right 32 Bits:            00110001111000000000110010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       00110001111000000000110010011010
          - S-Box Result:     00011010110011111111010100110100   [per every group of 4-bits]
          - Split Into Two:   0001101011001111 [L] 1111010100110100 [R]
          - Swap Halves:      11110101001101000001101011001111
          - Bit Inversion:    00001010110010111110010100110000
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     10000100000000111011100110101000

          - FUNCTION OUTPUT:  10000100000000111011100110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100100011110001100111101111

       - FUNCTION OUTPUT:          10000100000000111011100110101000

       - Left XOR FUNCTION OUTPUT: 00100000100011001010000001000111

       - Next Round Left 32 Bits:  00110001111000000000110010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000100011001010000001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010000010001100101000000100011100110001111000000000110010011010

 > Processed Block:     0010000010001100101000000100011100110001111000000000110010011010



Plaintext Block: 2:                                      1101011010000100000111110100001010111111110111101000011000100111

!!!CBC: Previous Ciphertext:                             0010000010001100101000000100011100110001111000000000110010011010

!!!CBC: Current Block XOR with Previous Ciphertext:      1111011000001000101111110000010110001110001111101000101010111101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110000010001011111100000101

       - Right 32 Bits:            10001110001111101000101010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       10001110001111101000101010111101
          - S-Box Result:     00101100000111000010010010000110   [per every group of 4-bits]
          - Split Into Two:   0010110000011100 [L] 0010010010000110 [R]
          - Swap Halves:      00100100100001100010110000011100
          - Bit Inversion:    11011011011110011101001111100011
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     00010110110111101010110110000111

          - FUNCTION OUTPUT:  00010110110111101010110110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110000010001011111100000101

       - FUNCTION OUTPUT:          00010110110111101010110110000111

       - Left XOR FUNCTION OUTPUT: 11100000110101100001001010000010

       - Next Round Left 32 Bits:  10001110001111101000101010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000110101100001001010000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110001111101000101010111101

       - Right 32 Bits:            11100000110101100001001010000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       11100000110101100001001010000010
          - S-Box Result:     11001111011000001010111000101110   [per every group of 4-bits]
          - Split Into Two:   1100111101100000 [L] 1010111000101110 [R]
          - Swap Halves:      10101110001011101100111101100000
          - Bit Inversion:    01010001110100010011000010011111
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     11011111000110010110110000000111

          - FUNCTION OUTPUT:  11011111000110010110110000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110001111101000101010111101

       - FUNCTION OUTPUT:          11011111000110010110110000000111

       - Left XOR FUNCTION OUTPUT: 01010001001001111110011010111010

       - Next Round Left 32 Bits:  11100000110101100001001010000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001001001111110011010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000110101100001001010000010

       - Right 32 Bits:            01010001001001111110011010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       01010001001001111110011010111010
          - S-Box Result:     10011010111011011100000010000100   [per every group of 4-bits]
          - Split Into Two:   1001101011101101 [L] 1100000010000100 [R]
          - Swap Halves:      11000000100001001001101011101101
          - Bit Inversion:    00111111011110110110010100010010
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     11111010110000100011011000110100

          - FUNCTION OUTPUT:  11111010110000100011011000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000110101100001001010000010

       - FUNCTION OUTPUT:          11111010110000100011011000110100

       - Left XOR FUNCTION OUTPUT: 00011010000101000010010010110110

       - Next Round Left 32 Bits:  01010001001001111110011010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010000101000010010010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001001001111110011010111010

       - Right 32 Bits:            00011010000101000010010010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       00011010000101000010010010110110
          - S-Box Result:     10100100101001111110011110000000   [per every group of 4-bits]
          - Split Into Two:   1010010010100111 [L] 1110011110000000 [R]
          - Swap Halves:      11100111100000001010010010100111
          - Bit Inversion:    00011000011111110101101101011000
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     01001110000101110011010100011100

          - FUNCTION OUTPUT:  01001110000101110011010100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001001001111110011010111010

       - FUNCTION OUTPUT:          01001110000101110011010100011100

       - Left XOR FUNCTION OUTPUT: 00011111001100001101001110100110

       - Next Round Left 32 Bits:  00011010000101000010010010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111001100001101001110100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010000101000010010010110110

       - Right 32 Bits:            00011111001100001101001110100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       00011111001100001101001110100110
          - S-Box Result:     10101011000111110110000101000000   [per every group of 4-bits]
          - Split Into Two:   1010101100011111 [L] 0110000101000000 [R]
          - Swap Halves:      01100001010000001010101100011111
          - Bit Inversion:    10011110101111110101010011100000
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     00010011010101111100010111110100

          - FUNCTION OUTPUT:  00010011010101111100010111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010000101000010010010110110

       - FUNCTION OUTPUT:          00010011010101111100010111110100

       - Left XOR FUNCTION OUTPUT: 00001001010000111110000101000010

       - Next Round Left 32 Bits:  00011111001100001101001110100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001010000111110000101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111001100001101001110100110

       - Right 32 Bits:            00001001010000111110000101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       00001001010000111110000101000010
          - S-Box Result:     11110011011100011100101001111110   [per every group of 4-bits]
          - Split Into Two:   1111001101110001 [L] 1100101001111110 [R]
          - Swap Halves:      11001010011111101111001101110001
          - Bit Inversion:    00110101100000010000110010001110
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     00100100111000100111111010000100

          - FUNCTION OUTPUT:  00100100111000100111111010000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111001100001101001110100110

       - FUNCTION OUTPUT:          00100100111000100111111010000100

       - Left XOR FUNCTION OUTPUT: 00111011110100101010110100100010

       - Next Round Left 32 Bits:  00001001010000111110000101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011110100101010110100100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001010000111110000101000010

       - Right 32 Bits:            00111011110100101010110100100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       00111011110100101010110100100010
          - S-Box Result:     00011000011011100100011011101110   [per every group of 4-bits]
          - Split Into Two:   0001100001101110 [L] 0100011011101110 [R]
          - Swap Halves:      01000110111011100001100001101110
          - Bit Inversion:    10111001000100011110011110010001
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     01011100011111010100110110110111

          - FUNCTION OUTPUT:  01011100011111010100110110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001010000111110000101000010

       - FUNCTION OUTPUT:          01011100011111010100110110110111

       - Left XOR FUNCTION OUTPUT: 01010101001111101010110011110101

       - Next Round Left 32 Bits:  00111011110100101010110100100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101001111101010110011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011110100101010110100100010

       - Right 32 Bits:            01010101001111101010110011110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       01010101001111101010110011110101
          - S-Box Result:     10011001000111000100010110111001   [per every group of 4-bits]
          - Split Into Two:   1001100100011100 [L] 0100010110111001 [R]
          - Swap Halves:      01000101101110011001100100011100
          - Bit Inversion:    10111010010001100110011011100011
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     00111011110111010101010010111011

          - FUNCTION OUTPUT:  00111011110111010101010010111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011110100101010110100100010

       - FUNCTION OUTPUT:          00111011110111010101010010111011

       - Left XOR FUNCTION OUTPUT: 00000000000011111111100110011001

       - Next Round Left 32 Bits:  01010101001111101010110011110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000000011111111100110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101001111101010110011110101

       - Right 32 Bits:            00000000000011111111100110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       00000000000011111111100110011001
          - S-Box Result:     11111111111110111011001100110011   [per every group of 4-bits]
          - Split Into Two:   1111111111111011 [L] 1011001100110011 [R]
          - Swap Halves:      10110011001100111111111111111011
          - Bit Inversion:    01001100110011000000000000000100
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     11101111101010110111000100110011

          - FUNCTION OUTPUT:  11101111101010110111000100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101001111101010110011110101

       - FUNCTION OUTPUT:          11101111101010110111000100110011

       - Left XOR FUNCTION OUTPUT: 10111010100101011101110111000110

       - Next Round Left 32 Bits:  00000000000011111111100110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010100101011101110111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000000011111111100110011001

       - Right 32 Bits:            10111010100101011101110111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       10111010100101011101110111000110
          - S-Box Result:     10000100001110010110011001010000   [per every group of 4-bits]
          - Split Into Two:   1000010000111001 [L] 0110011001010000 [R]
          - Swap Halves:      01100110010100001000010000111001
          - Bit Inversion:    10011001101011110111101111000110
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     00110101011101100100000110000000

          - FUNCTION OUTPUT:  00110101011101100100000110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000000011111111100110011001

       - FUNCTION OUTPUT:          00110101011101100100000110000000

       - Left XOR FUNCTION OUTPUT: 00110101011110011011100000011001

       - Next Round Left 32 Bits:  10111010100101011101110111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101011110011011100000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010100101011101110111000110

       - Right 32 Bits:            00110101011110011011100000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       00110101011110011011100000011001
          - S-Box Result:     00011001110100111000001010100011   [per every group of 4-bits]
          - Split Into Two:   0001100111010011 [L] 1000001010100011 [R]
          - Swap Halves:      10000010101000110001100111010011
          - Bit Inversion:    01111101010111001110011000101100
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     11101100111001110100111110111011

          - FUNCTION OUTPUT:  11101100111001110100111110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010100101011101110111000110

       - FUNCTION OUTPUT:          11101100111001110100111110111011

       - Left XOR FUNCTION OUTPUT: 01010110011100101001001001111101

       - Next Round Left 32 Bits:  00110101011110011011100000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110011100101001001001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101011110011011100000011001

       - Right 32 Bits:            01010110011100101001001001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       01010110011100101001001001111101
          - S-Box Result:     10010000110111100011111011010110   [per every group of 4-bits]
          - Split Into Two:   1001000011011110 [L] 0011111011010110 [R]
          - Swap Halves:      00111110110101101001000011011110
          - Bit Inversion:    11000001001010010110111100100001
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     10101111110000100001110100110110

          - FUNCTION OUTPUT:  10101111110000100001110100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101011110011011100000011001

       - FUNCTION OUTPUT:          10101111110000100001110100110110

       - Left XOR FUNCTION OUTPUT: 10011010101110111010010100101111

       - Next Round Left 32 Bits:  01010110011100101001001001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010101110111010010100101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110011100101001001001111101

       - Right 32 Bits:            10011010101110111010010100101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       10011010101110111010010100101111
          - S-Box Result:     00110100100010000100100111101011   [per every group of 4-bits]
          - Split Into Two:   0011010010001000 [L] 0100100111101011 [R]
          - Swap Halves:      01001001111010110011010010001000
          - Bit Inversion:    10110110000101001100101101110111
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     00111011111000010010010111101011

          - FUNCTION OUTPUT:  00111011111000010010010111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110011100101001001001111101

       - FUNCTION OUTPUT:          00111011111000010010010111101011

       - Left XOR FUNCTION OUTPUT: 01101101100100111011011110010110

       - Next Round Left 32 Bits:  10011010101110111010010100101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101100100111011011110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010101110111010010100101111

       - Right 32 Bits:            01101101100100111011011110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       01101101100100111011011110010110
          - S-Box Result:     00000110001100011000110100110000   [per every group of 4-bits]
          - Split Into Two:   0000011000110001 [L] 1000110100110000 [R]
          - Swap Halves:      10001101001100000000011000110001
          - Bit Inversion:    01110010110011111111100111001110
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     00100111000101101110001101011101

          - FUNCTION OUTPUT:  00100111000101101110001101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010101110111010010100101111

       - FUNCTION OUTPUT:          00100111000101101110001101011101

       - Left XOR FUNCTION OUTPUT: 10111101101011010100011001110010

       - Next Round Left 32 Bits:  01101101100100111011011110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101101011010100011001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101100100111011011110010110

       - Right 32 Bits:            10111101101011010100011001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       10111101101011010100011001110010
          - S-Box Result:     10000110010001100111000011011110   [per every group of 4-bits]
          - Split Into Two:   1000011001000110 [L] 0111000011011110 [R]
          - Swap Halves:      01110000110111101000011001000110
          - Bit Inversion:    10001111001000010111100110111001
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     01000010100001100000011111011101

          - FUNCTION OUTPUT:  01000010100001100000011111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101100100111011011110010110

       - FUNCTION OUTPUT:          01000010100001100000011111011101

       - Left XOR FUNCTION OUTPUT: 00101111000101011011000001001011

       - Next Round Left 32 Bits:  10111101101011010100011001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111000101011011000001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101101011010100011001110010

       - Right 32 Bits:            00101111000101011011000001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       00101111000101011011000001001011
          - S-Box Result:     11101011101010011000111101111000   [per every group of 4-bits]
          - Split Into Two:   1110101110101001 [L] 1000111101111000 [R]
          - Swap Halves:      10001111011110001110101110101001
          - Bit Inversion:    01110000100001110001010001010110
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     11111110010011110100100011001110

          - FUNCTION OUTPUT:  11111110010011110100100011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101101011010100011001110010

       - FUNCTION OUTPUT:          11111110010011110100100011001110

       - Left XOR FUNCTION OUTPUT: 01000011111000100000111010111100

       - Next Round Left 32 Bits:  00101111000101011011000001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011111000100000111010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100001111100010000011101011110000101111000101011011000001001011

 > Processed Block:     0100001111100010000011101011110000101111000101011011000001001011



Plaintext Block: 3:                                      0011110001100101101010011110111010101010001011010001011101001001

!!!CBC: Previous Ciphertext:                             0100001111100010000011101011110000101111000101011011000001001011

!!!CBC: Current Block XOR with Previous Ciphertext:      0111111110000111101001110101001010000101001110001010011100000010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111100001111010011101010010

       - Right 32 Bits:            10000101001110001010011100000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       10000101001110001010011100000010
          - S-Box Result:     00101001000100100100110111111110   [per every group of 4-bits]
          - Split Into Two:   0010100100010010 [L] 0100110111111110 [R]
          - Swap Halves:      01001101111111100010100100010010
          - Bit Inversion:    10110010000000011101011011101101
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     01111111101001101010100010001001

          - FUNCTION OUTPUT:  01111111101001101010100010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111100001111010011101010010

       - FUNCTION OUTPUT:          01111111101001101010100010001001

       - Left XOR FUNCTION OUTPUT: 00000000001000010000111111011011

       - Next Round Left 32 Bits:  10000101001110001010011100000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000001000010000111111011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101001110001010011100000010

       - Right 32 Bits:            00000000001000010000111111011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       00000000001000010000111111011011
          - S-Box Result:     11111111111010101111101101101000   [per every group of 4-bits]
          - Split Into Two:   1111111111101010 [L] 1111101101101000 [R]
          - Swap Halves:      11111011011010001111111111101010
          - Bit Inversion:    00000100100101110000000000010101
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     10001010010111110101110010001101

          - FUNCTION OUTPUT:  10001010010111110101110010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101001110001010011100000010

       - FUNCTION OUTPUT:          10001010010111110101110010001101

       - Left XOR FUNCTION OUTPUT: 00001111011001111111101110001111

       - Next Round Left 32 Bits:  00000000001000010000111111011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111011001111111101110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000001000010000111111011011

       - Right 32 Bits:            00001111011001111111101110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       00001111011001111111101110001111
          - S-Box Result:     11111011000011011011100000101011   [per every group of 4-bits]
          - Split Into Two:   1111101100001101 [L] 1011100000101011 [R]
          - Swap Halves:      10111000001010111111101100001101
          - Bit Inversion:    01000111110101000000010011110010
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     10000010011011010101011111010100

          - FUNCTION OUTPUT:  10000010011011010101011111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000001000010000111111011011

       - FUNCTION OUTPUT:          10000010011011010101011111010100

       - Left XOR FUNCTION OUTPUT: 10000010010011000101100000001111

       - Next Round Left 32 Bits:  00001111011001111111101110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010010011000101100000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001111011001111111101110001111

       - Right 32 Bits:            10000010010011000101100000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       10000010010011000101100000001111
          - S-Box Result:     00101110011101011001001011111011   [per every group of 4-bits]
          - Split Into Two:   0010111001110101 [L] 1001001011111011 [R]
          - Swap Halves:      10010010111110110010111001110101
          - Bit Inversion:    01101101000001001101000110001010
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     00111011011011001011111111001110

          - FUNCTION OUTPUT:  00111011011011001011111111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001111011001111111101110001111

       - FUNCTION OUTPUT:          00111011011011001011111111001110

       - Left XOR FUNCTION OUTPUT: 00110100000010110100010001000001

       - Next Round Left 32 Bits:  10000010010011000101100000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100000010110100010001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010010011000101100000001111

       - Right 32 Bits:            00110100000010110100010001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       00110100000010110100010001000001
          - S-Box Result:     00010111111110000111011101111010   [per every group of 4-bits]
          - Split Into Two:   0001011111111000 [L] 0111011101111010 [R]
          - Swap Halves:      01110111011110100001011111111000
          - Bit Inversion:    10001000100001011110100000000111
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     00000101011011010111100100010011

          - FUNCTION OUTPUT:  00000101011011010111100100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010010011000101100000001111

       - FUNCTION OUTPUT:          00000101011011010111100100010011

       - Left XOR FUNCTION OUTPUT: 10000111001000010010000100011100

       - Next Round Left 32 Bits:  00110100000010110100010001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111001000010010000100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100000010110100010001000001

       - Right 32 Bits:            10000111001000010010000100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       10000111001000010010000100011100
          - S-Box Result:     00101101111010101110101010100101   [per every group of 4-bits]
          - Split Into Two:   0010110111101010 [L] 1110101010100101 [R]
          - Swap Halves:      11101010101001010010110111101010
          - Bit Inversion:    00010101010110101101001000010101
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     00000100001110011010000000011111

          - FUNCTION OUTPUT:  00000100001110011010000000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100000010110100010001000001

       - FUNCTION OUTPUT:          00000100001110011010000000011111

       - Left XOR FUNCTION OUTPUT: 00110000001100101110010001011110

       - Next Round Left 32 Bits:  10000111001000010010000100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000001100101110010001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111001000010010000100011100

       - Right 32 Bits:            00110000001100101110010001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       00110000001100101110010001011110
          - S-Box Result:     00011111000111101100011110011100   [per every group of 4-bits]
          - Split Into Two:   0001111100011110 [L] 1100011110011100 [R]
          - Swap Halves:      11000111100111000001111100011110
          - Bit Inversion:    00111000011000111110000011100001
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     11011101000011110100101011000111

          - FUNCTION OUTPUT:  11011101000011110100101011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111001000010010000100011100

       - FUNCTION OUTPUT:          11011101000011110100101011000111

       - Left XOR FUNCTION OUTPUT: 01011010001011100110101111011011

       - Next Round Left 32 Bits:  00110000001100101110010001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010001011100110101111011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000001100101110010001011110

       - Right 32 Bits:            01011010001011100110101111011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       01011010001011100110101111011011
          - S-Box Result:     10010100111011000000100001101000   [per every group of 4-bits]
          - Split Into Two:   1001010011101100 [L] 0000100001101000 [R]
          - Swap Halves:      00001000011010001001010011101100
          - Bit Inversion:    11110111100101110110101100010011
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     01110110000011000101100101001011

          - FUNCTION OUTPUT:  01110110000011000101100101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000001100101110010001011110

       - FUNCTION OUTPUT:          01110110000011000101100101001011

       - Left XOR FUNCTION OUTPUT: 01000110001111101011110100010101

       - Next Round Left 32 Bits:  01011010001011100110101111011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110001111101011110100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010001011100110101111011011

       - Right 32 Bits:            01000110001111101011110100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       01000110001111101011110100010101
          - S-Box Result:     01110000000111001000011010101001   [per every group of 4-bits]
          - Split Into Two:   0111000000011100 [L] 1000011010101001 [R]
          - Swap Halves:      10000110101010010111000000011100
          - Bit Inversion:    01111001010101101000111111100011
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     11011010001100011111111011010100

          - FUNCTION OUTPUT:  11011010001100011111111011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010001011100110101111011011

       - FUNCTION OUTPUT:          11011010001100011111111011010100

       - Left XOR FUNCTION OUTPUT: 10000000000111111001010100001111

       - Next Round Left 32 Bits:  01000110001111101011110100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000000111111001010100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110001111101011110100010101

       - Right 32 Bits:            10000000000111111001010100001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       10000000000111111001010100001111
          - S-Box Result:     00101111101010110011100111111011   [per every group of 4-bits]
          - Split Into Two:   0010111110101011 [L] 0011100111111011 [R]
          - Swap Halves:      00111001111110110010111110101011
          - Bit Inversion:    11000110000001001101000001010100
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     01101010110111011110101000010010

          - FUNCTION OUTPUT:  01101010110111011110101000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110001111101011110100010101

       - FUNCTION OUTPUT:          01101010110111011110101000010010

       - Left XOR FUNCTION OUTPUT: 00101100111000110101011100000111

       - Next Round Left 32 Bits:  10000000000111111001010100001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100111000110101011100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000000111111001010100001111

       - Right 32 Bits:            00101100111000110101011100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       00101100111000110101011100000111
          - S-Box Result:     11100101110000011001110111111101   [per every group of 4-bits]
          - Split Into Two:   1110010111000001 [L] 1001110111111101 [R]
          - Swap Halves:      10011101111111011110010111000001
          - Bit Inversion:    01100010000000100001101000111110
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     11110011101110011011001110101001

          - FUNCTION OUTPUT:  11110011101110011011001110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000000111111001010100001111

       - FUNCTION OUTPUT:          11110011101110011011001110101001

       - Left XOR FUNCTION OUTPUT: 01110011101001100010011010100110

       - Next Round Left 32 Bits:  00101100111000110101011100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011101001100010011010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100111000110101011100000111

       - Right 32 Bits:            01110011101001100010011010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       01110011101001100010011010100110
          - S-Box Result:     11010001010000001110000001000000   [per every group of 4-bits]
          - Split Into Two:   1101000101000000 [L] 1110000001000000 [R]
          - Swap Halves:      11100000010000001101000101000000
          - Bit Inversion:    00011111101111110010111010111111
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     01110001010101000101110010101000

          - FUNCTION OUTPUT:  01110001010101000101110010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100111000110101011100000111

       - FUNCTION OUTPUT:          01110001010101000101110010101000

       - Left XOR FUNCTION OUTPUT: 01011101101101110000101110101111

       - Next Round Left 32 Bits:  01110011101001100010011010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101101101110000101110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011101001100010011010100110

       - Right 32 Bits:            01011101101101110000101110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       01011101101101110000101110101111
          - S-Box Result:     10010110100011011111100001001011   [per every group of 4-bits]
          - Split Into Two:   1001011010001101 [L] 1111100001001011 [R]
          - Swap Halves:      11111000010010111001011010001101
          - Bit Inversion:    00000111101101000110100101110010
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     10001010010000011000011111101110

          - FUNCTION OUTPUT:  10001010010000011000011111101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011101001100010011010100110

       - FUNCTION OUTPUT:          10001010010000011000011111101110

       - Left XOR FUNCTION OUTPUT: 11111001111001111010000101001000

       - Next Round Left 32 Bits:  01011101101101110000101110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001111001111010000101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101101101110000101110101111

       - Right 32 Bits:            11111001111001111010000101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       11111001111001111010000101001000
          - S-Box Result:     10110011110011010100101001110010   [per every group of 4-bits]
          - Split Into Two:   1011001111001101 [L] 0100101001110010 [R]
          - Swap Halves:      01001010011100101011001111001101
          - Bit Inversion:    10110101100011010100110000110010
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     11100000010101000101011010100001

          - FUNCTION OUTPUT:  11100000010101000101011010100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101101101110000101110101111

       - FUNCTION OUTPUT:          11100000010101000101011010100001

       - Left XOR FUNCTION OUTPUT: 10111101111000110101110100001110

       - Next Round Left 32 Bits:  11111001111001111010000101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101111000110101110100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001111001111010000101001000

       - Right 32 Bits:            10111101111000110101110100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       10111101111000110101110100001110
          - S-Box Result:     10000110110000011001011011111100   [per every group of 4-bits]
          - Split Into Two:   1000011011000001 [L] 1001011011111100 [R]
          - Swap Halves:      10010110111111001000011011000001
          - Bit Inversion:    01101001000000110111100100111110
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10100100101001000000011101011010

          - FUNCTION OUTPUT:  10100100101001000000011101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001111001111010000101001000

       - FUNCTION OUTPUT:          10100100101001000000011101011010

       - Left XOR FUNCTION OUTPUT: 01011101010000111010011000010010

       - Next Round Left 32 Bits:  10111101111000110101110100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101010000111010011000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101111000110101110100001110

       - Right 32 Bits:            01011101010000111010011000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       01011101010000111010011000010010
          - S-Box Result:     10010110011100010100000010101110   [per every group of 4-bits]
          - Split Into Two:   1001011001110001 [L] 0100000010101110 [R]
          - Swap Halves:      01000000101011101001011001110001
          - Bit Inversion:    10111111010100010110100110001110
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00110001100110010011010100010110

          - FUNCTION OUTPUT:  00110001100110010011010100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101111000110101110100001110

       - FUNCTION OUTPUT:          00110001100110010011010100010110

       - Left XOR FUNCTION OUTPUT: 10001100011110100110100000011000

       - Next Round Left 32 Bits:  01011101010000111010011000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100011110100110100000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000110001111010011010000001100001011101010000111010011000010010

 > Processed Block:     1000110001111010011010000001100001011101010000111010011000010010



Plaintext Block: 4:                                      1101111000001100011111110101001000100000100100000010010100100001

!!!CBC: Previous Ciphertext:                             1000110001111010011010000001100001011101010000111010011000010010

!!!CBC: Current Block XOR with Previous Ciphertext:      0101001001110110000101110100101001111101110100111000001100110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010011101100001011101001010

       - Right 32 Bits:            01111101110100111000001100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       01111101110100111000001100110011
          - S-Box Result:     11010110011000010010000100010001   [per every group of 4-bits]
          - Split Into Two:   1101011001100001 [L] 0010000100010001 [R]
          - Swap Halves:      00100001000100011101011001100001
          - Bit Inversion:    11011110111011100010100110011110
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     00010011010010010101011111111010

          - FUNCTION OUTPUT:  00010011010010010101011111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010011101100001011101001010

       - FUNCTION OUTPUT:          00010011010010010101011111111010

       - Left XOR FUNCTION OUTPUT: 01000001001111110100000010110000

       - Next Round Left 32 Bits:  01111101110100111000001100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001001111110100000010110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101110100111000001100110011

       - Right 32 Bits:            01000001001111110100000010110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       01000001001111110100000010110000
          - S-Box Result:     01111010000110110111111110001111   [per every group of 4-bits]
          - Split Into Two:   0111101000011011 [L] 0111111110001111 [R]
          - Swap Halves:      01111111100011110111101000011011
          - Bit Inversion:    10000000011100001000010111100100
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00001110101110001101100101111100

          - FUNCTION OUTPUT:  00001110101110001101100101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101110100111000001100110011

       - FUNCTION OUTPUT:          00001110101110001101100101111100

       - Left XOR FUNCTION OUTPUT: 01110011011010110101101001001111

       - Next Round Left 32 Bits:  01000001001111110100000010110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011011010110101101001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001001111110100000010110000

       - Right 32 Bits:            01110011011010110101101001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       01110011011010110101101001001111
          - S-Box Result:     11010001000010001001010001111011   [per every group of 4-bits]
          - Split Into Two:   1101000100001000 [L] 1001010001111011 [R]
          - Swap Halves:      10010100011110111101000100001000
          - Bit Inversion:    01101011100001000010111011110111
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     10101110001111010111110111010001

          - FUNCTION OUTPUT:  10101110001111010111110111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001001111110100000010110000

       - FUNCTION OUTPUT:          10101110001111010111110111010001

       - Left XOR FUNCTION OUTPUT: 11101111000000100011110101100001

       - Next Round Left 32 Bits:  01110011011010110101101001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111000000100011110101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011011010110101101001001111

       - Right 32 Bits:            11101111000000100011110101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       11101111000000100011110101100001
          - S-Box Result:     11001011111111100001011000001010   [per every group of 4-bits]
          - Split Into Two:   1100101111111110 [L] 0001011000001010 [R]
          - Swap Halves:      00010110000010101100101111111110
          - Bit Inversion:    11101001111101010011010000000001
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     10111111100111010101101001000101

          - FUNCTION OUTPUT:  10111111100111010101101001000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011011010110101101001001111

       - FUNCTION OUTPUT:          10111111100111010101101001000101

       - Left XOR FUNCTION OUTPUT: 11001100111101100000000000001010

       - Next Round Left 32 Bits:  11101111000000100011110101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100111101100000000000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111000000100011110101100001

       - Right 32 Bits:            11001100111101100000000000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       11001100111101100000000000001010
          - S-Box Result:     01010101101100001111111111110100   [per every group of 4-bits]
          - Split Into Two:   0101010110110000 [L] 1111111111110100 [R]
          - Swap Halves:      11111111111101000101010110110000
          - Bit Inversion:    00000000000010111010101001001111
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     10001101111000110011101101011011

          - FUNCTION OUTPUT:  10001101111000110011101101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111000000100011110101100001

       - FUNCTION OUTPUT:          10001101111000110011101101011011

       - Left XOR FUNCTION OUTPUT: 01100010111000010000011000111010

       - Next Round Left 32 Bits:  11001100111101100000000000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010111000010000011000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100111101100000000000001010

       - Right 32 Bits:            01100010111000010000011000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       01100010111000010000011000111010
          - S-Box Result:     00001110110010101111000000010100   [per every group of 4-bits]
          - Split Into Two:   0000111011001010 [L] 1111000000010100 [R]
          - Swap Halves:      11110000000101000000111011001010
          - Bit Inversion:    00001111111010111111000100110101
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     00011110100010001000001100111111

          - FUNCTION OUTPUT:  00011110100010001000001100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100111101100000000000001010

       - FUNCTION OUTPUT:          00011110100010001000001100111111

       - Left XOR FUNCTION OUTPUT: 11010010011111101000001100110101

       - Next Round Left 32 Bits:  01100010111000010000011000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010011111101000001100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010111000010000011000111010

       - Right 32 Bits:            11010010011111101000001100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       11010010011111101000001100110101
          - S-Box Result:     01101110110111000010000100011001   [per every group of 4-bits]
          - Split Into Two:   0110111011011100 [L] 0010000100011001 [R]
          - Swap Halves:      00100001000110010110111011011100
          - Bit Inversion:    11011110111001101001000100100011
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     00111011100010100011101100000101

          - FUNCTION OUTPUT:  00111011100010100011101100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010111000010000011000111010

       - FUNCTION OUTPUT:          00111011100010100011101100000101

       - Left XOR FUNCTION OUTPUT: 01011001011010110011110100111111

       - Next Round Left 32 Bits:  11010010011111101000001100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001011010110011110100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010011111101000001100110101

       - Right 32 Bits:            01011001011010110011110100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       01011001011010110011110100111111
          - S-Box Result:     10010011000010000001011000011011   [per every group of 4-bits]
          - Split Into Two:   1001001100001000 [L] 0001011000011011 [R]
          - Swap Halves:      00010110000110111001001100001000
          - Bit Inversion:    11101001111001000110110011110111
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     01101000011111110101111010101111

          - FUNCTION OUTPUT:  01101000011111110101111010101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010011111101000001100110101

       - FUNCTION OUTPUT:          01101000011111110101111010101111

       - Left XOR FUNCTION OUTPUT: 10111010000000011101110110011010

       - Next Round Left 32 Bits:  01011001011010110011110100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010000000011101110110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001011010110011110100111111

       - Right 32 Bits:            10111010000000011101110110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       10111010000000011101110110011010
          - S-Box Result:     10000100111110100110011000110100   [per every group of 4-bits]
          - Split Into Two:   1000010011111010 [L] 0110011000110100 [R]
          - Swap Halves:      01100110001101001000010011111010
          - Bit Inversion:    10011001110010110111101100000101
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     00111010101011000000101000110010

          - FUNCTION OUTPUT:  00111010101011000000101000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001011010110011110100111111

       - FUNCTION OUTPUT:          00111010101011000000101000110010

       - Left XOR FUNCTION OUTPUT: 01100011110001110011011100001101

       - Next Round Left 32 Bits:  10111010000000011101110110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011110001110011011100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010000000011101110110011010

       - Right 32 Bits:            01100011110001110011011100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       01100011110001110011011100001101
          - S-Box Result:     00000001010111010001110111110110   [per every group of 4-bits]
          - Split Into Two:   0000000101011101 [L] 0001110111110110 [R]
          - Swap Halves:      00011101111101100000000101011101
          - Bit Inversion:    11100010000010011111111010100010
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     01001110110100001100010011100100

          - FUNCTION OUTPUT:  01001110110100001100010011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010000000011101110110011010

       - FUNCTION OUTPUT:          01001110110100001100010011100100

       - Left XOR FUNCTION OUTPUT: 11110100110100010001100101111110

       - Next Round Left 32 Bits:  01100011110001110011011100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100110100010001100101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011110001110011011100001101

       - Right 32 Bits:            11110100110100010001100101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       11110100110100010001100101111110
          - S-Box Result:     10110111011010101010001111011100   [per every group of 4-bits]
          - Split Into Two:   1011011101101010 [L] 1010001111011100 [R]
          - Swap Halves:      10100011110111001011011101101010
          - Bit Inversion:    01011100001000110100100010010101
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     11001101100110001110000100000010

          - FUNCTION OUTPUT:  11001101100110001110000100000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011110001110011011100001101

       - FUNCTION OUTPUT:          11001101100110001110000100000010

       - Left XOR FUNCTION OUTPUT: 10101110010111111101011000001111

       - Next Round Left 32 Bits:  11110100110100010001100101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110010111111101011000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100110100010001100101111110

       - Right 32 Bits:            10101110010111111101011000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       10101110010111111101011000001111
          - S-Box Result:     01001100100110110110000011111011   [per every group of 4-bits]
          - Split Into Two:   0100110010011011 [L] 0110000011111011 [R]
          - Swap Halves:      01100000111110110100110010011011
          - Bit Inversion:    10011111000001001011001101100100
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     11110001111011111100000101110011

          - FUNCTION OUTPUT:  11110001111011111100000101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100110100010001100101111110

       - FUNCTION OUTPUT:          11110001111011111100000101110011

       - Left XOR FUNCTION OUTPUT: 00000101001111101101100000001101

       - Next Round Left 32 Bits:  10101110010111111101011000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101001111101101100000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110010111111101011000001111

       - Right 32 Bits:            00000101001111101101100000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       00000101001111101101100000001101
          - S-Box Result:     11111001000111000110001011110110   [per every group of 4-bits]
          - Split Into Two:   1111100100011100 [L] 0110001011110110 [R]
          - Swap Halves:      01100010111101101111100100011100
          - Bit Inversion:    10011101000010010000011011100011
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     00010000111111001110100001111111

          - FUNCTION OUTPUT:  00010000111111001110100001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110010111111101011000001111

       - FUNCTION OUTPUT:          00010000111111001110100001111111

       - Left XOR FUNCTION OUTPUT: 10111110101000110011111001110000

       - Next Round Left 32 Bits:  00000101001111101101100000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110101000110011111001110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101001111101101100000001101

       - Right 32 Bits:            10111110101000110011111001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       10111110101000110011111001110000
          - S-Box Result:     10001100010000010001110011011111   [per every group of 4-bits]
          - Split Into Two:   1000110001000001 [L] 0001110011011111 [R]
          - Swap Halves:      00011100110111111000110001000001
          - Bit Inversion:    11100011001000000111001110111110
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     10110110111110010110100100101101

          - FUNCTION OUTPUT:  10110110111110010110100100101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101001111101101100000001101

       - FUNCTION OUTPUT:          10110110111110010110100100101101

       - Left XOR FUNCTION OUTPUT: 10110011110001111011000100100000

       - Next Round Left 32 Bits:  10111110101000110011111001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011110001111011000100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110101000110011111001110000

       - Right 32 Bits:            10110011110001111011000100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       10110011110001111011000100100000
          - S-Box Result:     10000001010111011000101011101111   [per every group of 4-bits]
          - Split Into Two:   1000000101011101 [L] 1000101011101111 [R]
          - Swap Halves:      10001010111011111000000101011101
          - Bit Inversion:    01110101000100000111111010100010
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10111000101101110000000011000110

          - FUNCTION OUTPUT:  10111000101101110000000011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110101000110011111001110000

       - FUNCTION OUTPUT:          10111000101101110000000011000110

       - Left XOR FUNCTION OUTPUT: 00000110000101000011111010110110

       - Next Round Left 32 Bits:  10110011110001111011000100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110000101000011111010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011110001111011000100100000

       - Right 32 Bits:            00000110000101000011111010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       00000110000101000011111010110110
          - S-Box Result:     11110000101001110001110010000000   [per every group of 4-bits]
          - Split Into Two:   1111000010100111 [L] 0001110010000000 [R]
          - Swap Halves:      00011100100000001111000010100111
          - Bit Inversion:    11100011011111110000111101011000
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     01101101101101110101001111000000

          - FUNCTION OUTPUT:  01101101101101110101001111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011110001111011000100100000

       - FUNCTION OUTPUT:          01101101101101110101001111000000

       - Left XOR FUNCTION OUTPUT: 11011110011100001110001011100000

       - Next Round Left 32 Bits:  00000110000101000011111010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110011100001110001011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101111001110000111000101110000000000110000101000011111010110110

 > Processed Block:     1101111001110000111000101110000000000110000101000011111010110110



Plaintext Block: 5:                                      1101010101001111100101001111000111110010011101010111000101101110

!!!CBC: Previous Ciphertext:                             1101111001110000111000101110000000000110000101000011111010110110

!!!CBC: Current Block XOR with Previous Ciphertext:      0000101100111111011101100001000111110100011000010100111111011000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011001111110111011000010001

       - Right 32 Bits:            11110100011000010100111111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       11110100011000010100111111011000
          - S-Box Result:     10110111000010100111101101100010   [per every group of 4-bits]
          - Split Into Two:   1011011100001010 [L] 0111101101100010 [R]
          - Swap Halves:      01111011011000101011011100001010
          - Bit Inversion:    10000100100111010100100011110101
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     01001001001110100011011010010001

          - FUNCTION OUTPUT:  01001001001110100011011010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011001111110111011000010001

       - FUNCTION OUTPUT:          01001001001110100011011010010001

       - Left XOR FUNCTION OUTPUT: 01000010000001010100000010000000

       - Next Round Left 32 Bits:  11110100011000010100111111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010000001010100000010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100011000010100111111011000

       - Right 32 Bits:            01000010000001010100000010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       01000010000001010100000010000000
          - S-Box Result:     01111110111110010111111100101111   [per every group of 4-bits]
          - Split Into Two:   0111111011111001 [L] 0111111100101111 [R]
          - Swap Halves:      01111111001011110111111011111001
          - Bit Inversion:    10000000110100001000000100000110
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00001110000110001101110110011110

          - FUNCTION OUTPUT:  00001110000110001101110110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100011000010100111111011000

       - FUNCTION OUTPUT:          00001110000110001101110110011110

       - Left XOR FUNCTION OUTPUT: 11111010011110011001001001000110

       - Next Round Left 32 Bits:  01000010000001010100000010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010011110011001001001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010000001010100000010000000

       - Right 32 Bits:            11111010011110011001001001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       11111010011110011001001001000110
          - S-Box Result:     10110100110100110011111001110000   [per every group of 4-bits]
          - Split Into Two:   1011010011010011 [L] 0011111001110000 [R]
          - Swap Halves:      00111110011100001011010011010011
          - Bit Inversion:    11000001100011110100101100101100
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     00000100001101100001100000001010

          - FUNCTION OUTPUT:  00000100001101100001100000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010000001010100000010000000

       - FUNCTION OUTPUT:          00000100001101100001100000001010

       - Left XOR FUNCTION OUTPUT: 01000110001100110101100010001010

       - Next Round Left 32 Bits:  11111010011110011001001001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110001100110101100010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010011110011001001001000110

       - Right 32 Bits:            01000110001100110101100010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       01000110001100110101100010001010
          - S-Box Result:     01110000000100011001001000100100   [per every group of 4-bits]
          - Split Into Two:   0111000000010001 [L] 1001001000100100 [R]
          - Swap Halves:      10010010001001000111000000010001
          - Bit Inversion:    01101101110110111000111111101110
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     00111011101100111110000110101010

          - FUNCTION OUTPUT:  00111011101100111110000110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010011110011001001001000110

       - FUNCTION OUTPUT:          00111011101100111110000110101010

       - Left XOR FUNCTION OUTPUT: 11000001110010100111001111101100

       - Next Round Left 32 Bits:  01000110001100110101100010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110010100111001111101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110001100110101100010001010

       - Right 32 Bits:            11000001110010100111001111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       11000001110010100111001111101100
          - S-Box Result:     01011010010101001101000111000101   [per every group of 4-bits]
          - Split Into Two:   0101101001010100 [L] 1101000111000101 [R]
          - Swap Halves:      11010001110001010101101001010100
          - Bit Inversion:    00101110001110101010010110101011
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     10100011110100100011010010111111

          - FUNCTION OUTPUT:  10100011110100100011010010111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110001100110101100010001010

       - FUNCTION OUTPUT:          10100011110100100011010010111111

       - Left XOR FUNCTION OUTPUT: 11100101111000010110110000110101

       - Next Round Left 32 Bits:  11000001110010100111001111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101111000010110110000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001110010100111001111101100

       - Right 32 Bits:            11100101111000010110110000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       11100101111000010110110000110101
          - S-Box Result:     11001001110010100000010100011001   [per every group of 4-bits]
          - Split Into Two:   1100100111001010 [L] 0000010100011001 [R]
          - Swap Halves:      00000101000110011100100111001010
          - Bit Inversion:    11111010111001100011011000110101
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     11101011100001010100010000111111

          - FUNCTION OUTPUT:  11101011100001010100010000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001110010100111001111101100

       - FUNCTION OUTPUT:          11101011100001010100010000111111

       - Left XOR FUNCTION OUTPUT: 00101010010011110011011111010011

       - Next Round Left 32 Bits:  11100101111000010110110000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010010011110011011111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101111000010110110000110101

       - Right 32 Bits:            00101010010011110011011111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       00101010010011110011011111010011
          - S-Box Result:     11100100011110110001110101100001   [per every group of 4-bits]
          - Split Into Two:   1110010001111011 [L] 0001110101100001 [R]
          - Swap Halves:      00011101011000011110010001111011
          - Bit Inversion:    11100010100111100001101110000100
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     00000111111100101011000110100010

          - FUNCTION OUTPUT:  00000111111100101011000110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101111000010110110000110101

       - FUNCTION OUTPUT:          00000111111100101011000110100010

       - Left XOR FUNCTION OUTPUT: 11100010000100111101110110010111

       - Next Round Left 32 Bits:  00101010010011110011011111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010000100111101110110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010010011110011011111010011

       - Right 32 Bits:            11100010000100111101110110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       11100010000100111101110110010111
          - S-Box Result:     11001110101000010110011000111101   [per every group of 4-bits]
          - Split Into Two:   1100111010100001 [L] 0110011000111101 [R]
          - Swap Halves:      01100110001111011100111010100001
          - Bit Inversion:    10011001110000100011000101011110
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     00011000010110010000001100000110

          - FUNCTION OUTPUT:  00011000010110010000001100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010010011110011011111010011

       - FUNCTION OUTPUT:          00011000010110010000001100000110

       - Left XOR FUNCTION OUTPUT: 00110010000101100011010011010101

       - Next Round Left 32 Bits:  11100010000100111101110110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010000101100011010011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010000100111101110110010111

       - Right 32 Bits:            00110010000101100011010011010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       00110010000101100011010011010101
          - S-Box Result:     00011110101000000001011101101001   [per every group of 4-bits]
          - Split Into Two:   0001111010100000 [L] 0001011101101001 [R]
          - Swap Halves:      00010111011010010001111010100000
          - Bit Inversion:    11101000100101101110000101011111
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     01001011111100011001000001101000

          - FUNCTION OUTPUT:  01001011111100011001000001101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010000100111101110110010111

       - FUNCTION OUTPUT:          01001011111100011001000001101000

       - Left XOR FUNCTION OUTPUT: 10101001111000100100110111111111

       - Next Round Left 32 Bits:  00110010000101100011010011010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001111000100100110111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010000101100011010011010101

       - Right 32 Bits:            10101001111000100100110111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       10101001111000100100110111111111
          - S-Box Result:     01000011110011100111011010111011   [per every group of 4-bits]
          - Split Into Two:   0100001111001110 [L] 0111011010111011 [R]
          - Swap Halves:      01110110101110110100001111001110
          - Bit Inversion:    10001001010001001011110000110001
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     00100101100111011000011001110111

          - FUNCTION OUTPUT:  00100101100111011000011001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010000101100011010011010101

       - FUNCTION OUTPUT:          00100101100111011000011001110111

       - Left XOR FUNCTION OUTPUT: 00010111100010111011001010100010

       - Next Round Left 32 Bits:  10101001111000100100110111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111100010111011001010100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001111000100100110111111111

       - Right 32 Bits:            00010111100010111011001010100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       00010111100010111011001010100010
          - S-Box Result:     10101101001010001000111001001110   [per every group of 4-bits]
          - Split Into Two:   1010110100101000 [L] 1000111001001110 [R]
          - Swap Halves:      10001110010011101010110100101000
          - Bit Inversion:    01110001101100010101001011010111
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     11100000000010101111101101000000

          - FUNCTION OUTPUT:  11100000000010101111101101000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001111000100100110111111111

       - FUNCTION OUTPUT:          11100000000010101111101101000000

       - Left XOR FUNCTION OUTPUT: 01001001111010001011011010111111

       - Next Round Left 32 Bits:  00010111100010111011001010100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001111010001011011010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111100010111011001010100010

       - Right 32 Bits:            01001001111010001011011010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       01001001111010001011011010111111
          - S-Box Result:     01110011110000101000000010001011   [per every group of 4-bits]
          - Split Into Two:   0111001111000010 [L] 1000000010001011 [R]
          - Swap Halves:      10000000100010110111001111000010
          - Bit Inversion:    01111111011101001000110000111101
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     00010001100111111111111000101010

          - FUNCTION OUTPUT:  00010001100111111111111000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111100010111011001010100010

       - FUNCTION OUTPUT:          00010001100111111111111000101010

       - Left XOR FUNCTION OUTPUT: 00000110000101000100110010001000

       - Next Round Left 32 Bits:  01001001111010001011011010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110000101000100110010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001111010001011011010111111

       - Right 32 Bits:            00000110000101000100110010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       00000110000101000100110010001000
          - S-Box Result:     11110000101001110111010100100010   [per every group of 4-bits]
          - Split Into Two:   1111000010100111 [L] 0111010100100010 [R]
          - Swap Halves:      01110101001000101111000010100111
          - Bit Inversion:    10001010110111010000111101011000
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     00000111001010001110000111000100

          - FUNCTION OUTPUT:  00000111001010001110000111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001111010001011011010111111

       - FUNCTION OUTPUT:          00000111001010001110000111000100

       - Left XOR FUNCTION OUTPUT: 01001110110000000101011101111011

       - Next Round Left 32 Bits:  00000110000101000100110010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110110000000101011101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110000101000100110010001000

       - Right 32 Bits:            01001110110000000101011101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       01001110110000000101011101111011
          - S-Box Result:     01111100010111111001110111011000   [per every group of 4-bits]
          - Split Into Two:   0111110001011111 [L] 1001110111011000 [R]
          - Swap Halves:      10011101110110000111110001011111
          - Bit Inversion:    01100010001001111000001110100000
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     00110111111111101001100100110011

          - FUNCTION OUTPUT:  00110111111111101001100100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110000101000100110010001000

       - FUNCTION OUTPUT:          00110111111111101001100100110011

       - Left XOR FUNCTION OUTPUT: 00110001111010101101010110111011

       - Next Round Left 32 Bits:  01001110110000000101011101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001111010101101010110111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110110000000101011101111011

       - Right 32 Bits:            00110001111010101101010110111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       00110001111010101101010110111011
          - S-Box Result:     00011010110001000110100110001000   [per every group of 4-bits]
          - Split Into Two:   0001101011000100 [L] 0110100110001000 [R]
          - Swap Halves:      01101001100010000001101011000100
          - Bit Inversion:    10010110011101111110010100111011
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     01011011110100001001101101011111

          - FUNCTION OUTPUT:  01011011110100001001101101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110110000000101011101111011

       - FUNCTION OUTPUT:          01011011110100001001101101011111

       - Left XOR FUNCTION OUTPUT: 00010101000100001100110000100100

       - Next Round Left 32 Bits:  00110001111010101101010110111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101000100001100110000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001111010101101010110111011

       - Right 32 Bits:            00010101000100001100110000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       00010101000100001100110000100100
          - S-Box Result:     10101001101011110101010111100111   [per every group of 4-bits]
          - Split Into Two:   1010100110101111 [L] 0101010111100111 [R]
          - Swap Halves:      01010101111001111010100110101111
          - Bit Inversion:    10101010000110000101011001010000
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00100100110100000000101011001000

          - FUNCTION OUTPUT:  00100100110100000000101011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001111010101101010110111011

       - FUNCTION OUTPUT:          00100100110100000000101011001000

       - Left XOR FUNCTION OUTPUT: 00010101001110101101111101110011

       - Next Round Left 32 Bits:  00010101000100001100110000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101001110101101111101110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001010100111010110111110111001100010101000100001100110000100100

 > Processed Block:     0001010100111010110111110111001100010101000100001100110000100100



Plaintext Block: 6:                                      0100101110101111011010001110100000011000110111110011000101010111

!!!CBC: Previous Ciphertext:                             0001010100111010110111110111001100010101000100001100110000100100

!!!CBC: Current Block XOR with Previous Ciphertext:      0101111010010101101101111001101100001101110011111111110101110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100101011011011110011011

       - Right 32 Bits:            00001101110011111111110101110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       00001101110011111111110101110011
          - S-Box Result:     11110110010110111011011011010001   [per every group of 4-bits]
          - Split Into Two:   1111011001011011 [L] 1011011011010001 [R]
          - Swap Halves:      10110110110100011111011001011011
          - Bit Inversion:    01001001001011100000100110100100
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10000100100010010111011111000000

          - FUNCTION OUTPUT:  10000100100010010111011111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100101011011011110011011

       - FUNCTION OUTPUT:          10000100100010010111011111000000

       - Left XOR FUNCTION OUTPUT: 11011010000111001100000001011011

       - Next Round Left 32 Bits:  00001101110011111111110101110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010000111001100000001011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101110011111111110101110011

       - Right 32 Bits:            11011010000111001100000001011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       11011010000111001100000001011011
          - S-Box Result:     01100100101001010101111110011000   [per every group of 4-bits]
          - Split Into Two:   0110010010100101 [L] 0101111110011000 [R]
          - Swap Halves:      01011111100110000110010010100101
          - Bit Inversion:    10100000011001111001101101011010
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00101110101011111100011111000010

          - FUNCTION OUTPUT:  00101110101011111100011111000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101110011111111110101110011

       - FUNCTION OUTPUT:          00101110101011111100011111000010

       - Left XOR FUNCTION OUTPUT: 00100011011000000011101010110001

       - Next Round Left 32 Bits:  11011010000111001100000001011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011011000000011101010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010000111001100000001011011

       - Right 32 Bits:            00100011011000000011101010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       00100011011000000011101010110001
          - S-Box Result:     11100001000011110001010010001010   [per every group of 4-bits]
          - Split Into Two:   1110000100001111 [L] 0001010010001010 [R]
          - Swap Halves:      00010100100010101110000100001111
          - Bit Inversion:    11101011011101010001111011110000
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     00101110110011000100110111010110

          - FUNCTION OUTPUT:  00101110110011000100110111010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010000111001100000001011011

       - FUNCTION OUTPUT:          00101110110011000100110111010110

       - Left XOR FUNCTION OUTPUT: 11110100110100001000110110001101

       - Next Round Left 32 Bits:  00100011011000000011101010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100110100001000110110001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011011000000011101010110001

       - Right 32 Bits:            11110100110100001000110110001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       11110100110100001000110110001101
          - S-Box Result:     10110111011011110010011000100110   [per every group of 4-bits]
          - Split Into Two:   1011011101101111 [L] 0010011000100110 [R]
          - Swap Halves:      00100110001001101011011101101111
          - Bit Inversion:    11011001110110010100100010010000
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     10001111101100010010011011010100

          - FUNCTION OUTPUT:  10001111101100010010011011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011011000000011101010110001

       - FUNCTION OUTPUT:          10001111101100010010011011010100

       - Left XOR FUNCTION OUTPUT: 10101100110100010001110001100101

       - Next Round Left 32 Bits:  11110100110100001000110110001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100110100010001110001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100110100001000110110001101

       - Right 32 Bits:            10101100110100010001110001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       10101100110100010001110001100101
          - S-Box Result:     01000101011010101010010100001001   [per every group of 4-bits]
          - Split Into Two:   0100010101101010 [L] 1010010100001001 [R]
          - Swap Halves:      10100101000010010100010101101010
          - Bit Inversion:    01011010111101101011101010010101
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     11010111000111100010101110000001

          - FUNCTION OUTPUT:  11010111000111100010101110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100110100001000110110001101

       - FUNCTION OUTPUT:          11010111000111100010101110000001

       - Left XOR FUNCTION OUTPUT: 00100011110011101010011000001100

       - Next Round Left 32 Bits:  10101100110100010001110001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011110011101010011000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100110100010001110001100101

       - Right 32 Bits:            00100011110011101010011000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       00100011110011101010011000001100
          - S-Box Result:     11100001010111000100000011110101   [per every group of 4-bits]
          - Split Into Two:   1110000101011100 [L] 0100000011110101 [R]
          - Swap Halves:      01000000111101011110000101011100
          - Bit Inversion:    10111111000010100001111010100011
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     10101110011010010110110010101001

          - FUNCTION OUTPUT:  10101110011010010110110010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100110100010001110001100101

       - FUNCTION OUTPUT:          10101110011010010110110010101001

       - Left XOR FUNCTION OUTPUT: 00000010101110000111000011001100

       - Next Round Left 32 Bits:  00100011110011101010011000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010101110000111000011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011110011101010011000001100

       - Right 32 Bits:            00000010101110000111000011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       00000010101110000111000011001100
          - S-Box Result:     11111110100000101101111101010101   [per every group of 4-bits]
          - Split Into Two:   1111111010000010 [L] 1101111101010101 [R]
          - Swap Halves:      11011111010101011111111010000010
          - Bit Inversion:    00100000101010100000000101111101
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     11000101110001101010101101011011

          - FUNCTION OUTPUT:  11000101110001101010101101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011110011101010011000001100

       - FUNCTION OUTPUT:          11000101110001101010101101011011

       - Left XOR FUNCTION OUTPUT: 11100110000010000000110101010111

       - Next Round Left 32 Bits:  00000010101110000111000011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110000010000000110101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010101110000111000011001100

       - Right 32 Bits:            11100110000010000000110101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       11100110000010000000110101010111
          - S-Box Result:     11000000111100101111011010011101   [per every group of 4-bits]
          - Split Into Two:   1100000011110010 [L] 1111011010011101 [R]
          - Swap Halves:      11110110100111011100000011110010
          - Bit Inversion:    00001001011000100011111100001101
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     10001000111110010000110101010101

          - FUNCTION OUTPUT:  10001000111110010000110101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010101110000111000011001100

       - FUNCTION OUTPUT:          10001000111110010000110101010101

       - Left XOR FUNCTION OUTPUT: 10001010010000010111110110011001

       - Next Round Left 32 Bits:  11100110000010000000110101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010010000010111110110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110000010000000110101010111

       - Right 32 Bits:            10001010010000010111110110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       10001010010000010111110110011001
          - S-Box Result:     00100100011110101101011000110011   [per every group of 4-bits]
          - Split Into Two:   0010010001111010 [L] 1101011000110011 [R]
          - Swap Halves:      11010110001100110010010001111010
          - Bit Inversion:    00101001110011001101101110000101
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     10001010101010111010101010110010

          - FUNCTION OUTPUT:  10001010101010111010101010110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110000010000000110101010111

       - FUNCTION OUTPUT:          10001010101010111010101010110010

       - Left XOR FUNCTION OUTPUT: 01101100101000111010011111100101

       - Next Round Left 32 Bits:  10001010010000010111110110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100101000111010011111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010010000010111110110011001

       - Right 32 Bits:            01101100101000111010011111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       01101100101000111010011111100101
          - S-Box Result:     00000101010000010100110111001001   [per every group of 4-bits]
          - Split Into Two:   0000010101000001 [L] 0100110111001001 [R]
          - Swap Halves:      01001101110010010000010101000001
          - Bit Inversion:    10110010001101101111101010111110
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     00011110111011111100000011111000

          - FUNCTION OUTPUT:  00011110111011111100000011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010010000010111110110011001

       - FUNCTION OUTPUT:          00011110111011111100000011111000

       - Left XOR FUNCTION OUTPUT: 10010100101011101011110101100001

       - Next Round Left 32 Bits:  01101100101000111010011111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100101011101011110101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100101000111010011111100101

       - Right 32 Bits:            10010100101011101011110101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       10010100101011101011110101100001
          - S-Box Result:     00110111010011001000011000001010   [per every group of 4-bits]
          - Split Into Two:   0011011101001100 [L] 1000011000001010 [R]
          - Swap Halves:      10000110000010100011011101001100
          - Bit Inversion:    01111001111101011100100010110011
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     11101000010011100110000100100100

          - FUNCTION OUTPUT:  11101000010011100110000100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100101000111010011111100101

       - FUNCTION OUTPUT:          11101000010011100110000100100100

       - Left XOR FUNCTION OUTPUT: 10000100111011011100011011000001

       - Next Round Left 32 Bits:  10010100101011101011110101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100111011011100011011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100101011101011110101100001

       - Right 32 Bits:            10000100111011011100011011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       10000100111011011100011011000001
          - S-Box Result:     00100111110001100101000001011010   [per every group of 4-bits]
          - Split Into Two:   0010011111000110 [L] 0101000001011010 [R]
          - Swap Halves:      01010000010110100010011111000110
          - Bit Inversion:    10101111101001011101100000111001
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     11000001010011101010101000101110

          - FUNCTION OUTPUT:  11000001010011101010101000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100101011101011110101100001

       - FUNCTION OUTPUT:          11000001010011101010101000101110

       - Left XOR FUNCTION OUTPUT: 01010101111000000001011101001111

       - Next Round Left 32 Bits:  10000100111011011100011011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101111000000001011101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100111011011100011011000001

       - Right 32 Bits:            01010101111000000001011101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       01010101111000000001011101001111
          - S-Box Result:     10011001110011111010110101111011   [per every group of 4-bits]
          - Split Into Two:   1001100111001111 [L] 1010110101111011 [R]
          - Swap Halves:      10101101011110111001100111001111
          - Bit Inversion:    01010010100001000110011000110000
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     11011111011100011000100010101100

          - FUNCTION OUTPUT:  11011111011100011000100010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100111011011100011011000001

       - FUNCTION OUTPUT:          11011111011100011000100010101100

       - Left XOR FUNCTION OUTPUT: 01011011100111000100111001101101

       - Next Round Left 32 Bits:  01010101111000000001011101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011100111000100111001101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101111000000001011101001111

       - Right 32 Bits:            01011011100111000100111001101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       01011011100111000100111001101101
          - S-Box Result:     10011000001101010111110000000110   [per every group of 4-bits]
          - Split Into Two:   1001100000110101 [L] 0111110000000110 [R]
          - Swap Halves:      01111100000001101001100000110101
          - Bit Inversion:    10000011111110010110011111001010
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     11010110001000000111110101011001

          - FUNCTION OUTPUT:  11010110001000000111110101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101111000000001011101001111

       - FUNCTION OUTPUT:          11010110001000000111110101011001

       - Left XOR FUNCTION OUTPUT: 10000011110000000110101000010110

       - Next Round Left 32 Bits:  01011011100111000100111001101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011110000000110101000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011100111000100111001101101

       - Right 32 Bits:            10000011110000000110101000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       10000011110000000110101000010110
          - S-Box Result:     00100001010111110000010010100000   [per every group of 4-bits]
          - Split Into Two:   0010000101011111 [L] 0000010010100000 [R]
          - Swap Halves:      00000100101000000010000101011111
          - Bit Inversion:    11111011010111111101111010100000
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     00110110111110001010000011000100

          - FUNCTION OUTPUT:  00110110111110001010000011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011100111000100111001101101

       - FUNCTION OUTPUT:          00110110111110001010000011000100

       - Left XOR FUNCTION OUTPUT: 01101101011001001110111010101001

       - Next Round Left 32 Bits:  10000011110000000110101000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101011001001110111010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011110000000110101000010110

       - Right 32 Bits:            01101101011001001110111010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       01101101011001001110111010101001
          - S-Box Result:     00000110000001111100110001000011   [per every group of 4-bits]
          - Split Into Two:   0000011000000111 [L] 1100110001000011 [R]
          - Swap Halves:      11001100010000110000011000000111
          - Bit Inversion:    00110011101111001111100111111000
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     10111101011101001010010101100000

          - FUNCTION OUTPUT:  10111101011101001010010101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011110000000110101000010110

       - FUNCTION OUTPUT:          10111101011101001010010101100000

       - Left XOR FUNCTION OUTPUT: 00111110101101001100111101110110

       - Next Round Left 32 Bits:  01101101011001001110111010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110101101001100111101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011111010110100110011110111011001101101011001001110111010101001

 > Processed Block:     0011111010110100110011110111011001101101011001001110111010101001



Plaintext Block: 7:                                      0011011100110011101011110011101101010001011100100011000100100100

!!!CBC: Previous Ciphertext:                             0011111010110100110011110111011001101101011001001110111010101001

!!!CBC: Current Block XOR with Previous Ciphertext:      0000100110000111011000000100110100111100000101101101111110001101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001100001110110000001001101

       - Right 32 Bits:            00111100000101101101111110001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       00111100000101101101111110001101
          - S-Box Result:     00010101101000000110101100100110   [per every group of 4-bits]
          - Split Into Two:   0001010110100000 [L] 0110101100100110 [R]
          - Swap Halves:      01101011001001100001010110100000
          - Bit Inversion:    10010100110110011110101001011111
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     01011001011111101001010000111011

          - FUNCTION OUTPUT:  01011001011111101001010000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001100001110110000001001101

       - FUNCTION OUTPUT:          01011001011111101001010000111011

       - Left XOR FUNCTION OUTPUT: 01010000111110011111010001110110

       - Next Round Left 32 Bits:  00111100000101101101111110001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000111110011111010001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100000101101101111110001101

       - Right 32 Bits:            01010000111110011111010001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       01010000111110011111010001110110
          - S-Box Result:     10011111101100111011011111010000   [per every group of 4-bits]
          - Split Into Two:   1001111110110011 [L] 1011011111010000 [R]
          - Swap Halves:      10110111110100001001111110110011
          - Bit Inversion:    01001000001011110110000001001100
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     11000110111001110011110011010100

          - FUNCTION OUTPUT:  11000110111001110011110011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100000101101101111110001101

       - FUNCTION OUTPUT:          11000110111001110011110011010100

       - Left XOR FUNCTION OUTPUT: 11111010111100011110001101011001

       - Next Round Left 32 Bits:  01010000111110011111010001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010111100011110001101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000111110011111010001110110

       - Right 32 Bits:            11111010111100011110001101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       11111010111100011110001101011001
          - S-Box Result:     10110100101110101100000110010011   [per every group of 4-bits]
          - Split Into Two:   1011010010111010 [L] 1100000110010011 [R]
          - Swap Halves:      11000001100100111011010010111010
          - Bit Inversion:    00111110011011000100101101000101
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     11111011110101010001100001100011

          - FUNCTION OUTPUT:  11111011110101010001100001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000111110011111010001110110

       - FUNCTION OUTPUT:          11111011110101010001100001100011

       - Left XOR FUNCTION OUTPUT: 10101011001011001110110000010101

       - Next Round Left 32 Bits:  11111010111100011110001101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011001011001110110000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010111100011110001101011001

       - Right 32 Bits:            10101011001011001110110000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       10101011001011001110110000010101
          - S-Box Result:     01001000111001011100010110101001   [per every group of 4-bits]
          - Split Into Two:   0100100011100101 [L] 1100010110101001 [R]
          - Swap Halves:      11000101101010010100100011100101
          - Bit Inversion:    00111010010101101011011100011010
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     01101100001111101101100101011110

          - FUNCTION OUTPUT:  01101100001111101101100101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010111100011110001101011001

       - FUNCTION OUTPUT:          01101100001111101101100101011110

       - Left XOR FUNCTION OUTPUT: 10010110110011110011101000000111

       - Next Round Left 32 Bits:  10101011001011001110110000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110110011110011101000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011001011001110110000010101

       - Right 32 Bits:            10010110110011110011101000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       10010110110011110011101000000111
          - S-Box Result:     00110000010110110001010011111101   [per every group of 4-bits]
          - Split Into Two:   0011000001011011 [L] 0001010011111101 [R]
          - Swap Halves:      00010100111111010011000001011011
          - Bit Inversion:    11101011000000101100111110100100
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     01100110111010100101111010110000

          - FUNCTION OUTPUT:  01100110111010100101111010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011001011001110110000010101

       - FUNCTION OUTPUT:          01100110111010100101111010110000

       - Left XOR FUNCTION OUTPUT: 11001101110001101011001010100101

       - Next Round Left 32 Bits:  10010110110011110011101000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101110001101011001010100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110110011110011101000000111

       - Right 32 Bits:            11001101110001101011001010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       11001101110001101011001010100101
          - S-Box Result:     01010110010100001000111001001001   [per every group of 4-bits]
          - Split Into Two:   0101011001010000 [L] 1000111001001001 [R]
          - Swap Halves:      10001110010010010101011001010000
          - Bit Inversion:    01110001101101101010100110101111
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     01100000110101011101101110100101

          - FUNCTION OUTPUT:  01100000110101011101101110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110110011110011101000000111

       - FUNCTION OUTPUT:          01100000110101011101101110100101

       - Left XOR FUNCTION OUTPUT: 11110110000110101110000110100010

       - Next Round Left 32 Bits:  11001101110001101011001010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110000110101110000110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101110001101011001010100101

       - Right 32 Bits:            11110110000110101110000110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       11110110000110101110000110100010
          - S-Box Result:     10110000101001001100101001001110   [per every group of 4-bits]
          - Split Into Two:   1011000010100100 [L] 1100101001001110 [R]
          - Swap Halves:      11001010010011101011000010100100
          - Bit Inversion:    00110101101100010100111101011011
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     11010000110111011110010101111101

          - FUNCTION OUTPUT:  11010000110111011110010101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101110001101011001010100101

       - FUNCTION OUTPUT:          11010000110111011110010101111101

       - Left XOR FUNCTION OUTPUT: 00011101000110110101011111011000

       - Next Round Left 32 Bits:  11110110000110101110000110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101000110110101011111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110000110101110000110100010

       - Right 32 Bits:            00011101000110110101011111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       00011101000110110101011111011000
          - S-Box Result:     10100110101010001001110101100010   [per every group of 4-bits]
          - Split Into Two:   1010011010101000 [L] 1001110101100010 [R]
          - Swap Halves:      10011101011000101010011010101000
          - Bit Inversion:    01100010100111010101100101010111
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     11100011000001100110101100001111

          - FUNCTION OUTPUT:  11100011000001100110101100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110000110101110000110100010

       - FUNCTION OUTPUT:          11100011000001100110101100001111

       - Left XOR FUNCTION OUTPUT: 00010101000111001000101010101101

       - Next Round Left 32 Bits:  00011101000110110101011111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101000111001000101010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101000110110101011111011000

       - Right 32 Bits:            00010101000111001000101010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       00010101000111001000101010101101
          - S-Box Result:     10101001101001010010010001000110   [per every group of 4-bits]
          - Split Into Two:   1010100110100101 [L] 0010010001000110 [R]
          - Swap Halves:      00100100010001101010100110100101
          - Bit Inversion:    11011011101110010101011001011010
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     01111000110111100010011101101101

          - FUNCTION OUTPUT:  01111000110111100010011101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101000110110101011111011000

       - FUNCTION OUTPUT:          01111000110111100010011101101101

       - Left XOR FUNCTION OUTPUT: 01100101110001010111000010110101

       - Next Round Left 32 Bits:  00010101000111001000101010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101110001010111000010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101000111001000101010101101

       - Right 32 Bits:            01100101110001010111000010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       01100101110001010111000010110101
          - S-Box Result:     00001001010110011101111110001001   [per every group of 4-bits]
          - Split Into Two:   0000100101011001 [L] 1101111110001001 [R]
          - Swap Halves:      11011111100010010000100101011001
          - Bit Inversion:    00100000011101101111011010100110
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     10001100101011111100110011100000

          - FUNCTION OUTPUT:  10001100101011111100110011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101000111001000101010101101

       - FUNCTION OUTPUT:          10001100101011111100110011100000

       - Left XOR FUNCTION OUTPUT: 10011001101100110100011001001101

       - Next Round Left 32 Bits:  01100101110001010111000010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011001101100110100011001001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101110001010111000010110101

       - Right 32 Bits:            10011001101100110100011001001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       10011001101100110100011001001101
          - S-Box Result:     00110011100000010111000001110110   [per every group of 4-bits]
          - Split Into Two:   0011001110000001 [L] 0111000001110110 [R]
          - Swap Halves:      01110000011101100011001110000001
          - Bit Inversion:    10001111100010011100110001111110
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     00011110001100100110010111101001

          - FUNCTION OUTPUT:  00011110001100100110010111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101110001010111000010110101

       - FUNCTION OUTPUT:          00011110001100100110010111101001

       - Left XOR FUNCTION OUTPUT: 01111011111101110001010101011100

       - Next Round Left 32 Bits:  10011001101100110100011001001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011111101110001010101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011001101100110100011001001101

       - Right 32 Bits:            01111011111101110001010101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       01111011111101110001010101011100
          - S-Box Result:     11011000101111011010100110010101   [per every group of 4-bits]
          - Split Into Two:   1101100010111101 [L] 1010100110010101 [R]
          - Swap Halves:      10101001100101011101100010111101
          - Bit Inversion:    01010110011010100010011101000010
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     00111000100000010101010101010101

          - FUNCTION OUTPUT:  00111000100000010101010101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011001101100110100011001001101

       - FUNCTION OUTPUT:          00111000100000010101010101010101

       - Left XOR FUNCTION OUTPUT: 10100001001100100001001100011000

       - Next Round Left 32 Bits:  01111011111101110001010101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001001100100001001100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011111101110001010101011100

       - Right 32 Bits:            10100001001100100001001100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       10100001001100100001001100011000
          - S-Box Result:     01001010000111101010000110100010   [per every group of 4-bits]
          - Split Into Two:   0100101000011110 [L] 1010000110100010 [R]
          - Swap Halves:      10100001101000100100101000011110
          - Bit Inversion:    01011110010111011011010111100001
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     11010011101010000101101101111101

          - FUNCTION OUTPUT:  11010011101010000101101101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011111101110001010101011100

       - FUNCTION OUTPUT:          11010011101010000101101101111101

       - Left XOR FUNCTION OUTPUT: 10101000010111110100111000100001

       - Next Round Left 32 Bits:  10100001001100100001001100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000010111110100111000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001001100100001001100011000

       - Right 32 Bits:            10101000010111110100111000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       10101000010111110100111000100001
          - S-Box Result:     01000010100110110111110011101010   [per every group of 4-bits]
          - Split Into Two:   0100001010011011 [L] 0111110011101010 [R]
          - Swap Halves:      01111100111010100100001010011011
          - Bit Inversion:    10000011000101011011110101100100
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     11010110110011001010011111110111

          - FUNCTION OUTPUT:  11010110110011001010011111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001001100100001001100011000

       - FUNCTION OUTPUT:          11010110110011001010011111110111

       - Left XOR FUNCTION OUTPUT: 01110111111111101011010011101111

       - Next Round Left 32 Bits:  10101000010111110100111000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111111111101011010011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000010111110100111000100001

       - Right 32 Bits:            01110111111111101011010011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       01110111111111101011010011101111
          - S-Box Result:     11011101101111001000011111001011   [per every group of 4-bits]
          - Split Into Two:   1101110110111100 [L] 1000011111001011 [R]
          - Swap Halves:      10000111110010111101110110111100
          - Bit Inversion:    01111000001101000010001001000011
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10110101100100110101110000100111

          - FUNCTION OUTPUT:  10110101100100110101110000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000010111110100111000100001

       - FUNCTION OUTPUT:          10110101100100110101110000100111

       - Left XOR FUNCTION OUTPUT: 00011101110011000001001000000110

       - Next Round Left 32 Bits:  01110111111111101011010011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101110011000001001000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111111111101011010011101111

       - Right 32 Bits:            00011101110011000001001000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       00011101110011000001001000000110
          - S-Box Result:     10100110010101011010111011110000   [per every group of 4-bits]
          - Split Into Two:   1010011001010101 [L] 1010111011110000 [R]
          - Swap Halves:      10101110111100001010011001010101
          - Bit Inversion:    01010001000011110101100110101010
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     11011111110001110000010100110010

          - FUNCTION OUTPUT:  11011111110001110000010100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111111111101011010011101111

       - FUNCTION OUTPUT:          11011111110001110000010100110010

       - Left XOR FUNCTION OUTPUT: 10101000001110011011000111011101

       - Next Round Left 32 Bits:  00011101110011000001001000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000001110011011000111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010100000111001101100011101110100011101110011000001001000000110

 > Processed Block:     1010100000111001101100011101110100011101110011000001001000000110



Plaintext Block: 8:                                      1001011001011011111001001011111101010111100101111010010111101010

!!!CBC: Previous Ciphertext:                             1010100000111001101100011101110100011101110011000001001000000110

!!!CBC: Current Block XOR with Previous Ciphertext:      0011111001100010010101010110001001001010010110111011011111101100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110011000100101010101100010

       - Right 32 Bits:            01001010010110111011011111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       01001010010110111011011111101100
          - S-Box Result:     01110100100110001000110111000101   [per every group of 4-bits]
          - Split Into Two:   0111010010011000 [L] 1000110111000101 [R]
          - Swap Halves:      10001101110001010111010010011000
          - Bit Inversion:    01110010001110101000101101100111
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     10111111100111011111010100000011

          - FUNCTION OUTPUT:  10111111100111011111010100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110011000100101010101100010

       - FUNCTION OUTPUT:          10111111100111011111010100000011

       - Left XOR FUNCTION OUTPUT: 10000001111111111010000001100001

       - Next Round Left 32 Bits:  01001010010110111011011111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001111111111010000001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010010110111011011111101100

       - Right 32 Bits:            10000001111111111010000001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       10000001111111111010000001100001
          - S-Box Result:     00101010101110110100111100001010   [per every group of 4-bits]
          - Split Into Two:   0010101010111011 [L] 0100111100001010 [R]
          - Swap Halves:      01001111000010100010101010111011
          - Bit Inversion:    10110000111101011101010101000100
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00111110001111011000100111011100

          - FUNCTION OUTPUT:  00111110001111011000100111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010010110111011011111101100

       - FUNCTION OUTPUT:          00111110001111011000100111011100

       - Left XOR FUNCTION OUTPUT: 01110100011001100011111000110000

       - Next Round Left 32 Bits:  10000001111111111010000001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100011001100011111000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001111111111010000001100001

       - Right 32 Bits:            01110100011001100011111000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       01110100011001100011111000110000
          - S-Box Result:     11010111000000000001110000011111   [per every group of 4-bits]
          - Split Into Two:   1101011100000000 [L] 0001110000011111 [R]
          - Swap Halves:      00011100000111111101011100000000
          - Bit Inversion:    11100011111000000010100011111111
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     00100110010110010111101111011001

          - FUNCTION OUTPUT:  00100110010110010111101111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001111111111010000001100001

       - FUNCTION OUTPUT:          00100110010110010111101111011001

       - Left XOR FUNCTION OUTPUT: 10100111101001101101101110111000

       - Next Round Left 32 Bits:  01110100011001100011111000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111101001101101101110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100011001100011111000110000

       - Right 32 Bits:            10100111101001101101101110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       10100111101001101101101110111000
          - S-Box Result:     01001101010000000110100010000010   [per every group of 4-bits]
          - Split Into Two:   0100110101000000 [L] 0110100010000010 [R]
          - Swap Halves:      01101000100000100100110101000000
          - Bit Inversion:    10010111011111011011001010111111
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     11000001000101011101110011111011

          - FUNCTION OUTPUT:  11000001000101011101110011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100011001100011111000110000

       - FUNCTION OUTPUT:          11000001000101011101110011111011

       - Left XOR FUNCTION OUTPUT: 10110101011100111110001011001011

       - Next Round Left 32 Bits:  10100111101001101101101110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101011100111110001011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111101001101101101110111000

       - Right 32 Bits:            10110101011100111110001011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       10110101011100111110001011001011
          - S-Box Result:     10001001110100011100111001011000   [per every group of 4-bits]
          - Split Into Two:   1000100111010001 [L] 1100111001011000 [R]
          - Swap Halves:      11001110010110001000100111010001
          - Bit Inversion:    00110001101001110111011000101110
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     10111100010011111110011100111010

          - FUNCTION OUTPUT:  10111100010011111110011100111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111101001101101101110111000

       - FUNCTION OUTPUT:          10111100010011111110011100111010

       - Left XOR FUNCTION OUTPUT: 00011011111010010011110010000010

       - Next Round Left 32 Bits:  10110101011100111110001011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011111010010011110010000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101011100111110001011001011

       - Right 32 Bits:            00011011111010010011110010000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       00011011111010010011110010000010
          - S-Box Result:     10101000110000110001010100101110   [per every group of 4-bits]
          - Split Into Two:   1010100011000011 [L] 0001010100101110 [R]
          - Swap Halves:      00010101001011101010100011000011
          - Bit Inversion:    11101010110100010101011100111100
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     11111011101100100010010100110110

          - FUNCTION OUTPUT:  11111011101100100010010100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101011100111110001011001011

       - FUNCTION OUTPUT:          11111011101100100010010100110110

       - Left XOR FUNCTION OUTPUT: 01001110110000011100011111111101

       - Next Round Left 32 Bits:  00011011111010010011110010000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110110000011100011111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011111010010011110010000010

       - Right 32 Bits:            01001110110000011100011111111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       01001110110000011100011111111101
          - S-Box Result:     01111100010110100101110110110110   [per every group of 4-bits]
          - Split Into Two:   0111110001011010 [L] 0101110110110110 [R]
          - Swap Halves:      01011101101101100111110001011010
          - Bit Inversion:    10100010010010011000001110100101
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     01000111001001010010100110000011

          - FUNCTION OUTPUT:  01000111001001010010100110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011111010010011110010000010

       - FUNCTION OUTPUT:          01000111001001010010100110000011

       - Left XOR FUNCTION OUTPUT: 01011100110011000001010100000001

       - Next Round Left 32 Bits:  01001110110000011100011111111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100110011000001010100000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110110000011100011111111101

       - Right 32 Bits:            01011100110011000001010100000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       01011100110011000001010100000001
          - S-Box Result:     10010101010101011010100111111010   [per every group of 4-bits]
          - Split Into Two:   1001010101010101 [L] 1010100111111010 [R]
          - Swap Halves:      10101001111110101001010101010101
          - Bit Inversion:    01010110000001010110101010101010
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     11010111100111100101100011110010

          - FUNCTION OUTPUT:  11010111100111100101100011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110110000011100011111111101

       - FUNCTION OUTPUT:          11010111100111100101100011110010

       - Left XOR FUNCTION OUTPUT: 10011001010111111001111100001111

       - Next Round Left 32 Bits:  01011100110011000001010100000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011001010111111001111100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100110011000001010100000001

       - Right 32 Bits:            10011001010111111001111100001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       10011001010111111001111100001111
          - S-Box Result:     00110011100110110011101111111011   [per every group of 4-bits]
          - Split Into Two:   0011001110011011 [L] 0011101111111011 [R]
          - Swap Halves:      00111011111110110011001110011011
          - Bit Inversion:    11000100000001001100110001100100
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     01100111011000111011110101010011

          - FUNCTION OUTPUT:  01100111011000111011110101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100110011000001010100000001

       - FUNCTION OUTPUT:          01100111011000111011110101010011

       - Left XOR FUNCTION OUTPUT: 00111011101011111010100001010010

       - Next Round Left 32 Bits:  10011001010111111001111100001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011101011111010100001010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011001010111111001111100001111

       - Right 32 Bits:            00111011101011111010100001010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       00111011101011111010100001010010
          - S-Box Result:     00011000010010110100001010011110   [per every group of 4-bits]
          - Split Into Two:   0001100001001011 [L] 0100001010011110 [R]
          - Swap Halves:      01000010100111100001100001001011
          - Bit Inversion:    10111101011000011110011110110100
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     00010001101110001101110111110010

          - FUNCTION OUTPUT:  00010001101110001101110111110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011001010111111001111100001111

       - FUNCTION OUTPUT:          00010001101110001101110111110010

       - Left XOR FUNCTION OUTPUT: 10001000111001110100001011111101

       - Next Round Left 32 Bits:  00111011101011111010100001010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000111001110100001011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011101011111010100001010010

       - Right 32 Bits:            10001000111001110100001011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       10001000111001110100001011111101
          - S-Box Result:     00100010110011010111111010110110   [per every group of 4-bits]
          - Split Into Two:   0010001011001101 [L] 0111111010110110 [R]
          - Swap Halves:      01111110101101100010001011001101
          - Bit Inversion:    10000001010010011101110100110010
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     00010000111100100111010010100101

          - FUNCTION OUTPUT:  00010000111100100111010010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011101011111010100001010010

       - FUNCTION OUTPUT:          00010000111100100111010010100101

       - Left XOR FUNCTION OUTPUT: 00101011010111011101110011110111

       - Next Round Left 32 Bits:  10001000111001110100001011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011010111011101110011110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000111001110100001011111101

       - Right 32 Bits:            00101011010111011101110011110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       00101011010111011101110011110111
          - S-Box Result:     11101000100101100110010110111101   [per every group of 4-bits]
          - Split Into Two:   1110100010010110 [L] 0110010110111101 [R]
          - Swap Halves:      01100101101111011110100010010110
          - Bit Inversion:    10011010010000100001011101101001
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     11110100101010010110010101111110

          - FUNCTION OUTPUT:  11110100101010010110010101111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000111001110100001011111101

       - FUNCTION OUTPUT:          11110100101010010110010101111110

       - Left XOR FUNCTION OUTPUT: 01111100010011100010011110000011

       - Next Round Left 32 Bits:  00101011010111011101110011110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100010011100010011110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011010111011101110011110111

       - Right 32 Bits:            01111100010011100010011110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       01111100010011100010011110000011
          - S-Box Result:     11010101011111001110110100100001   [per every group of 4-bits]
          - Split Into Two:   1101010101111100 [L] 1110110100100001 [R]
          - Swap Halves:      11101101001000011101010101111100
          - Bit Inversion:    00010010110111100010101010000011
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     10011111001010111100010000011111

          - FUNCTION OUTPUT:  10011111001010111100010000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011010111011101110011110111

       - FUNCTION OUTPUT:          10011111001010111100010000011111

       - Left XOR FUNCTION OUTPUT: 10110100011101100001100011101000

       - Next Round Left 32 Bits:  01111100010011100010011110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100011101100001100011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100010011100010011110000011

       - Right 32 Bits:            10110100011101100001100011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       10110100011101100001100011101000
          - S-Box Result:     10000111110100001010001011000010   [per every group of 4-bits]
          - Split Into Two:   1000011111010000 [L] 1010001011000010 [R]
          - Swap Halves:      10100010110000101000011111010000
          - Bit Inversion:    01011101001111010111100000101111
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     00001000111001000110001010111100

          - FUNCTION OUTPUT:  00001000111001000110001010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100010011100010011110000011

       - FUNCTION OUTPUT:          00001000111001000110001010111100

       - Left XOR FUNCTION OUTPUT: 01110100101010100100010100111111

       - Next Round Left 32 Bits:  10110100011101100001100011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100101010100100010100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100011101100001100011101000

       - Right 32 Bits:            01110100101010100100010100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       01110100101010100100010100111111
          - S-Box Result:     11010111010001000111100100011011   [per every group of 4-bits]
          - Split Into Two:   1101011101000100 [L] 0111100100011011 [R]
          - Swap Halves:      01111001000110111101011101000100
          - Bit Inversion:    10000110111001000010100010111011
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     01001011010000110101011011011111

          - FUNCTION OUTPUT:  01001011010000110101011011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100011101100001100011101000

       - FUNCTION OUTPUT:          01001011010000110101011011011111

       - Left XOR FUNCTION OUTPUT: 11111111001101010100111000110111

       - Next Round Left 32 Bits:  01110100101010100100010100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111001101010100111000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100101010100100010100111111

       - Right 32 Bits:            11111111001101010100111000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       11111111001101010100111000110111
          - S-Box Result:     10111011000110010111110000011101   [per every group of 4-bits]
          - Split Into Two:   1011101100011001 [L] 0111110000011101 [R]
          - Swap Halves:      01111100000111011011101100011001
          - Bit Inversion:    10000011111000100100010011100110
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00001101001010100001100001111110

          - FUNCTION OUTPUT:  00001101001010100001100001111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100101010100100010100111111

       - FUNCTION OUTPUT:          00001101001010100001100001111110

       - Left XOR FUNCTION OUTPUT: 01111001100000000101110101000001

       - Next Round Left 32 Bits:  11111111001101010100111000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001100000000101110101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111100110000000010111010100000111111111001101010100111000110111

 > Processed Block:     0111100110000000010111010100000111111111001101010100111000110111



Plaintext Block: 9:                                      1001001100101000011111001101011000101001101101100010110000001100

!!!CBC: Previous Ciphertext:                             0111100110000000010111010100000111111111001101010100111000110111

!!!CBC: Current Block XOR with Previous Ciphertext:      1110101010101000001000011001011111010110100000110110001000111011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010101010000010000110010111

       - Right 32 Bits:            11010110100000110110001000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 1]
          - Input Half:       11010110100000110110001000111011
          - S-Box Result:     01100000001000010000111000011000   [per every group of 4-bits]
          - Split Into Two:   0110000000100001 [L] 0000111000011000 [R]
          - Swap Halves:      00001110000110000110000000100001
          - Bit Inversion:    11110001111001111001111111011110
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     00111100010000001110000110111010

          - FUNCTION OUTPUT:  00111100010000001110000110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010101010000010000110010111

       - FUNCTION OUTPUT:          00111100010000001110000110111010

       - Left XOR FUNCTION OUTPUT: 11010110111010001100000000101101

       - Next Round Left 32 Bits:  11010110100000110110001000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110111010001100000000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110100000110110001000111011

       - Right 32 Bits:            11010110111010001100000000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 2]
          - Input Half:       11010110111010001100000000101101
          - S-Box Result:     01100000110000100101111111100110   [per every group of 4-bits]
          - Split Into Two:   0110000011000010 [L] 0101111111100110 [R]
          - Swap Halves:      01011111111001100110000011000010
          - Bit Inversion:    10100000000110011001111100111101
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     00101110110100011100001110100101

          - FUNCTION OUTPUT:  00101110110100011100001110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110100000110110001000111011

       - FUNCTION OUTPUT:          00101110110100011100001110100101

       - Left XOR FUNCTION OUTPUT: 11111000010100101010000110011110

       - Next Round Left 32 Bits:  11010110111010001100000000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000010100101010000110011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110111010001100000000101101

       - Right 32 Bits:            11111000010100101010000110011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000101010011011101101101011010011001100100010111001   [Subkey: 3]
          - Input Half:       11111000010100101010000110011110
          - S-Box Result:     10110010100111100100101000111100   [per every group of 4-bits]
          - Split Into Two:   1011001010011110 [L] 0100101000111100 [R]
          - Swap Halves:      01001010001111001011001010011110
          - Bit Inversion:    10110101110000110100110101100001
          - Compressed Key:   11000101101110010101001100100110   [done by compression P-Box]
          - XOR with Key:     01110000011110100001111001000111

          - FUNCTION OUTPUT:  01110000011110100001111001000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110111010001100000000101101

       - FUNCTION OUTPUT:          01110000011110100001111001000111

       - Left XOR FUNCTION OUTPUT: 10100110100100101101111001101010

       - Next Round Left 32 Bits:  11111000010100101010000110011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110100100101101111001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000010100101010000110011110

       - Right 32 Bits:            10100110100100101101111001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001000100100101001011001100110111010001101000   [Subkey: 4]
          - Input Half:       10100110100100101101111001101010
          - S-Box Result:     01000000001111100110110000000100   [per every group of 4-bits]
          - Split Into Two:   0100000000111110 [L] 0110110000000100 [R]
          - Swap Halves:      01101100000001000100000000111110
          - Bit Inversion:    10010011111110111011111111000001
          - Compressed Key:   01010110011010000110111001000100   [done by compression P-Box]
          - XOR with Key:     11000101100100111101000110000101

          - FUNCTION OUTPUT:  11000101100100111101000110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000010100101010000110011110

       - FUNCTION OUTPUT:          11000101100100111101000110000101

       - Left XOR FUNCTION OUTPUT: 00111101110000010111000000011011

       - Next Round Left 32 Bits:  10100110100100101101111001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101110000010111000000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110100100101101111001101010

       - Right 32 Bits:            00111101110000010111000000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101001101110110110101101001100110010001011100101111000   [Subkey: 5]
          - Input Half:       00111101110000010111000000011011
          - S-Box Result:     00010110010110101101111110101000   [per every group of 4-bits]
          - Split Into Two:   0001011001011010 [L] 1101111110101000 [R]
          - Swap Halves:      11011111101010000001011001011010
          - Bit Inversion:    00100000010101111110100110100101
          - Compressed Key:   10001101111010001001000100010100   [done by compression P-Box]
          - XOR with Key:     10101101101111110111100010110001

          - FUNCTION OUTPUT:  10101101101111110111100010110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110100100101101111001101010

       - FUNCTION OUTPUT:          10101101101111110111100010110001

       - Left XOR FUNCTION OUTPUT: 00001011001011011010011011011011

       - Next Round Left 32 Bits:  00111101110000010111000000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011001011011010011011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101110000010111000000011011

       - Right 32 Bits:            00001011001011011010011011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010010010100101100110011011101000110100001110101   [Subkey: 6]
          - Input Half:       00001011001011011010011011011011
          - S-Box Result:     11111000111001100100000001101000   [per every group of 4-bits]
          - Split Into Two:   1111100011100110 [L] 0100000001101000 [R]
          - Swap Halves:      01000000011010001111100011100110
          - Bit Inversion:    10111111100101110000011100011001
          - Compressed Key:   00010001011000110111001000001010   [done by compression P-Box]
          - XOR with Key:     10101110111101000111010100010011

          - FUNCTION OUTPUT:  10101110111101000111010100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101110000010111000000011011

       - FUNCTION OUTPUT:          10101110111101000111010100010011

       - Left XOR FUNCTION OUTPUT: 10010011001101010000010100001000

       - Next Round Left 32 Bits:  00001011001011011010011011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011001101010000010100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011001011011010011011011011

       - Right 32 Bits:            10010011001101010000010100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011011010110100110011001000101110010111100010101001   [Subkey: 7]
          - Input Half:       10010011001101010000010100001000
          - S-Box Result:     00110001000110011111100111110010   [per every group of 4-bits]
          - Split Into Two:   0011000100011001 [L] 1111100111110010 [R]
          - Swap Halves:      11111001111100100011000100011001
          - Bit Inversion:    00000110000011011100111011100110
          - Compressed Key:   11100101011011001010101000100110   [done by compression P-Box]
          - XOR with Key:     11100011011000010110010011000000

          - FUNCTION OUTPUT:  11100011011000010110010011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011001011011010011011011011

       - FUNCTION OUTPUT:          11100011011000010110010011000000

       - Left XOR FUNCTION OUTPUT: 11101000010011001100001000011011

       - Next Round Left 32 Bits:  10010011001101010000010100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000010011001100001000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011001101010000010100001000

       - Right 32 Bits:            11101000010011001100001000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001010010110011001101110100011010000111010101100100   [Subkey: 8]
          - Input Half:       11101000010011001100001000011011
          - S-Box Result:     11000010011101010101111010101000   [per every group of 4-bits]
          - Split Into Two:   1100001001110101 [L] 0101111010101000 [R]
          - Swap Halves:      01011110101010001100001001110101
          - Bit Inversion:    10100001010101110011110110001010
          - Compressed Key:   10000001100110110011001001011000   [done by compression P-Box]
          - XOR with Key:     00100000110011000000111111010010

          - FUNCTION OUTPUT:  00100000110011000000111111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011001101010000010100001000

       - FUNCTION OUTPUT:          00100000110011000000111111010010

       - Left XOR FUNCTION OUTPUT: 10110011111110010000101011011010

       - Next Round Left 32 Bits:  11101000010011001100001000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011111110010000101011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000010011001100001000011011

       - Right 32 Bits:            10110011111110010000101011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011010011001100100010111001011110001010100110111011   [Subkey: 9]
          - Input Half:       10110011111110010000101011011010
          - S-Box Result:     10000001101100111111010001100100   [per every group of 4-bits]
          - Split Into Two:   1000000110110011 [L] 1111010001100100 [R]
          - Swap Halves:      11110100011001001000000110110011
          - Bit Inversion:    00001011100110110111111001001100
          - Compressed Key:   10100011011001110111000100110111   [done by compression P-Box]
          - XOR with Key:     10101000111111000000111101111011

          - FUNCTION OUTPUT:  10101000111111000000111101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000010011001100001000011011

       - FUNCTION OUTPUT:          10101000111111000000111101111011

       - Left XOR FUNCTION OUTPUT: 01000000101100001100110101100000

       - Next Round Left 32 Bits:  10110011111110010000101011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000101100001100110101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011111110010000101011011010

       - Right 32 Bits:            01000000101100001100110101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011001100110111010001101000011101010110010001001001   [Subkey: 10]
          - Input Half:       01000000101100001100110101100000
          - S-Box Result:     01111111100011110101011000001111   [per every group of 4-bits]
          - Split Into Two:   0111111110001111 [L] 0101011000001111 [R]
          - Swap Halves:      01010110000011110111111110001111
          - Bit Inversion:    10101001111100001000000001110000
          - Compressed Key:   10101100110110010011101001000110   [done by compression P-Box]
          - XOR with Key:     00000101001010011011101000110110

          - FUNCTION OUTPUT:  00000101001010011011101000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011111110010000101011011010

       - FUNCTION OUTPUT:          00000101001010011011101000110110

       - Left XOR FUNCTION OUTPUT: 10110110110100001011000011101100

       - Next Round Left 32 Bits:  01000000101100001100110101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110110100001011000011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000101100001100110101100000

       - Right 32 Bits:            10110110110100001011000011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100110010001011100101111000101010011011101101101011   [Subkey: 11]
          - Input Half:       10110110110100001011000011101100
          - S-Box Result:     10000000011011111000111111000101   [per every group of 4-bits]
          - Split Into Two:   1000000001101111 [L] 1000111111000101 [R]
          - Swap Halves:      10001111110001011000000001101111
          - Bit Inversion:    01110000001110100111111110010000
          - Compressed Key:   10010001101110111010100110010111   [done by compression P-Box]
          - XOR with Key:     11100001100000011101011000000111

          - FUNCTION OUTPUT:  11100001100000011101011000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000101100001100110101100000

       - FUNCTION OUTPUT:          11100001100000011101011000000111

       - Left XOR FUNCTION OUTPUT: 10100001001100010001101101100111

       - Next Round Left 32 Bits:  10110110110100001011000011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001001100010001101101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110110100001011000011101100

       - Right 32 Bits:            10100001001100010001101101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011011101000110100001110101011001000100100101001011   [Subkey: 12]
          - Input Half:       10100001001100010001101101100111
          - S-Box Result:     01001010000110101010100000001101   [per every group of 4-bits]
          - Split Into Two:   0100101000011010 [L] 1010100000001101 [R]
          - Swap Halves:      10101000000011010100101000011010
          - Bit Inversion:    01010111111100101011010111100101
          - Compressed Key:   01101110111010110111001000010111   [done by compression P-Box]
          - XOR with Key:     00111001000110011100011111110010

          - FUNCTION OUTPUT:  00111001000110011100011111110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110110100001011000011101100

       - FUNCTION OUTPUT:          00111001000110011100011111110010

       - Left XOR FUNCTION OUTPUT: 10001111110010010111011100011110

       - Next Round Left 32 Bits:  10100001001100010001101101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111110010010111011100011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001001100010001101101100111

       - Right 32 Bits:            10001111110010010111011100011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000101110010111100010101001101110110110101101001100   [Subkey: 13]
          - Input Half:       10001111110010010111011100011110
          - S-Box Result:     00101011010100111101110110101100   [per every group of 4-bits]
          - Split Into Two:   0010101101010011 [L] 1101110110101100 [R]
          - Swap Halves:      11011101101011000010101101010011
          - Bit Inversion:    00100010010100111101010010101100
          - Compressed Key:   10001101111101011110111010011100   [done by compression P-Box]
          - XOR with Key:     10101111101001100011101000110000

          - FUNCTION OUTPUT:  10101111101001100011101000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001001100010001101101100111

       - FUNCTION OUTPUT:          10101111101001100011101000110000

       - Left XOR FUNCTION OUTPUT: 00001110100101110010000101010111

       - Next Round Left 32 Bits:  10001111110010010111011100011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110100101110010000101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111110010010111011100011110

       - Right 32 Bits:            00001110100101110010000101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011010000111010101100100010010010100101100110011   [Subkey: 14]
          - Input Half:       00001110100101110010000101010111
          - S-Box Result:     11111100001111011110101010011101   [per every group of 4-bits]
          - Split Into Two:   1111110000111101 [L] 1110101010011101 [R]
          - Swap Halves:      11101010100111011111110000111101
          - Bit Inversion:    00010101011000100000001111000010
          - Compressed Key:   01010101110110010001101010010011   [done by compression P-Box]
          - XOR with Key:     01000000101110110001100101010001

          - FUNCTION OUTPUT:  01000000101110110001100101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111110010010111011100011110

       - FUNCTION OUTPUT:          01000000101110110001100101010001

       - Left XOR FUNCTION OUTPUT: 11001111011100100110111001001111

       - Next Round Left 32 Bits:  00001110100101110010000101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111011100100110111001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110100101110010000101010111

       - Right 32 Bits:            11001111011100100110111001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001011110001010100110111011011010110100110011001000   [Subkey: 15]
          - Input Half:       11001111011100100110111001001111
          - S-Box Result:     01011011110111100000110001111011   [per every group of 4-bits]
          - Split Into Two:   0101101111011110 [L] 0000110001111011 [R]
          - Swap Halves:      00001100011110110101101111011110
          - Bit Inversion:    11110011100001001010010000100001
          - Compressed Key:   11001101101001110111111001100100   [done by compression P-Box]
          - XOR with Key:     00111110001000111101101001000101

          - FUNCTION OUTPUT:  00111110001000111101101001000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110100101110010000101010111

       - FUNCTION OUTPUT:          00111110001000111101101001000101

       - Left XOR FUNCTION OUTPUT: 00110000101101001111101100010010

       - Next Round Left 32 Bits:  11001111011100100110111001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000101101001111101100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111011100100110111001001111

       - Right 32 Bits:            00110000101101001111101100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000011101010110010001001001010010110011001101110100   [Subkey: 16]
          - Input Half:       00110000101101001111101100010010
          - S-Box Result:     00011111100001111011100010101110   [per every group of 4-bits]
          - Split Into Two:   0001111110000111 [L] 1011100010101110 [R]
          - Swap Halves:      10111000101011100001111110000111
          - Bit Inversion:    01000111010100011110000001111000
          - Compressed Key:   10001110110010000101110010011000   [done by compression P-Box]
          - XOR with Key:     11001001100110011011110011100000

          - FUNCTION OUTPUT:  11001001100110011011110011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111011100100110111001001111

       - FUNCTION OUTPUT:          11001001100110011011110011100000

       - Left XOR FUNCTION OUTPUT: 00000110111010111101001010101111

       - Next Round Left 32 Bits:  00110000101101001111101100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110111010111101001010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000011011101011110100101010111100110000101101001111101100010010

 > Processed Block:     0000011011101011110100101010111100110000101101001111101100010010




BLOCKS IN ASCII:              ? G1à?Câ¼/°K?zh]C¦Þpâà>¶:ßsÌ$>´Ïvmdî©¨9±ÝÌy?]Aÿ5N7ëÒ¯0´û

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: JOg4Jjv
In Binary:  01001010010011110110011100110100010010100110101001110110

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01011011000010011000110010111011010110010101100010011011
Subkey 2  : 01001111011001110011010001001010011010100111011001001010
Subkey 3  : 00001001100011001011101101011001010110001001101101011011
Subkey 4  : 01100111001101000100101001101010011101100100101001001111
Subkey 5  : 10001100101110110101100101011000100110110101101100001001
Subkey 6  : 00110100010010100110101001110110010010100100111101100111
Subkey 7  : 10111011010110010101100010011011010110110000100110001100
Subkey 8  : 01001010011010100111011001001010010011110110011100110100
Subkey 9  : 01011001010110001001101101011011000010011000110010111011
Subkey 10 : 01101010011101100100101001001111011001110011010001001010
Subkey 11 : 01011000100110110101101100001001100011001011101101011001
Subkey 12 : 01110110010010100100111101100111001101000100101001101010
Subkey 13 : 10011011010110110000100110001100101110110101100101011000
Subkey 14 : 01001010010011110110011100110100010010100110101001110110
Subkey 15 : 01011011000010011000110010111011010110010101100010011011
Subkey 16 : 01001111011001110011010001001010011010100111011001001010

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         :  ? G1à?Câ¼/°K?zh]C¦Þpâà>¶:ßsÌ$>´Ïvmdî©¨9±ÝÌy?]Aÿ5N7ëÒ¯0´û

Data padded with spaces :  ? G1à?Câ¼/°K?zh]C¦Þpâà>¶:ßsÌ$>´Ïvmdî©¨9±ÝÌy?]Aÿ5N7ëÒ¯0´û[Padded with '0' spaces]

Data in ASCII           : 32,140,160,71,49,224,12,154,67,226,14,188,47,21,176,75,140,122,104,24,93,67,166,18,222,112,226,224,6,20,62,182,21,58,223,115,21,16,204,36,62,180,207,118,109,100,238,169,168,57,177,221,29,204,18,6,121,128,93,65,255,53,78,55,6,235,210,175,48,180,251,18,

Data in Binary          : 00100000,10001100,10100000,01000111,00110001,11100000,00001100,10011010,01000011,11100010,00001110,10111100,00101111,00010101,10110000,01001011,10001100,01111010,01101000,00011000,01011101,01000011,10100110,00010010,11011110,01110000,11100010,11100000,00000110,00010100,00111110,10110110,00010101,00111010,11011111,01110011,00010101,00010000,11001100,00100100,00111110,10110100,11001111,01110110,01101101,01100100,11101110,10101001,10101000,00111001,10110001,11011101,00011101,11001100,00010010,00000110,01111001,10000000,01011101,01000001,11111111,00110101,01001110,00110111,00000110,11101011,11010010,10101111,00110000,10110100,11111011,00010010,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101010001010001010101010100110001100100010000100110011101101001)

Ciphertext Block 1:                                      0010000010001100101000000100011100110001111000000000110010011010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000100011001010000001000111

       - Right 32 Bits:            00110001111000000000110010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       00110001111000000000110010011010
          - S-Box Result:     00011010110011111111010100110100   [per every group of 4-bits]
          - Split Into Two:   0001101011001111 [L] 1111010100110100 [R]
          - Swap Halves:      11110101001101000001101011001111
          - Bit Inversion:    00001010110010111110010100110000
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     10111100010100111101001111110101

          - FUNCTION OUTPUT:  10111100010100111101001111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000100011001010000001000111

       - FUNCTION OUTPUT:          10111100010100111101001111110101

       - Left XOR FUNCTION OUTPUT: 10011100110111110111001110110010

       - Next Round Left 32 Bits:  00110001111000000000110010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100110111110111001110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001111000000000110010011010

       - Right 32 Bits:            10011100110111110111001110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       10011100110111110111001110110010
          - S-Box Result:     00110101011010111101000110001110   [per every group of 4-bits]
          - Split Into Two:   0011010101101011 [L] 1101000110001110 [R]
          - Swap Halves:      11010001100011100011010101101011
          - Bit Inversion:    00101110011100011100101010010100
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     11001111010101101001000010110011

          - FUNCTION OUTPUT:  11001111010101101001000010110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001111000000000110010011010

       - FUNCTION OUTPUT:          11001111010101101001000010110011

       - Left XOR FUNCTION OUTPUT: 11111110101101101001110000101001

       - Next Round Left 32 Bits:  10011100110111110111001110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110101101101001110000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100110111110111001110110010

       - Right 32 Bits:            11111110101101101001110000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       11111110101101101001110000101001
          - S-Box Result:     10111100100000000011010111100011   [per every group of 4-bits]
          - Split Into Two:   1011110010000000 [L] 0011010111100011 [R]
          - Swap Halves:      00110101111000111011110010000000
          - Bit Inversion:    11001010000111000100001101111111
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     01101001110111110101010111110110

          - FUNCTION OUTPUT:  01101001110111110101010111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100110111110111001110110010

       - FUNCTION OUTPUT:          01101001110111110101010111110110

       - Left XOR FUNCTION OUTPUT: 11110101000000000010011001000100

       - Next Round Left 32 Bits:  11111110101101101001110000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101000000000010011001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110101101101001110000101001

       - Right 32 Bits:            11110101000000000010011001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       11110101000000000010011001000100
          - S-Box Result:     10111001111111111110000001110111   [per every group of 4-bits]
          - Split Into Two:   1011100111111111 [L] 1110000001110111 [R]
          - Swap Halves:      11100000011101111011100111111111
          - Bit Inversion:    00011111100010000100011000000000
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     11110110101011001110100000010100

          - FUNCTION OUTPUT:  11110110101011001110100000010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110101101101001110000101001

       - FUNCTION OUTPUT:          11110110101011001110100000010100

       - Left XOR FUNCTION OUTPUT: 00001000000110100111010000111101

       - Next Round Left 32 Bits:  11110101000000000010011001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000110100111010000111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101000000000010011001000100

       - Right 32 Bits:            00001000000110100111010000111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       00001000000110100111010000111101
          - S-Box Result:     11110010101001001101011100010110   [per every group of 4-bits]
          - Split Into Two:   1111001010100100 [L] 1101011100010110 [R]
          - Swap Halves:      11010111000101101111001010100100
          - Bit Inversion:    00101000111010010000110101011011
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     01011001100000000110111111011110

          - FUNCTION OUTPUT:  01011001100000000110111111011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101000000000010011001000100

       - FUNCTION OUTPUT:          01011001100000000110111111011110

       - Left XOR FUNCTION OUTPUT: 10101100100000000100100110011010

       - Next Round Left 32 Bits:  00001000000110100111010000111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100100000000100100110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000110100111010000111101

       - Right 32 Bits:            10101100100000000100100110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       10101100100000000100100110011010
          - S-Box Result:     01000101001011110111001100110100   [per every group of 4-bits]
          - Split Into Two:   0100010100101111 [L] 0111001100110100 [R]
          - Swap Halves:      01110011001101000100010100101111
          - Bit Inversion:    10001100110010111011101011010000
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     01000101101110110111101101000110

          - FUNCTION OUTPUT:  01000101101110110111101101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000110100111010000111101

       - FUNCTION OUTPUT:          01000101101110110111101101000110

       - Left XOR FUNCTION OUTPUT: 01001101101000010000111101111011

       - Next Round Left 32 Bits:  10101100100000000100100110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101101000010000111101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100100000000100100110011010

       - Right 32 Bits:            01001101101000010000111101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       01001101101000010000111101111011
          - S-Box Result:     01110110010010101111101111011000   [per every group of 4-bits]
          - Split Into Two:   0111011001001010 [L] 1111101111011000 [R]
          - Swap Halves:      11111011110110000111011001001010
          - Bit Inversion:    00000100001001111000100110110101
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     10101010010011111111010111110000

          - FUNCTION OUTPUT:  10101010010011111111010111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100100000000100100110011010

       - FUNCTION OUTPUT:          10101010010011111111010111110000

       - Left XOR FUNCTION OUTPUT: 00000110110011111011110001101010

       - Next Round Left 32 Bits:  01001101101000010000111101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110110011111011110001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101101000010000111101111011

       - Right 32 Bits:            00000110110011111011110001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       00000110110011111011110001101010
          - S-Box Result:     11110000010110111000010100000100   [per every group of 4-bits]
          - Split Into Two:   1111000001011011 [L] 1000010100000100 [R]
          - Swap Halves:      10000101000001001111000001011011
          - Bit Inversion:    01111010111110110000111110100100
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     10110011110000010100011011000011

          - FUNCTION OUTPUT:  10110011110000010100011011000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101101000010000111101111011

       - FUNCTION OUTPUT:          10110011110000010100011011000011

       - Left XOR FUNCTION OUTPUT: 11111110011000000100100110111000

       - Next Round Left 32 Bits:  00000110110011111011110001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110011000000100100110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110110011111011110001101010

       - Right 32 Bits:            11111110011000000100100110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       11111110011000000100100110111000
          - S-Box Result:     10111100000011110111001110000010   [per every group of 4-bits]
          - Split Into Two:   1011110000001111 [L] 0111001110000010 [R]
          - Swap Halves:      01110011100000101011110000001111
          - Bit Inversion:    10001100011111010100001111110000
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     00101001101001010101110100101000

          - FUNCTION OUTPUT:  00101001101001010101110100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110110011111011110001101010

       - FUNCTION OUTPUT:          00101001101001010101110100101000

       - Left XOR FUNCTION OUTPUT: 00101111011010101110000101000010

       - Next Round Left 32 Bits:  11111110011000000100100110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111011010101110000101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110011000000100100110111000

       - Right 32 Bits:            00101111011010101110000101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       00101111011010101110000101000010
          - S-Box Result:     11101011000001001100101001111110   [per every group of 4-bits]
          - Split Into Two:   1110101100000100 [L] 1100101001111110 [R]
          - Swap Halves:      11001010011111101110101100000100
          - Bit Inversion:    00110101100000010001010011111011
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     11011100111101110100100011000111

          - FUNCTION OUTPUT:  11011100111101110100100011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110011000000100100110111000

       - FUNCTION OUTPUT:          11011100111101110100100011000111

       - Left XOR FUNCTION OUTPUT: 00100010100101110000000101111111

       - Next Round Left 32 Bits:  00101111011010101110000101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010100101110000000101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111011010101110000101000010

       - Right 32 Bits:            00100010100101110000000101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       00100010100101110000000101111111
          - S-Box Result:     11101110001111011111101011011011   [per every group of 4-bits]
          - Split Into Two:   1110111000111101 [L] 1111101011011011 [R]
          - Swap Halves:      11111010110110111110111000111101
          - Bit Inversion:    00000101001001000001000111000010
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     01010100110011110000011100011001

          - FUNCTION OUTPUT:  01010100110011110000011100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111011010101110000101000010

       - FUNCTION OUTPUT:          01010100110011110000011100011001

       - Left XOR FUNCTION OUTPUT: 01111011101001011110011001011011

       - Next Round Left 32 Bits:  00100010100101110000000101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011101001011110011001011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010100101110000000101111111

       - Right 32 Bits:            01111011101001011110011001011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       01111011101001011110011001011011
          - S-Box Result:     11011000010010011100000010011000   [per every group of 4-bits]
          - Split Into Two:   1101100001001001 [L] 1100000010011000 [R]
          - Swap Halves:      11000000100110001101100001001001
          - Bit Inversion:    00111111011001110010011110110110
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     10100010000111011010100100100000

          - FUNCTION OUTPUT:  10100010000111011010100100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010100101110000000101111111

       - FUNCTION OUTPUT:          10100010000111011010100100100000

       - Left XOR FUNCTION OUTPUT: 10000000100010101010100001011111

       - Next Round Left 32 Bits:  01111011101001011110011001011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000100010101010100001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011101001011110011001011011

       - Right 32 Bits:            10000000100010101010100001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       10000000100010101010100001011111
          - S-Box Result:     00101111001001000100001010011011   [per every group of 4-bits]
          - Split Into Two:   0010111100100100 [L] 0100001010011011 [R]
          - Swap Halves:      01000010100110110010111100100100
          - Bit Inversion:    10111101011001001101000011011011
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     10000011000011011110011001010100

          - FUNCTION OUTPUT:  10000011000011011110011001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011101001011110011001011011

       - FUNCTION OUTPUT:          10000011000011011110011001010100

       - Left XOR FUNCTION OUTPUT: 11111000101010000000000000001111

       - Next Round Left 32 Bits:  10000000100010101010100001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000101010000000000000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000100010101010100001011111

       - Right 32 Bits:            11111000101010000000000000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       11111000101010000000000000001111
          - S-Box Result:     10110010010000101111111111111011   [per every group of 4-bits]
          - Split Into Two:   1011001001000010 [L] 1111111111111011 [R]
          - Swap Halves:      11111111111110111011001001000010
          - Bit Inversion:    00000000000001000100110110111101
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     10000011101111100001110000101010

          - FUNCTION OUTPUT:  10000011101111100001110000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000100010101010100001011111

       - FUNCTION OUTPUT:          10000011101111100001110000101010

       - Left XOR FUNCTION OUTPUT: 00000011001101001011010001110101

       - Next Round Left 32 Bits:  11111000101010000000000000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011001101001011010001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000101010000000000000001111

       - Right 32 Bits:            00000011001101001011010001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       00000011001101001011010001110101
          - S-Box Result:     11110001000101111000011111011001   [per every group of 4-bits]
          - Split Into Two:   1111000100010111 [L] 1000011111011001 [R]
          - Swap Halves:      10000111110110011111000100010111
          - Bit Inversion:    01111000001001100000111011101000
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11001110101111100011100000101101

          - FUNCTION OUTPUT:  11001110101111100011100000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000101010000000000000001111

       - FUNCTION OUTPUT:          11001110101111100011100000101101

       - Left XOR FUNCTION OUTPUT: 00110110000101100011100000100010

       - Next Round Left 32 Bits:  00000011001101001011010001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110000101100011100000100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011001101001011010001110101

       - Right 32 Bits:            00110110000101100011100000100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       00110110000101100011100000100010
          - S-Box Result:     00010000101000000001001011101110   [per every group of 4-bits]
          - Split Into Two:   0001000010100000 [L] 0001001011101110 [R]
          - Swap Halves:      00010010111011100001000010100000
          - Bit Inversion:    11101101000100011110111101011111
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     00001100001101101011010101111000

          - FUNCTION OUTPUT:  00001100001101101011010101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011001101001011010001110101

       - FUNCTION OUTPUT:          00001100001101101011010101111000

       - Left XOR FUNCTION OUTPUT: 00001111000000100000000100001101

       - Next Round Left 32 Bits:  00110110000101100011100000100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111000000100000000100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000111100000010000000010000110100110110000101100011100000100010

 > Decrypted Block:     0000111100000010000000010000110100110110000101100011100000100010


!!!CBC: Previous Ciphertext:                             0101010001010001010101010100110001100100010000100110011101101001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101101010011010101000100000101010010010101000101111101001011

 > Final Processed Block:                                0101101101010011010101000100000101010010010101000101111101001011



Ciphertext Block 2:                                      0100001111100010000011101011110000101111000101011011000001001011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011111000100000111010111100

       - Right 32 Bits:            00101111000101011011000001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       00101111000101011011000001001011
          - S-Box Result:     11101011101010011000111101111000   [per every group of 4-bits]
          - Split Into Two:   1110101110101001 [L] 1000111101111000 [R]
          - Swap Halves:      10001111011110001110101110101001
          - Bit Inversion:    01110000100001110001010001010110
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11000110000111110010001010010011

          - FUNCTION OUTPUT:  11000110000111110010001010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011111000100000111010111100

       - FUNCTION OUTPUT:          11000110000111110010001010010011

       - Left XOR FUNCTION OUTPUT: 10000101111111010010110000101111

       - Next Round Left 32 Bits:  00101111000101011011000001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101111111010010110000101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111000101011011000001001011

       - Right 32 Bits:            10000101111111010010110000101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       10000101111111010010110000101111
          - S-Box Result:     00101001101101101110010111101011   [per every group of 4-bits]
          - Split Into Two:   0010100110110110 [L] 1110010111101011 [R]
          - Swap Halves:      11100101111010110010100110110110
          - Bit Inversion:    00011010000101001101011001001001
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     11111011001100111000110001101110

          - FUNCTION OUTPUT:  11111011001100111000110001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111000101011011000001001011

       - FUNCTION OUTPUT:          11111011001100111000110001101110

       - Left XOR FUNCTION OUTPUT: 11010100001001100011110000100101

       - Next Round Left 32 Bits:  10000101111111010010110000101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100001001100011110000100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101111111010010110000101111

       - Right 32 Bits:            11010100001001100011110000100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       11010100001001100011110000100101
          - S-Box Result:     01100111111000000001010111101001   [per every group of 4-bits]
          - Split Into Two:   0110011111100000 [L] 0001010111101001 [R]
          - Swap Halves:      00010101111010010110011111100000
          - Bit Inversion:    11101010000101101001100000011111
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     01001001110101011000111010010110

          - FUNCTION OUTPUT:  01001001110101011000111010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101111111010010110000101111

       - FUNCTION OUTPUT:          01001001110101011000111010010110

       - Left XOR FUNCTION OUTPUT: 11001100001010001010001010111001

       - Next Round Left 32 Bits:  11010100001001100011110000100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100001010001010001010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100001001100011110000100101

       - Right 32 Bits:            11001100001010001010001010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       11001100001010001010001010111001
          - S-Box Result:     01010101111000100100111010000011   [per every group of 4-bits]
          - Split Into Two:   0101010111100010 [L] 0100111010000011 [R]
          - Swap Halves:      01001110100000110101010111100010
          - Bit Inversion:    10110001011111001010101000011101
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     01011000010110000000010000001001

          - FUNCTION OUTPUT:  01011000010110000000010000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100001001100011110000100101

       - FUNCTION OUTPUT:          01011000010110000000010000001001

       - Left XOR FUNCTION OUTPUT: 10001100011111100011100000101100

       - Next Round Left 32 Bits:  11001100001010001010001010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100011111100011100000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100001010001010001010111001

       - Right 32 Bits:            10001100011111100011100000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       10001100011111100011100000101100
          - S-Box Result:     00100101110111000001001011100101   [per every group of 4-bits]
          - Split Into Two:   0010010111011100 [L] 0001001011100101 [R]
          - Swap Halves:      00010010111001010010010111011100
          - Bit Inversion:    11101101000110101101101000100011
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     10011100011100111011100010100110

          - FUNCTION OUTPUT:  10011100011100111011100010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100001010001010001010111001

       - FUNCTION OUTPUT:          10011100011100111011100010100110

       - Left XOR FUNCTION OUTPUT: 01010000010110110001101000011111

       - Next Round Left 32 Bits:  10001100011111100011100000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000010110110001101000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100011111100011100000101100

       - Right 32 Bits:            01010000010110110001101000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       01010000010110110001101000011111
          - S-Box Result:     10011111100110001010010010101011   [per every group of 4-bits]
          - Split Into Two:   1001111110011000 [L] 1010010010101011 [R]
          - Swap Halves:      10100100101010111001111110011000
          - Bit Inversion:    01011011010101000110000001100111
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     10010010001001001010000111110001

          - FUNCTION OUTPUT:  10010010001001001010000111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100011111100011100000101100

       - FUNCTION OUTPUT:          10010010001001001010000111110001

       - Left XOR FUNCTION OUTPUT: 00011110010110101001100111011101

       - Next Round Left 32 Bits:  01010000010110110001101000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110010110101001100111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000010110110001101000011111

       - Right 32 Bits:            00011110010110101001100111011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       00011110010110101001100111011101
          - S-Box Result:     10101100100101000011001101100110   [per every group of 4-bits]
          - Split Into Two:   1010110010010100 [L] 0011001101100110 [R]
          - Swap Halves:      00110011011001101010110010010100
          - Bit Inversion:    11001100100110010101001101101011
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     01100010111100010010111100101110

          - FUNCTION OUTPUT:  01100010111100010010111100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000010110110001101000011111

       - FUNCTION OUTPUT:          01100010111100010010111100101110

       - Left XOR FUNCTION OUTPUT: 00110010101010100011010100110001

       - Next Round Left 32 Bits:  00011110010110101001100111011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010101010100011010100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110010110101001100111011101

       - Right 32 Bits:            00110010101010100011010100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       00110010101010100011010100110001
          - S-Box Result:     00011110010001000001100100011010   [per every group of 4-bits]
          - Split Into Two:   0001111001000100 [L] 0001100100011010 [R]
          - Swap Halves:      00011001000110100001111001000100
          - Bit Inversion:    11100110111001011110000110111011
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     00101111110111111010100011011100

          - FUNCTION OUTPUT:  00101111110111111010100011011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110010110101001100111011101

       - FUNCTION OUTPUT:          00101111110111111010100011011100

       - Left XOR FUNCTION OUTPUT: 00110001100001010011000100000001

       - Next Round Left 32 Bits:  00110010101010100011010100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001100001010011000100000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010101010100011010100110001

       - Right 32 Bits:            00110001100001010011000100000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       00110001100001010011000100000001
          - S-Box Result:     00011010001010010001101011111010   [per every group of 4-bits]
          - Split Into Two:   0001101000101001 [L] 0001101011111010 [R]
          - Swap Halves:      00011010111110100001101000101001
          - Bit Inversion:    11100101000001011110010111010110
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     01000000110111011111101100001110

          - FUNCTION OUTPUT:  01000000110111011111101100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010101010100011010100110001

       - FUNCTION OUTPUT:          01000000110111011111101100001110

       - Left XOR FUNCTION OUTPUT: 01110010011101111100111000111111

       - Next Round Left 32 Bits:  00110001100001010011000100000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010011101111100111000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001100001010011000100000001

       - Right 32 Bits:            01110010011101111100111000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       01110010011101111100111000111111
          - S-Box Result:     11011110110111010101110000011011   [per every group of 4-bits]
          - Split Into Two:   1101111011011101 [L] 0101110000011011 [R]
          - Swap Halves:      01011100000110111101111011011101
          - Bit Inversion:    10100011111001000010000100100010
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     01001010100100100111110100011110

          - FUNCTION OUTPUT:  01001010100100100111110100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001100001010011000100000001

       - FUNCTION OUTPUT:          01001010100100100111110100011110

       - Left XOR FUNCTION OUTPUT: 01111011000101110100110000011111

       - Next Round Left 32 Bits:  01110010011101111100111000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011000101110100110000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010011101111100111000111111

       - Right 32 Bits:            01111011000101110100110000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       01111011000101110100110000011111
          - S-Box Result:     11011000101011010111010110101011   [per every group of 4-bits]
          - Split Into Two:   1101100010101101 [L] 0111010110101011 [R]
          - Swap Halves:      01110101101010111101100010101101
          - Bit Inversion:    10001010010101000010011101010010
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     11011011101111110011000110001001

          - FUNCTION OUTPUT:  11011011101111110011000110001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010011101111100111000111111

       - FUNCTION OUTPUT:          11011011101111110011000110001001

       - Left XOR FUNCTION OUTPUT: 10101001110010001111111110110110

       - Next Round Left 32 Bits:  01111011000101110100110000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001110010001111111110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011000101110100110000011111

       - Right 32 Bits:            10101001110010001111111110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       10101001110010001111111110110110
          - S-Box Result:     01000011010100101011101110000000   [per every group of 4-bits]
          - Split Into Two:   0100001101010010 [L] 1011101110000000 [R]
          - Swap Halves:      10111011100000000100001101010010
          - Bit Inversion:    01000100011111111011110010101101
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     11011001000001010011001000111011

          - FUNCTION OUTPUT:  11011001000001010011001000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011000101110100110000011111

       - FUNCTION OUTPUT:          11011001000001010011001000111011

       - Left XOR FUNCTION OUTPUT: 10100010000100100111111000100100

       - Next Round Left 32 Bits:  10101001110010001111111110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010000100100111111000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001110010001111111110110110

       - Right 32 Bits:            10100010000100100111111000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       10100010000100100111111000100100
          - S-Box Result:     01001110101011101101110011100111   [per every group of 4-bits]
          - Split Into Two:   0100111010101110 [L] 1101110011100111 [R]
          - Swap Halves:      11011100111001110100111010101110
          - Bit Inversion:    00100011000110001011000101010001
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     00011101011100011000011111011110

          - FUNCTION OUTPUT:  00011101011100011000011111011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001110010001111111110110110

       - FUNCTION OUTPUT:          00011101011100011000011111011110

       - Left XOR FUNCTION OUTPUT: 10110100101110010111100001101000

       - Next Round Left 32 Bits:  10100010000100100111111000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100101110010111100001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010000100100111111000100100

       - Right 32 Bits:            10110100101110010111100001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       10110100101110010111100001101000
          - S-Box Result:     10000111100000111101001000000010   [per every group of 4-bits]
          - Split Into Two:   1000011110000011 [L] 1101001000000010 [R]
          - Swap Halves:      11010010000000101000011110000011
          - Bit Inversion:    00101101111111010111100001111100
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     10101110010001110010100111101011

          - FUNCTION OUTPUT:  10101110010001110010100111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010000100100111111000100100

       - FUNCTION OUTPUT:          10101110010001110010100111101011

       - Left XOR FUNCTION OUTPUT: 00001100010101010101011111001111

       - Next Round Left 32 Bits:  10110100101110010111100001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100010101010101011111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100101110010111100001101000

       - Right 32 Bits:            00001100010101010101011111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       00001100010101010101011111001111
          - S-Box Result:     11110101100110011001110101011011   [per every group of 4-bits]
          - Split Into Two:   1111010110011001 [L] 1001110101011011 [R]
          - Swap Halves:      10011101010110111111010110011001
          - Bit Inversion:    01100010101001000000101001100110
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11010100001111000011110010100011

          - FUNCTION OUTPUT:  11010100001111000011110010100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100101110010111100001101000

       - FUNCTION OUTPUT:          11010100001111000011110010100011

       - Left XOR FUNCTION OUTPUT: 01100000100001010100010011001011

       - Next Round Left 32 Bits:  00001100010101010101011111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000100001010100010011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100010101010101011111001111

       - Right 32 Bits:            01100000100001010100010011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       01100000100001010100010011001011
          - S-Box Result:     00001111001010010111011101011000   [per every group of 4-bits]
          - Split Into Two:   0000111100101001 [L] 0111011101011000 [R]
          - Swap Halves:      01110111010110000000111100101001
          - Bit Inversion:    10001000101001111111000011010110
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     01101001100000001010101011110001

          - FUNCTION OUTPUT:  01101001100000001010101011110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100010101010101011111001111

       - FUNCTION OUTPUT:          01101001100000001010101011110001

       - Left XOR FUNCTION OUTPUT: 01100101110101011111110100111110

       - Next Round Left 32 Bits:  01100000100001010100010011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101110101011111110100111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110010111010101111111010011111001100000100001010100010011001011

 > Decrypted Block:     0110010111010101111111010011111001100000100001010100010011001011


!!!CBC: Previous Ciphertext:                             0010000010001100101000000100011100110001111000000000110010011010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100010101011001010111010111100101010001011001010100100001010001

 > Final Processed Block:                                0100010101011001010111010111100101010001011001010100100001010001



Ciphertext Block 3:                                      1000110001111010011010000001100001011101010000111010011000010010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100011110100110100000011000

       - Right 32 Bits:            01011101010000111010011000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       01011101010000111010011000010010
          - S-Box Result:     10010110011100010100000010101110   [per every group of 4-bits]
          - Split Into Two:   1001011001110001 [L] 0100000010101110 [R]
          - Swap Halves:      01000000101011101001011001110001
          - Bit Inversion:    10111111010100010110100110001110
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     00001001110010010101111101001011

          - FUNCTION OUTPUT:  00001001110010010101111101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100011110100110100000011000

       - FUNCTION OUTPUT:          00001001110010010101111101001011

       - Left XOR FUNCTION OUTPUT: 10000101101100110011011101010011

       - Next Round Left 32 Bits:  01011101010000111010011000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101101100110011011101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101010000111010011000010010

       - Right 32 Bits:            10000101101100110011011101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       10000101101100110011011101010011
          - S-Box Result:     00101001100000010001110110010001   [per every group of 4-bits]
          - Split Into Two:   0010100110000001 [L] 0001110110010001 [R]
          - Swap Halves:      00011101100100010010100110000001
          - Bit Inversion:    11100010011011101101011001111110
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     00000011010010011000110001011001

          - FUNCTION OUTPUT:  00000011010010011000110001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101010000111010011000010010

       - FUNCTION OUTPUT:          00000011010010011000110001011001

       - Left XOR FUNCTION OUTPUT: 01011110000010100010101001001011

       - Next Round Left 32 Bits:  10000101101100110011011101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110000010100010101001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101101100110011011101010011

       - Right 32 Bits:            01011110000010100010101001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       01011110000010100010101001001011
          - S-Box Result:     10011100111101001110010001111000   [per every group of 4-bits]
          - Split Into Two:   1001110011110100 [L] 1110010001111000 [R]
          - Swap Halves:      11100100011110001001110011110100
          - Bit Inversion:    00011011100001110110001100001011
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     10111000010001000111010110000010

          - FUNCTION OUTPUT:  10111000010001000111010110000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101101100110011011101010011

       - FUNCTION OUTPUT:          10111000010001000111010110000010

       - Left XOR FUNCTION OUTPUT: 00111101111101110100001011010001

       - Next Round Left 32 Bits:  01011110000010100010101001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101111101110100001011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110000010100010101001001011

       - Right 32 Bits:            00111101111101110100001011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       00111101111101110100001011010001
          - S-Box Result:     00010110101111010111111001101010   [per every group of 4-bits]
          - Split Into Two:   0001011010111101 [L] 0111111001101010 [R]
          - Swap Halves:      01111110011010100001011010111101
          - Bit Inversion:    10000001100101011110100101000010
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     01101000101100010100011101010110

          - FUNCTION OUTPUT:  01101000101100010100011101010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110000010100010101001001011

       - FUNCTION OUTPUT:          01101000101100010100011101010110

       - Left XOR FUNCTION OUTPUT: 00110110101110110110110100011101

       - Next Round Left 32 Bits:  00111101111101110100001011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110101110110110110100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101111101110100001011010001

       - Right 32 Bits:            00110110101110110110110100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       00110110101110110110110100011101
          - S-Box Result:     00010000100010000000011010100110   [per every group of 4-bits]
          - Split Into Two:   0001000010001000 [L] 0000011010100110 [R]
          - Swap Halves:      00000110101001100001000010001000
          - Bit Inversion:    11111001010110011110111101110111
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     10001000001100001000110111110010

          - FUNCTION OUTPUT:  10001000001100001000110111110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101111101110100001011010001

       - FUNCTION OUTPUT:          10001000001100001000110111110010

       - Left XOR FUNCTION OUTPUT: 10110101110001111100111100100011

       - Next Round Left 32 Bits:  00110110101110110110110100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101110001111100111100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110101110110110110100011101

       - Right 32 Bits:            10110101110001111100111100100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       10110101110001111100111100100011
          - S-Box Result:     10001001010111010101101111100001   [per every group of 4-bits]
          - Split Into Two:   1000100101011101 [L] 0101101111100001 [R]
          - Swap Halves:      01011011111000011000100101011101
          - Bit Inversion:    10100100000111100111011010100010
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     01101101011011101011011100110100

          - FUNCTION OUTPUT:  01101101011011101011011100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110101110110110110100011101

       - FUNCTION OUTPUT:          01101101011011101011011100110100

       - Left XOR FUNCTION OUTPUT: 01011011110101011101101000101001

       - Next Round Left 32 Bits:  10110101110001111100111100100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011110101011101101000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101110001111100111100100011

       - Right 32 Bits:            01011011110101011101101000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       01011011110101011101101000101001
          - S-Box Result:     10011000011010010110010011100011   [per every group of 4-bits]
          - Split Into Two:   1001100001101001 [L] 0110010011100011 [R]
          - Swap Halves:      01100100111000111001100001101001
          - Bit Inversion:    10011011000111000110011110010110
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     00110101011101000001101111010011

          - FUNCTION OUTPUT:  00110101011101000001101111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101110001111100111100100011

       - FUNCTION OUTPUT:          00110101011101000001101111010011

       - Left XOR FUNCTION OUTPUT: 10000000101100111101010011110000

       - Next Round Left 32 Bits:  01011011110101011101101000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000101100111101010011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011110101011101101000101001

       - Right 32 Bits:            10000000101100111101010011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       10000000101100111101010011110000
          - S-Box Result:     00101111100000010110011110111111   [per every group of 4-bits]
          - Split Into Two:   0010111110000001 [L] 0110011110111111 [R]
          - Swap Halves:      01100111101111110010111110000001
          - Bit Inversion:    10011000010000001101000001111110
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     01010001011110101001100100011001

          - FUNCTION OUTPUT:  01010001011110101001100100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011110101011101101000101001

       - FUNCTION OUTPUT:          01010001011110101001100100011001

       - Left XOR FUNCTION OUTPUT: 00001010101011110100001100110000

       - Next Round Left 32 Bits:  10000000101100111101010011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010101011110100001100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000101100111101010011110000

       - Right 32 Bits:            00001010101011110100001100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       00001010101011110100001100110000
          - S-Box Result:     11110100010010110111000100011111   [per every group of 4-bits]
          - Split Into Two:   1111010001001011 [L] 0111000100011111 [R]
          - Swap Halves:      01110001000111111111010001001011
          - Bit Inversion:    10001110111000000000101110110100
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     00101011001110000001010101101100

          - FUNCTION OUTPUT:  00101011001110000001010101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000101100111101010011110000

       - FUNCTION OUTPUT:          00101011001110000001010101101100

       - Left XOR FUNCTION OUTPUT: 10101011100010111100000110011100

       - Next Round Left 32 Bits:  00001010101011110100001100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011100010111100000110011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010101011110100001100110000

       - Right 32 Bits:            10101011100010111100000110011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       10101011100010111100000110011100
          - S-Box Result:     01001000001010000101101000110101   [per every group of 4-bits]
          - Split Into Two:   0100100000101000 [L] 0101101000110101 [R]
          - Swap Halves:      01011010001101010100100000101000
          - Bit Inversion:    10100101110010101011011111010111
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     01001100101111001110101111101011

          - FUNCTION OUTPUT:  01001100101111001110101111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010101011110100001100110000

       - FUNCTION OUTPUT:          01001100101111001110101111101011

       - Left XOR FUNCTION OUTPUT: 01000110000100111010100011011011

       - Next Round Left 32 Bits:  10101011100010111100000110011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110000100111010100011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011100010111100000110011100

       - Right 32 Bits:            01000110000100111010100011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       01000110000100111010100011011011
          - S-Box Result:     01110000101000010100001001101000   [per every group of 4-bits]
          - Split Into Two:   0111000010100001 [L] 0100001001101000 [R]
          - Swap Halves:      01000010011010000111000010100001
          - Bit Inversion:    10111101100101111000111101011110
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     11101100011111001001100110000101

          - FUNCTION OUTPUT:  11101100011111001001100110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011100010111100000110011100

       - FUNCTION OUTPUT:          11101100011111001001100110000101

       - Left XOR FUNCTION OUTPUT: 01000111111101110101100000011001

       - Next Round Left 32 Bits:  01000110000100111010100011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111111101110101100000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110000100111010100011011011

       - Right 32 Bits:            01000111111101110101100000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       01000111111101110101100000011001
          - S-Box Result:     01111101101111011001001010100011   [per every group of 4-bits]
          - Split Into Two:   0111110110111101 [L] 1001001010100011 [R]
          - Swap Halves:      10010010101000110111110110111101
          - Bit Inversion:    01101101010111001000001001000010
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     11110000001001100000110011010100

          - FUNCTION OUTPUT:  11110000001001100000110011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110000100111010100011011011

       - FUNCTION OUTPUT:          11110000001001100000110011010100

       - Left XOR FUNCTION OUTPUT: 10110110001101011010010000001111

       - Next Round Left 32 Bits:  01000111111101110101100000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110001101011010010000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111111101110101100000011001

       - Right 32 Bits:            10110110001101011010010000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       10110110001101011010010000001111
          - S-Box Result:     10000000000110010100011111111011   [per every group of 4-bits]
          - Split Into Two:   1000000000011001 [L] 0100011111111011 [R]
          - Swap Halves:      01000111111110111000000000011001
          - Bit Inversion:    10111000000001000111111111100110
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     10000110011011010100100101101001

          - FUNCTION OUTPUT:  10000110011011010100100101101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111111101110101100000011001

       - FUNCTION OUTPUT:          10000110011011010100100101101001

       - Left XOR FUNCTION OUTPUT: 11000001100110100001000101110000

       - Next Round Left 32 Bits:  10110110001101011010010000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001100110100001000101110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110001101011010010000001111

       - Right 32 Bits:            11000001100110100001000101110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       11000001100110100001000101110000
          - S-Box Result:     01011010001101001010101011011111   [per every group of 4-bits]
          - Split Into Two:   0101101000110100 [L] 1010101011011111 [R]
          - Swap Halves:      10101010110111110101101000110100
          - Bit Inversion:    01010101001000001010010111001011
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     11010110100110101111010001011100

          - FUNCTION OUTPUT:  11010110100110101111010001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110001101011010010000001111

       - FUNCTION OUTPUT:          11010110100110101111010001011100

       - Left XOR FUNCTION OUTPUT: 01100000101011110101000001010011

       - Next Round Left 32 Bits:  11000001100110100001000101110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000101011110101000001010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001100110100001000101110000

       - Right 32 Bits:            01100000101011110101000001010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       01100000101011110101000001010011
          - S-Box Result:     00001111010010111001111110010001   [per every group of 4-bits]
          - Split Into Two:   0000111101001011 [L] 1001111110010001 [R]
          - Swap Halves:      10011111100100010000111101001011
          - Bit Inversion:    01100000011011101111000010110100
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11010110111101101100011001110001

          - FUNCTION OUTPUT:  11010110111101101100011001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001100110100001000101110000

       - FUNCTION OUTPUT:          11010110111101101100011001110001

       - Left XOR FUNCTION OUTPUT: 00010111011011001101011100000001

       - Next Round Left 32 Bits:  01100000101011110101000001010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111011011001101011100000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000101011110101000001010011

       - Right 32 Bits:            00010111011011001101011100000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       00010111011011001101011100000001
          - S-Box Result:     10101101000001010110110111111010   [per every group of 4-bits]
          - Split Into Two:   1010110100000101 [L] 0110110111111010 [R]
          - Swap Halves:      01101101111110101010110100000101
          - Bit Inversion:    10010010000001010101001011111010
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     01110011001000100000100011011101

          - FUNCTION OUTPUT:  01110011001000100000100011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000101011110101000001010011

       - FUNCTION OUTPUT:          01110011001000100000100011011101

       - Left XOR FUNCTION OUTPUT: 00010011100011010101100010001110

       - Next Round Left 32 Bits:  00010111011011001101011100000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100011010101100010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001001110001101010110001000111000010111011011001101011100000001

 > Decrypted Block:     0001001110001101010110001000111000010111011011001101011100000001


!!!CBC: Previous Ciphertext:                             0100001111100010000011101011110000101111000101011011000001001011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101000001101111010101100011001000111000011110010110011101001010

 > Final Processed Block:                                0101000001101111010101100011001000111000011110010110011101001010



Ciphertext Block 4:                                      1101111001110000111000101110000000000110000101000011111010110110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110011100001110001011100000

       - Right 32 Bits:            00000110000101000011111010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       00000110000101000011111010110110
          - S-Box Result:     11110000101001110001110010000000   [per every group of 4-bits]
          - Split Into Two:   1111000010100111 [L] 0001110010000000 [R]
          - Swap Halves:      00011100100000001111000010100111
          - Bit Inversion:    11100011011111110000111101011000
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     01010101111001110011100110011101

          - FUNCTION OUTPUT:  01010101111001110011100110011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110011100001110001011100000

       - FUNCTION OUTPUT:          01010101111001110011100110011101

       - Left XOR FUNCTION OUTPUT: 10001011100101111101101101111101

       - Next Round Left 32 Bits:  00000110000101000011111010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011100101111101101101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110000101000011111010110110

       - Right 32 Bits:            10001011100101111101101101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       10001011100101111101101101111101
          - S-Box Result:     00101000001111010110100011010110   [per every group of 4-bits]
          - Split Into Two:   0010100000111101 [L] 0110100011010110 [R]
          - Swap Halves:      01101000110101100010100000111101
          - Bit Inversion:    10010111001010011101011111000010
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     01110110000011101000110111100101

          - FUNCTION OUTPUT:  01110110000011101000110111100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110000101000011111010110110

       - FUNCTION OUTPUT:          01110110000011101000110111100101

       - Left XOR FUNCTION OUTPUT: 01110000000110101011001101010011

       - Next Round Left 32 Bits:  10001011100101111101101101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000000110101011001101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100101111101101101111101

       - Right 32 Bits:            01110000000110101011001101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       01110000000110101011001101010011
          - S-Box Result:     11011111101001001000000110010001   [per every group of 4-bits]
          - Split Into Two:   1101111110100100 [L] 1000000110010001 [R]
          - Swap Halves:      10000001100100011101111110100100
          - Bit Inversion:    01111110011011100010000001011011
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     11011101101011010011011011010010

          - FUNCTION OUTPUT:  11011101101011010011011011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100101111101101101111101

       - FUNCTION OUTPUT:          11011101101011010011011011010010

       - Left XOR FUNCTION OUTPUT: 01010110001110101110110110101111

       - Next Round Left 32 Bits:  01110000000110101011001101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110001110101110110110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000000110101011001101010011

       - Right 32 Bits:            01010110001110101110110110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       01010110001110101110110110101111
          - S-Box Result:     10010000000101001100011001001011   [per every group of 4-bits]
          - Split Into Two:   1001000000010100 [L] 1100011001001011 [R]
          - Swap Halves:      11000110010010111001000000010100
          - Bit Inversion:    00111001101101000110111111101011
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     11010000100100001100000111111111

          - FUNCTION OUTPUT:  11010000100100001100000111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000000110101011001101010011

       - FUNCTION OUTPUT:          11010000100100001100000111111111

       - Left XOR FUNCTION OUTPUT: 10100000100010100111001010101100

       - Next Round Left 32 Bits:  01010110001110101110110110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000100010100111001010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110001110101110110110101111

       - Right 32 Bits:            10100000100010100111001010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       10100000100010100111001010101100
          - S-Box Result:     01001111001001001101111001000101   [per every group of 4-bits]
          - Split Into Two:   0100111100100100 [L] 1101111001000101 [R]
          - Swap Halves:      11011110010001010100111100100100
          - Bit Inversion:    00100001101110101011000011011011
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     01010000110100111101001001011110

          - FUNCTION OUTPUT:  01010000110100111101001001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110001110101110110110101111

       - FUNCTION OUTPUT:          01010000110100111101001001011110

       - Left XOR FUNCTION OUTPUT: 00000110111010010011111111110001

       - Next Round Left 32 Bits:  10100000100010100111001010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110111010010011111111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000100010100111001010101100

       - Right 32 Bits:            00000110111010010011111111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       00000110111010010011111111110001
          - S-Box Result:     11110000110000110001101110111010   [per every group of 4-bits]
          - Split Into Two:   1111000011000011 [L] 0001101110111010 [R]
          - Swap Halves:      00011011101110101111000011000011
          - Bit Inversion:    11100100010001010000111100111100
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     00101101001101011100111010101010

          - FUNCTION OUTPUT:  00101101001101011100111010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000100010100111001010101100

       - FUNCTION OUTPUT:          00101101001101011100111010101010

       - Left XOR FUNCTION OUTPUT: 10001101101111111011110000000110

       - Next Round Left 32 Bits:  00000110111010010011111111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101101111111011110000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110111010010011111111110001

       - Right 32 Bits:            10001101101111111011110000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       10001101101111111011110000000110
          - S-Box Result:     00100110100010111000010111110000   [per every group of 4-bits]
          - Split Into Two:   0010011010001011 [L] 1000010111110000 [R]
          - Swap Halves:      10000101111100000010011010001011
          - Bit Inversion:    01111010000011111101100101110100
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     11010100011001111010010100110001

          - FUNCTION OUTPUT:  11010100011001111010010100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110111010010011111111110001

       - FUNCTION OUTPUT:          11010100011001111010010100110001

       - Left XOR FUNCTION OUTPUT: 11010010100011101001101011000000

       - Next Round Left 32 Bits:  10001101101111111011110000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010100011101001101011000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101101111111011110000000110

       - Right 32 Bits:            11010010100011101001101011000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       11010010100011101001101011000000
          - S-Box Result:     01101110001011000011010001011111   [per every group of 4-bits]
          - Split Into Two:   0110111000101100 [L] 0011010001011111 [R]
          - Swap Halves:      00110100010111110110111000101100
          - Bit Inversion:    11001011101000001001000111010011
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     00000010100110101101100010110100

          - FUNCTION OUTPUT:  00000010100110101101100010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101101111111011110000000110

       - FUNCTION OUTPUT:          00000010100110101101100010110100

       - Left XOR FUNCTION OUTPUT: 10001111001001010110010010110010

       - Next Round Left 32 Bits:  11010010100011101001101011000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111001001010110010010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010100011101001101011000000

       - Right 32 Bits:            10001111001001010110010010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       10001111001001010110010010110010
          - S-Box Result:     00101011111010010000011110001110   [per every group of 4-bits]
          - Split Into Two:   0010101111101001 [L] 0000011110001110 [R]
          - Swap Halves:      00000111100011100010101111101001
          - Bit Inversion:    11111000011100011101010000010110
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     01011101101010011100101011001110

          - FUNCTION OUTPUT:  01011101101010011100101011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010100011101001101011000000

       - FUNCTION OUTPUT:          01011101101010011100101011001110

       - Left XOR FUNCTION OUTPUT: 10001111001001110101000000001110

       - Next Round Left 32 Bits:  10001111001001010110010010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111001001110101000000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111001001010110010010110010

       - Right 32 Bits:            10001111001001110101000000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       10001111001001110101000000001110
          - S-Box Result:     00101011111011011001111111111100   [per every group of 4-bits]
          - Split Into Two:   0010101111101101 [L] 1001111111111100 [R]
          - Swap Halves:      10011111111111000010101111101101
          - Bit Inversion:    01100000000000111101010000010010
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     10001001011101011000100000101110

          - FUNCTION OUTPUT:  10001001011101011000100000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111001001010110010010110010

       - FUNCTION OUTPUT:          10001001011101011000100000101110

       - Left XOR FUNCTION OUTPUT: 00000110010100001110110010011100

       - Next Round Left 32 Bits:  10001111001001110101000000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110010100001110110010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111001001110101000000001110

       - Right 32 Bits:            00000110010100001110110010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       00000110010100001110110010011100
          - S-Box Result:     11110000100111111100010100110101   [per every group of 4-bits]
          - Split Into Two:   1111000010011111 [L] 1100010100110101 [R]
          - Swap Halves:      11000101001101011111000010011111
          - Bit Inversion:    00111010110010100000111101100000
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     01101011001000010001100110111011

          - FUNCTION OUTPUT:  01101011001000010001100110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111001001110101000000001110

       - FUNCTION OUTPUT:          01101011001000010001100110111011

       - Left XOR FUNCTION OUTPUT: 11100100000001100100100110110101

       - Next Round Left 32 Bits:  00000110010100001110110010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100000001100100100110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110010100001110110010011100

       - Right 32 Bits:            11100100000001100100100110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       11100100000001100100100110110101
          - S-Box Result:     11000111111100000111001110001001   [per every group of 4-bits]
          - Split Into Two:   1100011111110000 [L] 0111001110001001 [R]
          - Swap Halves:      01110011100010011100011111110000
          - Bit Inversion:    10001100011101100011100000001111
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     00010001000011001011011010011001

          - FUNCTION OUTPUT:  00010001000011001011011010011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110010100001110110010011100

       - FUNCTION OUTPUT:          00010001000011001011011010011001

       - Left XOR FUNCTION OUTPUT: 00010111010111000101101000000101

       - Next Round Left 32 Bits:  11100100000001100100100110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111010111000101101000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100000001100100100110110101

       - Right 32 Bits:            00010111010111000101101000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       00010111010111000101101000000101
          - S-Box Result:     10101101100101011001010011111001   [per every group of 4-bits]
          - Split Into Two:   1010110110010101 [L] 1001010011111001 [R]
          - Swap Halves:      10010100111110011010110110010101
          - Bit Inversion:    01101011000001100101001001101010
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     01010101011011110110010011100101

          - FUNCTION OUTPUT:  01010101011011110110010011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100000001100100100110110101

       - FUNCTION OUTPUT:          01010101011011110110010011100101

       - Left XOR FUNCTION OUTPUT: 10110001011010010010110101010000

       - Next Round Left 32 Bits:  00010111010111000101101000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001011010010010110101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111010111000101101000000101

       - Right 32 Bits:            10110001011010010010110101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       10110001011010010010110101010000
          - S-Box Result:     10001010000000111110011010011111   [per every group of 4-bits]
          - Split Into Two:   1000101000000011 [L] 1110011010011111 [R]
          - Swap Halves:      11100110100111111000101000000011
          - Bit Inversion:    00011001011000000111010111111100
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     10011010110110100010010001101011

          - FUNCTION OUTPUT:  10011010110110100010010001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111010111000101101000000101

       - FUNCTION OUTPUT:          10011010110110100010010001101011

       - Left XOR FUNCTION OUTPUT: 10001101100001100111111001101110

       - Next Round Left 32 Bits:  10110001011010010010110101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101100001100111111001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001011010010010110101010000

       - Right 32 Bits:            10001101100001100111111001101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       10001101100001100111111001101110
          - S-Box Result:     00100110001000001101110000001100   [per every group of 4-bits]
          - Split Into Two:   0010011000100000 [L] 1101110000001100 [R]
          - Swap Halves:      11011100000011000010011000100000
          - Bit Inversion:    00100011111100111101100111011111
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     10010101011010111110111100011010

          - FUNCTION OUTPUT:  10010101011010111110111100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001011010010010110101010000

       - FUNCTION OUTPUT:          10010101011010111110111100011010

       - Left XOR FUNCTION OUTPUT: 00100100000000101100001001001010

       - Next Round Left 32 Bits:  10001101100001100111111001101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100000000101100001001001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101100001100111111001101110

       - Right 32 Bits:            00100100000000101100001001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       00100100000000101100001001001010
          - S-Box Result:     11100111111111100101111001110100   [per every group of 4-bits]
          - Split Into Two:   1110011111111110 [L] 0101111001110100 [R]
          - Swap Halves:      01011110011101001110011111111110
          - Bit Inversion:    10100001100010110001100000000001
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     01000000101011000100001000100110

          - FUNCTION OUTPUT:  01000000101011000100001000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101100001100111111001101110

       - FUNCTION OUTPUT:          01000000101011000100001000100110

       - Left XOR FUNCTION OUTPUT: 11001101001010100011110001001000

       - Next Round Left 32 Bits:  00100100000000101100001001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101001010100011110001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100110100101010001111000100100000100100000000101100001001001010

 > Decrypted Block:     1100110100101010001111000100100000100100000000101100001001001010


!!!CBC: Previous Ciphertext:                             1000110001111010011010000001100001011101010000111010011000010010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100000101010000010101000101000001111001010000010110010001011000

 > Final Processed Block:                                0100000101010000010101000101000001111001010000010110010001011000



Ciphertext Block 5:                                      0001010100111010110111110111001100010101000100001100110000100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101001110101101111101110011

       - Right 32 Bits:            00010101000100001100110000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       00010101000100001100110000100100
          - S-Box Result:     10101001101011110101010111100111   [per every group of 4-bits]
          - Split Into Two:   1010100110101111 [L] 0101010111100111 [R]
          - Swap Halves:      01010101111001111010100110101111
          - Bit Inversion:    10101010000110000101011001010000
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     00011100100000000110000010010101

          - FUNCTION OUTPUT:  00011100100000000110000010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101001110101101111101110011

       - FUNCTION OUTPUT:          00011100100000000110000010010101

       - Left XOR FUNCTION OUTPUT: 00001001101110101011111111100110

       - Next Round Left 32 Bits:  00010101000100001100110000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001101110101011111111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101000100001100110000100100

       - Right 32 Bits:            00001001101110101011111111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       00001001101110101011111111100110
          - S-Box Result:     11110011100001001000101111000000   [per every group of 4-bits]
          - Split Into Two:   1111001110000100 [L] 1000101111000000 [R]
          - Swap Halves:      10001011110000001111001110000100
          - Bit Inversion:    01110100001111110000110001111011
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     10010101000110000101011001011100

          - FUNCTION OUTPUT:  10010101000110000101011001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101000100001100110000100100

       - FUNCTION OUTPUT:          10010101000110000101011001011100

       - Left XOR FUNCTION OUTPUT: 10000000000010001001101001111000

       - Next Round Left 32 Bits:  00001001101110101011111111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000000010001001101001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001101110101011111111100110

       - Right 32 Bits:            10000000000010001001101001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       10000000000010001001101001111000
          - S-Box Result:     00101111111100100011010011010010   [per every group of 4-bits]
          - Split Into Two:   0010111111110010 [L] 0011010011010010 [R]
          - Swap Halves:      00110100110100100010111111110010
          - Bit Inversion:    11001011001011011101000000001101
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     01101000111011101100011010000100

          - FUNCTION OUTPUT:  01101000111011101100011010000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001101110101011111111100110

       - FUNCTION OUTPUT:          01101000111011101100011010000100

       - Left XOR FUNCTION OUTPUT: 01100001010101000111100101100010

       - Next Round Left 32 Bits:  10000000000010001001101001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001010101000111100101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000000010001001101001111000

       - Right 32 Bits:            01100001010101000111100101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       01100001010101000111100101100010
          - S-Box Result:     00001010100101111101001100001110   [per every group of 4-bits]
          - Split Into Two:   0000101010010111 [L] 1101001100001110 [R]
          - Swap Halves:      11010011000011100000101010010111
          - Bit Inversion:    00101100111100011111010101101000
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     11000101110101010101101101111100

          - FUNCTION OUTPUT:  11000101110101010101101101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000000010001001101001111000

       - FUNCTION OUTPUT:          11000101110101010101101101111100

       - Left XOR FUNCTION OUTPUT: 01000101110111011100000100000100

       - Next Round Left 32 Bits:  01100001010101000111100101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101110111011100000100000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001010101000111100101100010

       - Right 32 Bits:            01000101110111011100000100000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       01000101110111011100000100000100
          - S-Box Result:     01111001011001100101101011110111   [per every group of 4-bits]
          - Split Into Two:   0111100101100110 [L] 0101101011110111 [R]
          - Swap Halves:      01011010111101110111100101100110
          - Bit Inversion:    10100101000010001000011010011001
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     11010100011000011110010000011100

          - FUNCTION OUTPUT:  11010100011000011110010000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001010101000111100101100010

       - FUNCTION OUTPUT:          11010100011000011110010000011100

       - Left XOR FUNCTION OUTPUT: 10110101001101011001110101111110

       - Next Round Left 32 Bits:  01000101110111011100000100000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101001101011001110101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101110111011100000100000100

       - Right 32 Bits:            10110101001101011001110101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       10110101001101011001110101111110
          - S-Box Result:     10001001000110010011011011011100   [per every group of 4-bits]
          - Split Into Two:   1000100100011001 [L] 0011011011011100 [R]
          - Swap Halves:      00110110110111001000100100011001
          - Bit Inversion:    11001001001000110111011011100110
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     00000000010100111011011101110000

          - FUNCTION OUTPUT:  00000000010100111011011101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101110111011100000100000100

       - FUNCTION OUTPUT:          00000000010100111011011101110000

       - Left XOR FUNCTION OUTPUT: 01000101100011100111011001110100

       - Next Round Left 32 Bits:  10110101001101011001110101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101100011100111011001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101001101011001110101111110

       - Right 32 Bits:            01000101100011100111011001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       01000101100011100111011001110100
          - S-Box Result:     01111001001011001101000011010111   [per every group of 4-bits]
          - Split Into Two:   0111100100101100 [L] 1101000011010111 [R]
          - Swap Halves:      11010000110101110111100100101100
          - Bit Inversion:    00101111001010001000011011010011
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     10000001010000001111101010010110

          - FUNCTION OUTPUT:  10000001010000001111101010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101001101011001110101111110

       - FUNCTION OUTPUT:          10000001010000001111101010010110

       - Left XOR FUNCTION OUTPUT: 00110100011101010110011111101000

       - Next Round Left 32 Bits:  01000101100011100111011001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100011101010110011111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101100011100111011001110100

       - Right 32 Bits:            00110100011101010110011111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       00110100011101010110011111101000
          - S-Box Result:     00010111110110010000110111000010   [per every group of 4-bits]
          - Split Into Two:   0001011111011001 [L] 0000110111000010 [R]
          - Swap Halves:      00001101110000100001011111011001
          - Bit Inversion:    11110010001111011110100000100110
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     00111011000001111010000101000001

          - FUNCTION OUTPUT:  00111011000001111010000101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101100011100111011001110100

       - FUNCTION OUTPUT:          00111011000001111010000101000001

       - Left XOR FUNCTION OUTPUT: 01111110100010011101011100110101

       - Next Round Left 32 Bits:  00110100011101010110011111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110100010011101011100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100011101010110011111101000

       - Right 32 Bits:            01111110100010011101011100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       01111110100010011101011100110101
          - S-Box Result:     11011100001000110110110100011001   [per every group of 4-bits]
          - Split Into Two:   1101110000100011 [L] 0110110100011001 [R]
          - Swap Halves:      01101101000110011101110000100011
          - Bit Inversion:    10010010111001100010001111011100
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     00110111001111100011110100000100

          - FUNCTION OUTPUT:  00110111001111100011110100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100011101010110011111101000

       - FUNCTION OUTPUT:          00110111001111100011110100000100

       - Left XOR FUNCTION OUTPUT: 00000011010010110101101011101100

       - Next Round Left 32 Bits:  01111110100010011101011100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011010010110101101011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110100010011101011100110101

       - Right 32 Bits:            00000011010010110101101011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       00000011010010110101101011101100
          - S-Box Result:     11110001011110001001010011000101   [per every group of 4-bits]
          - Split Into Two:   1111000101111000 [L] 1001010011000101 [R]
          - Swap Halves:      10010100110001011111000101111000
          - Bit Inversion:    01101011001110100000111010000111
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     10000010010011000101001010111011

          - FUNCTION OUTPUT:  10000010010011000101001010111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110100010011101011100110101

       - FUNCTION OUTPUT:          10000010010011000101001010111011

       - Left XOR FUNCTION OUTPUT: 11111100110001011000010110001110

       - Next Round Left 32 Bits:  00000011010010110101101011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100110001011000010110001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011010010110101101011101100

       - Right 32 Bits:            11111100110001011000010110001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       11111100110001011000010110001110
          - S-Box Result:     10110101010110010010100100101100   [per every group of 4-bits]
          - Split Into Two:   1011010101011001 [L] 0010100100101100 [R]
          - Swap Halves:      00101001001011001011010101011001
          - Bit Inversion:    11010110110100110100101010100110
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     10000111001110000101110001111101

          - FUNCTION OUTPUT:  10000111001110000101110001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011010010110101101011101100

       - FUNCTION OUTPUT:          10000111001110000101110001111101

       - Left XOR FUNCTION OUTPUT: 10000100011100110000011010010001

       - Next Round Left 32 Bits:  11111100110001011000010110001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100011100110000011010010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100110001011000010110001110

       - Right 32 Bits:            10000100011100110000011010010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       10000100011100110000011010010001
          - S-Box Result:     00100111110100011111000000111010   [per every group of 4-bits]
          - Split Into Two:   0010011111010001 [L] 1111000000111010 [R]
          - Swap Halves:      11110000001110100010011111010001
          - Bit Inversion:    00001111110001011101100000101110
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     10010010101111110101011010111000

          - FUNCTION OUTPUT:  10010010101111110101011010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100110001011000010110001110

       - FUNCTION OUTPUT:          10010010101111110101011010111000

       - Left XOR FUNCTION OUTPUT: 01101110011110101101001100110110

       - Next Round Left 32 Bits:  10000100011100110000011010010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110011110101101001100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100011100110000011010010001

       - Right 32 Bits:            01101110011110101101001100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       01101110011110101101001100110110
          - S-Box Result:     00001100110101000110000100010000   [per every group of 4-bits]
          - Split Into Two:   0000110011010100 [L] 0110000100010000 [R]
          - Swap Halves:      01100001000100000000110011010100
          - Bit Inversion:    10011110111011111111001100101011
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     10100000100001101100010110100100

          - FUNCTION OUTPUT:  10100000100001101100010110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100011100110000011010010001

       - FUNCTION OUTPUT:          10100000100001101100010110100100

       - Left XOR FUNCTION OUTPUT: 00100100111101011100001100110101

       - Next Round Left 32 Bits:  01101110011110101101001100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100111101011100001100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110011110101101001100110110

       - Right 32 Bits:            00100100111101011100001100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       00100100111101011100001100110101
          - S-Box Result:     11100111101110010101000100011001   [per every group of 4-bits]
          - Split Into Two:   1110011110111001 [L] 0101000100011001 [R]
          - Swap Halves:      01010001000110011110011110111001
          - Bit Inversion:    10101110111001100001100001000110
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     00101101010111000100100111010001

          - FUNCTION OUTPUT:  00101101010111000100100111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110011110101101001100110110

       - FUNCTION OUTPUT:          00101101010111000100100111010001

       - Left XOR FUNCTION OUTPUT: 01000011001001101001101011100111

       - Next Round Left 32 Bits:  00100100111101011100001100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011001001101001101011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100111101011100001100110101

       - Right 32 Bits:            01000011001001101001101011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       01000011001001101001101011100111
          - S-Box Result:     01110001111000000011010011001101   [per every group of 4-bits]
          - Split Into Two:   0111000111100000 [L] 0011010011001101 [R]
          - Swap Halves:      00110100110011010111000111100000
          - Bit Inversion:    11001011001100101000111000011111
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     01111101101010101011100011011010

          - FUNCTION OUTPUT:  01111101101010101011100011011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100111101011100001100110101

       - FUNCTION OUTPUT:          01111101101010101011100011011010

       - Left XOR FUNCTION OUTPUT: 01011001010111110111101111101111

       - Next Round Left 32 Bits:  01000011001001101001101011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001010111110111101111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011001001101001101011100111

       - Right 32 Bits:            01011001010111110111101111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       01011001010111110111101111101111
          - S-Box Result:     10010011100110111101100011001011   [per every group of 4-bits]
          - Split Into Two:   1001001110011011 [L] 1101100011001011 [R]
          - Swap Halves:      11011000110010111001001110011011
          - Bit Inversion:    00100111001101000110110001100100
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     11000110000100110011011001000011

          - FUNCTION OUTPUT:  11000110000100110011011001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011001001101001101011100111

       - FUNCTION OUTPUT:          11000110000100110011011001000011

       - Left XOR FUNCTION OUTPUT: 10000101001101011010110010100100

       - Next Round Left 32 Bits:  01011001010111110111101111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101001101011010110010100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000010100110101101011001010010001011001010111110111101111101111

 > Decrypted Block:     1000010100110101101011001010010001011001010111110111101111101111


!!!CBC: Previous Ciphertext:                             1101111001110000111000101110000000000110000101000011111010110110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101101000101010011100100010001011111010010110100010101011001

 > Final Processed Block:                                0101101101000101010011100100010001011111010010110100010101011001



Ciphertext Block 6:                                      0011111010110100110011110111011001101101011001001110111010101001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110101101001100111101110110

       - Right 32 Bits:            01101101011001001110111010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       01101101011001001110111010101001
          - S-Box Result:     00000110000001111100110001000011   [per every group of 4-bits]
          - Split Into Two:   0000011000000111 [L] 1100110001000011 [R]
          - Swap Halves:      11001100010000110000011000000111
          - Bit Inversion:    00110011101111001111100111111000
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     10000101001001001100111100111101

          - FUNCTION OUTPUT:  10000101001001001100111100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110101101001100111101110110

       - FUNCTION OUTPUT:          10000101001001001100111100111101

       - Left XOR FUNCTION OUTPUT: 10111011100100000000000001001011

       - Next Round Left 32 Bits:  01101101011001001110111010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011100100000000000001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101011001001110111010101001

       - Right 32 Bits:            10111011100100000000000001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       10111011100100000000000001001011
          - S-Box Result:     10001000001111111111111101111000   [per every group of 4-bits]
          - Split Into Two:   1000100000111111 [L] 1111111101111000 [R]
          - Swap Halves:      11111111011110001000100000111111
          - Bit Inversion:    00000000100001110111011111000000
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     11100001101000000010110111100111

          - FUNCTION OUTPUT:  11100001101000000010110111100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101011001001110111010101001

       - FUNCTION OUTPUT:          11100001101000000010110111100111

       - Left XOR FUNCTION OUTPUT: 10001100110001001100001101001110

       - Next Round Left 32 Bits:  10111011100100000000000001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100110001001100001101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011100100000000000001001011

       - Right 32 Bits:            10001100110001001100001101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       10001100110001001100001101001110
          - S-Box Result:     00100101010101110101000101111100   [per every group of 4-bits]
          - Split Into Two:   0010010101010111 [L] 0101000101111100 [R]
          - Swap Halves:      01010001011111000010010101010111
          - Bit Inversion:    10101110100000111101101010101000
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     00001101010000001100110000100001

          - FUNCTION OUTPUT:  00001101010000001100110000100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011100100000000000001001011

       - FUNCTION OUTPUT:          00001101010000001100110000100001

       - Left XOR FUNCTION OUTPUT: 10110110110100001100110001101010

       - Next Round Left 32 Bits:  10001100110001001100001101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110110100001100110001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100110001001100001101001110

       - Right 32 Bits:            10110110110100001100110001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       10110110110100001100110001101010
          - S-Box Result:     10000000011011110101010100000100   [per every group of 4-bits]
          - Split Into Two:   1000000001101111 [L] 0101010100000100 [R]
          - Swap Halves:      01010101000001001000000001101111
          - Bit Inversion:    10101010111110110111111110010000
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     01000011110111111101000110000100

          - FUNCTION OUTPUT:  01000011110111111101000110000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100110001001100001101001110

       - FUNCTION OUTPUT:          01000011110111111101000110000100

       - Left XOR FUNCTION OUTPUT: 11001111000110110001001011001010

       - Next Round Left 32 Bits:  10110110110100001100110001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111000110110001001011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110110100001100110001101010

       - Right 32 Bits:            11001111000110110001001011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       11001111000110110001001011001010
          - S-Box Result:     01011011101010001010111001010100   [per every group of 4-bits]
          - Split Into Two:   0101101110101000 [L] 1010111001010100 [R]
          - Swap Halves:      10101110010101000101101110101000
          - Bit Inversion:    01010001101010111010010001010111
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     00100000110000101100011011010010

          - FUNCTION OUTPUT:  00100000110000101100011011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110110100001100110001101010

       - FUNCTION OUTPUT:          00100000110000101100011011010010

       - Left XOR FUNCTION OUTPUT: 10010110000100100000101010111000

       - Next Round Left 32 Bits:  11001111000110110001001011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110000100100000101010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111000110110001001011001010

       - Right 32 Bits:            10010110000100100000101010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       10010110000100100000101010111000
          - S-Box Result:     00110000101011101111010010000010   [per every group of 4-bits]
          - Split Into Two:   0011000010101110 [L] 1111010010000010 [R]
          - Swap Halves:      11110100100000100011000010101110
          - Bit Inversion:    00001011011111011100111101010001
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     11000010000011010000111011000111

          - FUNCTION OUTPUT:  11000010000011010000111011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111000110110001001011001010

       - FUNCTION OUTPUT:          11000010000011010000111011000111

       - Left XOR FUNCTION OUTPUT: 00001101000101100001110000001101

       - Next Round Left 32 Bits:  10010110000100100000101010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101000101100001110000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110000100100000101010111000

       - Right 32 Bits:            00001101000101100001110000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       00001101000101100001110000001101
          - S-Box Result:     11110110101000001010010111110110   [per every group of 4-bits]
          - Split Into Two:   1111011010100000 [L] 1010010111110110 [R]
          - Swap Halves:      10100101111101101111011010100000
          - Bit Inversion:    01011010000010010000100101011111
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     11110100011000010111010100011010

          - FUNCTION OUTPUT:  11110100011000010111010100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110000100100000101010111000

       - FUNCTION OUTPUT:          11110100011000010111010100011010

       - Left XOR FUNCTION OUTPUT: 01100010011100110111111110100010

       - Next Round Left 32 Bits:  00001101000101100001110000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010011100110111111110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101000101100001110000001101

       - Right 32 Bits:            01100010011100110111111110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       01100010011100110111111110100010
          - S-Box Result:     00001110110100011101101101001110   [per every group of 4-bits]
          - Split Into Two:   0000111011010001 [L] 1101101101001110 [R]
          - Swap Halves:      11011011010011100000111011010001
          - Bit Inversion:    00100100101100011111000100101110
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     11101101100010111011100001001001

          - FUNCTION OUTPUT:  11101101100010111011100001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101000101100001110000001101

       - FUNCTION OUTPUT:          11101101100010111011100001001001

       - Left XOR FUNCTION OUTPUT: 11100000100111011010010001000100

       - Next Round Left 32 Bits:  01100010011100110111111110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000100111011010010001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010011100110111111110100010

       - Right 32 Bits:            11100000100111011010010001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       11100000100111011010010001000100
          - S-Box Result:     11001111001101100100011101110111   [per every group of 4-bits]
          - Split Into Two:   1100111100110110 [L] 0100011101110111 [R]
          - Swap Halves:      01000111011101111100111100110110
          - Bit Inversion:    10111000100010000011000011001001
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     00011101010100000010111000010001

          - FUNCTION OUTPUT:  00011101010100000010111000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010011100110111111110100010

       - FUNCTION OUTPUT:          00011101010100000010111000010001

       - Left XOR FUNCTION OUTPUT: 01111111001000110101000110110011

       - Next Round Left 32 Bits:  11100000100111011010010001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111001000110101000110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000100111011010010001000100

       - Right 32 Bits:            01111111001000110101000110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       01111111001000110101000110110011
          - S-Box Result:     11011011111000011001101010000001   [per every group of 4-bits]
          - Split Into Two:   1101101111100001 [L] 1001101010000001 [R]
          - Swap Halves:      10011010100000011101101111100001
          - Bit Inversion:    01100101011111100010010000011110
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     10001100000010000111100000100010

          - FUNCTION OUTPUT:  10001100000010000111100000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000100111011010010001000100

       - FUNCTION OUTPUT:          10001100000010000111100000100010

       - Left XOR FUNCTION OUTPUT: 01101100100101011101110001100110

       - Next Round Left 32 Bits:  01111111001000110101000110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100100101011101110001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111001000110101000110110011

       - Right 32 Bits:            01101100100101011101110001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       01101100100101011101110001100110
          - S-Box Result:     00000101001110010110010100000000   [per every group of 4-bits]
          - Split Into Two:   0000010100111001 [L] 0110010100000000 [R]
          - Swap Halves:      01100101000000000000010100111001
          - Bit Inversion:    10011010111111111111101011000110
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     11001011000101001110110000011101

          - FUNCTION OUTPUT:  11001011000101001110110000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111001000110101000110110011

       - FUNCTION OUTPUT:          11001011000101001110110000011101

       - Left XOR FUNCTION OUTPUT: 10110100001101111011110110101110

       - Next Round Left 32 Bits:  01101100100101011101110001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100001101111011110110101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100100101011101110001100110

       - Right 32 Bits:            10110100001101111011110110101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       10110100001101111011110110101110
          - S-Box Result:     10000111000111011000011001001100   [per every group of 4-bits]
          - Split Into Two:   1000011100011101 [L] 1000011001001100 [R]
          - Swap Halves:      10000110010011001000011100011101
          - Bit Inversion:    01111001101100110111100011100010
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     11100100110010011111011001110100

          - FUNCTION OUTPUT:  11100100110010011111011001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100100101011101110001100110

       - FUNCTION OUTPUT:          11100100110010011111011001110100

       - Left XOR FUNCTION OUTPUT: 10001000010111000010101000010010

       - Next Round Left 32 Bits:  10110100001101111011110110101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000010111000010101000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100001101111011110110101110

       - Right 32 Bits:            10001000010111000010101000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       10001000010111000010101000010010
          - S-Box Result:     00100010100101011110010010101110   [per every group of 4-bits]
          - Split Into Two:   0010001010010101 [L] 1110010010101110 [R]
          - Swap Halves:      11100100101011100010001010010101
          - Bit Inversion:    00011011010100011101110101101010
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     00100101001110001110101111100101

          - FUNCTION OUTPUT:  00100101001110001110101111100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100001101111011110110101110

       - FUNCTION OUTPUT:          00100101001110001110101111100101

       - Left XOR FUNCTION OUTPUT: 10010001000011110101011001001011

       - Next Round Left 32 Bits:  10001000010111000010101000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001000011110101011001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000010111000010101000010010

       - Right 32 Bits:            10010001000011110101011001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       10010001000011110101011001001011
          - S-Box Result:     00111010111110111001000001111000   [per every group of 4-bits]
          - Split Into Two:   0011101011111011 [L] 1001000001111000 [R]
          - Swap Halves:      10010000011110000011101011111011
          - Bit Inversion:    01101111100001111100010100000100
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     11101100001111011001010010010011

          - FUNCTION OUTPUT:  11101100001111011001010010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000010111000010101000010010

       - FUNCTION OUTPUT:          11101100001111011001010010010011

       - Left XOR FUNCTION OUTPUT: 01100100011000011011111010000001

       - Next Round Left 32 Bits:  10010001000011110101011001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100011000011011111010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001000011110101011001001011

       - Right 32 Bits:            01100100011000011011111010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       01100100011000011011111010000001
          - S-Box Result:     00000111000010101000110000101010   [per every group of 4-bits]
          - Split Into Two:   0000011100001010 [L] 1000110000101010 [R]
          - Swap Halves:      10001100001010100000011100001010
          - Bit Inversion:    01110011110101011111100011110101
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11000101010011011100111000110000

          - FUNCTION OUTPUT:  11000101010011011100111000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001000011110101011001001011

       - FUNCTION OUTPUT:          11000101010011011100111000110000

       - Left XOR FUNCTION OUTPUT: 01010100010000101001100001111011

       - Next Round Left 32 Bits:  01100100011000011011111010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100010000101001100001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100011000011011111010000001

       - Right 32 Bits:            01010100010000101001100001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       01010100010000101001100001111011
          - S-Box Result:     10010111011111100011001011011000   [per every group of 4-bits]
          - Split Into Two:   1001011101111110 [L] 0011001011011000 [R]
          - Swap Halves:      00110010110110001001011101111110
          - Bit Inversion:    11001101001001110110100010000001
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     00101100000000000011001010100110

          - FUNCTION OUTPUT:  00101100000000000011001010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100011000011011111010000001

       - FUNCTION OUTPUT:          00101100000000000011001010100110

       - Left XOR FUNCTION OUTPUT: 01001000011000011000110000100111

       - Next Round Left 32 Bits:  01010100010000101001100001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000011000011000110000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100100001100001100011000010011101010100010000101001100001111011

 > Decrypted Block:     0100100001100001100011000010011101010100010000101001100001111011


!!!CBC: Previous Ciphertext:                             0001010100111010110111110111001100010101000100001100110000100100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101110101011011010100110101010001000001010100100101010001011111

 > Final Processed Block:                                0101110101011011010100110101010001000001010100100101010001011111



Ciphertext Block 7:                                      1010100000111001101100011101110100011101110011000001001000000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000001110011011000111011101

       - Right 32 Bits:            00011101110011000001001000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       00011101110011000001001000000110
          - S-Box Result:     10100110010101011010111011110000   [per every group of 4-bits]
          - Split Into Two:   1010011001010101 [L] 1010111011110000 [R]
          - Swap Halves:      10101110111100001010011001010101
          - Bit Inversion:    01010001000011110101100110101010
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11100111100101110110111101101111

          - FUNCTION OUTPUT:  11100111100101110110111101101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000001110011011000111011101

       - FUNCTION OUTPUT:          11100111100101110110111101101111

       - Left XOR FUNCTION OUTPUT: 01001111101011101101111010110010

       - Next Round Left 32 Bits:  00011101110011000001001000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111101011101101111010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101110011000001001000000110

       - Right 32 Bits:            01001111101011101101111010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       01001111101011101101111010110010
          - S-Box Result:     01111011010011000110110010001110   [per every group of 4-bits]
          - Split Into Two:   0111101101001100 [L] 0110110010001110 [R]
          - Swap Halves:      01101100100011100111101101001100
          - Bit Inversion:    10010011011100011000010010110011
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     01110010010101101101111010010100

          - FUNCTION OUTPUT:  01110010010101101101111010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101110011000001001000000110

       - FUNCTION OUTPUT:          01110010010101101101111010010100

       - Left XOR FUNCTION OUTPUT: 01101111100110101100110010010010

       - Next Round Left 32 Bits:  01001111101011101101111010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111100110101100110010010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111101011101101111010110010

       - Right 32 Bits:            01101111100110101100110010010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       01101111100110101100110010010010
          - S-Box Result:     00001011001101000101010100111110   [per every group of 4-bits]
          - Split Into Two:   0000101100110100 [L] 0101010100111110 [R]
          - Swap Halves:      01010101001111100000101100110100
          - Bit Inversion:    10101010110000011111010011001011
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     00001001000000101110001001000010

          - FUNCTION OUTPUT:  00001001000000101110001001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111101011101101111010110010

       - FUNCTION OUTPUT:          00001001000000101110001001000010

       - Left XOR FUNCTION OUTPUT: 01000110101011000011110011110000

       - Next Round Left 32 Bits:  01101111100110101100110010010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110101011000011110011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111100110101100110010010010

       - Right 32 Bits:            01000110101011000011110011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       01000110101011000011110011110000
          - S-Box Result:     01110000010001010001010110111111   [per every group of 4-bits]
          - Split Into Two:   0111000001000101 [L] 0001010110111111 [R]
          - Swap Halves:      00010101101111110111000001000101
          - Bit Inversion:    11101010010000001000111110111010
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     00000011011001000010000110101110

          - FUNCTION OUTPUT:  00000011011001000010000110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111100110101100110010010010

       - FUNCTION OUTPUT:          00000011011001000010000110101110

       - Left XOR FUNCTION OUTPUT: 01101100111111101110110100111100

       - Next Round Left 32 Bits:  01000110101011000011110011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100111111101110110100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110101011000011110011110000

       - Right 32 Bits:            01101100111111101110110100111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       01101100111111101110110100111100
          - S-Box Result:     00000101101111001100011000010101   [per every group of 4-bits]
          - Split Into Two:   0000010110111100 [L] 1100011000010101 [R]
          - Swap Halves:      11000110000101010000010110111100
          - Bit Inversion:    00111001111010101111101001000011
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     01001000100000111001100011000110

          - FUNCTION OUTPUT:  01001000100000111001100011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110101011000011110011110000

       - FUNCTION OUTPUT:          01001000100000111001100011000110

       - Left XOR FUNCTION OUTPUT: 00001110001011111010010000110110

       - Next Round Left 32 Bits:  01101100111111101110110100111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110001011111010010000110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100111111101110110100111100

       - Right 32 Bits:            00001110001011111010010000110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       00001110001011111010010000110110
          - S-Box Result:     11111100111010110100011100010000   [per every group of 4-bits]
          - Split Into Two:   1111110011101011 [L] 0100011100010000 [R]
          - Swap Halves:      01000111000100001111110011101011
          - Bit Inversion:    10111000111011110000001100010100
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     01110001100111111100001010000010

          - FUNCTION OUTPUT:  01110001100111111100001010000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100111111101110110100111100

       - FUNCTION OUTPUT:          01110001100111111100001010000010

       - Left XOR FUNCTION OUTPUT: 00011101011000010010111110111110

       - Next Round Left 32 Bits:  00001110001011111010010000110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101011000010010111110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110001011111010010000110110

       - Right 32 Bits:            00011101011000010010111110111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       00011101011000010010111110111110
          - S-Box Result:     10100110000010101110101110001100   [per every group of 4-bits]
          - Split Into Two:   1010011000001010 [L] 1110101110001100 [R]
          - Swap Halves:      11101011100011001010011000001010
          - Bit Inversion:    00010100011100110101100111110101
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     10111010000110110010010110110000

          - FUNCTION OUTPUT:  10111010000110110010010110110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110001011111010010000110110

       - FUNCTION OUTPUT:          10111010000110110010010110110000

       - Left XOR FUNCTION OUTPUT: 10110100001101001000000110000110

       - Next Round Left 32 Bits:  00011101011000010010111110111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100001101001000000110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101011000010010111110111110

       - Right 32 Bits:            10110100001101001000000110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       10110100001101001000000110000110
          - S-Box Result:     10000111000101110010101000100000   [per every group of 4-bits]
          - Split Into Two:   1000011100010111 [L] 0010101000100000 [R]
          - Swap Halves:      00101010001000001000011100010111
          - Bit Inversion:    11010101110111110111100011101000
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     00011100111001010011000110001111

          - FUNCTION OUTPUT:  00011100111001010011000110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101011000010010111110111110

       - FUNCTION OUTPUT:          00011100111001010011000110001111

       - Left XOR FUNCTION OUTPUT: 00000001100001000001111000110001

       - Next Round Left 32 Bits:  10110100001101001000000110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001100001000001111000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100001101001000000110000110

       - Right 32 Bits:            00000001100001000001111000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       00000001100001000001111000110001
          - S-Box Result:     11111010001001111010110000011010   [per every group of 4-bits]
          - Split Into Two:   1111101000100111 [L] 1010110000011010 [R]
          - Swap Halves:      10101100000110101111101000100111
          - Bit Inversion:    01010011111001010000010111011000
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     11110110001111010001101100000000

          - FUNCTION OUTPUT:  11110110001111010001101100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100001101001000000110000110

       - FUNCTION OUTPUT:          11110110001111010001101100000000

       - Left XOR FUNCTION OUTPUT: 01000010000010011001101010000110

       - Next Round Left 32 Bits:  00000001100001000001111000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010000010011001101010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001100001000001111000110001

       - Right 32 Bits:            01000010000010011001101010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       01000010000010011001101010000110
          - S-Box Result:     01111110111100110011010000100000   [per every group of 4-bits]
          - Split Into Two:   0111111011110011 [L] 0011010000100000 [R]
          - Swap Halves:      00110100001000000111111011110011
          - Bit Inversion:    11001011110111111000000100001100
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     00100010101010011101110100110000

          - FUNCTION OUTPUT:  00100010101010011101110100110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001100001000001111000110001

       - FUNCTION OUTPUT:          00100010101010011101110100110000

       - Left XOR FUNCTION OUTPUT: 00100011001011011100001100000001

       - Next Round Left 32 Bits:  01000010000010011001101010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011001011011100001100000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010000010011001101010000110

       - Right 32 Bits:            00100011001011011100001100000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       00100011001011011100001100000001
          - S-Box Result:     11100001111001100101000111111010   [per every group of 4-bits]
          - Split Into Two:   1110000111100110 [L] 0101000111111010 [R]
          - Swap Halves:      01010001111110101110000111100110
          - Bit Inversion:    10101110000001010001111000011001
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     11111111111011100000100011000010

          - FUNCTION OUTPUT:  11111111111011100000100011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010000010011001101010000110

       - FUNCTION OUTPUT:          11111111111011100000100011000010

       - Left XOR FUNCTION OUTPUT: 10111101111001111001001001000100

       - Next Round Left 32 Bits:  00100011001011011100001100000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101111001111001001001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011001011011100001100000001

       - Right 32 Bits:            10111101111001111001001001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       10111101111001111001001001000100
          - S-Box Result:     10000110110011010011111001110111   [per every group of 4-bits]
          - Split Into Two:   1000011011001101 [L] 0011111001110111 [R]
          - Swap Halves:      00111110011101111000011011001101
          - Bit Inversion:    11000001100010000111100100110010
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     01011100111100101111011110100100

          - FUNCTION OUTPUT:  01011100111100101111011110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011001011011100001100000001

       - FUNCTION OUTPUT:          01011100111100101111011110100100

       - Left XOR FUNCTION OUTPUT: 01111111110111110011010010100101

       - Next Round Left 32 Bits:  10111101111001111001001001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111110111110011010010100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101111001111001001001000100

       - Right 32 Bits:            01111111110111110011010010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       01111111110111110011010010100101
          - S-Box Result:     11011011011010110001011101001001   [per every group of 4-bits]
          - Split Into Two:   1101101101101011 [L] 0001011101001001 [R]
          - Swap Halves:      00010111010010011101101101101011
          - Bit Inversion:    11101000101101100010010010010100
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     11010110110111110001001000011011

          - FUNCTION OUTPUT:  11010110110111110001001000011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101111001111001001001000100

       - FUNCTION OUTPUT:          11010110110111110001001000011011

       - Left XOR FUNCTION OUTPUT: 01101011001110001000000001011111

       - Next Round Left 32 Bits:  01111111110111110011010010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011001110001000000001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111110111110011010010100101

       - Right 32 Bits:            01101011001110001000000001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       01101011001110001000000001011111
          - S-Box Result:     00001000000100100010111110011011   [per every group of 4-bits]
          - Split Into Two:   0000100000010010 [L] 0010111110011011 [R]
          - Swap Halves:      00101111100110110000100000010010
          - Bit Inversion:    11010000011001001111011111101101
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     01010011110111101010011001111010

          - FUNCTION OUTPUT:  01010011110111101010011001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111110111110011010010100101

       - FUNCTION OUTPUT:          01010011110111101010011001111010

       - Left XOR FUNCTION OUTPUT: 00101100000000011001001011011111

       - Next Round Left 32 Bits:  01101011001110001000000001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100000000011001001011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011001110001000000001011111

       - Right 32 Bits:            00101100000000011001001011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       00101100000000011001001011011111
          - S-Box Result:     11100101111110100011111001101011   [per every group of 4-bits]
          - Split Into Two:   1110010111111010 [L] 0011111001101011 [R]
          - Swap Halves:      00111110011010111110010111111010
          - Bit Inversion:    11000001100101000001101000000101
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     01110111000011000010110011000000

          - FUNCTION OUTPUT:  01110111000011000010110011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011001110001000000001011111

       - FUNCTION OUTPUT:          01110111000011000010110011000000

       - Left XOR FUNCTION OUTPUT: 00011100001101001010110010011111

       - Next Round Left 32 Bits:  00101100000000011001001011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100001101001010110010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100000000011001001011011111

       - Right 32 Bits:            00011100001101001010110010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       00011100001101001010110010011111
          - S-Box Result:     10100101000101110100010100111011   [per every group of 4-bits]
          - Split Into Two:   1010010100010111 [L] 0100010100111011 [R]
          - Swap Halves:      01000101001110111010010100010111
          - Bit Inversion:    10111010110001000101101011101000
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     01011011111000110000000011001111

          - FUNCTION OUTPUT:  01011011111000110000000011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100000000011001001011011111

       - FUNCTION OUTPUT:          01011011111000110000000011001111

       - Left XOR FUNCTION OUTPUT: 01110111111000101001001000010000

       - Next Round Left 32 Bits:  00011100001101001010110010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111111000101001001000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111011111100010100100100001000000011100001101001010110010011111

 > Decrypted Block:     0111011111100010100100100001000000011100001101001010110010011111


!!!CBC: Previous Ciphertext:                             0011111010110100110011110111011001101101011001001110111010101001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100101010110010111010110011001110001010100000100001000110110

 > Final Processed Block:                                0100100101010110010111010110011001110001010100000100001000110110



Ciphertext Block 8:                                      0111100110000000010111010100000111111111001101010100111000110111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001100000000101110101000001

       - Right 32 Bits:            11111111001101010100111000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       11111111001101010100111000110111
          - S-Box Result:     10111011000110010111110000011101   [per every group of 4-bits]
          - Split Into Two:   1011101100011001 [L] 0111110000011101 [R]
          - Swap Halves:      01111100000111011011101100011001
          - Bit Inversion:    10000011111000100100010011100110
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     00110101011110100111001000100011

          - FUNCTION OUTPUT:  00110101011110100111001000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001100000000101110101000001

       - FUNCTION OUTPUT:          00110101011110100111001000100011

       - Left XOR FUNCTION OUTPUT: 01001100111110100010111101100010

       - Next Round Left 32 Bits:  11111111001101010100111000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100111110100010111101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111001101010100111000110111

       - Right 32 Bits:            01001100111110100010111101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       01001100111110100010111101100010
          - S-Box Result:     01110101101101001110101100001110   [per every group of 4-bits]
          - Split Into Two:   0111010110110100 [L] 1110101100001110 [R]
          - Swap Halves:      11101011000011100111010110110100
          - Bit Inversion:    00010100111100011000101001001011
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     11110101110101101101000001101100

          - FUNCTION OUTPUT:  11110101110101101101000001101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111001101010100111000110111

       - FUNCTION OUTPUT:          11110101110101101101000001101100

       - Left XOR FUNCTION OUTPUT: 00001010111000111001111001011011

       - Next Round Left 32 Bits:  01001100111110100010111101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010111000111001111001011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100111110100010111101100010

       - Right 32 Bits:            00001010111000111001111001011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       00001010111000111001111001011011
          - S-Box Result:     11110100110000010011110010011000   [per every group of 4-bits]
          - Split Into Two:   1111010011000001 [L] 0011110010011000 [R]
          - Swap Halves:      00111100100110001111010011000001
          - Bit Inversion:    11000011011001110000101100111110
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     01100000101001000001110110110111

          - FUNCTION OUTPUT:  01100000101001000001110110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100111110100010111101100010

       - FUNCTION OUTPUT:          01100000101001000001110110110111

       - Left XOR FUNCTION OUTPUT: 00101100010111100011001011010101

       - Next Round Left 32 Bits:  00001010111000111001111001011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100010111100011001011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010111000111001111001011011

       - Right 32 Bits:            00101100010111100011001011010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       00101100010111100011001011010101
          - S-Box Result:     11100101100111000001111001101001   [per every group of 4-bits]
          - Split Into Two:   1110010110011100 [L] 0001111001101001 [R]
          - Swap Halves:      00011110011010011110010110011100
          - Bit Inversion:    11100001100101100001101001100011
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     00001000101100101011010001110111

          - FUNCTION OUTPUT:  00001000101100101011010001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010111000111001111001011011

       - FUNCTION OUTPUT:          00001000101100101011010001110111

       - Left XOR FUNCTION OUTPUT: 00000010010100010010101000101100

       - Next Round Left 32 Bits:  00101100010111100011001011010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010010100010010101000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100010111100011001011010101

       - Right 32 Bits:            00000010010100010010101000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       00000010010100010010101000101100
          - S-Box Result:     11111110100110101110010011100101   [per every group of 4-bits]
          - Split Into Two:   1111111010011010 [L] 1110010011100101 [R]
          - Swap Halves:      11100100111001011111111010011010
          - Bit Inversion:    00011011000110100000000101100101
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     01101010011100110110001111100000

          - FUNCTION OUTPUT:  01101010011100110110001111100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100010111100011001011010101

       - FUNCTION OUTPUT:          01101010011100110110001111100000

       - Left XOR FUNCTION OUTPUT: 01000110001011010101000100110101

       - Next Round Left 32 Bits:  00000010010100010010101000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110001011010101000100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010010100010010101000101100

       - Right 32 Bits:            01000110001011010101000100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       01000110001011010101000100110101
          - S-Box Result:     01110000111001101001101000011001   [per every group of 4-bits]
          - Split Into Two:   0111000011100110 [L] 1001101000011001 [R]
          - Swap Halves:      10011010000110010111000011100110
          - Bit Inversion:    01100101111001101000111100011001
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     10101100100101100100111010001111

          - FUNCTION OUTPUT:  10101100100101100100111010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010010100010010101000101100

       - FUNCTION OUTPUT:          10101100100101100100111010001111

       - Left XOR FUNCTION OUTPUT: 10101110110001110110010010100011

       - Next Round Left 32 Bits:  01000110001011010101000100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110110001110110010010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110001011010101000100110101

       - Right 32 Bits:            10101110110001110110010010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       10101110110001110110010010100011
          - S-Box Result:     01001100010111010000011101000001   [per every group of 4-bits]
          - Split Into Two:   0100110001011101 [L] 0000011101000001 [R]
          - Swap Halves:      00000111010000010100110001011101
          - Bit Inversion:    11111000101111101011001110100010
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     01010110110101101100111111100111

          - FUNCTION OUTPUT:  01010110110101101100111111100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110001011010101000100110101

       - FUNCTION OUTPUT:          01010110110101101100111111100111

       - Left XOR FUNCTION OUTPUT: 00010000111110111001111011010010

       - Next Round Left 32 Bits:  10101110110001110110010010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000111110111001111011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110110001110110010010100011

       - Right 32 Bits:            00010000111110111001111011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       00010000111110111001111011010010
          - S-Box Result:     10101111101110000011110001101110   [per every group of 4-bits]
          - Split Into Two:   1010111110111000 [L] 0011110001101110 [R]
          - Swap Halves:      00111100011011101010111110111000
          - Bit Inversion:    11000011100100010101000001000111
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     00001010101010110001100100100000

          - FUNCTION OUTPUT:  00001010101010110001100100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110110001110110010010100011

       - FUNCTION OUTPUT:          00001010101010110001100100100000

       - Left XOR FUNCTION OUTPUT: 10100100011011000111110110000011

       - Next Round Left 32 Bits:  00010000111110111001111011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100011011000111110110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000111110111001111011010010

       - Right 32 Bits:            10100100011011000111110110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       10100100011011000111110110000011
          - S-Box Result:     01000111000001011101011000100001   [per every group of 4-bits]
          - Split Into Two:   0100011100000101 [L] 1101011000100001 [R]
          - Swap Halves:      11010110001000010100011100000101
          - Bit Inversion:    00101001110111101011100011111010
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     10001100000001101010011000100010

          - FUNCTION OUTPUT:  10001100000001101010011000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000111110111001111011010010

       - FUNCTION OUTPUT:          10001100000001101010011000100010

       - Left XOR FUNCTION OUTPUT: 10011100111111010011100011110000

       - Next Round Left 32 Bits:  10100100011011000111110110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100111111010011100011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100011011000111110110000011

       - Right 32 Bits:            10011100111111010011100011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       10011100111111010011100011110000
          - S-Box Result:     00110101101101100001001010111111   [per every group of 4-bits]
          - Split Into Two:   0011010110110110 [L] 0001001010111111 [R]
          - Swap Halves:      00010010101111110011010110110110
          - Bit Inversion:    11101101010000001100101001001001
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     00000100001101101001011001110101

          - FUNCTION OUTPUT:  00000100001101101001011001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100011011000111110110000011

       - FUNCTION OUTPUT:          00000100001101101001011001110101

       - Left XOR FUNCTION OUTPUT: 10100000010110101110101111110110

       - Next Round Left 32 Bits:  10011100111111010011100011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000010110101110101111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100111111010011100011110000

       - Right 32 Bits:            10100000010110101110101111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       10100000010110101110101111110110
          - S-Box Result:     01001111100101001100100010110000   [per every group of 4-bits]
          - Split Into Two:   0100111110010100 [L] 1100100010110000 [R]
          - Swap Halves:      11001000101100000100111110010100
          - Bit Inversion:    00110111010011111011000001101011
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     01100110101001001010011010110000

          - FUNCTION OUTPUT:  01100110101001001010011010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100111111010011100011110000

       - FUNCTION OUTPUT:          01100110101001001010011010110000

       - Left XOR FUNCTION OUTPUT: 11111010010110011001111001000000

       - Next Round Left 32 Bits:  10100000010110101110101111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010010110011001111001000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000010110101110101111110110

       - Right 32 Bits:            11111010010110011001111001000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       11111010010110011001111001000000
          - S-Box Result:     10110100100100110011110001111111   [per every group of 4-bits]
          - Split Into Two:   1011010010010011 [L] 0011110001111111 [R]
          - Swap Halves:      00111100011111111011010010010011
          - Bit Inversion:    11000011100000000100101101101100
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     01011110111110101100010111111010

          - FUNCTION OUTPUT:  01011110111110101100010111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000010110101110101111110110

       - FUNCTION OUTPUT:          01011110111110101100010111111010

       - Left XOR FUNCTION OUTPUT: 11111110101000000010111000001100

       - Next Round Left 32 Bits:  11111010010110011001111001000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110101000000010111000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010010110011001111001000000

       - Right 32 Bits:            11111110101000000010111000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       11111110101000000010111000001100
          - S-Box Result:     10111100010011111110110011110101   [per every group of 4-bits]
          - Split Into Two:   1011110001001111 [L] 1110110011110101 [R]
          - Swap Halves:      11101100111101011011110001001111
          - Bit Inversion:    00010011000010100100001110110000
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     00101101011000110111010100111111

          - FUNCTION OUTPUT:  00101101011000110111010100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010010110011001111001000000

       - FUNCTION OUTPUT:          00101101011000110111010100111111

       - Left XOR FUNCTION OUTPUT: 11010111001110101110101101111111

       - Next Round Left 32 Bits:  11111110101000000010111000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111001110101110101101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110101000000010111000001100

       - Right 32 Bits:            11010111001110101110101101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       11010111001110101110101101111111
          - S-Box Result:     01101101000101001100100011011011   [per every group of 4-bits]
          - Split Into Two:   0110110100010100 [L] 1100100011011011 [R]
          - Swap Halves:      11001000110110110110110100010100
          - Bit Inversion:    00110111001001001001001011101011
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     10110100100111101100001101111100

          - FUNCTION OUTPUT:  10110100100111101100001101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110101000000010111000001100

       - FUNCTION OUTPUT:          10110100100111101100001101111100

       - Left XOR FUNCTION OUTPUT: 01001010001111101110110101110000

       - Next Round Left 32 Bits:  11010111001110101110101101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010001111101110110101110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111001110101110101101111111

       - Right 32 Bits:            01001010001111101110110101110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       01001010001111101110110101110000
          - S-Box Result:     01110100000111001100011011011111   [per every group of 4-bits]
          - Split Into Two:   0111010000011100 [L] 1100011011011111 [R]
          - Swap Halves:      11000110110111110111010000011100
          - Bit Inversion:    00111001001000001000101111100011
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     10001111101110001011110100100110

          - FUNCTION OUTPUT:  10001111101110001011110100100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111001110101110101101111111

       - FUNCTION OUTPUT:          10001111101110001011110100100110

       - Left XOR FUNCTION OUTPUT: 01011000100000100101011001011001

       - Next Round Left 32 Bits:  01001010001111101110110101110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000100000100101011001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010001111101110110101110000

       - Right 32 Bits:            01011000100000100101011001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       01011000100000100101011001011001
          - S-Box Result:     10010010001011101001000010010011   [per every group of 4-bits]
          - Split Into Two:   1001001000101110 [L] 1001000010010011 [R]
          - Swap Halves:      10010000100100111001001000101110
          - Bit Inversion:    01101111011011000110110111010001
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     10001110010010110011011111110110

          - FUNCTION OUTPUT:  10001110010010110011011111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010001111101110110101110000

       - FUNCTION OUTPUT:          10001110010010110011011111110110

       - Left XOR FUNCTION OUTPUT: 11000100011101011101101010000110

       - Next Round Left 32 Bits:  01011000100000100101011001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100011101011101101010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100010001110101110110101000011001011000100000100101011001011001

 > Decrypted Block:     1100010001110101110110101000011001011000100000100101011001011001


!!!CBC: Previous Ciphertext:                             1010100000111001101100011101110100011101110011000001001000000110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110110001001100011010110101101101000101010011100100010001011111

 > Final Processed Block:                                0110110001001100011010110101101101000101010011100100010001011111



Ciphertext Block 9:                                      0000011011101011110100101010111100110000101101001111101100010010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110111010111101001010101111

       - Right 32 Bits:            00110000101101001111101100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 16]
          - Input Half:       00110000101101001111101100010010
          - S-Box Result:     00011111100001111011100010101110   [per every group of 4-bits]
          - Split Into Two:   0001111110000111 [L] 1011100010101110 [R]
          - Swap Halves:      10111000101011100001111110000111
          - Bit Inversion:    01000111010100011110000001111000
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     11110001110010011101011010111101

          - FUNCTION OUTPUT:  11110001110010011101011010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110111010111101001010101111

       - FUNCTION OUTPUT:          11110001110010011101011010111101

       - Left XOR FUNCTION OUTPUT: 11110111001000100000010000010010

       - Next Round Left 32 Bits:  00110000101101001111101100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111001000100000010000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000101101001111101100010010

       - Right 32 Bits:            11110111001000100000010000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 15]
          - Input Half:       11110111001000100000010000010010
          - S-Box Result:     10111101111011101111011110101110   [per every group of 4-bits]
          - Split Into Two:   1011110111101110 [L] 1111011110101110 [R]
          - Swap Halves:      11110111101011101011110111101110
          - Bit Inversion:    00001000010100010100001000010001
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     11101001011101100001100000110110

          - FUNCTION OUTPUT:  11101001011101100001100000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000101101001111101100010010

       - FUNCTION OUTPUT:          11101001011101100001100000110110

       - Left XOR FUNCTION OUTPUT: 11011001110000101110001100100100

       - Next Round Left 32 Bits:  11110111001000100000010000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001110000101110001100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111001000100000010000010010

       - Right 32 Bits:            11011001110000101110001100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010011110110011100110100010010100110101001110110   [Subkey: 14]
          - Input Half:       11011001110000101110001100100100
          - S-Box Result:     01100011010111101100000111100111   [per every group of 4-bits]
          - Split Into Two:   0110001101011110 [L] 1100000111100111 [R]
          - Swap Halves:      11000001111001110110001101011110
          - Bit Inversion:    00111110000110001001110010100001
          - Compressed Key:   10100011110000110001011010001001   [done by compression P-Box]
          - XOR with Key:     10011101110110111000101000101000

          - FUNCTION OUTPUT:  10011101110110111000101000101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111001000100000010000010010

       - FUNCTION OUTPUT:          10011101110110111000101000101000

       - Left XOR FUNCTION OUTPUT: 01101010111110011000111000111010

       - Next Round Left 32 Bits:  11011001110000101110001100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010111110011000111000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001110000101110001100100100

       - Right 32 Bits:            01101010111110011000111000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011010110110000100110001100101110110101100101011000   [Subkey: 13]
          - Input Half:       01101010111110011000111000111010
          - S-Box Result:     00000100101100110010110000010100   [per every group of 4-bits]
          - Split Into Two:   0000010010110011 [L] 0010110000010100 [R]
          - Swap Halves:      00101100000101000000010010110011
          - Bit Inversion:    11010011111010111111101101001100
          - Compressed Key:   11101001001001001010111000010100   [done by compression P-Box]
          - XOR with Key:     00111010110011110101010101011000

          - FUNCTION OUTPUT:  00111010110011110101010101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001110000101110001100100100

       - FUNCTION OUTPUT:          00111010110011110101010101011000

       - Left XOR FUNCTION OUTPUT: 11100011000011011011011001111100

       - Next Round Left 32 Bits:  01101010111110011000111000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011000011011011011001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010111110011000111000111010

       - Right 32 Bits:            11100011000011011011011001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010010100100111101100111001101000100101001101010   [Subkey: 12]
          - Input Half:       11100011000011011011011001111100
          - S-Box Result:     11000001111101101000000011010101   [per every group of 4-bits]
          - Split Into Two:   1100000111110110 [L] 1000000011010101 [R]
          - Swap Halves:      10000000110101011100000111110110
          - Bit Inversion:    01111111001010100011111000001001
          - Compressed Key:   01110001011010010110001010000101   [done by compression P-Box]
          - XOR with Key:     00001110010000110101110010001100

          - FUNCTION OUTPUT:  00001110010000110101110010001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010111110011000111000111010

       - FUNCTION OUTPUT:          00001110010000110101110010001100

       - Left XOR FUNCTION OUTPUT: 01100100101110101101001010110110

       - Next Round Left 32 Bits:  11100011000011011011011001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100101110101101001010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011000011011011011001111100

       - Right 32 Bits:            01100100101110101101001010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000100110110101101100001001100011001011101101011001   [Subkey: 11]
          - Input Half:       01100100101110101101001010110110
          - S-Box Result:     00000111100001000110111010000000   [per every group of 4-bits]
          - Split Into Two:   0000011110000100 [L] 0110111010000000 [R]
          - Swap Halves:      01101110100000000000011110000100
          - Bit Inversion:    10010001011111111111100001111011
          - Compressed Key:   11001001011100001100000110010110   [done by compression P-Box]
          - XOR with Key:     01011000000011110011100111101101

          - FUNCTION OUTPUT:  01011000000011110011100111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011000011011011011001111100

       - FUNCTION OUTPUT:          01011000000011110011100111101101

       - Left XOR FUNCTION OUTPUT: 10111011000000101000111110010001

       - Next Round Left 32 Bits:  01100100101110101101001010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000000101000111110010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100101110101101001010110110

       - Right 32 Bits:            10111011000000101000111110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010011101100100101001001111011001110011010001001010   [Subkey: 10]
          - Input Half:       10111011000000101000111110010001
          - S-Box Result:     10001000111111100010101100111010   [per every group of 4-bits]
          - Split Into Two:   1000100011111110 [L] 0010101100111010 [R]
          - Swap Halves:      00101011001110101000100011111110
          - Bit Inversion:    11010100110001010111011100000001
          - Compressed Key:   10101110011010000111110001000101   [done by compression P-Box]
          - XOR with Key:     01111010101011010000101101000100

          - FUNCTION OUTPUT:  01111010101011010000101101000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100101110101101001010110110

       - FUNCTION OUTPUT:          01111010101011010000101101000100

       - Left XOR FUNCTION OUTPUT: 00011110000101111101100111110010

       - Next Round Left 32 Bits:  10111011000000101000111110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110000101111101100111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000000101000111110010001

       - Right 32 Bits:            00011110000101111101100111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010110001001101101011011000010011000110010111011   [Subkey: 9]
          - Input Half:       00011110000101111101100111110010
          - S-Box Result:     10101100101011010110001110111110   [per every group of 4-bits]
          - Split Into Two:   1010110010101101 [L] 0110001110111110 [R]
          - Swap Halves:      01100011101111101010110010101101
          - Bit Inversion:    10011100010000010101001101010010
          - Compressed Key:   11001001001110100100100101100111   [done by compression P-Box]
          - XOR with Key:     01010101011110110001101000110101

          - FUNCTION OUTPUT:  01010101011110110001101000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000000101000111110010001

       - FUNCTION OUTPUT:          01010101011110110001101000110101

       - Left XOR FUNCTION OUTPUT: 11101110011110011001010110100100

       - Next Round Left 32 Bits:  00011110000101111101100111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110011110011001010110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110000101111101100111110010

       - Right 32 Bits:            11101110011110011001010110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010011010100111011001001010010011110110011100110100   [Subkey: 8]
          - Input Half:       11101110011110011001010110100100
          - S-Box Result:     11001100110100110011100101000111   [per every group of 4-bits]
          - Split Into Two:   1100110011010011 [L] 0011100101000111 [R]
          - Swap Halves:      00111001010001111100110011010011
          - Bit Inversion:    11000110101110000011001100101100
          - Compressed Key:   10100101110110000001111011011000   [done by compression P-Box]
          - XOR with Key:     01100011011000000010110111110100

          - FUNCTION OUTPUT:  01100011011000000010110111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110000101111101100111110010

       - FUNCTION OUTPUT:          01100011011000000010110111110100

       - Left XOR FUNCTION OUTPUT: 01111101011101111111010000000110

       - Next Round Left 32 Bits:  11101110011110011001010110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101011101111111010000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110011110011001010110100100

       - Right 32 Bits:            01111101011101111111010000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011010110010101100010011011010110110000100110001100   [Subkey: 7]
          - Input Half:       01111101011101111111010000000110
          - S-Box Result:     11010110110111011011011111110000   [per every group of 4-bits]
          - Split Into Two:   1101011011011101 [L] 1011011111110000 [R]
          - Swap Halves:      10110111111100001101011011011101
          - Bit Inversion:    01001000000011110010100100100010
          - Compressed Key:   11101001011101100101110000111100   [done by compression P-Box]
          - XOR with Key:     10100001011110010111010100011110

          - FUNCTION OUTPUT:  10100001011110010111010100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110011110011001010110100100

       - FUNCTION OUTPUT:          10100001011110010111010100011110

       - Left XOR FUNCTION OUTPUT: 01001111000000001110000010111010

       - Next Round Left 32 Bits:  01111101011101111111010000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111000000001110000010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101011101111111010000000110

       - Right 32 Bits:            01001111000000001110000010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100010010100110101001110110010010100100111101100111   [Subkey: 6]
          - Input Half:       01001111000000001110000010111010
          - S-Box Result:     01111011111111111100111110000100   [per every group of 4-bits]
          - Split Into Two:   0111101111111111 [L] 1100111110000100 [R]
          - Swap Halves:      11001111100001000111101111111111
          - Bit Inversion:    00110000011110111000010000000000
          - Compressed Key:   01010001111010110001011011011011   [done by compression P-Box]
          - XOR with Key:     01100001100100001001001011011011

          - FUNCTION OUTPUT:  01100001100100001001001011011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101011101111111010000000110

       - FUNCTION OUTPUT:          01100001100100001001001011011011

       - Left XOR FUNCTION OUTPUT: 00011100111001110110011011011101

       - Next Round Left 32 Bits:  01001111000000001110000010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100111001110110011011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111000000001110000010111010

       - Right 32 Bits:            00011100111001110110011011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100101110110101100101011000100110110101101100001001   [Subkey: 5]
          - Input Half:       00011100111001110110011011011101
          - S-Box Result:     10100101110011010000000001100110   [per every group of 4-bits]
          - Split Into Two:   1010010111001101 [L] 0000000001100110 [R]
          - Swap Halves:      00000000011001101010010111001101
          - Bit Inversion:    11111111100110010101101000110010
          - Compressed Key:   10011101011110101000111010010110   [done by compression P-Box]
          - XOR with Key:     01100010111000111101010010100100

          - FUNCTION OUTPUT:  01100010111000111101010010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111000000001110000010111010

       - FUNCTION OUTPUT:          01100010111000111101010010100100

       - Left XOR FUNCTION OUTPUT: 00101101111000110011010000011110

       - Next Round Left 32 Bits:  00011100111001110110011011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101111000110011010000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100111001110110011011011101

       - Right 32 Bits:            00101101111000110011010000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111001101000100101001101010011101100100101001001111   [Subkey: 4]
          - Input Half:       00101101111000110011010000011110
          - S-Box Result:     11100110110000010001011110101100   [per every group of 4-bits]
          - Split Into Two:   1110011011000001 [L] 0001011110101100 [R]
          - Swap Halves:      00010111101011001110011011000001
          - Bit Inversion:    11101000010100110001100100111110
          - Compressed Key:   00111110011010010011011010001111   [done by compression P-Box]
          - XOR with Key:     11010110001110100010111110110001

          - FUNCTION OUTPUT:  11010110001110100010111110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100111001110110011011011101

       - FUNCTION OUTPUT:          11010110001110100010111110110001

       - Left XOR FUNCTION OUTPUT: 11001010110111010100100101101100

       - Next Round Left 32 Bits:  00101101111000110011010000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010110111010100100101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101111000110011010000011110

       - Right 32 Bits:            11001010110111010100100101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001001100011001011101101011001010110001001101101011011   [Subkey: 3]
          - Input Half:       11001010110111010100100101101100
          - S-Box Result:     01010100011001100111001100000101   [per every group of 4-bits]
          - Split Into Two:   0101010001100110 [L] 0111001100000101 [R]
          - Swap Halves:      01110011000001010101010001100110
          - Bit Inversion:    10001100111110101010101110011001
          - Compressed Key:   10000011101110100101000110010111   [done by compression P-Box]
          - XOR with Key:     00001111010000001111101000001110

          - FUNCTION OUTPUT:  00001111010000001111101000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101111000110011010000011110

       - FUNCTION OUTPUT:          00001111010000001111101000001110

       - Left XOR FUNCTION OUTPUT: 00100010101000111100111000010000

       - Next Round Left 32 Bits:  11001010110111010100100101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010101000111100111000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010110111010100100101101100

       - Right 32 Bits:            00100010101000111100111000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011001110011010001001010011010100111011001001010   [Subkey: 2]
          - Input Half:       00100010101000111100111000010000
          - S-Box Result:     11101110010000010101110010101111   [per every group of 4-bits]
          - Split Into Two:   1110111001000001 [L] 0101110010101111 [R]
          - Swap Halves:      01011100101011111110111001000001
          - Bit Inversion:    10100011010100000001000110111110
          - Compressed Key:   10110110100110000011011011000101   [done by compression P-Box]
          - XOR with Key:     00010101110010000010011101111011

          - FUNCTION OUTPUT:  00010101110010000010011101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010110111010100100101101100

       - FUNCTION OUTPUT:          00010101110010000010011101111011

       - Left XOR FUNCTION OUTPUT: 11011111000101010110111000010111

       - Next Round Left 32 Bits:  00100010101000111100111000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111000101010110111000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010101000111100111000010000

       - Right 32 Bits:            11011111000101010110111000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011000010011000110010111011010110010101100010011011   [Subkey: 1]
          - Input Half:       11011111000101010110111000010111
          - S-Box Result:     01101011101010010000110010101101   [per every group of 4-bits]
          - Split Into Two:   0110101110101001 [L] 0000110010101101 [R]
          - Swap Halves:      00001100101011010110101110101001
          - Bit Inversion:    11110011010100101001010001010110
          - Compressed Key:   11100001001001110101101000100111   [done by compression P-Box]
          - XOR with Key:     00010010011101011100111001110001

          - FUNCTION OUTPUT:  00010010011101011100111001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010101000111100111000010000

       - FUNCTION OUTPUT:          00010010011101011100111001110001

       - Left XOR FUNCTION OUTPUT: 00110000110101100000000001100001

       - Next Round Left 32 Bits:  11011111000101010110111000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000110101100000000001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011000011010110000000000110000111011111000101010110111000010111

 > Decrypted Block:     0011000011010110000000000110000111011111000101010110111000010111


!!!CBC: Previous Ciphertext:                             0111100110000000010111010100000111111111001101010100111000110111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100101010110010111010010000000100000001000000010000000100000

 > Final Processed Block:                                0100100101010110010111010010000000100000001000000010000000100000




BLOCKS IN ASCII:             [START_KEY]yQeHQPoV28ygJAPTPyAdX[END_KEY][START_IV]fqPB6lLk[END_IV]     

