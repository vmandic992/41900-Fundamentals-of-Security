Triple DES Capture

168-bit key: WHmRm2pys0GT4X0bQOXko

3 x 56-bit DES keys: WHmRm2p, ys0GT4X, 0bQOXko

Initialization Vector: N/A (Using ECB)

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 0bQOXko
In Binary:  00110000011000100101000101001111010110000110101101101111

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 10011111001110110101110101100001010011110010100100100001
Subkey 2  : 11000001100010010100010100111101011000011010110110111100
Subkey 3  : 01111100111011010111010110000101001111001010010010000110
Subkey 4  : 00000110001001010001010011110101100001101011011011110011
Subkey 5  : 11110011101101011101011000010100111100101001001000011001
Subkey 6  : 00011000100101000101001111010110000110101101101111001100
Subkey 7  : 11001110110101110101100001010011110010100100100001100111
Subkey 8  : 01100010010100010100111101011000011010110110111100110000
Subkey 9  : 00111011010111010110000101001111001010010010000110011111
Subkey 10 : 10001001010001010011110101100001101011011011110011000001
Subkey 11 : 11101101011101011000010100111100101001001000011001111100
Subkey 12 : 00100101000101001111010110000110101101101111001100000110
Subkey 13 : 10110101110101100001010011110010100100100001100111110011
Subkey 14 : 10010100010100111101011000011010110110111100110000011000
Subkey 15 : 11010111010110000101001111001010010010000110011111001110
Subkey 16 : 01010001010011110101100001101011011011110011000001100010

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ì½¹?Uö½M?iì³ò%S?BkÙü'7$#ó­|???Â?|)5ÖÊBp´ÿ?yù?&Öüc ?^¶°rõ<þeùõLTÄ.

Data padded with spaces : ì½¹?Uö½M?iì³ò%S?BkÙü'7$#ó­|???Â?|)5ÖÊBp´ÿ?yù?&Öüc ?^¶°rõ<þeùõLTÄ.[Padded with '0' spaces]

Data in ASCII           : 236,26,189,185,143,85,246,189,77,3,145,105,236,179,242,37,83,14,153,66,107,217,252,39,55,36,35,243,173,124,134,154,155,194,151,124,41,53,214,202,66,112,180,255,128,121,249,136,8,38,214,252,99,127,32,145,94,182,176,114,245,60,254,22,101,249,245,76,84,15,196,46,

Data in Binary          : 11101100,00011010,10111101,10111001,10001111,01010101,11110110,10111101,01001101,00000011,10010001,01101001,11101100,10110011,11110010,00100101,01010011,00001110,10011001,01000010,01101011,11011001,11111100,00100111,00110111,00100100,00100011,11110011,10101101,01111100,10000110,10011010,10011011,11000010,10010111,01111100,00101001,00110101,11010110,11001010,01000010,01110000,10110100,11111111,10000000,01111001,11111001,10001000,00001000,00100110,11010110,11111100,01100011,01111111,00100000,10010001,01011110,10110110,10110000,01110010,11110101,00111100,11111110,00010110,01100101,11111001,11110101,01001100,01010100,00001111,11000100,00101110,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 1110110000011010101111011011100110001111010101011111011010111101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100000110101011110110111001

       - Right 32 Bits:            10001111010101011111011010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       10001111010101011111011010111101
          - S-Box Result:     00101011100110011011000010000110   [per every group of 4-bits]
          - Split Into Two:   0010101110011001 [L] 1011000010000110 [R]
          - Swap Halves:      10110000100001100010101110011001
          - Bit Inversion:    01001111011110011101010001100110
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     00001100000000001010100001100111

          - FUNCTION OUTPUT:  00001100000000001010100001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100000110101011110110111001

       - FUNCTION OUTPUT:          00001100000000001010100001100111

       - Left XOR FUNCTION OUTPUT: 11100000000110100001010111011110

       - Next Round Left 32 Bits:  10001111010101011111011010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000000110100001010111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111010101011111011010111101

       - Right 32 Bits:            11100000000110100001010111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       11100000000110100001010111011110
          - S-Box Result:     11001111101001001010100101101100   [per every group of 4-bits]
          - Split Into Two:   1100111110100100 [L] 1010100101101100 [R]
          - Swap Halves:      10101001011011001100111110100100
          - Bit Inversion:    01010110100100110011000001011011
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     00101111110011110010001010100110

          - FUNCTION OUTPUT:  00101111110011110010001010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111010101011111011010111101

       - FUNCTION OUTPUT:          00101111110011110010001010100110

       - Left XOR FUNCTION OUTPUT: 10100000100110101101010000011011

       - Next Round Left 32 Bits:  11100000000110100001010111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000100110101101010000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000000110100001010111011110

       - Right 32 Bits:            10100000100110101101010000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       10100000100110101101010000011011
          - S-Box Result:     01001111001101000110011110101000   [per every group of 4-bits]
          - Split Into Two:   0100111100110100 [L] 0110011110101000 [R]
          - Swap Halves:      01100111101010000100111100110100
          - Bit Inversion:    10011000010101111011000011001011
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     11000000000001010010111110001111

          - FUNCTION OUTPUT:  11000000000001010010111110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000000110100001010111011110

       - FUNCTION OUTPUT:          11000000000001010010111110001111

       - Left XOR FUNCTION OUTPUT: 00100000000111110011101001010001

       - Next Round Left 32 Bits:  10100000100110101101010000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000000111110011101001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000100110101101010000011011

       - Right 32 Bits:            00100000000111110011101001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       00100000000111110011101001010001
          - S-Box Result:     11101111101010110001010010011010   [per every group of 4-bits]
          - Split Into Two:   1110111110101011 [L] 0001010010011010 [R]
          - Swap Halves:      00010100100110101110111110101011
          - Bit Inversion:    11101011011001010001000001010100
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     10110001011110101001010001100111

          - FUNCTION OUTPUT:  10110001011110101001010001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000100110101101010000011011

       - FUNCTION OUTPUT:          10110001011110101001010001100111

       - Left XOR FUNCTION OUTPUT: 00010001111000000100000001111100

       - Next Round Left 32 Bits:  00100000000111110011101001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001111000000100000001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000000111110011101001010001

       - Right 32 Bits:            00010001111000000100000001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       00010001111000000100000001111100
          - S-Box Result:     10101010110011110111111111010101   [per every group of 4-bits]
          - Split Into Two:   1010101011001111 [L] 0111111111010101 [R]
          - Swap Halves:      01111111110101011010101011001111
          - Bit Inversion:    10000000001010100101010100110000
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     10011010111111101111001010101001

          - FUNCTION OUTPUT:  10011010111111101111001010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000000111110011101001010001

       - FUNCTION OUTPUT:          10011010111111101111001010101001

       - Left XOR FUNCTION OUTPUT: 10111010111000011100100011111000

       - Next Round Left 32 Bits:  00010001111000000100000001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010111000011100100011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001111000000100000001111100

       - Right 32 Bits:            10111010111000011100100011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       10111010111000011100100011111000
          - S-Box Result:     10000100110010100101001010110010   [per every group of 4-bits]
          - Split Into Two:   1000010011001010 [L] 0101001010110010 [R]
          - Swap Halves:      01010010101100101000010011001010
          - Bit Inversion:    10101101010011010111101100110101
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     00110011010011101101101011111001

          - FUNCTION OUTPUT:  00110011010011101101101011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001111000000100000001111100

       - FUNCTION OUTPUT:          00110011010011101101101011111001

       - Left XOR FUNCTION OUTPUT: 00100010101011101001101010000101

       - Next Round Left 32 Bits:  10111010111000011100100011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010101011101001101010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010111000011100100011111000

       - Right 32 Bits:            00100010101011101001101010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       00100010101011101001101010000101
          - S-Box Result:     11101110010011000011010000101001   [per every group of 4-bits]
          - Split Into Two:   1110111001001100 [L] 0011010000101001 [R]
          - Swap Halves:      00110100001010011110111001001100
          - Bit Inversion:    11001011110101100001000110110011
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     01001001011011111111100011010001

          - FUNCTION OUTPUT:  01001001011011111111100011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010111000011100100011111000

       - FUNCTION OUTPUT:          01001001011011111111100011010001

       - Left XOR FUNCTION OUTPUT: 11110011100011100011000000101001

       - Next Round Left 32 Bits:  00100010101011101001101010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011100011100011000000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010101011101001101010000101

       - Right 32 Bits:            11110011100011100011000000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       11110011100011100011000000101001
          - S-Box Result:     10110001001011000001111111100011   [per every group of 4-bits]
          - Split Into Two:   1011000100101100 [L] 0001111111100011 [R]
          - Swap Halves:      00011111111000111011000100101100
          - Bit Inversion:    11100000000111000100111011010011
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     00001011110101000010011011101100

          - FUNCTION OUTPUT:  00001011110101000010011011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010101011101001101010000101

       - FUNCTION OUTPUT:          00001011110101000010011011101100

       - Left XOR FUNCTION OUTPUT: 00101001011110101011110001101001

       - Next Round Left 32 Bits:  11110011100011100011000000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001011110101011110001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011100011100011000000101001

       - Right 32 Bits:            00101001011110101011110001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       00101001011110101011110001101001
          - S-Box Result:     11100011110101001000010100000011   [per every group of 4-bits]
          - Split Into Two:   1110001111010100 [L] 1000010100000011 [R]
          - Swap Halves:      10000101000000111110001111010100
          - Bit Inversion:    01111010111111000001110000101011
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     01010010100101100010001011111011

          - FUNCTION OUTPUT:  01010010100101100010001011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011100011100011000000101001

       - FUNCTION OUTPUT:          01010010100101100010001011111011

       - Left XOR FUNCTION OUTPUT: 10100001000110000001001011010010

       - Next Round Left 32 Bits:  00101001011110101011110001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001000110000001001011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001011110101011110001101001

       - Right 32 Bits:            10100001000110000001001011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       10100001000110000001001011010010
          - S-Box Result:     01001010101000101010111001101110   [per every group of 4-bits]
          - Split Into Two:   0100101010100010 [L] 1010111001101110 [R]
          - Swap Halves:      10101110011011100100101010100010
          - Bit Inversion:    01010001100100011011010101011101
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     11101011111010110110001101010110

          - FUNCTION OUTPUT:  11101011111010110110001101010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001011110101011110001101001

       - FUNCTION OUTPUT:          11101011111010110110001101010110

       - Left XOR FUNCTION OUTPUT: 11000010100100011101111100111111

       - Next Round Left 32 Bits:  10100001000110000001001011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010100100011101111100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001000110000001001011010010

       - Right 32 Bits:            11000010100100011101111100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       11000010100100011101111100111111
          - S-Box Result:     01011110001110100110101100011011   [per every group of 4-bits]
          - Split Into Two:   0101111000111010 [L] 0110101100011011 [R]
          - Swap Halves:      01101011000110110101111000111010
          - Bit Inversion:    10010100111001001010000111000101
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     01011110101110101010011001111001

          - FUNCTION OUTPUT:  01011110101110101010011001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001000110000001001011010010

       - FUNCTION OUTPUT:          01011110101110101010011001111001

       - Left XOR FUNCTION OUTPUT: 11111111101000101011010010101011

       - Next Round Left 32 Bits:  11000010100100011101111100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111101000101011010010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010100100011101111100111111

       - Right 32 Bits:            11111111101000101011010010101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       11111111101000101011010010101011
          - S-Box Result:     10111011010011101000011101001000   [per every group of 4-bits]
          - Split Into Two:   1011101101001110 [L] 1000011101001000 [R]
          - Swap Halves:      10000111010010001011101101001110
          - Bit Inversion:    01111000101101110100010010110001
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     00010110111001011111000100110111

          - FUNCTION OUTPUT:  00010110111001011111000100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010100100011101111100111111

       - FUNCTION OUTPUT:          00010110111001011111000100110111

       - Left XOR FUNCTION OUTPUT: 11010100011101000010111000001000

       - Next Round Left 32 Bits:  11111111101000101011010010101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100011101000010111000001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111101000101011010010101011

       - Right 32 Bits:            11010100011101000010111000001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       11010100011101000010111000001000
          - S-Box Result:     01100111110101111110110011110010   [per every group of 4-bits]
          - Split Into Two:   0110011111010111 [L] 1110110011110010 [R]
          - Swap Halves:      11101100111100100110011111010111
          - Bit Inversion:    00010011000011011001100000101000
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     00100101000100100101110111001011

          - FUNCTION OUTPUT:  00100101000100100101110111001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111101000101011010010101011

       - FUNCTION OUTPUT:          00100101000100100101110111001011

       - Left XOR FUNCTION OUTPUT: 11011010101100001110100101100000

       - Next Round Left 32 Bits:  11010100011101000010111000001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010101100001110100101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100011101000010111000001000

       - Right 32 Bits:            11011010101100001110100101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       11011010101100001110100101100000
          - S-Box Result:     01100100100011111100001100001111   [per every group of 4-bits]
          - Split Into Two:   0110010010001111 [L] 1100001100001111 [R]
          - Swap Halves:      11000011000011110110010010001111
          - Bit Inversion:    00111100111100001001101101110000
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     11101011001001001111101000011001

          - FUNCTION OUTPUT:  11101011001001001111101000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100011101000010111000001000

       - FUNCTION OUTPUT:          11101011001001001111101000011001

       - Left XOR FUNCTION OUTPUT: 00111111010100001101010000010001

       - Next Round Left 32 Bits:  11011010101100001110100101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111010100001101010000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010101100001110100101100000

       - Right 32 Bits:            00111111010100001101010000010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       00111111010100001101010000010001
          - S-Box Result:     00011011100111110110011110101010   [per every group of 4-bits]
          - Split Into Two:   0001101110011111 [L] 0110011110101010 [R]
          - Swap Halves:      01100111101010100001101110011111
          - Bit Inversion:    10011000010101011110010001100000
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     10011001000101101001110100011100

          - FUNCTION OUTPUT:  10011001000101101001110100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010101100001110100101100000

       - FUNCTION OUTPUT:          10011001000101101001110100011100

       - Left XOR FUNCTION OUTPUT: 01000011101001100111010001111100

       - Next Round Left 32 Bits:  00111111010100001101010000010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011101001100111010001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111010100001101010000010001

       - Right 32 Bits:            01000011101001100111010001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       01000011101001100111010001111100
          - S-Box Result:     01110001010000001101011111010101   [per every group of 4-bits]
          - Split Into Two:   0111000101000000 [L] 1101011111010101 [R]
          - Swap Halves:      11010111110101010111000101000000
          - Bit Inversion:    00101000001010101000111010111111
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     11010101010100111101001010101101

          - FUNCTION OUTPUT:  11010101010100111101001010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111010100001101010000010001

       - FUNCTION OUTPUT:          11010101010100111101001010101101

       - Left XOR FUNCTION OUTPUT: 11101010000000110000011010111100

       - Next Round Left 32 Bits:  01000011101001100111010001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010000000110000011010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110101000000011000001101011110001000011101001100111010001111100

 > Processed Block:     1110101000000011000001101011110001000011101001100111010001111100


Ciphertext Block 2: 0100110100000011100100010110100111101100101100111111001000100101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101000000111001000101101001

       - Right 32 Bits:            11101100101100111111001000100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       11101100101100111111001000100101
          - S-Box Result:     11000101100000011011111011101001   [per every group of 4-bits]
          - Split Into Two:   1100010110000001 [L] 1011111011101001 [R]
          - Swap Halves:      10111110111010011100010110000001
          - Bit Inversion:    01000001000101100011101001111110
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     00000010011011110100011001111111

          - FUNCTION OUTPUT:  00000010011011110100011001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101000000111001000101101001

       - FUNCTION OUTPUT:          00000010011011110100011001111111

       - Left XOR FUNCTION OUTPUT: 01001111011011001101011100010110

       - Next Round Left 32 Bits:  11101100101100111111001000100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111011011001101011100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100101100111111001000100101

       - Right 32 Bits:            01001111011011001101011100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       01001111011011001101011100010110
          - S-Box Result:     01111011000001010110110110100000   [per every group of 4-bits]
          - Split Into Two:   0111101100000101 [L] 0110110110100000 [R]
          - Swap Halves:      01101101101000000111101100000101
          - Bit Inversion:    10010010010111111000010011111010
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     11101011000000111001011000000111

          - FUNCTION OUTPUT:  11101011000000111001011000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100101100111111001000100101

       - FUNCTION OUTPUT:          11101011000000111001011000000111

       - Left XOR FUNCTION OUTPUT: 00000111101100000110010000100010

       - Next Round Left 32 Bits:  01001111011011001101011100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111101100000110010000100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111011011001101011100010110

       - Right 32 Bits:            00000111101100000110010000100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       00000111101100000110010000100010
          - S-Box Result:     11111101100011110000011111101110   [per every group of 4-bits]
          - Split Into Two:   1111110110001111 [L] 0000011111101110 [R]
          - Swap Halves:      00000111111011101111110110001111
          - Bit Inversion:    11111000000100010000001001110000
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     10100000010000111001110100110100

          - FUNCTION OUTPUT:  10100000010000111001110100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111011011001101011100010110

       - FUNCTION OUTPUT:          10100000010000111001110100110100

       - Left XOR FUNCTION OUTPUT: 11101111001011110100101000100010

       - Next Round Left 32 Bits:  00000111101100000110010000100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111001011110100101000100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111101100000110010000100010

       - Right 32 Bits:            11101111001011110100101000100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       11101111001011110100101000100010
          - S-Box Result:     11001011111010110111010011101110   [per every group of 4-bits]
          - Split Into Two:   1100101111101011 [L] 0111010011101110 [R]
          - Swap Halves:      01110100111011101100101111101011
          - Bit Inversion:    10001011000100010011010000010100
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     11010001000011101011000000100111

          - FUNCTION OUTPUT:  11010001000011101011000000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111101100000110010000100010

       - FUNCTION OUTPUT:          11010001000011101011000000100111

       - Left XOR FUNCTION OUTPUT: 11010110101111101101010000000101

       - Next Round Left 32 Bits:  11101111001011110100101000100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110101111101101010000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111001011110100101000100010

       - Right 32 Bits:            11010110101111101101010000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       11010110101111101101010000000101
          - S-Box Result:     01100000100011000110011111111001   [per every group of 4-bits]
          - Split Into Two:   0110000010001100 [L] 0110011111111001 [R]
          - Swap Halves:      01100111111110010110000010001100
          - Bit Inversion:    10011000000001101001111101110011
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     10000010110100100011100011101010

          - FUNCTION OUTPUT:  10000010110100100011100011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111001011110100101000100010

       - FUNCTION OUTPUT:          10000010110100100011100011101010

       - Left XOR FUNCTION OUTPUT: 01101101111111010111001011001000

       - Next Round Left 32 Bits:  11010110101111101101010000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101111111010111001011001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110101111101101010000000101

       - Right 32 Bits:            01101101111111010111001011001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       01101101111111010111001011001000
          - S-Box Result:     00000110101101101101111001010010   [per every group of 4-bits]
          - Split Into Two:   0000011010110110 [L] 1101111001010010 [R]
          - Swap Halves:      11011110010100100000011010110110
          - Bit Inversion:    00100001101011011111100101001001
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     10111111101011100101100010000101

          - FUNCTION OUTPUT:  10111111101011100101100010000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110101111101101010000000101

       - FUNCTION OUTPUT:          10111111101011100101100010000101

       - Left XOR FUNCTION OUTPUT: 01101001000100001000110010000000

       - Next Round Left 32 Bits:  01101101111111010111001011001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001000100001000110010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101111111010111001011001000

       - Right 32 Bits:            01101001000100001000110010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       01101001000100001000110010000000
          - S-Box Result:     00000011101011110010010100101111   [per every group of 4-bits]
          - Split Into Two:   0000001110101111 [L] 0010010100101111 [R]
          - Swap Halves:      00100101001011110000001110101111
          - Bit Inversion:    11011010110100001111110001010000
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     01011000011010010001010100110010

          - FUNCTION OUTPUT:  01011000011010010001010100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101111111010111001011001000

       - FUNCTION OUTPUT:          01011000011010010001010100110010

       - Left XOR FUNCTION OUTPUT: 00110101100101000110011111111010

       - Next Round Left 32 Bits:  01101001000100001000110010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101100101000110011111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001000100001000110010000000

       - Right 32 Bits:            00110101100101000110011111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       00110101100101000110011111111010
          - S-Box Result:     00011001001101110000110110110100   [per every group of 4-bits]
          - Split Into Two:   0001100100110111 [L] 0000110110110100 [R]
          - Swap Halves:      00001101101101000001100100110111
          - Bit Inversion:    11110010010010111110011011001000
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     00011001100000111000111011110111

          - FUNCTION OUTPUT:  00011001100000111000111011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001000100001000110010000000

       - FUNCTION OUTPUT:          00011001100000111000111011110111

       - Left XOR FUNCTION OUTPUT: 01110000100100110000001001110111

       - Next Round Left 32 Bits:  00110101100101000110011111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000100100110000001001110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101100101000110011111111010

       - Right 32 Bits:            01110000100100110000001001110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       01110000100100110000001001110111
          - S-Box Result:     11011111001100011111111011011101   [per every group of 4-bits]
          - Split Into Two:   1101111100110001 [L] 1111111011011101 [R]
          - Swap Halves:      11111110110111011101111100110001
          - Bit Inversion:    00000001001000100010000011001110
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     00101001010010000001111000011110

          - FUNCTION OUTPUT:  00101001010010000001111000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101100101000110011111111010

       - FUNCTION OUTPUT:          00101001010010000001111000011110

       - Left XOR FUNCTION OUTPUT: 00011100110111000111100111100100

       - Next Round Left 32 Bits:  01110000100100110000001001110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100110111000111100111100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000100100110000001001110111

       - Right 32 Bits:            00011100110111000111100111100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       00011100110111000111100111100100
          - S-Box Result:     10100101011001011101001111000111   [per every group of 4-bits]
          - Split Into Two:   1010010101100101 [L] 1101001111000111 [R]
          - Swap Halves:      11010011110001111010010101100101
          - Bit Inversion:    00101100001110000101101010011010
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     10010110010000101000110010010001

          - FUNCTION OUTPUT:  10010110010000101000110010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000100100110000001001110111

       - FUNCTION OUTPUT:          10010110010000101000110010010001

       - Left XOR FUNCTION OUTPUT: 11100110110100011000111011100110

       - Next Round Left 32 Bits:  00011100110111000111100111100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110110100011000111011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100110111000111100111100100

       - Right 32 Bits:            11100110110100011000111011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       11100110110100011000111011100110
          - S-Box Result:     11000000011010100010110011000000   [per every group of 4-bits]
          - Split Into Two:   1100000001101010 [L] 0010110011000000 [R]
          - Swap Halves:      00101100110000001100000001101010
          - Bit Inversion:    11010011001111110011111110010101
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     00011001011000010011100000101001

          - FUNCTION OUTPUT:  00011001011000010011100000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100110111000111100111100100

       - FUNCTION OUTPUT:          00011001011000010011100000101001

       - Left XOR FUNCTION OUTPUT: 00000101101111010100000111001101

       - Next Round Left 32 Bits:  11100110110100011000111011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101101111010100000111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110110100011000111011100110

       - Right 32 Bits:            00000101101111010100000111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       00000101101111010100000111001101
          - S-Box Result:     11111001100001100111101001010110   [per every group of 4-bits]
          - Split Into Two:   1111100110000110 [L] 0111101001010110 [R]
          - Swap Halves:      01111010010101101111100110000110
          - Bit Inversion:    10000101101010010000011001111001
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     11101011111110111011001111111111

          - FUNCTION OUTPUT:  11101011111110111011001111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110110100011000111011100110

       - FUNCTION OUTPUT:          11101011111110111011001111111111

       - Left XOR FUNCTION OUTPUT: 00001101001010100011110100011001

       - Next Round Left 32 Bits:  00000101101111010100000111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101001010100011110100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101101111010100000111001101

       - Right 32 Bits:            00001101001010100011110100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       00001101001010100011110100011001
          - S-Box Result:     11110110111001000001011010100011   [per every group of 4-bits]
          - Split Into Two:   1111011011100100 [L] 0001011010100011 [R]
          - Swap Halves:      00010110101000111111011011100100
          - Bit Inversion:    11101001010111000000100100011011
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     11011111010000111100110011111000

          - FUNCTION OUTPUT:  11011111010000111100110011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101101111010100000111001101

       - FUNCTION OUTPUT:          11011111010000111100110011111000

       - Left XOR FUNCTION OUTPUT: 11011010111111101000110100110101

       - Next Round Left 32 Bits:  00001101001010100011110100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010111111101000110100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101001010100011110100011001

       - Right 32 Bits:            11011010111111101000110100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       11011010111111101000110100110101
          - S-Box Result:     01100100101111000010011000011001   [per every group of 4-bits]
          - Split Into Two:   0110010010111100 [L] 0010011000011001 [R]
          - Swap Halves:      00100110000110010110010010111100
          - Bit Inversion:    11011001111001101001101101000011
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     00001110001100101111101000101010

          - FUNCTION OUTPUT:  00001110001100101111101000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101001010100011110100011001

       - FUNCTION OUTPUT:          00001110001100101111101000101010

       - Left XOR FUNCTION OUTPUT: 00000011000110001100011100110011

       - Next Round Left 32 Bits:  11011010111111101000110100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011000110001100011100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010111111101000110100110101

       - Right 32 Bits:            00000011000110001100011100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       00000011000110001100011100110011
          - S-Box Result:     11110001101000100101110100010001   [per every group of 4-bits]
          - Split Into Two:   1111000110100010 [L] 0101110100010001 [R]
          - Swap Halves:      01011101000100011111000110100010
          - Bit Inversion:    10100010111011100000111001011101
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     10100011101011010111011100100001

          - FUNCTION OUTPUT:  10100011101011010111011100100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010111111101000110100110101

       - FUNCTION OUTPUT:          10100011101011010111011100100001

       - Left XOR FUNCTION OUTPUT: 01111001010100111111101000010100

       - Next Round Left 32 Bits:  00000011000110001100011100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001010100111111101000010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011000110001100011100110011

       - Right 32 Bits:            01111001010100111111101000010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       01111001010100111111101000010100
          - S-Box Result:     11010011100100011011010010100111   [per every group of 4-bits]
          - Split Into Two:   1101001110010001 [L] 1011010010100111 [R]
          - Swap Halves:      10110100101001111101001110010001
          - Bit Inversion:    01001011010110000010110001101110
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     10110110001000010111000001111100

          - FUNCTION OUTPUT:  10110110001000010111000001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011000110001100011100110011

       - FUNCTION OUTPUT:          10110110001000010111000001111100

       - Left XOR FUNCTION OUTPUT: 10110101001110011011011101001111

       - Next Round Left 32 Bits:  01111001010100111111101000010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101001110011011011101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011010100111001101101110100111101111001010100111111101000010100

 > Processed Block:     1011010100111001101101110100111101111001010100111111101000010100


Ciphertext Block 3: 0101001100001110100110010100001001101011110110011111110000100111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011000011101001100101000010

       - Right 32 Bits:            01101011110110011111110000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       01101011110110011111110000100111
          - S-Box Result:     00001000011000111011010111101101   [per every group of 4-bits]
          - Split Into Two:   0000100001100011 [L] 1011010111101101 [R]
          - Swap Halves:      10110101111011010000100001100011
          - Bit Inversion:    01001010000100101111011110011100
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     00001001011010111000101110011101

          - FUNCTION OUTPUT:  00001001011010111000101110011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011000011101001100101000010

       - FUNCTION OUTPUT:          00001001011010111000101110011101

       - Left XOR FUNCTION OUTPUT: 01011010011001010001001011011111

       - Next Round Left 32 Bits:  01101011110110011111110000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010011001010001001011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011110110011111110000100111

       - Right 32 Bits:            01011010011001010001001011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       01011010011001010001001011011111
          - S-Box Result:     10010100000010011010111001101011   [per every group of 4-bits]
          - Split Into Two:   1001010000001001 [L] 1010111001101011 [R]
          - Swap Halves:      10101110011010111001010000001001
          - Bit Inversion:    01010001100101000110101111110110
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     00101000110010000111100100001011

          - FUNCTION OUTPUT:  00101000110010000111100100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011110110011111110000100111

       - FUNCTION OUTPUT:          00101000110010000111100100001011

       - Left XOR FUNCTION OUTPUT: 01000011000100011000010100101100

       - Next Round Left 32 Bits:  01011010011001010001001011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011000100011000010100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010011001010001001011011111

       - Right 32 Bits:            01000011000100011000010100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       01000011000100011000010100101100
          - S-Box Result:     01110001101010100010100111100101   [per every group of 4-bits]
          - Split Into Two:   0111000110101010 [L] 0010100111100101 [R]
          - Swap Halves:      00101001111001010111000110101010
          - Bit Inversion:    11010110000110101000111001010101
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     10001110010010000001000100010001

          - FUNCTION OUTPUT:  10001110010010000001000100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010011001010001001011011111

       - FUNCTION OUTPUT:          10001110010010000001000100010001

       - Left XOR FUNCTION OUTPUT: 11010100001011010000001111001110

       - Next Round Left 32 Bits:  01000011000100011000010100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100001011010000001111001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011000100011000010100101100

       - Right 32 Bits:            11010100001011010000001111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       11010100001011010000001111001110
          - S-Box Result:     01100111111001101111000101011100   [per every group of 4-bits]
          - Split Into Two:   0110011111100110 [L] 1111000101011100 [R]
          - Swap Halves:      11110001010111000110011111100110
          - Bit Inversion:    00001110101000111001100000011001
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     01010100101111000001110000101010

          - FUNCTION OUTPUT:  01010100101111000001110000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011000100011000010100101100

       - FUNCTION OUTPUT:          01010100101111000001110000101010

       - Left XOR FUNCTION OUTPUT: 00010111101011011001100100000110

       - Next Round Left 32 Bits:  11010100001011010000001111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111101011011001100100000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100001011010000001111001110

       - Right 32 Bits:            00010111101011011001100100000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       00010111101011011001100100000110
          - S-Box Result:     10101101010001100011001111110000   [per every group of 4-bits]
          - Split Into Two:   1010110101000110 [L] 0011001111110000 [R]
          - Swap Halves:      00110011111100001010110101000110
          - Bit Inversion:    11001100000011110101001010111001
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     11010110110110111111010100100000

          - FUNCTION OUTPUT:  11010110110110111111010100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100001011010000001111001110

       - FUNCTION OUTPUT:          11010110110110111111010100100000

       - Left XOR FUNCTION OUTPUT: 00000010111101101111011011101110

       - Next Round Left 32 Bits:  00010111101011011001100100000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010111101101111011011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111101011011001100100000110

       - Right 32 Bits:            00000010111101101111011011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       00000010111101101111011011101110
          - S-Box Result:     11111110101100001011000011001100   [per every group of 4-bits]
          - Split Into Two:   1111111010110000 [L] 1011000011001100 [R]
          - Swap Halves:      10110000110011001111111010110000
          - Bit Inversion:    01001111001100110000000101001111
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     11010001001100001010000010000011

          - FUNCTION OUTPUT:  11010001001100001010000010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111101011011001100100000110

       - FUNCTION OUTPUT:          11010001001100001010000010000011

       - Left XOR FUNCTION OUTPUT: 11000110100111010011100110000101

       - Next Round Left 32 Bits:  00000010111101101111011011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110100111010011100110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010111101101111011011101110

       - Right 32 Bits:            11000110100111010011100110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       11000110100111010011100110000101
          - S-Box Result:     01010000001101100001001100101001   [per every group of 4-bits]
          - Split Into Two:   0101000000110110 [L] 0001001100101001 [R]
          - Swap Halves:      00010011001010010101000000110110
          - Bit Inversion:    11101100110101101010111111001001
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     01101110011011110100011010101011

          - FUNCTION OUTPUT:  01101110011011110100011010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010111101101111011011101110

       - FUNCTION OUTPUT:          01101110011011110100011010101011

       - Left XOR FUNCTION OUTPUT: 01101100100110011011000001000101

       - Next Round Left 32 Bits:  11000110100111010011100110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100100110011011000001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110100111010011100110000101

       - Right 32 Bits:            01101100100110011011000001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       01101100100110011011000001000101
          - S-Box Result:     00000101001100111000111101111001   [per every group of 4-bits]
          - Split Into Two:   0000010100110011 [L] 1000111101111001 [R]
          - Swap Halves:      10001111011110010000010100110011
          - Bit Inversion:    01110000100001101111101011001100
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     10011011010011101001001011110011

          - FUNCTION OUTPUT:  10011011010011101001001011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110100111010011100110000101

       - FUNCTION OUTPUT:          10011011010011101001001011110011

       - Left XOR FUNCTION OUTPUT: 01011101110100111010101101110110

       - Next Round Left 32 Bits:  01101100100110011011000001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101110100111010101101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100100110011011000001000101

       - Right 32 Bits:            01011101110100111010101101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       01011101110100111010101101110110
          - S-Box Result:     10010110011000010100100011010000   [per every group of 4-bits]
          - Split Into Two:   1001011001100001 [L] 0100100011010000 [R]
          - Swap Halves:      01001000110100001001011001100001
          - Bit Inversion:    10110111001011110110100110011110
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     10011111010001010101011101001110

          - FUNCTION OUTPUT:  10011111010001010101011101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100100110011011000001000101

       - FUNCTION OUTPUT:          10011111010001010101011101001110

       - Left XOR FUNCTION OUTPUT: 11110011110111001110011100001011

       - Next Round Left 32 Bits:  01011101110100111010101101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011110111001110011100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101110100111010101101110110

       - Right 32 Bits:            11110011110111001110011100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       11110011110111001110011100001011
          - S-Box Result:     10110001011001011100110111111000   [per every group of 4-bits]
          - Split Into Two:   1011000101100101 [L] 1100110111111000 [R]
          - Swap Halves:      11001101111110001011000101100101
          - Bit Inversion:    00110010000001110100111010011010
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     10001000011111011001100010010001

          - FUNCTION OUTPUT:  10001000011111011001100010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101110100111010101101110110

       - FUNCTION OUTPUT:          10001000011111011001100010010001

       - Left XOR FUNCTION OUTPUT: 11010101101011100011001111100111

       - Next Round Left 32 Bits:  11110011110111001110011100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101101011100011001111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011110111001110011100001011

       - Right 32 Bits:            11010101101011100011001111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       11010101101011100011001111100111
          - S-Box Result:     01101001010011000001000111001101   [per every group of 4-bits]
          - Split Into Two:   0110100101001100 [L] 0001000111001101 [R]
          - Swap Halves:      00010001110011010110100101001100
          - Bit Inversion:    11101110001100101001011010110011
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     00100100011011001001000100001111

          - FUNCTION OUTPUT:  00100100011011001001000100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011110111001110011100001011

       - FUNCTION OUTPUT:          00100100011011001001000100001111

       - Left XOR FUNCTION OUTPUT: 11010111101100000111011000000100

       - Next Round Left 32 Bits:  11010101101011100011001111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111101100000111011000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101101011100011001111100111

       - Right 32 Bits:            11010111101100000111011000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       11010111101100000111011000000100
          - S-Box Result:     01101101100011111101000011110111   [per every group of 4-bits]
          - Split Into Two:   0110110110001111 [L] 1101000011110111 [R]
          - Swap Halves:      11010000111101110110110110001111
          - Bit Inversion:    00101111000010001001001001110000
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     01000001010110100010011111110110

          - FUNCTION OUTPUT:  01000001010110100010011111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101101011100011001111100111

       - FUNCTION OUTPUT:          01000001010110100010011111110110

       - Left XOR FUNCTION OUTPUT: 10010100111101000001010000010001

       - Next Round Left 32 Bits:  11010111101100000111011000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100111101000001010000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111101100000111011000000100

       - Right 32 Bits:            10010100111101000001010000010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       10010100111101000001010000010001
          - S-Box Result:     00110111101101111010011110101010   [per every group of 4-bits]
          - Split Into Two:   0011011110110111 [L] 1010011110101010 [R]
          - Swap Halves:      10100111101010100011011110110111
          - Bit Inversion:    01011000010101011100100001001000
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     01101110010010100000110110101011

          - FUNCTION OUTPUT:  01101110010010100000110110101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111101100000111011000000100

       - FUNCTION OUTPUT:          01101110010010100000110110101011

       - Left XOR FUNCTION OUTPUT: 10111001111110100111101110101111

       - Next Round Left 32 Bits:  10010100111101000001010000010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001111110100111101110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100111101000001010000010001

       - Right 32 Bits:            10111001111110100111101110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       10111001111110100111101110101111
          - S-Box Result:     10000011101101001101100001001011   [per every group of 4-bits]
          - Split Into Two:   1000001110110100 [L] 1101100001001011 [R]
          - Swap Halves:      11011000010010111000001110110100
          - Bit Inversion:    00100111101101000111110001001011
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     11110000011000000001110100100010

          - FUNCTION OUTPUT:  11110000011000000001110100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100111101000001010000010001

       - FUNCTION OUTPUT:          11110000011000000001110100100010

       - Left XOR FUNCTION OUTPUT: 01100100100101000000100100110011

       - Next Round Left 32 Bits:  10111001111110100111101110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100100101000000100100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001111110100111101110101111

       - Right 32 Bits:            01100100100101000000100100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       01100100100101000000100100110011
          - S-Box Result:     00000111001101111111001100010001   [per every group of 4-bits]
          - Split Into Two:   0000011100110111 [L] 1111001100010001 [R]
          - Swap Halves:      11110011000100010000011100110111
          - Bit Inversion:    00001100111011101111100011001000
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     00001101101011011000000110110100

          - FUNCTION OUTPUT:  00001101101011011000000110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001111110100111101110101111

       - FUNCTION OUTPUT:          00001101101011011000000110110100

       - Left XOR FUNCTION OUTPUT: 10110100010101111111101000011011

       - Next Round Left 32 Bits:  01100100100101000000100100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100010101111111101000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100100101000000100100110011

       - Right 32 Bits:            10110100010101111111101000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       10110100010101111111101000011011
          - S-Box Result:     10000111100111011011010010101000   [per every group of 4-bits]
          - Split Into Two:   1000011110011101 [L] 1011010010101000 [R]
          - Swap Halves:      10110100101010001000011110011101
          - Bit Inversion:    01001011010101110111100001100010
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     10110110001011100010010001110000

          - FUNCTION OUTPUT:  10110110001011100010010001110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100100101000000100100110011

       - FUNCTION OUTPUT:          10110110001011100010010001110000

       - Left XOR FUNCTION OUTPUT: 11010010101110100010110101000011

       - Next Round Left 32 Bits:  10110100010101111111101000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010101110100010110101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101001010111010001011010100001110110100010101111111101000011011

 > Processed Block:     1101001010111010001011010100001110110100010101111111101000011011


Ciphertext Block 4: 0011011100100100001000111111001110101101011111001000011010011010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111001001000010001111110011

       - Right 32 Bits:            10101101011111001000011010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       10101101011111001000011010011010
          - S-Box Result:     01000110110101010010000000110100   [per every group of 4-bits]
          - Split Into Two:   0100011011010101 [L] 0010000000110100 [R]
          - Swap Halves:      00100000001101000100011011010101
          - Bit Inversion:    11011111110010111011100100101010
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     10011100101100101100010100101011

          - FUNCTION OUTPUT:  10011100101100101100010100101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111001001000010001111110011

       - FUNCTION OUTPUT:          10011100101100101100010100101011

       - Left XOR FUNCTION OUTPUT: 10101011100101101110011011011000

       - Next Round Left 32 Bits:  10101101011111001000011010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011100101101110011011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101011111001000011010011010

       - Right 32 Bits:            10101011100101101110011011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       10101011100101101110011011011000
          - S-Box Result:     01001000001100001100000001100010   [per every group of 4-bits]
          - Split Into Two:   0100100000110000 [L] 1100000001100010 [R]
          - Swap Halves:      11000000011000100100100000110000
          - Bit Inversion:    00111111100111011011011111001111
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     01000110110000011010010100110010

          - FUNCTION OUTPUT:  01000110110000011010010100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101011111001000011010011010

       - FUNCTION OUTPUT:          01000110110000011010010100110010

       - Left XOR FUNCTION OUTPUT: 11101011101111010010001110101000

       - Next Round Left 32 Bits:  10101011100101101110011011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011101111010010001110101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011100101101110011011011000

       - Right 32 Bits:            11101011101111010010001110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       11101011101111010010001110101000
          - S-Box Result:     11001000100001101110000101000010   [per every group of 4-bits]
          - Split Into Two:   1100100010000110 [L] 1110000101000010 [R]
          - Swap Halves:      11100001010000101100100010000110
          - Bit Inversion:    00011110101111010011011101111001
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     01000110111011111010100000111101

          - FUNCTION OUTPUT:  01000110111011111010100000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011100101101110011011011000

       - FUNCTION OUTPUT:          01000110111011111010100000111101

       - Left XOR FUNCTION OUTPUT: 11101101011110010100111011100101

       - Next Round Left 32 Bits:  11101011101111010010001110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101011110010100111011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011101111010010001110101000

       - Right 32 Bits:            11101101011110010100111011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       11101101011110010100111011100101
          - S-Box Result:     11000110110100110111110011001001   [per every group of 4-bits]
          - Split Into Two:   1100011011010011 [L] 0111110011001001 [R]
          - Swap Halves:      01111100110010011100011011010011
          - Bit Inversion:    10000011001101100011100100101100
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     11011001001010011011110100011111

          - FUNCTION OUTPUT:  11011001001010011011110100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011101111010010001110101000

       - FUNCTION OUTPUT:          11011001001010011011110100011111

       - Left XOR FUNCTION OUTPUT: 00110010100101001001111010110111

       - Next Round Left 32 Bits:  11101101011110010100111011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010100101001001111010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101011110010100111011100101

       - Right 32 Bits:            00110010100101001001111010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       00110010100101001001111010110111
          - S-Box Result:     00011110001101110011110010001101   [per every group of 4-bits]
          - Split Into Two:   0001111000110111 [L] 0011110010001101 [R]
          - Swap Halves:      00111100100011010001111000110111
          - Bit Inversion:    11000011011100101110000111001000
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     11011001101001100100011001010001

          - FUNCTION OUTPUT:  11011001101001100100011001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101011110010100111011100101

       - FUNCTION OUTPUT:          11011001101001100100011001010001

       - Left XOR FUNCTION OUTPUT: 00110100110111110000100010110100

       - Next Round Left 32 Bits:  00110010100101001001111010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100110111110000100010110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010100101001001111010110111

       - Right 32 Bits:            00110100110111110000100010110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       00110100110111110000100010110100
          - S-Box Result:     00010111011010111111001010000111   [per every group of 4-bits]
          - Split Into Two:   0001011101101011 [L] 1111001010000111 [R]
          - Swap Halves:      11110010100001110001011101101011
          - Bit Inversion:    00001101011110001110100010010100
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     10010011011110110100100101011000

          - FUNCTION OUTPUT:  10010011011110110100100101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010100101001001111010110111

       - FUNCTION OUTPUT:          10010011011110110100100101011000

       - Left XOR FUNCTION OUTPUT: 10100001111011111101011111101111

       - Next Round Left 32 Bits:  00110100110111110000100010110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001111011111101011111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100110111110000100010110100

       - Right 32 Bits:            10100001111011111101011111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       10100001111011111101011111101111
          - S-Box Result:     01001010110010110110110111001011   [per every group of 4-bits]
          - Split Into Two:   0100101011001011 [L] 0110110111001011 [R]
          - Swap Halves:      01101101110010110100101011001011
          - Bit Inversion:    10010010001101001011010100110100
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     00010000100011010101110001010110

          - FUNCTION OUTPUT:  00010000100011010101110001010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100110111110000100010110100

       - FUNCTION OUTPUT:          00010000100011010101110001010110

       - Left XOR FUNCTION OUTPUT: 00100100010100100101010011100010

       - Next Round Left 32 Bits:  10100001111011111101011111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100010100100101010011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001111011111101011111101111

       - Right 32 Bits:            00100100010100100101010011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       00100100010100100101010011100010
          - S-Box Result:     11100111100111101001011111001110   [per every group of 4-bits]
          - Split Into Two:   1110011110011110 [L] 1001011111001110 [R]
          - Swap Halves:      10010111110011101110011110011110
          - Bit Inversion:    01101000001100010001100001100001
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     10000011111110010111000001011110

          - FUNCTION OUTPUT:  10000011111110010111000001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001111011111101011111101111

       - FUNCTION OUTPUT:          10000011111110010111000001011110

       - Left XOR FUNCTION OUTPUT: 00100010000101101010011110110001

       - Next Round Left 32 Bits:  00100100010100100101010011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010000101101010011110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100010100100101010011100010

       - Right 32 Bits:            00100010000101101010011110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       00100010000101101010011110110001
          - S-Box Result:     11101110101000000100110110001010   [per every group of 4-bits]
          - Split Into Two:   1110111010100000 [L] 0100110110001010 [R]
          - Swap Halves:      01001101100010101110111010100000
          - Bit Inversion:    10110010011101010001000101011111
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     10011010000111110010111110001111

          - FUNCTION OUTPUT:  10011010000111110010111110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100010100100101010011100010

       - FUNCTION OUTPUT:          10011010000111110010111110001111

       - Left XOR FUNCTION OUTPUT: 10111110010011010111101101101101

       - Next Round Left 32 Bits:  00100010000101101010011110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110010011010111101101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010000101101010011110110001

       - Right 32 Bits:            10111110010011010111101101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       10111110010011010111101101101101
          - S-Box Result:     10001100011101101101100000000110   [per every group of 4-bits]
          - Split Into Two:   1000110001110110 [L] 1101100000000110 [R]
          - Swap Halves:      11011000000001101000110001110110
          - Bit Inversion:    00100111111110010111001110001001
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     10011101100000111010010110000010

          - FUNCTION OUTPUT:  10011101100000111010010110000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010000101101010011110110001

       - FUNCTION OUTPUT:          10011101100000111010010110000010

       - Left XOR FUNCTION OUTPUT: 10111111100101010000001000110011

       - Next Round Left 32 Bits:  10111110010011010111101101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111100101010000001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110010011010111101101101101

       - Right 32 Bits:            10111111100101010000001000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       10111111100101010000001000110011
          - S-Box Result:     10001011001110011111111000010001   [per every group of 4-bits]
          - Split Into Two:   1000101100111001 [L] 1111111000010001 [R]
          - Swap Halves:      11111110000100011000101100111001
          - Bit Inversion:    00000001111011100111010011000110
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     11001011101100000111001101111010

          - FUNCTION OUTPUT:  11001011101100000111001101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110010011010111101101101101

       - FUNCTION OUTPUT:          11001011101100000111001101111010

       - Left XOR FUNCTION OUTPUT: 01110101111111010000100000010111

       - Next Round Left 32 Bits:  10111111100101010000001000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101111111010000100000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111100101010000001000110011

       - Right 32 Bits:            01110101111111010000100000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       01110101111111010000100000010111
          - S-Box Result:     11011001101101101111001010101101   [per every group of 4-bits]
          - Split Into Two:   1101100110110110 [L] 1111001010101101 [R]
          - Swap Halves:      11110010101011011101100110110110
          - Bit Inversion:    00001101010100100010011001001001
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     01100011000000001001001111001111

          - FUNCTION OUTPUT:  01100011000000001001001111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111100101010000001000110011

       - FUNCTION OUTPUT:          01100011000000001001001111001111

       - Left XOR FUNCTION OUTPUT: 11011100100101011001000111111100

       - Next Round Left 32 Bits:  01110101111111010000100000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100100101011001000111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101111111010000100000010111

       - Right 32 Bits:            11011100100101011001000111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       11011100100101011001000111111100
          - S-Box Result:     01100101001110010011101010110101   [per every group of 4-bits]
          - Split Into Two:   0110010100111001 [L] 0011101010110101 [R]
          - Swap Halves:      00111010101101010110010100111001
          - Bit Inversion:    11000101010010101001101011000110
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     11110011010101010101111100100101

          - FUNCTION OUTPUT:  11110011010101010101111100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101111111010000100000010111

       - FUNCTION OUTPUT:          11110011010101010101111100100101

       - Left XOR FUNCTION OUTPUT: 10000110101010000101011100110010

       - Next Round Left 32 Bits:  11011100100101011001000111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110101010000101011100110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100100101011001000111111100

       - Right 32 Bits:            10000110101010000101011100110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       10000110101010000101011100110010
          - S-Box Result:     00100000010000101001110100011110   [per every group of 4-bits]
          - Split Into Two:   0010000001000010 [L] 1001110100011110 [R]
          - Swap Halves:      10011101000111100010000001000010
          - Bit Inversion:    01100010111000011101111110111101
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     10110101001101011011111011010100

          - FUNCTION OUTPUT:  10110101001101011011111011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100100101011001000111111100

       - FUNCTION OUTPUT:          10110101001101011011111011010100

       - Left XOR FUNCTION OUTPUT: 01101001101000000010111100101000

       - Next Round Left 32 Bits:  10000110101010000101011100110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001101000000010111100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110101010000101011100110010

       - Right 32 Bits:            01101001101000000010111100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       01101001101000000010111100101000
          - S-Box Result:     00000011010011111110101111100010   [per every group of 4-bits]
          - Split Into Two:   0000001101001111 [L] 1110101111100010 [R]
          - Swap Halves:      11101011111000100000001101001111
          - Bit Inversion:    00010100000111011111110010110000
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     00010101010111101000010111001100

          - FUNCTION OUTPUT:  00010101010111101000010111001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110101010000101011100110010

       - FUNCTION OUTPUT:          00010101010111101000010111001100

       - Left XOR FUNCTION OUTPUT: 10010011111101101101001011111110

       - Next Round Left 32 Bits:  01101001101000000010111100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011111101101101001011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001101000000010111100101000

       - Right 32 Bits:            10010011111101101101001011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       10010011111101101101001011111110
          - S-Box Result:     00110001101100000110111010111100   [per every group of 4-bits]
          - Split Into Two:   0011000110110000 [L] 0110111010111100 [R]
          - Swap Halves:      01101110101111000011000110110000
          - Bit Inversion:    10010001010000111100111001001111
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     01101100001110101001001001011101

          - FUNCTION OUTPUT:  01101100001110101001001001011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001101000000010111100101000

       - FUNCTION OUTPUT:          01101100001110101001001001011101

       - Left XOR FUNCTION OUTPUT: 00000101100110101011110101110101

       - Next Round Left 32 Bits:  10010011111101101101001011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101100110101011110101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000010110011010101111010111010110010011111101101101001011111110

 > Processed Block:     0000010110011010101111010111010110010011111101101101001011111110


Ciphertext Block 5: 1001101111000010100101110111110000101001001101011101011011001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011110000101001011101111100

       - Right 32 Bits:            00101001001101011101011011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       00101001001101011101011011001010
          - S-Box Result:     11100011000110010110000001010100   [per every group of 4-bits]
          - Split Into Two:   1110001100011001 [L] 0110000001010100 [R]
          - Swap Halves:      01100000010101001110001100011001
          - Bit Inversion:    10011111101010110001110011100110
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     11011100110100100110000011100111

          - FUNCTION OUTPUT:  11011100110100100110000011100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011110000101001011101111100

       - FUNCTION OUTPUT:          11011100110100100110000011100111

       - Left XOR FUNCTION OUTPUT: 01000111000100001111011110011011

       - Next Round Left 32 Bits:  00101001001101011101011011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111000100001111011110011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001001101011101011011001010

       - Right 32 Bits:            01000111000100001111011110011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       01000111000100001111011110011011
          - S-Box Result:     01111101101011111011110100111000   [per every group of 4-bits]
          - Split Into Two:   0111110110101111 [L] 1011110100111000 [R]
          - Swap Halves:      10111101001110000111110110101111
          - Bit Inversion:    01000010110001111000001001010000
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     00111011100110111001000010101101

          - FUNCTION OUTPUT:  00111011100110111001000010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001001101011101011011001010

       - FUNCTION OUTPUT:          00111011100110111001000010101101

       - Left XOR FUNCTION OUTPUT: 00010010101011100100011001100111

       - Next Round Left 32 Bits:  01000111000100001111011110011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010101011100100011001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111000100001111011110011011

       - Right 32 Bits:            00010010101011100100011001100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       00010010101011100100011001100111
          - S-Box Result:     10101110010011000111000000001101   [per every group of 4-bits]
          - Split Into Two:   1010111001001100 [L] 0111000000001101 [R]
          - Swap Halves:      01110000000011011010111001001100
          - Bit Inversion:    10001111111100100101000110110011
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     11010111101000001100111011110111

          - FUNCTION OUTPUT:  11010111101000001100111011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111000100001111011110011011

       - FUNCTION OUTPUT:          11010111101000001100111011110111

       - Left XOR FUNCTION OUTPUT: 10010000101100000011100101101100

       - Next Round Left 32 Bits:  00010010101011100100011001100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000101100000011100101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101011100100011001100111

       - Right 32 Bits:            10010000101100000011100101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       10010000101100000011100101101100
          - S-Box Result:     00111111100011110001001100000101   [per every group of 4-bits]
          - Split Into Two:   0011111110001111 [L] 0001001100000101 [R]
          - Swap Halves:      00010011000001010011111110001111
          - Bit Inversion:    11101100111110101100000001110000
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     10110110111001010100010001000011

          - FUNCTION OUTPUT:  10110110111001010100010001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101011100100011001100111

       - FUNCTION OUTPUT:          10110110111001010100010001000011

       - Left XOR FUNCTION OUTPUT: 10100100010010110000001000100100

       - Next Round Left 32 Bits:  10010000101100000011100101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100010010110000001000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000101100000011100101101100

       - Right 32 Bits:            10100100010010110000001000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       10100100010010110000001000100100
          - S-Box Result:     01000111011110001111111011100111   [per every group of 4-bits]
          - Split Into Two:   0100011101111000 [L] 1111111011100111 [R]
          - Swap Halves:      11111110111001110100011101111000
          - Bit Inversion:    00000001000110001011100010000111
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     00011011110011000001111100011110

          - FUNCTION OUTPUT:  00011011110011000001111100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000101100000011100101101100

       - FUNCTION OUTPUT:          00011011110011000001111100011110

       - Left XOR FUNCTION OUTPUT: 10001011011111000010011001110010

       - Next Round Left 32 Bits:  10100100010010110000001000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011011111000010011001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100010010110000001000100100

       - Right 32 Bits:            10001011011111000010011001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       10001011011111000010011001110010
          - S-Box Result:     00101000110101011110000011011110   [per every group of 4-bits]
          - Split Into Two:   0010100011010101 [L] 1110000011011110 [R]
          - Swap Halves:      11100000110111100010100011010101
          - Bit Inversion:    00011111001000011101011100101010
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     10000001001000100111011011100110

          - FUNCTION OUTPUT:  10000001001000100111011011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100010010110000001000100100

       - FUNCTION OUTPUT:          10000001001000100111011011100110

       - Left XOR FUNCTION OUTPUT: 00100101011010010111010011000010

       - Next Round Left 32 Bits:  10001011011111000010011001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101011010010111010011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011011111000010011001110010

       - Right 32 Bits:            00100101011010010111010011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       00100101011010010111010011000010
          - S-Box Result:     11101001000000111101011101011110   [per every group of 4-bits]
          - Split Into Two:   1110100100000011 [L] 1101011101011110 [R]
          - Swap Halves:      11010111010111101110100100000011
          - Bit Inversion:    00101000101000010001011011111100
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     10101010000110001111111110011110

          - FUNCTION OUTPUT:  10101010000110001111111110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011011111000010011001110010

       - FUNCTION OUTPUT:          10101010000110001111111110011110

       - Left XOR FUNCTION OUTPUT: 00100001011001001101100111101100

       - Next Round Left 32 Bits:  00100101011010010111010011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001011001001101100111101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101011010010111010011000010

       - Right 32 Bits:            00100001011001001101100111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       00100001011001001101100111101100
          - S-Box Result:     11101010000001110110001111000101   [per every group of 4-bits]
          - Split Into Two:   1110101000000111 [L] 0110001111000101 [R]
          - Swap Halves:      01100011110001011110101000000111
          - Bit Inversion:    10011100001110100001010111111000
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     01110111111100100111110111000111

          - FUNCTION OUTPUT:  01110111111100100111110111000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101011010010111010011000010

       - FUNCTION OUTPUT:          01110111111100100111110111000111

       - Left XOR FUNCTION OUTPUT: 01010010100110110000100100000101

       - Next Round Left 32 Bits:  00100001011001001101100111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010100110110000100100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001011001001101100111101100

       - Right 32 Bits:            01010010100110110000100100000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       01010010100110110000100100000101
          - S-Box Result:     10011110001110001111001111111001   [per every group of 4-bits]
          - Split Into Two:   1001111000111000 [L] 1111001111111001 [R]
          - Swap Halves:      11110011111110011001111000111000
          - Bit Inversion:    00001100000001100110000111000111
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     00100100011011000101111100010111

          - FUNCTION OUTPUT:  00100100011011000101111100010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001011001001101100111101100

       - FUNCTION OUTPUT:          00100100011011000101111100010111

       - Left XOR FUNCTION OUTPUT: 00000101000010001000011011111011

       - Next Round Left 32 Bits:  01010010100110110000100100000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101000010001000011011111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010100110110000100100000101

       - Right 32 Bits:            00000101000010001000011011111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       00000101000010001000011011111011
          - S-Box Result:     11111001111100100010000010111000   [per every group of 4-bits]
          - Split Into Two:   1111100111110010 [L] 0010000010111000 [R]
          - Swap Halves:      00100000101110001111100111110010
          - Bit Inversion:    11011111010001110000011000001101
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     01100101001111011101000000000110

          - FUNCTION OUTPUT:  01100101001111011101000000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010100110110000100100000101

       - FUNCTION OUTPUT:          01100101001111011101000000000110

       - Left XOR FUNCTION OUTPUT: 00110111101001101101100100000011

       - Next Round Left 32 Bits:  00000101000010001000011011111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111101001101101100100000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101000010001000011011111011

       - Right 32 Bits:            00110111101001101101100100000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       00110111101001101101100100000011
          - S-Box Result:     00011101010000000110001111110001   [per every group of 4-bits]
          - Split Into Two:   0001110101000000 [L] 0110001111110001 [R]
          - Swap Halves:      01100011111100010001110101000000
          - Bit Inversion:    10011100000011101110001010111111
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     01010110010100001110010100000011

          - FUNCTION OUTPUT:  01010110010100001110010100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101000010001000011011111011

       - FUNCTION OUTPUT:          01010110010100001110010100000011

       - Left XOR FUNCTION OUTPUT: 01010011010110000110001111111000

       - Next Round Left 32 Bits:  00110111101001101101100100000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011010110000110001111111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111101001101101100100000011

       - Right 32 Bits:            01010011010110000110001111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       01010011010110000110001111111000
          - S-Box Result:     10010001100100100000000110110010   [per every group of 4-bits]
          - Split Into Two:   1001000110010010 [L] 0000000110110010 [R]
          - Swap Halves:      00000001101100101001000110010010
          - Bit Inversion:    11111110010011010110111001101101
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     10010000000111111101101111101011

          - FUNCTION OUTPUT:  10010000000111111101101111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111101001101101100100000011

       - FUNCTION OUTPUT:          10010000000111111101101111101011

       - Left XOR FUNCTION OUTPUT: 10100111101110010000001011101000

       - Next Round Left 32 Bits:  01010011010110000110001111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111101110010000001011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011010110000110001111111000

       - Right 32 Bits:            10100111101110010000001011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       10100111101110010000001011101000
          - S-Box Result:     01001101100000111111111011000010   [per every group of 4-bits]
          - Split Into Two:   0100110110000011 [L] 1111111011000010 [R]
          - Swap Halves:      11111110110000100100110110000011
          - Bit Inversion:    00000001001111011011001001111100
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     00110111001000100111011110011111

          - FUNCTION OUTPUT:  00110111001000100111011110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011010110000110001111111000

       - FUNCTION OUTPUT:          00110111001000100111011110011111

       - Left XOR FUNCTION OUTPUT: 01100100011110100001010001100111

       - Next Round Left 32 Bits:  10100111101110010000001011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100011110100001010001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111101110010000001011101000

       - Right 32 Bits:            01100100011110100001010001100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       01100100011110100001010001100111
          - S-Box Result:     00000111110101001010011100001101   [per every group of 4-bits]
          - Split Into Two:   0000011111010100 [L] 1010011100001101 [R]
          - Swap Halves:      10100111000011010000011111010100
          - Bit Inversion:    01011000111100101111100000101011
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     10001111001001101001100101000010

          - FUNCTION OUTPUT:  10001111001001101001100101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111101110010000001011101000

       - FUNCTION OUTPUT:          10001111001001101001100101000010

       - Left XOR FUNCTION OUTPUT: 00101000100111111001101110101010

       - Next Round Left 32 Bits:  01100100011110100001010001100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000100111111001101110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100011110100001010001100111

       - Right 32 Bits:            00101000100111111001101110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       00101000100111111001101110101010
          - S-Box Result:     11100010001110110011100001000100   [per every group of 4-bits]
          - Split Into Two:   1110001000111011 [L] 0011100001000100 [R]
          - Swap Halves:      00111000010001001110001000111011
          - Bit Inversion:    11000111101110110001110111000100
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     11000110111110000110010010111000

          - FUNCTION OUTPUT:  11000110111110000110010010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100011110100001010001100111

       - FUNCTION OUTPUT:          11000110111110000110010010111000

       - Left XOR FUNCTION OUTPUT: 10100010100000100111000011011111

       - Next Round Left 32 Bits:  00101000100111111001101110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010100000100111000011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000100111111001101110101010

       - Right 32 Bits:            10100010100000100111000011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       10100010100000100111000011011111
          - S-Box Result:     01001110001011101101111101101011   [per every group of 4-bits]
          - Split Into Two:   0100111000101110 [L] 1101111101101011 [R]
          - Swap Halves:      11011111011010110100111000101110
          - Bit Inversion:    00100000100101001011000111010001
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     11011101111011011110110111000011

          - FUNCTION OUTPUT:  11011101111011011110110111000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000100111111001101110101010

       - FUNCTION OUTPUT:          11011101111011011110110111000011

       - Left XOR FUNCTION OUTPUT: 11110101011100100111011001101001

       - Next Round Left 32 Bits:  10100010100000100111000011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101011100100111011001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111010101110010011101100110100110100010100000100111000011011111

 > Processed Block:     1111010101110010011101100110100110100010100000100111000011011111


Ciphertext Block 6: 0100001001110000101101001111111110000000011110011111100110001000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010011100001011010011111111

       - Right 32 Bits:            10000000011110011111100110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       10000000011110011111100110001000
          - S-Box Result:     00101111110100111011001100100010   [per every group of 4-bits]
          - Split Into Two:   0010111111010011 [L] 1011001100100010 [R]
          - Swap Halves:      10110011001000100010111111010011
          - Bit Inversion:    01001100110111011101000000101100
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     00001111101001001010110000101101

          - FUNCTION OUTPUT:  00001111101001001010110000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010011100001011010011111111

       - FUNCTION OUTPUT:          00001111101001001010110000101101

       - Left XOR FUNCTION OUTPUT: 01001101110101000001100011010010

       - Next Round Left 32 Bits:  10000000011110011111100110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101110101000001100011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000011110011111100110001000

       - Right 32 Bits:            01001101110101000001100011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       01001101110101000001100011010010
          - S-Box Result:     01110110011001111010001001101110   [per every group of 4-bits]
          - Split Into Two:   0111011001100111 [L] 1010001001101110 [R]
          - Swap Halves:      10100010011011100111011001100111
          - Bit Inversion:    01011101100100011000100110011000
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     00100100110011011001101101100101

          - FUNCTION OUTPUT:  00100100110011011001101101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000011110011111100110001000

       - FUNCTION OUTPUT:          00100100110011011001101101100101

       - Left XOR FUNCTION OUTPUT: 10100100101101000110001011101101

       - Next Round Left 32 Bits:  01001101110101000001100011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100101101000110001011101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101110101000001100011010010

       - Right 32 Bits:            10100100101101000110001011101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       10100100101101000110001011101101
          - S-Box Result:     01000111100001110000111011000110   [per every group of 4-bits]
          - Split Into Two:   0100011110000111 [L] 0000111011000110 [R]
          - Swap Halves:      00001110110001100100011110000111
          - Bit Inversion:    11110001001110011011100001111000
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     10101001011010110010011100111100

          - FUNCTION OUTPUT:  10101001011010110010011100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101110101000001100011010010

       - FUNCTION OUTPUT:          10101001011010110010011100111100

       - Left XOR FUNCTION OUTPUT: 11100100101111110011111111101110

       - Next Round Left 32 Bits:  10100100101101000110001011101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100101111110011111111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100101101000110001011101101

       - Right 32 Bits:            11100100101111110011111111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       11100100101111110011111111101110
          - S-Box Result:     11000111100010110001101111001100   [per every group of 4-bits]
          - Split Into Two:   1100011110001011 [L] 0001101111001100 [R]
          - Swap Halves:      00011011110011001100011110001011
          - Bit Inversion:    11100100001100110011100001110100
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     10111110001011001011110001000111

          - FUNCTION OUTPUT:  10111110001011001011110001000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100101101000110001011101101

       - FUNCTION OUTPUT:          10111110001011001011110001000111

       - Left XOR FUNCTION OUTPUT: 00011010100110001101111010101010

       - Next Round Left 32 Bits:  11100100101111110011111111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010100110001101111010101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100101111110011111111101110

       - Right 32 Bits:            00011010100110001101111010101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       00011010100110001101111010101010
          - S-Box Result:     10100100001100100110110001000100   [per every group of 4-bits]
          - Split Into Two:   1010010000110010 [L] 0110110001000100 [R]
          - Swap Halves:      01101100010001001010010000110010
          - Bit Inversion:    10010011101110110101101111001101
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     10001001011011111111110001010100

          - FUNCTION OUTPUT:  10001001011011111111110001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100101111110011111111101110

       - FUNCTION OUTPUT:          10001001011011111111110001010100

       - Left XOR FUNCTION OUTPUT: 01101101110100001100001110111010

       - Next Round Left 32 Bits:  00011010100110001101111010101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101110100001100001110111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010100110001101111010101010

       - Right 32 Bits:            01101101110100001100001110111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       01101101110100001100001110111010
          - S-Box Result:     00000110011011110101000110000100   [per every group of 4-bits]
          - Split Into Two:   0000011001101111 [L] 0101000110000100 [R]
          - Swap Halves:      01010001100001000000011001101111
          - Bit Inversion:    10101110011110111111100110010000
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     00110000011110000101100001011100

          - FUNCTION OUTPUT:  00110000011110000101100001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010100110001101111010101010

       - FUNCTION OUTPUT:          00110000011110000101100001011100

       - Left XOR FUNCTION OUTPUT: 00101010111000001000011011110110

       - Next Round Left 32 Bits:  01101101110100001100001110111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010111000001000011011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101110100001100001110111010

       - Right 32 Bits:            00101010111000001000011011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       00101010111000001000011011110110
          - S-Box Result:     11100100110011110010000010110000   [per every group of 4-bits]
          - Split Into Two:   1110010011001111 [L] 0010000010110000 [R]
          - Swap Halves:      00100000101100001110010011001111
          - Bit Inversion:    11011111010011110001101100110000
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     01011101111101101111001001010010

          - FUNCTION OUTPUT:  01011101111101101111001001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101110100001100001110111010

       - FUNCTION OUTPUT:          01011101111101101111001001010010

       - Left XOR FUNCTION OUTPUT: 00110000001001100011000111101000

       - Next Round Left 32 Bits:  00101010111000001000011011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000001001100011000111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010111000001000011011110110

       - Right 32 Bits:            00110000001001100011000111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       00110000001001100011000111101000
          - S-Box Result:     00011111111000000001101011000010   [per every group of 4-bits]
          - Split Into Two:   0001111111100000 [L] 0001101011000010 [R]
          - Swap Halves:      00011010110000100001111111100000
          - Bit Inversion:    11100101001111011110000000011111
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     00001110111101011000100000100000

          - FUNCTION OUTPUT:  00001110111101011000100000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010111000001000011011110110

       - FUNCTION OUTPUT:          00001110111101011000100000100000

       - Left XOR FUNCTION OUTPUT: 00100100000101010000111011010110

       - Next Round Left 32 Bits:  00110000001001100011000111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100000101010000111011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000001001100011000111101000

       - Right 32 Bits:            00100100000101010000111011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       00100100000101010000111011010110
          - S-Box Result:     11100111101010011111110001100000   [per every group of 4-bits]
          - Split Into Two:   1110011110101001 [L] 1111110001100000 [R]
          - Swap Halves:      11111100011000001110011110101001
          - Bit Inversion:    00000011100111110001100001010110
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     00101011111101010010011010000110

          - FUNCTION OUTPUT:  00101011111101010010011010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000001001100011000111101000

       - FUNCTION OUTPUT:          00101011111101010010011010000110

       - Left XOR FUNCTION OUTPUT: 00011011110100110001011101101110

       - Next Round Left 32 Bits:  00100100000101010000111011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011110100110001011101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100000101010000111011010110

       - Right 32 Bits:            00011011110100110001011101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       00011011110100110001011101101110
          - S-Box Result:     10101000011000011010110100001100   [per every group of 4-bits]
          - Split Into Two:   1010100001100001 [L] 1010110100001100 [R]
          - Swap Halves:      10101101000011001010100001100001
          - Bit Inversion:    01010010111100110101011110011110
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     11101000100010011000000110010101

          - FUNCTION OUTPUT:  11101000100010011000000110010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100000101010000111011010110

       - FUNCTION OUTPUT:          11101000100010011000000110010101

       - Left XOR FUNCTION OUTPUT: 11001100100111001000111101000011

       - Next Round Left 32 Bits:  00011011110100110001011101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100100111001000111101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011110100110001011101101110

       - Right 32 Bits:            11001100100111001000111101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       11001100100111001000111101000011
          - S-Box Result:     01010101001101010010101101110001   [per every group of 4-bits]
          - Split Into Two:   0101010100110101 [L] 0010101101110001 [R]
          - Swap Halves:      00101011011100010101010100110101
          - Bit Inversion:    11010100100011101010101011001010
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     00011110110100001010110101110110

          - FUNCTION OUTPUT:  00011110110100001010110101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011110100110001011101101110

       - FUNCTION OUTPUT:          00011110110100001010110101110110

       - Left XOR FUNCTION OUTPUT: 00000101000000111011101000011000

       - Next Round Left 32 Bits:  11001100100111001000111101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101000000111011101000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100100111001000111101000011

       - Right 32 Bits:            00000101000000111011101000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       00000101000000111011101000011000
          - S-Box Result:     11111001111100011000010010100010   [per every group of 4-bits]
          - Split Into Two:   1111100111110001 [L] 1000010010100010 [R]
          - Swap Halves:      10000100101000101111100111110001
          - Bit Inversion:    01111011010111010000011000001110
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     00010101000011111011001110001000

          - FUNCTION OUTPUT:  00010101000011111011001110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100100111001000111101000011

       - FUNCTION OUTPUT:          00010101000011111011001110001000

       - Left XOR FUNCTION OUTPUT: 11011001100100110011110011001011

       - Next Round Left 32 Bits:  00000101000000111011101000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001100100110011110011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101000000111011101000011000

       - Right 32 Bits:            11011001100100110011110011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       11011001100100110011110011001011
          - S-Box Result:     01100011001100010001010101011000   [per every group of 4-bits]
          - Split Into Two:   0110001100110001 [L] 0001010101011000 [R]
          - Swap Halves:      00010101010110000110001100110001
          - Bit Inversion:    11101010101001111001110011001110
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     11011100101110000101100100101101

          - FUNCTION OUTPUT:  11011100101110000101100100101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101000000111011101000011000

       - FUNCTION OUTPUT:          11011100101110000101100100101101

       - Left XOR FUNCTION OUTPUT: 11011001101110111110001100110101

       - Next Round Left 32 Bits:  11011001100100110011110011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001101110111110001100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001100100110011110011001011

       - Right 32 Bits:            11011001101110111110001100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       11011001101110111110001100110101
          - S-Box Result:     01100011100010001100000100011001   [per every group of 4-bits]
          - Split Into Two:   0110001110001000 [L] 1100000100011001 [R]
          - Swap Halves:      11000001000110010110001110001000
          - Bit Inversion:    00111110111001101001110001110111
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     11101001001100101111110100011110

          - FUNCTION OUTPUT:  11101001001100101111110100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001100100110011110011001011

       - FUNCTION OUTPUT:          11101001001100101111110100011110

       - Left XOR FUNCTION OUTPUT: 00110000101000011100000111010101

       - Next Round Left 32 Bits:  11011001101110111110001100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000101000011100000111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001101110111110001100110101

       - Right 32 Bits:            00110000101000011100000111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       00110000101000011100000111010101
          - S-Box Result:     00011111010010100101101001101001   [per every group of 4-bits]
          - Split Into Two:   0001111101001010 [L] 0101101001101001 [R]
          - Swap Halves:      01011010011010010001111101001010
          - Bit Inversion:    10100101100101101110000010110101
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     10100100110101011001100111001001

          - FUNCTION OUTPUT:  10100100110101011001100111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001101110111110001100110101

       - FUNCTION OUTPUT:          10100100110101011001100111001001

       - Left XOR FUNCTION OUTPUT: 01111101011011100111101011111100

       - Next Round Left 32 Bits:  00110000101000011100000111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101011011100111101011111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000101000011100000111010101

       - Right 32 Bits:            01111101011011100111101011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       01111101011011100111101011111100
          - S-Box Result:     11010110000011001101010010110101   [per every group of 4-bits]
          - Split Into Two:   1101011000001100 [L] 1101010010110101 [R]
          - Swap Halves:      11010100101101011101011000001100
          - Bit Inversion:    00101011010010100010100111110011
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     11010110001100110111010111100001

          - FUNCTION OUTPUT:  11010110001100110111010111100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000101000011100000111010101

       - FUNCTION OUTPUT:          11010110001100110111010111100001

       - Left XOR FUNCTION OUTPUT: 11100110100100101011010000110100

       - Next Round Left 32 Bits:  01111101011011100111101011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110100100101011010000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110011010010010101101000011010001111101011011100111101011111100

 > Processed Block:     1110011010010010101101000011010001111101011011100111101011111100


Ciphertext Block 7: 0000100000100110110101101111110001100011011111110010000010010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000001001101101011011111100

       - Right 32 Bits:            01100011011111110010000010010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       01100011011111110010000010010001
          - S-Box Result:     00000001110110111110111100111010   [per every group of 4-bits]
          - Split Into Two:   0000000111011011 [L] 1110111100111010 [R]
          - Swap Halves:      11101111001110100000000111011011
          - Bit Inversion:    00010000110001011111111000100100
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     01010011101111001000001000100101

          - FUNCTION OUTPUT:  01010011101111001000001000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000001001101101011011111100

       - FUNCTION OUTPUT:          01010011101111001000001000100101

       - Left XOR FUNCTION OUTPUT: 01011011100110100101010011011001

       - Next Round Left 32 Bits:  01100011011111110010000010010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011100110100101010011011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011011111110010000010010001

       - Right 32 Bits:            01011011100110100101010011011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       01011011100110100101010011011001
          - S-Box Result:     10011000001101001001011101100011   [per every group of 4-bits]
          - Split Into Two:   1001100000110100 [L] 1001011101100011 [R]
          - Swap Halves:      10010111011000111001100000110100
          - Bit Inversion:    01101000100111000110011111001011
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     00010001110000000111010100110110

          - FUNCTION OUTPUT:  00010001110000000111010100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011011111110010000010010001

       - FUNCTION OUTPUT:          00010001110000000111010100110110

       - Left XOR FUNCTION OUTPUT: 01110010101111110101010110100111

       - Next Round Left 32 Bits:  01011011100110100101010011011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010101111110101010110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011100110100101010011011001

       - Right 32 Bits:            01110010101111110101010110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       01110010101111110101010110100111
          - S-Box Result:     11011110100010111001100101001101   [per every group of 4-bits]
          - Split Into Two:   1101111010001011 [L] 1001100101001101 [R]
          - Swap Halves:      10011001010011011101111010001011
          - Bit Inversion:    01100110101100100010000101110100
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     00111110111000001011111000110000

          - FUNCTION OUTPUT:  00111110111000001011111000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011100110100101010011011001

       - FUNCTION OUTPUT:          00111110111000001011111000110000

       - Left XOR FUNCTION OUTPUT: 01100101011110101110101011101001

       - Next Round Left 32 Bits:  01110010101111110101010110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101011110101110101011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010101111110101010110100111

       - Right 32 Bits:            01100101011110101110101011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       01100101011110101110101011101001
          - S-Box Result:     00001001110101001100010011000011   [per every group of 4-bits]
          - Split Into Two:   0000100111010100 [L] 1100010011000011 [R]
          - Swap Halves:      11000100110000110000100111010100
          - Bit Inversion:    00111011001111001111011000101011
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     01100001001000110111001000011000

          - FUNCTION OUTPUT:  01100001001000110111001000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010101111110101010110100111

       - FUNCTION OUTPUT:          01100001001000110111001000011000

       - Left XOR FUNCTION OUTPUT: 00010011100111000010011110111111

       - Next Round Left 32 Bits:  01100101011110101110101011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100111000010011110111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101011110101110101011101001

       - Right 32 Bits:            00010011100111000010011110111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       00010011100111000010011110111111
          - S-Box Result:     10100001001101011110110110001011   [per every group of 4-bits]
          - Split Into Two:   1010000100110101 [L] 1110110110001011 [R]
          - Swap Halves:      11101101100010111010000100110101
          - Bit Inversion:    00010010011101000101111011001010
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     00001000101000001111100101010011

          - FUNCTION OUTPUT:  00001000101000001111100101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101011110101110101011101001

       - FUNCTION OUTPUT:          00001000101000001111100101010011

       - Left XOR FUNCTION OUTPUT: 01101101110110100001001110111010

       - Next Round Left 32 Bits:  00010011100111000010011110111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101110110100001001110111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011100111000010011110111111

       - Right 32 Bits:            01101101110110100001001110111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       01101101110110100001001110111010
          - S-Box Result:     00000110011001001010000110000100   [per every group of 4-bits]
          - Split Into Two:   0000011001100100 [L] 1010000110000100 [R]
          - Swap Halves:      10100001100001000000011001100100
          - Bit Inversion:    01011110011110111111100110011011
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     11000000011110000101100001010111

          - FUNCTION OUTPUT:  11000000011110000101100001010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011100111000010011110111111

       - FUNCTION OUTPUT:          11000000011110000101100001010111

       - Left XOR FUNCTION OUTPUT: 11010011111001000111111111101000

       - Next Round Left 32 Bits:  01101101110110100001001110111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011111001000111111111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101110110100001001110111010

       - Right 32 Bits:            11010011111001000111111111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       11010011111001000111111111101000
          - S-Box Result:     01100001110001111101101111000010   [per every group of 4-bits]
          - Split Into Two:   0110000111000111 [L] 1101101111000010 [R]
          - Swap Halves:      11011011110000100110000111000111
          - Bit Inversion:    00100100001111011001111000111000
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     10100110100001000111011101011010

          - FUNCTION OUTPUT:  10100110100001000111011101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101110110100001001110111010

       - FUNCTION OUTPUT:          10100110100001000111011101011010

       - Left XOR FUNCTION OUTPUT: 11001011010111100110010011100000

       - Next Round Left 32 Bits:  11010011111001000111111111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011010111100110010011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011111001000111111111101000

       - Right 32 Bits:            11001011010111100110010011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       11001011010111100110010011100000
          - S-Box Result:     01011000100111000000011111001111   [per every group of 4-bits]
          - Split Into Two:   0101100010011100 [L] 0000011111001111 [R]
          - Swap Halves:      00000111110011110101100010011100
          - Bit Inversion:    11111000001100001010011101100011
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     00010011111110001100111101011100

          - FUNCTION OUTPUT:  00010011111110001100111101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011111001000111111111101000

       - FUNCTION OUTPUT:          00010011111110001100111101011100

       - Left XOR FUNCTION OUTPUT: 11000000000111001011000010110100

       - Next Round Left 32 Bits:  11001011010111100110010011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000000111001011000010110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011010111100110010011100000

       - Right 32 Bits:            11000000000111001011000010110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       11000000000111001011000010110100
          - S-Box Result:     01011111101001011000111110000111   [per every group of 4-bits]
          - Split Into Two:   0101111110100101 [L] 1000111110000111 [R]
          - Swap Halves:      10001111100001110101111110100101
          - Bit Inversion:    01110000011110001010000001011010
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     01011000000100101001111010001010

          - FUNCTION OUTPUT:  01011000000100101001111010001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011010111100110010011100000

       - FUNCTION OUTPUT:          01011000000100101001111010001010

       - Left XOR FUNCTION OUTPUT: 10010011010011001111101001101010

       - Next Round Left 32 Bits:  11000000000111001011000010110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011010011001111101001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000000111001011000010110100

       - Right 32 Bits:            10010011010011001111101001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       10010011010011001111101001101010
          - S-Box Result:     00110001011101011011010000000100   [per every group of 4-bits]
          - Split Into Two:   0011000101110101 [L] 1011010000000100 [R]
          - Swap Halves:      10110100000001000011000101110101
          - Bit Inversion:    01001011111110111100111010001010
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     11110001100000010001100010000001

          - FUNCTION OUTPUT:  11110001100000010001100010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000000111001011000010110100

       - FUNCTION OUTPUT:          11110001100000010001100010000001

       - Left XOR FUNCTION OUTPUT: 00110001100111011010100000110101

       - Next Round Left 32 Bits:  10010011010011001111101001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001100111011010100000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011010011001111101001101010

       - Right 32 Bits:            00110001100111011010100000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       00110001100111011010100000110101
          - S-Box Result:     00011010001101100100001000011001   [per every group of 4-bits]
          - Split Into Two:   0001101000110110 [L] 0100001000011001 [R]
          - Swap Halves:      01000010000110010001101000110110
          - Bit Inversion:    10111101111001101110010111001001
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     01110111101110001110001001110101

          - FUNCTION OUTPUT:  01110111101110001110001001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011010011001111101001101010

       - FUNCTION OUTPUT:          01110111101110001110001001110101

       - Left XOR FUNCTION OUTPUT: 11100100111101000001100000011111

       - Next Round Left 32 Bits:  00110001100111011010100000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100111101000001100000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001100111011010100000110101

       - Right 32 Bits:            11100100111101000001100000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       11100100111101000001100000011111
          - S-Box Result:     11000111101101111010001010101011   [per every group of 4-bits]
          - Split Into Two:   1100011110110111 [L] 1010001010101011 [R]
          - Swap Halves:      10100010101010111100011110110111
          - Bit Inversion:    01011101010101000011100001001000
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     00110011000001101000110111001110

          - FUNCTION OUTPUT:  00110011000001101000110111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001100111011010100000110101

       - FUNCTION OUTPUT:          00110011000001101000110111001110

       - Left XOR FUNCTION OUTPUT: 00000010100110110010010111111011

       - Next Round Left 32 Bits:  11100100111101000001100000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010100110110010010111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100111101000001100000011111

       - Right 32 Bits:            00000010100110110010010111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       00000010100110110010010111111011
          - S-Box Result:     11111110001110001110100110111000   [per every group of 4-bits]
          - Split Into Two:   1111111000111000 [L] 1110100110111000 [R]
          - Swap Halves:      11101001101110001111111000111000
          - Bit Inversion:    00010110010001110000000111000111
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     00100000010110001100010000100100

          - FUNCTION OUTPUT:  00100000010110001100010000100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100111101000001100000011111

       - FUNCTION OUTPUT:          00100000010110001100010000100100

       - Left XOR FUNCTION OUTPUT: 11000100101011001101110000111011

       - Next Round Left 32 Bits:  00000010100110110010010111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100101011001101110000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010100110110010010111111011

       - Right 32 Bits:            11000100101011001101110000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       11000100101011001101110000111011
          - S-Box Result:     01010111010001010110010100011000   [per every group of 4-bits]
          - Split Into Two:   0101011101000101 [L] 0110010100011000 [R]
          - Swap Halves:      01100101000110000101011101000101
          - Bit Inversion:    10011010111001111010100010111010
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     01001101001100111100100111010011

          - FUNCTION OUTPUT:  01001101001100111100100111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010100110110010010111111011

       - FUNCTION OUTPUT:          01001101001100111100100111010011

       - Left XOR FUNCTION OUTPUT: 01001111101010001110110000101000

       - Next Round Left 32 Bits:  11000100101011001101110000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111101010001110110000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100101011001101110000111011

       - Right 32 Bits:            01001111101010001110110000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       01001111101010001110110000101000
          - S-Box Result:     01111011010000101100010111100010   [per every group of 4-bits]
          - Split Into Two:   0111101101000010 [L] 1100010111100010 [R]
          - Swap Halves:      11000101111000100111101101000010
          - Bit Inversion:    00111010000111011000010010111101
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     00111011010111101111110111000001

          - FUNCTION OUTPUT:  00111011010111101111110111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100101011001101110000111011

       - FUNCTION OUTPUT:          00111011010111101111110111000001

       - Left XOR FUNCTION OUTPUT: 11111111111100100010000111111010

       - Next Round Left 32 Bits:  01001111101010001110110000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111111100100010000111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111101010001110110000101000

       - Right 32 Bits:            11111111111100100010000111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       11111111111100100010000111111010
          - S-Box Result:     10111011101111101110101010110100   [per every group of 4-bits]
          - Split Into Two:   1011101110111110 [L] 1110101010110100 [R]
          - Swap Halves:      11101010101101001011101110111110
          - Bit Inversion:    00010101010010110100010001000001
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     11101000001100100001100001010011

          - FUNCTION OUTPUT:  11101000001100100001100001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111101010001110110000101000

       - FUNCTION OUTPUT:          11101000001100100001100001010011

       - Left XOR FUNCTION OUTPUT: 10100111100110101111010001111011

       - Next Round Left 32 Bits:  11111111111100100010000111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111100110101111010001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010011110011010111101000111101111111111111100100010000111111010

 > Processed Block:     1010011110011010111101000111101111111111111100100010000111111010


Ciphertext Block 8: 0101111010110110101100000111001011110101001111001111111000010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110101101101011000001110010

       - Right 32 Bits:            11110101001111001111111000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       11110101001111001111111000010110
          - S-Box Result:     10111001000101011011110010100000   [per every group of 4-bits]
          - Split Into Two:   1011100100010101 [L] 1011110010100000 [R]
          - Swap Halves:      10111100101000001011100100010101
          - Bit Inversion:    01000011010111110100011011101010
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     00000000001001100011101011101011

          - FUNCTION OUTPUT:  00000000001001100011101011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110101101101011000001110010

       - FUNCTION OUTPUT:          00000000001001100011101011101011

       - Left XOR FUNCTION OUTPUT: 01011110100100001000101010011001

       - Next Round Left 32 Bits:  11110101001111001111111000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100100001000101010011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101001111001111111000010110

       - Right 32 Bits:            01011110100100001000101010011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       01011110100100001000101010011001
          - S-Box Result:     10011100001111110010010000110011   [per every group of 4-bits]
          - Split Into Two:   1001110000111111 [L] 0010010000110011 [R]
          - Swap Halves:      00100100001100111001110000111111
          - Bit Inversion:    11011011110011000110001111000000
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     10100010100100000111000100111101

          - FUNCTION OUTPUT:  10100010100100000111000100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101001111001111111000010110

       - FUNCTION OUTPUT:          10100010100100000111000100111101

       - Left XOR FUNCTION OUTPUT: 01010111101011001000111100101011

       - Next Round Left 32 Bits:  01011110100100001000101010011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111101011001000111100101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100100001000101010011001

       - Right 32 Bits:            01010111101011001000111100101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       01010111101011001000111100101011
          - S-Box Result:     10011101010001010010101111101000   [per every group of 4-bits]
          - Split Into Two:   1001110101000101 [L] 0010101111101000 [R]
          - Swap Halves:      00101011111010001001110101000101
          - Bit Inversion:    11010100000101110110001010111010
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     10001100010001011111110111111110

          - FUNCTION OUTPUT:  10001100010001011111110111111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100100001000101010011001

       - FUNCTION OUTPUT:          10001100010001011111110111111110

       - Left XOR FUNCTION OUTPUT: 11010010110101010111011101100111

       - Next Round Left 32 Bits:  01010111101011001000111100101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010110101010111011101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111101011001000111100101011

       - Right 32 Bits:            11010010110101010111011101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       11010010110101010111011101100111
          - S-Box Result:     01101110011010011101110100001101   [per every group of 4-bits]
          - Split Into Two:   0110111001101001 [L] 1101110100001101 [R]
          - Swap Halves:      11011101000011010110111001101001
          - Bit Inversion:    00100010111100101001000110010110
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     01111000111011010001010110100101

          - FUNCTION OUTPUT:  01111000111011010001010110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111101011001000111100101011

       - FUNCTION OUTPUT:          01111000111011010001010110100101

       - Left XOR FUNCTION OUTPUT: 00101111010000011001101010001110

       - Next Round Left 32 Bits:  11010010110101010111011101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111010000011001101010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010110101010111011101100111

       - Right 32 Bits:            00101111010000011001101010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       00101111010000011001101010001110
          - S-Box Result:     11101011011110100011010000101100   [per every group of 4-bits]
          - Split Into Two:   1110101101111010 [L] 0011010000101100 [R]
          - Swap Halves:      00110100001011001110101101111010
          - Bit Inversion:    11001011110100110001010010000101
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     11010001000001111011001100011100

          - FUNCTION OUTPUT:  11010001000001111011001100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010110101010111011101100111

       - FUNCTION OUTPUT:          11010001000001111011001100011100

       - Left XOR FUNCTION OUTPUT: 00000011110100101100010001111011

       - Next Round Left 32 Bits:  00101111010000011001101010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011110100101100010001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111010000011001101010001110

       - Right 32 Bits:            00000011110100101100010001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       00000011110100101100010001111011
          - S-Box Result:     11110001011011100101011111011000   [per every group of 4-bits]
          - Split Into Two:   1111000101101110 [L] 0101011111011000 [R]
          - Swap Halves:      01010111110110001111000101101110
          - Bit Inversion:    10101000001001110000111010010001
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     00110110001001001010111101011101

          - FUNCTION OUTPUT:  00110110001001001010111101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111010000011001101010001110

       - FUNCTION OUTPUT:          00110110001001001010111101011101

       - Left XOR FUNCTION OUTPUT: 00011001011001010011010111010011

       - Next Round Left 32 Bits:  00000011110100101100010001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001011001010011010111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011110100101100010001111011

       - Right 32 Bits:            00011001011001010011010111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       00011001011001010011010111010011
          - S-Box Result:     10100011000010010001100101100001   [per every group of 4-bits]
          - Split Into Two:   1010001100001001 [L] 0001100101100001 [R]
          - Swap Halves:      00011001011000011010001100001001
          - Bit Inversion:    11100110100111100101110011110110
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     01100100001001111011010110010100

          - FUNCTION OUTPUT:  01100100001001111011010110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011110100101100010001111011

       - FUNCTION OUTPUT:          01100100001001111011010110010100

       - Left XOR FUNCTION OUTPUT: 01100111111101010111000111101111

       - Next Round Left 32 Bits:  00011001011001010011010111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111111101010111000111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001011001010011010111010011

       - Right 32 Bits:            01100111111101010111000111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       01100111111101010111000111101111
          - S-Box Result:     00001101101110011101101011001011   [per every group of 4-bits]
          - Split Into Two:   0000110110111001 [L] 1101101011001011 [R]
          - Swap Halves:      11011010110010110000110110111001
          - Bit Inversion:    00100101001101001111001001000110
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     11001110111111001001101001111001

          - FUNCTION OUTPUT:  11001110111111001001101001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001011001010011010111010011

       - FUNCTION OUTPUT:          11001110111111001001101001111001

       - Left XOR FUNCTION OUTPUT: 11010111100110011010111110101010

       - Next Round Left 32 Bits:  01100111111101010111000111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111100110011010111110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111111101010111000111101111

       - Right 32 Bits:            11010111100110011010111110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       11010111100110011010111110101010
          - S-Box Result:     01101101001100110100101101000100   [per every group of 4-bits]
          - Split Into Two:   0110110100110011 [L] 0100101101000100 [R]
          - Swap Halves:      01001011010001000110110100110011
          - Bit Inversion:    10110100101110111001001011001100
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     10011100110100011010110000011100

          - FUNCTION OUTPUT:  10011100110100011010110000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111111101010111000111101111

       - FUNCTION OUTPUT:          10011100110100011010110000011100

       - Left XOR FUNCTION OUTPUT: 11111011001001001101110111110011

       - Next Round Left 32 Bits:  11010111100110011010111110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011001001001101110111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111100110011010111110101010

       - Right 32 Bits:            11111011001001001101110111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       11111011001001001101110111110011
          - S-Box Result:     10111000111001110110011010110001   [per every group of 4-bits]
          - Split Into Two:   1011100011100111 [L] 0110011010110001 [R]
          - Swap Halves:      01100110101100011011100011100111
          - Bit Inversion:    10011001010011100100011100011000
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     00100011001101001001000100010011

          - FUNCTION OUTPUT:  00100011001101001001000100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111100110011010111110101010

       - FUNCTION OUTPUT:          00100011001101001001000100010011

       - Left XOR FUNCTION OUTPUT: 11110100101011010011111010111001

       - Next Round Left 32 Bits:  11111011001001001101110111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100101011010011111010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011001001001101110111110011

       - Right 32 Bits:            11110100101011010011111010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       11110100101011010011111010111001
          - S-Box Result:     10110111010001100001110010000011   [per every group of 4-bits]
          - Split Into Two:   1011011101000110 [L] 0001110010000011 [R]
          - Swap Halves:      00011100100000111011011101000110
          - Bit Inversion:    11100011011111000100100010111001
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     00101001001000100100111100000101

          - FUNCTION OUTPUT:  00101001001000100100111100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011001001001101110111110011

       - FUNCTION OUTPUT:          00101001001000100100111100000101

       - Left XOR FUNCTION OUTPUT: 11010010000001101001001011110110

       - Next Round Left 32 Bits:  11110100101011010011111010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010000001101001001011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100101011010011111010111001

       - Right 32 Bits:            11010010000001101001001011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       11010010000001101001001011110110
          - S-Box Result:     01101110111100000011111010110000   [per every group of 4-bits]
          - Split Into Two:   0110111011110000 [L] 0011111010110000 [R]
          - Swap Halves:      00111110101100000110111011110000
          - Bit Inversion:    11000001010011111001000100001111
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     10101111000111010010010010001001

          - FUNCTION OUTPUT:  10101111000111010010010010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100101011010011111010111001

       - FUNCTION OUTPUT:          10101111000111010010010010001001

       - Left XOR FUNCTION OUTPUT: 01011011101100000001101000110000

       - Next Round Left 32 Bits:  11010010000001101001001011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011101100000001101000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010000001101001001011110110

       - Right 32 Bits:            01011011101100000001101000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       01011011101100000001101000110000
          - S-Box Result:     10011000100011111010010000011111   [per every group of 4-bits]
          - Split Into Two:   1001100010001111 [L] 1010010000011111 [R]
          - Swap Halves:      10100100000111111001100010001111
          - Bit Inversion:    01011011111000000110011101110000
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     01101101111111111010001010010011

          - FUNCTION OUTPUT:  01101101111111111010001010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010000001101001001011110110

       - FUNCTION OUTPUT:          01101101111111111010001010010011

       - Left XOR FUNCTION OUTPUT: 10111111111110010011000001100101

       - Next Round Left 32 Bits:  01011011101100000001101000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111111110010011000001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011101100000001101000110000

       - Right 32 Bits:            10111111111110010011000001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       10111111111110010011000001100101
          - S-Box Result:     10001011101100110001111100001001   [per every group of 4-bits]
          - Split Into Two:   1000101110110011 [L] 0001111100001001 [R]
          - Swap Halves:      00011111000010011000101110110011
          - Bit Inversion:    11100000111101100111010001001100
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     00110111001000100001010100100101

          - FUNCTION OUTPUT:  00110111001000100001010100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011101100000001101000110000

       - FUNCTION OUTPUT:          00110111001000100001010100100101

       - Left XOR FUNCTION OUTPUT: 01101100100100100000111100010101

       - Next Round Left 32 Bits:  10111111111110010011000001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100100100100000111100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111111110010011000001100101

       - Right 32 Bits:            01101100100100100000111100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       01101100100100100000111100010101
          - S-Box Result:     00000101001111101111101110101001   [per every group of 4-bits]
          - Split Into Two:   0000010100111110 [L] 1111101110101001 [R]
          - Swap Halves:      11111011101010010000010100111110
          - Bit Inversion:    00000100010101101111101011000001
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     00000101000101011000001110111101

          - FUNCTION OUTPUT:  00000101000101011000001110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111111110010011000001100101

       - FUNCTION OUTPUT:          00000101000101011000001110111101

       - Left XOR FUNCTION OUTPUT: 10111010111011001011001111011000

       - Next Round Left 32 Bits:  01101100100100100000111100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010111011001011001111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100100100100000111100010101

       - Right 32 Bits:            10111010111011001011001111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       10111010111011001011001111011000
          - S-Box Result:     10000100110001011000000101100010   [per every group of 4-bits]
          - Split Into Two:   1000010011000101 [L] 1000000101100010 [R]
          - Swap Halves:      10000001011000101000010011000101
          - Bit Inversion:    01111110100111010111101100111010
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     10000011111001000010011100101000

          - FUNCTION OUTPUT:  10000011111001000010011100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100100100100000111100010101

       - FUNCTION OUTPUT:          10000011111001000010011100101000

       - Left XOR FUNCTION OUTPUT: 11101111011101100010100000111101

       - Next Round Left 32 Bits:  10111010111011001011001111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111011101100010100000111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110111101110110001010000011110110111010111011001011001111011000

 > Processed Block:     1110111101110110001010000011110110111010111011001011001111011000


Ciphertext Block 9: 0110010111111001111101010100110001010100000011111100010000101110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101111110011111010101001100

       - Right 32 Bits:            01010100000011111100010000101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011110101100001101011011011110011000001100010   [Subkey: 16]
          - Input Half:       01010100000011111100010000101110
          - S-Box Result:     10010111111110110101011111101100   [per every group of 4-bits]
          - Split Into Two:   1001011111111011 [L] 0101011111101100 [R]
          - Swap Halves:      01010111111011001001011111111011
          - Bit Inversion:    10101000000100110110100000000100
          - Compressed Key:   01000011011110010111110000000001   [done by compression P-Box]
          - XOR with Key:     11101011011010100001010000000101

          - FUNCTION OUTPUT:  11101011011010100001010000000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101111110011111010101001100

       - FUNCTION OUTPUT:          11101011011010100001010000000101

       - Left XOR FUNCTION OUTPUT: 10001110100100111110000101001001

       - Next Round Left 32 Bits:  01010100000011111100010000101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110100100111110000101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100000011111100010000101110

       - Right 32 Bits:            10001110100100111110000101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111010110000101001111001010010010000110011111001110   [Subkey: 15]
          - Input Half:       10001110100100111110000101001001
          - S-Box Result:     00101100001100011100101001110011   [per every group of 4-bits]
          - Split Into Two:   0010110000110001 [L] 1100101001110011 [R]
          - Swap Halves:      11001010011100110010110000110001
          - Bit Inversion:    00110101100011001101001111001110
          - Compressed Key:   01111001010111000001001011111101   [done by compression P-Box]
          - XOR with Key:     01001100110100001100000100110011

          - FUNCTION OUTPUT:  01001100110100001100000100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100000011111100010000101110

       - FUNCTION OUTPUT:          01001100110100001100000100110011

       - Left XOR FUNCTION OUTPUT: 00011000110111110000010100011101

       - Next Round Left 32 Bits:  10001110100100111110000101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000110111110000010100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110100100111110000101001001

       - Right 32 Bits:            00011000110111110000010100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010100111101011000011010110110111100110000011000   [Subkey: 14]
          - Input Half:       00011000110111110000010100011101
          - S-Box Result:     10100010011010111111100110100110   [per every group of 4-bits]
          - Split Into Two:   1010001001101011 [L] 1111100110100110 [R]
          - Swap Halves:      11111001101001101010001001101011
          - Bit Inversion:    00000110010110010101110110010100
          - Compressed Key:   01011000010100101001111101000100   [done by compression P-Box]
          - XOR with Key:     01011110000010111100001011010000

          - FUNCTION OUTPUT:  01011110000010111100001011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110100100111110000101001001

       - FUNCTION OUTPUT:          01011110000010111100001011010000

       - Left XOR FUNCTION OUTPUT: 11010000100110000010001110011001

       - Next Round Left 32 Bits:  00011000110111110000010100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000100110000010001110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000110111110000010100011101

       - Right 32 Bits:            11010000100110000010001110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101110101100001010011110010100100100001100111110011   [Subkey: 13]
          - Input Half:       11010000100110000010001110011001
          - S-Box Result:     01101111001100101110000100110011   [per every group of 4-bits]
          - Split Into Two:   0110111100110010 [L] 1110000100110011 [R]
          - Swap Halves:      11100001001100110110111100110010
          - Bit Inversion:    00011110110011001001000011001101
          - Compressed Key:   01011010000111111000010000110011   [done by compression P-Box]
          - XOR with Key:     01000100110100110001010011111110

          - FUNCTION OUTPUT:  01000100110100110001010011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000110111110000010100011101

       - FUNCTION OUTPUT:          01000100110100110001010011111110

       - Left XOR FUNCTION OUTPUT: 01011100000011000001000111100011

       - Next Round Left 32 Bits:  11010000100110000010001110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100000011000001000111100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000100110000010001110011001

       - Right 32 Bits:            01011100000011000001000111100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101000101001111010110000110101101101111001100000110   [Subkey: 12]
          - Input Half:       01011100000011000001000111100011
          - S-Box Result:     10010101111101011010101011000001   [per every group of 4-bits]
          - Split Into Two:   1001010111110101 [L] 1010101011000001 [R]
          - Swap Halves:      10101010110000011001010111110101
          - Bit Inversion:    01010101001111100110101000001010
          - Compressed Key:   00011010110101001010011110011001   [done by compression P-Box]
          - XOR with Key:     01001111111010101100110110010011

          - FUNCTION OUTPUT:  01001111111010101100110110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000100110000010001110011001

       - FUNCTION OUTPUT:          01001111111010101100110110010011

       - Left XOR FUNCTION OUTPUT: 10011111011100101110111000001010

       - Next Round Left 32 Bits:  01011100000011000001000111100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111011100101110111000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100000011000001000111100011

       - Right 32 Bits:            10011111011100101110111000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101101011101011000010100111100101001001000011001111100   [Subkey: 11]
          - Input Half:       10011111011100101110111000001010
          - S-Box Result:     00111011110111101100110011110100   [per every group of 4-bits]
          - Split Into Two:   0011101111011110 [L] 1100110011110100 [R]
          - Swap Halves:      11001100111101000011101111011110
          - Bit Inversion:    00110011000010111100010000100001
          - Compressed Key:   10011110000000111010000111001100   [done by compression P-Box]
          - XOR with Key:     10101101000010000110010111101101

          - FUNCTION OUTPUT:  10101101000010000110010111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100000011000001000111100011

       - FUNCTION OUTPUT:          10101101000010000110010111101101

       - Left XOR FUNCTION OUTPUT: 11110001000001000111010000001110

       - Next Round Left 32 Bits:  10011111011100101110111000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001000001000111010000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111011100101110111000001010

       - Right 32 Bits:            11110001000001000111010000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001010001010011110101100001101011011011110011000001   [Subkey: 10]
          - Input Half:       11110001000001000111010000001110
          - S-Box Result:     10111010111101111101011111111100   [per every group of 4-bits]
          - Split Into Two:   1011101011110111 [L] 1101011111111100 [R]
          - Swap Halves:      11010111111111001011101011110111
          - Bit Inversion:    00101000000000110100010100001000
          - Compressed Key:   10000010101110011110100101100010   [done by compression P-Box]
          - XOR with Key:     10101010101110101010110001101010

          - FUNCTION OUTPUT:  10101010101110101010110001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111011100101110111000001010

       - FUNCTION OUTPUT:          10101010101110101010110001101010

       - Left XOR FUNCTION OUTPUT: 00110101110010000100001001100000

       - Next Round Left 32 Bits:  11110001000001000111010000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101110010000100001001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110001000001000111010000001110

       - Right 32 Bits:            00110101110010000100001001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111011010111010110000101001111001010010010000110011111   [Subkey: 9]
          - Input Half:       00110101110010000100001001100000
          - S-Box Result:     00011001010100100111111000001111   [per every group of 4-bits]
          - Split Into Two:   0001100101010010 [L] 0111111000001111 [R]
          - Swap Halves:      01111110000011110001100101010010
          - Bit Inversion:    10000001111100001110011010101101
          - Compressed Key:   11101011110010000110100000111111   [done by compression P-Box]
          - XOR with Key:     01101010001110001000111010010010

          - FUNCTION OUTPUT:  01101010001110001000111010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110001000001000111010000001110

       - FUNCTION OUTPUT:          01101010001110001000111010010010

       - Left XOR FUNCTION OUTPUT: 10011011001111001111101010011100

       - Next Round Left 32 Bits:  00110101110010000100001001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011001111001111101010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101110010000100001001100000

       - Right 32 Bits:            10011011001111001111101010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010100010100111101011000011010110110111100110000   [Subkey: 8]
          - Input Half:       10011011001111001111101010011100
          - S-Box Result:     00111000000101011011010000110101   [per every group of 4-bits]
          - Split Into Two:   0011100000010101 [L] 1011010000110101 [R]
          - Swap Halves:      10110100001101010011100000010101
          - Bit Inversion:    01001011110010101100011111101010
          - Compressed Key:   00101000011010100011111011010000   [done by compression P-Box]
          - XOR with Key:     01100011101000001111100100111010

          - FUNCTION OUTPUT:  01100011101000001111100100111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101110010000100001001100000

       - FUNCTION OUTPUT:          01100011101000001111100100111010

       - Left XOR FUNCTION OUTPUT: 01010110011010001011101101011010

       - Next Round Left 32 Bits:  10011011001111001111101010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110011010001011101101011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011001111001111101010011100

       - Right 32 Bits:            01010110011010001011101101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110101110101100001010011110010100100100001100111   [Subkey: 7]
          - Input Half:       01010110011010001011101101011010
          - S-Box Result:     10010000000000101000100010010100   [per every group of 4-bits]
          - Split Into Two:   1001000000000010 [L] 1000100010010100 [R]
          - Swap Halves:      10001000100101001001000000000010
          - Bit Inversion:    01110111011010110110111111111101
          - Compressed Key:   10111010011110101101011000001011   [done by compression P-Box]
          - XOR with Key:     11001101000100011011100111110110

          - FUNCTION OUTPUT:  11001101000100011011100111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011001111001111101010011100

       - FUNCTION OUTPUT:          11001101000100011011100111110110

       - Left XOR FUNCTION OUTPUT: 01010110001011010100001101101010

       - Next Round Left 32 Bits:  01010110011010001011101101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110001011010100001101101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110011010001011101101011010

       - Right 32 Bits:            01010110001011010100001101101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011000100101000101001111010110000110101101101111001100   [Subkey: 6]
          - Input Half:       01010110001011010100001101101010
          - S-Box Result:     10010000111001100111000100000100   [per every group of 4-bits]
          - Split Into Two:   1001000011100110 [L] 0111000100000100 [R]
          - Swap Halves:      01110001000001001001000011100110
          - Bit Inversion:    10001110111110110110111100011001
          - Compressed Key:   11001010010111100000011110111100   [done by compression P-Box]
          - XOR with Key:     01000100101001010110100010100101

          - FUNCTION OUTPUT:  01000100101001010110100010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110011010001011101101011010

       - FUNCTION OUTPUT:          01000100101001010110100010100101

       - Left XOR FUNCTION OUTPUT: 00010010110011011101001111111111

       - Next Round Left 32 Bits:  01010110001011010100001101101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010110011011101001111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110001011010100001101101010

       - Right 32 Bits:            00010010110011011101001111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110011101101011101011000010100111100101001001000011001   [Subkey: 5]
          - Input Half:       00010010110011011101001111111111
          - S-Box Result:     10101110010101100110000110111011   [per every group of 4-bits]
          - Split Into Two:   1010111001010110 [L] 0110000110111011 [R]
          - Swap Halves:      01100001101110111010111001010110
          - Bit Inversion:    10011110010001000101000110101001
          - Compressed Key:   01101110010100101011010110000110   [done by compression P-Box]
          - XOR with Key:     11110000000101101110010000101111

          - FUNCTION OUTPUT:  11110000000101101110010000101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110001011010100001101101010

       - FUNCTION OUTPUT:          11110000000101101110010000101111

       - Left XOR FUNCTION OUTPUT: 10100110001110111010011101000101

       - Next Round Left 32 Bits:  00010010110011011101001111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110001110111010011101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010110011011101001111111111

       - Right 32 Bits:            10100110001110111010011101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001001010001010011110101100001101011011011110011   [Subkey: 4]
          - Input Half:       10100110001110111010011101000101
          - S-Box Result:     01000000000110000100110101111001   [per every group of 4-bits]
          - Split Into Two:   0100000000011000 [L] 0100110101111001 [R]
          - Swap Halves:      01001101011110010100000000011000
          - Bit Inversion:    10110010100001101011111111100111
          - Compressed Key:   00110110000111111100010111100011   [done by compression P-Box]
          - XOR with Key:     10000100100110010111101000000100

          - FUNCTION OUTPUT:  10000100100110010111101000000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010110011011101001111111111

       - FUNCTION OUTPUT:          10000100100110010111101000000100

       - Left XOR FUNCTION OUTPUT: 10010110010101001010100111111011

       - Next Round Left 32 Bits:  10100110001110111010011101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110010101001010100111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110001110111010011101000101

       - Right 32 Bits:            10010110010101001010100111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100111011010111010110000101001111001010010010000110   [Subkey: 3]
          - Input Half:       10010110010101001010100111111011
          - S-Box Result:     00110000100101110100001110111000   [per every group of 4-bits]
          - Split Into Two:   0011000010010111 [L] 0100001110111000 [R]
          - Swap Halves:      01000011101110000011000010010111
          - Bit Inversion:    10111100010001111100111101101000
          - Compressed Key:   11010111110101000110000101101001   [done by compression P-Box]
          - XOR with Key:     01101011100100111010111000000001

          - FUNCTION OUTPUT:  01101011100100111010111000000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110001110111010011101000101

       - FUNCTION OUTPUT:          01101011100100111010111000000001

       - Left XOR FUNCTION OUTPUT: 11001101101010000000100101000100

       - Next Round Left 32 Bits:  10010110010101001010100111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101101010000000100101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110010101001010100111111011

       - Right 32 Bits:            11001101101010000000100101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000001100010010100010100111101011000011010110110111100   [Subkey: 2]
          - Input Half:       11001101101010000000100101000100
          - S-Box Result:     01010110010000101111001101110111   [per every group of 4-bits]
          - Split Into Two:   0101011001000010 [L] 1111001101110111 [R]
          - Swap Halves:      11110011011101110101011001000010
          - Bit Inversion:    00001100100010001010100110111101
          - Compressed Key:   00000001010000110111100101111100   [done by compression P-Box]
          - XOR with Key:     00001101110010111101000011000001

          - FUNCTION OUTPUT:  00001101110010111101000011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110010101001010100111111011

       - FUNCTION OUTPUT:          00001101110010111101000011000001

       - Left XOR FUNCTION OUTPUT: 10011011100111110111100100111010

       - Next Round Left 32 Bits:  11001101101010000000100101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011100111110111100100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101101010000000100101000100

       - Right 32 Bits:            10011011100111110111100100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011111001110110101110101100001010011110010100100100001   [Subkey: 1]
          - Input Half:       10011011100111110111100100111010
          - S-Box Result:     00111000001110111101001100010100   [per every group of 4-bits]
          - Split Into Two:   0011100000111011 [L] 1101001100010100 [R]
          - Swap Halves:      11010011000101000011100000111011
          - Bit Inversion:    00101100111010111100011111000100
          - Compressed Key:   11111101011110010101110000010010   [done by compression P-Box]
          - XOR with Key:     11010001100100101001101111010110

          - FUNCTION OUTPUT:  11010001100100101001101111010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101101010000000100101000100

       - FUNCTION OUTPUT:          11010001100100101001101111010110

       - Left XOR FUNCTION OUTPUT: 00011100001110101001001010010010

       - Next Round Left 32 Bits:  10011011100111110111100100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100001110101001001010010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001110000111010100100101001001010011011100111110111100100111010

 > Processed Block:     0001110000111010100100101001001010011011100111110111100100111010




BLOCKS IN ASCII:             ê¼C¦t|µ9·OySúÒº-C´Wú?½u?öÒþõrvi¢?pßæ?´4}nzü§?ô{ÿò!úïv(=ºì³Ø:????y:

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: ys0GT4X
In Binary:  01111001011100110011000001000111010101000011010001011000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00001101000110011001111101110001010101111001011101001111
Subkey 2  : 11100101110011001100000100011101010100001101000101100001
Subkey 3  : 00110100011001100111110111000101010111100101110100111100
Subkey 4  : 10010111001100110000010001110101010000110100010110000111
Subkey 5  : 11010001100110011111011100010101011110010111010011110000
Subkey 6  : 01011100110011000001000111010101000011010001011000011110
Subkey 7  : 01000110011001111101110001010101111001011101001111000011
Subkey 8  : 01110011001100000100011101010100001101000101100001111001
Subkey 9  : 00011001100111110111000101010111100101110100111100001101
Subkey 10 : 11001100110000010001110101010000110100010110000111100101
Subkey 11 : 01100110011111011100010101011110010111010011110000110100
Subkey 12 : 00110011000001000111010101000011010001011000011110010111
Subkey 13 : 10011001111101110001010101111001011101001111000011010001
Subkey 14 : 11001100000100011101010100001101000101100001111001011100
Subkey 15 : 01100111110111000101010111100101110100111100001101000110
Subkey 16 : 00110000010001110101010000110100010110000111100101110011

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ê¼C¦t|µ9·OySúÒº-C´Wú?½u?öÒþõrvi¢?pßæ?´4}nzü§?ô{ÿò!úïv(=ºì³Ø:????y:

Data padded with spaces : ê¼C¦t|µ9·OySúÒº-C´Wú?½u?öÒþõrvi¢?pßæ?´4}nzü§?ô{ÿò!úïv(=ºì³Ø:????y:[Padded with '0' spaces]

Data in ASCII           : 234,3,6,188,67,166,116,124,181,57,183,79,121,83,250,20,210,186,45,67,180,87,250,27,5,154,189,117,147,246,210,254,245,114,118,105,162,130,112,223,230,146,180,52,125,110,122,252,167,154,244,123,255,242,33,250,239,118,40,61,186,236,179,216,28,58,146,146,155,159,121,58,

Data in Binary          : 11101010,00000011,00000110,10111100,01000011,10100110,01110100,01111100,10110101,00111001,10110111,01001111,01111001,01010011,11111010,00010100,11010010,10111010,00101101,01000011,10110100,01010111,11111010,00011011,00000101,10011010,10111101,01110101,10010011,11110110,11010010,11111110,11110101,01110010,01110110,01101001,10100010,10000010,01110000,11011111,11100110,10010010,10110100,00110100,01111101,01101110,01111010,11111100,10100111,10011010,11110100,01111011,11111111,11110010,00100001,11111010,11101111,01110110,00101000,00111101,10111010,11101100,10110011,11011000,00011100,00111010,10010010,10010010,10011011,10011111,01111001,00111010,

Data in 64-bit Blocks



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>



Plaintext Block 1: 1110101000000011000001101011110001000011101001100111010001111100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010000000110000011010111100

       - Right 32 Bits:            01000011101001100111010001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       01000011101001100111010001111100
          - S-Box Result:     01110001010000001101011111010101   [per every group of 4-bits]
          - Split Into Two:   0111000101000000 [L] 1101011111010101 [R]
          - Swap Halves:      11010111110101010111000101000000
          - Bit Inversion:    00101000001010101000111010111111
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     10110001000100011101001101100000

          - FUNCTION OUTPUT:  10110001000100011101001101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010000000110000011010111100

       - FUNCTION OUTPUT:          10110001000100011101001101100000

       - Left XOR FUNCTION OUTPUT: 01011011000100101101010111011100

       - Next Round Left 32 Bits:  01000011101001100111010001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011000100101101010111011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011101001100111010001111100

       - Right 32 Bits:            01011011000100101101010111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       01011011000100101101010111011100
          - S-Box Result:     10011000101011100110100101100101   [per every group of 4-bits]
          - Split Into Two:   1001100010101110 [L] 0110100101100101 [R]
          - Swap Halves:      01101001011001011001100010101110
          - Bit Inversion:    10010110100110100110011101010001
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     10000101110110000011010001000011

          - FUNCTION OUTPUT:  10000101110110000011010001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011101001100111010001111100

       - FUNCTION OUTPUT:          10000101110110000011010001000011

       - Left XOR FUNCTION OUTPUT: 11000110011111100100000000111111

       - Next Round Left 32 Bits:  01011011000100101101010111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110011111100100000000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011000100101101010111011100

       - Right 32 Bits:            11000110011111100100000000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       11000110011111100100000000111111
          - S-Box Result:     01010000110111000111111100011011   [per every group of 4-bits]
          - Split Into Two:   0101000011011100 [L] 0111111100011011 [R]
          - Swap Halves:      01111111000110110101000011011100
          - Bit Inversion:    10000000111001001010111100100011
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     11010110000110001111100101111111

          - FUNCTION OUTPUT:  11010110000110001111100101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011000100101101010111011100

       - FUNCTION OUTPUT:          11010110000110001111100101111111

       - Left XOR FUNCTION OUTPUT: 10001101000010100010110010100011

       - Next Round Left 32 Bits:  11000110011111100100000000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101000010100010110010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110011111100100000000111111

       - Right 32 Bits:            10001101000010100010110010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       10001101000010100010110010100011
          - S-Box Result:     00100110111101001110010101000001   [per every group of 4-bits]
          - Split Into Two:   0010011011110100 [L] 1110010101000001 [R]
          - Swap Halves:      11100101010000010010011011110100
          - Bit Inversion:    00011010101111101101100100001011
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     01100110101101011000011101110000

          - FUNCTION OUTPUT:  01100110101101011000011101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110011111100100000000111111

       - FUNCTION OUTPUT:          01100110101101011000011101110000

       - Left XOR FUNCTION OUTPUT: 10100000110010111100011101001111

       - Next Round Left 32 Bits:  10001101000010100010110010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000110010111100011101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101000010100010110010100011

       - Right 32 Bits:            10100000110010111100011101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       10100000110010111100011101001111
          - S-Box Result:     01001111010110000101110101111011   [per every group of 4-bits]
          - Split Into Two:   0100111101011000 [L] 0101110101111011 [R]
          - Swap Halves:      01011101011110110100111101011000
          - Bit Inversion:    10100010100001001011000010100111
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     11101011010101101100101011000111

          - FUNCTION OUTPUT:  11101011010101101100101011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101000010100010110010100011

       - FUNCTION OUTPUT:          11101011010101101100101011000111

       - Left XOR FUNCTION OUTPUT: 01100110010111001110011001100100

       - Next Round Left 32 Bits:  10100000110010111100011101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110010111001110011001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000110010111100011101001111

       - Right 32 Bits:            01100110010111001110011001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       01100110010111001110011001100100
          - S-Box Result:     00000000100101011100000000000111   [per every group of 4-bits]
          - Split Into Two:   0000000010010101 [L] 1100000000000111 [R]
          - Swap Halves:      11000000000001110000000010010101
          - Bit Inversion:    00111111111110001111111101101010
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11101100111001101011011110100111

          - FUNCTION OUTPUT:  11101100111001101011011110100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000110010111100011101001111

       - FUNCTION OUTPUT:          11101100111001101011011110100111

       - Left XOR FUNCTION OUTPUT: 01001100001011010111000011101000

       - Next Round Left 32 Bits:  01100110010111001110011001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100001011010111000011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110010111001110011001100100

       - Right 32 Bits:            01001100001011010111000011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       01001100001011010111000011101000
          - S-Box Result:     01110101111001101101111111000010   [per every group of 4-bits]
          - Split Into Two:   0111010111100110 [L] 1101111111000010 [R]
          - Swap Halves:      11011111110000100111010111100110
          - Bit Inversion:    00100000001111011000101000011001
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     00010110010001110111000110101010

          - FUNCTION OUTPUT:  00010110010001110111000110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110010111001110011001100100

       - FUNCTION OUTPUT:          00010110010001110111000110101010

       - Left XOR FUNCTION OUTPUT: 01110000000110111001011111001110

       - Next Round Left 32 Bits:  01001100001011010111000011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000000110111001011111001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100001011010111000011101000

       - Right 32 Bits:            01110000000110111001011111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       01110000000110111001011111001110
          - S-Box Result:     11011111101010000011110101011100   [per every group of 4-bits]
          - Split Into Two:   1101111110101000 [L] 0011110101011100 [R]
          - Swap Halves:      00111101010111001101111110101000
          - Bit Inversion:    11000010101000110010000001010111
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     10101110111010010000001001010001

          - FUNCTION OUTPUT:  10101110111010010000001001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100001011010111000011101000

       - FUNCTION OUTPUT:          10101110111010010000001001010001

       - Left XOR FUNCTION OUTPUT: 11100010110001000111001010111001

       - Next Round Left 32 Bits:  01110000000110111001011111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010110001000111001010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000000110111001011111001110

       - Right 32 Bits:            11100010110001000111001010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       11100010110001000111001010111001
          - S-Box Result:     11001110010101111101111010000011   [per every group of 4-bits]
          - Split Into Two:   1100111001010111 [L] 1101111010000011 [R]
          - Swap Halves:      11011110100000111100111001010111
          - Bit Inversion:    00100001011111000011000110101000
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     11101010101001101111111101110110

          - FUNCTION OUTPUT:  11101010101001101111111101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000000110111001011111001110

       - FUNCTION OUTPUT:          11101010101001101111111101110110

       - Left XOR FUNCTION OUTPUT: 10011010101111010110100010111000

       - Next Round Left 32 Bits:  11100010110001000111001010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010101111010110100010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010110001000111001010111001

       - Right 32 Bits:            10011010101111010110100010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       10011010101111010110100010111000
          - S-Box Result:     00110100100001100000001010000010   [per every group of 4-bits]
          - Split Into Two:   0011010010000110 [L] 0000001010000010 [R]
          - Swap Halves:      00000010100000100011010010000110
          - Bit Inversion:    11111101011111011100101101111001
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     01101101010001110101000101000011

          - FUNCTION OUTPUT:  01101101010001110101000101000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010110001000111001010111001

       - FUNCTION OUTPUT:          01101101010001110101000101000011

       - Left XOR FUNCTION OUTPUT: 10001111100000110010001111111010

       - Next Round Left 32 Bits:  10011010101111010110100010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111100000110010001111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010101111010110100010111000

       - Right 32 Bits:            10001111100000110010001111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       10001111100000110010001111111010
          - S-Box Result:     00101011001000011110000110110100   [per every group of 4-bits]
          - Split Into Two:   0010101100100001 [L] 1110000110110100 [R]
          - Swap Halves:      11100001101101000010101100100001
          - Bit Inversion:    00011110010010111101010011011110
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     00100001000000011100110010010110

          - FUNCTION OUTPUT:  00100001000000011100110010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010101111010110100010111000

       - FUNCTION OUTPUT:          00100001000000011100110010010110

       - Left XOR FUNCTION OUTPUT: 10111011101111001010010000101110

       - Next Round Left 32 Bits:  10001111100000110010001111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011101111001010010000101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111100000110010001111111010

       - Right 32 Bits:            10111011101111001010010000101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       10111011101111001010010000101110
          - S-Box Result:     10001000100001010100011111101100   [per every group of 4-bits]
          - Split Into Two:   1000100010000101 [L] 0100011111101100 [R]
          - Swap Halves:      01000111111011001000100010000101
          - Bit Inversion:    10111000000100110111011101111010
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     11011010110010110010111010000001

          - FUNCTION OUTPUT:  11011010110010110010111010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111100000110010001111111010

       - FUNCTION OUTPUT:          11011010110010110010111010000001

       - Left XOR FUNCTION OUTPUT: 01010101010010000000110101111011

       - Next Round Left 32 Bits:  10111011101111001010010000101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101010010000000110101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011101111001010010000101110

       - Right 32 Bits:            01010101010010000000110101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       01010101010010000000110101111011
          - S-Box Result:     10011001011100101111011011011000   [per every group of 4-bits]
          - Split Into Two:   1001100101110010 [L] 1111011011011000 [R]
          - Swap Halves:      11110110110110001001100101110010
          - Bit Inversion:    00001001001001110110011010001101
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     11000111001111000001010110101111

          - FUNCTION OUTPUT:  11000111001111000001010110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011101111001010010000101110

       - FUNCTION OUTPUT:          11000111001111000001010110101111

       - Left XOR FUNCTION OUTPUT: 01111100100000001011000110000001

       - Next Round Left 32 Bits:  01010101010010000000110101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100100000001011000110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101010010000000110101111011

       - Right 32 Bits:            01111100100000001011000110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       01111100100000001011000110000001
          - S-Box Result:     11010101001011111000101000101010   [per every group of 4-bits]
          - Split Into Two:   1101010100101111 [L] 1000101000101010 [R]
          - Swap Halves:      10001010001010101101010100101111
          - Bit Inversion:    01110101110101010010101011010000
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     11101101100001010110111000011100

          - FUNCTION OUTPUT:  11101101100001010110111000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101010010000000110101111011

       - FUNCTION OUTPUT:          11101101100001010110111000011100

       - Left XOR FUNCTION OUTPUT: 10111000110011010110001101100111

       - Next Round Left 32 Bits:  01111100100000001011000110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000110011010110001101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100100000001011000110000001

       - Right 32 Bits:            10111000110011010110001101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       10111000110011010110001101100111
          - S-Box Result:     10000010010101100000000100001101   [per every group of 4-bits]
          - Split Into Two:   1000001001010110 [L] 0000000100001101 [R]
          - Swap Halves:      00000001000011011000001001010110
          - Bit Inversion:    11111110111100100111110110101001
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     11000101101011111010001000110000

          - FUNCTION OUTPUT:  11000101101011111010001000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100100000001011000110000001

       - FUNCTION OUTPUT:          11000101101011111010001000110000

       - Left XOR FUNCTION OUTPUT: 10111001001011110001001110110001

       - Next Round Left 32 Bits:  10111000110011010110001101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001001011110001001110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000110011010110001101100111

       - Right 32 Bits:            10111001001011110001001110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       10111001001011110001001110110001
          - S-Box Result:     10000011111010111010000110001010   [per every group of 4-bits]
          - Split Into Two:   1000001111101011 [L] 1010000110001010 [R]
          - Swap Halves:      10100001100010101000001111101011
          - Bit Inversion:    01011110011101010111110000010100
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     00011100001001100110111000000111

          - FUNCTION OUTPUT:  00011100001001100110111000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000110011010110001101100111

       - FUNCTION OUTPUT:          00011100001001100110111000000111

       - Left XOR FUNCTION OUTPUT: 10100100111010110000110101100000

       - Next Round Left 32 Bits:  10111001001011110001001110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100111010110000110101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010010011101011000011010110000010111001001011110001001110110001

 > Processed Block:     1010010011101011000011010110000010111001001011110001001110110001



Plaintext Block 2: 1011010100111001101101110100111101111001010100111111101000010100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101001110011011011101001111

       - Right 32 Bits:            01111001010100111111101000010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       01111001010100111111101000010100
          - S-Box Result:     11010011100100011011010010100111   [per every group of 4-bits]
          - Split Into Two:   1101001110010001 [L] 1011010010100111 [R]
          - Swap Halves:      10110100101001111101001110010001
          - Bit Inversion:    01001011010110000010110001101110
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     11010010011000110111000110110001

          - FUNCTION OUTPUT:  11010010011000110111000110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101001110011011011101001111

       - FUNCTION OUTPUT:          11010010011000110111000110110001

       - Left XOR FUNCTION OUTPUT: 01100111010110101100011011111110

       - Next Round Left 32 Bits:  01111001010100111111101000010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111010110101100011011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001010100111111101000010100

       - Right 32 Bits:            01100111010110101100011011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       01100111010110101100011011111110
          - S-Box Result:     00001101100101000101000010111100   [per every group of 4-bits]
          - Split Into Two:   0000110110010100 [L] 0101000010111100 [R]
          - Swap Halves:      01010000101111000000110110010100
          - Bit Inversion:    10101111010000111111001001101011
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     10111100000000011010000101111001

          - FUNCTION OUTPUT:  10111100000000011010000101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001010100111111101000010100

       - FUNCTION OUTPUT:          10111100000000011010000101111001

       - Left XOR FUNCTION OUTPUT: 11000101010100100101101101101101

       - Next Round Left 32 Bits:  01100111010110101100011011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101010100100101101101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111010110101100011011111110

       - Right 32 Bits:            11000101010100100101101101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       11000101010100100101101101101101
          - S-Box Result:     01011001100111101001100000000110   [per every group of 4-bits]
          - Split Into Two:   0101100110011110 [L] 1001100000000110 [R]
          - Swap Halves:      10011000000001100101100110011110
          - Bit Inversion:    01100111111110011010011001100001
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     00110001000001011111000000111101

          - FUNCTION OUTPUT:  00110001000001011111000000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111010110101100011011111110

       - FUNCTION OUTPUT:          00110001000001011111000000111101

       - Left XOR FUNCTION OUTPUT: 01010110010111110011011011000011

       - Next Round Left 32 Bits:  11000101010100100101101101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110010111110011011011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101010100100101101101101101

       - Right 32 Bits:            01010110010111110011011011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       01010110010111110011011011000011
          - S-Box Result:     10010000100110110001000001010001   [per every group of 4-bits]
          - Split Into Two:   1001000010011011 [L] 0001000001010001 [R]
          - Swap Halves:      00010000010100011001000010011011
          - Bit Inversion:    11101111101011100110111101100100
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     10010011101001010011000100011111

          - FUNCTION OUTPUT:  10010011101001010011000100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101010100100101101101101101

       - FUNCTION OUTPUT:          10010011101001010011000100011111

       - Left XOR FUNCTION OUTPUT: 01010110111101110110101001110010

       - Next Round Left 32 Bits:  01010110010111110011011011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110111101110110101001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110010111110011011011000011

       - Right 32 Bits:            01010110111101110110101001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       01010110111101110110101001110010
          - S-Box Result:     10010000101111010000010011011110   [per every group of 4-bits]
          - Split Into Two:   1001000010111101 [L] 0000010011011110 [R]
          - Swap Halves:      00000100110111101001000010111101
          - Bit Inversion:    11111011001000010110111101000010
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     10110010111100110001010100100010

          - FUNCTION OUTPUT:  10110010111100110001010100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110010111110011011011000011

       - FUNCTION OUTPUT:          10110010111100110001010100100010

       - Left XOR FUNCTION OUTPUT: 11100100101011000010001111100001

       - Next Round Left 32 Bits:  01010110111101110110101001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100101011000010001111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110111101110110101001110010

       - Right 32 Bits:            11100100101011000010001111100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       11100100101011000010001111100001
          - S-Box Result:     11000111010001011110000111001010   [per every group of 4-bits]
          - Split Into Two:   1100011101000101 [L] 1110000111001010 [R]
          - Swap Halves:      11100001110010101100011101000101
          - Bit Inversion:    00011110001101010011100010111010
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11001101001010110111000001110111

          - FUNCTION OUTPUT:  11001101001010110111000001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110111101110110101001110010

       - FUNCTION OUTPUT:          11001101001010110111000001110111

       - Left XOR FUNCTION OUTPUT: 10011011110111000001101000000101

       - Next Round Left 32 Bits:  11100100101011000010001111100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011110111000001101000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100101011000010001111100001

       - Right 32 Bits:            10011011110111000001101000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       10011011110111000001101000000101
          - S-Box Result:     00111000011001011010010011111001   [per every group of 4-bits]
          - Split Into Two:   0011100001100101 [L] 1010010011111001 [R]
          - Swap Halves:      10100100111110010011100001100101
          - Bit Inversion:    01011011000001101100011110011010
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     01101101011111000011110000101001

          - FUNCTION OUTPUT:  01101101011111000011110000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100101011000010001111100001

       - FUNCTION OUTPUT:          01101101011111000011110000101001

       - Left XOR FUNCTION OUTPUT: 10001001110100000001111111001000

       - Next Round Left 32 Bits:  10011011110111000001101000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001110100000001111111001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011110111000001101000000101

       - Right 32 Bits:            10001001110100000001111111001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       10001001110100000001111111001000
          - S-Box Result:     00100011011011111010101101010010   [per every group of 4-bits]
          - Split Into Two:   0010001101101111 [L] 1010101101010010 [R]
          - Swap Halves:      10101011010100100010001101101111
          - Bit Inversion:    01010100101011011101110010010000
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     00111000111001111111111010010110

          - FUNCTION OUTPUT:  00111000111001111111111010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011110111000001101000000101

       - FUNCTION OUTPUT:          00111000111001111111111010010110

       - Left XOR FUNCTION OUTPUT: 10100011001110111110010010010011

       - Next Round Left 32 Bits:  10001001110100000001111111001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011001110111110010010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001110100000001111111001000

       - Right 32 Bits:            10100011001110111110010010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       10100011001110111110010010010011
          - S-Box Result:     01000001000110001100011100110001   [per every group of 4-bits]
          - Split Into Two:   0100000100011000 [L] 1100011100110001 [R]
          - Swap Halves:      11000111001100010100000100011000
          - Bit Inversion:    00111000110011101011111011100111
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     11110011000101000111000000111001

          - FUNCTION OUTPUT:  11110011000101000111000000111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001110100000001111111001000

       - FUNCTION OUTPUT:          11110011000101000111000000111001

       - Left XOR FUNCTION OUTPUT: 01111010110001000110111111110001

       - Next Round Left 32 Bits:  10100011001110111110010010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010110001000110111111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011001110111110010010010011

       - Right 32 Bits:            01111010110001000110111111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       01111010110001000110111111110001
          - S-Box Result:     11010100010101110000101110111010   [per every group of 4-bits]
          - Split Into Two:   1101010001010111 [L] 0000101110111010 [R]
          - Swap Halves:      00001011101110101101010001010111
          - Bit Inversion:    11110100010001010010101110101000
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     01100100011111111011000110010010

          - FUNCTION OUTPUT:  01100100011111111011000110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011001110111110010010010011

       - FUNCTION OUTPUT:          01100100011111111011000110010010

       - Left XOR FUNCTION OUTPUT: 11000111010001000101010100000001

       - Next Round Left 32 Bits:  01111010110001000110111111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111010001000101010100000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010110001000110111111110001

       - Right 32 Bits:            11000111010001000101010100000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       11000111010001000101010100000001
          - S-Box Result:     01011101011101111001100111111010   [per every group of 4-bits]
          - Split Into Two:   0101110101110111 [L] 1001100111111010 [R]
          - Swap Halves:      10011001111110100101110101110111
          - Bit Inversion:    01100110000001011010001010001000
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     01011001010011111011101011000000

          - FUNCTION OUTPUT:  01011001010011111011101011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010110001000110111111110001

       - FUNCTION OUTPUT:          01011001010011111011101011000000

       - Left XOR FUNCTION OUTPUT: 00100011100010111101010100110001

       - Next Round Left 32 Bits:  11000111010001000101010100000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011100010111101010100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111010001000101010100000001

       - Right 32 Bits:            00100011100010111101010100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       00100011100010111101010100110001
          - S-Box Result:     11100001001010000110100100011010   [per every group of 4-bits]
          - Split Into Two:   1110000100101000 [L] 0110100100011010 [R]
          - Swap Halves:      01101001000110101110000100101000
          - Bit Inversion:    10010110111001010001111011010111
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     11110100001111010100011100101100

          - FUNCTION OUTPUT:  11110100001111010100011100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111010001000101010100000001

       - FUNCTION OUTPUT:          11110100001111010100011100101100

       - Left XOR FUNCTION OUTPUT: 00110011011110010001001000101101

       - Next Round Left 32 Bits:  00100011100010111101010100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011011110010001001000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011100010111101010100110001

       - Right 32 Bits:            00110011011110010001001000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       00110011011110010001001000101101
          - S-Box Result:     00010001110100111010111011100110   [per every group of 4-bits]
          - Split Into Two:   0001000111010011 [L] 1010111011100110 [R]
          - Swap Halves:      10101110111001100001000111010011
          - Bit Inversion:    01010001000110011110111000101100
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     10011111000000101001110100001110

          - FUNCTION OUTPUT:  10011111000000101001110100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011100010111101010100110001

       - FUNCTION OUTPUT:          10011111000000101001110100001110

       - Left XOR FUNCTION OUTPUT: 10111100100010010100100000111111

       - Next Round Left 32 Bits:  00110011011110010001001000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100100010010100100000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011011110010001001000101101

       - Right 32 Bits:            10111100100010010100100000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       10111100100010010100100000111111
          - S-Box Result:     10000101001000110111001000011011   [per every group of 4-bits]
          - Split Into Two:   1000010100100011 [L] 0111001000011011 [R]
          - Swap Halves:      01110010000110111000010100100011
          - Bit Inversion:    10001101111001000111101011011100
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     00010101101101000011111000010000

          - FUNCTION OUTPUT:  00010101101101000011111000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011011110010001001000101101

       - FUNCTION OUTPUT:          00010101101101000011111000010000

       - Left XOR FUNCTION OUTPUT: 00100110110011010010110000111101

       - Next Round Left 32 Bits:  10111100100010010100100000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110110011010010110000111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100100010010100100000111111

       - Right 32 Bits:            00100110110011010010110000111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       00100110110011010010110000111101
          - S-Box Result:     11100000010101101110010100010110   [per every group of 4-bits]
          - Split Into Two:   1110000001010110 [L] 1110010100010110 [R]
          - Swap Halves:      11100101000101101110000001010110
          - Bit Inversion:    00011010111010010001111110101001
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     00100001101101001100000000110000

          - FUNCTION OUTPUT:  00100001101101001100000000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100100010010100100000111111

       - FUNCTION OUTPUT:          00100001101101001100000000110000

       - Left XOR FUNCTION OUTPUT: 10011101001111011000100000001111

       - Next Round Left 32 Bits:  00100110110011010010110000111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101001111011000100000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110110011010010110000111101

       - Right 32 Bits:            10011101001111011000100000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       10011101001111011000100000001111
          - S-Box Result:     00110110000101100010001011111011   [per every group of 4-bits]
          - Split Into Two:   0011011000010110 [L] 0010001011111011 [R]
          - Swap Halves:      00100010111110110011011000010110
          - Bit Inversion:    11011101000001001100100111101001
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     10011111010101111101101111111010

          - FUNCTION OUTPUT:  10011111010101111101101111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110110011010010110000111101

       - FUNCTION OUTPUT:          10011111010101111101101111111010

       - Left XOR FUNCTION OUTPUT: 10111001100110101111011111000111

       - Next Round Left 32 Bits:  10011101001111011000100000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001100110101111011111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011100110011010111101111100011110011101001111011000100000001111

 > Processed Block:     1011100110011010111101111100011110011101001111011000100000001111



Plaintext Block 3: 1101001010111010001011010100001110110100010101111111101000011011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010101110100010110101000011

       - Right 32 Bits:            10110100010101111111101000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       10110100010101111111101000011011
          - S-Box Result:     10000111100111011011010010101000   [per every group of 4-bits]
          - Split Into Two:   1000011110011101 [L] 1011010010101000 [R]
          - Swap Halves:      10110100101010001000011110011101
          - Bit Inversion:    01001011010101110111100001100010
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     11010010011011000010010110111101

          - FUNCTION OUTPUT:  11010010011011000010010110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010101110100010110101000011

       - FUNCTION OUTPUT:          11010010011011000010010110111101

       - Left XOR FUNCTION OUTPUT: 00000000110101100000100011111110

       - Next Round Left 32 Bits:  10110100010101111111101000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000110101100000100011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100010101111111101000011011

       - Right 32 Bits:            00000000110101100000100011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       00000000110101100000100011111110
          - S-Box Result:     11111111011000001111001010111100   [per every group of 4-bits]
          - Split Into Two:   1111111101100000 [L] 1111001010111100 [R]
          - Swap Halves:      11110010101111001111111101100000
          - Bit Inversion:    00001101010000110000000010011111
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     00011110000000010101001110001101

          - FUNCTION OUTPUT:  00011110000000010101001110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100010101111111101000011011

       - FUNCTION OUTPUT:          00011110000000010101001110001101

       - Left XOR FUNCTION OUTPUT: 10101010010101101010100110010110

       - Next Round Left 32 Bits:  00000000110101100000100011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010010101101010100110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000110101100000100011111110

       - Right 32 Bits:            10101010010101101010100110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       10101010010101101010100110010110
          - S-Box Result:     01000100100100000100001100110000   [per every group of 4-bits]
          - Split Into Two:   0100010010010000 [L] 0100001100110000 [R]
          - Swap Halves:      01000011001100000100010010010000
          - Bit Inversion:    10111100110011111011101101101111
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     11101010001100111110110100110011

          - FUNCTION OUTPUT:  11101010001100111110110100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000110101100000100011111110

       - FUNCTION OUTPUT:          11101010001100111110110100110011

       - Left XOR FUNCTION OUTPUT: 11101010111001011110010111001101

       - Next Round Left 32 Bits:  10101010010101101010100110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010111001011110010111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010010101101010100110010110

       - Right 32 Bits:            11101010111001011110010111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       11101010111001011110010111001101
          - S-Box Result:     11000100110010011100100101010110   [per every group of 4-bits]
          - Split Into Two:   1100010011001001 [L] 1100100101010110 [R]
          - Swap Halves:      11001001010101101100010011001001
          - Bit Inversion:    00110110101010010011101100110110
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     01001010101000100110010101001101

          - FUNCTION OUTPUT:  01001010101000100110010101001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010010101101010100110010110

       - FUNCTION OUTPUT:          01001010101000100110010101001101

       - Left XOR FUNCTION OUTPUT: 11100000111101001100110011011011

       - Next Round Left 32 Bits:  11101010111001011110010111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000111101001100110011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010111001011110010111001101

       - Right 32 Bits:            11100000111101001100110011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       11100000111101001100110011011011
          - S-Box Result:     11001111101101110101010101101000   [per every group of 4-bits]
          - Split Into Two:   1100111110110111 [L] 0101010101101000 [R]
          - Swap Halves:      01010101011010001100111110110111
          - Bit Inversion:    10101010100101110011000001001000
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     11100011010001010100101000101000

          - FUNCTION OUTPUT:  11100011010001010100101000101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010111001011110010111001101

       - FUNCTION OUTPUT:          11100011010001010100101000101000

       - Left XOR FUNCTION OUTPUT: 00001001101000001010111111100101

       - Next Round Left 32 Bits:  11100000111101001100110011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001101000001010111111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000111101001100110011011011

       - Right 32 Bits:            00001001101000001010111111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       00001001101000001010111111100101
          - S-Box Result:     11110011010011110100101111001001   [per every group of 4-bits]
          - Split Into Two:   1111001101001111 [L] 0100101111001001 [R]
          - Swap Halves:      01001011110010011111001101001111
          - Bit Inversion:    10110100001101100000110010110000
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     01100111001010000100010001111101

          - FUNCTION OUTPUT:  01100111001010000100010001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000111101001100110011011011

       - FUNCTION OUTPUT:          01100111001010000100010001111101

       - Left XOR FUNCTION OUTPUT: 10000111110111001000100010100110

       - Next Round Left 32 Bits:  00001001101000001010111111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111110111001000100010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001101000001010111111100101

       - Right 32 Bits:            10000111110111001000100010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       10000111110111001000100010100110
          - S-Box Result:     00101101011001010010001001000000   [per every group of 4-bits]
          - Split Into Two:   0010110101100101 [L] 0010001001000000 [R]
          - Swap Halves:      00100010010000000010110101100101
          - Bit Inversion:    11011101101111111101001010011010
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     11101011110001010010100100101001

          - FUNCTION OUTPUT:  11101011110001010010100100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001101000001010111111100101

       - FUNCTION OUTPUT:          11101011110001010010100100101001

       - Left XOR FUNCTION OUTPUT: 11100010011001011000011011001100

       - Next Round Left 32 Bits:  10000111110111001000100010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010011001011000011011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111110111001000100010100110

       - Right 32 Bits:            11100010011001011000011011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       11100010011001011000011011001100
          - S-Box Result:     11001110000010010010000001010101   [per every group of 4-bits]
          - Split Into Two:   1100111000001001 [L] 0010000001010101 [R]
          - Swap Halves:      00100000010101011100111000001001
          - Bit Inversion:    11011111101010100011000111110110
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     10110011111000000001001111110000

          - FUNCTION OUTPUT:  10110011111000000001001111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111110111001000100010100110

       - FUNCTION OUTPUT:          10110011111000000001001111110000

       - Left XOR FUNCTION OUTPUT: 00110100001111001001101101010110

       - Next Round Left 32 Bits:  11100010011001011000011011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100001111001001101101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010011001011000011011001100

       - Right 32 Bits:            00110100001111001001101101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       00110100001111001001101101010110
          - S-Box Result:     00010111000101010011100010010000   [per every group of 4-bits]
          - Split Into Two:   0001011100010101 [L] 0011100010010000 [R]
          - Swap Halves:      00111000100100000001011100010101
          - Bit Inversion:    11000111011011111110100011101010
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     00001100101101010010011000110100

          - FUNCTION OUTPUT:  00001100101101010010011000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010011001011000011011001100

       - FUNCTION OUTPUT:          00001100101101010010011000110100

       - Left XOR FUNCTION OUTPUT: 11101110110100001010000011111000

       - Next Round Left 32 Bits:  00110100001111001001101101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110110100001010000011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100001111001001101101010110

       - Right 32 Bits:            11101110110100001010000011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       11101110110100001010000011111000
          - S-Box Result:     11001100011011110100111110110010   [per every group of 4-bits]
          - Split Into Two:   1100110001101111 [L] 0100111110110010 [R]
          - Swap Halves:      01001111101100101100110001101111
          - Bit Inversion:    10110000010011010011001110010000
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     00100000011101111010100110101010

          - FUNCTION OUTPUT:  00100000011101111010100110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100001111001001101101010110

       - FUNCTION OUTPUT:          00100000011101111010100110101010

       - Left XOR FUNCTION OUTPUT: 00010100010010110011001011111100

       - Next Round Left 32 Bits:  11101110110100001010000011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100010010110011001011111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110110100001010000011111000

       - Right 32 Bits:            00010100010010110011001011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       00010100010010110011001011111100
          - S-Box Result:     10100111011110000001111010110101   [per every group of 4-bits]
          - Split Into Two:   1010011101111000 [L] 0001111010110101 [R]
          - Swap Halves:      00011110101101011010011101111000
          - Bit Inversion:    11100001010010100101100010000111
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     11011110000000000100000011001111

          - FUNCTION OUTPUT:  11011110000000000100000011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110110100001010000011111000

       - FUNCTION OUTPUT:          11011110000000000100000011001111

       - Left XOR FUNCTION OUTPUT: 00110000110100001110000000110111

       - Next Round Left 32 Bits:  00010100010010110011001011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000110100001110000000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100010010110011001011111100

       - Right 32 Bits:            00110000110100001110000000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       00110000110100001110000000110111
          - S-Box Result:     00011111011011111100111100011101   [per every group of 4-bits]
          - Split Into Two:   0001111101101111 [L] 1100111100011101 [R]
          - Swap Halves:      11001111000111010001111101101111
          - Bit Inversion:    00110000111000101110000010010000
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     01010010001110101011100101101011

          - FUNCTION OUTPUT:  01010010001110101011100101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100010010110011001011111100

       - FUNCTION OUTPUT:          01010010001110101011100101101011

       - Left XOR FUNCTION OUTPUT: 01000110011100011000101110010111

       - Next Round Left 32 Bits:  00110000110100001110000000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110011100011000101110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000110100001110000000110111

       - Right 32 Bits:            01000110011100011000101110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       01000110011100011000101110010111
          - S-Box Result:     01110000110110100010100000111101   [per every group of 4-bits]
          - Split Into Two:   0111000011011010 [L] 0010100000111101 [R]
          - Swap Halves:      00101000001111010111000011011010
          - Bit Inversion:    11010111110000101000111100100101
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     00011001110110011111110000000111

          - FUNCTION OUTPUT:  00011001110110011111110000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000110100001110000000110111

       - FUNCTION OUTPUT:          00011001110110011111110000000111

       - Left XOR FUNCTION OUTPUT: 00101001000010010001110000110000

       - Next Round Left 32 Bits:  01000110011100011000101110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001000010010001110000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110011100011000101110010111

       - Right 32 Bits:            00101001000010010001110000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       00101001000010010001110000110000
          - S-Box Result:     11100011111100111010010100011111   [per every group of 4-bits]
          - Split Into Two:   1110001111110011 [L] 1010010100011111 [R]
          - Swap Halves:      10100101000111111110001111110011
          - Bit Inversion:    01011010111000000001110000001100
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     11000010101100000101100011000000

          - FUNCTION OUTPUT:  11000010101100000101100011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110011100011000101110010111

       - FUNCTION OUTPUT:          11000010101100000101100011000000

       - Left XOR FUNCTION OUTPUT: 10000100110000011101001101010111

       - Next Round Left 32 Bits:  00101001000010010001110000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100110000011101001101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001000010010001110000110000

       - Right 32 Bits:            10000100110000011101001101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       10000100110000011101001101010111
          - S-Box Result:     00100111010110100110000110011101   [per every group of 4-bits]
          - Split Into Two:   0010011101011010 [L] 0110000110011101 [R]
          - Swap Halves:      01100001100111010010011101011010
          - Bit Inversion:    10011110011000101101100010100101
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     10100101001111110000011100111100

          - FUNCTION OUTPUT:  10100101001111110000011100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001000010010001110000110000

       - FUNCTION OUTPUT:          10100101001111110000011100111100

       - Left XOR FUNCTION OUTPUT: 10001100001101100001101100001100

       - Next Round Left 32 Bits:  10000100110000011101001101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100001101100001101100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100110000011101001101010111

       - Right 32 Bits:            10001100001101100001101100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       10001100001101100001101100001100
          - S-Box Result:     00100101000100001010100011110101   [per every group of 4-bits]
          - Split Into Two:   0010010100010000 [L] 1010100011110101 [R]
          - Swap Halves:      10101000111101010010010100010000
          - Bit Inversion:    01010111000010101101101011101111
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     00010101010110011100100011111100

          - FUNCTION OUTPUT:  00010101010110011100100011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100110000011101001101010111

       - FUNCTION OUTPUT:          00010101010110011100100011111100

       - Left XOR FUNCTION OUTPUT: 10010001100110000001101110101011

       - Next Round Left 32 Bits:  10001100001101100001101100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001100110000001101110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001000110011000000110111010101110001100001101100001101100001100

 > Processed Block:     1001000110011000000110111010101110001100001101100001101100001100



Plaintext Block 4: 0000010110011010101111010111010110010011111101101101001011111110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101100110101011110101110101

       - Right 32 Bits:            10010011111101101101001011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       10010011111101101101001011111110
          - S-Box Result:     00110001101100000110111010111100   [per every group of 4-bits]
          - Split Into Two:   0011000110110000 [L] 0110111010111100 [R]
          - Swap Halves:      01101110101111000011000110110000
          - Bit Inversion:    10010001010000111100111001001111
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     00001000011110001001001110010000

          - FUNCTION OUTPUT:  00001000011110001001001110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101100110101011110101110101

       - FUNCTION OUTPUT:          00001000011110001001001110010000

       - Left XOR FUNCTION OUTPUT: 00001101111000100010111011100101

       - Next Round Left 32 Bits:  10010011111101101101001011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101111000100010111011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011111101101101001011111110

       - Right 32 Bits:            00001101111000100010111011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       00001101111000100010111011100101
          - S-Box Result:     11110110110011101110110011001001   [per every group of 4-bits]
          - Split Into Two:   1111011011001110 [L] 1110110011001001 [R]
          - Swap Halves:      11101100110010011111011011001110
          - Bit Inversion:    00010011001101100000100100110001
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     00000000011101000101101000100011

          - FUNCTION OUTPUT:  00000000011101000101101000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011111101101101001011111110

       - FUNCTION OUTPUT:          00000000011101000101101000100011

       - Left XOR FUNCTION OUTPUT: 10010011100000101000100011011101

       - Next Round Left 32 Bits:  00001101111000100010111011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011100000101000100011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101111000100010111011100101

       - Right 32 Bits:            10010011100000101000100011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       10010011100000101000100011011101
          - S-Box Result:     00110001001011100010001001100110   [per every group of 4-bits]
          - Split Into Two:   0011000100101110 [L] 0010001001100110 [R]
          - Swap Halves:      00100010011001100011000100101110
          - Bit Inversion:    11011101100110011100111011010001
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     10001011011001011001100010001101

          - FUNCTION OUTPUT:  10001011011001011001100010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101111000100010111011100101

       - FUNCTION OUTPUT:          10001011011001011001100010001101

       - Left XOR FUNCTION OUTPUT: 10000110100001111011011001101000

       - Next Round Left 32 Bits:  10010011100000101000100011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110100001111011011001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011100000101000100011011101

       - Right 32 Bits:            10000110100001111011011001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       10000110100001111011011001101000
          - S-Box Result:     00100000001011011000000000000010   [per every group of 4-bits]
          - Split Into Two:   0010000000101101 [L] 1000000000000010 [R]
          - Swap Halves:      10000000000000100010000000101101
          - Bit Inversion:    01111111111111011101111111010010
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     00000011111101101000000110101001

          - FUNCTION OUTPUT:  00000011111101101000000110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011100000101000100011011101

       - FUNCTION OUTPUT:          00000011111101101000000110101001

       - Left XOR FUNCTION OUTPUT: 10010000011101000000100101110100

       - Next Round Left 32 Bits:  10000110100001111011011001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000011101000000100101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110100001111011011001101000

       - Right 32 Bits:            10010000011101000000100101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       10010000011101000000100101110100
          - S-Box Result:     00111111110101111111001111010111   [per every group of 4-bits]
          - Split Into Two:   0011111111010111 [L] 1111001111010111 [R]
          - Swap Halves:      11110011110101110011111111010111
          - Bit Inversion:    00001100001010001100000000101000
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     01000101111110101011101001001000

          - FUNCTION OUTPUT:  01000101111110101011101001001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110100001111011011001101000

       - FUNCTION OUTPUT:          01000101111110101011101001001000

       - Left XOR FUNCTION OUTPUT: 11000011011111010000110000100000

       - Next Round Left 32 Bits:  10010000011101000000100101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011011111010000110000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000011101000000100101110100

       - Right 32 Bits:            11000011011111010000110000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       11000011011111010000110000100000
          - S-Box Result:     01010001110101101111010111101111   [per every group of 4-bits]
          - Split Into Two:   0101000111010110 [L] 1111010111101111 [R]
          - Swap Halves:      11110101111011110101000111010110
          - Bit Inversion:    00001010000100001010111000101001
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11011001000011101110011011100100

          - FUNCTION OUTPUT:  11011001000011101110011011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000011101000000100101110100

       - FUNCTION OUTPUT:          11011001000011101110011011100100

       - Left XOR FUNCTION OUTPUT: 01001001011110101110111110010000

       - Next Round Left 32 Bits:  11000011011111010000110000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001011110101110111110010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011011111010000110000100000

       - Right 32 Bits:            01001001011110101110111110010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       01001001011110101110111110010000
          - S-Box Result:     01110011110101001100101100111111   [per every group of 4-bits]
          - Split Into Two:   0111001111010100 [L] 1100101100111111 [R]
          - Swap Halves:      11001011001111110111001111010100
          - Bit Inversion:    00110100110000001000110000101011
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     00000010101110100111011110011000

          - FUNCTION OUTPUT:  00000010101110100111011110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011011111010000110000100000

       - FUNCTION OUTPUT:          00000010101110100111011110011000

       - Left XOR FUNCTION OUTPUT: 11000001110001110111101110111000

       - Next Round Left 32 Bits:  01001001011110101110111110010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110001110111101110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001011110101110111110010000

       - Right 32 Bits:            11000001110001110111101110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       11000001110001110111101110111000
          - S-Box Result:     01011010010111011101100010000010   [per every group of 4-bits]
          - Split Into Two:   0101101001011101 [L] 1101100010000010 [R]
          - Swap Halves:      11011000100000100101101001011101
          - Bit Inversion:    00100111011111011010010110100010
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     01001011001101111000011110100100

          - FUNCTION OUTPUT:  01001011001101111000011110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001011110101110111110010000

       - FUNCTION OUTPUT:          01001011001101111000011110100100

       - Left XOR FUNCTION OUTPUT: 00000010010011010110100000110100

       - Next Round Left 32 Bits:  11000001110001110111101110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010010011010110100000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001110001110111101110111000

       - Right 32 Bits:            00000010010011010110100000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       00000010010011010110100000110100
          - S-Box Result:     11111110011101100000001000010111   [per every group of 4-bits]
          - Split Into Two:   1111111001110110 [L] 0000001000010111 [R]
          - Swap Halves:      00000010000101111111111001110110
          - Bit Inversion:    11111101111010000000000110001001
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     00110110001100101100111101010111

          - FUNCTION OUTPUT:  00110110001100101100111101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001110001110111101110111000

       - FUNCTION OUTPUT:          00110110001100101100111101010111

       - Left XOR FUNCTION OUTPUT: 11110111111101011011010011101111

       - Next Round Left 32 Bits:  00000010010011010110100000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111111101011011010011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010010011010110100000110100

       - Right 32 Bits:            11110111111101011011010011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       11110111111101011011010011101111
          - S-Box Result:     10111101101110011000011111001011   [per every group of 4-bits]
          - Split Into Two:   1011110110111001 [L] 1000011111001011 [R]
          - Swap Halves:      10000111110010111011110110111001
          - Bit Inversion:    01111000001101000100001001000110
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     11101000000011101101100001111100

          - FUNCTION OUTPUT:  11101000000011101101100001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010010011010110100000110100

       - FUNCTION OUTPUT:          11101000000011101101100001111100

       - Left XOR FUNCTION OUTPUT: 11101010010000111011000001001000

       - Next Round Left 32 Bits:  11110111111101011011010011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010010000111011000001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111111101011011010011101111

       - Right 32 Bits:            11101010010000111011000001001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       11101010010000111011000001001000
          - S-Box Result:     11000100011100011000111101110010   [per every group of 4-bits]
          - Split Into Two:   1100010001110001 [L] 1000111101110010 [R]
          - Swap Halves:      10001111011100101100010001110001
          - Bit Inversion:    01110000100011010011101110001110
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     01001111110001110010001111000110

          - FUNCTION OUTPUT:  01001111110001110010001111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111111101011011010011101111

       - FUNCTION OUTPUT:          01001111110001110010001111000110

       - Left XOR FUNCTION OUTPUT: 10111000001100101001011100101001

       - Next Round Left 32 Bits:  11101010010000111011000001001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000001100101001011100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010010000111011000001001000

       - Right 32 Bits:            10111000001100101001011100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       10111000001100101001011100101001
          - S-Box Result:     10000010000111100011110111100011   [per every group of 4-bits]
          - Split Into Two:   1000001000011110 [L] 0011110111100011 [R]
          - Swap Halves:      00111101111000111000001000011110
          - Bit Inversion:    11000010000111000111110111100001
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     10100000110001000010010000011010

          - FUNCTION OUTPUT:  10100000110001000010010000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010010000111011000001001000

       - FUNCTION OUTPUT:          10100000110001000010010000011010

       - Left XOR FUNCTION OUTPUT: 01001010100001111001010001010010

       - Next Round Left 32 Bits:  10111000001100101001011100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010100001111001010001010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000001100101001011100101001

       - Right 32 Bits:            01001010100001111001010001010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       01001010100001111001010001010010
          - S-Box Result:     01110100001011010011011110011110   [per every group of 4-bits]
          - Split Into Two:   0111010000101101 [L] 0011011110011110 [R]
          - Swap Halves:      00110111100111100111010000101101
          - Bit Inversion:    11001000011000011000101111010010
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     00000110011110101111100011110000

          - FUNCTION OUTPUT:  00000110011110101111100011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000001100101001011100101001

       - FUNCTION OUTPUT:          00000110011110101111100011110000

       - Left XOR FUNCTION OUTPUT: 10111110010010000110111111011001

       - Next Round Left 32 Bits:  01001010100001111001010001010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110010010000110111111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010100001111001010001010010

       - Right 32 Bits:            10111110010010000110111111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       10111110010010000110111111011001
          - S-Box Result:     10001100011100100000101101100011   [per every group of 4-bits]
          - Split Into Two:   1000110001110010 [L] 0000101101100011 [R]
          - Swap Halves:      00001011011000111000110001110010
          - Bit Inversion:    11110100100111000111001110001101
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     01101100110011000011011101000001

          - FUNCTION OUTPUT:  01101100110011000011011101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010100001111001010001010010

       - FUNCTION OUTPUT:          01101100110011000011011101000001

       - Left XOR FUNCTION OUTPUT: 00100110010010111010001100010011

       - Next Round Left 32 Bits:  10111110010010000110111111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110010010111010001100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110010010000110111111011001

       - Right 32 Bits:            00100110010010111010001100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       00100110010010111010001100010011
          - S-Box Result:     11100000011110000100000110100001   [per every group of 4-bits]
          - Split Into Two:   1110000001111000 [L] 0100000110100001 [R]
          - Swap Halves:      01000001101000011110000001111000
          - Bit Inversion:    10111110010111100001111110000111
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     10000101000000111100000000011110

          - FUNCTION OUTPUT:  10000101000000111100000000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110010010000110111111011001

       - FUNCTION OUTPUT:          10000101000000111100000000011110

       - Left XOR FUNCTION OUTPUT: 00111011010010111010111111000111

       - Next Round Left 32 Bits:  00100110010010111010001100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011010010111010111111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110010010111010001100010011

       - Right 32 Bits:            00111011010010111010111111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       00111011010010111010111111000111
          - S-Box Result:     00011000011110000100101101011101   [per every group of 4-bits]
          - Split Into Two:   0001100001111000 [L] 0100101101011101 [R]
          - Swap Halves:      01001011010111010001100001111000
          - Bit Inversion:    10110100101000101110011110000111
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     11110110111100011111010110010100

          - FUNCTION OUTPUT:  11110110111100011111010110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110010010111010001100010011

       - FUNCTION OUTPUT:          11110110111100011111010110010100

       - Left XOR FUNCTION OUTPUT: 11010000101110100101011010000111

       - Next Round Left 32 Bits:  00111011010010111010111111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000101110100101011010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101000010111010010101101000011100111011010010111010111111000111

 > Processed Block:     1101000010111010010101101000011100111011010010111010111111000111



Plaintext Block 5: 1111010101110010011101100110100110100010100000100111000011011111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101011100100111011001101001

       - Right 32 Bits:            10100010100000100111000011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       10100010100000100111000011011111
          - S-Box Result:     01001110001011101101111101101011   [per every group of 4-bits]
          - Split Into Two:   0100111000101110 [L] 1101111101101011 [R]
          - Swap Halves:      11011111011010110100111000101110
          - Bit Inversion:    00100000100101001011000111010001
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     10111001101011111110110000001110

          - FUNCTION OUTPUT:  10111001101011111110110000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101011100100111011001101001

       - FUNCTION OUTPUT:          10111001101011111110110000001110

       - Left XOR FUNCTION OUTPUT: 01001100110111011001101001100111

       - Next Round Left 32 Bits:  10100010100000100111000011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100110111011001101001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010100000100111000011011111

       - Right 32 Bits:            01001100110111011001101001100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       01001100110111011001101001100111
          - S-Box Result:     01110101011001100011010000001101   [per every group of 4-bits]
          - Split Into Two:   0111010101100110 [L] 0011010000001101 [R]
          - Swap Halves:      00110100000011010111010101100110
          - Bit Inversion:    11001011111100101000101010011001
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     11011000101100001101100110001011

          - FUNCTION OUTPUT:  11011000101100001101100110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010100000100111000011011111

       - FUNCTION OUTPUT:          11011000101100001101100110001011

       - Left XOR FUNCTION OUTPUT: 01111010001100101010100101010100

       - Next Round Left 32 Bits:  01001100110111011001101001100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010001100101010100101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100110111011001101001100111

       - Right 32 Bits:            01111010001100101010100101010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       01111010001100101010100101010100
          - S-Box Result:     11010100000111100100001110010111   [per every group of 4-bits]
          - Split Into Two:   1101010000011110 [L] 0100001110010111 [R]
          - Swap Halves:      01000011100101111101010000011110
          - Bit Inversion:    10111100011010000010101111100001
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     11101010100101000111110110111101

          - FUNCTION OUTPUT:  11101010100101000111110110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100110111011001101001100111

       - FUNCTION OUTPUT:          11101010100101000111110110111101

       - Left XOR FUNCTION OUTPUT: 10100110010010011110011111011010

       - Next Round Left 32 Bits:  01111010001100101010100101010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110010010011110011111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010001100101010100101010100

       - Right 32 Bits:            10100110010010011110011111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       10100110010010011110011111011010
          - S-Box Result:     01000000011100111100110101100100   [per every group of 4-bits]
          - Split Into Two:   0100000001110011 [L] 1100110101100100 [R]
          - Swap Halves:      11001101011001000100000001110011
          - Bit Inversion:    00110010100110111011111110001100
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     01001110100100001110000111110111

          - FUNCTION OUTPUT:  01001110100100001110000111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010001100101010100101010100

       - FUNCTION OUTPUT:          01001110100100001110000111110111

       - Left XOR FUNCTION OUTPUT: 00110100101000100100100010100011

       - Next Round Left 32 Bits:  10100110010010011110011111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100101000100100100010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110010010011110011111011010

       - Right 32 Bits:            00110100101000100100100010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       00110100101000100100100010100011
          - S-Box Result:     00010111010011100111001001000001   [per every group of 4-bits]
          - Split Into Two:   0001011101001110 [L] 0111001001000001 [R]
          - Swap Halves:      01110010010000010001011101001110
          - Bit Inversion:    10001101101111101110100010110001
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     11000100011011001001001011010001

          - FUNCTION OUTPUT:  11000100011011001001001011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110010010011110011111011010

       - FUNCTION OUTPUT:          11000100011011001001001011010001

       - Left XOR FUNCTION OUTPUT: 01100010001001010111010100001011

       - Next Round Left 32 Bits:  00110100101000100100100010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010001001010111010100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100101000100100100010100011

       - Right 32 Bits:            01100010001001010111010100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       01100010001001010111010100001011
          - S-Box Result:     00001110111010011101100111111000   [per every group of 4-bits]
          - Split Into Two:   0000111011101001 [L] 1101100111111000 [R]
          - Swap Halves:      11011001111110000000111011101001
          - Bit Inversion:    00100110000001111111000100010110
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11110101000110011011100111011011

          - FUNCTION OUTPUT:  11110101000110011011100111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100101000100100100010100011

       - FUNCTION OUTPUT:          11110101000110011011100111011011

       - Left XOR FUNCTION OUTPUT: 11000001101110111111000101111000

       - Next Round Left 32 Bits:  01100010001001010111010100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001101110111111000101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010001001010111010100001011

       - Right 32 Bits:            11000001101110111111000101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       11000001101110111111000101111000
          - S-Box Result:     01011010100010001011101011010010   [per every group of 4-bits]
          - Split Into Two:   0101101010001000 [L] 1011101011010010 [R]
          - Swap Halves:      10111010110100100101101010001000
          - Bit Inversion:    01000101001011011010010101110111
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     01110011010101110101111011000100

          - FUNCTION OUTPUT:  01110011010101110101111011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010001001010111010100001011

       - FUNCTION OUTPUT:          01110011010101110101111011000100

       - Left XOR FUNCTION OUTPUT: 00010001011100100010101111001111

       - Next Round Left 32 Bits:  11000001101110111111000101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001011100100010101111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001101110111111000101111000

       - Right 32 Bits:            00010001011100100010101111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       00010001011100100010101111001111
          - S-Box Result:     10101010110111101110100001011011   [per every group of 4-bits]
          - Split Into Two:   1010101011011110 [L] 1110100001011011 [R]
          - Swap Halves:      11101000010110111010101011011110
          - Bit Inversion:    00010111101001000101010100100001
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     01111011111011100111011100100111

          - FUNCTION OUTPUT:  01111011111011100111011100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001101110111111000101111000

       - FUNCTION OUTPUT:          01111011111011100111011100100111

       - Left XOR FUNCTION OUTPUT: 10111010010101011000011001011111

       - Next Round Left 32 Bits:  00010001011100100010101111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010010101011000011001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001011100100010101111001111

       - Right 32 Bits:            10111010010101011000011001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       10111010010101011000011001011111
          - S-Box Result:     10000100100110010010000010011011   [per every group of 4-bits]
          - Split Into Two:   1000010010011001 [L] 0010000010011011 [R]
          - Swap Halves:      00100000100110111000010010011001
          - Bit Inversion:    11011111011001000111101101100110
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     00010100101111101011010110111000

          - FUNCTION OUTPUT:  00010100101111101011010110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001011100100010101111001111

       - FUNCTION OUTPUT:          00010100101111101011010110111000

       - Left XOR FUNCTION OUTPUT: 00000101110011001001111001110111

       - Next Round Left 32 Bits:  10111010010101011000011001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101110011001001111001110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010010101011000011001011111

       - Right 32 Bits:            00000101110011001001111001110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       00000101110011001001111001110111
          - S-Box Result:     11111001010101010011110011011101   [per every group of 4-bits]
          - Split Into Two:   1111100101010101 [L] 0011110011011101 [R]
          - Swap Halves:      00111100110111011111100101010101
          - Bit Inversion:    11000011001000100000011010101010
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     01010011000110001001110010010000

          - FUNCTION OUTPUT:  01010011000110001001110010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010010101011000011001011111

       - FUNCTION OUTPUT:          01010011000110001001110010010000

       - Left XOR FUNCTION OUTPUT: 11101001010011010001101011001111

       - Next Round Left 32 Bits:  00000101110011001001111001110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001010011010001101011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101110011001001111001110111

       - Right 32 Bits:            11101001010011010001101011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       11101001010011010001101011001111
          - S-Box Result:     11000011011101101010010001011011   [per every group of 4-bits]
          - Split Into Two:   1100001101110110 [L] 1010010001011011 [R]
          - Swap Halves:      10100100010110111100001101110110
          - Bit Inversion:    01011011101001000011110010001001
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     01100100111011100010010011000001

          - FUNCTION OUTPUT:  01100100111011100010010011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101110011001001111001110111

       - FUNCTION OUTPUT:          01100100111011100010010011000001

       - Left XOR FUNCTION OUTPUT: 01100001001000101011101010110110

       - Next Round Left 32 Bits:  11101001010011010001101011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001001000101011101010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001010011010001101011001111

       - Right 32 Bits:            01100001001000101011101010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       01100001001000101011101010110110
          - S-Box Result:     00001010111011101000010010000000   [per every group of 4-bits]
          - Split Into Two:   0000101011101110 [L] 1000010010000000 [R]
          - Swap Halves:      10000100100000000000101011101110
          - Bit Inversion:    01111011011111111111010100010001
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     00011001101001111010110011101010

          - FUNCTION OUTPUT:  00011001101001111010110011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001010011010001101011001111

       - FUNCTION OUTPUT:          00011001101001111010110011101010

       - Left XOR FUNCTION OUTPUT: 11110000111010101011011000100101

       - Next Round Left 32 Bits:  01100001001000101011101010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000111010101011011000100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001001000101011101010110110

       - Right 32 Bits:            11110000111010101011011000100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       11110000111010101011011000100101
          - S-Box Result:     10111111110001001000000011101001   [per every group of 4-bits]
          - Split Into Two:   1011111111000100 [L] 1000000011101001 [R]
          - Swap Halves:      10000000111010011011111111000100
          - Bit Inversion:    01111111000101100100000000111011
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     10110001000011010011001100011001

          - FUNCTION OUTPUT:  10110001000011010011001100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001001000101011101010110110

       - FUNCTION OUTPUT:          10110001000011010011001100011001

       - Left XOR FUNCTION OUTPUT: 11010000001011111000100110101111

       - Next Round Left 32 Bits:  11110000111010101011011000100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000001011111000100110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000111010101011011000100101

       - Right 32 Bits:            11010000001011111000100110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       11010000001011111000100110101111
          - S-Box Result:     01101111111010110010001101001011   [per every group of 4-bits]
          - Split Into Two:   0110111111101011 [L] 0010001101001011 [R]
          - Swap Halves:      00100011010010110110111111101011
          - Bit Inversion:    11011100101101001001000000010100
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     01000100111001001101010011011000

          - FUNCTION OUTPUT:  01000100111001001101010011011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000111010101011011000100101

       - FUNCTION OUTPUT:          01000100111001001101010011011000

       - Left XOR FUNCTION OUTPUT: 10110100000011100110001011111101

       - Next Round Left 32 Bits:  11010000001011111000100110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100000011100110001011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000001011111000100110101111

       - Right 32 Bits:            10110100000011100110001011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       10110100000011100110001011111101
          - S-Box Result:     10000111111111000000111010110110   [per every group of 4-bits]
          - Split Into Two:   1000011111111100 [L] 0000111010110110 [R]
          - Swap Halves:      00001110101101101000011111111100
          - Bit Inversion:    11110001010010010111100000000011
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     11001010000101001010011110011010

          - FUNCTION OUTPUT:  11001010000101001010011110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000001011111000100110101111

       - FUNCTION OUTPUT:          11001010000101001010011110011010

       - Left XOR FUNCTION OUTPUT: 00011010001110110010111000110101

       - Next Round Left 32 Bits:  10110100000011100110001011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010001110110010111000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100000011100110001011111101

       - Right 32 Bits:            00011010001110110010111000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       00011010001110110010111000110101
          - S-Box Result:     10100100000110001110110000011001   [per every group of 4-bits]
          - Split Into Two:   1010010000011000 [L] 1110110000011001 [R]
          - Swap Halves:      11101100000110011010010000011000
          - Bit Inversion:    00010011111001100101101111100111
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     01010001101101010100100111110100

          - FUNCTION OUTPUT:  01010001101101010100100111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100000011100110001011111101

       - FUNCTION OUTPUT:          01010001101101010100100111110100

       - Left XOR FUNCTION OUTPUT: 11100101101110110010101100001001

       - Next Round Left 32 Bits:  00011010001110110010111000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101101110110010101100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110010110111011001010110000100100011010001110110010111000110101

 > Processed Block:     1110010110111011001010110000100100011010001110110010111000110101



Plaintext Block 6: 1110011010010010101101000011010001111101011011100111101011111100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110100100101011010000110100

       - Right 32 Bits:            01111101011011100111101011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       01111101011011100111101011111100
          - S-Box Result:     11010110000011001101010010110101   [per every group of 4-bits]
          - Split Into Two:   1101011000001100 [L] 1101010010110101 [R]
          - Swap Halves:      11010100101101011101011000001100
          - Bit Inversion:    00101011010010100010100111110011
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     10110010011100010111010000101100

          - FUNCTION OUTPUT:  10110010011100010111010000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110100100101011010000110100

       - FUNCTION OUTPUT:          10110010011100010111010000101100

       - Left XOR FUNCTION OUTPUT: 01010100111000111100000000011000

       - Next Round Left 32 Bits:  01111101011011100111101011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100111000111100000000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101011011100111101011111100

       - Right 32 Bits:            01010100111000111100000000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       01010100111000111100000000011000
          - S-Box Result:     10010111110000010101111110100010   [per every group of 4-bits]
          - Split Into Two:   1001011111000001 [L] 0101111110100010 [R]
          - Swap Halves:      01011111101000101001011111000001
          - Bit Inversion:    10100000010111010110100000111110
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     10110011000111110011101100101100

          - FUNCTION OUTPUT:  10110011000111110011101100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101011011100111101011111100

       - FUNCTION OUTPUT:          10110011000111110011101100101100

       - Left XOR FUNCTION OUTPUT: 11001110011100010100000111010000

       - Next Round Left 32 Bits:  01010100111000111100000000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110011100010100000111010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100111000111100000000011000

       - Right 32 Bits:            11001110011100010100000111010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       11001110011100010100000111010000
          - S-Box Result:     01011100110110100111101001101111   [per every group of 4-bits]
          - Split Into Two:   0101110011011010 [L] 0111101001101111 [R]
          - Swap Halves:      01111010011011110101110011011010
          - Bit Inversion:    10000101100100001010001100100101
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     11010011011011001111010101111001

          - FUNCTION OUTPUT:  11010011011011001111010101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100111000111100000000011000

       - FUNCTION OUTPUT:          11010011011011001111010101111001

       - Left XOR FUNCTION OUTPUT: 10000111100011110011010101100001

       - Next Round Left 32 Bits:  11001110011100010100000111010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111100011110011010101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110011100010100000111010000

       - Right 32 Bits:            10000111100011110011010101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       10000111100011110011010101100001
          - S-Box Result:     00101101001010110001100100001010   [per every group of 4-bits]
          - Split Into Two:   0010110100101011 [L] 0001100100001010 [R]
          - Swap Halves:      00011001000010100010110100101011
          - Bit Inversion:    11100110111101011101001011010100
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     10011010111111101000110010101111

          - FUNCTION OUTPUT:  10011010111111101000110010101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110011100010100000111010000

       - FUNCTION OUTPUT:          10011010111111101000110010101111

       - Left XOR FUNCTION OUTPUT: 01010100100011111100110101111111

       - Next Round Left 32 Bits:  10000111100011110011010101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100100011111100110101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111100011110011010101100001

       - Right 32 Bits:            01010100100011111100110101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       01010100100011111100110101111111
          - S-Box Result:     10010111001010110101011011011011   [per every group of 4-bits]
          - Split Into Two:   1001011100101011 [L] 0101011011011011 [R]
          - Swap Halves:      01010110110110111001011100101011
          - Bit Inversion:    10101001001001000110100011010100
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     11100000111101100001001010110100

          - FUNCTION OUTPUT:  11100000111101100001001010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111100011110011010101100001

       - FUNCTION OUTPUT:          11100000111101100001001010110100

       - Left XOR FUNCTION OUTPUT: 01100111011110010010011111010101

       - Next Round Left 32 Bits:  01010100100011111100110101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111011110010010011111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100100011111100110101111111

       - Right 32 Bits:            01100111011110010010011111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       01100111011110010010011111010101
          - S-Box Result:     00001101110100111110110101101001   [per every group of 4-bits]
          - Split Into Two:   0000110111010011 [L] 1110110101101001 [R]
          - Swap Halves:      11101101011010010000110111010011
          - Bit Inversion:    00010010100101101111001000101100
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11000001100010001011101011100001

          - FUNCTION OUTPUT:  11000001100010001011101011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100100011111100110101111111

       - FUNCTION OUTPUT:          11000001100010001011101011100001

       - Left XOR FUNCTION OUTPUT: 10010101000001110111011110011110

       - Next Round Left 32 Bits:  01100111011110010010011111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101000001110111011110011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111011110010010011111010101

       - Right 32 Bits:            10010101000001110111011110011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       10010101000001110111011110011110
          - S-Box Result:     00111001111111011101110100111100   [per every group of 4-bits]
          - Split Into Two:   0011100111111101 [L] 1101110100111100 [R]
          - Swap Halves:      11011101001111000011100111111101
          - Bit Inversion:    00100010110000111100011000000010
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     00010100101110010011110110110001

          - FUNCTION OUTPUT:  00010100101110010011110110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111011110010010011111010101

       - FUNCTION OUTPUT:          00010100101110010011110110110001

       - Left XOR FUNCTION OUTPUT: 01110011110000000001101001100100

       - Next Round Left 32 Bits:  10010101000001110111011110011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011110000000001101001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101000001110111011110011110

       - Right 32 Bits:            01110011110000000001101001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       01110011110000000001101001100100
          - S-Box Result:     11010001010111111010010000000111   [per every group of 4-bits]
          - Split Into Two:   1101000101011111 [L] 1010010000000111 [R]
          - Swap Halves:      10100100000001111101000101011111
          - Bit Inversion:    01011011111110000010111010100000
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     00110111101100100000110010100110

          - FUNCTION OUTPUT:  00110111101100100000110010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101000001110111011110011110

       - FUNCTION OUTPUT:          00110111101100100000110010100110

       - Left XOR FUNCTION OUTPUT: 10100010101101010111101100111000

       - Next Round Left 32 Bits:  01110011110000000001101001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010101101010111101100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011110000000001101001100100

       - Right 32 Bits:            10100010101101010111101100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       10100010101101010111101100111000
          - S-Box Result:     01001110100010011101100000010010   [per every group of 4-bits]
          - Split Into Two:   0100111010001001 [L] 1101100000010010 [R]
          - Swap Halves:      11011000000100100100111010001001
          - Bit Inversion:    00100111111011011011000101110110
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     11101100001101110111111110101000

          - FUNCTION OUTPUT:  11101100001101110111111110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011110000000001101001100100

       - FUNCTION OUTPUT:          11101100001101110111111110101000

       - Left XOR FUNCTION OUTPUT: 10011111111101110110010111001100

       - Next Round Left 32 Bits:  10100010101101010111101100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111111101110110010111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010101101010111101100111000

       - Right 32 Bits:            10011111111101110110010111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       10011111111101110110010111001100
          - S-Box Result:     00111011101111010000100101010101   [per every group of 4-bits]
          - Split Into Two:   0011101110111101 [L] 0000100101010101 [R]
          - Swap Halves:      00001001010101010011101110111101
          - Bit Inversion:    11110110101010101100010001000010
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     01100110100100000101111001111000

          - FUNCTION OUTPUT:  01100110100100000101111001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010101101010111101100111000

       - FUNCTION OUTPUT:          01100110100100000101111001111000

       - Left XOR FUNCTION OUTPUT: 11000100001001010010010101000000

       - Next Round Left 32 Bits:  10011111111101110110010111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100001001010010010101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111111101110110010111001100

       - Right 32 Bits:            11000100001001010010010101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       11000100001001010010010101000000
          - S-Box Result:     01010111111010011110100101111111   [per every group of 4-bits]
          - Split Into Two:   0101011111101001 [L] 1110100101111111 [R]
          - Swap Halves:      11101001011111110101011111101001
          - Bit Inversion:    00010110100000001010100000010110
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     00101001110010101011000001011110

          - FUNCTION OUTPUT:  00101001110010101011000001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111111101110110010111001100

       - FUNCTION OUTPUT:          00101001110010101011000001011110

       - Left XOR FUNCTION OUTPUT: 10110110001111011101010110010010

       - Next Round Left 32 Bits:  11000100001001010010010101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110001111011101010110010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100001001010010010101000000

       - Right 32 Bits:            10110110001111011101010110010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       10110110001111011101010110010010
          - S-Box Result:     10000000000101100110100100111110   [per every group of 4-bits]
          - Split Into Two:   1000000000010110 [L] 0110100100111110 [R]
          - Swap Halves:      01101001001111101000000000010110
          - Bit Inversion:    10010110110000010111111111101001
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     11110100000110010010011000010010

          - FUNCTION OUTPUT:  11110100000110010010011000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100001001010010010101000000

       - FUNCTION OUTPUT:          11110100000110010010011000010010

       - Left XOR FUNCTION OUTPUT: 00110000001111000000001101010010

       - Next Round Left 32 Bits:  10110110001111011101010110010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000001111000000001101010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110001111011101010110010010

       - Right 32 Bits:            00110000001111000000001101010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       00110000001111000000001101010010
          - S-Box Result:     00011111000101011111000110011110   [per every group of 4-bits]
          - Split Into Two:   0001111100010101 [L] 1111000110011110 [R]
          - Swap Halves:      11110001100111100001111100010101
          - Bit Inversion:    00001110011000011110000011101010
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     11000000011110101001001111001000

          - FUNCTION OUTPUT:  11000000011110101001001111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110001111011101010110010010

       - FUNCTION OUTPUT:          11000000011110101001001111001000

       - Left XOR FUNCTION OUTPUT: 01110110010001110100011001011010

       - Next Round Left 32 Bits:  00110000001111000000001101010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110010001110100011001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000001111000000001101010010

       - Right 32 Bits:            01110110010001110100011001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       01110110010001110100011001011010
          - S-Box Result:     11010000011111010111000010010100   [per every group of 4-bits]
          - Split Into Two:   1101000001111101 [L] 0111000010010100 [R]
          - Swap Halves:      01110000100101001101000001111101
          - Bit Inversion:    10001111011010110010111110000010
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     00010111001110110110101101001110

          - FUNCTION OUTPUT:  00010111001110110110101101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000001111000000001101010010

       - FUNCTION OUTPUT:          00010111001110110110101101001110

       - Left XOR FUNCTION OUTPUT: 00100111000001110110100000011100

       - Next Round Left 32 Bits:  01110110010001110100011001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111000001110110100000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110010001110100011001011010

       - Right 32 Bits:            00100111000001110110100000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       00100111000001110110100000011100
          - S-Box Result:     11101101111111010000001010100101   [per every group of 4-bits]
          - Split Into Two:   1110110111111101 [L] 0000001010100101 [R]
          - Swap Halves:      00000010101001011110110111111101
          - Bit Inversion:    11111101010110100001001000000010
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     11000110000001111100110110011011

          - FUNCTION OUTPUT:  11000110000001111100110110011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110010001110100011001011010

       - FUNCTION OUTPUT:          11000110000001111100110110011011

       - Left XOR FUNCTION OUTPUT: 10110000010000001000101111000001

       - Next Round Left 32 Bits:  00100111000001110110100000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000010000001000101111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111000001110110100000011100

       - Right 32 Bits:            10110000010000001000101111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       10110000010000001000101111000001
          - S-Box Result:     10001111011111110010100001011010   [per every group of 4-bits]
          - Split Into Two:   1000111101111111 [L] 0010100001011010 [R]
          - Swap Halves:      00101000010110101000111101111111
          - Bit Inversion:    11010111101001010111000010000000
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     10010101111101100110001010010011

          - FUNCTION OUTPUT:  10010101111101100110001010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111000001110110100000011100

       - FUNCTION OUTPUT:          10010101111101100110001010010011

       - Left XOR FUNCTION OUTPUT: 10110010111100010000101010001111

       - Next Round Left 32 Bits:  10110000010000001000101111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010111100010000101010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011001011110001000010101000111110110000010000001000101111000001

 > Processed Block:     1011001011110001000010101000111110110000010000001000101111000001



Plaintext Block 7: 1010011110011010111101000111101111111111111100100010000111111010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111100110101111010001111011

       - Right 32 Bits:            11111111111100100010000111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       11111111111100100010000111111010
          - S-Box Result:     10111011101111101110101010110100   [per every group of 4-bits]
          - Split Into Two:   1011101110111110 [L] 1110101010110100 [R]
          - Swap Halves:      11101010101101001011101110111110
          - Bit Inversion:    00010101010010110100010001000001
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     10001100011100000001100110011110

          - FUNCTION OUTPUT:  10001100011100000001100110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111100110101111010001111011

       - FUNCTION OUTPUT:          10001100011100000001100110011110

       - Left XOR FUNCTION OUTPUT: 00101011111010101110110111100101

       - Next Round Left 32 Bits:  11111111111100100010000111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011111010101110110111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111111100100010000111111010

       - Right 32 Bits:            00101011111010101110110111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       00101011111010101110110111100101
          - S-Box Result:     11101000110001001100011011001001   [per every group of 4-bits]
          - Split Into Two:   1110100011000100 [L] 1100011011001001 [R]
          - Swap Halves:      11000110110010011110100011000100
          - Bit Inversion:    00111001001101100001011100111011
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     00101010011101000100010000101001

          - FUNCTION OUTPUT:  00101010011101000100010000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111111100100010000111111010

       - FUNCTION OUTPUT:          00101010011101000100010000101001

       - Left XOR FUNCTION OUTPUT: 11010101100001100110010111010011

       - Next Round Left 32 Bits:  00101011111010101110110111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101100001100110010111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011111010101110110111100101

       - Right 32 Bits:            11010101100001100110010111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       11010101100001100110010111010011
          - S-Box Result:     01101001001000000000100101100001   [per every group of 4-bits]
          - Split Into Two:   0110100100100000 [L] 0000100101100001 [R]
          - Swap Halves:      00001001011000010110100100100000
          - Bit Inversion:    11110110100111101001011011011111
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     10100000011000101100000010000011

          - FUNCTION OUTPUT:  10100000011000101100000010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011111010101110110111100101

       - FUNCTION OUTPUT:          10100000011000101100000010000011

       - Left XOR FUNCTION OUTPUT: 10001011100010000010110101100110

       - Next Round Left 32 Bits:  11010101100001100110010111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011100010000010110101100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101100001100110010111010011

       - Right 32 Bits:            10001011100010000010110101100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       10001011100010000010110101100110
          - S-Box Result:     00101000001000101110011000000000   [per every group of 4-bits]
          - Split Into Two:   0010100000100010 [L] 1110011000000000 [R]
          - Swap Halves:      11100110000000000010100000100010
          - Bit Inversion:    00011001111111111101011111011101
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     01100101111101001000100110100110

          - FUNCTION OUTPUT:  01100101111101001000100110100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101100001100110010111010011

       - FUNCTION OUTPUT:          01100101111101001000100110100110

       - Left XOR FUNCTION OUTPUT: 10110000011100101110110001110101

       - Next Round Left 32 Bits:  10001011100010000010110101100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000011100101110110001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100010000010110101100110

       - Right 32 Bits:            10110000011100101110110001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       10110000011100101110110001110101
          - S-Box Result:     10001111110111101100010111011001   [per every group of 4-bits]
          - Split Into Two:   1000111111011110 [L] 1100010111011001 [R]
          - Swap Halves:      11000101110110011000111111011110
          - Bit Inversion:    00111010001001100111000000100001
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     01110011111101000000101001000001

          - FUNCTION OUTPUT:  01110011111101000000101001000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100010000010110101100110

       - FUNCTION OUTPUT:          01110011111101000000101001000001

       - Left XOR FUNCTION OUTPUT: 11111000011111000010011100100111

       - Next Round Left 32 Bits:  10110000011100101110110001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000011111000010011100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000011100101110110001110101

       - Right 32 Bits:            11111000011111000010011100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       11111000011111000010011100100111
          - S-Box Result:     10110010110101011110110111101101   [per every group of 4-bits]
          - Split Into Two:   1011001011010101 [L] 1110110111101101 [R]
          - Swap Halves:      11101101111011011011001011010101
          - Bit Inversion:    00010010000100100100110100101010
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11000001000011000000010111100111

          - FUNCTION OUTPUT:  11000001000011000000010111100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000011100101110110001110101

       - FUNCTION OUTPUT:          11000001000011000000010111100111

       - Left XOR FUNCTION OUTPUT: 01110001011111101110100110010010

       - Next Round Left 32 Bits:  11111000011111000010011100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001011111101110100110010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000011111000010011100100111

       - Right 32 Bits:            01110001011111101110100110010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       01110001011111101110100110010010
          - S-Box Result:     11011010110111001100001100111110   [per every group of 4-bits]
          - Split Into Two:   1101101011011100 [L] 1100001100111110 [R]
          - Swap Halves:      11000011001111101101101011011100
          - Bit Inversion:    00111100110000010010010100100011
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     00001010101110111101111010010000

          - FUNCTION OUTPUT:  00001010101110111101111010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000011111000010011100100111

       - FUNCTION OUTPUT:          00001010101110111101111010010000

       - Left XOR FUNCTION OUTPUT: 11110010110001111111100110110111

       - Next Round Left 32 Bits:  01110001011111101110100110010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010110001111111100110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001011111101110100110010010

       - Right 32 Bits:            11110010110001111111100110110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       11110010110001111111100110110111
          - S-Box Result:     10111110010111011011001110001101   [per every group of 4-bits]
          - Split Into Two:   1011111001011101 [L] 1011001110001101 [R]
          - Swap Halves:      10110011100011011011111001011101
          - Bit Inversion:    01001100011100100100000110100010
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     00100000001110000110001110100100

          - FUNCTION OUTPUT:  00100000001110000110001110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001011111101110100110010010

       - FUNCTION OUTPUT:          00100000001110000110001110100100

       - Left XOR FUNCTION OUTPUT: 01010001010001101000101000110110

       - Next Round Left 32 Bits:  11110010110001111111100110110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001010001101000101000110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010110001111111100110110111

       - Right 32 Bits:            01010001010001101000101000110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       01010001010001101000101000110110
          - S-Box Result:     10011010011100000010010000010000   [per every group of 4-bits]
          - Split Into Two:   1001101001110000 [L] 0010010000010000 [R]
          - Swap Halves:      00100100000100001001101001110000
          - Bit Inversion:    11011011111011110110010110001111
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     00010000001101011010101101010001

          - FUNCTION OUTPUT:  00010000001101011010101101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010110001111111100110110111

       - FUNCTION OUTPUT:          00010000001101011010101101010001

       - Left XOR FUNCTION OUTPUT: 11100010111100100101001011100110

       - Next Round Left 32 Bits:  01010001010001101000101000110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111100100101001011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001010001101000101000110110

       - Right 32 Bits:            11100010111100100101001011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       11100010111100100101001011100110
          - S-Box Result:     11001110101111101001111011000000   [per every group of 4-bits]
          - Split Into Two:   1100111010111110 [L] 1001111011000000 [R]
          - Swap Halves:      10011110110000001100111010111110
          - Bit Inversion:    01100001001111110011000101000001
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     11110001000001011010101101111011

          - FUNCTION OUTPUT:  11110001000001011010101101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001010001101000101000110110

       - FUNCTION OUTPUT:          11110001000001011010101101111011

       - Left XOR FUNCTION OUTPUT: 10100000010000110010000101001101

       - Next Round Left 32 Bits:  11100010111100100101001011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000010000110010000101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111100100101001011100110

       - Right 32 Bits:            10100000010000110010000101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       10100000010000110010000101001101
          - S-Box Result:     01001111011100011110101001110110   [per every group of 4-bits]
          - Split Into Two:   0100111101110001 [L] 1110101001110110 [R]
          - Swap Halves:      11101010011101100100111101110001
          - Bit Inversion:    00010101100010011011000010001110
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     00101010110000111010100011000110

          - FUNCTION OUTPUT:  00101010110000111010100011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111100100101001011100110

       - FUNCTION OUTPUT:          00101010110000111010100011000110

       - Left XOR FUNCTION OUTPUT: 11001000001100011111101000100000

       - Next Round Left 32 Bits:  10100000010000110010000101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000001100011111101000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000010000110010000101001101

       - Right 32 Bits:            11001000001100011111101000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       11001000001100011111101000100000
          - S-Box Result:     01010010000110101011010011101111   [per every group of 4-bits]
          - Split Into Two:   0101001000011010 [L] 1011010011101111 [R]
          - Swap Halves:      10110100111011110101001000011010
          - Bit Inversion:    01001011000100001010110111100101
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     00101001110010001111010000011110

          - FUNCTION OUTPUT:  00101001110010001111010000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000010000110010000101001101

       - FUNCTION OUTPUT:          00101001110010001111010000011110

       - Left XOR FUNCTION OUTPUT: 10001001100010111101010101010011

       - Next Round Left 32 Bits:  11001000001100011111101000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001100010111101010101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000001100011111101000100000

       - Right 32 Bits:            10001001100010111101010101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       10001001100010111101010101010011
          - S-Box Result:     00100011001010000110100110010001   [per every group of 4-bits]
          - Split Into Two:   0010001100101000 [L] 0110100110010001 [R]
          - Swap Halves:      01101001100100010010001100101000
          - Bit Inversion:    10010110011011101101110011010111
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     01011000011101011010111111110101

          - FUNCTION OUTPUT:  01011000011101011010111111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000001100011111101000100000

       - FUNCTION OUTPUT:          01011000011101011010111111110101

       - Left XOR FUNCTION OUTPUT: 10010000010001000101010111010101

       - Next Round Left 32 Bits:  10001001100010111101010101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000010001000101010111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001100010111101010101010011

       - Right 32 Bits:            10010000010001000101010111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       10010000010001000101010111010101
          - S-Box Result:     00111111011101111001100101101001   [per every group of 4-bits]
          - Split Into Two:   0011111101110111 [L] 1001100101101001 [R]
          - Swap Halves:      10011001011010010011111101110111
          - Bit Inversion:    01100110100101101100000010001000
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     11111110110001101000010001000100

          - FUNCTION OUTPUT:  11111110110001101000010001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001100010111101010101010011

       - FUNCTION OUTPUT:          11111110110001101000010001000100

       - Left XOR FUNCTION OUTPUT: 01110111010011010101000100010111

       - Next Round Left 32 Bits:  10010000010001000101010111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111010011010101000100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000010001000101010111010101

       - Right 32 Bits:            01110111010011010101000100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       01110111010011010101000100010111
          - S-Box Result:     11011101011101101001101010101101   [per every group of 4-bits]
          - Split Into Two:   1101110101110110 [L] 1001101010101101 [R]
          - Swap Halves:      10011010101011011101110101110110
          - Bit Inversion:    01100101010100100010001010001001
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     01011110000011111111110100010000

          - FUNCTION OUTPUT:  01011110000011111111110100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000010001000101010111010101

       - FUNCTION OUTPUT:          01011110000011111111110100010000

       - Left XOR FUNCTION OUTPUT: 11001110010010111010100011000101

       - Next Round Left 32 Bits:  01110111010011010101000100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110010010111010100011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111010011010101000100010111

       - Right 32 Bits:            11001110010010111010100011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       11001110010010111010100011000101
          - S-Box Result:     01011100011110000100001001011001   [per every group of 4-bits]
          - Split Into Two:   0101110001111000 [L] 0100001001011001 [R]
          - Swap Halves:      01000010010110010101110001111000
          - Bit Inversion:    10111101101001101010001110000111
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     11111111111101011011000110010100

          - FUNCTION OUTPUT:  11111111111101011011000110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111010011010101000100010111

       - FUNCTION OUTPUT:          11111111111101011011000110010100

       - Left XOR FUNCTION OUTPUT: 10001000101110001110000010000011

       - Next Round Left 32 Bits:  11001110010010111010100011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000101110001110000010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000100010111000111000001000001111001110010010111010100011000101

 > Processed Block:     1000100010111000111000001000001111001110010010111010100011000101



Plaintext Block 8: 1110111101110110001010000011110110111010111011001011001111011000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111011101100010100000111101

       - Right 32 Bits:            10111010111011001011001111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       10111010111011001011001111011000
          - S-Box Result:     10000100110001011000000101100010   [per every group of 4-bits]
          - Split Into Two:   1000010011000101 [L] 1000000101100010 [R]
          - Swap Halves:      10000001011000101000010011000101
          - Bit Inversion:    01111110100111010111101100111010
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     11100111101001100010011011100101

          - FUNCTION OUTPUT:  11100111101001100010011011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111011101100010100000111101

       - FUNCTION OUTPUT:          11100111101001100010011011100101

       - Left XOR FUNCTION OUTPUT: 00001000110100000000111011011000

       - Next Round Left 32 Bits:  10111010111011001011001111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000110100000000111011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010111011001011001111011000

       - Right 32 Bits:            00001000110100000000111011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       00001000110100000000111011011000
          - S-Box Result:     11110010011011111111110001100010   [per every group of 4-bits]
          - Split Into Two:   1111001001101111 [L] 1111110001100010 [R]
          - Swap Halves:      11111100011000101111001001101111
          - Bit Inversion:    00000011100111010000110110010000
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     00010000110111110101111010000010

          - FUNCTION OUTPUT:  00010000110111110101111010000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010111011001011001111011000

       - FUNCTION OUTPUT:          00010000110111110101111010000010

       - Left XOR FUNCTION OUTPUT: 10101010001100111110110101011010

       - Next Round Left 32 Bits:  00001000110100000000111011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010001100111110110101011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000110100000000111011011000

       - Right 32 Bits:            10101010001100111110110101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       10101010001100111110110101011010
          - S-Box Result:     01000100000100011100011010010100   [per every group of 4-bits]
          - Split Into Two:   0100010000010001 [L] 1100011010010100 [R]
          - Swap Halves:      11000110100101000100010000010001
          - Bit Inversion:    00111001011010111011101111101110
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     01101111100101111110110110110010

          - FUNCTION OUTPUT:  01101111100101111110110110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000110100000000111011011000

       - FUNCTION OUTPUT:          01101111100101111110110110110010

       - Left XOR FUNCTION OUTPUT: 01100111010001111110001101101010

       - Next Round Left 32 Bits:  10101010001100111110110101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111010001111110001101101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010001100111110110101011010

       - Right 32 Bits:            01100111010001111110001101101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       01100111010001111110001101101010
          - S-Box Result:     00001101011111011100000100000100   [per every group of 4-bits]
          - Split Into Two:   0000110101111101 [L] 1100000100000100 [R]
          - Swap Halves:      11000001000001000000110101111101
          - Bit Inversion:    00111110111110111111001010000010
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     01000010111100001010110011111001

          - FUNCTION OUTPUT:  01000010111100001010110011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010001100111110110101011010

       - FUNCTION OUTPUT:          01000010111100001010110011111001

       - Left XOR FUNCTION OUTPUT: 11101000110000110100000110100011

       - Next Round Left 32 Bits:  01100111010001111110001101101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000110000110100000110100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111010001111110001101101010

       - Right 32 Bits:            11101000110000110100000110100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       11101000110000110100000110100011
          - S-Box Result:     11000010010100010111101001000001   [per every group of 4-bits]
          - Split Into Two:   1100001001010001 [L] 0111101001000001 [R]
          - Swap Halves:      01111010010000011100001001010001
          - Bit Inversion:    10000101101111100011110110101110
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     11001100011011000100011111001110

          - FUNCTION OUTPUT:  11001100011011000100011111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111010001111110001101101010

       - FUNCTION OUTPUT:          11001100011011000100011111001110

       - Left XOR FUNCTION OUTPUT: 10101011001010111010010010100100

       - Next Round Left 32 Bits:  11101000110000110100000110100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011001010111010010010100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000110000110100000110100011

       - Right 32 Bits:            10101011001010111010010010100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       10101011001010111010010010100100
          - S-Box Result:     01001000111010000100011101000111   [per every group of 4-bits]
          - Split Into Two:   0100100011101000 [L] 0100011101000111 [R]
          - Swap Halves:      01000111010001110100100011101000
          - Bit Inversion:    10111000101110001011011100010111
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     01101011101001101111111111011010

          - FUNCTION OUTPUT:  01101011101001101111111111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000110000110100000110100011

       - FUNCTION OUTPUT:          01101011101001101111111111011010

       - Left XOR FUNCTION OUTPUT: 10000011011001011011111001111001

       - Next Round Left 32 Bits:  10101011001010111010010010100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011011001011011111001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011001010111010010010100100

       - Right 32 Bits:            10000011011001011011111001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       10000011011001011011111001111001
          - S-Box Result:     00100001000010011000110011010011   [per every group of 4-bits]
          - Split Into Two:   0010000100001001 [L] 1000110011010011 [R]
          - Swap Halves:      10001100110100110010000100001001
          - Bit Inversion:    01110011001011001101111011110110
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     01000101010101100010010101000101

          - FUNCTION OUTPUT:  01000101010101100010010101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011001010111010010010100100

       - FUNCTION OUTPUT:          01000101010101100010010101000101

       - Left XOR FUNCTION OUTPUT: 11101110011111011000000111100001

       - Next Round Left 32 Bits:  10000011011001011011111001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110011111011000000111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011011001011011111001111001

       - Right 32 Bits:            11101110011111011000000111100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       11101110011111011000000111100001
          - S-Box Result:     11001100110101100010101011001010   [per every group of 4-bits]
          - Split Into Two:   1100110011010110 [L] 0010101011001010 [R]
          - Swap Halves:      00101010110010101100110011010110
          - Bit Inversion:    11010101001101010011001100101001
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     10111001011111110001000100101111

          - FUNCTION OUTPUT:  10111001011111110001000100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011011001011011111001111001

       - FUNCTION OUTPUT:          10111001011111110001000100101111

       - Left XOR FUNCTION OUTPUT: 00111010000110101010111101010110

       - Next Round Left 32 Bits:  11101110011111011000000111100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010000110101010111101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110011111011000000111100001

       - Right 32 Bits:            00111010000110101010111101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       00111010000110101010111101010110
          - S-Box Result:     00010100101001000100101110010000   [per every group of 4-bits]
          - Split Into Two:   0001010010100100 [L] 0100101110010000 [R]
          - Swap Halves:      01001011100100000001010010100100
          - Bit Inversion:    10110100011011111110101101011011
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     01111111101101010010010110000101

          - FUNCTION OUTPUT:  01111111101101010010010110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110011111011000000111100001

       - FUNCTION OUTPUT:          01111111101101010010010110000101

       - Left XOR FUNCTION OUTPUT: 10010001110010001010010001100100

       - Next Round Left 32 Bits:  00111010000110101010111101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001110010001010010001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010000110101010111101010110

       - Right 32 Bits:            10010001110010001010010001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       10010001110010001010010001100100
          - S-Box Result:     00111010010100100100011100000111   [per every group of 4-bits]
          - Split Into Two:   0011101001010010 [L] 0100011100000111 [R]
          - Swap Halves:      01000111000001110011101001010010
          - Bit Inversion:    10111000111110001100010110101101
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     00101000110000100101111110010111

          - FUNCTION OUTPUT:  00101000110000100101111110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010000110101010111101010110

       - FUNCTION OUTPUT:          00101000110000100101111110010111

       - Left XOR FUNCTION OUTPUT: 00010010110110001111000011000001

       - Next Round Left 32 Bits:  10010001110010001010010001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010110110001111000011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001110010001010010001100100

       - Right 32 Bits:            00010010110110001111000011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       00010010110110001111000011000001
          - S-Box Result:     10101110011000101011111101011010   [per every group of 4-bits]
          - Split Into Two:   1010111001100010 [L] 1011111101011010 [R]
          - Swap Halves:      10111111010110101010111001100010
          - Bit Inversion:    01000000101001010101000110011101
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     01111111111011110100100111010101

          - FUNCTION OUTPUT:  01111111111011110100100111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001110010001010010001100100

       - FUNCTION OUTPUT:          01111111111011110100100111010101

       - Left XOR FUNCTION OUTPUT: 11101110001001111110110110110001

       - Next Round Left 32 Bits:  00010010110110001111000011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110001001111110110110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010110110001111000011000001

       - Right 32 Bits:            11101110001001111110110110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       11101110001001111110110110110001
          - S-Box Result:     11001100111011011100011010001010   [per every group of 4-bits]
          - Split Into Two:   1100110011101101 [L] 1100011010001010 [R]
          - Swap Halves:      11000110100010101100110011101101
          - Bit Inversion:    00111001011101010011001100010010
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     01011011101011010110101011101001

          - FUNCTION OUTPUT:  01011011101011010110101011101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010110110001111000011000001

       - FUNCTION OUTPUT:          01011011101011010110101011101001

       - Left XOR FUNCTION OUTPUT: 01001001011101011001101000101000

       - Next Round Left 32 Bits:  11101110001001111110110110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001011101011001101000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110001001111110110110110001

       - Right 32 Bits:            01001001011101011001101000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       01001001011101011001101000101000
          - S-Box Result:     01110011110110010011010011100010   [per every group of 4-bits]
          - Split Into Two:   0111001111011001 [L] 0011010011100010 [R]
          - Swap Halves:      00110100111000100111001111011001
          - Bit Inversion:    11001011000111011000110000100110
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     00000101000001101111111100000100

          - FUNCTION OUTPUT:  00000101000001101111111100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110001001111110110110110001

       - FUNCTION OUTPUT:          00000101000001101111111100000100

       - Left XOR FUNCTION OUTPUT: 11101011001000010001001010110101

       - Next Round Left 32 Bits:  01001001011101011001101000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011001000010001001010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001011101011001101000101000

       - Right 32 Bits:            11101011001000010001001010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       11101011001000010001001010110101
          - S-Box Result:     11001000111010101010111010001001   [per every group of 4-bits]
          - Split Into Two:   1100100011101010 [L] 1010111010001001 [R]
          - Swap Halves:      10101110100010011100100011101010
          - Bit Inversion:    01010001011101100011011100010101
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     11001001001001100111001111011001

          - FUNCTION OUTPUT:  11001001001001100111001111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001011101011001101000101000

       - FUNCTION OUTPUT:          11001001001001100111001111011001

       - Left XOR FUNCTION OUTPUT: 10000000010100111110100111110001

       - Next Round Left 32 Bits:  11101011001000010001001010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000010100111110100111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011001000010001001010110101

       - Right 32 Bits:            10000000010100111110100111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       10000000010100111110100111110001
          - S-Box Result:     00101111100100011100001110111010   [per every group of 4-bits]
          - Split Into Two:   0010111110010001 [L] 1100001110111010 [R]
          - Swap Halves:      11000011101110100010111110010001
          - Bit Inversion:    00111100010001011101000001101110
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     00000111000110000000111111110111

          - FUNCTION OUTPUT:  00000111000110000000111111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011001000010001001010110101

       - FUNCTION OUTPUT:          00000111000110000000111111110111

       - Left XOR FUNCTION OUTPUT: 11101100001110010001110101000010

       - Next Round Left 32 Bits:  10000000010100111110100111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100001110010001110101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000010100111110100111110001

       - Right 32 Bits:            11101100001110010001110101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       11101100001110010001110101000010
          - S-Box Result:     11000101000100111010011001111110   [per every group of 4-bits]
          - Split Into Two:   1100010100010011 [L] 1010011001111110 [R]
          - Swap Halves:      10100110011111101100010100010011
          - Bit Inversion:    01011001100000010011101011101100
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     00011011110100100010100011111111

          - FUNCTION OUTPUT:  00011011110100100010100011111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000010100111110100111110001

       - FUNCTION OUTPUT:          00011011110100100010100011111111

       - Left XOR FUNCTION OUTPUT: 10011011100000011100000100001110

       - Next Round Left 32 Bits:  11101100001110010001110101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011100000011100000100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001101110000001110000010000111011101100001110010001110101000010

 > Processed Block:     1001101110000001110000010000111011101100001110010001110101000010



Plaintext Block 9: 0001110000111010100100101001001010011011100111110111100100111010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100001110101001001010010010

       - Right 32 Bits:            10011011100111110111100100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101000110011001111101110001010101111001011101001111   [Subkey: 1]
          - Input Half:       10011011100111110111100100111010
          - S-Box Result:     00111000001110111101001100010100   [per every group of 4-bits]
          - Split Into Two:   0011100000111011 [L] 1101001100010100 [R]
          - Swap Halves:      11010011000101000011100000111011
          - Bit Inversion:    00101100111010111100011111000100
          - Compressed Key:   10011001001110110101110111011111   [done by compression P-Box]
          - XOR with Key:     10110101110100001001101000011011

          - FUNCTION OUTPUT:  10110101110100001001101000011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100001110101001001010010010

       - FUNCTION OUTPUT:          10110101110100001001101000011011

       - Left XOR FUNCTION OUTPUT: 10101001111010100000100010001001

       - Next Round Left 32 Bits:  10011011100111110111100100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001111010100000100010001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011100111110111100100111010

       - Right 32 Bits:            10101001111010100000100010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101110011001100000100011101010100001101000101100001   [Subkey: 2]
          - Input Half:       10101001111010100000100010001001
          - S-Box Result:     01000011110001001111001000100011   [per every group of 4-bits]
          - Split Into Two:   0100001111000100 [L] 1111001000100011 [R]
          - Swap Halves:      11110010001000110100001111000100
          - Bit Inversion:    00001101110111001011110000111011
          - Compressed Key:   00010011010000100101001100010010   [done by compression P-Box]
          - XOR with Key:     00011110100111101110111100101001

          - FUNCTION OUTPUT:  00011110100111101110111100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011100111110111100100111010

       - FUNCTION OUTPUT:          00011110100111101110111100101001

       - Left XOR FUNCTION OUTPUT: 10000101000000011001011000010011

       - Next Round Left 32 Bits:  10101001111010100000100010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101000000011001011000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001111010100000100010001001

       - Right 32 Bits:            10000101000000011001011000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110100011001100111110111000101010111100101110100111100   [Subkey: 3]
          - Input Half:       10000101000000011001011000010011
          - S-Box Result:     00101001111110100011000010100001   [per every group of 4-bits]
          - Split Into Two:   0010100111111010 [L] 0011000010100001 [R]
          - Swap Halves:      00110000101000010010100111111010
          - Bit Inversion:    11001111010111101101011000000101
          - Compressed Key:   01010110111111000101011001011100   [done by compression P-Box]
          - XOR with Key:     10011001101000101000000001011001

          - FUNCTION OUTPUT:  10011001101000101000000001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001111010100000100010001001

       - FUNCTION OUTPUT:          10011001101000101000000001011001

       - Left XOR FUNCTION OUTPUT: 00110000010010001000100011010000

       - Next Round Left 32 Bits:  10000101000000011001011000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000010010001000100011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101000000011001011000010011

       - Right 32 Bits:            00110000010010001000100011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111001100110000010001110101010000110100010110000111   [Subkey: 4]
          - Input Half:       00110000010010001000100011010000
          - S-Box Result:     00011111011100100010001001101111   [per every group of 4-bits]
          - Split Into Two:   0001111101110010 [L] 0010001001101111 [R]
          - Swap Halves:      00100010011011110001111101110010
          - Bit Inversion:    11011101100100001110000010001101
          - Compressed Key:   01111100000010110101111001111011   [done by compression P-Box]
          - XOR with Key:     10100001100110111011111011110110

          - FUNCTION OUTPUT:  10100001100110111011111011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101000000011001011000010011

       - FUNCTION OUTPUT:          10100001100110111011111011110110

       - Left XOR FUNCTION OUTPUT: 00100100100110100010100011100101

       - Next Round Left 32 Bits:  00110000010010001000100011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100100110100010100011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000010010001000100011010000

       - Right 32 Bits:            00100100100110100010100011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100110011111011100010101011110010111010011110000   [Subkey: 5]
          - Input Half:       00100100100110100010100011100101
          - S-Box Result:     11100111001101001110001011001001   [per every group of 4-bits]
          - Split Into Two:   1110011100110100 [L] 1110001011001001 [R]
          - Swap Halves:      11100010110010011110011100110100
          - Bit Inversion:    00011101001101100001100011001011
          - Compressed Key:   01001001110100100111101001100000   [done by compression P-Box]
          - XOR with Key:     01010100111001000110001010101011

          - FUNCTION OUTPUT:  01010100111001000110001010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000010010001000100011010000

       - FUNCTION OUTPUT:          01010100111001000110001010101011

       - Left XOR FUNCTION OUTPUT: 01100100101011001110101001111011

       - Next Round Left 32 Bits:  00100100100110100010100011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100101011001110101001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100100110100010100011100101

       - Right 32 Bits:            01100100101011001110101001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100110011000001000111010101000011010001011000011110   [Subkey: 6]
          - Input Half:       01100100101011001110101001111011
          - S-Box Result:     00000111010001011100010011011000   [per every group of 4-bits]
          - Split Into Two:   0000011101000101 [L] 1100010011011000 [R]
          - Swap Halves:      11000100110110000000011101000101
          - Bit Inversion:    00111011001001111111100010111010
          - Compressed Key:   11010011000111100100100011001101   [done by compression P-Box]
          - XOR with Key:     11101000001110011011000001110111

          - FUNCTION OUTPUT:  11101000001110011011000001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100100110100010100011100101

       - FUNCTION OUTPUT:          11101000001110011011000001110111

       - Left XOR FUNCTION OUTPUT: 11001100101000111001100010010010

       - Next Round Left 32 Bits:  01100100101011001110101001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100101000111001100010010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100101011001110101001111011

       - Right 32 Bits:            11001100101000111001100010010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110011001111101110001010101111001011101001111000011   [Subkey: 7]
          - Input Half:       11001100101000111001100010010010
          - S-Box Result:     01010101010000010011001000111110   [per every group of 4-bits]
          - Split Into Two:   0101010101000001 [L] 0011001000111110 [R]
          - Swap Halves:      00110010001111100101010101000001
          - Bit Inversion:    11001101110000011010101010111110
          - Compressed Key:   00110110011110101111101110110011   [done by compression P-Box]
          - XOR with Key:     11111011101110110101000100001101

          - FUNCTION OUTPUT:  11111011101110110101000100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100101011001110101001111011

       - FUNCTION OUTPUT:          11111011101110110101000100001101

       - Left XOR FUNCTION OUTPUT: 10011111000101111011101101110110

       - Next Round Left 32 Bits:  11001100101000111001100010010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111000101111011101101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100101000111001100010010010

       - Right 32 Bits:            10011111000101111011101101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011001100000100011101010100001101000101100001111001   [Subkey: 8]
          - Input Half:       10011111000101111011101101110110
          - S-Box Result:     00111011101011011000100011010000   [per every group of 4-bits]
          - Split Into Two:   0011101110101101 [L] 1000100011010000 [R]
          - Swap Halves:      10001000110100000011101110101101
          - Bit Inversion:    01110111001011111100010001010010
          - Compressed Key:   01101100010010100010001000000110   [done by compression P-Box]
          - XOR with Key:     00011011011001011110011001010100

          - FUNCTION OUTPUT:  00011011011001011110011001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100101000111001100010010010

       - FUNCTION OUTPUT:          00011011011001011110011001010100

       - Left XOR FUNCTION OUTPUT: 11010111110001100111111011000110

       - Next Round Left 32 Bits:  10011111000101111011101101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111110001100111111011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111000101111011101101110110

       - Right 32 Bits:            11010111110001100111111011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001100111110111000101010111100101110100111100001101   [Subkey: 9]
          - Input Half:       11010111110001100111111011000110
          - S-Box Result:     01101101010100001101110001010000   [per every group of 4-bits]
          - Split Into Two:   0110110101010000 [L] 1101110001010000 [R]
          - Swap Halves:      11011100010100000110110101010000
          - Bit Inversion:    00100011101011111001001010101111
          - Compressed Key:   11001011110110101100111011011110   [done by compression P-Box]
          - XOR with Key:     11101000011101010101110001110001

          - FUNCTION OUTPUT:  11101000011101010101110001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111000101111011101101110110

       - FUNCTION OUTPUT:          11101000011101010101110001110001

       - Left XOR FUNCTION OUTPUT: 01110111011000101110011100000111

       - Next Round Left 32 Bits:  11010111110001100111111011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111011000101110011100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111110001100111111011000110

       - Right 32 Bits:            01110111011000101110011100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100110000010001110101010000110100010110000111100101   [Subkey: 10]
          - Input Half:       01110111011000101110011100000111
          - S-Box Result:     11011101000011101100110111111101   [per every group of 4-bits]
          - Split Into Two:   1101110100001110 [L] 1100110111111101 [R]
          - Swap Halves:      11001101111111011101110100001110
          - Bit Inversion:    00110010000000100010001011110001
          - Compressed Key:   10010000001110101001101000111010   [done by compression P-Box]
          - XOR with Key:     10100010001110001011100011001011

          - FUNCTION OUTPUT:  10100010001110001011100011001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111110001100111111011000110

       - FUNCTION OUTPUT:          10100010001110001011100011001011

       - Left XOR FUNCTION OUTPUT: 01110101111111101100011000001101

       - Next Round Left 32 Bits:  01110111011000101110011100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101111111101100011000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111011000101110011100000111

       - Right 32 Bits:            01110101111111101100011000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100110011111011100010101011110010111010011110000110100   [Subkey: 11]
          - Input Half:       01110101111111101100011000001101
          - S-Box Result:     11011001101111000101000011110110   [per every group of 4-bits]
          - Split Into Two:   1101100110111100 [L] 0101000011110110 [R]
          - Swap Halves:      01010000111101101101100110111100
          - Bit Inversion:    10101111000010010010011001000011
          - Compressed Key:   00111111010010100001100001001000   [done by compression P-Box]
          - XOR with Key:     10010000010000110011111000001011

          - FUNCTION OUTPUT:  10010000010000110011111000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111011000101110011100000111

       - FUNCTION OUTPUT:          10010000010000110011111000001011

       - Left XOR FUNCTION OUTPUT: 11100111001000011101100100001100

       - Next Round Left 32 Bits:  01110101111111101100011000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111001000011101100100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101111111101100011000001101

       - Right 32 Bits:            11100111001000011101100100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011000001000111010101000011010001011000011110010111   [Subkey: 12]
          - Input Half:       11100111001000011101100100001100
          - S-Box Result:     11001101111010100110001111110101   [per every group of 4-bits]
          - Split Into Two:   1100110111101010 [L] 0110001111110101 [R]
          - Swap Halves:      01100011111101011100110111101010
          - Bit Inversion:    10011100000010100011001000010101
          - Compressed Key:   01100010110110000101100111111011   [done by compression P-Box]
          - XOR with Key:     11111110110100100110101111101110

          - FUNCTION OUTPUT:  11111110110100100110101111101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101111111101100011000001101

       - FUNCTION OUTPUT:          11111110110100100110101111101110

       - Left XOR FUNCTION OUTPUT: 10001011001011001010110111100011

       - Next Round Left 32 Bits:  11100111001000011101100100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011001011001010110111100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111001000011101100100001100

       - Right 32 Bits:            10001011001011001010110111100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001111101110001010101111001011101001111000011010001   [Subkey: 13]
          - Input Half:       10001011001011001010110111100011
          - S-Box Result:     00101000111001010100011011000001   [per every group of 4-bits]
          - Split Into Two:   0010100011100101 [L] 0100011011000001 [R]
          - Swap Halves:      01000110110000010010100011100101
          - Bit Inversion:    10111001001111101101011100011010
          - Compressed Key:   11001110000110110111001100100010   [done by compression P-Box]
          - XOR with Key:     01110111001001011010010000111000

          - FUNCTION OUTPUT:  01110111001001011010010000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111001000011101100100001100

       - FUNCTION OUTPUT:          01110111001001011010010000111000

       - Left XOR FUNCTION OUTPUT: 10010000000001000111110100110100

       - Next Round Left 32 Bits:  10001011001011001010110111100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000000001000111110100110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011001011001010110111100011

       - Right 32 Bits:            10010000000001000111110100110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001100000100011101010100001101000101100001111001011100   [Subkey: 14]
          - Input Half:       10010000000001000111110100110100
          - S-Box Result:     00111111111101111101011000010111   [per every group of 4-bits]
          - Split Into Two:   0011111111110111 [L] 1101011000010111 [R]
          - Swap Halves:      11010110000101110011111111110111
          - Bit Inversion:    00101001111010001100000000001000
          - Compressed Key:   10011000010100000100010011001100   [done by compression P-Box]
          - XOR with Key:     10110001101110001000010011000100

          - FUNCTION OUTPUT:  10110001101110001000010011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011001011001010110111100011

       - FUNCTION OUTPUT:          10110001101110001000010011000100

       - Left XOR FUNCTION OUTPUT: 00111010100101000010100100100111

       - Next Round Left 32 Bits:  10010000000001000111110100110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010100101000010100100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000000001000111110100110100

       - Right 32 Bits:            00111010100101000010100100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111110111000101010111100101110100111100001101000110   [Subkey: 15]
          - Input Half:       00111010100101000010100100100111
          - S-Box Result:     00010100001101111110001111101101   [per every group of 4-bits]
          - Split Into Two:   0001010000110111 [L] 1110001111101101 [R]
          - Swap Halves:      11100011111011010001010000110111
          - Bit Inversion:    00011100000100101110101111001000
          - Compressed Key:   00111011010111011101111110011001   [done by compression P-Box]
          - XOR with Key:     00100111010011110011010001010001

          - FUNCTION OUTPUT:  00100111010011110011010001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000000001000111110100110100

       - FUNCTION OUTPUT:          00100111010011110011010001010001

       - Left XOR FUNCTION OUTPUT: 10110111010010110100100101100101

       - Next Round Left 32 Bits:  00111010100101000010100100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111010010110100100101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010100101000010100100100111

       - Right 32 Bits:            10110111010010110100100101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010001110101010000110100010110000111100101110011   [Subkey: 16]
          - Input Half:       10110111010010110100100101100101
          - S-Box Result:     10001101011110000111001100001001   [per every group of 4-bits]
          - Split Into Two:   1000110101111000 [L] 0111001100001001 [R]
          - Swap Halves:      01110011000010011000110101111000
          - Bit Inversion:    10001100111101100111001010000111
          - Compressed Key:   01000010010100110001001000010011   [done by compression P-Box]
          - XOR with Key:     11001110101001010110000010010100

          - FUNCTION OUTPUT:  11001110101001010110000010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010100101000010100100100111

       - FUNCTION OUTPUT:          11001110101001010110000010010100

       - Left XOR FUNCTION OUTPUT: 11110100001100010100100110110011

       - Next Round Left 32 Bits:  10110111010010110100100101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100001100010100100110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111010000110001010010011011001110110111010010110100100101100101

 > Processed Block:     1111010000110001010010011011001110110111010010110100100101100101




BLOCKS IN ASCII:             ¤ë`¹/±¹?÷Ç?=???«?6ÐºV?;K¯Çå»+	;.5²ñ
?°@?Á?¸à?ÎK¨Å??Áì9Bô1I³·KIe

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: WHmRm2p
In Binary:  01010111010010000110110101010010011011010011001001110000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01010001011011110010010101011011001001011001101100011111
Subkey 2  : 01011101001000011011010101001001101101001100100111000001
Subkey 3  : 01000101101111001001010101101100100101100110110001111101
Subkey 4  : 01110100100001101101010100100110110100110010011100000101
Subkey 5  : 00010110111100100101010110110010010110011011000111110101
Subkey 6  : 11010010000110110101010010011011010011001001110000010101
Subkey 7  : 01011011110010010101011011001001011001101100011111010100
Subkey 8  : 01001000011011010101001001101101001100100111000001010111
Subkey 9  : 01101111001001010101101100100101100110110001111101010001
Subkey 10 : 00100001101101010100100110110100110010011100000101011101
Subkey 11 : 10111100100101010110110010010110011011000111110101000101
Subkey 12 : 10000110110101010010011011010011001001110000010101110100
Subkey 13 : 11110010010101011011001001011001101100011111010100010110
Subkey 14 : 00011011010101001001101101001100100111000001010111010010
Subkey 15 : 11001001010101101100100101100110110001111101010001011011
Subkey 16 : 01101101010100100110110100110010011100000101011101001000

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ¤ë`¹/±¹?÷Ç?=???«?6ÐºV?;K¯Çå»+	;.5²ñ
?°@?Á?¸à?ÎK¨Å??Áì9Bô1I³·KIe

Data padded with spaces : ¤ë`¹/±¹?÷Ç?=???«?6ÐºV?;K¯Çå»+	;.5²ñ
?°@?Á?¸à?ÎK¨Å??Áì9Bô1I³·KIe[Padded with '0' spaces]

Data in ASCII           : 164,235,13,96,185,47,19,177,185,154,247,199,157,61,136,15,145,152,27,171,140,54,27,12,208,186,86,135,59,75,175,199,229,187,43,9,26,59,46,53,178,241,10,143,176,64,139,193,136,184,224,131,206,75,168,197,155,129,193,14,236,57,29,66,244,49,73,179,183,75,73,101,

Data in Binary          : 10100100,11101011,00001101,01100000,10111001,00101111,00010011,10110001,10111001,10011010,11110111,11000111,10011101,00111101,10001000,00001111,10010001,10011000,00011011,10101011,10001100,00110110,00011011,00001100,11010000,10111010,01010110,10000111,00111011,01001011,10101111,11000111,11100101,10111011,00101011,00001001,00011010,00111011,00101110,00110101,10110010,11110001,00001010,10001111,10110000,01000000,10001011,11000001,10001000,10111000,11100000,10000011,11001110,01001011,10101000,11000101,10011011,10000001,11000001,00001110,11101100,00111001,00011101,01000010,11110100,00110001,01001001,10110011,10110111,01001011,01001001,01100101,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 1010010011101011000011010110000010111001001011110001001110110001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100111010110000110101100000

       - Right 32 Bits:            10111001001011110001001110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       10111001001011110001001110110001
          - S-Box Result:     10000011111010111010000110001010   [per every group of 4-bits]
          - Split Into Two:   1000001111101011 [L] 1010000110001010 [R]
          - Swap Halves:      10100001100010101000001111101011
          - Bit Inversion:    01011110011101010111110000010100
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     11000110100101100100111011000000

          - FUNCTION OUTPUT:  11000110100101100100111011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100111010110000110101100000

       - FUNCTION OUTPUT:          11000110100101100100111011000000

       - Left XOR FUNCTION OUTPUT: 01100010011111010100001110100000

       - Next Round Left 32 Bits:  10111001001011110001001110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010011111010100001110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001001011110001001110110001

       - Right 32 Bits:            01100010011111010100001110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       01100010011111010100001110100000
          - S-Box Result:     00001110110101100111000101001111   [per every group of 4-bits]
          - Split Into Two:   0000111011010110 [L] 0111000101001111 [R]
          - Swap Halves:      01110001010011110000111011010110
          - Bit Inversion:    10001110101100001111000100101001
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     00000100110110010110111001101110

          - FUNCTION OUTPUT:  00000100110110010110111001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001001011110001001110110001

       - FUNCTION OUTPUT:          00000100110110010110111001101110

       - Left XOR FUNCTION OUTPUT: 10111101111101100111110111011111

       - Next Round Left 32 Bits:  01100010011111010100001110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101111101100111110111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010011111010100001110100000

       - Right 32 Bits:            10111101111101100111110111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       10111101111101100111110111011111
          - S-Box Result:     10000110101100001101011001101011   [per every group of 4-bits]
          - Split Into Two:   1000011010110000 [L] 1101011001101011 [R]
          - Swap Halves:      11010110011010111000011010110000
          - Bit Inversion:    00101001100101000111100101001111
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     11000011101011001111100100111110

          - FUNCTION OUTPUT:  11000011101011001111100100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010011111010100001110100000

       - FUNCTION OUTPUT:          11000011101011001111100100111110

       - Left XOR FUNCTION OUTPUT: 10100001110100011011101010011110

       - Next Round Left 32 Bits:  10111101111101100111110111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001110100011011101010011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101111101100111110111011111

       - Right 32 Bits:            10100001110100011011101010011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       10100001110100011011101010011110
          - S-Box Result:     01001010011010101000010000111100   [per every group of 4-bits]
          - Split Into Two:   0100101001101010 [L] 1000010000111100 [R]
          - Swap Halves:      10000100001111000100101001101010
          - Bit Inversion:    01111011110000111011010110010101
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     00010001010110010101111011001100

          - FUNCTION OUTPUT:  00010001010110010101111011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101111101100111110111011111

       - FUNCTION OUTPUT:          00010001010110010101111011001100

       - Left XOR FUNCTION OUTPUT: 10101100101011110010001100010011

       - Next Round Left 32 Bits:  10100001110100011011101010011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100101011110010001100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001110100011011101010011110

       - Right 32 Bits:            10101100101011110010001100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       10101100101011110010001100010011
          - S-Box Result:     01000101010010111110000110100001   [per every group of 4-bits]
          - Split Into Two:   0100010101001011 [L] 1110000110100001 [R]
          - Swap Halves:      11100001101000010100010101001011
          - Bit Inversion:    00011110010111101011101010110100
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     00100100110100001101011011101100

          - FUNCTION OUTPUT:  00100100110100001101011011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001110100011011101010011110

       - FUNCTION OUTPUT:          00100100110100001101011011101100

       - Left XOR FUNCTION OUTPUT: 10000101000000010110110001110010

       - Next Round Left 32 Bits:  10101100101011110010001100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101000000010110110001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100101011110010001100010011

       - Right 32 Bits:            10000101000000010110110001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       10000101000000010110110001110010
          - S-Box Result:     00101001111110100000010111011110   [per every group of 4-bits]
          - Split Into Two:   0010100111111010 [L] 0000010111011110 [R]
          - Swap Halves:      00000101110111100010100111111010
          - Bit Inversion:    11111010001000011101011000000101
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     00100000110001111110010001011111

          - FUNCTION OUTPUT:  00100000110001111110010001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100101011110010001100010011

       - FUNCTION OUTPUT:          00100000110001111110010001011111

       - Left XOR FUNCTION OUTPUT: 10001100011010001100011101001100

       - Next Round Left 32 Bits:  10000101000000010110110001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100011010001100011101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101000000010110110001110010

       - Right 32 Bits:            10001100011010001100011101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       10001100011010001100011101001100
          - S-Box Result:     00100101000000100101110101110101   [per every group of 4-bits]
          - Split Into Two:   0010010100000010 [L] 0101110101110101 [R]
          - Swap Halves:      01011101011101010010010100000010
          - Bit Inversion:    10100010100010101101101011111101
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     10101100111011010100000111100011

          - FUNCTION OUTPUT:  10101100111011010100000111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101000000010110110001110010

       - FUNCTION OUTPUT:          10101100111011010100000111100011

       - Left XOR FUNCTION OUTPUT: 00101001111011000010110110010001

       - Next Round Left 32 Bits:  10001100011010001100011101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001111011000010110110010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100011010001100011101001100

       - Right 32 Bits:            00101001111011000010110110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       00101001111011000010110110010001
          - S-Box Result:     11100011110001011110011000111010   [per every group of 4-bits]
          - Split Into Two:   1110001111000101 [L] 1110011000111010 [R]
          - Swap Halves:      11100110001110101110001111000101
          - Bit Inversion:    00011001110001010001110000111010
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10101111101101001101000011101000

          - FUNCTION OUTPUT:  10101111101101001101000011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100011010001100011101001100

       - FUNCTION OUTPUT:          10101111101101001101000011101000

       - Left XOR FUNCTION OUTPUT: 00100011110111000001011110100100

       - Next Round Left 32 Bits:  00101001111011000010110110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011110111000001011110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001111011000010110110010001

       - Right 32 Bits:            00100011110111000001011110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       00100011110111000001011110100100
          - S-Box Result:     11100001011001011010110101000111   [per every group of 4-bits]
          - Split Into Two:   1110000101100101 [L] 1010110101000111 [R]
          - Swap Halves:      10101101010001111110000101100101
          - Bit Inversion:    01010010101110000001111010011010
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     11010101111000010111100010010001

          - FUNCTION OUTPUT:  11010101111000010111100010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001111011000010110110010001

       - FUNCTION OUTPUT:          11010101111000010111100010010001

       - Left XOR FUNCTION OUTPUT: 11111100000011010101010100000000

       - Next Round Left 32 Bits:  00100011110111000001011110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100000011010101010100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011110111000001011110100100

       - Right 32 Bits:            11111100000011010101010100000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       11111100000011010101010100000000
          - S-Box Result:     10110101111101101001100111111111   [per every group of 4-bits]
          - Split Into Two:   1011010111110110 [L] 1001100111111111 [R]
          - Swap Halves:      10011001111111111011010111110110
          - Bit Inversion:    01100110000000000100101000001001
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     10000111010111000011110111110001

          - FUNCTION OUTPUT:  10000111010111000011110111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011110111000001011110100100

       - FUNCTION OUTPUT:          10000111010111000011110111110001

       - Left XOR FUNCTION OUTPUT: 10100100100000000010101001010101

       - Next Round Left 32 Bits:  11111100000011010101010100000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100100000000010101001010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100000011010101010100000000

       - Right 32 Bits:            10100100100000000010101001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       10100100100000000010101001010101
          - S-Box Result:     01000111001011111110010010011001   [per every group of 4-bits]
          - Split Into Two:   0100011100101111 [L] 1110010010011001 [R]
          - Swap Halves:      11100100100110010100011100101111
          - Bit Inversion:    00011011011001101011100011010000
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     01110010001100001110100110011010

          - FUNCTION OUTPUT:  01110010001100001110100110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100000011010101010100000000

       - FUNCTION OUTPUT:          01110010001100001110100110011010

       - Left XOR FUNCTION OUTPUT: 10001110001111011011110010011010

       - Next Round Left 32 Bits:  10100100100000000010101001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110001111011011110010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100100000000010101001010101

       - Right 32 Bits:            10001110001111011011110010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       10001110001111011011110010011010
          - S-Box Result:     00101100000101101000010100110100   [per every group of 4-bits]
          - Split Into Two:   0010110000010110 [L] 1000010100110100 [R]
          - Swap Halves:      10000101001101000010110000010110
          - Bit Inversion:    01111010110010111101001111101001
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     00000110100111001100101011010011

          - FUNCTION OUTPUT:  00000110100111001100101011010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100100000000010101001010101

       - FUNCTION OUTPUT:          00000110100111001100101011010011

       - Left XOR FUNCTION OUTPUT: 10100010000111001110000010000110

       - Next Round Left 32 Bits:  10001110001111011011110010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010000111001110000010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110001111011011110010011010

       - Right 32 Bits:            10100010000111001110000010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       10100010000111001110000010000110
          - S-Box Result:     01001110101001011100111100100000   [per every group of 4-bits]
          - Split Into Two:   0100111010100101 [L] 1100111100100000 [R]
          - Swap Halves:      11001111001000000100111010100101
          - Bit Inversion:    00110000110111111011000101011010
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     01100010100011100010110110000000

          - FUNCTION OUTPUT:  01100010100011100010110110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110001111011011110010011010

       - FUNCTION OUTPUT:          01100010100011100010110110000000

       - Left XOR FUNCTION OUTPUT: 11101100101100111001000100011010

       - Next Round Left 32 Bits:  10100010000111001110000010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100101100111001000100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010000111001110000010000110

       - Right 32 Bits:            11101100101100111001000100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       11101100101100111001000100011010
          - S-Box Result:     11000101100000010011101010100100   [per every group of 4-bits]
          - Split Into Two:   1100010110000001 [L] 0011101010100100 [R]
          - Swap Halves:      00111010101001001100010110000001
          - Bit Inversion:    11000101010110110011101001111110
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     11011010010000101011110000110000

          - FUNCTION OUTPUT:  11011010010000101011110000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010000111001110000010000110

       - FUNCTION OUTPUT:          11011010010000101011110000110000

       - Left XOR FUNCTION OUTPUT: 01111000010111100101110010110110

       - Next Round Left 32 Bits:  11101100101100111001000100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000010111100101110010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100101100111001000100011010

       - Right 32 Bits:            01111000010111100101110010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       01111000010111100101110010110110
          - S-Box Result:     11010010100111001001010110000000   [per every group of 4-bits]
          - Split Into Two:   1101001010011100 [L] 1001010110000000 [R]
          - Swap Halves:      10010101100000001101001010011100
          - Bit Inversion:    01101010011111110010110101100011
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     10111110111001111100111001010001

          - FUNCTION OUTPUT:  10111110111001111100111001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100101100111001000100011010

       - FUNCTION OUTPUT:          10111110111001111100111001010001

       - Left XOR FUNCTION OUTPUT: 01010010010101000101111101001011

       - Next Round Left 32 Bits:  01111000010111100101110010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010010101000101111101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000010111100101110010110110

       - Right 32 Bits:            01010010010101000101111101001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01010010010101000101111101001011
          - S-Box Result:     10011110100101111001101101111000   [per every group of 4-bits]
          - Split Into Two:   1001111010010111 [L] 1001101101111000 [R]
          - Swap Halves:      10011011011110001001111010010111
          - Bit Inversion:    01100100100001110110000101101000
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     00100011000011010000100011110111

          - FUNCTION OUTPUT:  00100011000011010000100011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000010111100101110010110110

       - FUNCTION OUTPUT:          00100011000011010000100011110111

       - Left XOR FUNCTION OUTPUT: 01011011010100110101010001000001

       - Next Round Left 32 Bits:  01010010010101000101111101001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010100110101010001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101101101010011010101000100000101010010010101000101111101001011

 > Processed Block:     0101101101010011010101000100000101010010010101000101111101001011


Ciphertext Block 2: 1011100110011010111101111100011110011101001111011000100000001111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001100110101111011111000111

       - Right 32 Bits:            10011101001111011000100000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       10011101001111011000100000001111
          - S-Box Result:     00110110000101100010001011111011   [per every group of 4-bits]
          - Split Into Two:   0011011000010110 [L] 0010001011111011 [R]
          - Swap Halves:      00100010111110110011011000010110
          - Bit Inversion:    11011101000001001100100111101001
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     01000101111001111111101100111101

          - FUNCTION OUTPUT:  01000101111001111111101100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001100110101111011111000111

       - FUNCTION OUTPUT:          01000101111001111111101100111101

       - Left XOR FUNCTION OUTPUT: 11111100011111010000110011111010

       - Next Round Left 32 Bits:  10011101001111011000100000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100011111010000110011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101001111011000100000001111

       - Right 32 Bits:            11111100011111010000110011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       11111100011111010000110011111010
          - S-Box Result:     10110101110101101111010110110100   [per every group of 4-bits]
          - Split Into Two:   1011010111010110 [L] 1111010110110100 [R]
          - Swap Halves:      11110101101101001011010111010110
          - Bit Inversion:    00001010010010110100101000101001
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     10000000001000101101010101101110

          - FUNCTION OUTPUT:  10000000001000101101010101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101001111011000100000001111

       - FUNCTION OUTPUT:          10000000001000101101010101101110

       - Left XOR FUNCTION OUTPUT: 00011101000111110101110101100001

       - Next Round Left 32 Bits:  11111100011111010000110011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101000111110101110101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100011111010000110011111010

       - Right 32 Bits:            00011101000111110101110101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       00011101000111110101110101100001
          - S-Box Result:     10100110101010111001011000001010   [per every group of 4-bits]
          - Split Into Two:   1010011010101011 [L] 1001011000001010 [R]
          - Swap Halves:      10010110000010101010011010101011
          - Bit Inversion:    01101001111101010101100101010100
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     10000011110011011101100100100101

          - FUNCTION OUTPUT:  10000011110011011101100100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100011111010000110011111010

       - FUNCTION OUTPUT:          10000011110011011101100100100101

       - Left XOR FUNCTION OUTPUT: 01111111101100001101010111011111

       - Next Round Left 32 Bits:  00011101000111110101110101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111101100001101010111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101000111110101110101100001

       - Right 32 Bits:            01111111101100001101010111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       01111111101100001101010111011111
          - S-Box Result:     11011011100011110110100101101011   [per every group of 4-bits]
          - Split Into Two:   1101101110001111 [L] 0110100101101011 [R]
          - Swap Halves:      01101001011010111101101110001111
          - Bit Inversion:    10010110100101000010010001110000
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     11111100000011101100111100101001

          - FUNCTION OUTPUT:  11111100000011101100111100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101000111110101110101100001

       - FUNCTION OUTPUT:          11111100000011101100111100101001

       - Left XOR FUNCTION OUTPUT: 11100001000100011001001001001000

       - Next Round Left 32 Bits:  01111111101100001101010111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001000100011001001001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111101100001101010111011111

       - Right 32 Bits:            11100001000100011001001001001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       11100001000100011001001001001000
          - S-Box Result:     11001010101010100011111001110010   [per every group of 4-bits]
          - Split Into Two:   1100101010101010 [L] 0011111001110010 [R]
          - Swap Halves:      00111110011100101100101010101010
          - Bit Inversion:    11000001100011010011010101010101
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     11111011000000110101100100001101

          - FUNCTION OUTPUT:  11111011000000110101100100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111101100001101010111011111

       - FUNCTION OUTPUT:          11111011000000110101100100001101

       - Left XOR FUNCTION OUTPUT: 10000100101100111000110011010010

       - Next Round Left 32 Bits:  11100001000100011001001001001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100101100111000110011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001000100011001001001001000

       - Right 32 Bits:            10000100101100111000110011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       10000100101100111000110011010010
          - S-Box Result:     00100111100000010010010101101110   [per every group of 4-bits]
          - Split Into Two:   0010011110000001 [L] 0010010101101110 [R]
          - Swap Halves:      00100101011011100010011110000001
          - Bit Inversion:    11011010100100011101100001111110
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     00000000011101111110101000100100

          - FUNCTION OUTPUT:  00000000011101111110101000100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001000100011001001001001000

       - FUNCTION OUTPUT:          00000000011101111110101000100100

       - Left XOR FUNCTION OUTPUT: 11100001011001100111100001101100

       - Next Round Left 32 Bits:  10000100101100111000110011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001011001100111100001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100101100111000110011010010

       - Right 32 Bits:            11100001011001100111100001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       11100001011001100111100001101100
          - S-Box Result:     11001010000000001101001000000101   [per every group of 4-bits]
          - Split Into Two:   1100101000000000 [L] 1101001000000101 [R]
          - Swap Halves:      11010010000001011100101000000000
          - Bit Inversion:    00101101111110100011010111111111
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     00100011100111011010111011100001

          - FUNCTION OUTPUT:  00100011100111011010111011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100101100111000110011010010

       - FUNCTION OUTPUT:          00100011100111011010111011100001

       - Left XOR FUNCTION OUTPUT: 10100111001011100010001000110011

       - Next Round Left 32 Bits:  11100001011001100111100001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111001011100010001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001011001100111100001101100

       - Right 32 Bits:            10100111001011100010001000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       10100111001011100010001000110011
          - S-Box Result:     01001101111011001110111000010001   [per every group of 4-bits]
          - Split Into Two:   0100110111101100 [L] 1110111000010001 [R]
          - Swap Halves:      11101110000100010100110111101100
          - Bit Inversion:    00010001111011101011001000010011
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10100111100111110111111011000001

          - FUNCTION OUTPUT:  10100111100111110111111011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001011001100111100001101100

       - FUNCTION OUTPUT:          10100111100111110111111011000001

       - Left XOR FUNCTION OUTPUT: 01000110111110010000011010101101

       - Next Round Left 32 Bits:  10100111001011100010001000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110111110010000011010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111001011100010001000110011

       - Right 32 Bits:            01000110111110010000011010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       01000110111110010000011010101101
          - S-Box Result:     01110000101100111111000001000110   [per every group of 4-bits]
          - Split Into Two:   0111000010110011 [L] 1111000001000110 [R]
          - Swap Halves:      11110000010001100111000010110011
          - Bit Inversion:    00001111101110011000111101001100
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     10001000111000001110100101000111

          - FUNCTION OUTPUT:  10001000111000001110100101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111001011100010001000110011

       - FUNCTION OUTPUT:          10001000111000001110100101000111

       - Left XOR FUNCTION OUTPUT: 00101111110011101100101101110100

       - Next Round Left 32 Bits:  01000110111110010000011010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111110011101100101101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110111110010000011010101101

       - Right 32 Bits:            00101111110011101100101101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       00101111110011101100101101110100
          - S-Box Result:     11101011010111000101100011010111   [per every group of 4-bits]
          - Split Into Two:   1110101101011100 [L] 0101100011010111 [R]
          - Swap Halves:      01011000110101111110101101011100
          - Bit Inversion:    10100111001010000001010010100011
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     01000110011101000110001101011011

          - FUNCTION OUTPUT:  01000110011101000110001101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110111110010000011010101101

       - FUNCTION OUTPUT:          01000110011101000110001101011011

       - Left XOR FUNCTION OUTPUT: 00000000100011010110010111110110

       - Next Round Left 32 Bits:  00101111110011101100101101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000100011010110010111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111110011101100101101110100

       - Right 32 Bits:            00000000100011010110010111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       00000000100011010110010111110110
          - S-Box Result:     11111111001001100000100110110000   [per every group of 4-bits]
          - Split Into Two:   1111111100100110 [L] 0000100110110000 [R]
          - Swap Halves:      00001001101100001111111100100110
          - Bit Inversion:    11110110010011110000000011011001
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     10011111000110010101000110010011

          - FUNCTION OUTPUT:  10011111000110010101000110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111110011101100101101110100

       - FUNCTION OUTPUT:          10011111000110010101000110010011

       - Left XOR FUNCTION OUTPUT: 10110000110101111001101011100111

       - Next Round Left 32 Bits:  00000000100011010110010111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000110101111001101011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000100011010110010111110110

       - Right 32 Bits:            10110000110101111001101011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       10110000110101111001101011100111
          - S-Box Result:     10001111011011010011010011001101   [per every group of 4-bits]
          - Split Into Two:   1000111101101101 [L] 0011010011001101 [R]
          - Swap Halves:      00110100110011011000111101101101
          - Bit Inversion:    11001011001100100111000010010010
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     10110111011001010110100110101000

          - FUNCTION OUTPUT:  10110111011001010110100110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000100011010110010111110110

       - FUNCTION OUTPUT:          10110111011001010110100110101000

       - Left XOR FUNCTION OUTPUT: 10110111111010000000110001011110

       - Next Round Left 32 Bits:  10110000110101111001101011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111111010000000110001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000110101111001101011100111

       - Right 32 Bits:            10110111111010000000110001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       10110111111010000000110001011110
          - S-Box Result:     10001101110000101111010110011100   [per every group of 4-bits]
          - Split Into Two:   1000110111000010 [L] 1111010110011100 [R]
          - Swap Halves:      11110101100111001000110111000010
          - Bit Inversion:    00001010011000110111001000111101
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     01011000001100101110111011100111

          - FUNCTION OUTPUT:  01011000001100101110111011100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000110101111001101011100111

       - FUNCTION OUTPUT:          01011000001100101110111011100111

       - Left XOR FUNCTION OUTPUT: 11101000111001010111010000000000

       - Next Round Left 32 Bits:  10110111111010000000110001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000111001010111010000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111111010000000110001011110

       - Right 32 Bits:            11101000111001010111010000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       11101000111001010111010000000000
          - S-Box Result:     11000010110010011101011111111111   [per every group of 4-bits]
          - Split Into Two:   1100001011001001 [L] 1101011111111111 [R]
          - Swap Halves:      11010111111111111100001011001001
          - Bit Inversion:    00101000000000000011110100110110
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     00110111000110011011101101111000

          - FUNCTION OUTPUT:  00110111000110011011101101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111111010000000110001011110

       - FUNCTION OUTPUT:          00110111000110011011101101111000

       - Left XOR FUNCTION OUTPUT: 10000000111100011011011100100110

       - Next Round Left 32 Bits:  11101000111001010111010000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000111100011011011100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000111001010111010000000000

       - Right 32 Bits:            10000000111100011011011100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       10000000111100011011011100100110
          - S-Box Result:     00101111101110101000110111100000   [per every group of 4-bits]
          - Split Into Two:   0010111110111010 [L] 1000110111100000 [R]
          - Swap Halves:      10001101111000000010111110111010
          - Bit Inversion:    01110010000111111101000001000101
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     10100110100001110011001101110111

          - FUNCTION OUTPUT:  10100110100001110011001101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000111001010111010000000000

       - FUNCTION OUTPUT:          10100110100001110011001101110111

       - Left XOR FUNCTION OUTPUT: 01001110011000100100011101110111

       - Next Round Left 32 Bits:  10000000111100011011011100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110011000100100011101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000111100011011011100100110

       - Right 32 Bits:            01001110011000100100011101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01001110011000100100011101110111
          - S-Box Result:     01111100000011100111110111011101   [per every group of 4-bits]
          - Split Into Two:   0111110000001110 [L] 0111110111011101 [R]
          - Swap Halves:      01111101110111010111110000001110
          - Bit Inversion:    10000010001000101000001111110001
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     11000101101010001110101001101110

          - FUNCTION OUTPUT:  11000101101010001110101001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000111100011011011100100110

       - FUNCTION OUTPUT:          11000101101010001110101001101110

       - Left XOR FUNCTION OUTPUT: 01000101010110010101110101001000

       - Next Round Left 32 Bits:  01001110011000100100011101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101010110010101110101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100010101011001010111010100100001001110011000100100011101110111

 > Processed Block:     0100010101011001010111010100100001001110011000100100011101110111


Ciphertext Block 3: 1001000110011000000110111010101110001100001101100001101100001100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001100110000001101110101011

       - Right 32 Bits:            10001100001101100001101100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       10001100001101100001101100001100
          - S-Box Result:     00100101000100001010100011110101   [per every group of 4-bits]
          - Split Into Two:   0010010100010000 [L] 1010100011110101 [R]
          - Swap Halves:      10101000111101010010010100010000
          - Bit Inversion:    01010111000010101101101011101111
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     11001111111010011110100000111011

          - FUNCTION OUTPUT:  11001111111010011110100000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001100110000001101110101011

       - FUNCTION OUTPUT:          11001111111010011110100000111011

       - Left XOR FUNCTION OUTPUT: 01011110011100011111001110010000

       - Next Round Left 32 Bits:  10001100001101100001101100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110011100011111001110010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100001101100001101100001100

       - Right 32 Bits:            01011110011100011111001110010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       01011110011100011111001110010000
          - S-Box Result:     10011100110110101011000100111111   [per every group of 4-bits]
          - Split Into Two:   1001110011011010 [L] 1011000100111111 [R]
          - Swap Halves:      10110001001111111001110011011010
          - Bit Inversion:    01001110110000000110001100100101
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     11000100101010011111110001100010

          - FUNCTION OUTPUT:  11000100101010011111110001100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100001101100001101100001100

       - FUNCTION OUTPUT:          11000100101010011111110001100010

       - Left XOR FUNCTION OUTPUT: 01001000100111111110011101101110

       - Next Round Left 32 Bits:  01011110011100011111001110010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000100111111110011101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110011100011111001110010000

       - Right 32 Bits:            01001000100111111110011101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       01001000100111111110011101101110
          - S-Box Result:     01110010001110111100110100001100   [per every group of 4-bits]
          - Split Into Two:   0111001000111011 [L] 1100110100001100 [R]
          - Swap Halves:      11001101000011000111001000111011
          - Bit Inversion:    00110010111100111000110111000100
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     11011000110010110000110110110101

          - FUNCTION OUTPUT:  11011000110010110000110110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110011100011111001110010000

       - FUNCTION OUTPUT:          11011000110010110000110110110101

       - Left XOR FUNCTION OUTPUT: 10000110101110101111111000100101

       - Next Round Left 32 Bits:  01001000100111111110011101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110101110101111111000100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000100111111110011101101110

       - Right 32 Bits:            10000110101110101111111000100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       10000110101110101111111000100101
          - S-Box Result:     00100000100001001011110011101001   [per every group of 4-bits]
          - Split Into Two:   0010000010000100 [L] 1011110011101001 [R]
          - Swap Halves:      10111100111010010010000010000100
          - Bit Inversion:    01000011000101101101111101111011
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     00101001100011000011010000100010

          - FUNCTION OUTPUT:  00101001100011000011010000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000100111111110011101101110

       - FUNCTION OUTPUT:          00101001100011000011010000100010

       - Left XOR FUNCTION OUTPUT: 01100001000100111101001101001100

       - Next Round Left 32 Bits:  10000110101110101111111000100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001000100111101001101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110101110101111111000100101

       - Right 32 Bits:            01100001000100111101001101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       01100001000100111101001101001100
          - S-Box Result:     00001010101000010110000101110101   [per every group of 4-bits]
          - Split Into Two:   0000101010100001 [L] 0110000101110101 [R]
          - Swap Halves:      01100001011101010000101010100001
          - Bit Inversion:    10011110100010101111010101011110
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     10100100000001001001100100000110

          - FUNCTION OUTPUT:  10100100000001001001100100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110101110101111111000100101

       - FUNCTION OUTPUT:          10100100000001001001100100000110

       - Left XOR FUNCTION OUTPUT: 00100010101111100110011100100011

       - Next Round Left 32 Bits:  01100001000100111101001101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010101111100110011100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001000100111101001101001100

       - Right 32 Bits:            00100010101111100110011100100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       00100010101111100110011100100011
          - S-Box Result:     11101110100011000000110111100001   [per every group of 4-bits]
          - Split Into Two:   1110111010001100 [L] 0000110111100001 [R]
          - Swap Halves:      00001101111000011110111010001100
          - Bit Inversion:    11110010000111100001000101110011
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     00101000111110000010001100101001

          - FUNCTION OUTPUT:  00101000111110000010001100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001000100111101001101001100

       - FUNCTION OUTPUT:          00101000111110000010001100101001

       - Left XOR FUNCTION OUTPUT: 01001001111010111111000001100101

       - Next Round Left 32 Bits:  00100010101111100110011100100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001111010111111000001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010101111100110011100100011

       - Right 32 Bits:            01001001111010111111000001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       01001001111010111111000001100101
          - S-Box Result:     01110011110010001011111100001001   [per every group of 4-bits]
          - Split Into Two:   0111001111001000 [L] 1011111100001001 [R]
          - Swap Halves:      10111111000010010111001111001000
          - Bit Inversion:    01000000111101101000110000110111
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     01001110100100010001011100101001

          - FUNCTION OUTPUT:  01001110100100010001011100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010101111100110011100100011

       - FUNCTION OUTPUT:          01001110100100010001011100101001

       - Left XOR FUNCTION OUTPUT: 01101100001011110111000000001010

       - Next Round Left 32 Bits:  01001001111010111111000001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100001011110111000000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001111010111111000001100101

       - Right 32 Bits:            01101100001011110111000000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       01101100001011110111000000001010
          - S-Box Result:     00000101111010111101111111110100   [per every group of 4-bits]
          - Split Into Two:   0000010111101011 [L] 1101111111110100 [R]
          - Swap Halves:      11011111111101000000010111101011
          - Bit Inversion:    00100000000010111111101000010100
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10010110011110100011011011000110

          - FUNCTION OUTPUT:  10010110011110100011011011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001111010111111000001100101

       - FUNCTION OUTPUT:          10010110011110100011011011000110

       - Left XOR FUNCTION OUTPUT: 11011111100100011100011010100011

       - Next Round Left 32 Bits:  01101100001011110111000000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111100100011100011010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100001011110111000000001010

       - Right 32 Bits:            11011111100100011100011010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       11011111100100011100011010100011
          - S-Box Result:     01101011001110100101000001000001   [per every group of 4-bits]
          - Split Into Two:   0110101100111010 [L] 0101000001000001 [R]
          - Swap Halves:      01010000010000010110101100111010
          - Bit Inversion:    10101111101111101001010011000101
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     00101000111001111111001011001110

          - FUNCTION OUTPUT:  00101000111001111111001011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100001011110111000000001010

       - FUNCTION OUTPUT:          00101000111001111111001011001110

       - Left XOR FUNCTION OUTPUT: 01000100110010001000001011000100

       - Next Round Left 32 Bits:  11011111100100011100011010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100110010001000001011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111100100011100011010100011

       - Right 32 Bits:            01000100110010001000001011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       01000100110010001000001011000100
          - S-Box Result:     01110111010100100010111001010111   [per every group of 4-bits]
          - Split Into Two:   0111011101010010 [L] 0010111001010111 [R]
          - Swap Halves:      00101110010101110111011101010010
          - Bit Inversion:    11010001101010001000100010101101
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     00110000111101001111111101010101

          - FUNCTION OUTPUT:  00110000111101001111111101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111100100011100011010100011

       - FUNCTION OUTPUT:          00110000111101001111111101010101

       - Left XOR FUNCTION OUTPUT: 11101111011001010011100111110110

       - Next Round Left 32 Bits:  01000100110010001000001011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111011001010011100111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100110010001000001011000100

       - Right 32 Bits:            11101111011001010011100111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       11101111011001010011100111110110
          - S-Box Result:     11001011000010010001001110110000   [per every group of 4-bits]
          - Split Into Two:   1100101100001001 [L] 0001001110110000 [R]
          - Swap Halves:      00010011101100001100101100001001
          - Bit Inversion:    11101100010011110011010011110110
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     10000101000110010110010110111100

          - FUNCTION OUTPUT:  10000101000110010110010110111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100110010001000001011000100

       - FUNCTION OUTPUT:          10000101000110010110010110111100

       - Left XOR FUNCTION OUTPUT: 11000001110100011110011101111000

       - Next Round Left 32 Bits:  11101111011001010011100111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110100011110011101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111011001010011100111110110

       - Right 32 Bits:            11000001110100011110011101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       11000001110100011110011101111000
          - S-Box Result:     01011010011010101100110111010010   [per every group of 4-bits]
          - Split Into Two:   0101101001101010 [L] 1100110111010010 [R]
          - Swap Halves:      11001101110100100101101001101010
          - Bit Inversion:    00110010001011011010010110010101
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     01001110011110101011110010101111

          - FUNCTION OUTPUT:  01001110011110101011110010101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111011001010011100111110110

       - FUNCTION OUTPUT:          01001110011110101011110010101111

       - Left XOR FUNCTION OUTPUT: 10100001000111111000010101011001

       - Next Round Left 32 Bits:  11000001110100011110011101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001000111111000010101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001110100011110011101111000

       - Right 32 Bits:            10100001000111111000010101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       10100001000111111000010101011001
          - S-Box Result:     01001010101010110010100110010011   [per every group of 4-bits]
          - Split Into Two:   0100101010101011 [L] 0010100110010011 [R]
          - Swap Halves:      00101001100100110100101010101011
          - Bit Inversion:    11010110011011001011010101010100
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     10000100001111010010100110001110

          - FUNCTION OUTPUT:  10000100001111010010100110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001110100011110011101111000

       - FUNCTION OUTPUT:          10000100001111010010100110001110

       - Left XOR FUNCTION OUTPUT: 01000101111011001100111011110110

       - Next Round Left 32 Bits:  10100001000111111000010101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101111011001100111011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001000111111000010101011001

       - Right 32 Bits:            01000101111011001100111011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       01000101111011001100111011110110
          - S-Box Result:     01111001110001010101110010110000   [per every group of 4-bits]
          - Split Into Two:   0111100111000101 [L] 0101110010110000 [R]
          - Swap Halves:      01011100101100000111100111000101
          - Bit Inversion:    10100011010011111000011000111010
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     10111100010101100000000001110100

          - FUNCTION OUTPUT:  10111100010101100000000001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001000111111000010101011001

       - FUNCTION OUTPUT:          10111100010101100000000001110100

       - Left XOR FUNCTION OUTPUT: 00011101010010011000010100101101

       - Next Round Left 32 Bits:  01000101111011001100111011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101010010011000010100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101111011001100111011110110

       - Right 32 Bits:            00011101010010011000010100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       00011101010010011000010100101101
          - S-Box Result:     10100110011100110010100111100110   [per every group of 4-bits]
          - Split Into Two:   1010011001110011 [L] 0010100111100110 [R]
          - Swap Halves:      00101001111001101010011001110011
          - Bit Inversion:    11010110000110010101100110001100
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     00000010100000011011101010111110

          - FUNCTION OUTPUT:  00000010100000011011101010111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101111011001100111011110110

       - FUNCTION OUTPUT:          00000010100000011011101010111110

       - Left XOR FUNCTION OUTPUT: 01000111011011010111010001001000

       - Next Round Left 32 Bits:  00011101010010011000010100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111011011010111010001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101010010011000010100101101

       - Right 32 Bits:            01000111011011010111010001001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01000111011011010111010001001000
          - S-Box Result:     01111101000001101101011101110010   [per every group of 4-bits]
          - Split Into Two:   0111110100000110 [L] 1101011101110010 [R]
          - Swap Halves:      11010111011100100111110100000110
          - Bit Inversion:    00101000100011011000001011111001
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     01101111000001111110101101100110

          - FUNCTION OUTPUT:  01101111000001111110101101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101010010011000010100101101

       - FUNCTION OUTPUT:          01101111000001111110101101100110

       - Left XOR FUNCTION OUTPUT: 01110010010011100110111001001011

       - Next Round Left 32 Bits:  01000111011011010111010001001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010010011100110111001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111001001001110011011100100101101000111011011010111010001001000

 > Processed Block:     0111001001001110011011100100101101000111011011010111010001001000


Ciphertext Block 4: 1101000010111010010101101000011100111011010010111010111111000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000101110100101011010000111

       - Right 32 Bits:            00111011010010111010111111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       00111011010010111010111111000111
          - S-Box Result:     00011000011110000100101101011101   [per every group of 4-bits]
          - Split Into Two:   0001100001111000 [L] 0100101101011101 [R]
          - Swap Halves:      01001011010111010001100001111000
          - Bit Inversion:    10110100101000101110011110000111
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     00101100010000011101010101010011

          - FUNCTION OUTPUT:  00101100010000011101010101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000101110100101011010000111

       - FUNCTION OUTPUT:          00101100010000011101010101010011

       - Left XOR FUNCTION OUTPUT: 11111100111110111000001111010100

       - Next Round Left 32 Bits:  00111011010010111010111111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100111110111000001111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011010010111010111111000111

       - Right 32 Bits:            11111100111110111000001111010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       11111100111110111000001111010100
          - S-Box Result:     10110101101110000010000101100111   [per every group of 4-bits]
          - Split Into Two:   1011010110111000 [L] 0010000101100111 [R]
          - Swap Halves:      00100001011001111011010110111000
          - Bit Inversion:    11011110100110000100101001000111
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     01010100111100011101010100000000

          - FUNCTION OUTPUT:  01010100111100011101010100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011010010111010111111000111

       - FUNCTION OUTPUT:          01010100111100011101010100000000

       - Left XOR FUNCTION OUTPUT: 01101111101110100111101011000111

       - Next Round Left 32 Bits:  11111100111110111000001111010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111101110100111101011000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100111110111000001111010100

       - Right 32 Bits:            01101111101110100111101011000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       01101111101110100111101011000111
          - S-Box Result:     00001011100001001101010001011101   [per every group of 4-bits]
          - Split Into Two:   0000101110000100 [L] 1101010001011101 [R]
          - Swap Halves:      11010100010111010000101110000100
          - Bit Inversion:    00101011101000101111010001111011
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     11000001100110100111010000001010

          - FUNCTION OUTPUT:  11000001100110100111010000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100111110111000001111010100

       - FUNCTION OUTPUT:          11000001100110100111010000001010

       - Left XOR FUNCTION OUTPUT: 00111101011000011111011111011110

       - Next Round Left 32 Bits:  01101111101110100111101011000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101011000011111011111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111101110100111101011000111

       - Right 32 Bits:            00111101011000011111011111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       00111101011000011111011111011110
          - S-Box Result:     00010110000010101011110101101100   [per every group of 4-bits]
          - Split Into Two:   0001011000001010 [L] 1011110101101100 [R]
          - Swap Halves:      10111101011011000001011000001010
          - Bit Inversion:    01000010100100111110100111110101
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     00101000000010010000001010101100

          - FUNCTION OUTPUT:  00101000000010010000001010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111101110100111101011000111

       - FUNCTION OUTPUT:          00101000000010010000001010101100

       - Left XOR FUNCTION OUTPUT: 01000111101100110111100001101011

       - Next Round Left 32 Bits:  00111101011000011111011111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111101100110111100001101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101011000011111011111011110

       - Right 32 Bits:            01000111101100110111100001101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       01000111101100110111100001101011
          - S-Box Result:     01111101100000011101001000001000   [per every group of 4-bits]
          - Split Into Two:   0111110110000001 [L] 1101001000001000 [R]
          - Swap Halves:      11010010000010000111110110000001
          - Bit Inversion:    00101101111101111000001001111110
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     00010111011110011110111000100110

          - FUNCTION OUTPUT:  00010111011110011110111000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101011000011111011111011110

       - FUNCTION OUTPUT:          00010111011110011110111000100110

       - Left XOR FUNCTION OUTPUT: 00101010000110000001100111111000

       - Next Round Left 32 Bits:  01000111101100110111100001101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010000110000001100111111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111101100110111100001101011

       - Right 32 Bits:            00101010000110000001100111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       00101010000110000001100111111000
          - S-Box Result:     11100100101000101010001110110010   [per every group of 4-bits]
          - Split Into Two:   1110010010100010 [L] 1010001110110010 [R]
          - Swap Halves:      10100011101100101110010010100010
          - Bit Inversion:    01011100010011010001101101011101
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     10000110101010110010100100000111

          - FUNCTION OUTPUT:  10000110101010110010100100000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111101100110111100001101011

       - FUNCTION OUTPUT:          10000110101010110010100100000111

       - Left XOR FUNCTION OUTPUT: 11000001000110000101000101101100

       - Next Round Left 32 Bits:  00101010000110000001100111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001000110000101000101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010000110000001100111111000

       - Right 32 Bits:            11000001000110000101000101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       11000001000110000101000101101100
          - S-Box Result:     01011010101000101001101000000101   [per every group of 4-bits]
          - Split Into Two:   0101101010100010 [L] 1001101000000101 [R]
          - Swap Halves:      10011010000001010101101010100010
          - Bit Inversion:    01100101111110101010010101011101
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     01101011100111010011111001000011

          - FUNCTION OUTPUT:  01101011100111010011111001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010000110000001100111111000

       - FUNCTION OUTPUT:          01101011100111010011111001000011

       - Left XOR FUNCTION OUTPUT: 01000001100001010010011110111011

       - Next Round Left 32 Bits:  11000001000110000101000101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001100001010010011110111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001000110000101000101101100

       - Right 32 Bits:            01000001100001010010011110111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       01000001100001010010011110111011
          - S-Box Result:     01111010001010011110110110001000   [per every group of 4-bits]
          - Split Into Two:   0111101000101001 [L] 1110110110001000 [R]
          - Swap Halves:      11101101100010000111101000101001
          - Bit Inversion:    00010010011101111000010111010110
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10100100000001100100100100000100

          - FUNCTION OUTPUT:  10100100000001100100100100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001000110000101000101101100

       - FUNCTION OUTPUT:          10100100000001100100100100000100

       - Left XOR FUNCTION OUTPUT: 01100101000111100001100001101000

       - Next Round Left 32 Bits:  01000001100001010010011110111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101000111100001100001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001100001010010011110111011

       - Right 32 Bits:            01100101000111100001100001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       01100101000111100001100001101000
          - S-Box Result:     00001001101011001010001000000010   [per every group of 4-bits]
          - Split Into Two:   0000100110101100 [L] 1010001000000010 [R]
          - Swap Halves:      10100010000000100000100110101100
          - Bit Inversion:    01011101111111011111011001010011
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     11011010101001001001000001011000

          - FUNCTION OUTPUT:  11011010101001001001000001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001100001010010011110111011

       - FUNCTION OUTPUT:          11011010101001001001000001011000

       - Left XOR FUNCTION OUTPUT: 10011011001000011011011111100011

       - Next Round Left 32 Bits:  01100101000111100001100001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011001000011011011111100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101000111100001100001101000

       - Right 32 Bits:            10011011001000011011011111100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       10011011001000011011011111100011
          - S-Box Result:     00111000111010101000110111000001   [per every group of 4-bits]
          - Split Into Two:   0011100011101010 [L] 1000110111000001 [R]
          - Swap Halves:      10001101110000010011100011101010
          - Bit Inversion:    01110010001111101100011100010101
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     10010011011000101011000011101101

          - FUNCTION OUTPUT:  10010011011000101011000011101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101000111100001100001101000

       - FUNCTION OUTPUT:          10010011011000101011000011101101

       - Left XOR FUNCTION OUTPUT: 11110110011111001010100010000101

       - Next Round Left 32 Bits:  10011011001000011011011111100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110011111001010100010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011001000011011011111100011

       - Right 32 Bits:            11110110011111001010100010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       11110110011111001010100010000101
          - S-Box Result:     10110000110101010100001000101001   [per every group of 4-bits]
          - Split Into Two:   1011000011010101 [L] 0100001000101001 [R]
          - Swap Halves:      01000010001010011011000011010101
          - Bit Inversion:    10111101110101100100111100101010
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     11010100100000000001111001100000

          - FUNCTION OUTPUT:  11010100100000000001111001100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011001000011011011111100011

       - FUNCTION OUTPUT:          11010100100000000001111001100000

       - Left XOR FUNCTION OUTPUT: 01001111101000011010100110000011

       - Next Round Left 32 Bits:  11110110011111001010100010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111101000011010100110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110011111001010100010000101

       - Right 32 Bits:            01001111101000011010100110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       01001111101000011010100110000011
          - S-Box Result:     01111011010010100100001100100001   [per every group of 4-bits]
          - Split Into Two:   0111101101001010 [L] 0100001100100001 [R]
          - Swap Halves:      01000011001000010111101101001010
          - Bit Inversion:    10111100110111101000010010110101
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     11000000100010011001110110001111

          - FUNCTION OUTPUT:  11000000100010011001110110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110011111001010100010000101

       - FUNCTION OUTPUT:          11000000100010011001110110001111

       - Left XOR FUNCTION OUTPUT: 00110110111101010011010100001010

       - Next Round Left 32 Bits:  01001111101000011010100110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110111101010011010100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111101000011010100110000011

       - Right 32 Bits:            00110110111101010011010100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       00110110111101010011010100001010
          - S-Box Result:     00010000101110010001100111110100   [per every group of 4-bits]
          - Split Into Two:   0001000010111001 [L] 0001100111110100 [R]
          - Swap Halves:      00011001111101000001000010111001
          - Bit Inversion:    11100110000010111110111101000110
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     10110100010110100111001110011100

          - FUNCTION OUTPUT:  10110100010110100111001110011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111101000011010100110000011

       - FUNCTION OUTPUT:          10110100010110100111001110011100

       - Left XOR FUNCTION OUTPUT: 11111011111110111101101000011111

       - Next Round Left 32 Bits:  00110110111101010011010100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011111110111101101000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110111101010011010100001010

       - Right 32 Bits:            11111011111110111101101000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       11111011111110111101101000011111
          - S-Box Result:     10111000101110000110010010101011   [per every group of 4-bits]
          - Split Into Two:   1011100010111000 [L] 0110010010101011 [R]
          - Swap Halves:      01100100101010111011100010111000
          - Bit Inversion:    10011011010101000100011101000111
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     10000100010011011100000100001001

          - FUNCTION OUTPUT:  10000100010011011100000100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110111101010011010100001010

       - FUNCTION OUTPUT:          10000100010011011100000100001001

       - Left XOR FUNCTION OUTPUT: 10110010101110001111010000000011

       - Next Round Left 32 Bits:  11111011111110111101101000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010101110001111010000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011111110111101101000011111

       - Right 32 Bits:            10110010101110001111010000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       10110010101110001111010000000011
          - S-Box Result:     10001110100000101011011111110001   [per every group of 4-bits]
          - Split Into Two:   1000111010000010 [L] 1011011111110001 [R]
          - Swap Halves:      10110111111100011000111010000010
          - Bit Inversion:    01001000000011100111000101111101
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     10011100100101101001001001001111

          - FUNCTION OUTPUT:  10011100100101101001001001001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011111110111101101000011111

       - FUNCTION OUTPUT:          10011100100101101001001001001111

       - Left XOR FUNCTION OUTPUT: 01100111011011010100100001010000

       - Next Round Left 32 Bits:  10110010101110001111010000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111011011010100100001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010101110001111010000000011

       - Right 32 Bits:            01100111011011010100100001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01100111011011010100100001010000
          - S-Box Result:     00001101000001100111001010011111   [per every group of 4-bits]
          - Split Into Two:   0000110100000110 [L] 0111001010011111 [R]
          - Swap Halves:      01110010100111110000110100000110
          - Bit Inversion:    10001101011000001111001011111001
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     11001010111010101001101101100110

          - FUNCTION OUTPUT:  11001010111010101001101101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010101110001111010000000011

       - FUNCTION OUTPUT:          11001010111010101001101101100110

       - Left XOR FUNCTION OUTPUT: 01111000010100100110111101100101

       - Next Round Left 32 Bits:  01100111011011010100100001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000010100100110111101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111100001010010011011110110010101100111011011010100100001010000

 > Processed Block:     0111100001010010011011110110010101100111011011010100100001010000


Ciphertext Block 5: 1110010110111011001010110000100100011010001110110010111000110101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101101110110010101100001001

       - Right 32 Bits:            00011010001110110010111000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       00011010001110110010111000110101
          - S-Box Result:     10100100000110001110110000011001   [per every group of 4-bits]
          - Split Into Two:   1010010000011000 [L] 1110110000011001 [R]
          - Swap Halves:      11101100000110011010010000011000
          - Bit Inversion:    00010011111001100101101111100111
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     10001011000001010110100100110011

          - FUNCTION OUTPUT:  10001011000001010110100100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101101110110010101100001001

       - FUNCTION OUTPUT:          10001011000001010110100100110011

       - Left XOR FUNCTION OUTPUT: 01101110101111100100001000111010

       - Next Round Left 32 Bits:  00011010001110110010111000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110101111100100001000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010001110110010111000110101

       - Right 32 Bits:            01101110101111100100001000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       01101110101111100100001000111010
          - S-Box Result:     00001100100011000111111000010100   [per every group of 4-bits]
          - Split Into Two:   0000110010001100 [L] 0111111000010100 [R]
          - Swap Halves:      01111110000101000000110010001100
          - Bit Inversion:    10000001111010111111001101110011
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     00001011100000100110110000110100

          - FUNCTION OUTPUT:  00001011100000100110110000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010001110110010111000110101

       - FUNCTION OUTPUT:          00001011100000100110110000110100

       - Left XOR FUNCTION OUTPUT: 00010001101110010100001000000001

       - Next Round Left 32 Bits:  01101110101111100100001000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001101110010100001000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110101111100100001000111010

       - Right 32 Bits:            00010001101110010100001000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       00010001101110010100001000000001
          - S-Box Result:     10101010100000110111111011111010   [per every group of 4-bits]
          - Split Into Two:   1010101010000011 [L] 0111111011111010 [R]
          - Swap Halves:      01111110111110101010101010000011
          - Bit Inversion:    10000001000001010101010101111100
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     01101011001111011101010100001101

          - FUNCTION OUTPUT:  01101011001111011101010100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110101111100100001000111010

       - FUNCTION OUTPUT:          01101011001111011101010100001101

       - Left XOR FUNCTION OUTPUT: 00000101100000111001011100110111

       - Next Round Left 32 Bits:  00010001101110010100001000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101100000111001011100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001101110010100001000000001

       - Right 32 Bits:            00000101100000111001011100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       00000101100000111001011100110111
          - S-Box Result:     11111001001000010011110100011101   [per every group of 4-bits]
          - Split Into Two:   1111100100100001 [L] 0011110100011101 [R]
          - Swap Halves:      00111101000111011111100100100001
          - Bit Inversion:    11000010111000100000011011011110
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     10101000011110001110110110000111

          - FUNCTION OUTPUT:  10101000011110001110110110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001101110010100001000000001

       - FUNCTION OUTPUT:          10101000011110001110110110000111

       - Left XOR FUNCTION OUTPUT: 10111001110000011010111110000110

       - Next Round Left 32 Bits:  00000101100000111001011100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001110000011010111110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101100000111001011100110111

       - Right 32 Bits:            10111001110000011010111110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       10111001110000011010111110000110
          - S-Box Result:     10000011010110100100101100100000   [per every group of 4-bits]
          - Split Into Two:   1000001101011010 [L] 0100101100100000 [R]
          - Swap Halves:      01001011001000001000001101011010
          - Bit Inversion:    10110100110111110111110010100101
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     10001110010100010001000011111101

          - FUNCTION OUTPUT:  10001110010100010001000011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101100000111001011100110111

       - FUNCTION OUTPUT:          10001110010100010001000011111101

       - Left XOR FUNCTION OUTPUT: 10001011110100101000011111001010

       - Next Round Left 32 Bits:  10111001110000011010111110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011110100101000011111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001110000011010111110000110

       - Right 32 Bits:            10001011110100101000011111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       10001011110100101000011111001010
          - S-Box Result:     00101000011011100010110101010100   [per every group of 4-bits]
          - Split Into Two:   0010100001101110 [L] 0010110101010100 [R]
          - Swap Halves:      00101101010101000010100001101110
          - Bit Inversion:    11010010101010111101011110010001
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     00001000010011011110010111001011

          - FUNCTION OUTPUT:  00001000010011011110010111001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001110000011010111110000110

       - FUNCTION OUTPUT:          00001000010011011110010111001011

       - Left XOR FUNCTION OUTPUT: 10110001100011000100101001001101

       - Next Round Left 32 Bits:  10001011110100101000011111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001100011000100101001001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011110100101000011111001010

       - Right 32 Bits:            10110001100011000100101001001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       10110001100011000100101001001101
          - S-Box Result:     10001010001001010111010001110110   [per every group of 4-bits]
          - Split Into Two:   1000101000100101 [L] 0111010001110110 [R]
          - Swap Halves:      01110100011101101000101000100101
          - Bit Inversion:    10001011100010010111010111011010
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     10000101111011101110111011000100

          - FUNCTION OUTPUT:  10000101111011101110111011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011110100101000011111001010

       - FUNCTION OUTPUT:          10000101111011101110111011000100

       - Left XOR FUNCTION OUTPUT: 00001110001111000110100100001110

       - Next Round Left 32 Bits:  10110001100011000100101001001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110001111000110100100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001100011000100101001001101

       - Right 32 Bits:            00001110001111000110100100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       00001110001111000110100100001110
          - S-Box Result:     11111100000101010000001111111100   [per every group of 4-bits]
          - Split Into Two:   1111110000010101 [L] 0000001111111100 [R]
          - Swap Halves:      00000011111111001111110000010101
          - Bit Inversion:    11111100000000110000001111101010
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     01001010011100101100111100111000

          - FUNCTION OUTPUT:  01001010011100101100111100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001100011000100101001001101

       - FUNCTION OUTPUT:          01001010011100101100111100111000

       - Left XOR FUNCTION OUTPUT: 11111011111111101000010101110101

       - Next Round Left 32 Bits:  00001110001111000110100100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011111111101000010101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110001111000110100100001110

       - Right 32 Bits:            11111011111111101000010101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       11111011111111101000010101110101
          - S-Box Result:     10111000101111000010100111011001   [per every group of 4-bits]
          - Split Into Two:   1011100010111100 [L] 0010100111011001 [R]
          - Swap Halves:      00101001110110011011100010111100
          - Bit Inversion:    11010110001001100100011101000011
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     01010001011111110010000101001000

          - FUNCTION OUTPUT:  01010001011111110010000101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110001111000110100100001110

       - FUNCTION OUTPUT:          01010001011111110010000101001000

       - Left XOR FUNCTION OUTPUT: 01011111010000110100100001000110

       - Next Round Left 32 Bits:  11111011111111101000010101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111010000110100100001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011111111101000010101110101

       - Right 32 Bits:            01011111010000110100100001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       01011111010000110100100001000110
          - S-Box Result:     10011011011100010111001001110000   [per every group of 4-bits]
          - Split Into Two:   1001101101110001 [L] 0111001001110000 [R]
          - Swap Halves:      01110010011100001001101101110001
          - Bit Inversion:    10001101100011110110010010001110
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     01101100110100110001001101110110

          - FUNCTION OUTPUT:  01101100110100110001001101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011111111101000010101110101

       - FUNCTION OUTPUT:          01101100110100110001001101110110

       - Left XOR FUNCTION OUTPUT: 10010111001011011001011000000011

       - Next Round Left 32 Bits:  01011111010000110100100001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111001011011001011000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111010000110100100001000110

       - Right 32 Bits:            10010111001011011001011000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       10010111001011011001011000000011
          - S-Box Result:     00111101111001100011000011110001   [per every group of 4-bits]
          - Split Into Two:   0011110111100110 [L] 0011000011110001 [R]
          - Swap Halves:      00110000111100010011110111100110
          - Bit Inversion:    11001111000011101100001000011001
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     10100110010110001001001101010011

          - FUNCTION OUTPUT:  10100110010110001001001101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111010000110100100001000110

       - FUNCTION OUTPUT:          10100110010110001001001101010011

       - Left XOR FUNCTION OUTPUT: 11111001000110111101101100010101

       - Next Round Left 32 Bits:  10010111001011011001011000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001000110111101101100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111001011011001011000000011

       - Right 32 Bits:            11111001000110111101101100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       11111001000110111101101100010101
          - S-Box Result:     10110011101010000110100010101001   [per every group of 4-bits]
          - Split Into Two:   1011001110101000 [L] 0110100010101001 [R]
          - Swap Halves:      01101000101010011011001110101000
          - Bit Inversion:    10010111010101100100110001010111
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     11101011000000010101010101101101

          - FUNCTION OUTPUT:  11101011000000010101010101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111001011011001011000000011

       - FUNCTION OUTPUT:          11101011000000010101010101101101

       - Left XOR FUNCTION OUTPUT: 01111100001011001100001101101110

       - Next Round Left 32 Bits:  11111001000110111101101100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100001011001100001101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001000110111101101100010101

       - Right 32 Bits:            01111100001011001100001101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       01111100001011001100001101101110
          - S-Box Result:     11010101111001010101000100001100   [per every group of 4-bits]
          - Split Into Two:   1101010111100101 [L] 0101000100001100 [R]
          - Swap Halves:      01010001000011001101010111100101
          - Bit Inversion:    10101110111100110010101000011010
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     11111100101000101011011011000000

          - FUNCTION OUTPUT:  11111100101000101011011011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001000110111101101100010101

       - FUNCTION OUTPUT:          11111100101000101011011011000000

       - Left XOR FUNCTION OUTPUT: 00000101101110010110110111010101

       - Next Round Left 32 Bits:  01111100001011001100001101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101101110010110110111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100001011001100001101101110

       - Right 32 Bits:            00000101101110010110110111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       00000101101110010110110111010101
          - S-Box Result:     11111001100000110000011001101001   [per every group of 4-bits]
          - Split Into Two:   1111100110000011 [L] 0000011001101001 [R]
          - Swap Halves:      00000110011010011111100110000011
          - Bit Inversion:    11111001100101100000011001111100
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     11100110100011111000000000110010

          - FUNCTION OUTPUT:  11100110100011111000000000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100001011001100001101101110

       - FUNCTION OUTPUT:          11100110100011111000000000110010

       - Left XOR FUNCTION OUTPUT: 10011010101000110100001101011100

       - Next Round Left 32 Bits:  00000101101110010110110111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010101000110100001101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101101110010110110111010101

       - Right 32 Bits:            10011010101000110100001101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       10011010101000110100001101011100
          - S-Box Result:     00110100010000010111000110010101   [per every group of 4-bits]
          - Split Into Two:   0011010001000001 [L] 0111000110010101 [R]
          - Swap Halves:      01110001100101010011010001000001
          - Bit Inversion:    10001110011010101100101110111110
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     01011010111100100010100010001100

          - FUNCTION OUTPUT:  01011010111100100010100010001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101101110010110110111010101

       - FUNCTION OUTPUT:          01011010111100100010100010001100

       - Left XOR FUNCTION OUTPUT: 01011111010010110100010101011001

       - Next Round Left 32 Bits:  10011010101000110100001101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111010010110100010101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010101000110100001101011100

       - Right 32 Bits:            01011111010010110100010101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01011111010010110100010101011001
          - S-Box Result:     10011011011110000111100110010011   [per every group of 4-bits]
          - Split Into Two:   1001101101111000 [L] 0111100110010011 [R]
          - Swap Halves:      01111001100100111001101101111000
          - Bit Inversion:    10000110011011000110010010000111
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     11000001111001100000110100011000

          - FUNCTION OUTPUT:  11000001111001100000110100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010101000110100001101011100

       - FUNCTION OUTPUT:          11000001111001100000110100011000

       - Left XOR FUNCTION OUTPUT: 01011011010001010100111001000100

       - Next Round Left 32 Bits:  01011111010010110100010101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010001010100111001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101101101000101010011100100010001011111010010110100010101011001

 > Processed Block:     0101101101000101010011100100010001011111010010110100010101011001


Ciphertext Block 6: 1011001011110001000010101000111110110000010000001000101111000001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010111100010000101010001111

       - Right 32 Bits:            10110000010000001000101111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       10110000010000001000101111000001
          - S-Box Result:     10001111011111110010100001011010   [per every group of 4-bits]
          - Split Into Two:   1000111101111111 [L] 0010100001011010 [R]
          - Swap Halves:      00101000010110101000111101111111
          - Bit Inversion:    11010111101001010111000010000000
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     01001111010001100100001001010100

          - FUNCTION OUTPUT:  01001111010001100100001001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010111100010000101010001111

       - FUNCTION OUTPUT:          01001111010001100100001001010100

       - Left XOR FUNCTION OUTPUT: 11111101101101110100100011011011

       - Next Round Left 32 Bits:  10110000010000001000101111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101101101110100100011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000010000001000101111000001

       - Right 32 Bits:            11111101101101110100100011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       11111101101101110100100011011011
          - S-Box Result:     10110110100011010111001001101000   [per every group of 4-bits]
          - Split Into Two:   1011011010001101 [L] 0111001001101000 [R]
          - Swap Halves:      01110010011010001011011010001101
          - Bit Inversion:    10001101100101110100100101110010
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     00000111111111101101011000110101

          - FUNCTION OUTPUT:  00000111111111101101011000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000010000001000101111000001

       - FUNCTION OUTPUT:          00000111111111101101011000110101

       - Left XOR FUNCTION OUTPUT: 10110111101111100101110111110100

       - Next Round Left 32 Bits:  11111101101101110100100011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111101111100101110111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101101101110100100011011011

       - Right 32 Bits:            10110111101111100101110111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       10110111101111100101110111110100
          - S-Box Result:     10001101100011001001011010110111   [per every group of 4-bits]
          - Split Into Two:   1000110110001100 [L] 1001011010110111 [R]
          - Swap Halves:      10010110101101111000110110001100
          - Bit Inversion:    01101001010010000111001001110011
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     10000011011100001111001000000010

          - FUNCTION OUTPUT:  10000011011100001111001000000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101101101110100100011011011

       - FUNCTION OUTPUT:          10000011011100001111001000000010

       - Left XOR FUNCTION OUTPUT: 01111110110001111011101011011001

       - Next Round Left 32 Bits:  10110111101111100101110111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110110001111011101011011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111101111100101110111110100

       - Right 32 Bits:            01111110110001111011101011011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       01111110110001111011101011011001
          - S-Box Result:     11011100010111011000010001100011   [per every group of 4-bits]
          - Split Into Two:   1101110001011101 [L] 1000010001100011 [R]
          - Swap Halves:      10000100011000111101110001011101
          - Bit Inversion:    01111011100111000010001110100010
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     00010001000001101100100011111011

          - FUNCTION OUTPUT:  00010001000001101100100011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111101111100101110111110100

       - FUNCTION OUTPUT:          00010001000001101100100011111011

       - Left XOR FUNCTION OUTPUT: 10100110101110001001010100001111

       - Next Round Left 32 Bits:  01111110110001111011101011011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110101110001001010100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110110001111011101011011001

       - Right 32 Bits:            10100110101110001001010100001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       10100110101110001001010100001111
          - S-Box Result:     01000000100000100011100111111011   [per every group of 4-bits]
          - Split Into Two:   0100000010000010 [L] 0011100111111011 [R]
          - Swap Halves:      00111001111110110100000010000010
          - Bit Inversion:    11000110000001001011111101111101
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     11111100100010101101001100100101

          - FUNCTION OUTPUT:  11111100100010101101001100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110110001111011101011011001

       - FUNCTION OUTPUT:          11111100100010101101001100100101

       - Left XOR FUNCTION OUTPUT: 10000010010011010110100111111100

       - Next Round Left 32 Bits:  10100110101110001001010100001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010010011010110100111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110101110001001010100001111

       - Right 32 Bits:            10000010010011010110100111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       10000010010011010110100111111100
          - S-Box Result:     00101110011101100000001110110101   [per every group of 4-bits]
          - Split Into Two:   0010111001110110 [L] 0000001110110101 [R]
          - Swap Halves:      00000011101101010010111001110110
          - Bit Inversion:    11111100010010101101000110001001
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     00100110101011001110001111010011

          - FUNCTION OUTPUT:  00100110101011001110001111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110101110001001010100001111

       - FUNCTION OUTPUT:          00100110101011001110001111010011

       - Left XOR FUNCTION OUTPUT: 10000000000101000111011011011100

       - Next Round Left 32 Bits:  10000010010011010110100111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000000101000111011011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010010011010110100111111100

       - Right 32 Bits:            10000000000101000111011011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       10000000000101000111011011011100
          - S-Box Result:     00101111101001111101000001100101   [per every group of 4-bits]
          - Split Into Two:   0010111110100111 [L] 1101000001100101 [R]
          - Swap Halves:      11010000011001010010111110100111
          - Bit Inversion:    00101111100110101101000001011000
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     00100001111111010100101101000110

          - FUNCTION OUTPUT:  00100001111111010100101101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010010011010110100111111100

       - FUNCTION OUTPUT:          00100001111111010100101101000110

       - Left XOR FUNCTION OUTPUT: 10100011101100000010001010111010

       - Next Round Left 32 Bits:  10000000000101000111011011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011101100000010001010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000000101000111011011011100

       - Right 32 Bits:            10100011101100000010001010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       10100011101100000010001010111010
          - S-Box Result:     01000001100011111110111010000100   [per every group of 4-bits]
          - Split Into Two:   0100000110001111 [L] 1110111010000100 [R]
          - Swap Halves:      11101110100001000100000110001111
          - Bit Inversion:    00010001011110111011111001110000
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10100111000010100111001010100010

          - FUNCTION OUTPUT:  10100111000010100111001010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000000101000111011011011100

       - FUNCTION OUTPUT:          10100111000010100111001010100010

       - Left XOR FUNCTION OUTPUT: 00100111000111100000010001111110

       - Next Round Left 32 Bits:  10100011101100000010001010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111000111100000010001111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011101100000010001010111010

       - Right 32 Bits:            00100111000111100000010001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       00100111000111100000010001111110
          - S-Box Result:     11101101101011001111011111011100   [per every group of 4-bits]
          - Split Into Two:   1110110110101100 [L] 1111011111011100 [R]
          - Swap Halves:      11110111110111001110110110101100
          - Bit Inversion:    00001000001000110001001001010011
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     10001111011110100111010001011000

          - FUNCTION OUTPUT:  10001111011110100111010001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011101100000010001010111010

       - FUNCTION OUTPUT:          10001111011110100111010001011000

       - Left XOR FUNCTION OUTPUT: 00101100110010100101011011100010

       - Next Round Left 32 Bits:  00100111000111100000010001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100110010100101011011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111000111100000010001111110

       - Right 32 Bits:            00101100110010100101011011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       00101100110010100101011011100010
          - S-Box Result:     11100101010101001001000011001110   [per every group of 4-bits]
          - Split Into Two:   1110010101010100 [L] 1001000011001110 [R]
          - Swap Halves:      10010000110011101110010101010100
          - Bit Inversion:    01101111001100010001101010101011
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     10001110011011010110110101010011

          - FUNCTION OUTPUT:  10001110011011010110110101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111000111100000010001111110

       - FUNCTION OUTPUT:          10001110011011010110110101010011

       - Left XOR FUNCTION OUTPUT: 10101001011100110110100100101101

       - Next Round Left 32 Bits:  00101100110010100101011011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001011100110110100100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100110010100101011011100010

       - Right 32 Bits:            10101001011100110110100100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       10101001011100110110100100101101
          - S-Box Result:     01000011110100010000001111100110   [per every group of 4-bits]
          - Split Into Two:   0100001111010001 [L] 0000001111100110 [R]
          - Swap Halves:      00000011111001100100001111010001
          - Bit Inversion:    11111100000110011011110000101110
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     10010101010011111110110101100100

          - FUNCTION OUTPUT:  10010101010011111110110101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100110010100101011011100010

       - FUNCTION OUTPUT:          10010101010011111110110101100100

       - Left XOR FUNCTION OUTPUT: 10111001100001011011101110000110

       - Next Round Left 32 Bits:  10101001011100110110100100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001100001011011101110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001011100110110100100101101

       - Right 32 Bits:            10111001100001011011101110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       10111001100001011011101110000110
          - S-Box Result:     10000011001010011000100000100000   [per every group of 4-bits]
          - Split Into Two:   1000001100101001 [L] 1000100000100000 [R]
          - Swap Halves:      10001000001000001000001100101001
          - Bit Inversion:    01110111110111110111110011010110
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     00001011100010000110010111101100

          - FUNCTION OUTPUT:  00001011100010000110010111101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001011100110110100100101101

       - FUNCTION OUTPUT:          00001011100010000110010111101100

       - Left XOR FUNCTION OUTPUT: 10100010111110110000110011000001

       - Next Round Left 32 Bits:  10111001100001011011101110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010111110110000110011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001100001011011101110000110

       - Right 32 Bits:            10100010111110110000110011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       10100010111110110000110011000001
          - S-Box Result:     01001110101110001111010101011010   [per every group of 4-bits]
          - Split Into Two:   0100111010111000 [L] 1111010101011010 [R]
          - Swap Halves:      11110101010110100100111010111000
          - Bit Inversion:    00001010101001011011000101000111
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     01011000111101000010110110011101

          - FUNCTION OUTPUT:  01011000111101000010110110011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001100001011011101110000110

       - FUNCTION OUTPUT:          01011000111101000010110110011101

       - Left XOR FUNCTION OUTPUT: 11100001011100011001011000011011

       - Next Round Left 32 Bits:  10100010111110110000110011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001011100011001011000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010111110110000110011000001

       - Right 32 Bits:            11100001011100011001011000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       11100001011100011001011000011011
          - S-Box Result:     11001010110110100011000010101000   [per every group of 4-bits]
          - Split Into Two:   1100101011011010 [L] 0011000010101000 [R]
          - Swap Halves:      00110000101010001100101011011010
          - Bit Inversion:    11001111010101110011010100100101
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     11010000010011101011001101101011

          - FUNCTION OUTPUT:  11010000010011101011001101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010111110110000110011000001

       - FUNCTION OUTPUT:          11010000010011101011001101101011

       - Left XOR FUNCTION OUTPUT: 01110010101101011011111110101010

       - Next Round Left 32 Bits:  11100001011100011001011000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010101101011011111110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001011100011001011000011011

       - Right 32 Bits:            01110010101101011011111110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       01110010101101011011111110101010
          - S-Box Result:     11011110100010011000101101000100   [per every group of 4-bits]
          - Split Into Two:   1101111010001001 [L] 1000101101000100 [R]
          - Swap Halves:      10001011010001001101111010001001
          - Bit Inversion:    01110100101110110010000101110110
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     10100000001000111100001001000100

          - FUNCTION OUTPUT:  10100000001000111100001001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001011100011001011000011011

       - FUNCTION OUTPUT:          10100000001000111100001001000100

       - Left XOR FUNCTION OUTPUT: 01000001010100100101010001011111

       - Next Round Left 32 Bits:  01110010101101011011111110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001010100100101010001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010101101011011111110101010

       - Right 32 Bits:            01000001010100100101010001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01000001010100100101010001011111
          - S-Box Result:     01111010100111101001011110011011   [per every group of 4-bits]
          - Split Into Two:   0111101010011110 [L] 1001011110011011 [R]
          - Swap Halves:      10010111100110110111101010011110
          - Bit Inversion:    01101000011001001000010101100001
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     00101111111011101110110011111110

          - FUNCTION OUTPUT:  00101111111011101110110011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010101101011011111110101010

       - FUNCTION OUTPUT:          00101111111011101110110011111110

       - Left XOR FUNCTION OUTPUT: 01011101010110110101001101010100

       - Next Round Left 32 Bits:  01000001010100100101010001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101010110110101001101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101110101011011010100110101010001000001010100100101010001011111

 > Processed Block:     0101110101011011010100110101010001000001010100100101010001011111


Ciphertext Block 7: 1000100010111000111000001000001111001110010010111010100011000101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000101110001110000010000011

       - Right 32 Bits:            11001110010010111010100011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       11001110010010111010100011000101
          - S-Box Result:     01011100011110000100001001011001   [per every group of 4-bits]
          - Split Into Two:   0101110001111000 [L] 0100001001011001 [R]
          - Swap Halves:      01000010010110010101110001111000
          - Bit Inversion:    10111101101001101010001110000111
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     00100101010001011001000101010011

          - FUNCTION OUTPUT:  00100101010001011001000101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000101110001110000010000011

       - FUNCTION OUTPUT:          00100101010001011001000101010011

       - Left XOR FUNCTION OUTPUT: 10101101111111010111000111010000

       - Next Round Left 32 Bits:  11001110010010111010100011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101111111010111000111010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110010010111010100011000101

       - Right 32 Bits:            10101101111111010111000111010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       10101101111111010111000111010000
          - S-Box Result:     01000110101101101101101001101111   [per every group of 4-bits]
          - Split Into Two:   0100011010110110 [L] 1101101001101111 [R]
          - Swap Halves:      11011010011011110100011010110110
          - Bit Inversion:    00100101100100001011100101001001
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     10101111111110010010011000001110

          - FUNCTION OUTPUT:  10101111111110010010011000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110010010111010100011000101

       - FUNCTION OUTPUT:          10101111111110010010011000001110

       - Left XOR FUNCTION OUTPUT: 01100001101100101000111011001011

       - Next Round Left 32 Bits:  10101101111111010111000111010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001101100101000111011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101111111010111000111010000

       - Right 32 Bits:            01100001101100101000111011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       01100001101100101000111011001011
          - S-Box Result:     00001010100011100010110001011000   [per every group of 4-bits]
          - Split Into Two:   0000101010001110 [L] 0010110001011000 [R]
          - Swap Halves:      00101100010110000000101010001110
          - Bit Inversion:    11010011101001111111010101110001
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     00111001100111110111010100000000

          - FUNCTION OUTPUT:  00111001100111110111010100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101111111010111000111010000

       - FUNCTION OUTPUT:          00111001100111110111010100000000

       - Left XOR FUNCTION OUTPUT: 10010100011000100000010011010000

       - Next Round Left 32 Bits:  01100001101100101000111011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100011000100000010011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001101100101000111011001011

       - Right 32 Bits:            10010100011000100000010011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       10010100011000100000010011010000
          - S-Box Result:     00110111000011101111011101101111   [per every group of 4-bits]
          - Split Into Two:   0011011100001110 [L] 1111011101101111 [R]
          - Swap Halves:      11110111011011110011011100001110
          - Bit Inversion:    00001000100100001100100011110001
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     01100010000010100010001110101000

          - FUNCTION OUTPUT:  01100010000010100010001110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001101100101000111011001011

       - FUNCTION OUTPUT:          01100010000010100010001110101000

       - Left XOR FUNCTION OUTPUT: 00000011101110001010110101100011

       - Next Round Left 32 Bits:  10010100011000100000010011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011101110001010110101100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100011000100000010011010000

       - Right 32 Bits:            00000011101110001010110101100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       00000011101110001010110101100011
          - S-Box Result:     11110001100000100100011000000001   [per every group of 4-bits]
          - Split Into Two:   1111000110000010 [L] 0100011000000001 [R]
          - Swap Halves:      01000110000000011111000110000010
          - Bit Inversion:    10111001111111100000111001111101
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     10000011011100000110001000100101

          - FUNCTION OUTPUT:  10000011011100000110001000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100011000100000010011010000

       - FUNCTION OUTPUT:          10000011011100000110001000100101

       - Left XOR FUNCTION OUTPUT: 00010111000100100110011011110101

       - Next Round Left 32 Bits:  00000011101110001010110101100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111000100100110011011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011101110001010110101100011

       - Right 32 Bits:            00010111000100100110011011110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       00010111000100100110011011110101
          - S-Box Result:     10101101101011100000000010111001   [per every group of 4-bits]
          - Split Into Two:   1010110110101110 [L] 0000000010111001 [R]
          - Swap Halves:      00000000101110011010110110101110
          - Bit Inversion:    11111111010001100101001001010001
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     00100101101000000110000000001011

          - FUNCTION OUTPUT:  00100101101000000110000000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011101110001010110101100011

       - FUNCTION OUTPUT:          00100101101000000110000000001011

       - Left XOR FUNCTION OUTPUT: 00100110000110001100110101101000

       - Next Round Left 32 Bits:  00010111000100100110011011110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110000110001100110101101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111000100100110011011110101

       - Right 32 Bits:            00100110000110001100110101101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       00100110000110001100110101101000
          - S-Box Result:     11100000101000100101011000000010   [per every group of 4-bits]
          - Split Into Two:   1110000010100010 [L] 0101011000000010 [R]
          - Swap Halves:      01010110000000101110000010100010
          - Bit Inversion:    10101001111111010001111101011101
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     10100111100110101000010001000011

          - FUNCTION OUTPUT:  10100111100110101000010001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111000100100110011011110101

       - FUNCTION OUTPUT:          10100111100110101000010001000011

       - Left XOR FUNCTION OUTPUT: 10110000100010001110001010110110

       - Next Round Left 32 Bits:  00100110000110001100110101101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000100010001110001010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110000110001100110101101000

       - Right 32 Bits:            10110000100010001110001010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       10110000100010001110001010110110
          - S-Box Result:     10001111001000101100111010000000   [per every group of 4-bits]
          - Split Into Two:   1000111100100010 [L] 1100111010000000 [R]
          - Swap Halves:      11001110100000001000111100100010
          - Bit Inversion:    00110001011111110111000011011101
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10000111000011101011110000001111

          - FUNCTION OUTPUT:  10000111000011101011110000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110000110001100110101101000

       - FUNCTION OUTPUT:          10000111000011101011110000001111

       - Left XOR FUNCTION OUTPUT: 10100001000101100111000101100111

       - Next Round Left 32 Bits:  10110000100010001110001010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001000101100111000101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000100010001110001010110110

       - Right 32 Bits:            10100001000101100111000101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       10100001000101100111000101100111
          - S-Box Result:     01001010101000001101101000001101   [per every group of 4-bits]
          - Split Into Two:   0100101010100000 [L] 1101101000001101 [R]
          - Swap Halves:      11011010000011010100101010100000
          - Bit Inversion:    00100101111100101011010101011111
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     10100010101010111101001101010100

          - FUNCTION OUTPUT:  10100010101010111101001101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000100010001110001010110110

       - FUNCTION OUTPUT:          10100010101010111101001101010100

       - Left XOR FUNCTION OUTPUT: 00010010001000110011000111100010

       - Next Round Left 32 Bits:  10100001000101100111000101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001000110011000111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001000101100111000101100111

       - Right 32 Bits:            00010010001000110011000111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       00010010001000110011000111100010
          - S-Box Result:     10101110111000010001101011001110   [per every group of 4-bits]
          - Split Into Two:   1010111011100001 [L] 0001101011001110 [R]
          - Swap Halves:      00011010110011101010111011100001
          - Bit Inversion:    11100101001100010101000100011110
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     00000100011011010010011011100110

          - FUNCTION OUTPUT:  00000100011011010010011011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001000101100111000101100111

       - FUNCTION OUTPUT:          00000100011011010010011011100110

       - Left XOR FUNCTION OUTPUT: 10100101011110110101011110000001

       - Next Round Left 32 Bits:  00010010001000110011000111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101011110110101011110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010001000110011000111100010

       - Right 32 Bits:            10100101011110110101011110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       10100101011110110101011110000001
          - S-Box Result:     01001001110110001001110100101010   [per every group of 4-bits]
          - Split Into Two:   0100100111011000 [L] 1001110100101010 [R]
          - Swap Halves:      10011101001010100100100111011000
          - Bit Inversion:    01100010110101011011011000100111
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     00001011100000111110011101101101

          - FUNCTION OUTPUT:  00001011100000111110011101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010001000110011000111100010

       - FUNCTION OUTPUT:          00001011100000111110011101101101

       - Left XOR FUNCTION OUTPUT: 00011001101000001101011010001111

       - Next Round Left 32 Bits:  10100101011110110101011110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001101000001101011010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101011110110101011110000001

       - Right 32 Bits:            00011001101000001101011010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       00011001101000001101011010001111
          - S-Box Result:     10100011010011110110000000101011   [per every group of 4-bits]
          - Split Into Two:   1010001101001111 [L] 0110000000101011 [R]
          - Swap Halves:      01100000001010111010001101001111
          - Bit Inversion:    10011111110101000101110010110000
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     11100011100000110100010110001010

          - FUNCTION OUTPUT:  11100011100000110100010110001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101011110110101011110000001

       - FUNCTION OUTPUT:          11100011100000110100010110001010

       - Left XOR FUNCTION OUTPUT: 01000110111110000001001000001011

       - Next Round Left 32 Bits:  00011001101000001101011010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110111110000001001000001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001101000001101011010001111

       - Right 32 Bits:            01000110111110000001001000001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       01000110111110000001001000001011
          - S-Box Result:     01110000101100101010111011111000   [per every group of 4-bits]
          - Split Into Two:   0111000010110010 [L] 1010111011111000 [R]
          - Swap Halves:      10101110111110000111000010110010
          - Bit Inversion:    01010001000001111000111101001101
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     00000011010101100001001110010111

          - FUNCTION OUTPUT:  00000011010101100001001110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001101000001101011010001111

       - FUNCTION OUTPUT:          00000011010101100001001110010111

       - Left XOR FUNCTION OUTPUT: 00011010111101101100010100011000

       - Next Round Left 32 Bits:  01000110111110000001001000001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010111101101100010100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110111110000001001000001011

       - Right 32 Bits:            00011010111101101100010100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       00011010111101101100010100011000
          - S-Box Result:     10100100101100000101100110100010   [per every group of 4-bits]
          - Split Into Two:   1010010010110000 [L] 0101100110100010 [R]
          - Swap Halves:      01011001101000101010010010110000
          - Bit Inversion:    10100110010111010101101101001111
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     10111001010001001101110100000001

          - FUNCTION OUTPUT:  10111001010001001101110100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110111110000001001000001011

       - FUNCTION OUTPUT:          10111001010001001101110100000001

       - Left XOR FUNCTION OUTPUT: 11111111101111001100111100001010

       - Next Round Left 32 Bits:  00011010111101101100010100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111101111001100111100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010111101101100010100011000

       - Right 32 Bits:            11111111101111001100111100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       11111111101111001100111100001010
          - S-Box Result:     10111011100001010101101111110100   [per every group of 4-bits]
          - Split Into Two:   1011101110000101 [L] 0101101111110100 [R]
          - Swap Halves:      01011011111101001011101110000101
          - Bit Inversion:    10100100000010110100010001111010
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     01110000100100111010011101001000

          - FUNCTION OUTPUT:  01110000100100111010011101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010111101101100010100011000

       - FUNCTION OUTPUT:          01110000100100111010011101001000

       - Left XOR FUNCTION OUTPUT: 01101010011001010110001001010000

       - Next Round Left 32 Bits:  11111111101111001100111100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010011001010110001001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111101111001100111100001010

       - Right 32 Bits:            01101010011001010110001001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01101010011001010110001001010000
          - S-Box Result:     00000100000010010000111010011111   [per every group of 4-bits]
          - Split Into Two:   0000010000001001 [L] 0000111010011111 [R]
          - Swap Halves:      00001110100111110000010000001001
          - Bit Inversion:    11110001011000001111101111110110
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     10110110111010101001001001101001

          - FUNCTION OUTPUT:  10110110111010101001001001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111101111001100111100001010

       - FUNCTION OUTPUT:          10110110111010101001001001101001

       - Left XOR FUNCTION OUTPUT: 01001001010101100101110101100011

       - Next Round Left 32 Bits:  01101010011001010110001001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001010101100101110101100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100100101010110010111010110001101101010011001010110001001010000

 > Processed Block:     0100100101010110010111010110001101101010011001010110001001010000


Ciphertext Block 8: 1001101110000001110000010000111011101100001110010001110101000010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011100000011100000100001110

       - Right 32 Bits:            11101100001110010001110101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       11101100001110010001110101000010
          - S-Box Result:     11000101000100111010011001111110   [per every group of 4-bits]
          - Split Into Two:   1100010100010011 [L] 1010011001111110 [R]
          - Swap Halves:      10100110011111101100010100010011
          - Bit Inversion:    01011001100000010011101011101100
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     11000001011000100000100000111000

          - FUNCTION OUTPUT:  11000001011000100000100000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011100000011100000100001110

       - FUNCTION OUTPUT:          11000001011000100000100000111000

       - Left XOR FUNCTION OUTPUT: 01011010111000111100100100110110

       - Next Round Left 32 Bits:  11101100001110010001110101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010111000111100100100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100001110010001110101000010

       - Right 32 Bits:            01011010111000111100100100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       01011010111000111100100100110110
          - S-Box Result:     10010100110000010101001100010000   [per every group of 4-bits]
          - Split Into Two:   1001010011000001 [L] 0101001100010000 [R]
          - Swap Halves:      01010011000100001001010011000001
          - Bit Inversion:    10101100111011110110101100111110
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     00100110100001101111010001111001

          - FUNCTION OUTPUT:  00100110100001101111010001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100001110010001110101000010

       - FUNCTION OUTPUT:          00100110100001101111010001111001

       - Left XOR FUNCTION OUTPUT: 11001010101111111110100100111011

       - Next Round Left 32 Bits:  01011010111000111100100100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010101111111110100100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010111000111100100100110110

       - Right 32 Bits:            11001010101111111110100100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       11001010101111111110100100111011
          - S-Box Result:     01010100100010111100001100011000   [per every group of 4-bits]
          - Split Into Two:   0101010010001011 [L] 1100001100011000 [R]
          - Swap Halves:      11000011000110000101010010001011
          - Bit Inversion:    00111100111001111010101101110100
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     11010110110111110010101100000101

          - FUNCTION OUTPUT:  11010110110111110010101100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010111000111100100100110110

       - FUNCTION OUTPUT:          11010110110111110010101100000101

       - Left XOR FUNCTION OUTPUT: 10001100001111001110001000110011

       - Next Round Left 32 Bits:  11001010101111111110100100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100001111001110001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010101111111110100100111011

       - Right 32 Bits:            10001100001111001110001000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       10001100001111001110001000110011
          - S-Box Result:     00100101000101011100111000010001   [per every group of 4-bits]
          - Split Into Two:   0010010100010101 [L] 1100111000010001 [R]
          - Swap Halves:      11001110000100010010010100010101
          - Bit Inversion:    00110001111011101101101011101010
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     01011011011101000011000110110011

          - FUNCTION OUTPUT:  01011011011101000011000110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010101111111110100100111011

       - FUNCTION OUTPUT:          01011011011101000011000110110011

       - Left XOR FUNCTION OUTPUT: 10010001110010111101100010001000

       - Next Round Left 32 Bits:  10001100001111001110001000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001110010111101100010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100001111001110001000110011

       - Right 32 Bits:            10010001110010111101100010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       10010001110010111101100010001000
          - S-Box Result:     00111010010110000110001000100010   [per every group of 4-bits]
          - Split Into Two:   0011101001011000 [L] 0110001000100010 [R]
          - Swap Halves:      01100010001000100011101001011000
          - Bit Inversion:    10011101110111011100010110100111
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     10100111010100111010100111111111

          - FUNCTION OUTPUT:  10100111010100111010100111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100001111001110001000110011

       - FUNCTION OUTPUT:          10100111010100111010100111111111

       - Left XOR FUNCTION OUTPUT: 00101011011011110100101111001100

       - Next Round Left 32 Bits:  10010001110010111101100010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011011011110100101111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001110010111101100010001000

       - Right 32 Bits:            00101011011011110100101111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       00101011011011110100101111001100
          - S-Box Result:     11101000000010110111100001010101   [per every group of 4-bits]
          - Split Into Two:   1110100000001011 [L] 0111100001010101 [R]
          - Swap Halves:      01111000010101011110100000001011
          - Bit Inversion:    10000111101010100001011111110100
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     01011101010011000010010110101110

          - FUNCTION OUTPUT:  01011101010011000010010110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001110010111101100010001000

       - FUNCTION OUTPUT:          01011101010011000010010110101110

       - Left XOR FUNCTION OUTPUT: 11001100100001111111110100100110

       - Next Round Left 32 Bits:  00101011011011110100101111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100100001111111110100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011011011110100101111001100

       - Right 32 Bits:            11001100100001111111110100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       11001100100001111111110100100110
          - S-Box Result:     01010101001011011011011011100000   [per every group of 4-bits]
          - Split Into Two:   0101010100101101 [L] 1011011011100000 [R]
          - Swap Halves:      10110110111000000101010100101101
          - Bit Inversion:    01001001000111111010101011010010
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     01000111011110000011000111001100

          - FUNCTION OUTPUT:  01000111011110000011000111001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011011011110100101111001100

       - FUNCTION OUTPUT:          01000111011110000011000111001100

       - Left XOR FUNCTION OUTPUT: 01101100000101110111101000000000

       - Next Round Left 32 Bits:  11001100100001111111110100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100000101110111101000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100100001111111110100100110

       - Right 32 Bits:            01101100000101110111101000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       01101100000101110111101000000000
          - S-Box Result:     00000101101011011101010011111111   [per every group of 4-bits]
          - Split Into Two:   0000010110101101 [L] 1101010011111111 [R]
          - Swap Halves:      11010100111111110000010110101101
          - Bit Inversion:    00101011000000001111101001010010
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10011101011100010011011010000000

          - FUNCTION OUTPUT:  10011101011100010011011010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100100001111111110100100110

       - FUNCTION OUTPUT:          10011101011100010011011010000000

       - Left XOR FUNCTION OUTPUT: 01010001111101101100101110100110

       - Next Round Left 32 Bits:  01101100000101110111101000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001111101101100101110100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100000101110111101000000000

       - Right 32 Bits:            01010001111101101100101110100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       01010001111101101100101110100110
          - S-Box Result:     10011010101100000101100001000000   [per every group of 4-bits]
          - Split Into Two:   1001101010110000 [L] 0101100001000000 [R]
          - Swap Halves:      01011000010000001001101010110000
          - Bit Inversion:    10100111101111110110010101001111
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     00100000111001100000001101000100

          - FUNCTION OUTPUT:  00100000111001100000001101000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100000101110111101000000000

       - FUNCTION OUTPUT:          00100000111001100000001101000100

       - Left XOR FUNCTION OUTPUT: 01001100111100010111100101000100

       - Next Round Left 32 Bits:  01010001111101101100101110100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100111100010111100101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001111101101100101110100110

       - Right 32 Bits:            01001100111100010111100101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       01001100111100010111100101000100
          - S-Box Result:     01110101101110101101001101110111   [per every group of 4-bits]
          - Split Into Two:   0111010110111010 [L] 1101001101110111 [R]
          - Swap Halves:      11010011011101110111010110111010
          - Bit Inversion:    00101100100010001000101001000101
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     11001101110101001111110110111101

          - FUNCTION OUTPUT:  11001101110101001111110110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001111101101100101110100110

       - FUNCTION OUTPUT:          11001101110101001111110110111101

       - Left XOR FUNCTION OUTPUT: 10011100001000100011011000011011

       - Next Round Left 32 Bits:  01001100111100010111100101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100001000100011011000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100111100010111100101000100

       - Right 32 Bits:            10011100001000100011011000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       10011100001000100011011000011011
          - S-Box Result:     00110101111011100001000010101000   [per every group of 4-bits]
          - Split Into Two:   0011010111101110 [L] 0001000010101000 [R]
          - Swap Halves:      00010000101010000011010111101110
          - Bit Inversion:    11101111010101111100101000010001
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     10000110000000011001101101011011

          - FUNCTION OUTPUT:  10000110000000011001101101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100111100010111100101000100

       - FUNCTION OUTPUT:          10000110000000011001101101011011

       - Left XOR FUNCTION OUTPUT: 11001010111100001110001000011111

       - Next Round Left 32 Bits:  10011100001000100011011000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010111100001110001000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100001000100011011000011011

       - Right 32 Bits:            11001010111100001110001000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       11001010111100001110001000011111
          - S-Box Result:     01010100101111111100111010101011   [per every group of 4-bits]
          - Split Into Two:   0101010010111111 [L] 1100111010101011 [R]
          - Swap Halves:      11001110101010110101010010111111
          - Bit Inversion:    00110001010101001010101101000000
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     01001101000000111011001001111010

          - FUNCTION OUTPUT:  01001101000000111011001001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100001000100011011000011011

       - FUNCTION OUTPUT:          01001101000000111011001001111010

       - Left XOR FUNCTION OUTPUT: 11010001001000011000010001100001

       - Next Round Left 32 Bits:  11001010111100001110001000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001001000011000010001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010111100001110001000011111

       - Right 32 Bits:            11010001001000011000010001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       11010001001000011000010001100001
          - S-Box Result:     01101010111010100010011100001010   [per every group of 4-bits]
          - Split Into Two:   0110101011101010 [L] 0010011100001010 [R]
          - Swap Halves:      00100111000010100110101011101010
          - Bit Inversion:    11011000111101011001010100010101
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     10001010101001000000100111001111

          - FUNCTION OUTPUT:  10001010101001000000100111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010111100001110001000011111

       - FUNCTION OUTPUT:          10001010101001000000100111001111

       - Left XOR FUNCTION OUTPUT: 01000000010101001110101111010000

       - Next Round Left 32 Bits:  11010001001000011000010001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000010101001110101111010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001001000011000010001100001

       - Right 32 Bits:            01000000010101001110101111010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       01000000010101001110101111010000
          - S-Box Result:     01111111100101111100100001101111   [per every group of 4-bits]
          - Split Into Two:   0111111110010111 [L] 1100100001101111 [R]
          - Swap Halves:      11001000011011110111111110010111
          - Bit Inversion:    00110111100100001000000001101000
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     00101000100010010000011000100110

          - FUNCTION OUTPUT:  00101000100010010000011000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001001000011000010001100001

       - FUNCTION OUTPUT:          00101000100010010000011000100110

       - Left XOR FUNCTION OUTPUT: 11111001101010001000001001000111

       - Next Round Left 32 Bits:  01000000010101001110101111010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001101010001000001001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000010101001110101111010000

       - Right 32 Bits:            11111001101010001000001001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       11111001101010001000001001000111
          - S-Box Result:     10110011010000100010111001111101   [per every group of 4-bits]
          - Split Into Two:   1011001101000010 [L] 0010111001111101 [R]
          - Swap Halves:      00101110011111011011001101000010
          - Bit Inversion:    11010001100000100100110010111101
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     00000101000110101010111110001111

          - FUNCTION OUTPUT:  00000101000110101010111110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000010101001110101111010000

       - FUNCTION OUTPUT:          00000101000110101010111110001111

       - Left XOR FUNCTION OUTPUT: 01000101010011100100010001011111

       - Next Round Left 32 Bits:  11111001101010001000001001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101010011100100010001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001101010001000001001000111

       - Right 32 Bits:            01000101010011100100010001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       01000101010011100100010001011111
          - S-Box Result:     01111001011111000111011110011011   [per every group of 4-bits]
          - Split Into Two:   0111100101111100 [L] 0111011110011011 [R]
          - Swap Halves:      01110111100110110111100101111100
          - Bit Inversion:    10001000011001001000011010000011
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     11001111111011101110111100011100

          - FUNCTION OUTPUT:  11001111111011101110111100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001101010001000001001000111

       - FUNCTION OUTPUT:          11001111111011101110111100011100

       - Left XOR FUNCTION OUTPUT: 00110110010001100110110101011011

       - Next Round Left 32 Bits:  01000101010011100100010001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110010001100110110101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011011001000110011011010101101101000101010011100100010001011111

 > Processed Block:     0011011001000110011011010101101101000101010011100100010001011111


Ciphertext Block 9: 1111010000110001010010011011001110110111010010110100100101100101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100001100010100100110110011

       - Right 32 Bits:            10110111010010110100100101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010100100110110100110010011100000101011101001000   [Subkey: 16]
          - Input Half:       10110111010010110100100101100101
          - S-Box Result:     10001101011110000111001100001001   [per every group of 4-bits]
          - Split Into Two:   1000110101111000 [L] 0111001100001001 [R]
          - Swap Halves:      01110011000010011000110101111000
          - Bit Inversion:    10001100111101100111001010000111
          - Compressed Key:   10011000111000110011001011010100   [done by compression P-Box]
          - XOR with Key:     00010100000101010100000001010011

          - FUNCTION OUTPUT:  00010100000101010100000001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100001100010100100110110011

       - FUNCTION OUTPUT:          00010100000101010100000001010011

       - Left XOR FUNCTION OUTPUT: 11100000001001000000100111100000

       - Next Round Left 32 Bits:  10110111010010110100100101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000001001000000100111100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111010010110100100101100101

       - Right 32 Bits:            11100000001001000000100111100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001010101101100100101100110110001111101010001011011   [Subkey: 15]
          - Input Half:       11100000001001000000100111100000
          - S-Box Result:     11001111111001111111001111001111   [per every group of 4-bits]
          - Split Into Two:   1100111111100111 [L] 1111001111001111 [R]
          - Swap Halves:      11110011110011111100111111100111
          - Bit Inversion:    00001100001100000011000000011000
          - Compressed Key:   10001010011010011001111101000111   [done by compression P-Box]
          - XOR with Key:     10000110010110011010111101011111

          - FUNCTION OUTPUT:  10000110010110011010111101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111010010110100100101100101

       - FUNCTION OUTPUT:          10000110010110011010111101011111

       - Left XOR FUNCTION OUTPUT: 00110001000100101110011000111010

       - Next Round Left 32 Bits:  11100000001001000000100111100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001000100101110011000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000001001000000100111100000

       - Right 32 Bits:            00110001000100101110011000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011010101001001101101001100100111000001010111010010   [Subkey: 14]
          - Input Half:       00110001000100101110011000111010
          - S-Box Result:     00011010101011101100000000010100   [per every group of 4-bits]
          - Split Into Two:   0001101010101110 [L] 1100000000010100 [R]
          - Swap Halves:      11000000000101000001101010101110
          - Bit Inversion:    00111111111010111110010101010001
          - Compressed Key:   11101010001110001000000001110001   [done by compression P-Box]
          - XOR with Key:     11010101110100110110010100100000

          - FUNCTION OUTPUT:  11010101110100110110010100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000001001000000100111100000

       - FUNCTION OUTPUT:          11010101110100110110010100100000

       - Left XOR FUNCTION OUTPUT: 00110101111101110110110011000000

       - Next Round Left 32 Bits:  00110001000100101110011000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101111101110110110011000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001000100101110011000111010

       - Right 32 Bits:            00110101111101110110110011000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110010010101011011001001011001101100011111010100010110   [Subkey: 13]
          - Input Half:       00110101111101110110110011000000
          - S-Box Result:     00011001101111010000010101011111   [per every group of 4-bits]
          - Split Into Two:   0001100110111101 [L] 0000010101011111 [R]
          - Swap Halves:      00000101010111110001100110111101
          - Bit Inversion:    11111010101000001110011001000010
          - Compressed Key:   01101010100110101110101101011001   [done by compression P-Box]
          - XOR with Key:     10010000001110100000110100011011

          - FUNCTION OUTPUT:  10010000001110100000110100011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001000100101110011000111010

       - FUNCTION OUTPUT:          10010000001110100000110100011011

       - Left XOR FUNCTION OUTPUT: 10100001001010001110101100100001

       - Next Round Left 32 Bits:  00110101111101110110110011000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001001010001110101100100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101111101110110110011000000

       - Right 32 Bits:            10100001001010001110101100100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000110110101010010011011010011001001110000010101110100   [Subkey: 12]
          - Input Half:       10100001001010001110101100100001
          - S-Box Result:     01001010111000101100100011101010   [per every group of 4-bits]
          - Split Into Two:   0100101011100010 [L] 1100100011101010 [R]
          - Swap Halves:      11001000111010100100101011100010
          - Bit Inversion:    00110111000101011011010100011101
          - Compressed Key:   00111010100011100110110001011000   [done by compression P-Box]
          - XOR with Key:     00001101100110111101100101000101

          - FUNCTION OUTPUT:  00001101100110111101100101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101111101110110110011000000

       - FUNCTION OUTPUT:          00001101100110111101100101000101

       - Left XOR FUNCTION OUTPUT: 00111000011011001011010110000101

       - Next Round Left 32 Bits:  10100001001010001110101100100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000011011001011010110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001001010001110101100100001

       - Right 32 Bits:            00111000011011001011010110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100100101010110110010010110011011000111110101000101   [Subkey: 11]
          - Input Half:       00111000011011001011010110000101
          - S-Box Result:     00010010000001011000100100101001   [per every group of 4-bits]
          - Split Into Two:   0001001000000101 [L] 1000100100101001 [R]
          - Swap Halves:      10001001001010010001001000000101
          - Bit Inversion:    01110110110101101110110111111010
          - Compressed Key:   11011010111001100011001001011010   [done by compression P-Box]
          - XOR with Key:     10101100001100001101111110100000

          - FUNCTION OUTPUT:  10101100001100001101111110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001001010001110101100100001

       - FUNCTION OUTPUT:          10101100001100001101111110100000

       - Left XOR FUNCTION OUTPUT: 00001101000110000011010010000001

       - Next Round Left 32 Bits:  00111000011011001011010110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101000110000011010010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000011011001011010110000101

       - Right 32 Bits:            00001101000110000011010010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001101101010100100110110100110010011100000101011101   [Subkey: 10]
          - Input Half:       00001101000110000011010010000001
          - S-Box Result:     11110110101000100001011100101010   [per every group of 4-bits]
          - Split Into Two:   1111011010100010 [L] 0001011100101010 [R]
          - Swap Halves:      00010111001010101111011010100010
          - Bit Inversion:    11101000110101010000100101011101
          - Compressed Key:   00001110011001111001101100011110   [done by compression P-Box]
          - XOR with Key:     11100110101100101001001001000011

          - FUNCTION OUTPUT:  11100110101100101001001001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000011011001011010110000101

       - FUNCTION OUTPUT:          11100110101100101001001001000011

       - Left XOR FUNCTION OUTPUT: 11011110110111100010011111000110

       - Next Round Left 32 Bits:  00001101000110000011010010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110110111100010011111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101000110000011010010000001

       - Right 32 Bits:            11011110110111100010011111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001001010101101100100101100110110001111101010001   [Subkey: 9]
          - Input Half:       11011110110111100010011111000110
          - S-Box Result:     01101100011011001110110101010000   [per every group of 4-bits]
          - Split Into Two:   0110110001101100 [L] 1110110101010000 [R]
          - Swap Halves:      11101101010100000110110001101100
          - Bit Inversion:    00010010101011111001001110010011
          - Compressed Key:   10110110011100011100110011010010   [done by compression P-Box]
          - XOR with Key:     10100100110111100101111101000001

          - FUNCTION OUTPUT:  10100100110111100101111101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101000110000011010010000001

       - FUNCTION OUTPUT:          10100100110111100101111101000001

       - Left XOR FUNCTION OUTPUT: 10101001110001100110101111000000

       - Next Round Left 32 Bits:  11011110110111100010011111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001110001100110101111000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110110111100010011111000110

       - Right 32 Bits:            10101001110001100110101111000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011011010101001001101101001100100111000001010111   [Subkey: 8]
          - Input Half:       10101001110001100110101111000000
          - S-Box Result:     01000011010100000000100001011111   [per every group of 4-bits]
          - Split Into Two:   0100001101010000 [L] 0000100001011111 [R]
          - Swap Halves:      00001000010111110100001101010000
          - Bit Inversion:    11110111101000001011110010101111
          - Compressed Key:   10000111010110010110011000001011   [done by compression P-Box]
          - XOR with Key:     01110000111110011101101010100100

          - FUNCTION OUTPUT:  01110000111110011101101010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110110111100010011111000110

       - FUNCTION OUTPUT:          01110000111110011101101010100100

       - Left XOR FUNCTION OUTPUT: 10101110001001111111110101100010

       - Next Round Left 32 Bits:  10101001110001100110101111000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110001001111111110101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001110001100110101111000000

       - Right 32 Bits:            10101110001001111111110101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011110010010101011011001001011001101100011111010100   [Subkey: 7]
          - Input Half:       10101110001001111111110101100010
          - S-Box Result:     01001100111011011011011000001110   [per every group of 4-bits]
          - Split Into Two:   0100110011101101 [L] 1011011000001110 [R]
          - Swap Halves:      10110110000011100100110011101101
          - Bit Inversion:    01001001111100011011001100010010
          - Compressed Key:   11100001010111000111011111111000   [done by compression P-Box]
          - XOR with Key:     10101000101011011100010011101010

          - FUNCTION OUTPUT:  10101000101011011100010011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001110001100110101111000000

       - FUNCTION OUTPUT:          10101000101011011100010011101010

       - Left XOR FUNCTION OUTPUT: 00000001011010111010111100101010

       - Next Round Left 32 Bits:  10101110001001111111110101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001011010111010111100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110001001111111110101100010

       - Right 32 Bits:            00000001011010111010111100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010000110110101010010011011010011001001110000010101   [Subkey: 6]
          - Input Half:       00000001011010111010111100101010
          - S-Box Result:     11111010000010000100101111100100   [per every group of 4-bits]
          - Split Into Two:   1111101000001000 [L] 0100101111100100 [R]
          - Swap Halves:      01001011111001001111101000001000
          - Bit Inversion:    10110100000110110000010111110111
          - Compressed Key:   01101001010101100101000101001010   [done by compression P-Box]
          - XOR with Key:     11011101010011010101010010111101

          - FUNCTION OUTPUT:  11011101010011010101010010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110001001111111110101100010

       - FUNCTION OUTPUT:          11011101010011010101010010111101

       - Left XOR FUNCTION OUTPUT: 01110011011010101010100111011111

       - Next Round Left 32 Bits:  00000001011010111010111100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011011010101010100111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001011010111010111100101010

       - Right 32 Bits:            01110011011010101010100111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111100100101010110110010010110011011000111110101   [Subkey: 5]
          - Input Half:       01110011011010101010100111011111
          - S-Box Result:     11010001000001000100001101101011   [per every group of 4-bits]
          - Split Into Two:   1101000100000100 [L] 0100001101101011 [R]
          - Swap Halves:      01000011011010111101000100000100
          - Bit Inversion:    10111100100101000010111011111011
          - Compressed Key:   01111100010101110001100100111010   [done by compression P-Box]
          - XOR with Key:     11000000110000110011011111000001

          - FUNCTION OUTPUT:  11000000110000110011011111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001011010111010111100101010

       - FUNCTION OUTPUT:          11000000110000110011011111000001

       - Left XOR FUNCTION OUTPUT: 11000001101010001001100011101011

       - Next Round Left 32 Bits:  01110011011010101010100111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001101010001001100011101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011011010101010100111011111

       - Right 32 Bits:            11000001101010001001100011101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100100001101101010100100110110100110010011100000101   [Subkey: 4]
          - Input Half:       11000001101010001001100011101011
          - S-Box Result:     01011010010000100011001011001000   [per every group of 4-bits]
          - Split Into Two:   0101101001000010 [L] 0011001011001000 [R]
          - Swap Halves:      00110010110010000101101001000010
          - Bit Inversion:    11001101001101111010010110111101
          - Compressed Key:   01010010010100011001110011011010   [done by compression P-Box]
          - XOR with Key:     10011111011001100011100101100111

          - FUNCTION OUTPUT:  10011111011001100011100101100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011011010101010100111011111

       - FUNCTION OUTPUT:          10011111011001100011100101100111

       - Left XOR FUNCTION OUTPUT: 11101100000011001001000010111000

       - Next Round Left 32 Bits:  11000001101010001001100011101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100000011001001000010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001101010001001100011101011

       - Right 32 Bits:            11101100000011001001000010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101101111001001010101101100100101100110110001111101   [Subkey: 3]
          - Input Half:       11101100000011001001000010111000
          - S-Box Result:     11000101111101010011111110000010   [per every group of 4-bits]
          - Split Into Two:   1100010111110101 [L] 0011111110000010 [R]
          - Swap Halves:      00111111100000101100010111110101
          - Bit Inversion:    11000000011111010011101000001010
          - Compressed Key:   00011111000110011000011001001110   [done by compression P-Box]
          - XOR with Key:     11011111011001001011110001000100

          - FUNCTION OUTPUT:  11011111011001001011110001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001101010001001100011101011

       - FUNCTION OUTPUT:          11011111011001001011110001000100

       - Left XOR FUNCTION OUTPUT: 00011110110011000010010010101111

       - Next Round Left 32 Bits:  11101100000011001001000010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110110011000010010010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100000011001001000010111000

       - Right 32 Bits:            00011110110011000010010010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000011011010101001001101101001100100111000001   [Subkey: 2]
          - Input Half:       00011110110011000010010010101111
          - S-Box Result:     10101100010101011110011101001011   [per every group of 4-bits]
          - Split Into Two:   1010110001010101 [L] 1110011101001011 [R]
          - Swap Halves:      11100111010010111010110001010101
          - Bit Inversion:    00011000101101000101001110101010
          - Compressed Key:   11010100100110001110001100110010   [done by compression P-Box]
          - XOR with Key:     11001100001011001011000010011000

          - FUNCTION OUTPUT:  11001100001011001011000010011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100000011001001000010111000

       - FUNCTION OUTPUT:          11001100001011001011000010011000

       - Left XOR FUNCTION OUTPUT: 00100000001000000010000000100000

       - Next Round Left 32 Bits:  00011110110011000010010010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000001000000010000000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110110011000010010010101111

       - Right 32 Bits:            00100000001000000010000000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011011110010010101011011001001011001101100011111   [Subkey: 1]
          - Input Half:       00100000001000000010000000100000
          - S-Box Result:     11101111111011111110111111101111   [per every group of 4-bits]
          - Split Into Two:   1110111111101111 [L] 1110111111101111 [R]
          - Swap Halves:      11101111111011111110111111101111
          - Bit Inversion:    00010000000100000001000000010000
          - Compressed Key:   01000111100010100110100110011111   [done by compression P-Box]
          - XOR with Key:     01010111100110100111100110001111

          - FUNCTION OUTPUT:  01010111100110100111100110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110110011000010010010101111

       - FUNCTION OUTPUT:          01010111100110100111100110001111

       - Left XOR FUNCTION OUTPUT: 01001001010101100101110100100000

       - Next Round Left 32 Bits:  00100000001000000010000000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001010101100101110100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100100101010110010111010010000000100000001000000010000000100000

 > Processed Block:     0100100101010110010111010010000000100000001000000010000000100000




BLOCKS IN ASCII:             [START_KEY]HNbGwrNnKGmtHxRoegmHP[END_KEY][START_IV]cjebP6Fm[END_IV]     

