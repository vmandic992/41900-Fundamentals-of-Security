Triple DES Capture

168-bit key: MyAwesomeTripleDESKey

3 x 56-bit DES keys: MyAweso, meTripl, eDESKey

Initialization Vector: N/A (Using ECB)

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: eDESKey
In Binary:  01100101010001000100010101010011010010110110010101111001

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00110101011101110111010101011001011010010011010100001101
Subkey 2  : 10010101000100010001010101001101001011011001010111100101
Subkey 3  : 11010101110111011101010101100101101001001101010000110100
Subkey 4  : 01010100010001000101010100110100101101100101011110010110
Subkey 5  : 01010111011101110101010110010110100100110101000011010011
Subkey 6  : 01010001000100010101010011010010110110010101111001011001
Subkey 7  : 01011101110111010101011001011010010011010100001101001101
Subkey 8  : 01000100010001010101001101001011011001010111100101100101
Subkey 9  : 01110111011101010101100101101001001101010000110100110101
Subkey 10 : 00010001000101010100110100101101100101011110010110010101
Subkey 11 : 11011101110101010110010110100100110101000011010011010101
Subkey 12 : 01000100010101010011010010110110010101111001011001010100
Subkey 13 : 01110111010101011001011010010011010100001101001101010111
Subkey 14 : 00010001010101001101001011011001010111100101100101010001
Subkey 15 : 11011101010101100101101001001101010000110100110101011101
Subkey 16 : 01000101010100110100101101100101011110010110010101000100

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ?-„dƒ˚≈?&Tf∂¢Ã&ÈÊn¿^c

Data padded with spaces : ?-„dƒ˚≈?&Tf∂¢Ã&ÈÊn¿^c[Padded with '0' spaces]

Data in ASCII           : 131,45,26,227,100,196,251,197,130,38,25,84,102,182,162,204,38,233,18,230,110,192,94,99,

Data in Binary          : 10000011,00101101,00011010,11100011,01100100,11000100,11111011,11000101,10000010,00100110,00011001,01010100,01100110,10110110,10100010,11001100,00100110,11101001,00010010,11100110,01101110,11000000,01011110,01100011,

Data in 64-bit Blocks   : 1000001100101101000110101110001101100100110001001111101111000101,1000001000100110000110010101010001100110101101101010001011001100,0010011011101001000100101110011001101110110000000101111001100011,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 1000001100101101000110101110001101100100110001001111101111000101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011001011010001101011100011

       - Right 32 Bits:            01100100110001001111101111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       01100100110001001111101111000101
          - S-Box Result:     00000111010101111011100001011001   [per every group of 4-bits]
          - Split Into Two:   0000011101010111 [L] 1011100001011001 [R]
          - Swap Halves:      10111000010110010000011101010111
          - Bit Inversion:    01000111101001101111100010101000
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     01011111110011111000001011110000

          - FUNCTION OUTPUT:  01011111110011111000001011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011001011010001101011100011

       - FUNCTION OUTPUT:          01011111110011111000001011110000

       - Left XOR FUNCTION OUTPUT: 11011100111000101001100000010011

       - Next Round Left 32 Bits:  01100100110001001111101111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100111000101001100000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100110001001111101111000101

       - Right 32 Bits:            11011100111000101001100000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       11011100111000101001100000010011
          - S-Box Result:     01100101110011100011001010100001   [per every group of 4-bits]
          - Split Into Two:   0110010111001110 [L] 0011001010100001 [R]
          - Swap Halves:      00110010101000010110010111001110
          - Bit Inversion:    11001101010111101001101000110001
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     00010111001001101100010001101111

          - FUNCTION OUTPUT:  00010111001001101100010001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100110001001111101111000101

       - FUNCTION OUTPUT:          00010111001001101100010001101111

       - Left XOR FUNCTION OUTPUT: 01110011111000100011111110101010

       - Next Round Left 32 Bits:  11011100111000101001100000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011111000100011111110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100111000101001100000010011

       - Right 32 Bits:            01110011111000100011111110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01110011111000100011111110101010
          - S-Box Result:     11010001110011100001101101000100   [per every group of 4-bits]
          - Split Into Two:   1101000111001110 [L] 0001101101000100 [R]
          - Swap Halves:      00011011010001001101000111001110
          - Bit Inversion:    11100100101110110010111000110001
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     10101110111001010111100000100011

          - FUNCTION OUTPUT:  10101110111001010111100000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100111000101001100000010011

       - FUNCTION OUTPUT:          10101110111001010111100000100011

       - Left XOR FUNCTION OUTPUT: 01110010000001111110000000110000

       - Next Round Left 32 Bits:  01110011111000100011111110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010000001111110000000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011111000100011111110101010

       - Right 32 Bits:            01110010000001111110000000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       01110010000001111110000000110000
          - S-Box Result:     11011110111111011100111100011111   [per every group of 4-bits]
          - Split Into Two:   1101111011111101 [L] 1100111100011111 [R]
          - Swap Halves:      11001111000111111101111011111101
          - Bit Inversion:    00110000111000000010000100000010
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     01001010111101100111001010011001

          - FUNCTION OUTPUT:  01001010111101100111001010011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011111000100011111110101010

       - FUNCTION OUTPUT:          01001010111101100111001010011001

       - Left XOR FUNCTION OUTPUT: 00111001000101000100110100110011

       - Next Round Left 32 Bits:  01110010000001111110000000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001000101000100110100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010000001111110000000110000

       - Right 32 Bits:            00111001000101000100110100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       00111001000101000100110100110011
          - S-Box Result:     00010011101001110111011000010001   [per every group of 4-bits]
          - Split Into Two:   0001001110100111 [L] 0111011000010001 [R]
          - Swap Halves:      01110110000100010001001110100111
          - Bit Inversion:    10001001111011101110110001011000
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     10010011011110011111000110010000

          - FUNCTION OUTPUT:  10010011011110011111000110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010000001111110000000110000

       - FUNCTION OUTPUT:          10010011011110011111000110010000

       - Left XOR FUNCTION OUTPUT: 11100001011111100001000110100000

       - Next Round Left 32 Bits:  00111001000101000100110100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001011111100001000110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001000101000100110100110011

       - Right 32 Bits:            11100001011111100001000110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       11100001011111100001000110100000
          - S-Box Result:     11001010110111001010101001001111   [per every group of 4-bits]
          - Split Into Two:   1100101011011100 [L] 1010101001001111 [R]
          - Swap Halves:      10101010010011111100101011011100
          - Bit Inversion:    01010101101100000011010100100011
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     10001111011101011010010101001001

          - FUNCTION OUTPUT:  10001111011101011010010101001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001000101000100110100110011

       - FUNCTION OUTPUT:          10001111011101011010010101001001

       - Left XOR FUNCTION OUTPUT: 10110110011000011110100001111010

       - Next Round Left 32 Bits:  11100001011111100001000110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110011000011110100001111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001011111100001000110100000

       - Right 32 Bits:            10110110011000011110100001111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       10110110011000011110100001111010
          - S-Box Result:     10000000000010101100001011010100   [per every group of 4-bits]
          - Split Into Two:   1000000000001010 [L] 1100001011010100 [R]
          - Swap Halves:      11000010110101001000000000001010
          - Bit Inversion:    00111101001010110111111111110101
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     01110111010010101011010010001111

          - FUNCTION OUTPUT:  01110111010010101011010010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001011111100001000110100000

       - FUNCTION OUTPUT:          01110111010010101011010010001111

       - Left XOR FUNCTION OUTPUT: 10010110001101001010010100101111

       - Next Round Left 32 Bits:  10110110011000011110100001111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110001101001010010100101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110011000011110100001111010

       - Right 32 Bits:            10010110001101001010010100101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       10010110001101001010010100101111
          - S-Box Result:     00110000000101110100100111101011   [per every group of 4-bits]
          - Split Into Two:   0011000000010111 [L] 0100100111101011 [R]
          - Swap Halves:      01001001111010110011000000010111
          - Bit Inversion:    10110110000101001100111111101000
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11001000011011011010011110110010

          - FUNCTION OUTPUT:  11001000011011011010011110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110011000011110100001111010

       - FUNCTION OUTPUT:          11001000011011011010011110110010

       - Left XOR FUNCTION OUTPUT: 01111110000011000100111111001000

       - Next Round Left 32 Bits:  10010110001101001010010100101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110000011000100111111001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110001101001010010100101111

       - Right 32 Bits:            01111110000011000100111111001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01111110000011000100111111001000
          - S-Box Result:     11011100111101010111101101010010   [per every group of 4-bits]
          - Split Into Two:   1101110011110101 [L] 0111101101010010 [R]
          - Swap Halves:      01111011010100101101110011110101
          - Bit Inversion:    10000100101011010010001100001010
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     10010110111101010101100100010000

          - FUNCTION OUTPUT:  10010110111101010101100100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110001101001010010100101111

       - FUNCTION OUTPUT:          10010110111101010101100100010000

       - Left XOR FUNCTION OUTPUT: 00000000110000011111110000111111

       - Next Round Left 32 Bits:  01111110000011000100111111001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000110000011111110000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110000011000100111111001000

       - Right 32 Bits:            00000000110000011111110000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       00000000110000011111110000111111
          - S-Box Result:     11111111010110101011010100011011   [per every group of 4-bits]
          - Split Into Two:   1111111101011010 [L] 1011010100011011 [R]
          - Swap Halves:      10110101000110111111111101011010
          - Bit Inversion:    01001010111001000000000010100101
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     10010001101111100001101000111011

          - FUNCTION OUTPUT:  10010001101111100001101000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110000011000100111111001000

       - FUNCTION OUTPUT:          10010001101111100001101000111011

       - Left XOR FUNCTION OUTPUT: 11101111101100100101010111110011

       - Next Round Left 32 Bits:  00000000110000011111110000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111101100100101010111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000110000011111110000111111

       - Right 32 Bits:            11101111101100100101010111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       11101111101100100101010111110011
          - S-Box Result:     11001011100011101001100110110001   [per every group of 4-bits]
          - Split Into Two:   1100101110001110 [L] 1001100110110001 [R]
          - Swap Halves:      10011001101100011100101110001110
          - Bit Inversion:    01100110010011100011010001110001
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     00101110000100001010111010110111

          - FUNCTION OUTPUT:  00101110000100001010111010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000110000011111110000111111

       - FUNCTION OUTPUT:          00101110000100001010111010110111

       - Left XOR FUNCTION OUTPUT: 00101110110100010101001010001000

       - Next Round Left 32 Bits:  11101111101100100101010111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110110100010101001010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111101100100101010111110011

       - Right 32 Bits:            00101110110100010101001010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       00101110110100010101001010001000
          - S-Box Result:     11101100011010101001111000100010   [per every group of 4-bits]
          - Split Into Two:   1110110001101010 [L] 1001111000100010 [R]
          - Swap Halves:      10011110001000101110110001101010
          - Bit Inversion:    01100001110111010001001110010101
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     00011111100010111001110110110110

          - FUNCTION OUTPUT:  00011111100010111001110110110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111101100100101010111110011

       - FUNCTION OUTPUT:          00011111100010111001110110110110

       - Left XOR FUNCTION OUTPUT: 11110000001110011100100001000101

       - Next Round Left 32 Bits:  00101110110100010101001010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000001110011100100001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110110100010101001010001000

       - Right 32 Bits:            11110000001110011100100001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       11110000001110011100100001000101
          - S-Box Result:     10111111000100110101001001111001   [per every group of 4-bits]
          - Split Into Two:   1011111100010011 [L] 0101001001111001 [R]
          - Swap Halves:      01010010011110011011111100010011
          - Bit Inversion:    10101101100001100100000011101100
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     11111111110101011110011000010101

          - FUNCTION OUTPUT:  11111111110101011110011000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110110100010101001010001000

       - FUNCTION OUTPUT:          11111111110101011110011000010101

       - Left XOR FUNCTION OUTPUT: 11010001000001001011010010011101

       - Next Round Left 32 Bits:  11110000001110011100100001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001000001001011010010011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000001110011100100001000101

       - Right 32 Bits:            11010001000001001011010010011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       11010001000001001011010010011101
          - S-Box Result:     01101010111101111000011100110110   [per every group of 4-bits]
          - Split Into Two:   0110101011110111 [L] 1000011100110110 [R]
          - Swap Halves:      10000111001101100110101011110111
          - Bit Inversion:    01111000110010011001010100001000
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     00100011100100000111011001000000

          - FUNCTION OUTPUT:  00100011100100000111011001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000001110011100100001000101

       - FUNCTION OUTPUT:          00100011100100000111011001000000

       - Left XOR FUNCTION OUTPUT: 11010011101010011011111000000101

       - Next Round Left 32 Bits:  11010001000001001011010010011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011101010011011111000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001000001001011010010011101

       - Right 32 Bits:            11010011101010011011111000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       11010011101010011011111000000101
          - S-Box Result:     01100001010000111000110011111001   [per every group of 4-bits]
          - Split Into Two:   0110000101000011 [L] 1000110011111001 [R]
          - Swap Halves:      10001100111110010110000101000011
          - Bit Inversion:    01110011000001101001111010111100
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     00101011000111101111011111000110

          - FUNCTION OUTPUT:  00101011000111101111011111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001000001001011010010011101

       - FUNCTION OUTPUT:          00101011000111101111011111000110

       - Left XOR FUNCTION OUTPUT: 11111010000110100100001101011011

       - Next Round Left 32 Bits:  11010011101010011011111000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010000110100100001101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011101010011011111000000101

       - Right 32 Bits:            11111010000110100100001101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       11111010000110100100001101011011
          - S-Box Result:     10110100101001000111000110011000   [per every group of 4-bits]
          - Split Into Two:   1011010010100100 [L] 0111000110011000 [R]
          - Swap Halves:      01110001100110001011010010100100
          - Bit Inversion:    10001110011001110100101101011011
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     11010000101111010011001100000101

          - FUNCTION OUTPUT:  11010000101111010011001100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011101010011011111000000101

       - FUNCTION OUTPUT:          11010000101111010011001100000101

       - Left XOR FUNCTION OUTPUT: 00000011000101001000110100000000

       - Next Round Left 32 Bits:  11111010000110100100001101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011000101001000110100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000001100010100100011010000000011111010000110100100001101011011

 > Processed Block:     0000001100010100100011010000000011111010000110100100001101011011


Ciphertext Block 2: 1000001000100110000110010101010001100110101101101010001011001100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010001001100001100101010100

       - Right 32 Bits:            01100110101101101010001011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       01100110101101101010001011001100
          - S-Box Result:     00000000100000000100111001010101   [per every group of 4-bits]
          - Split Into Two:   0000000010000000 [L] 0100111001010101 [R]
          - Swap Halves:      01001110010101010000000010000000
          - Bit Inversion:    10110001101010101111111101111111
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     10101001110000111000010100100111

          - FUNCTION OUTPUT:  10101001110000111000010100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010001001100001100101010100

       - FUNCTION OUTPUT:          10101001110000111000010100100111

       - Left XOR FUNCTION OUTPUT: 00101011111001011001110001110011

       - Next Round Left 32 Bits:  01100110101101101010001011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011111001011001110001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110101101101010001011001100

       - Right 32 Bits:            00101011111001011001110001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       00101011111001011001110001110011
          - S-Box Result:     11101000110010010011010111010001   [per every group of 4-bits]
          - Split Into Two:   1110100011001001 [L] 0011010111010001 [R]
          - Swap Halves:      00110101110100011110100011001001
          - Bit Inversion:    11001010001011100001011100110110
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     00010000010101100100100101101000

          - FUNCTION OUTPUT:  00010000010101100100100101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110101101101010001011001100

       - FUNCTION OUTPUT:          00010000010101100100100101101000

       - Left XOR FUNCTION OUTPUT: 01110110111000001110101110100100

       - Next Round Left 32 Bits:  00101011111001011001110001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110111000001110101110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011111001011001110001110011

       - Right 32 Bits:            01110110111000001110101110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01110110111000001110101110100100
          - S-Box Result:     11010000110011111100100001000111   [per every group of 4-bits]
          - Split Into Two:   1101000011001111 [L] 1100100001000111 [R]
          - Swap Halves:      11001000010001111101000011001111
          - Bit Inversion:    00110111101110000010111100110000
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     01111101111001100111100100100010

          - FUNCTION OUTPUT:  01111101111001100111100100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011111001011001110001110011

       - FUNCTION OUTPUT:          01111101111001100111100100100010

       - Left XOR FUNCTION OUTPUT: 01010110000000111110010101010001

       - Next Round Left 32 Bits:  01110110111000001110101110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110000000111110010101010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110111000001110101110100100

       - Right 32 Bits:            01010110000000111110010101010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       01010110000000111110010101010001
          - S-Box Result:     10010000111100011100100110011010   [per every group of 4-bits]
          - Split Into Two:   1001000011110001 [L] 1100100110011010 [R]
          - Swap Halves:      11001001100110101001000011110001
          - Bit Inversion:    00110110011001010110111100001110
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     01001100011100110011110010010101

          - FUNCTION OUTPUT:  01001100011100110011110010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110111000001110101110100100

       - FUNCTION OUTPUT:          01001100011100110011110010010101

       - Left XOR FUNCTION OUTPUT: 00111010100100111101011100110001

       - Next Round Left 32 Bits:  01010110000000111110010101010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010100100111101011100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110000000111110010101010001

       - Right 32 Bits:            00111010100100111101011100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       00111010100100111101011100110001
          - S-Box Result:     00010100001100010110110100011010   [per every group of 4-bits]
          - Split Into Two:   0001010000110001 [L] 0110110100011010 [R]
          - Swap Halves:      01101101000110100001010000110001
          - Bit Inversion:    10010010111001011110101111001110
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     10001000011100101111011000000110

          - FUNCTION OUTPUT:  10001000011100101111011000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110000000111110010101010001

       - FUNCTION OUTPUT:          10001000011100101111011000000110

       - Left XOR FUNCTION OUTPUT: 11011110011100010001001101010111

       - Next Round Left 32 Bits:  00111010100100111101011100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110011100010001001101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010100100111101011100110001

       - Right 32 Bits:            11011110011100010001001101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       11011110011100010001001101010111
          - S-Box Result:     01101100110110101010000110011101   [per every group of 4-bits]
          - Split Into Two:   0110110011011010 [L] 1010000110011101 [R]
          - Swap Halves:      10100001100111010110110011011010
          - Bit Inversion:    01011110011000101001001100100101
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     10000100101001110000001101001111

          - FUNCTION OUTPUT:  10000100101001110000001101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010100100111101011100110001

       - FUNCTION OUTPUT:          10000100101001110000001101001111

       - Left XOR FUNCTION OUTPUT: 10111110001101001101010001111110

       - Next Round Left 32 Bits:  11011110011100010001001101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110001101001101010001111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110011100010001001101010111

       - Right 32 Bits:            10111110001101001101010001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       10111110001101001101010001111110
          - S-Box Result:     10001100000101110110011111011100   [per every group of 4-bits]
          - Split Into Two:   1000110000010111 [L] 0110011111011100 [R]
          - Swap Halves:      01100111110111001000110000010111
          - Bit Inversion:    10011000001000110111001111101000
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     11010010010000101011100010010010

          - FUNCTION OUTPUT:  11010010010000101011100010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110011100010001001101010111

       - FUNCTION OUTPUT:          11010010010000101011100010010010

       - Left XOR FUNCTION OUTPUT: 00001100001100111010101111000101

       - Next Round Left 32 Bits:  10111110001101001101010001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100001100111010101111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110001101001101010001111110

       - Right 32 Bits:            00001100001100111010101111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00001100001100111010101111000101
          - S-Box Result:     11110101000100010100100001011001   [per every group of 4-bits]
          - Split Into Two:   1111010100010001 [L] 0100100001011001 [R]
          - Swap Halves:      01001000010110011111010100010001
          - Bit Inversion:    10110111101001100000101011101110
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11001001110111110110001010110100

          - FUNCTION OUTPUT:  11001001110111110110001010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110001101001101010001111110

       - FUNCTION OUTPUT:          11001001110111110110001010110100

       - Left XOR FUNCTION OUTPUT: 01110111111010111011011011001010

       - Next Round Left 32 Bits:  00001100001100111010101111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111111010111011011011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100001100111010101111000101

       - Right 32 Bits:            01110111111010111011011011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01110111111010111011011011001010
          - S-Box Result:     11011101110010001000000001010100   [per every group of 4-bits]
          - Split Into Two:   1101110111001000 [L] 1000000001010100 [R]
          - Swap Halves:      10000000010101001101110111001000
          - Bit Inversion:    01111111101010110010001000110111
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     01101101111100110101100000101101

          - FUNCTION OUTPUT:  01101101111100110101100000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100001100111010101111000101

       - FUNCTION OUTPUT:          01101101111100110101100000101101

       - Left XOR FUNCTION OUTPUT: 01100001110000001111001111101000

       - Next Round Left 32 Bits:  01110111111010111011011011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001110000001111001111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111111010111011011011001010

       - Right 32 Bits:            01100001110000001111001111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       01100001110000001111001111101000
          - S-Box Result:     00001010010111111011000111000010   [per every group of 4-bits]
          - Split Into Two:   0000101001011111 [L] 1011000111000010 [R]
          - Swap Halves:      10110001110000100000101001011111
          - Bit Inversion:    01001110001111011111010110100000
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     10010101011001111110111100111110

          - FUNCTION OUTPUT:  10010101011001111110111100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111111010111011011011001010

       - FUNCTION OUTPUT:          10010101011001111110111100111110

       - Left XOR FUNCTION OUTPUT: 11100010100011000101100111110100

       - Next Round Left 32 Bits:  01100001110000001111001111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010100011000101100111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001110000001111001111101000

       - Right 32 Bits:            11100010100011000101100111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       11100010100011000101100111110100
          - S-Box Result:     11001110001001011001001110110111   [per every group of 4-bits]
          - Split Into Two:   1100111000100101 [L] 1001001110110111 [R]
          - Swap Halves:      10010011101101111100111000100101
          - Bit Inversion:    01101100010010000011000111011010
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     00100100000101101010101100011100

          - FUNCTION OUTPUT:  00100100000101101010101100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001110000001111001111101000

       - FUNCTION OUTPUT:          00100100000101101010101100011100

       - Left XOR FUNCTION OUTPUT: 01000101110101100101100011110100

       - Next Round Left 32 Bits:  11100010100011000101100111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101110101100101100011110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010100011000101100111110100

       - Right 32 Bits:            01000101110101100101100011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       01000101110101100101100011110100
          - S-Box Result:     01111001011000001001001010110111   [per every group of 4-bits]
          - Split Into Two:   0111100101100000 [L] 1001001010110111 [R]
          - Swap Halves:      10010010101101110111100101100000
          - Bit Inversion:    01101101010010001000011010011111
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     00010011000111100000100010111100

          - FUNCTION OUTPUT:  00010011000111100000100010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010100011000101100111110100

       - FUNCTION OUTPUT:          00010011000111100000100010111100

       - Left XOR FUNCTION OUTPUT: 11110001100100100101000101001000

       - Next Round Left 32 Bits:  01000101110101100101100011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001100100100101000101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101110101100101100011110100

       - Right 32 Bits:            11110001100100100101000101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       11110001100100100101000101001000
          - S-Box Result:     10111010001111101001101001110010   [per every group of 4-bits]
          - Split Into Two:   1011101000111110 [L] 1001101001110010 [R]
          - Swap Halves:      10011010011100101011101000111110
          - Bit Inversion:    01100101100011010100010111000001
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     00110111110111101110001100111000

          - FUNCTION OUTPUT:  00110111110111101110001100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101110101100101100011110100

       - FUNCTION OUTPUT:          00110111110111101110001100111000

       - Left XOR FUNCTION OUTPUT: 01110010000010001011101111001100

       - Next Round Left 32 Bits:  11110001100100100101000101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010000010001011101111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110001100100100101000101001000

       - Right 32 Bits:            01110010000010001011101111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       01110010000010001011101111001100
          - S-Box Result:     11011110111100101000100001010101   [per every group of 4-bits]
          - Split Into Two:   1101111011110010 [L] 1000100001010101 [R]
          - Swap Halves:      10001000010101011101111011110010
          - Bit Inversion:    01110111101010100010000100001101
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     00101100111100111100001001000101

          - FUNCTION OUTPUT:  00101100111100111100001001000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110001100100100101000101001000

       - FUNCTION OUTPUT:          00101100111100111100001001000101

       - Left XOR FUNCTION OUTPUT: 11011101011000011001001100001101

       - Next Round Left 32 Bits:  01110010000010001011101111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101011000011001001100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010000010001011101111001100

       - Right 32 Bits:            11011101011000011001001100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       11011101011000011001001100001101
          - S-Box Result:     01100110000010100011000111110110   [per every group of 4-bits]
          - Split Into Two:   0110011000001010 [L] 0011000111110110 [R]
          - Swap Halves:      00110001111101100110011000001010
          - Bit Inversion:    11001110000010011001100111110101
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     10010110000100011111000010001111

          - FUNCTION OUTPUT:  10010110000100011111000010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010000010001011101111001100

       - FUNCTION OUTPUT:          10010110000100011111000010001111

       - Left XOR FUNCTION OUTPUT: 11100100000110010100101101000011

       - Next Round Left 32 Bits:  11011101011000011001001100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100000110010100101101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101011000011001001100001101

       - Right 32 Bits:            11100100000110010100101101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       11100100000110010100101101000011
          - S-Box Result:     11000111101000110111100001110001   [per every group of 4-bits]
          - Split Into Two:   1100011110100011 [L] 0111100001110001 [R]
          - Swap Halves:      01111000011100011100011110100011
          - Bit Inversion:    10000111100011100011100001011100
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     11011001010101000100000000000010

          - FUNCTION OUTPUT:  11011001010101000100000000000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101011000011001001100001101

       - FUNCTION OUTPUT:          11011001010101000100000000000010

       - Left XOR FUNCTION OUTPUT: 00000100001101011101001100001111

       - Next Round Left 32 Bits:  11100100000110010100101101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100001101011101001100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000010000110101110100110000111111100100000110010100101101000011

 > Processed Block:     0000010000110101110100110000111111100100000110010100101101000011


Ciphertext Block 3: 0010011011101001000100101110011001101110110000000101111001100011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110111010010001001011100110

       - Right 32 Bits:            01101110110000000101111001100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       01101110110000000101111001100011
          - S-Box Result:     00001100010111111001110000000001   [per every group of 4-bits]
          - Split Into Two:   0000110001011111 [L] 1001110000000001 [R]
          - Swap Halves:      10011100000000010000110001011111
          - Bit Inversion:    01100011111111101111001110100000
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     01111011100101111000100111111000

          - FUNCTION OUTPUT:  01111011100101111000100111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110111010010001001011100110

       - FUNCTION OUTPUT:          01111011100101111000100111111000

       - Left XOR FUNCTION OUTPUT: 01011101011111101001101100011110

       - Next Round Left 32 Bits:  01101110110000000101111001100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101011111101001101100011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110110000000101111001100011

       - Right 32 Bits:            01011101011111101001101100011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       01011101011111101001101100011110
          - S-Box Result:     10010110110111000011100010101100   [per every group of 4-bits]
          - Split Into Two:   1001011011011100 [L] 0011100010101100 [R]
          - Swap Halves:      00111000101011001001011011011100
          - Bit Inversion:    11000111010100110110100100100011
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     00011101001010110011011101111101

          - FUNCTION OUTPUT:  00011101001010110011011101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110110000000101111001100011

       - FUNCTION OUTPUT:          00011101001010110011011101111101

       - Left XOR FUNCTION OUTPUT: 01110011111010110110100100011110

       - Next Round Left 32 Bits:  01011101011111101001101100011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011111010110110100100011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101011111101001101100011110

       - Right 32 Bits:            01110011111010110110100100011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01110011111010110110100100011110
          - S-Box Result:     11010001110010000000001110101100   [per every group of 4-bits]
          - Split Into Two:   1101000111001000 [L] 0000001110101100 [R]
          - Swap Halves:      00000011101011001101000111001000
          - Bit Inversion:    11111100010100110010111000110111
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     10110110000011010111100000100101

          - FUNCTION OUTPUT:  10110110000011010111100000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101011111101001101100011110

       - FUNCTION OUTPUT:          10110110000011010111100000100101

       - Left XOR FUNCTION OUTPUT: 11101011011100111110001100111011

       - Next Round Left 32 Bits:  01110011111010110110100100011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011011100111110001100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011111010110110100100011110

       - Right 32 Bits:            11101011011100111110001100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       11101011011100111110001100111011
          - S-Box Result:     11001000110100011100000100011000   [per every group of 4-bits]
          - Split Into Two:   1100100011010001 [L] 1100000100011000 [R]
          - Swap Halves:      11000001000110001100100011010001
          - Bit Inversion:    00111110111001110011011100101110
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     01000100111100010110010010110101

          - FUNCTION OUTPUT:  01000100111100010110010010110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011111010110110100100011110

       - FUNCTION OUTPUT:          01000100111100010110010010110101

       - Left XOR FUNCTION OUTPUT: 00110111000110100000110110101011

       - Next Round Left 32 Bits:  11101011011100111110001100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111000110100000110110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011011100111110001100111011

       - Right 32 Bits:            00110111000110100000110110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       00110111000110100000110110101011
          - S-Box Result:     00011101101001001111011001001000   [per every group of 4-bits]
          - Split Into Two:   0001110110100100 [L] 1111011001001000 [R]
          - Swap Halves:      11110110010010000001110110100100
          - Bit Inversion:    00001001101101111110001001011011
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     00010011001000001111111110010011

          - FUNCTION OUTPUT:  00010011001000001111111110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011011100111110001100111011

       - FUNCTION OUTPUT:          00010011001000001111111110010011

       - Left XOR FUNCTION OUTPUT: 11111000010100110001110010101000

       - Next Round Left 32 Bits:  00110111000110100000110110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000010100110001110010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111000110100000110110101011

       - Right 32 Bits:            11111000010100110001110010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       11111000010100110001110010101000
          - S-Box Result:     10110010100100011010010101000010   [per every group of 4-bits]
          - Split Into Two:   1011001010010001 [L] 1010010101000010 [R]
          - Swap Halves:      10100101010000101011001010010001
          - Bit Inversion:    01011010101111010100110101101110
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     10000000011110001101110100000100

          - FUNCTION OUTPUT:  10000000011110001101110100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111000110100000110110101011

       - FUNCTION OUTPUT:          10000000011110001101110100000100

       - Left XOR FUNCTION OUTPUT: 10110111011000101101000010101111

       - Next Round Left 32 Bits:  11111000010100110001110010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111011000101101000010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000010100110001110010101000

       - Right 32 Bits:            10110111011000101101000010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       10110111011000101101000010101111
          - S-Box Result:     10001101000011100110111101001011   [per every group of 4-bits]
          - Split Into Two:   1000110100001110 [L] 0110111101001011 [R]
          - Swap Halves:      01101111010010111000110100001110
          - Bit Inversion:    10010000101101000111001011110001
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     11011010110101011011100110001011

          - FUNCTION OUTPUT:  11011010110101011011100110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000010100110001110010101000

       - FUNCTION OUTPUT:          11011010110101011011100110001011

       - Left XOR FUNCTION OUTPUT: 00100010100001101010010100100011

       - Next Round Left 32 Bits:  10110111011000101101000010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010100001101010010100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111011000101101000010101111

       - Right 32 Bits:            00100010100001101010010100100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00100010100001101010010100100011
          - S-Box Result:     11101110001000000100100111100001   [per every group of 4-bits]
          - Split Into Two:   1110111000100000 [L] 0100100111100001 [R]
          - Swap Halves:      01001001111000011110111000100000
          - Bit Inversion:    10110110000111100001000111011111
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11001000011001110111100110000101

          - FUNCTION OUTPUT:  11001000011001110111100110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111011000101101000010101111

       - FUNCTION OUTPUT:          11001000011001110111100110000101

       - Left XOR FUNCTION OUTPUT: 01111111000001011010100100101010

       - Next Round Left 32 Bits:  00100010100001101010010100100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111000001011010100100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010100001101010010100100011

       - Right 32 Bits:            01111111000001011010100100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01111111000001011010100100101010
          - S-Box Result:     11011011111110010100001111100100   [per every group of 4-bits]
          - Split Into Two:   1101101111111001 [L] 0100001111100100 [R]
          - Swap Halves:      01000011111001001101101111111001
          - Bit Inversion:    10111100000110110010010000000110
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     10101110010000110101111000011100

          - FUNCTION OUTPUT:  10101110010000110101111000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010100001101010010100100011

       - FUNCTION OUTPUT:          10101110010000110101111000011100

       - Left XOR FUNCTION OUTPUT: 10001100110001011111101100111111

       - Next Round Left 32 Bits:  01111111000001011010100100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100110001011111101100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111000001011010100100101010

       - Right 32 Bits:            10001100110001011111101100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       10001100110001011111101100111111
          - S-Box Result:     00100101010110011011100000011011   [per every group of 4-bits]
          - Split Into Two:   0010010101011001 [L] 1011100000011011 [R]
          - Swap Halves:      10111000000110110010010101011001
          - Bit Inversion:    01000111111001001101101010100110
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     10011100101111101100000000111000

          - FUNCTION OUTPUT:  10011100101111101100000000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111000001011010100100101010

       - FUNCTION OUTPUT:          10011100101111101100000000111000

       - Left XOR FUNCTION OUTPUT: 11100011101110110110100100010010

       - Next Round Left 32 Bits:  10001100110001011111101100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011101110110110100100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100110001011111101100111111

       - Right 32 Bits:            11100011101110110110100100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       11100011101110110110100100010010
          - S-Box Result:     11000001100010000000001110101110   [per every group of 4-bits]
          - Split Into Two:   1100000110001000 [L] 0000001110101110 [R]
          - Swap Halves:      00000011101011101100000110001000
          - Bit Inversion:    11111100010100010011111001110111
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     10110100000011111010010010110001

          - FUNCTION OUTPUT:  10110100000011111010010010110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100110001011111101100111111

       - FUNCTION OUTPUT:          10110100000011111010010010110001

       - Left XOR FUNCTION OUTPUT: 00111000110010100101111110001110

       - Next Round Left 32 Bits:  11100011101110110110100100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000110010100101111110001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011101110110110100100010010

       - Right 32 Bits:            00111000110010100101111110001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       00111000110010100101111110001110
          - S-Box Result:     00010010010101001001101100101100   [per every group of 4-bits]
          - Split Into Two:   0001001001010100 [L] 1001101100101100 [R]
          - Swap Halves:      10011011001011000001001001010100
          - Bit Inversion:    01100100110100111110110110101011
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     00011010100001010110001110001000

          - FUNCTION OUTPUT:  00011010100001010110001110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011101110110110100100010010

       - FUNCTION OUTPUT:          00011010100001010110001110001000

       - Left XOR FUNCTION OUTPUT: 11111001001111100000101010011010

       - Next Round Left 32 Bits:  00111000110010100101111110001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001001111100000101010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000110010100101111110001110

       - Right 32 Bits:            11111001001111100000101010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       11111001001111100000101010011010
          - S-Box Result:     10110011000111001111010000110100   [per every group of 4-bits]
          - Split Into Two:   1011001100011100 [L] 1111010000110100 [R]
          - Swap Halves:      11110100001101001011001100011100
          - Bit Inversion:    00001011110010110100110011100011
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     01011001100110001110101000011010

          - FUNCTION OUTPUT:  01011001100110001110101000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000110010100101111110001110

       - FUNCTION OUTPUT:          01011001100110001110101000011010

       - Left XOR FUNCTION OUTPUT: 01100001010100101011010110010100

       - Next Round Left 32 Bits:  11111001001111100000101010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001010100101011010110010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001001111100000101010011010

       - Right 32 Bits:            01100001010100101011010110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       01100001010100101011010110010100
          - S-Box Result:     00001010100111101000100100110111   [per every group of 4-bits]
          - Split Into Two:   0000101010011110 [L] 1000100100110111 [R]
          - Swap Halves:      10001001001101110000101010011110
          - Bit Inversion:    01110110110010001111010101100001
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     00101101100100010001011000101001

          - FUNCTION OUTPUT:  00101101100100010001011000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001001111100000101010011010

       - FUNCTION OUTPUT:          00101101100100010001011000101001

       - Left XOR FUNCTION OUTPUT: 11010100101011110001110010110011

       - Next Round Left 32 Bits:  01100001010100101011010110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100101011110001110010110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001010100101011010110010100

       - Right 32 Bits:            11010100101011110001110010110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       11010100101011110001110010110011
          - S-Box Result:     01100111010010111010010110000001   [per every group of 4-bits]
          - Split Into Two:   0110011101001011 [L] 1010010110000001 [R]
          - Swap Halves:      10100101100000010110011101001011
          - Bit Inversion:    01011010011111101001100010110100
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     00000010011001101111000111001110

          - FUNCTION OUTPUT:  00000010011001101111000111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001010100101011010110010100

       - FUNCTION OUTPUT:          00000010011001101111000111001110

       - Left XOR FUNCTION OUTPUT: 01100011001101000100010001011010

       - Next Round Left 32 Bits:  11010100101011110001110010110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011001101000100010001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100101011110001110010110011

       - Right 32 Bits:            01100011001101000100010001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       01100011001101000100010001011010
          - S-Box Result:     00000001000101110111011110010100   [per every group of 4-bits]
          - Split Into Two:   0000000100010111 [L] 0111011110010100 [R]
          - Swap Halves:      01110111100101000000000100010111
          - Bit Inversion:    10001000011010111111111011101000
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     11010110101100011000011010110110

          - FUNCTION OUTPUT:  11010110101100011000011010110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100101011110001110010110011

       - FUNCTION OUTPUT:          11010110101100011000011010110110

       - Left XOR FUNCTION OUTPUT: 00000010000111101001101000000101

       - Next Round Left 32 Bits:  01100011001101000100010001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010000111101001101000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000001000011110100110100000010101100011001101000100010001011010

 > Processed Block:     0000001000011110100110100000010101100011001101000100010001011010


FINAL PROCESSED DATA BLOCKS: 0000001100010100100011010000000011111010000110100100001101011011,0000010000110101110100110000111111100100000110010100101101000011,0000001000011110100110100000010101100011001101000100010001011010,

BLOCKS IN ASCII:             ? ˙C[5”‰KC?c4DZ

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: meTripl
In Binary:  01101101011001010101010001110010011010010111000001101100

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00100101001101010101011100011011001011010001111100100111
Subkey 2  : 10110101100101010101000111001001101001011100000110110001
Subkey 3  : 10010100110101010101110001101100101101000111110010011100
Subkey 4  : 11010110010101010100011100100110100101110000011011000110
Subkey 5  : 01010011010101010111000110110010110100011111001001110010
Subkey 6  : 01011001010101010001110010011010010111000001101100011011
Subkey 7  : 01001101010101011100011011001011010001111100100111001001
Subkey 8  : 01100101010101000111001001101001011100000110110001101101
Subkey 9  : 00110101010101110001101100101101000111110010011100100101
Subkey 10 : 10010101010100011100100110100101110000011011000110110101
Subkey 11 : 11010101010111000110110010110100011111001001110010010100
Subkey 12 : 01010101010001110010011010010111000001101100011011010110
Subkey 13 : 01010101011100011011001011010001111100100111001001010011
Subkey 14 : 01010101000111001001101001011100000110110001101101011001
Subkey 15 : 01010101110001101100101101000111110010011100100101001101
Subkey 16 : 01010100011100100110100101110000011011000110110101100101

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ? ˙C[5”‰KC?c4DZ

Data padded with spaces : ? ˙C[5”‰KC?c4DZ[Padded with '0' spaces]

Data in ASCII           : 3,20,141,0,250,26,67,91,4,53,211,15,228,25,75,67,2,30,154,5,99,52,68,90,

Data in Binary          : 00000011,00010100,10001101,00000000,11111010,00011010,01000011,01011011,00000100,00110101,11010011,00001111,11100100,00011001,01001011,01000011,00000010,00011110,10011010,00000101,01100011,00110100,01000100,01011010,

Data in 64-bit Blocks   : 0000001100010100100011010000000011111010000110100100001101011011,0000010000110101110100110000111111100100000110010100101101000011,0000001000011110100110100000010101100011001101000100010001011010,



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>



Plaintext Block 1: 0000001100010100100011010000000011111010000110100100001101011011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011000101001000110100000000

       - Right 32 Bits:            11111010000110100100001101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       11111010000110100100001101011011
          - S-Box Result:     10110100101001000111000110011000   [per every group of 4-bits]
          - Split Into Two:   1011010010100100 [L] 0111000110011000 [R]
          - Swap Halves:      01110001100110001011010010100100
          - Bit Inversion:    10001110011001110100101101011011
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     10010000001101010010001110000000

          - FUNCTION OUTPUT:  10010000001101010010001110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011000101001000110100000000

       - FUNCTION OUTPUT:          10010000001101010010001110000000

       - Left XOR FUNCTION OUTPUT: 10010011001000011010111010000000

       - Next Round Left 32 Bits:  11111010000110100100001101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011001000011010111010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010000110100100001101011011

       - Right 32 Bits:            10010011001000011010111010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       10010011001000011010111010000000
          - S-Box Result:     00110001111010100100110000101111   [per every group of 4-bits]
          - Split Into Two:   0011000111101010 [L] 0100110000101111 [R]
          - Swap Halves:      01001100001011110011000111101010
          - Bit Inversion:    10110011110100001100111000010101
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     11101001100011000010010100100111

          - FUNCTION OUTPUT:  11101001100011000010010100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010000110100100001101011011

       - FUNCTION OUTPUT:          11101001100011000010010100100111

       - Left XOR FUNCTION OUTPUT: 00010011100101100110011001111100

       - Next Round Left 32 Bits:  10010011001000011010111010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100101100110011001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011001000011010111010000000

       - Right 32 Bits:            00010011100101100110011001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       00010011100101100110011001111100
          - S-Box Result:     10100001001100000000000011010101   [per every group of 4-bits]
          - Split Into Two:   1010000100110000 [L] 0000000011010101 [R]
          - Swap Halves:      00000000110101011010000100110000
          - Bit Inversion:    11111111001010100101111011001111
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     10100101010100111111110010100011

          - FUNCTION OUTPUT:  10100101010100111111110010100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011001000011010111010000000

       - FUNCTION OUTPUT:          10100101010100111111110010100011

       - Left XOR FUNCTION OUTPUT: 00110110011100100101001000100011

       - Next Round Left 32 Bits:  00010011100101100110011001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110011100100101001000100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011100101100110011001111100

       - Right 32 Bits:            00110110011100100101001000100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00110110011100100101001000100011
          - S-Box Result:     00010000110111101001111011100001   [per every group of 4-bits]
          - Split Into Two:   0001000011011110 [L] 1001111011100001 [R]
          - Swap Halves:      10011110111000010001000011011110
          - Bit Inversion:    01100001000111101110111100100001
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     00011011010111110110001111001000

          - FUNCTION OUTPUT:  00011011010111110110001111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011100101100110011001111100

       - FUNCTION OUTPUT:          00011011010111110110001111001000

       - Left XOR FUNCTION OUTPUT: 00001000110010010000010110110100

       - Next Round Left 32 Bits:  00110110011100100101001000100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000110010010000010110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110011100100101001000100011

       - Right 32 Bits:            00001000110010010000010110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       00001000110010010000010110110100
          - S-Box Result:     11110010010100111111100110000111   [per every group of 4-bits]
          - Split Into Two:   1111001001010011 [L] 1111100110000111 [R]
          - Swap Halves:      11111001100001111111001001010011
          - Bit Inversion:    00000110011110000000110110101100
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01101100101011111001011000101101

          - FUNCTION OUTPUT:  01101100101011111001011000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110011100100101001000100011

       - FUNCTION OUTPUT:          01101100101011111001011000101101

       - Left XOR FUNCTION OUTPUT: 01011010110111011100010000001110

       - Next Round Left 32 Bits:  00001000110010010000010110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010110111011100010000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000110010010000010110110100

       - Right 32 Bits:            01011010110111011100010000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       01011010110111011100010000001110
          - S-Box Result:     10010100011001100101011111111100   [per every group of 4-bits]
          - Split Into Two:   1001010001100110 [L] 0101011111111100 [R]
          - Swap Halves:      01010111111111001001010001100110
          - Bit Inversion:    10101000000000110110101110011001
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     01100010001101010111101100001110

          - FUNCTION OUTPUT:  01100010001101010111101100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000110010010000010110110100

       - FUNCTION OUTPUT:          01100010001101010111101100001110

       - Left XOR FUNCTION OUTPUT: 01101010111111000111111010111010

       - Next Round Left 32 Bits:  01011010110111011100010000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010111111000111111010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010110111011100010000001110

       - Right 32 Bits:            01101010111111000111111010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       01101010111111000111111010111010
          - S-Box Result:     00000100101101011101110010000100   [per every group of 4-bits]
          - Split Into Two:   0000010010110101 [L] 1101110010000100 [R]
          - Swap Halves:      11011100100001000000010010110101
          - Bit Inversion:    00100011011110111111101101001010
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10111001001101111010010001111100

          - FUNCTION OUTPUT:  10111001001101111010010001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010110111011100010000001110

       - FUNCTION OUTPUT:          10111001001101111010010001111100

       - Left XOR FUNCTION OUTPUT: 11100011111010100110000001110010

       - Next Round Left 32 Bits:  01101010111111000111111010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011111010100110000001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010111111000111111010111010

       - Right 32 Bits:            11100011111010100110000001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       11100011111010100110000001110010
          - S-Box Result:     11000001110001000000111111011110   [per every group of 4-bits]
          - Split Into Two:   1100000111000100 [L] 0000111111011110 [R]
          - Swap Halves:      00001111110111101100000111000100
          - Bit Inversion:    11110000001000010011111000111011
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     11101010111110000100110001110101

          - FUNCTION OUTPUT:  11101010111110000100110001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010111111000111111010111010

       - FUNCTION OUTPUT:          11101010111110000100110001110101

       - Left XOR FUNCTION OUTPUT: 10000000000001000011001011001111

       - Next Round Left 32 Bits:  11100011111010100110000001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000000001000011001011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011111010100110000001110010

       - Right 32 Bits:            10000000000001000011001011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       10000000000001000011001011001111
          - S-Box Result:     00101111111101110001111001011011   [per every group of 4-bits]
          - Split Into Two:   0010111111110111 [L] 0001111001011011 [R]
          - Swap Halves:      00011110010110110010111111110111
          - Bit Inversion:    11100001101001001101000000001000
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10111011100101011001110011010010

          - FUNCTION OUTPUT:  10111011100101011001110011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011111010100110000001110010

       - FUNCTION OUTPUT:          10111011100101011001110011010010

       - Left XOR FUNCTION OUTPUT: 01011000011111111111110010100000

       - Next Round Left 32 Bits:  10000000000001000011001011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000011111111111110010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000000001000011001011001111

       - Right 32 Bits:            01011000011111111111110010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01011000011111111111110010100000
          - S-Box Result:     10010010110110111011010101001111   [per every group of 4-bits]
          - Split Into Two:   1001001011011011 [L] 1011010101001111 [R]
          - Swap Halves:      10110101010011111001001011011011
          - Bit Inversion:    01001010101100000110110100100100
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     00010010110101011011010000011110

          - FUNCTION OUTPUT:  00010010110101011011010000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000000001000011001011001111

       - FUNCTION OUTPUT:          00010010110101011011010000011110

       - Left XOR FUNCTION OUTPUT: 10010010110100011000011011010001

       - Next Round Left 32 Bits:  01011000011111111111110010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010110100011000011011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000011111111111110010100000

       - Right 32 Bits:            10010010110100011000011011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       10010010110100011000011011010001
          - S-Box Result:     00111110011010100010000001101010   [per every group of 4-bits]
          - Split Into Two:   0011111001101010 [L] 0010000001101010 [R]
          - Swap Halves:      00100000011010100011111001101010
          - Bit Inversion:    11011111100101011100000110010101
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     10000100011100101111000011111101

          - FUNCTION OUTPUT:  10000100011100101111000011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000011111111111110010100000

       - FUNCTION OUTPUT:          10000100011100101111000011111101

       - Left XOR FUNCTION OUTPUT: 11011100000011010000110001011101

       - Next Round Left 32 Bits:  10010010110100011000011011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100000011010000110001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010110100011000011011010001

       - Right 32 Bits:            11011100000011010000110001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11011100000011010000110001011101
          - S-Box Result:     01100101111101101111010110010110   [per every group of 4-bits]
          - Split Into Two:   0110010111110110 [L] 1111010110010110 [R]
          - Swap Halves:      11110101100101100110010111110110
          - Bit Inversion:    00001010011010011001101000001001
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     01011000111011111101110111100000

          - FUNCTION OUTPUT:  01011000111011111101110111100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010110100011000011011010001

       - FUNCTION OUTPUT:          01011000111011111101110111100000

       - Left XOR FUNCTION OUTPUT: 11001010001111100101101100110001

       - Next Round Left 32 Bits:  11011100000011010000110001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010001111100101101100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100000011010000110001011101

       - Right 32 Bits:            11001010001111100101101100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       11001010001111100101101100110001
          - S-Box Result:     01010100000111001001100000011010   [per every group of 4-bits]
          - Split Into Two:   0101010000011100 [L] 1001100000011010 [R]
          - Swap Halves:      10011000000110100101010000011100
          - Bit Inversion:    01100111111001011010101111100011
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     00111011011110110101110101100000

          - FUNCTION OUTPUT:  00111011011110110101110101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100000011010000110001011101

       - FUNCTION OUTPUT:          00111011011110110101110101100000

       - Left XOR FUNCTION OUTPUT: 11100111011101100101000100111101

       - Next Round Left 32 Bits:  11001010001111100101101100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111011101100101000100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010001111100101101100110001

       - Right 32 Bits:            11100111011101100101000100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11100111011101100101000100111101
          - S-Box Result:     11001101110100001001101000010110   [per every group of 4-bits]
          - Split Into Two:   1100110111010000 [L] 1001101000010110 [R]
          - Swap Halves:      10011010000101101100110111010000
          - Bit Inversion:    01100101111010010011001000101111
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     00111110110100110011111010111001

          - FUNCTION OUTPUT:  00111110110100110011111010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010001111100101101100110001

       - FUNCTION OUTPUT:          00111110110100110011111010111001

       - Left XOR FUNCTION OUTPUT: 11110100111011010110010110001000

       - Next Round Left 32 Bits:  11100111011101100101000100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100111011010110010110001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111011101100101000100111101

       - Right 32 Bits:            11110100111011010110010110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       11110100111011010110010110001000
          - S-Box Result:     10110111110001100000100100100010   [per every group of 4-bits]
          - Split Into Two:   1011011111000110 [L] 0000100100100010 [R]
          - Swap Halves:      00001001001000101011011111000110
          - Bit Inversion:    11110110110111010100100000111001
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     10100100101101011001001100100111

          - FUNCTION OUTPUT:  10100100101101011001001100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111011101100101000100111101

       - FUNCTION OUTPUT:          10100100101101011001001100100111

       - Left XOR FUNCTION OUTPUT: 01000011110000111100001000011010

       - Next Round Left 32 Bits:  11110100111011010110010110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011110000111100001000011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100111011010110010110001000

       - Right 32 Bits:            01000011110000111100001000011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01000011110000111100001000011010
          - S-Box Result:     01110001010100010101111010100100   [per every group of 4-bits]
          - Split Into Two:   0111000101010001 [L] 0101111010100100 [R]
          - Swap Halves:      01011110101001000111000101010001
          - Bit Inversion:    10100001010110111000111010101110
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     11111101101100001011110011110100

          - FUNCTION OUTPUT:  11111101101100001011110011110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100111011010110010110001000

       - FUNCTION OUTPUT:          11111101101100001011110011110100

       - Left XOR FUNCTION OUTPUT: 00001001010111011101100101111100

       - Next Round Left 32 Bits:  01000011110000111100001000011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001010111011101100101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000100101011101110110010111110001000011110000111100001000011010

 > Processed Block:     0000100101011101110110010111110001000011110000111100001000011010



Plaintext Block 2: 0000010000110101110100110000111111100100000110010100101101000011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100001101011101001100001111

       - Right 32 Bits:            11100100000110010100101101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       11100100000110010100101101000011
          - S-Box Result:     11000111101000110111100001110001   [per every group of 4-bits]
          - Split Into Two:   1100011110100011 [L] 0111100001110001 [R]
          - Swap Halves:      01111000011100011100011110100011
          - Bit Inversion:    10000111100011100011100001011100
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     10011001110111000101000010000111

          - FUNCTION OUTPUT:  10011001110111000101000010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100001101011101001100001111

       - FUNCTION OUTPUT:          10011001110111000101000010000111

       - Left XOR FUNCTION OUTPUT: 10011101111010011000001110001000

       - Next Round Left 32 Bits:  11100100000110010100101101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101111010011000001110001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100000110010100101101000011

       - Right 32 Bits:            10011101111010011000001110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       10011101111010011000001110001000
          - S-Box Result:     00110110110000110010000100100010   [per every group of 4-bits]
          - Split Into Two:   0011011011000011 [L] 0010000100100010 [R]
          - Swap Halves:      00100001001000100011011011000011
          - Bit Inversion:    11011110110111011100100100111100
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     10000100100000010010001000001110

          - FUNCTION OUTPUT:  10000100100000010010001000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100000110010100101101000011

       - FUNCTION OUTPUT:          10000100100000010010001000001110

       - Left XOR FUNCTION OUTPUT: 01100000100110000110100101001101

       - Next Round Left 32 Bits:  10011101111010011000001110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000100110000110100101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101111010011000001110001000

       - Right 32 Bits:            01100000100110000110100101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       01100000100110000110100101001101
          - S-Box Result:     00001111001100100000001101110110   [per every group of 4-bits]
          - Split Into Two:   0000111100110010 [L] 0000001101110110 [R]
          - Swap Halves:      00000011011101100000111100110010
          - Bit Inversion:    11111100100010011111000011001101
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     10100110111100000101001010100001

          - FUNCTION OUTPUT:  10100110111100000101001010100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101111010011000001110001000

       - FUNCTION OUTPUT:          10100110111100000101001010100001

       - Left XOR FUNCTION OUTPUT: 00111011000110011101000100101001

       - Next Round Left 32 Bits:  01100000100110000110100101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011000110011101000100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000100110000110100101001101

       - Right 32 Bits:            00111011000110011101000100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00111011000110011101000100101001
          - S-Box Result:     00011000101000110110101011100011   [per every group of 4-bits]
          - Split Into Two:   0001100010100011 [L] 0110101011100011 [R]
          - Swap Halves:      01101010111000110001100010100011
          - Bit Inversion:    10010101000111001110011101011100
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     11101111010111010110101110110101

          - FUNCTION OUTPUT:  11101111010111010110101110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000100110000110100101001101

       - FUNCTION OUTPUT:          11101111010111010110101110110101

       - Left XOR FUNCTION OUTPUT: 10001111110001010000001011111000

       - Next Round Left 32 Bits:  00111011000110011101000100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111110001010000001011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011000110011101000100101001

       - Right 32 Bits:            10001111110001010000001011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       10001111110001010000001011111000
          - S-Box Result:     00101011010110011111111010110010   [per every group of 4-bits]
          - Split Into Two:   0010101101011001 [L] 1111111010110010 [R]
          - Swap Halves:      11111110101100100010101101011001
          - Bit Inversion:    00000001010011011101010010100110
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01101011100110100100111100100111

          - FUNCTION OUTPUT:  01101011100110100100111100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011000110011101000100101001

       - FUNCTION OUTPUT:          01101011100110100100111100100111

       - Left XOR FUNCTION OUTPUT: 01010000100000111001111000001110

       - Next Round Left 32 Bits:  10001111110001010000001011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000100000111001111000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111110001010000001011111000

       - Right 32 Bits:            01010000100000111001111000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       01010000100000111001111000001110
          - S-Box Result:     10011111001000010011110011111100   [per every group of 4-bits]
          - Split Into Two:   1001111100100001 [L] 0011110011111100 [R]
          - Swap Halves:      00111100111111001001111100100001
          - Bit Inversion:    11000011000000110110000011011110
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     00001001001101010111000001001001

          - FUNCTION OUTPUT:  00001001001101010111000001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111110001010000001011111000

       - FUNCTION OUTPUT:          00001001001101010111000001001001

       - Left XOR FUNCTION OUTPUT: 10000110111100000111001010110001

       - Next Round Left 32 Bits:  01010000100000111001111000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110111100000111001010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000100000111001111000001110

       - Right 32 Bits:            10000110111100000111001010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       10000110111100000111001010110001
          - S-Box Result:     00100000101111111101111010001010   [per every group of 4-bits]
          - Split Into Two:   0010000010111111 [L] 1101111010001010 [R]
          - Swap Halves:      11011110100010100010000010111111
          - Bit Inversion:    00100001011101011101111101000000
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10111011001110011000000001110110

          - FUNCTION OUTPUT:  10111011001110011000000001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000100000111001111000001110

       - FUNCTION OUTPUT:          10111011001110011000000001110110

       - Left XOR FUNCTION OUTPUT: 11101011101110100001111001111000

       - Next Round Left 32 Bits:  10000110111100000111001010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011101110100001111001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110111100000111001010110001

       - Right 32 Bits:            11101011101110100001111001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       11101011101110100001111001111000
          - S-Box Result:     11001000100001001010110011010010   [per every group of 4-bits]
          - Split Into Two:   1100100010000100 [L] 1010110011010010 [R]
          - Swap Halves:      10101100110100101100100010000100
          - Bit Inversion:    01010011001011010011011101111011
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     01001001111101000100010100110101

          - FUNCTION OUTPUT:  01001001111101000100010100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110111100000111001010110001

       - FUNCTION OUTPUT:          01001001111101000100010100110101

       - Left XOR FUNCTION OUTPUT: 11001111000001000011011110000100

       - Next Round Left 32 Bits:  11101011101110100001111001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111000001000011011110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011101110100001111001111000

       - Right 32 Bits:            11001111000001000011011110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       11001111000001000011011110000100
          - S-Box Result:     01011011111101110001110100100111   [per every group of 4-bits]
          - Split Into Two:   0101101111110111 [L] 0001110100100111 [R]
          - Swap Halves:      00011101001001110101101111110111
          - Bit Inversion:    11100010110110001010010000001000
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10111000111010011110100011010010

          - FUNCTION OUTPUT:  10111000111010011110100011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011101110100001111001111000

       - FUNCTION OUTPUT:          10111000111010011110100011010010

       - Left XOR FUNCTION OUTPUT: 01010011010100111111011010101010

       - Next Round Left 32 Bits:  11001111000001000011011110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011010100111111011010101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111000001000011011110000100

       - Right 32 Bits:            01010011010100111111011010101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01010011010100111111011010101010
          - S-Box Result:     10010001100100011011000001000100   [per every group of 4-bits]
          - Split Into Two:   1001000110010001 [L] 1011000001000100 [R]
          - Swap Halves:      10110000010001001001000110010001
          - Bit Inversion:    01001111101110110110111001101110
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     00010111110111101011011101010100

          - FUNCTION OUTPUT:  00010111110111101011011101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111000001000011011110000100

       - FUNCTION OUTPUT:          00010111110111101011011101010100

       - Left XOR FUNCTION OUTPUT: 11011000110110101000000011010000

       - Next Round Left 32 Bits:  01010011010100111111011010101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000110110101000000011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011010100111111011010101010

       - Right 32 Bits:            11011000110110101000000011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       11011000110110101000000011010000
          - S-Box Result:     01100010011001000010111101101111   [per every group of 4-bits]
          - Split Into Two:   0110001001100100 [L] 0010111101101111 [R]
          - Swap Halves:      00101111011011110110001001100100
          - Bit Inversion:    11010000100100001001110110011011
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     10001011011101111010110011110011

          - FUNCTION OUTPUT:  10001011011101111010110011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011010100111111011010101010

       - FUNCTION OUTPUT:          10001011011101111010110011110011

       - Left XOR FUNCTION OUTPUT: 11011000001001000101101001011001

       - Next Round Left 32 Bits:  11011000110110101000000011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000001001000101101001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000110110101000000011010000

       - Right 32 Bits:            11011000001001000101101001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11011000001001000101101001011001
          - S-Box Result:     01100010111001111001010010010011   [per every group of 4-bits]
          - Split Into Two:   0110001011100111 [L] 1001010010010011 [R]
          - Swap Halves:      10010100100100110110001011100111
          - Bit Inversion:    01101011011011001001110100011000
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     00111001111010101101101011110001

          - FUNCTION OUTPUT:  00111001111010101101101011110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000110110101000000011010000

       - FUNCTION OUTPUT:          00111001111010101101101011110001

       - Left XOR FUNCTION OUTPUT: 11100001001100000101101000100001

       - Next Round Left 32 Bits:  11011000001001000101101001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001001100000101101000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000001001000101101001011001

       - Right 32 Bits:            11100001001100000101101000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       11100001001100000101101000100001
          - S-Box Result:     11001010000111111001010011101010   [per every group of 4-bits]
          - Split Into Two:   1100101000011111 [L] 1001010011101010 [R]
          - Swap Halves:      10010100111010101100101000011111
          - Bit Inversion:    01101011000101010011010111100000
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     00110111100010111100001101100011

          - FUNCTION OUTPUT:  00110111100010111100001101100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000001001000101101001011001

       - FUNCTION OUTPUT:          00110111100010111100001101100011

       - Left XOR FUNCTION OUTPUT: 11101111101011111001100100111010

       - Next Round Left 32 Bits:  11100001001100000101101000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111101011111001100100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001001100000101101000100001

       - Right 32 Bits:            11101111101011111001100100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11101111101011111001100100111010
          - S-Box Result:     11001011010010110011001100010100   [per every group of 4-bits]
          - Split Into Two:   1100101101001011 [L] 0011001100010100 [R]
          - Swap Halves:      00110011000101001100101101001011
          - Bit Inversion:    11001100111010110011010010110100
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     10010111110100010011100000100010

          - FUNCTION OUTPUT:  10010111110100010011100000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001001100000101101000100001

       - FUNCTION OUTPUT:          10010111110100010011100000100010

       - Left XOR FUNCTION OUTPUT: 01110110111000010110001000000011

       - Next Round Left 32 Bits:  11101111101011111001100100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110111000010110001000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111101011111001100100111010

       - Right 32 Bits:            01110110111000010110001000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       01110110111000010110001000000011
          - S-Box Result:     11010000110010100000111011110001   [per every group of 4-bits]
          - Split Into Two:   1101000011001010 [L] 0000111011110001 [R]
          - Swap Halves:      00001110111100011101000011001010
          - Bit Inversion:    11110001000011100010111100110101
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     10100011011001101111010000101011

          - FUNCTION OUTPUT:  10100011011001101111010000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111101011111001100100111010

       - FUNCTION OUTPUT:          10100011011001101111010000101011

       - Left XOR FUNCTION OUTPUT: 01001100110010010110110100010001

       - Next Round Left 32 Bits:  01110110111000010110001000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100110010010110110100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110111000010110001000000011

       - Right 32 Bits:            01001100110010010110110100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01001100110010010110110100010001
          - S-Box Result:     01110101010100110000011010101010   [per every group of 4-bits]
          - Split Into Two:   0111010101010011 [L] 0000011010101010 [R]
          - Swap Halves:      00000110101010100111010101010011
          - Bit Inversion:    11111001010101011000101010101100
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     10100101101111101011100011110110

          - FUNCTION OUTPUT:  10100101101111101011100011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110111000010110001000000011

       - FUNCTION OUTPUT:          10100101101111101011100011110110

       - Left XOR FUNCTION OUTPUT: 11010011010111111101101011110101

       - Next Round Left 32 Bits:  01001100110010010110110100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011010111111101101011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101001101011111110110101111010101001100110010010110110100010001

 > Processed Block:     1101001101011111110110101111010101001100110010010110110100010001



Plaintext Block 3: 0000001000011110100110100000010101100011001101000100010001011010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010000111101001101000000101

       - Right 32 Bits:            01100011001101000100010001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       01100011001101000100010001011010
          - S-Box Result:     00000001000101110111011110010100   [per every group of 4-bits]
          - Split Into Two:   0000000100010111 [L] 0111011110010100 [R]
          - Swap Halves:      01110111100101000000000100010111
          - Bit Inversion:    10001000011010111111111011101000
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     10010110001110011001011000110011

          - FUNCTION OUTPUT:  10010110001110011001011000110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010000111101001101000000101

       - FUNCTION OUTPUT:          10010110001110011001011000110011

       - Left XOR FUNCTION OUTPUT: 10010100001001110000110000110110

       - Next Round Left 32 Bits:  01100011001101000100010001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100001001110000110000110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011001101000100010001011010

       - Right 32 Bits:            10010100001001110000110000110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       10010100001001110000110000110110
          - S-Box Result:     00110111111011011111010100010000   [per every group of 4-bits]
          - Split Into Two:   0011011111101101 [L] 1111010100010000 [R]
          - Swap Halves:      11110101000100000011011111101101
          - Bit Inversion:    00001010111011111100100000010010
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     01010000101100110010001100100000

          - FUNCTION OUTPUT:  01010000101100110010001100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011001101000100010001011010

       - FUNCTION OUTPUT:          01010000101100110010001100100000

       - Left XOR FUNCTION OUTPUT: 00110011100001110110011101111010

       - Next Round Left 32 Bits:  10010100001001110000110000110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011100001110110011101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100001001110000110000110110

       - Right 32 Bits:            00110011100001110110011101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       00110011100001110110011101111010
          - S-Box Result:     00010001001011010000110111010100   [per every group of 4-bits]
          - Split Into Two:   0001000100101101 [L] 0000110111010100 [R]
          - Swap Halves:      00001101110101000001000100101101
          - Bit Inversion:    11110010001010111110111011010010
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     10101000010100100100110010111110

          - FUNCTION OUTPUT:  10101000010100100100110010111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100001001110000110000110110

       - FUNCTION OUTPUT:          10101000010100100100110010111110

       - Left XOR FUNCTION OUTPUT: 00111100011101010100000010001000

       - Next Round Left 32 Bits:  00110011100001110110011101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100011101010100000010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011100001110110011101111010

       - Right 32 Bits:            00111100011101010100000010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00111100011101010100000010001000
          - S-Box Result:     00010101110110010111111100100010   [per every group of 4-bits]
          - Split Into Two:   0001010111011001 [L] 0111111100100010 [R]
          - Swap Halves:      01111111001000100001010111011001
          - Bit Inversion:    10000000110111011110101000100110
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     11111010100111000110011011001111

          - FUNCTION OUTPUT:  11111010100111000110011011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011100001110110011101111010

       - FUNCTION OUTPUT:          11111010100111000110011011001111

       - Left XOR FUNCTION OUTPUT: 11001001000110110000000110110101

       - Next Round Left 32 Bits:  00111100011101010100000010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001000110110000000110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100011101010100000010001000

       - Right 32 Bits:            11001001000110110000000110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       11001001000110110000000110110101
          - S-Box Result:     01010011101010001111101010001001   [per every group of 4-bits]
          - Split Into Two:   0101001110101000 [L] 1111101010001001 [R]
          - Swap Halves:      11111010100010010101001110101000
          - Bit Inversion:    00000101011101101010110001010111
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01101111101000010011011111010110

          - FUNCTION OUTPUT:  01101111101000010011011111010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100011101010100000010001000

       - FUNCTION OUTPUT:          01101111101000010011011111010110

       - Left XOR FUNCTION OUTPUT: 01010011110101000111011101011110

       - Next Round Left 32 Bits:  11001001000110110000000110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011110101000111011101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001000110110000000110110101

       - Right 32 Bits:            01010011110101000111011101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       01010011110101000111011101011110
          - S-Box Result:     10010001011001111101110110011100   [per every group of 4-bits]
          - Split Into Two:   1001000101100111 [L] 1101110110011100 [R]
          - Swap Halves:      11011101100111001001000101100111
          - Bit Inversion:    00100010011000110110111010011000
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     11101000010101010111111000001111

          - FUNCTION OUTPUT:  11101000010101010111111000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001000110110000000110110101

       - FUNCTION OUTPUT:          11101000010101010111111000001111

       - Left XOR FUNCTION OUTPUT: 00100001010011100111111110111010

       - Next Round Left 32 Bits:  01010011110101000111011101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001010011100111111110111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011110101000111011101011110

       - Right 32 Bits:            00100001010011100111111110111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       00100001010011100111111110111010
          - S-Box Result:     11101010011111001101101110000100   [per every group of 4-bits]
          - Split Into Two:   1110101001111100 [L] 1101101110000100 [R]
          - Swap Halves:      11011011100001001110101001111100
          - Bit Inversion:    00100100011110110001010110000011
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10111110001101110100101010110101

          - FUNCTION OUTPUT:  10111110001101110100101010110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011110101000111011101011110

       - FUNCTION OUTPUT:          10111110001101110100101010110101

       - Left XOR FUNCTION OUTPUT: 11101101111000110011110111101011

       - Next Round Left 32 Bits:  00100001010011100111111110111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101111000110011110111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001010011100111111110111010

       - Right 32 Bits:            11101101111000110011110111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       11101101111000110011110111101011
          - S-Box Result:     11000110110000010001011011001000   [per every group of 4-bits]
          - Split Into Two:   1100011011000001 [L] 0001011011001000 [R]
          - Swap Halves:      00010110110010001100011011000001
          - Bit Inversion:    11101001001101110011100100111110
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     11110011111011100100101101110000

          - FUNCTION OUTPUT:  11110011111011100100101101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001010011100111111110111010

       - FUNCTION OUTPUT:          11110011111011100100101101110000

       - Left XOR FUNCTION OUTPUT: 11010010101000000011010011001010

       - Next Round Left 32 Bits:  11101101111000110011110111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010101000000011010011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101111000110011110111101011

       - Right 32 Bits:            11010010101000000011010011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       11010010101000000011010011001010
          - S-Box Result:     01101110010011110001011101010100   [per every group of 4-bits]
          - Split Into Two:   0110111001001111 [L] 0001011101010100 [R]
          - Swap Halves:      00010111010101000110111001001111
          - Bit Inversion:    11101000101010111001000110110000
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10110010100110101101110101101010

          - FUNCTION OUTPUT:  10110010100110101101110101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101111000110011110111101011

       - FUNCTION OUTPUT:          10110010100110101101110101101010

       - Left XOR FUNCTION OUTPUT: 01011111011110011110000010000001

       - Next Round Left 32 Bits:  11010010101000000011010011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111011110011110000010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010101000000011010011001010

       - Right 32 Bits:            01011111011110011110000010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01011111011110011110000010000001
          - S-Box Result:     10011011110100111100111100101010   [per every group of 4-bits]
          - Split Into Two:   1001101111010011 [L] 1100111100101010 [R]
          - Swap Halves:      11001111001010101001101111010011
          - Bit Inversion:    00110000110101010110010000101100
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     01101000101100001011110100010110

          - FUNCTION OUTPUT:  01101000101100001011110100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010101000000011010011001010

       - FUNCTION OUTPUT:          01101000101100001011110100010110

       - Left XOR FUNCTION OUTPUT: 10111010000100001000100111011100

       - Next Round Left 32 Bits:  01011111011110011110000010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010000100001000100111011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111011110011110000010000001

       - Right 32 Bits:            10111010000100001000100111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       10111010000100001000100111011100
          - S-Box Result:     10000100101011110010001101100101   [per every group of 4-bits]
          - Split Into Two:   1000010010101111 [L] 0010001101100101 [R]
          - Swap Halves:      00100011011001011000010010101111
          - Bit Inversion:    11011100100110100111101101010000
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     10000111011111010100101000111000

          - FUNCTION OUTPUT:  10000111011111010100101000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111011110011110000010000001

       - FUNCTION OUTPUT:          10000111011111010100101000111000

       - Left XOR FUNCTION OUTPUT: 11011000000001001010101010111001

       - Next Round Left 32 Bits:  10111010000100001000100111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000000001001010101010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010000100001000100111011100

       - Right 32 Bits:            11011000000001001010101010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11011000000001001010101010111001
          - S-Box Result:     01100010111101110100010010000011   [per every group of 4-bits]
          - Split Into Two:   0110001011110111 [L] 0100010010000011 [R]
          - Swap Halves:      01000100100000110110001011110111
          - Bit Inversion:    10111011011111001001110100001000
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     11101001111110101101101011100001

          - FUNCTION OUTPUT:  11101001111110101101101011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010000100001000100111011100

       - FUNCTION OUTPUT:          11101001111110101101101011100001

       - Left XOR FUNCTION OUTPUT: 01010011111010100101001100111101

       - Next Round Left 32 Bits:  11011000000001001010101010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011111010100101001100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000000001001010101010111001

       - Right 32 Bits:            01010011111010100101001100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       01010011111010100101001100111101
          - S-Box Result:     10010001110001001001000100010110   [per every group of 4-bits]
          - Split Into Two:   1001000111000100 [L] 1001000100010110 [R]
          - Swap Halves:      10010001000101101001000111000100
          - Bit Inversion:    01101110111010010110111000111011
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     00110010011101111001100010111000

          - FUNCTION OUTPUT:  00110010011101111001100010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000000001001010101010111001

       - FUNCTION OUTPUT:          00110010011101111001100010111000

       - Left XOR FUNCTION OUTPUT: 11101010011100110011001000000001

       - Next Round Left 32 Bits:  01010011111010100101001100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010011100110011001000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011111010100101001100111101

       - Right 32 Bits:            11101010011100110011001000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11101010011100110011001000000001
          - S-Box Result:     11000100110100010001111011111010   [per every group of 4-bits]
          - Split Into Two:   1100010011010001 [L] 0001111011111010 [R]
          - Swap Halves:      00011110111110101100010011010001
          - Bit Inversion:    11100001000001010011101100101110
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     10111010001111110011011110111000

          - FUNCTION OUTPUT:  10111010001111110011011110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011111010100101001100111101

       - FUNCTION OUTPUT:          10111010001111110011011110111000

       - Left XOR FUNCTION OUTPUT: 11101001110101010110010010000101

       - Next Round Left 32 Bits:  11101010011100110011001000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001110101010110010010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010011100110011001000000001

       - Right 32 Bits:            11101001110101010110010010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       11101001110101010110010010000101
          - S-Box Result:     11000011011010010000011100101001   [per every group of 4-bits]
          - Split Into Two:   1100001101101001 [L] 0000011100101001 [R]
          - Swap Halves:      00000111001010011100001101101001
          - Bit Inversion:    11111000110101100011110010010110
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     10101010101111101110011110001000

          - FUNCTION OUTPUT:  10101010101111101110011110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010011100110011001000000001

       - FUNCTION OUTPUT:          10101010101111101110011110001000

       - Left XOR FUNCTION OUTPUT: 01000000110011011101010110001001

       - Next Round Left 32 Bits:  11101001110101010110010010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000110011011101010110001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001110101010110010010000101

       - Right 32 Bits:            01000000110011011101010110001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01000000110011011101010110001001
          - S-Box Result:     01111111010101100110100100100011   [per every group of 4-bits]
          - Split Into Two:   0111111101010110 [L] 0110100100100011 [R]
          - Swap Halves:      01101001001000110111111101010110
          - Bit Inversion:    10010110110111001000000010101001
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     11001010001101111011001011110011

          - FUNCTION OUTPUT:  11001010001101111011001011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001110101010110010010000101

       - FUNCTION OUTPUT:          11001010001101111011001011110011

       - Left XOR FUNCTION OUTPUT: 00100011111000101101011001110110

       - Next Round Left 32 Bits:  01000000110011011101010110001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011111000101101011001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010001111100010110101100111011001000000110011011101010110001001

 > Processed Block:     0010001111100010110101100111011001000000110011011101010110001001


FINAL PROCESSED DATA BLOCKS: 0000100101011101110110010111110001000011110000111100001000011010,1101001101011111110110101111010101001100110010010110110100010001,0010001111100010110101100111011001000000110011011101010110001001,

BLOCKS IN ASCII:             	]Ÿ|C√¬”_⁄ıL…m#‚÷v@Õ’?

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: MyAweso
In Binary:  01001101011110010100000101110111011001010111001101101111

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01100101000011010111110100010001001101010001100100100001
Subkey 2  : 00110101111001010000010111011101100101011100110110111101
Subkey 3  : 10010100001101011111010001000100110101000110010010000101
Subkey 4  : 11010111100101000001011101110110010101110011011011110100
Subkey 5  : 01010000110101111101000100010011010100011001001000010110
Subkey 6  : 01011110010100000101110111011001010111001101101111010011
Subkey 7  : 01000011010111110100010001001101010001100100100001011001
Subkey 8  : 01111001010000010111011101100101011100110110111101001101
Subkey 9  : 00001101011111010001000100110101000110010010000101100101
Subkey 10 : 11100101000001011101110110010101110011011011110100110101
Subkey 11 : 00110101111101000100010011010100011001001000010110010100
Subkey 12 : 10010100000101110111011001010111001101101111010011010111
Subkey 13 : 11010111110100010001001101010001100100100001011001010000
Subkey 14 : 01010000010111011101100101011100110110111101001101011110
Subkey 15 : 01011111010001000100110101000110010010000101100101000011
Subkey 16 : 01000001011101110110010101110011011011110100110101111001

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : 	]Ÿ|C√¬”_⁄ıL…m#‚÷v@Õ’?

Data padded with spaces : 	]Ÿ|C√¬”_⁄ıL…m#‚÷v@Õ’?[Padded with '0' spaces]

Data in ASCII           : 9,93,217,124,67,195,194,26,211,95,218,245,76,201,109,17,35,226,214,118,64,205,213,137,

Data in Binary          : 00001001,01011101,11011001,01111100,01000011,11000011,11000010,00011010,11010011,01011111,11011010,11110101,01001100,11001001,01101101,00010001,00100011,11100010,11010110,01110110,01000000,11001101,11010101,10001001,

Data in 64-bit Blocks   : 0000100101011101110110010111110001000011110000111100001000011010,1101001101011111110110101111010101001100110010010110110100010001,0010001111100010110101100111011001000000110011011101010110001001,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 0000100101011101110110010111110001000011110000111100001000011010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001010111011101100101111100

       - Right 32 Bits:            01000011110000111100001000011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01000011110000111100001000011010
          - S-Box Result:     01110001010100010101111010100100   [per every group of 4-bits]
          - Split Into Two:   0111000101010001 [L] 0101111010100100 [R]
          - Swap Halves:      01011110101001000111000101010001
          - Bit Inversion:    10100001010110111000111010101110
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     10101111100100001111000011111000

          - FUNCTION OUTPUT:  10101111100100001111000011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001010111011101100101111100

       - FUNCTION OUTPUT:          10101111100100001111000011111000

       - Left XOR FUNCTION OUTPUT: 10100110110011010010100110000100

       - Next Round Left 32 Bits:  01000011110000111100001000011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110110011010010100110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011110000111100001000011010

       - Right 32 Bits:            10100110110011010010100110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       10100110110011010010100110000100
          - S-Box Result:     01000000010101101110001100100111   [per every group of 4-bits]
          - Split Into Two:   0100000001010110 [L] 1110001100100111 [R]
          - Swap Halves:      11100011001001110100000001010110
          - Bit Inversion:    00011100110110001011111110101001
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     11101110101100001010110110111010

          - FUNCTION OUTPUT:  11101110101100001010110110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011110000111100001000011010

       - FUNCTION OUTPUT:          11101110101100001010110110111010

       - Left XOR FUNCTION OUTPUT: 10101101011100110110111110100000

       - Next Round Left 32 Bits:  10100110110011010010100110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101011100110110111110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110110011010010100110000100

       - Right 32 Bits:            10101101011100110110111110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       10101101011100110110111110100000
          - S-Box Result:     01000110110100010000101101001111   [per every group of 4-bits]
          - Split Into Two:   0100011011010001 [L] 0000101101001111 [R]
          - Swap Halves:      00001011010011110100011011010001
          - Bit Inversion:    11110100101100001011100100101110
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     10111111110010100010011010110011

          - FUNCTION OUTPUT:  10111111110010100010011010110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110110011010010100110000100

       - FUNCTION OUTPUT:          10111111110010100010011010110011

       - Left XOR FUNCTION OUTPUT: 00011001000001110000111100110111

       - Next Round Left 32 Bits:  10101101011100110110111110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001000001110000111100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101011100110110111110100000

       - Right 32 Bits:            00011001000001110000111100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       00011001000001110000111100110111
          - S-Box Result:     10100011111111011111101100011101   [per every group of 4-bits]
          - Split Into Two:   1010001111111101 [L] 1111101100011101 [R]
          - Swap Halves:      11111011000111011010001111111101
          - Bit Inversion:    00000100111000100101110000000010
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     01111100111110001001100011000010

          - FUNCTION OUTPUT:  01111100111110001001100011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101011100110110111110100000

       - FUNCTION OUTPUT:          01111100111110001001100011000010

       - Left XOR FUNCTION OUTPUT: 11010001100010111111011101100010

       - Next Round Left 32 Bits:  00011001000001110000111100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001100010111111011101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001000001110000111100110111

       - Right 32 Bits:            11010001100010111111011101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11010001100010111111011101100010
          - S-Box Result:     01101010001010001011110100001110   [per every group of 4-bits]
          - Split Into Two:   0110101000101000 [L] 1011110100001110 [R]
          - Swap Halves:      10111101000011100110101000101000
          - Bit Inversion:    01000010111100011001010111010111
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     00011000001010111111001010111100

          - FUNCTION OUTPUT:  00011000001010111111001010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001000001110000111100110111

       - FUNCTION OUTPUT:          00011000001010111111001010111100

       - Left XOR FUNCTION OUTPUT: 00000001001011001111110110001011

       - Next Round Left 32 Bits:  11010001100010111111011101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001001011001111110110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001100010111111011101100010

       - Right 32 Bits:            00000001001011001111110110001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       00000001001011001111110110001011
          - S-Box Result:     11111010111001011011011000101000   [per every group of 4-bits]
          - Split Into Two:   1111101011100101 [L] 1011011000101000 [R]
          - Swap Halves:      10110110001010001111101011100101
          - Bit Inversion:    01001001110101110000010100011010
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     00010111100110010011010001100010

          - FUNCTION OUTPUT:  00010111100110010011010001100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001100010111111011101100010

       - FUNCTION OUTPUT:          00010111100110010011010001100010

       - Left XOR FUNCTION OUTPUT: 11000110000100101100001100000000

       - Next Round Left 32 Bits:  00000001001011001111110110001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110000100101100001100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001001011001111110110001011

       - Right 32 Bits:            11000110000100101100001100000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       11000110000100101100001100000000
          - S-Box Result:     01010000101011100101000111111111   [per every group of 4-bits]
          - Split Into Two:   0101000010101110 [L] 0101000111111111 [R]
          - Swap Halves:      01010001111111110101000010101110
          - Bit Inversion:    10101110000000001010111101010001
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     10111100011101100111011000001011

          - FUNCTION OUTPUT:  10111100011101100111011000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001001011001111110110001011

       - FUNCTION OUTPUT:          10111100011101100111011000001011

       - Left XOR FUNCTION OUTPUT: 10111101010110101000101110000000

       - Next Round Left 32 Bits:  11000110000100101100001100000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101010110101000101110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110000100101100001100000000

       - Right 32 Bits:            10111101010110101000101110000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10111101010110101000101110000000
          - S-Box Result:     10000110100101000010100000101111   [per every group of 4-bits]
          - Split Into Two:   1000011010010100 [L] 0010100000101111 [R]
          - Swap Halves:      00101000001011111000011010010100
          - Bit Inversion:    11010111110100000111100101101011
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     01001000110000110011000101110001

          - FUNCTION OUTPUT:  01001000110000110011000101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110000100101100001100000000

       - FUNCTION OUTPUT:          01001000110000110011000101110001

       - Left XOR FUNCTION OUTPUT: 10001110110100011111001001110001

       - Next Round Left 32 Bits:  10111101010110101000101110000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110110100011111001001110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101010110101000101110000000

       - Right 32 Bits:            10001110110100011111001001110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       10001110110100011111001001110001
          - S-Box Result:     00101100011010101011111011011010   [per every group of 4-bits]
          - Split Into Two:   0010110001101010 [L] 1011111011011010 [R]
          - Swap Halves:      10111110110110100010110001101010
          - Bit Inversion:    01000001001001011101001110010101
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     10000001111111001010110101001011

          - FUNCTION OUTPUT:  10000001111111001010110101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101010110101000101110000000

       - FUNCTION OUTPUT:          10000001111111001010110101001011

       - Left XOR FUNCTION OUTPUT: 00111100101001100010011011001011

       - Next Round Left 32 Bits:  10001110110100011111001001110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100101001100010011011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110110100011111001001110001

       - Right 32 Bits:            00111100101001100010011011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       00111100101001100010011011001011
          - S-Box Result:     00010101010000001110000001011000   [per every group of 4-bits]
          - Split Into Two:   0001010101000000 [L] 1110000001011000 [R]
          - Swap Halves:      11100000010110000001010101000000
          - Bit Inversion:    00011111101001111110101010111111
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     00110100111011111011110010111001

          - FUNCTION OUTPUT:  00110100111011111011110010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110110100011111001001110001

       - FUNCTION OUTPUT:          00110100111011111011110010111001

       - Left XOR FUNCTION OUTPUT: 10111010001111100100111011001000

       - Next Round Left 32 Bits:  00111100101001100010011011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010001111100100111011001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100101001100010011011001011

       - Right 32 Bits:            10111010001111100100111011001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       10111010001111100100111011001000
          - S-Box Result:     10000100000111000111110001010010   [per every group of 4-bits]
          - Split Into Two:   1000010000011100 [L] 0111110001010010 [R]
          - Swap Halves:      01111100010100101000010000011100
          - Bit Inversion:    10000011101011010111101111100011
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01111011110100110010100001010000

          - FUNCTION OUTPUT:  01111011110100110010100001010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100101001100010011011001011

       - FUNCTION OUTPUT:          01111011110100110010100001010000

       - Left XOR FUNCTION OUTPUT: 01000111011101010000111010011011

       - Next Round Left 32 Bits:  10111010001111100100111011001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111011101010000111010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010001111100100111011001000

       - Right 32 Bits:            01000111011101010000111010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       01000111011101010000111010011011
          - S-Box Result:     01111101110110011111110000111000   [per every group of 4-bits]
          - Split Into Two:   0111110111011001 [L] 1111110000111000 [R]
          - Swap Halves:      11111100001110000111110111011001
          - Bit Inversion:    00000011110001111000001000100110
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01001001100101011101101110101111

          - FUNCTION OUTPUT:  01001001100101011101101110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010001111100100111011001000

       - FUNCTION OUTPUT:          01001001100101011101101110101111

       - Left XOR FUNCTION OUTPUT: 11110011101010111001010101100111

       - Next Round Left 32 Bits:  01000111011101010000111010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011101010111001010101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111011101010000111010011011

       - Right 32 Bits:            11110011101010111001010101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       11110011101010111001010101100111
          - S-Box Result:     10110001010010000011100100001101   [per every group of 4-bits]
          - Split Into Two:   1011000101001000 [L] 0011100100001101 [R]
          - Swap Halves:      00111001000011011011000101001000
          - Bit Inversion:    11000110111100100100111010110111
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10111100111010010101001001011111

          - FUNCTION OUTPUT:  10111100111010010101001001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111011101010000111010011011

       - FUNCTION OUTPUT:          10111100111010010101001001011111

       - Left XOR FUNCTION OUTPUT: 11111011100111000101110011000100

       - Next Round Left 32 Bits:  11110011101010111001010101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011100111000101110011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011101010111001010101100111

       - Right 32 Bits:            11111011100111000101110011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       11111011100111000101110011000100
          - S-Box Result:     10111000001101011001010101010111   [per every group of 4-bits]
          - Split Into Two:   1011100000110101 [L] 1001010101010111 [R]
          - Swap Halves:      10010101010101111011100000110101
          - Bit Inversion:    01101010101010000100011111001010
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     00110100011100001101010110100000

          - FUNCTION OUTPUT:  00110100011100001101010110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011101010111001010101100111

       - FUNCTION OUTPUT:          00110100011100001101010110100000

       - Left XOR FUNCTION OUTPUT: 11000111110110110100000011000111

       - Next Round Left 32 Bits:  11111011100111000101110011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111110110110100000011000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011100111000101110011000100

       - Right 32 Bits:            11000111110110110100000011000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       11000111110110110100000011000111
          - S-Box Result:     01011101011010000111111101011101   [per every group of 4-bits]
          - Split Into Two:   0101110101101000 [L] 0111111101011101 [R]
          - Swap Halves:      01111111010111010101110101101000
          - Bit Inversion:    10000000101000101010001010010111
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     11010110101011000110100111101001

          - FUNCTION OUTPUT:  11010110101011000110100111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011100111000101110011000100

       - FUNCTION OUTPUT:          11010110101011000110100111101001

       - Left XOR FUNCTION OUTPUT: 00101101001100000011010100101101

       - Next Round Left 32 Bits:  11000111110110110100000011000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101001100000011010100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111110110110100000011000111

       - Right 32 Bits:            00101101001100000011010100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       00101101001100000011010100101101
          - S-Box Result:     11100110000111110001100111100110   [per every group of 4-bits]
          - Split Into Two:   1110011000011111 [L] 0001100111100110 [R]
          - Swap Halves:      00011001111001101110011000011111
          - Bit Inversion:    11100110000110010001100111100000
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     11110101111010110111000111110010

          - FUNCTION OUTPUT:  11110101111010110111000111110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111110110110100000011000111

       - FUNCTION OUTPUT:          11110101111010110111000111110010

       - Left XOR FUNCTION OUTPUT: 00110010001100000011000100110101

       - Next Round Left 32 Bits:  00101101001100000011010100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010001100000011000100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011001000110000001100010011010100101101001100000011010100101101

 > Processed Block:     0011001000110000001100010011010100101101001100000011010100101101


Ciphertext Block 2: 1101001101011111110110101111010101001100110010010110110100010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011010111111101101011110101

       - Right 32 Bits:            01001100110010010110110100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01001100110010010110110100010001
          - S-Box Result:     01110101010100110000011010101010   [per every group of 4-bits]
          - Split Into Two:   0111010101010011 [L] 0000011010101010 [R]
          - Swap Halves:      00000110101010100111010101010011
          - Bit Inversion:    11111001010101011000101010101100
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     11110111100111101111010011111010

          - FUNCTION OUTPUT:  11110111100111101111010011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011010111111101101011110101

       - FUNCTION OUTPUT:          11110111100111101111010011111010

       - Left XOR FUNCTION OUTPUT: 00100100110000010010111000001111

       - Next Round Left 32 Bits:  01001100110010010110110100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100110000010010111000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100110010010110110100010001

       - Right 32 Bits:            00100100110000010010111000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       00100100110000010010111000001111
          - S-Box Result:     11100111010110101110110011111011   [per every group of 4-bits]
          - Split Into Two:   1110011101011010 [L] 1110110011111011 [R]
          - Swap Halves:      11101100111110111110011101011010
          - Bit Inversion:    00010011000001000001100010100101
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     11100001011011000000101010110110

          - FUNCTION OUTPUT:  11100001011011000000101010110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100110010010110110100010001

       - FUNCTION OUTPUT:          11100001011011000000101010110110

       - Left XOR FUNCTION OUTPUT: 10101101101001010110011110100111

       - Next Round Left 32 Bits:  00100100110000010010111000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101101001010110011110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100110000010010111000001111

       - Right 32 Bits:            10101101101001010110011110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       10101101101001010110011110100111
          - S-Box Result:     01000110010010010000110101001101   [per every group of 4-bits]
          - Split Into Two:   0100011001001001 [L] 0000110101001101 [R]
          - Swap Halves:      00001101010011010100011001001001
          - Bit Inversion:    11110010101100101011100110110110
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     10111001110010000010011000101011

          - FUNCTION OUTPUT:  10111001110010000010011000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100110000010010111000001111

       - FUNCTION OUTPUT:          10111001110010000010011000101011

       - Left XOR FUNCTION OUTPUT: 10011101000010010000100000100100

       - Next Round Left 32 Bits:  10101101101001010110011110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101000010010000100000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101101001010110011110100111

       - Right 32 Bits:            10011101000010010000100000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       10011101000010010000100000100100
          - S-Box Result:     00110110111100111111001011100111   [per every group of 4-bits]
          - Split Into Two:   0011011011110011 [L] 1111001011100111 [R]
          - Swap Halves:      11110010111001110011011011110011
          - Bit Inversion:    00001101000110001100100100001100
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     01110101000000100000110111001100

          - FUNCTION OUTPUT:  01110101000000100000110111001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101101001010110011110100111

       - FUNCTION OUTPUT:          01110101000000100000110111001100

       - Left XOR FUNCTION OUTPUT: 11011000101001110110101001101011

       - Next Round Left 32 Bits:  10011101000010010000100000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000101001110110101001101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101000010010000100000100100

       - Right 32 Bits:            11011000101001110110101001101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11011000101001110110101001101011
          - S-Box Result:     01100010010011010000010000001000   [per every group of 4-bits]
          - Split Into Two:   0110001001001101 [L] 0000010000001000 [R]
          - Swap Halves:      00000100000010000110001001001101
          - Bit Inversion:    11111011111101111001110110110010
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     10100001001011011111101011011001

          - FUNCTION OUTPUT:  10100001001011011111101011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101000010010000100000100100

       - FUNCTION OUTPUT:          10100001001011011111101011011001

       - Left XOR FUNCTION OUTPUT: 00111100001001001111001011111101

       - Next Round Left 32 Bits:  11011000101001110110101001101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100001001001111001011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000101001110110101001101011

       - Right 32 Bits:            00111100001001001111001011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       00111100001001001111001011111101
          - S-Box Result:     00010101111001111011111010110110   [per every group of 4-bits]
          - Split Into Two:   0001010111100111 [L] 1011111010110110 [R]
          - Swap Halves:      10111110101101100001010111100111
          - Bit Inversion:    01000001010010011110101000011000
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     00011111000001111101101101100000

          - FUNCTION OUTPUT:  00011111000001111101101101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000101001110110101001101011

       - FUNCTION OUTPUT:          00011111000001111101101101100000

       - Left XOR FUNCTION OUTPUT: 11000111101000001011000100001011

       - Next Round Left 32 Bits:  00111100001001001111001011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111101000001011000100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100001001001111001011111101

       - Right 32 Bits:            11000111101000001011000100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       11000111101000001011000100001011
          - S-Box Result:     01011101010011111000101011111000   [per every group of 4-bits]
          - Split Into Two:   0101110101001111 [L] 1000101011111000 [R]
          - Swap Halves:      10001010111110000101110101001111
          - Bit Inversion:    01110101000001111010001010110000
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     01100111011100010111101111101010

          - FUNCTION OUTPUT:  01100111011100010111101111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100001001001111001011111101

       - FUNCTION OUTPUT:          01100111011100010111101111101010

       - Left XOR FUNCTION OUTPUT: 01011011010101011000100100010111

       - Next Round Left 32 Bits:  11000111101000001011000100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010101011000100100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111101000001011000100001011

       - Right 32 Bits:            01011011010101011000100100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       01011011010101011000100100010111
          - S-Box Result:     10011000100110010010001110101101   [per every group of 4-bits]
          - Split Into Two:   1001100010011001 [L] 0010001110101101 [R]
          - Swap Halves:      00100011101011011001100010011001
          - Bit Inversion:    11011100010100100110011101100110
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     01000011010000010010111101111100

          - FUNCTION OUTPUT:  01000011010000010010111101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111101000001011000100001011

       - FUNCTION OUTPUT:          01000011010000010010111101111100

       - Left XOR FUNCTION OUTPUT: 10000100111000011001111001110111

       - Next Round Left 32 Bits:  01011011010101011000100100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100111000011001111001110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011010101011000100100010111

       - Right 32 Bits:            10000100111000011001111001110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       10000100111000011001111001110111
          - S-Box Result:     00100111110010100011110011011101   [per every group of 4-bits]
          - Split Into Two:   0010011111001010 [L] 0011110011011101 [R]
          - Swap Halves:      00111100110111010010011111001010
          - Bit Inversion:    11000011001000101101100000110101
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     00000011111110111010011011101011

          - FUNCTION OUTPUT:  00000011111110111010011011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011010101011000100100010111

       - FUNCTION OUTPUT:          00000011111110111010011011101011

       - Left XOR FUNCTION OUTPUT: 01011000101011100010111111111100

       - Next Round Left 32 Bits:  10000100111000011001111001110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000101011100010111111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100111000011001111001110111

       - Right 32 Bits:            01011000101011100010111111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01011000101011100010111111111100
          - S-Box Result:     10010010010011001110101110110101   [per every group of 4-bits]
          - Split Into Two:   1001001001001100 [L] 1110101110110101 [R]
          - Swap Halves:      11101011101101011001001001001100
          - Bit Inversion:    00010100010010100110110110110011
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     00111111000000100011101110110101

          - FUNCTION OUTPUT:  00111111000000100011101110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100111000011001111001110111

       - FUNCTION OUTPUT:          00111111000000100011101110110101

       - Left XOR FUNCTION OUTPUT: 10111011111000111010010111000010

       - Next Round Left 32 Bits:  01011000101011100010111111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011111000111010010111000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000101011100010111111111100

       - Right 32 Bits:            10111011111000111010010111000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       10111011111000111010010111000010
          - S-Box Result:     10001000110000010100100101011110   [per every group of 4-bits]
          - Split Into Two:   1000100011000001 [L] 0100100101011110 [R]
          - Swap Halves:      01001001010111101000100011000001
          - Bit Inversion:    10110110101000010111011100111110
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01001110110111110010010010001101

          - FUNCTION OUTPUT:  01001110110111110010010010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000101011100010111111111100

       - FUNCTION OUTPUT:          01001110110111110010010010001101

       - Left XOR FUNCTION OUTPUT: 00010110011100010000101101110001

       - Next Round Left 32 Bits:  10111011111000111010010111000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110011100010000101101110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011111000111010010111000010

       - Right 32 Bits:            00010110011100010000101101110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       00010110011100010000101101110001
          - S-Box Result:     10100000110110101111100011011010   [per every group of 4-bits]
          - Split Into Two:   1010000011011010 [L] 1111100011011010 [R]
          - Swap Halves:      11111000110110101010000011011010
          - Bit Inversion:    00000111001001010101111100100101
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01001101011101110000011010101100

          - FUNCTION OUTPUT:  01001101011101110000011010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011111000111010010111000010

       - FUNCTION OUTPUT:          01001101011101110000011010101100

       - Left XOR FUNCTION OUTPUT: 11110110100101001010001101101110

       - Next Round Left 32 Bits:  00010110011100010000101101110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110100101001010001101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110011100010000101101110001

       - Right 32 Bits:            11110110100101001010001101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       11110110100101001010001101101110
          - S-Box Result:     10110000001101110100000100001100   [per every group of 4-bits]
          - Split Into Two:   1011000000110111 [L] 0100000100001100 [R]
          - Swap Halves:      01000001000011001011000000110111
          - Bit Inversion:    10111110111100110100111111001000
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     11000100111010000101001100100000

          - FUNCTION OUTPUT:  11000100111010000101001100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110011100010000101101110001

       - FUNCTION OUTPUT:          11000100111010000101001100100000

       - Left XOR FUNCTION OUTPUT: 11010010100110010101100001010001

       - Next Round Left 32 Bits:  11110110100101001010001101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010100110010101100001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110100101001010001101101110

       - Right 32 Bits:            11010010100110010101100001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       11010010100110010101100001010001
          - S-Box Result:     01101110001100111001001010011010   [per every group of 4-bits]
          - Split Into Two:   0110111000110011 [L] 1001001010011010 [R]
          - Swap Halves:      10010010100110100110111000110011
          - Bit Inversion:    01101101011001011001000111001100
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     00110011101111010000001110100110

          - FUNCTION OUTPUT:  00110011101111010000001110100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110100101001010001101101110

       - FUNCTION OUTPUT:          00110011101111010000001110100110

       - Left XOR FUNCTION OUTPUT: 11000101001010011010000011001000

       - Next Round Left 32 Bits:  11010010100110010101100001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101001010011010000011001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010100110010101100001010001

       - Right 32 Bits:            11000101001010011010000011001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       11000101001010011010000011001000
          - S-Box Result:     01011001111000110100111101010010   [per every group of 4-bits]
          - Split Into Two:   0101100111100011 [L] 0100111101010010 [R]
          - Swap Halves:      01001111010100100101100111100011
          - Bit Inversion:    10110000101011011010011000011100
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     11100110101000110110110101100010

          - FUNCTION OUTPUT:  11100110101000110110110101100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010100110010101100001010001

       - FUNCTION OUTPUT:          11100110101000110110110101100010

       - Left XOR FUNCTION OUTPUT: 00110100001110100011010100110011

       - Next Round Left 32 Bits:  11000101001010011010000011001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100001110100011010100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101001010011010000011001000

       - Right 32 Bits:            00110100001110100011010100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       00110100001110100011010100110011
          - S-Box Result:     00010111000101000001100100010001   [per every group of 4-bits]
          - Split Into Two:   0001011100010100 [L] 0001100100010001 [R]
          - Swap Halves:      00011001000100010001011100010100
          - Bit Inversion:    11100110111011101110100011101011
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     11110101000111001000000011111001

          - FUNCTION OUTPUT:  11110101000111001000000011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101001010011010000011001000

       - FUNCTION OUTPUT:          11110101000111001000000011111001

       - Left XOR FUNCTION OUTPUT: 00110000001101010010000000110001

       - Next Round Left 32 Bits:  00110100001110100011010100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000001101010010000000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011000000110101001000000011000100110100001110100011010100110011

 > Processed Block:     0011000000110101001000000011000100110100001110100011010100110011


Ciphertext Block 3: 0010001111100010110101100111011001000000110011011101010110001001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011111000101101011001110110

       - Right 32 Bits:            01000000110011011101010110001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01000000110011011101010110001001
          - S-Box Result:     01111111010101100110100100100011   [per every group of 4-bits]
          - Split Into Two:   0111111101010110 [L] 0110100100100011 [R]
          - Swap Halves:      01101001001000110111111101010110
          - Bit Inversion:    10010110110111001000000010101001
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     10011000000101111111111011111111

          - FUNCTION OUTPUT:  10011000000101111111111011111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011111000101101011001110110

       - FUNCTION OUTPUT:          10011000000101111111111011111111

       - Left XOR FUNCTION OUTPUT: 10111011111101010010100010001001

       - Next Round Left 32 Bits:  01000000110011011101010110001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011111101010010100010001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000110011011101010110001001

       - Right 32 Bits:            10111011111101010010100010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       10111011111101010010100010001001
          - S-Box Result:     10001000101110011110001000100011   [per every group of 4-bits]
          - Split Into Two:   1000100010111001 [L] 1110001000100011 [R]
          - Swap Halves:      11100010001000111000100010111001
          - Bit Inversion:    00011101110111000111011101000110
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     11101111101101000110010101010101

          - FUNCTION OUTPUT:  11101111101101000110010101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000110011011101010110001001

       - FUNCTION OUTPUT:          11101111101101000110010101010101

       - Left XOR FUNCTION OUTPUT: 10101111011110011011000011011100

       - Next Round Left 32 Bits:  10111011111101010010100010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111011110011011000011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011111101010010100010001001

       - Right 32 Bits:            10101111011110011011000011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       10101111011110011011000011011100
          - S-Box Result:     01001011110100111000111101100101   [per every group of 4-bits]
          - Split Into Two:   0100101111010011 [L] 1000111101100101 [R]
          - Swap Halves:      10001111011001010100101111010011
          - Bit Inversion:    01110000100110101011010000101100
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     00111011111000000010101110110001

          - FUNCTION OUTPUT:  00111011111000000010101110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011111101010010100010001001

       - FUNCTION OUTPUT:          00111011111000000010101110110001

       - Left XOR FUNCTION OUTPUT: 10000000000101010000001100111000

       - Next Round Left 32 Bits:  10101111011110011011000011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000000101010000001100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111011110011011000011011100

       - Right 32 Bits:            10000000000101010000001100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       10000000000101010000001100111000
          - S-Box Result:     00101111101010011111000100010010   [per every group of 4-bits]
          - Split Into Two:   0010111110101001 [L] 1111000100010010 [R]
          - Swap Halves:      11110001000100100010111110101001
          - Bit Inversion:    00001110111011011101000001010110
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     01110110111101110001010010010110

          - FUNCTION OUTPUT:  01110110111101110001010010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111011110011011000011011100

       - FUNCTION OUTPUT:          01110110111101110001010010010110

       - Left XOR FUNCTION OUTPUT: 11011001100011101010010001001010

       - Next Round Left 32 Bits:  10000000000101010000001100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001100011101010010001001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000000101010000001100111000

       - Right 32 Bits:            11011001100011101010010001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11011001100011101010010001001010
          - S-Box Result:     01100011001011000100011101110100   [per every group of 4-bits]
          - Split Into Two:   0110001100101100 [L] 0100011101110100 [R]
          - Swap Halves:      01000111011101000110001100101100
          - Bit Inversion:    10111000100010111001110011010011
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     11100010010100011111101110111000

          - FUNCTION OUTPUT:  11100010010100011111101110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000000101010000001100111000

       - FUNCTION OUTPUT:          11100010010100011111101110111000

       - Left XOR FUNCTION OUTPUT: 01100010010001001111100010000000

       - Next Round Left 32 Bits:  11011001100011101010010001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010010001001111100010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001100011101010010001001010

       - Right 32 Bits:            01100010010001001111100010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       01100010010001001111100010000000
          - S-Box Result:     00001110011101111011001000101111   [per every group of 4-bits]
          - Split Into Two:   0000111001110111 [L] 1011001000101111 [R]
          - Swap Halves:      10110010001011110000111001110111
          - Bit Inversion:    01001101110100001111000110001000
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     00010011100111101100000011110000

          - FUNCTION OUTPUT:  00010011100111101100000011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001100011101010010001001010

       - FUNCTION OUTPUT:          00010011100111101100000011110000

       - Left XOR FUNCTION OUTPUT: 11001010000100000110010010111010

       - Next Round Left 32 Bits:  01100010010001001111100010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010000100000110010010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010010001001111100010000000

       - Right 32 Bits:            11001010000100000110010010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       11001010000100000110010010111010
          - S-Box Result:     01010100101011110000011110000100   [per every group of 4-bits]
          - Split Into Two:   0101010010101111 [L] 0000011110000100 [R]
          - Swap Halves:      00000111100001000101010010101111
          - Bit Inversion:    11111000011110111010101101010000
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     11101010000011010111001000001010

          - FUNCTION OUTPUT:  11101010000011010111001000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010010001001111100010000000

       - FUNCTION OUTPUT:          11101010000011010111001000001010

       - Left XOR FUNCTION OUTPUT: 10001000010010011000101010001010

       - Next Round Left 32 Bits:  11001010000100000110010010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000010010011000101010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010000100000110010010111010

       - Right 32 Bits:            10001000010010011000101010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10001000010010011000101010001010
          - S-Box Result:     00100010011100110010010000100100   [per every group of 4-bits]
          - Split Into Two:   0010001001110011 [L] 0010010000100100 [R]
          - Swap Halves:      00100100001001000010001001110011
          - Bit Inversion:    11011011110110111101110110001100
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     01000100110010001001010110010110

          - FUNCTION OUTPUT:  01000100110010001001010110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010000100000110010010111010

       - FUNCTION OUTPUT:          01000100110010001001010110010110

       - Left XOR FUNCTION OUTPUT: 10001110110110001111000100101100

       - Next Round Left 32 Bits:  10001000010010011000101010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110110110001111000100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000010010011000101010001010

       - Right 32 Bits:            10001110110110001111000100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       10001110110110001111000100101100
          - S-Box Result:     00101100011000101011101011100101   [per every group of 4-bits]
          - Split Into Two:   0010110001100010 [L] 1011101011100101 [R]
          - Swap Halves:      10111010111001010010110001100010
          - Bit Inversion:    01000101000110101101001110011101
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     10000101110000111010110101000011

          - FUNCTION OUTPUT:  10000101110000111010110101000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000010010011000101010001010

       - FUNCTION OUTPUT:          10000101110000111010110101000011

       - Left XOR FUNCTION OUTPUT: 00001101100010100010011111001001

       - Next Round Left 32 Bits:  10001110110110001111000100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101100010100010011111001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110110110001111000100101100

       - Right 32 Bits:            00001101100010100010011111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       00001101100010100010011111001001
          - S-Box Result:     11110110001001001110110101010011   [per every group of 4-bits]
          - Split Into Two:   1111011000100100 [L] 1110110101010011 [R]
          - Swap Halves:      11101101010100111111011000100100
          - Bit Inversion:    00010010101011000000100111011011
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     00111001111001000101111111011101

          - FUNCTION OUTPUT:  00111001111001000101111111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110110110001111000100101100

       - FUNCTION OUTPUT:          00111001111001000101111111011101

       - Left XOR FUNCTION OUTPUT: 10110111001111001010111011110001

       - Next Round Left 32 Bits:  00001101100010100010011111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111001111001010111011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101100010100010011111001001

       - Right 32 Bits:            10110111001111001010111011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       10110111001111001010111011110001
          - S-Box Result:     10001101000101010100110010111010   [per every group of 4-bits]
          - Split Into Two:   1000110100010101 [L] 0100110010111010 [R]
          - Swap Halves:      01001100101110101000110100010101
          - Bit Inversion:    10110011010001010111001011101010
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01001011001110110010000101011001

          - FUNCTION OUTPUT:  01001011001110110010000101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101100010100010011111001001

       - FUNCTION OUTPUT:          01001011001110110010000101011001

       - Left XOR FUNCTION OUTPUT: 01000110101100010000011010010000

       - Next Round Left 32 Bits:  10110111001111001010111011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110101100010000011010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111001111001010111011110001

       - Right 32 Bits:            01000110101100010000011010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       01000110101100010000011010010000
          - S-Box Result:     01110000100010101111000000111111   [per every group of 4-bits]
          - Split Into Two:   0111000010001010 [L] 1111000000111111 [R]
          - Swap Halves:      11110000001111110111000010001010
          - Bit Inversion:    00001111110000001000111101110101
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01000101100100101101011011111100

          - FUNCTION OUTPUT:  01000101100100101101011011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111001111001010111011110001

       - FUNCTION OUTPUT:          01000101100100101101011011111100

       - Left XOR FUNCTION OUTPUT: 11110010101011100111100000001101

       - Next Round Left 32 Bits:  01000110101100010000011010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010101011100111100000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110101100010000011010010000

       - Right 32 Bits:            11110010101011100111100000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       11110010101011100111100000001101
          - S-Box Result:     10111110010011001101001011110110   [per every group of 4-bits]
          - Split Into Two:   1011111001001100 [L] 1101001011110110 [R]
          - Swap Halves:      11010010111101101011111001001100
          - Bit Inversion:    00101101000010010100000110110011
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     01010111000100100101110101011011

          - FUNCTION OUTPUT:  01010111000100100101110101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110101100010000011010010000

       - FUNCTION OUTPUT:          01010111000100100101110101011011

       - Left XOR FUNCTION OUTPUT: 00010001101000110101101111001011

       - Next Round Left 32 Bits:  11110010101011100111100000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001101000110101101111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010101011100111100000001101

       - Right 32 Bits:            00010001101000110101101111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       00010001101000110101101111001011
          - S-Box Result:     10101010010000011001100001011000   [per every group of 4-bits]
          - Split Into Two:   1010101001000001 [L] 1001100001011000 [R]
          - Swap Halves:      10011000010110001010101001000001
          - Bit Inversion:    01100111101001110101010110111110
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     00111001011111111100011111010100

          - FUNCTION OUTPUT:  00111001011111111100011111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010101011100111100000001101

       - FUNCTION OUTPUT:          00111001011111111100011111010100

       - Left XOR FUNCTION OUTPUT: 11001011110100011011111111011001

       - Next Round Left 32 Bits:  00010001101000110101101111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011110100011011111111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001101000110101101111001011

       - Right 32 Bits:            11001011110100011011111111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       11001011110100011011111111011001
          - S-Box Result:     01011000011010101000101101100011   [per every group of 4-bits]
          - Split Into Two:   0101100001101010 [L] 1000101101100011 [R]
          - Swap Halves:      10001011011000110101100001101010
          - Bit Inversion:    01110100100111001010011110010101
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     00100010100100100110110011101011

          - FUNCTION OUTPUT:  00100010100100100110110011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001101000110101101111001011

       - FUNCTION OUTPUT:          00100010100100100110110011101011

       - Left XOR FUNCTION OUTPUT: 00110011001100010011011100100000

       - Next Round Left 32 Bits:  11001011110100011011111111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011001100010011011100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011110100011011111111011001

       - Right 32 Bits:            00110011001100010011011100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       00110011001100010011011100100000
          - S-Box Result:     00010001000110100001110111101111   [per every group of 4-bits]
          - Split Into Two:   0001000100011010 [L] 0001110111101111 [R]
          - Swap Halves:      00011101111011110001000100011010
          - Bit Inversion:    11100010000100001110111011100101
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     11110001111000101000011011110111

          - FUNCTION OUTPUT:  11110001111000101000011011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011110100011011111111011001

       - FUNCTION OUTPUT:          11110001111000101000011011110111

       - Left XOR FUNCTION OUTPUT: 00111010001100110011100100101110

       - Next Round Left 32 Bits:  00110011001100010011011100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010001100110011100100101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011101000110011001110010010111000110011001100010011011100100000

 > Processed Block:     0011101000110011001110010010111000110011001100010011011100100000


FINAL PROCESSED DATA BLOCKS: 0011001000110000001100010011010100101101001100000011010100101101,0011000000110101001000000011000100110100001110100011010100110011,0011101000110011001110010010111000110011001100010011011100100000,

BLOCKS IN ASCII:             2015-05-05 14:53:39.317 

