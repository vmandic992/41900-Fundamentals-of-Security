Triple DES Capture

168-bit key: 0UWh2Td1o7tzmDUtCvGDp

3 x 56-bit DES keys: 0UWh2Td, 1o7tzmD, UtCvGDp

Initialization Vector: 9v7S3b0f

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: UtCvGDp
In Binary:  01010101011101000100001101110110010001110100010001110000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 10101000101110111100100010011011100010111011100011111010
Subkey 2  : 01110100010000110111011001000111010001000111000001010101
Subkey 3  : 10111011110010001001101110001011101110001111101010101000
Subkey 4  : 01000011011101100100011101000100011100000101010101110100
Subkey 5  : 11001000100110111000101110111000111110101010100010111011
Subkey 6  : 01110110010001110100010001110000010101010111010001000011
Subkey 7  : 10011011100010111011100011111010101010001011101111001000
Subkey 8  : 01000111010001000111000001010101011101000100001101110110
Subkey 9  : 10001011101110001111101010101000101110111100100010011011
Subkey 10 : 01000100011100000101010101110100010000110111011001000111
Subkey 11 : 10111000111110101010100010111011110010001001101110001011
Subkey 12 : 01110000010101010111010001000011011101100100011101000100
Subkey 13 : 11111010101010001011101111001000100110111000101110111000
Subkey 14 : 01010101011101000100001101110110010001110100010001110000
Subkey 15 : 10101000101110111100100010011011100010111011100011111010
Subkey 16 : 01110100010000110111011001000111010001000111000001010101

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ¤2,£?ýQ³Ï>°(ËÍIYB9Ê0ò

Data padded with spaces : ¤2,£?ýQ³Ï>°(ËÍIYB9Ê0ò[Padded with '0' spaces]

Data in ASCII           : 164,50,44,163,141,253,81,179,207,26,62,176,40,203,205,73,89,66,57,202,28,30,48,242,

Data in Binary          : 10100100,00110010,00101100,10100011,10001101,11111101,01010001,10110011,11001111,00011010,00111110,10110000,00101000,11001011,11001101,01001001,01011001,01000010,00111001,11001010,00011100,00011110,00110000,11110010,

Data in 64-bit Blocks   : 1010010000110010001011001010001110001101111111010101000110110011,1100111100011010001111101011000000101000110010111100110101001001,0101100101000010001110011100101000011100000111100011000011110010,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011100101110110001101110101001100110011011000100011000001100110)

Ciphertext Block 1:                                      1010010000110010001011001010001110001101111111010101000110110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100001100100010110010100011

       - Right 32 Bits:            10001101111111010101000110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       10001101111111010101000110110011
          - S-Box Result:     00100110101101101001101010000001   [per every group of 4-bits]
          - Split Into Two:   0010011010110110 [L] 1001101010000001 [R]
          - Swap Halves:      10011010100000010010011010110110
          - Bit Inversion:    01100101011111101101100101001001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     00110101101001101000101101000011

          - FUNCTION OUTPUT:  00110101101001101000101101000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100001100100010110010100011

       - FUNCTION OUTPUT:          00110101101001101000101101000011

       - Left XOR FUNCTION OUTPUT: 10010001100101001010011111100000

       - Next Round Left 32 Bits:  10001101111111010101000110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001100101001010011111100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101111111010101000110110011

       - Right 32 Bits:            10010001100101001010011111100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       10010001100101001010011111100000
          - S-Box Result:     00111010001101110100110111001111   [per every group of 4-bits]
          - Split Into Two:   0011101000110111 [L] 0100110111001111 [R]
          - Swap Halves:      01001101110011110011101000110111
          - Bit Inversion:    10110010001100001100010111001000
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     00111111010101100000100011101101

          - FUNCTION OUTPUT:  00111111010101100000100011101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101111111010101000110110011

       - FUNCTION OUTPUT:          00111111010101100000100011101101

       - Left XOR FUNCTION OUTPUT: 10110010101010110101100101011110

       - Next Round Left 32 Bits:  10010001100101001010011111100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010101010110101100101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001100101001010011111100000

       - Right 32 Bits:            10110010101010110101100101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       10110010101010110101100101011110
          - S-Box Result:     10001110010010001001001110011100   [per every group of 4-bits]
          - Split Into Two:   1000111001001000 [L] 1001001110011100 [R]
          - Swap Halves:      10010011100111001000111001001000
          - Bit Inversion:    01101100011000110111000110110111
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     00110010001010000110111111110111

          - FUNCTION OUTPUT:  00110010001010000110111111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001100101001010011111100000

       - FUNCTION OUTPUT:          00110010001010000110111111110111

       - Left XOR FUNCTION OUTPUT: 10100011101111001100100000010111

       - Next Round Left 32 Bits:  10110010101010110101100101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011101111001100100000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010101010110101100101011110

       - Right 32 Bits:            10100011101111001100100000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       10100011101111001100100000010111
          - S-Box Result:     01000001100001010101001010101101   [per every group of 4-bits]
          - Split Into Two:   0100000110000101 [L] 0101001010101101 [R]
          - Swap Halves:      01010010101011010100000110000101
          - Bit Inversion:    10101101010100101011111001111010
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     01001000111011100011001111001110

          - FUNCTION OUTPUT:  01001000111011100011001111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010101010110101100101011110

       - FUNCTION OUTPUT:          01001000111011100011001111001110

       - Left XOR FUNCTION OUTPUT: 11111010010001010110101010010000

       - Next Round Left 32 Bits:  10100011101111001100100000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010010001010110101010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011101111001100100000010111

       - Right 32 Bits:            11111010010001010110101010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       11111010010001010110101010010000
          - S-Box Result:     10110100011110010000010000111111   [per every group of 4-bits]
          - Split Into Two:   1011010001111001 [L] 0000010000111111 [R]
          - Swap Halves:      00000100001111111011010001111001
          - Bit Inversion:    11111011110000000100101110000110
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     10110001000110000011110101011110

          - FUNCTION OUTPUT:  10110001000110000011110101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011101111001100100000010111

       - FUNCTION OUTPUT:          10110001000110000011110101011110

       - Left XOR FUNCTION OUTPUT: 00010010101001001111010101001001

       - Next Round Left 32 Bits:  11111010010001010110101010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010101001001111010101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010010001010110101010010000

       - Right 32 Bits:            00010010101001001111010101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       00010010101001001111010101001001
          - S-Box Result:     10101110010001111011100101110011   [per every group of 4-bits]
          - Split Into Two:   1010111001000111 [L] 1011100101110011 [R]
          - Swap Halves:      10111001011100111010111001000111
          - Bit Inversion:    01000110100011000101000110111000
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     10001011001010111000000000001111

          - FUNCTION OUTPUT:  10001011001010111000000000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010010001010110101010010000

       - FUNCTION OUTPUT:          10001011001010111000000000001111

       - Left XOR FUNCTION OUTPUT: 01110001011011101110101010011111

       - Next Round Left 32 Bits:  00010010101001001111010101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001011011101110101010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101001001111010101001001

       - Right 32 Bits:            01110001011011101110101010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       01110001011011101110101010011111
          - S-Box Result:     11011010000011001100010000111011   [per every group of 4-bits]
          - Split Into Two:   1101101000001100 [L] 1100010000111011 [R]
          - Swap Halves:      11000100001110111101101000001100
          - Bit Inversion:    00111011110001000010010111110011
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     00100111100111110011101100111000

          - FUNCTION OUTPUT:  00100111100111110011101100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101001001111010101001001

       - FUNCTION OUTPUT:          00100111100111110011101100111000

       - Left XOR FUNCTION OUTPUT: 00110101001110111100111001110001

       - Next Round Left 32 Bits:  01110001011011101110101010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101001110111100111001110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001011011101110101010011111

       - Right 32 Bits:            00110101001110111100111001110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       00110101001110111100111001110001
          - S-Box Result:     00011001000110000101110011011010   [per every group of 4-bits]
          - Split Into Two:   0001100100011000 [L] 0101110011011010 [R]
          - Swap Halves:      01011100110110100001100100011000
          - Bit Inversion:    10100011001001011110011011100111
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     00001110110100000100100111000000

          - FUNCTION OUTPUT:  00001110110100000100100111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001011011101110101010011111

       - FUNCTION OUTPUT:          00001110110100000100100111000000

       - Left XOR FUNCTION OUTPUT: 01111111101111101010001101011111

       - Next Round Left 32 Bits:  00110101001110111100111001110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111101111101010001101011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101001110111100111001110001

       - Right 32 Bits:            01111111101111101010001101011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       01111111101111101010001101011111
          - S-Box Result:     11011011100011000100000110011011   [per every group of 4-bits]
          - Split Into Two:   1101101110001100 [L] 0100000110011011 [R]
          - Swap Halves:      01000001100110111101101110001100
          - Bit Inversion:    10111110011001000010010001110011
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     10001100101111100101011011101010

          - FUNCTION OUTPUT:  10001100101111100101011011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101001110111100111001110001

       - FUNCTION OUTPUT:          10001100101111100101011011101010

       - Left XOR FUNCTION OUTPUT: 10111001100001011001100010011011

       - Next Round Left 32 Bits:  01111111101111101010001101011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001100001011001100010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111101111101010001101011111

       - Right 32 Bits:            10111001100001011001100010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       10111001100001011001100010011011
          - S-Box Result:     10000011001010010011001000111000   [per every group of 4-bits]
          - Split Into Two:   1000001100101001 [L] 0011001000111000 [R]
          - Swap Halves:      00110010001110001000001100101001
          - Bit Inversion:    11001101110001110111110011010110
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     00101100011110001101110101100010

          - FUNCTION OUTPUT:  00101100011110001101110101100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111101111101010001101011111

       - FUNCTION OUTPUT:          00101100011110001101110101100010

       - Left XOR FUNCTION OUTPUT: 01010011110001100111111000111101

       - Next Round Left 32 Bits:  10111001100001011001100010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011110001100111111000111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001100001011001100010011011

       - Right 32 Bits:            01010011110001100111111000111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       01010011110001100111111000111101
          - S-Box Result:     10010001010100001101110000010110   [per every group of 4-bits]
          - Split Into Two:   1001000101010000 [L] 1101110000010110 [R]
          - Swap Halves:      11011100000101101001000101010000
          - Bit Inversion:    00100011111010010110111010101111
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     01010001101000100111010011101100

          - FUNCTION OUTPUT:  01010001101000100111010011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001100001011001100010011011

       - FUNCTION OUTPUT:          01010001101000100111010011101100

       - Left XOR FUNCTION OUTPUT: 11101000001001111110110001110111

       - Next Round Left 32 Bits:  01010011110001100111111000111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000001001111110110001110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011110001100111111000111101

       - Right 32 Bits:            11101000001001111110110001110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       11101000001001111110110001110111
          - S-Box Result:     11000010111011011100010111011101   [per every group of 4-bits]
          - Split Into Two:   1100001011101101 [L] 1100010111011101 [R]
          - Swap Halves:      11000101110111011100001011101101
          - Bit Inversion:    00111010001000100011110100010010
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     10110011000001011000100000110101

          - FUNCTION OUTPUT:  10110011000001011000100000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011110001100111111000111101

       - FUNCTION OUTPUT:          10110011000001011000100000110101

       - Left XOR FUNCTION OUTPUT: 11100000110000111111011000001000

       - Next Round Left 32 Bits:  11101000001001111110110001110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000110000111111011000001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000001001111110110001110111

       - Right 32 Bits:            11100000110000111111011000001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       11100000110000111111011000001000
          - S-Box Result:     11001111010100011011000011110010   [per every group of 4-bits]
          - Split Into Two:   1100111101010001 [L] 1011000011110010 [R]
          - Swap Halves:      10110000111100101100111101010001
          - Bit Inversion:    01001111000011010011000010101110
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     01100001010001010000001011110110

          - FUNCTION OUTPUT:  01100001010001010000001011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000001001111110110001110111

       - FUNCTION OUTPUT:          01100001010001010000001011110110

       - Left XOR FUNCTION OUTPUT: 10001001011000101110111010000001

       - Next Round Left 32 Bits:  11100000110000111111011000001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001011000101110111010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000110000111111011000001000

       - Right 32 Bits:            10001001011000101110111010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       10001001011000101110111010000001
          - S-Box Result:     00100011000011101100110000101010   [per every group of 4-bits]
          - Split Into Two:   0010001100001110 [L] 1100110000101010 [R]
          - Swap Halves:      11001100001010100010001100001110
          - Bit Inversion:    00110011110101011101110011110001
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     11010010111000010011111101010101

          - FUNCTION OUTPUT:  11010010111000010011111101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000110000111111011000001000

       - FUNCTION OUTPUT:          11010010111000010011111101010101

       - Left XOR FUNCTION OUTPUT: 00110010001000101100100101011101

       - Next Round Left 32 Bits:  10001001011000101110111010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010001000101100100101011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001011000101110111010000001

       - Right 32 Bits:            00110010001000101100100101011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       00110010001000101100100101011101
          - S-Box Result:     00011110111011100101001110010110   [per every group of 4-bits]
          - Split Into Two:   0001111011101110 [L] 0101001110010110 [R]
          - Swap Halves:      01010011100101100001111011101110
          - Bit Inversion:    10101100011010011110000100010001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11111100101100011011001100011011

          - FUNCTION OUTPUT:  11111100101100011011001100011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001011000101110111010000001

       - FUNCTION OUTPUT:          11111100101100011011001100011011

       - Left XOR FUNCTION OUTPUT: 01110101110100110101110110011010

       - Next Round Left 32 Bits:  00110010001000101100100101011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101110100110101110110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010001000101100100101011101

       - Right 32 Bits:            01110101110100110101110110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       01110101110100110101110110011010
          - S-Box Result:     11011001011000011001011000110100   [per every group of 4-bits]
          - Split Into Two:   1101100101100001 [L] 1001011000110100 [R]
          - Swap Halves:      10010110001101001101100101100001
          - Bit Inversion:    01101001110010110010011010011110
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     11100100101011011110101110111011

          - FUNCTION OUTPUT:  11100100101011011110101110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010001000101100100101011101

       - FUNCTION OUTPUT:          11100100101011011110101110111011

       - Left XOR FUNCTION OUTPUT: 11010110100011110010001011100110

       - Next Round Left 32 Bits:  01110101110100110101110110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110100011110010001011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101011010001111001000101110011001110101110100110101110110011010

 > Decrypted Block:     1101011010001111001000101110011001110101110100110101110110011010


!!!CBC: Previous Ciphertext:                             0011100101110110001101110101001100110011011000100011000001100110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1110111111111001000101011011010101000110101100010110110111111100

 > Final Processed Block:                                1110111111111001000101011011010101000110101100010110110111111100



Ciphertext Block 2:                                      1100111100011010001111101011000000101000110010111100110101001001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111000110100011111010110000

       - Right 32 Bits:            00101000110010111100110101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       00101000110010111100110101001001
          - S-Box Result:     11100010010110000101011001110011   [per every group of 4-bits]
          - Split Into Two:   1110001001011000 [L] 0101011001110011 [R]
          - Swap Halves:      01010110011100111110001001011000
          - Bit Inversion:    10101001100011000001110110100111
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11111001010101000100111110101101

          - FUNCTION OUTPUT:  11111001010101000100111110101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111000110100011111010110000

       - FUNCTION OUTPUT:          11111001010101000100111110101101

       - Left XOR FUNCTION OUTPUT: 00110110010011100111000100011101

       - Next Round Left 32 Bits:  00101000110010111100110101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110010011100111000100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000110010111100110101001001

       - Right 32 Bits:            00110110010011100111000100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       00110110010011100111000100011101
          - S-Box Result:     00010000011111001101101010100110   [per every group of 4-bits]
          - Split Into Two:   0001000001111100 [L] 1101101010100110 [R]
          - Swap Halves:      11011010101001100001000001111100
          - Bit Inversion:    00100101010110011110111110000011
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10101000001111110010001010100110

          - FUNCTION OUTPUT:  10101000001111110010001010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000110010111100110101001001

       - FUNCTION OUTPUT:          10101000001111110010001010100110

       - Left XOR FUNCTION OUTPUT: 10000000111101001110111111101111

       - Next Round Left 32 Bits:  00110110010011100111000100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000111101001110111111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110010011100111000100011101

       - Right 32 Bits:            10000000111101001110111111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       10000000111101001110111111101111
          - S-Box Result:     00101111101101111100101111001011   [per every group of 4-bits]
          - Split Into Two:   0010111110110111 [L] 1100101111001011 [R]
          - Swap Halves:      11001011110010110010111110110111
          - Bit Inversion:    00110100001101001101000001001000
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     01101010011111111100111000001000

          - FUNCTION OUTPUT:  01101010011111111100111000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110010011100111000100011101

       - FUNCTION OUTPUT:          01101010011111111100111000001000

       - Left XOR FUNCTION OUTPUT: 01011100001100011011111100010101

       - Next Round Left 32 Bits:  10000000111101001110111111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100001100011011111100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000111101001110111111101111

       - Right 32 Bits:            01011100001100011011111100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       01011100001100011011111100010101
          - S-Box Result:     10010101000110101000101110101001   [per every group of 4-bits]
          - Split Into Two:   1001010100011010 [L] 1000101110101001 [R]
          - Swap Halves:      10001011101010011001010100011010
          - Bit Inversion:    01110100010101100110101011100101
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     10010001111010101110011101010001

          - FUNCTION OUTPUT:  10010001111010101110011101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000111101001110111111101111

       - FUNCTION OUTPUT:          10010001111010101110011101010001

       - Left XOR FUNCTION OUTPUT: 00010001000111100000100010111110

       - Next Round Left 32 Bits:  01011100001100011011111100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001000111100000100010111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100001100011011111100010101

       - Right 32 Bits:            00010001000111100000100010111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       00010001000111100000100010111110
          - S-Box Result:     10101010101011001111001010001100   [per every group of 4-bits]
          - Split Into Two:   1010101010101100 [L] 1111001010001100 [R]
          - Swap Halves:      11110010100011001010101010101100
          - Bit Inversion:    00001101011100110101010101010011
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     01000111101010110010001110001011

          - FUNCTION OUTPUT:  01000111101010110010001110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100001100011011111100010101

       - FUNCTION OUTPUT:          01000111101010110010001110001011

       - Left XOR FUNCTION OUTPUT: 00011011100110101001110010011110

       - Next Round Left 32 Bits:  00010001000111100000100010111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011100110101001110010011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001000111100000100010111110

       - Right 32 Bits:            00011011100110101001110010011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       00011011100110101001110010011110
          - S-Box Result:     10101000001101000011010100111100   [per every group of 4-bits]
          - Split Into Two:   1010100000110100 [L] 0011010100111100 [R]
          - Swap Halves:      00110101001111001010100000110100
          - Bit Inversion:    11001010110000110101011111001011
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     00000111011001001000011001111100

          - FUNCTION OUTPUT:  00000111011001001000011001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001000111100000100010111110

       - FUNCTION OUTPUT:          00000111011001001000011001111100

       - Left XOR FUNCTION OUTPUT: 00010110011110101000111011000010

       - Next Round Left 32 Bits:  00011011100110101001110010011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110011110101000111011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011100110101001110010011110

       - Right 32 Bits:            00010110011110101000111011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       00010110011110101000111011000010
          - S-Box Result:     10100000110101000010110001011110   [per every group of 4-bits]
          - Split Into Two:   1010000011010100 [L] 0010110001011110 [R]
          - Swap Halves:      00101100010111101010000011010100
          - Bit Inversion:    11010011101000010101111100101011
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     11001111111110100100000111100000

          - FUNCTION OUTPUT:  11001111111110100100000111100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011100110101001110010011110

       - FUNCTION OUTPUT:          11001111111110100100000111100000

       - Left XOR FUNCTION OUTPUT: 11010100011000001101110101111110

       - Next Round Left 32 Bits:  00010110011110101000111011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100011000001101110101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110011110101000111011000010

       - Right 32 Bits:            11010100011000001101110101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       11010100011000001101110101111110
          - S-Box Result:     01100111000011110110011011011100   [per every group of 4-bits]
          - Split Into Two:   0110011100001111 [L] 0110011011011100 [R]
          - Swap Halves:      01100110110111000110011100001111
          - Bit Inversion:    10011001001000111001100011110000
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     00110100110101100011011111010111

          - FUNCTION OUTPUT:  00110100110101100011011111010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110011110101000111011000010

       - FUNCTION OUTPUT:          00110100110101100011011111010111

       - Left XOR FUNCTION OUTPUT: 00100010101011001011100100010101

       - Next Round Left 32 Bits:  11010100011000001101110101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010101011001011100100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100011000001101110101111110

       - Right 32 Bits:            00100010101011001011100100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       00100010101011001011100100010101
          - S-Box Result:     11101110010001011000001110101001   [per every group of 4-bits]
          - Split Into Two:   1110111001000101 [L] 1000001110101001 [R]
          - Swap Halves:      10000011101010011110111001000101
          - Bit Inversion:    01111100010101100001000110111010
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     01001110100011000110001100100011

          - FUNCTION OUTPUT:  01001110100011000110001100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100011000001101110101111110

       - FUNCTION OUTPUT:          01001110100011000110001100100011

       - Left XOR FUNCTION OUTPUT: 10011010111011001011111001011101

       - Next Round Left 32 Bits:  00100010101011001011100100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010111011001011111001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010101011001011100100010101

       - Right 32 Bits:            10011010111011001011111001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       10011010111011001011111001011101
          - S-Box Result:     00110100110001011000110010010110   [per every group of 4-bits]
          - Split Into Two:   0011010011000101 [L] 1000110010010110 [R]
          - Swap Halves:      10001100100101100011010011000101
          - Bit Inversion:    01110011011010011100101100111010
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     10010010110101100110101010001110

          - FUNCTION OUTPUT:  10010010110101100110101010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010101011001011100100010101

       - FUNCTION OUTPUT:          10010010110101100110101010001110

       - Left XOR FUNCTION OUTPUT: 10110000011110101101001110011011

       - Next Round Left 32 Bits:  10011010111011001011111001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000011110101101001110011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010111011001011111001011101

       - Right 32 Bits:            10110000011110101101001110011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       10110000011110101101001110011011
          - S-Box Result:     10001111110101000110000100111000   [per every group of 4-bits]
          - Split Into Two:   1000111111010100 [L] 0110000100111000 [R]
          - Swap Halves:      01100001001110001000111111010100
          - Bit Inversion:    10011110110001110111000000101011
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     11101100100011000110101001101000

          - FUNCTION OUTPUT:  11101100100011000110101001101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010111011001011111001011101

       - FUNCTION OUTPUT:          11101100100011000110101001101000

       - Left XOR FUNCTION OUTPUT: 01110110011000001101010000110101

       - Next Round Left 32 Bits:  10110000011110101101001110011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110011000001101010000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000011110101101001110011011

       - Right 32 Bits:            01110110011000001101010000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       01110110011000001101010000110101
          - S-Box Result:     11010000000011110110011100011001   [per every group of 4-bits]
          - Split Into Two:   1101000000001111 [L] 0110011100011001 [R]
          - Swap Halves:      01100111000110011101000000001111
          - Bit Inversion:    10011000111001100010111111110000
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     00010001110000011001101011010111

          - FUNCTION OUTPUT:  00010001110000011001101011010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000011110101101001110011011

       - FUNCTION OUTPUT:          00010001110000011001101011010111

       - Left XOR FUNCTION OUTPUT: 10100001101110110100100101001100

       - Next Round Left 32 Bits:  01110110011000001101010000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001101110110100100101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110011000001101010000110101

       - Right 32 Bits:            10100001101110110100100101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       10100001101110110100100101001100
          - S-Box Result:     01001010100010000111001101110101   [per every group of 4-bits]
          - Split Into Two:   0100101010001000 [L] 0111001101110101 [R]
          - Swap Halves:      01110011011101010100101010001000
          - Bit Inversion:    10001100100010101011010101110111
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     10100010110000101000011100101111

          - FUNCTION OUTPUT:  10100010110000101000011100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110011000001101010000110101

       - FUNCTION OUTPUT:          10100010110000101000011100101111

       - Left XOR FUNCTION OUTPUT: 11010100101000100101001100011010

       - Next Round Left 32 Bits:  10100001101110110100100101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100101000100101001100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001101110110100100101001100

       - Right 32 Bits:            11010100101000100101001100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       11010100101000100101001100011010
          - S-Box Result:     01100111010011101001000110100100   [per every group of 4-bits]
          - Split Into Two:   0110011101001110 [L] 1001000110100100 [R]
          - Swap Halves:      10010001101001000110011101001110
          - Bit Inversion:    01101110010110111001100010110001
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     10001111011011110111101100010101

          - FUNCTION OUTPUT:  10001111011011110111101100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001101110110100100101001100

       - FUNCTION OUTPUT:          10001111011011110111101100010101

       - Left XOR FUNCTION OUTPUT: 00101110110101000011001001011001

       - Next Round Left 32 Bits:  11010100101000100101001100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110110101000011001001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100101000100101001100011010

       - Right 32 Bits:            00101110110101000011001001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       00101110110101000011001001011001
          - S-Box Result:     11101100011001110001111010010011   [per every group of 4-bits]
          - Split Into Two:   1110110001100111 [L] 0001111010010011 [R]
          - Swap Halves:      00011110100100111110110001100111
          - Bit Inversion:    11100001011011000001001110011000
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     10110001101101000100000110010010

          - FUNCTION OUTPUT:  10110001101101000100000110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100101000100101001100011010

       - FUNCTION OUTPUT:          10110001101101000100000110010010

       - Left XOR FUNCTION OUTPUT: 01100101000101100001001010001000

       - Next Round Left 32 Bits:  00101110110101000011001001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101000101100001001010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110110101000011001001011001

       - Right 32 Bits:            01100101000101100001001010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       01100101000101100001001010001000
          - S-Box Result:     00001001101000001010111000100010   [per every group of 4-bits]
          - Split Into Two:   0000100110100000 [L] 1010111000100010 [R]
          - Swap Halves:      10101110001000100000100110100000
          - Bit Inversion:    01010001110111011111011001011111
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     11011100101110110011101101111010

          - FUNCTION OUTPUT:  11011100101110110011101101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110110101000011001001011001

       - FUNCTION OUTPUT:          11011100101110110011101101111010

       - Left XOR FUNCTION OUTPUT: 11110010011011110000100100100011

       - Next Round Left 32 Bits:  01100101000101100001001010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010011011110000100100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111001001101111000010010010001101100101000101100001001010001000

 > Decrypted Block:     1111001001101111000010010010001101100101000101100001001010001000


!!!CBC: Previous Ciphertext:                             1010010000110010001011001010001110001101111111010101000110110011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101011001011101001001011000000011101000111010110100001100111011

 > Final Processed Block:                                0101011001011101001001011000000011101000111010110100001100111011



Ciphertext Block 3:                                      0101100101000010001110011100101000011100000111100011000011110010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001010000100011100111001010

       - Right 32 Bits:            00011100000111100011000011110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       00011100000111100011000011110010
          - S-Box Result:     10100101101011000001111110111110   [per every group of 4-bits]
          - Split Into Two:   1010010110101100 [L] 0001111110111110 [R]
          - Swap Halves:      00011111101111101010010110101100
          - Bit Inversion:    11100000010000010101101001010011
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     10110000100110010000100001011001

          - FUNCTION OUTPUT:  10110000100110010000100001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001010000100011100111001010

       - FUNCTION OUTPUT:          10110000100110010000100001011001

       - Left XOR FUNCTION OUTPUT: 11101001110110110011000110010011

       - Next Round Left 32 Bits:  00011100000111100011000011110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001110110110011000110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100000111100011000011110010

       - Right 32 Bits:            11101001110110110011000110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       11101001110110110011000110010011
          - S-Box Result:     11000011011010000001101000110001   [per every group of 4-bits]
          - Split Into Two:   1100001101101000 [L] 0001101000110001 [R]
          - Swap Halves:      00011010001100011100001101101000
          - Bit Inversion:    11100101110011100011110010010111
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     01101000101010001111000110110010

          - FUNCTION OUTPUT:  01101000101010001111000110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100000111100011000011110010

       - FUNCTION OUTPUT:          01101000101010001111000110110010

       - Left XOR FUNCTION OUTPUT: 01110100101101101100000101000000

       - Next Round Left 32 Bits:  11101001110110110011000110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100101101101100000101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001110110110011000110010011

       - Right 32 Bits:            01110100101101101100000101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       01110100101101101100000101000000
          - S-Box Result:     11010111100000000101101001111111   [per every group of 4-bits]
          - Split Into Two:   1101011110000000 [L] 0101101001111111 [R]
          - Swap Halves:      01011010011111111101011110000000
          - Bit Inversion:    10100101100000000010100001111111
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     11111011110010110011011000111111

          - FUNCTION OUTPUT:  11111011110010110011011000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001110110110011000110010011

       - FUNCTION OUTPUT:          11111011110010110011011000111111

       - Left XOR FUNCTION OUTPUT: 00010010000100000000011110101100

       - Next Round Left 32 Bits:  01110100101101101100000101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010000100000000011110101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100101101101100000101000000

       - Right 32 Bits:            00010010000100000000011110101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       00010010000100000000011110101100
          - S-Box Result:     10101110101011111111110101000101   [per every group of 4-bits]
          - Split Into Two:   1010111010101111 [L] 1111110101000101 [R]
          - Swap Halves:      11111101010001011010111010101111
          - Bit Inversion:    00000010101110100101000101010000
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     11100111000001101101110011100100

          - FUNCTION OUTPUT:  11100111000001101101110011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100101101101100000101000000

       - FUNCTION OUTPUT:          11100111000001101101110011100100

       - Left XOR FUNCTION OUTPUT: 10010011101100000001110110100100

       - Next Round Left 32 Bits:  00010010000100000000011110101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011101100000001110110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010000100000000011110101100

       - Right 32 Bits:            10010011101100000001110110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10010011101100000001110110100100
          - S-Box Result:     00110001100011111010011001000111   [per every group of 4-bits]
          - Split Into Two:   0011000110001111 [L] 1010011001000111 [R]
          - Swap Halves:      10100110010001110011000110001111
          - Bit Inversion:    01011001101110001100111001110000
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     00010011011000001011100010101000

          - FUNCTION OUTPUT:  00010011011000001011100010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010000100000000011110101100

       - FUNCTION OUTPUT:          00010011011000001011100010101000

       - Left XOR FUNCTION OUTPUT: 00000001011100001011111100000100

       - Next Round Left 32 Bits:  10010011101100000001110110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001011100001011111100000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011101100000001110110100100

       - Right 32 Bits:            00000001011100001011111100000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       00000001011100001011111100000100
          - S-Box Result:     11111010110111111000101111110111   [per every group of 4-bits]
          - Split Into Two:   1111101011011111 [L] 1000101111110111 [R]
          - Swap Halves:      10001011111101111111101011011111
          - Bit Inversion:    01110100000010000000010100100000
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     10111001101011111101010010010111

          - FUNCTION OUTPUT:  10111001101011111101010010010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011101100000001110110100100

       - FUNCTION OUTPUT:          10111001101011111101010010010111

       - Left XOR FUNCTION OUTPUT: 00101010000111111100100100110011

       - Next Round Left 32 Bits:  00000001011100001011111100000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010000111111100100100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001011100001011111100000100

       - Right 32 Bits:            00101010000111111100100100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       00101010000111111100100100110011
          - S-Box Result:     11100100101010110101001100010001   [per every group of 4-bits]
          - Split Into Two:   1110010010101011 [L] 0101001100010001 [R]
          - Swap Halves:      01010011000100011110010010101011
          - Bit Inversion:    10101100111011100001101101010100
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     10110000101101010000010110011111

          - FUNCTION OUTPUT:  10110000101101010000010110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001011100001011111100000100

       - FUNCTION OUTPUT:          10110000101101010000010110011111

       - Left XOR FUNCTION OUTPUT: 10110001110001011011101010011011

       - Next Round Left 32 Bits:  00101010000111111100100100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001110001011011101010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010000111111100100100110011

       - Right 32 Bits:            10110001110001011011101010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       10110001110001011011101010011011
          - S-Box Result:     10001010010110011000010000111000   [per every group of 4-bits]
          - Split Into Two:   1000101001011001 [L] 1000010000111000 [R]
          - Swap Halves:      10000100001110001000101001011001
          - Bit Inversion:    01111011110001110111010110100110
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     11010110001100101101101010000001

          - FUNCTION OUTPUT:  11010110001100101101101010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010000111111100100100110011

       - FUNCTION OUTPUT:          11010110001100101101101010000001

       - Left XOR FUNCTION OUTPUT: 11111100001011010001001110110010

       - Next Round Left 32 Bits:  10110001110001011011101010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100001011010001001110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001110001011011101010011011

       - Right 32 Bits:            11111100001011010001001110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       11111100001011010001001110110010
          - S-Box Result:     10110101111001101010000110001110   [per every group of 4-bits]
          - Split Into Two:   1011010111100110 [L] 1010000110001110 [R]
          - Swap Halves:      10100001100011101011010111100110
          - Bit Inversion:    01011110011100010100101000011001
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     01101100101010110011100010000000

          - FUNCTION OUTPUT:  01101100101010110011100010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001110001011011101010011011

       - FUNCTION OUTPUT:          01101100101010110011100010000000

       - Left XOR FUNCTION OUTPUT: 11011101011011101000001000011011

       - Next Round Left 32 Bits:  11111100001011010001001110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101011011101000001000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100001011010001001110110010

       - Right 32 Bits:            11011101011011101000001000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       11011101011011101000001000011011
          - S-Box Result:     01100110000011000010111010101000   [per every group of 4-bits]
          - Split Into Two:   0110011000001100 [L] 0010111010101000 [R]
          - Swap Halves:      00101110101010000110011000001100
          - Bit Inversion:    11010001010101111001100111110011
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     00110000111010000011100001000111

          - FUNCTION OUTPUT:  00110000111010000011100001000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100001011010001001110110010

       - FUNCTION OUTPUT:          00110000111010000011100001000111

       - Left XOR FUNCTION OUTPUT: 11001100110001010010101111110101

       - Next Round Left 32 Bits:  11011101011011101000001000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100110001010010101111110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101011011101000001000011011

       - Right 32 Bits:            11001100110001010010101111110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       11001100110001010010101111110101
          - S-Box Result:     01010101010110011110100010111001   [per every group of 4-bits]
          - Split Into Two:   0101010101011001 [L] 1110100010111001 [R]
          - Swap Halves:      11101000101110010101010101011001
          - Bit Inversion:    00010111010001101010101010100110
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     01100101000011011011000011100101

          - FUNCTION OUTPUT:  01100101000011011011000011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101011011101000001000011011

       - FUNCTION OUTPUT:          01100101000011011011000011100101

       - Left XOR FUNCTION OUTPUT: 10111000011000110011001011111110

       - Next Round Left 32 Bits:  11001100110001010010101111110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000011000110011001011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100110001010010101111110101

       - Right 32 Bits:            10111000011000110011001011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       10111000011000110011001011111110
          - S-Box Result:     10000010000000010001111010111100   [per every group of 4-bits]
          - Split Into Two:   1000001000000001 [L] 0001111010111100 [R]
          - Swap Halves:      00011110101111001000001000000001
          - Bit Inversion:    11100001010000110111110111111110
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     01101000011001001100100011011001

          - FUNCTION OUTPUT:  01101000011001001100100011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100110001010010101111110101

       - FUNCTION OUTPUT:          01101000011001001100100011011001

       - Left XOR FUNCTION OUTPUT: 10100100101000011110001100101100

       - Next Round Left 32 Bits:  10111000011000110011001011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100101000011110001100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000011000110011001011111110

       - Right 32 Bits:            10100100101000011110001100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       10100100101000011110001100101100
          - S-Box Result:     01000111010010101100000111100101   [per every group of 4-bits]
          - Split Into Two:   0100011101001010 [L] 1100000111100101 [R]
          - Swap Halves:      11000001111001010100011101001010
          - Bit Inversion:    00111110000110101011100010110101
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     00010000010100101000101011101101

          - FUNCTION OUTPUT:  00010000010100101000101011101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000011000110011001011111110

       - FUNCTION OUTPUT:          00010000010100101000101011101101

       - Left XOR FUNCTION OUTPUT: 10101000001100011011100000010011

       - Next Round Left 32 Bits:  10100100101000011110001100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000001100011011100000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100101000011110001100101100

       - Right 32 Bits:            10101000001100011011100000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       10101000001100011011100000010011
          - S-Box Result:     01000010000110101000001010100001   [per every group of 4-bits]
          - Split Into Two:   0100001000011010 [L] 1000001010100001 [R]
          - Swap Halves:      10000010101000010100001000011010
          - Bit Inversion:    01111101010111101011110111100101
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     10011100011010100101111001000001

          - FUNCTION OUTPUT:  10011100011010100101111001000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100101000011110001100101100

       - FUNCTION OUTPUT:          10011100011010100101111001000001

       - Left XOR FUNCTION OUTPUT: 00111000110010111011110101101101

       - Next Round Left 32 Bits:  10101000001100011011100000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000110010111011110101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000001100011011100000010011

       - Right 32 Bits:            00111000110010111011110101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       00111000110010111011110101101101
          - S-Box Result:     00010010010110001000011000000110   [per every group of 4-bits]
          - Split Into Two:   0001001001011000 [L] 1000011000000110 [R]
          - Swap Halves:      10000110000001100001001001011000
          - Bit Inversion:    01111001111110011110110110100111
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     00101001001000011011111110101101

          - FUNCTION OUTPUT:  00101001001000011011111110101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000001100011011100000010011

       - FUNCTION OUTPUT:          00101001001000011011111110101101

       - Left XOR FUNCTION OUTPUT: 10000001000100000000011110111110

       - Next Round Left 32 Bits:  00111000110010111011110101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001000100000000011110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000110010111011110101101101

       - Right 32 Bits:            10000001000100000000011110111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       10000001000100000000011110111110
          - S-Box Result:     00101010101011111111110110001100   [per every group of 4-bits]
          - Split Into Two:   0010101010101111 [L] 1111110110001100 [R]
          - Swap Halves:      11111101100011000010101010101111
          - Bit Inversion:    00000010011100111101010101010000
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10001111000101010001100001110101

          - FUNCTION OUTPUT:  10001111000101010001100001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000110010111011110101101101

       - FUNCTION OUTPUT:          10001111000101010001100001110101

       - Left XOR FUNCTION OUTPUT: 10110111110111101010010100011000

       - Next Round Left 32 Bits:  10000001000100000000011110111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111110111101010010100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011011111011110101001010001100010000001000100000000011110111110

 > Decrypted Block:     1011011111011110101001010001100010000001000100000000011110111110


!!!CBC: Previous Ciphertext:                             1100111100011010001111101011000000101000110010111100110101001001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111100011000100100110111010100010101001110110111100101011110111

 > Final Processed Block:                                0111100011000100100110111010100010101001110110111100101011110111


FINAL PROCESSED DATA BLOCKS: 1110111111111001000101011011010101000110101100010110110111111100,0101011001011101001001011000000011101000111010110100001100111011,0111100011000100100110111010100010101001110110111100101011110111,

BLOCKS IN ASCII:             ïùµF±müV]%?èëC;xÄ?¨©ÛÊ÷

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 1o7tzmD
In Binary:  00110001011011110011011101110100011110100110110101000100

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 11101001000011001000100010111000010110010010101110111100
Subkey 2  : 01101111001101110111010001111010011011010100010000110001
Subkey 3  : 00001100100010001011100001011001001010111011110011101001
Subkey 4  : 00110111011101000111101001101101010001000011000101101111
Subkey 5  : 10001000101110000101100100101011101111001110100100001100
Subkey 6  : 01110100011110100110110101000100001100010110111100110111
Subkey 7  : 10111000010110010010101110111100111010010000110010001000
Subkey 8  : 01111010011011010100010000110001011011110011011101110100
Subkey 9  : 01011001001010111011110011101001000011001000100010111000
Subkey 10 : 01101101010001000011000101101111001101110111010001111010
Subkey 11 : 00101011101111001110100100001100100010001011100001011001
Subkey 12 : 01000100001100010110111100110111011101000111101001101101
Subkey 13 : 10111100111010010000110010001000101110000101100100101011
Subkey 14 : 00110001011011110011011101110100011110100110110101000100
Subkey 15 : 11101001000011001000100010111000010110010010101110111100
Subkey 16 : 01101111001101110111010001111010011011010100010000110001

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ïùµF±müV]%?èëC;xÄ?¨©ÛÊ÷

Data padded with spaces : ïùµF±müV]%?èëC;xÄ?¨©ÛÊ÷[Padded with '0' spaces]

Data in ASCII           : 239,249,21,181,70,177,109,252,86,93,37,128,232,235,67,59,120,196,155,168,169,219,202,247,

Data in Binary          : 11101111,11111001,00010101,10110101,01000110,10110001,01101101,11111100,01010110,01011101,00100101,10000000,11101000,11101011,01000011,00111011,01111000,11000100,10011011,10101000,10101001,11011011,11001010,11110111,

Data in 64-bit Blocks   : 1110111111111001000101011011010101000110101100010110110111111100,0101011001011101001001011000000011101000111010110100001100111011,0111100011000100100110111010100010101001110110111100101011110111,



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011100101110110001101110101001100110011011000100011000001100110)

Plaintext Block: 1:                                      1110111111111001000101011011010101000110101100010110110111111100

!!!CBC: Previous Ciphertext:                             0011100101110110001101110101001100110011011000100011000001100110

!!!CBC: Current Block XOR with Previous Ciphertext:      1101011010001111001000101110011001110101110100110101110110011010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110100011110010001011100110

       - Right 32 Bits:            01110101110100110101110110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       01110101110100110101110110011010
          - S-Box Result:     11011001011000011001011000110100   [per every group of 4-bits]
          - Split Into Two:   1101100101100001 [L] 1001011000110100 [R]
          - Swap Halves:      10010110001101001101100101100001
          - Bit Inversion:    01101001110010110010011010011110
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     11101010111011000011111000100010

          - FUNCTION OUTPUT:  11101010111011000011111000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110100011110010001011100110

       - FUNCTION OUTPUT:          11101010111011000011111000100010

       - Left XOR FUNCTION OUTPUT: 00111100011000110001110011000100

       - Next Round Left 32 Bits:  01110101110100110101110110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100011000110001110011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101110100110101110110011010

       - Right 32 Bits:            00111100011000110001110011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       00111100011000110001110011000100
          - S-Box Result:     00010101000000011010010101010111   [per every group of 4-bits]
          - Split Into Two:   0001010100000001 [L] 1010010101010111 [R]
          - Swap Halves:      10100101010101110001010100000001
          - Bit Inversion:    01011010101010001110101011111110
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11100100011100111101000010111100

          - FUNCTION OUTPUT:  11100100011100111101000010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101110100110101110110011010

       - FUNCTION OUTPUT:          11100100011100111101000010111100

       - Left XOR FUNCTION OUTPUT: 10010001101000001000110100100110

       - Next Round Left 32 Bits:  00111100011000110001110011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001101000001000110100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100011000110001110011000100

       - Right 32 Bits:            10010001101000001000110100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       10010001101000001000110100100110
          - S-Box Result:     00111010010011110010011011100000   [per every group of 4-bits]
          - Split Into Two:   0011101001001111 [L] 0010011011100000 [R]
          - Swap Halves:      00100110111000000011101001001111
          - Bit Inversion:    11011001000111111100010110110000
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     01001000101001011010100011010110

          - FUNCTION OUTPUT:  01001000101001011010100011010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100011000110001110011000100

       - FUNCTION OUTPUT:          01001000101001011010100011010110

       - Left XOR FUNCTION OUTPUT: 01110100110001101011010000010010

       - Next Round Left 32 Bits:  10010001101000001000110100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100110001101011010000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001101000001000110100100110

       - Right 32 Bits:            01110100110001101011010000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       01110100110001101011010000010010
          - S-Box Result:     11010111010100001000011110101110   [per every group of 4-bits]
          - Split Into Two:   1101011101010000 [L] 1000011110101110 [R]
          - Swap Halves:      10000111101011101101011101010000
          - Bit Inversion:    01111000010100010010100010101111
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     00000110101010000111100010110000

          - FUNCTION OUTPUT:  00000110101010000111100010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001101000001000110100100110

       - FUNCTION OUTPUT:          00000110101010000111100010110000

       - Left XOR FUNCTION OUTPUT: 10010111000010001111010110010110

       - Next Round Left 32 Bits:  01110100110001101011010000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111000010001111010110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100110001101011010000010010

       - Right 32 Bits:            10010111000010001111010110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       10010111000010001111010110010110
          - S-Box Result:     00111101111100101011100100110000   [per every group of 4-bits]
          - Split Into Two:   0011110111110010 [L] 1011100100110000 [R]
          - Swap Halves:      10111001001100000011110111110010
          - Bit Inversion:    01000110110011111100001000001101
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     11001011101111100010000100010001

          - FUNCTION OUTPUT:  11001011101111100010000100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100110001101011010000010010

       - FUNCTION OUTPUT:          11001011101111100010000100010001

       - Left XOR FUNCTION OUTPUT: 10111111011110001001010100000011

       - Next Round Left 32 Bits:  10010111000010001111010110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111011110001001010100000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111000010001111010110010110

       - Right 32 Bits:            10111111011110001001010100000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       10111111011110001001010100000011
          - S-Box Result:     10001011110100100011100111110001   [per every group of 4-bits]
          - Split Into Two:   1000101111010010 [L] 0011100111110001 [R]
          - Swap Halves:      00111001111100011000101111010010
          - Bit Inversion:    11000110000011100111010000101101
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     10011011111001100101111011110110

          - FUNCTION OUTPUT:  10011011111001100101111011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111000010001111010110010110

       - FUNCTION OUTPUT:          10011011111001100101111011110110

       - Left XOR FUNCTION OUTPUT: 00001100111011101010101101100000

       - Next Round Left 32 Bits:  10111111011110001001010100000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100111011101010101101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111011110001001010100000011

       - Right 32 Bits:            00001100111011101010101101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       00001100111011101010101101100000
          - S-Box Result:     11110101110011000100100000001111   [per every group of 4-bits]
          - Split Into Two:   1111010111001100 [L] 0100100000001111 [R]
          - Swap Halves:      01001000000011111111010111001100
          - Bit Inversion:    10110111111100000000101000110011
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     01111110010101111011001001010111

          - FUNCTION OUTPUT:  01111110010101111011001001010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111011110001001010100000011

       - FUNCTION OUTPUT:          01111110010101111011001001010111

       - Left XOR FUNCTION OUTPUT: 11000001001011110010011101010100

       - Next Round Left 32 Bits:  00001100111011101010101101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001001011110010011101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100111011101010101101100000

       - Right 32 Bits:            11000001001011110010011101010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       11000001001011110010011101010100
          - S-Box Result:     01011010111010111110110110010111   [per every group of 4-bits]
          - Split Into Two:   0101101011101011 [L] 1110110110010111 [R]
          - Swap Halves:      11101101100101110101101011101011
          - Bit Inversion:    00010010011010001010010100010100
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     11110101001010111101100111001100

          - FUNCTION OUTPUT:  11110101001010111101100111001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100111011101010101101100000

       - FUNCTION OUTPUT:          11110101001010111101100111001100

       - Left XOR FUNCTION OUTPUT: 11111001110001010111001010101100

       - Next Round Left 32 Bits:  11000001001011110010011101010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001110001010111001010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001001011110010011101010100

       - Right 32 Bits:            11111001110001010111001010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       11111001110001010111001010101100
          - S-Box Result:     10110011010110011101111001000101   [per every group of 4-bits]
          - Split Into Two:   1011001101011001 [L] 1101111001000101 [R]
          - Swap Halves:      11011110010001011011001101011001
          - Bit Inversion:    00100001101110100100110010100110
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     11100100000001110000110110000010

          - FUNCTION OUTPUT:  11100100000001110000110110000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001001011110010011101010100

       - FUNCTION OUTPUT:          11100100000001110000110110000010

       - Left XOR FUNCTION OUTPUT: 00100101001010000010101011010110

       - Next Round Left 32 Bits:  11111001110001010111001010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101001010000010101011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001110001010111001010101100

       - Right 32 Bits:            00100101001010000010101011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       00100101001010000010101011010110
          - S-Box Result:     11101001111000101110010001100000   [per every group of 4-bits]
          - Split Into Two:   1110100111100010 [L] 1110010001100000 [R]
          - Swap Halves:      11100100011000001110100111100010
          - Bit Inversion:    00011011100111110001011000011101
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     10001001000001100111100001011000

          - FUNCTION OUTPUT:  10001001000001100111100001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001110001010111001010101100

       - FUNCTION OUTPUT:          10001001000001100111100001011000

       - Left XOR FUNCTION OUTPUT: 01110000110000110000101011110100

       - Next Round Left 32 Bits:  00100101001010000010101011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000110000110000101011110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101001010000010101011010110

       - Right 32 Bits:            01110000110000110000101011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       01110000110000110000101011110100
          - S-Box Result:     11011111010100011111010010110111   [per every group of 4-bits]
          - Split Into Two:   1101111101010001 [L] 1111010010110111 [R]
          - Swap Halves:      11110100101101111101111101010001
          - Bit Inversion:    00001011010010000010000010101110
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     10100100101010001010000110101000

          - FUNCTION OUTPUT:  10100100101010001010000110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101001010000010101011010110

       - FUNCTION OUTPUT:          10100100101010001010000110101000

       - Left XOR FUNCTION OUTPUT: 10000001100000001000101101111110

       - Next Round Left 32 Bits:  01110000110000110000101011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001100000001000101101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000110000110000101011110100

       - Right 32 Bits:            10000001100000001000101101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       10000001100000001000101101111110
          - S-Box Result:     00101010001011110010100011011100   [per every group of 4-bits]
          - Split Into Two:   0010101000101111 [L] 0010100011011100 [R]
          - Swap Halves:      00101000110111000010101000101111
          - Bit Inversion:    11010111001000111101010111010000
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     11001011110000001010011101011110

          - FUNCTION OUTPUT:  11001011110000001010011101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000110000110000101011110100

       - FUNCTION OUTPUT:          11001011110000001010011101011110

       - Left XOR FUNCTION OUTPUT: 10111011000000111010110110101010

       - Next Round Left 32 Bits:  10000001100000001000101101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000000111010110110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001100000001000101101111110

       - Right 32 Bits:            10111011000000111010110110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       10111011000000111010110110101010
          - S-Box Result:     10001000111100010100011001000100   [per every group of 4-bits]
          - Split Into Two:   1000100011110001 [L] 0100011001000100 [R]
          - Swap Halves:      01000110010001001000100011110001
          - Bit Inversion:    10111001101110110111011100001110
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     01101100100111111101010100011001

          - FUNCTION OUTPUT:  01101100100111111101010100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001100000001000101101111110

       - FUNCTION OUTPUT:          01101100100111111101010100011001

       - Left XOR FUNCTION OUTPUT: 11101101000111110101111001100111

       - Next Round Left 32 Bits:  10111011000000111010110110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101000111110101111001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000000111010110110101010

       - Right 32 Bits:            11101101000111110101111001100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       11101101000111110101111001100111
          - S-Box Result:     11000110101010111001110000001101   [per every group of 4-bits]
          - Split Into Two:   1100011010101011 [L] 1001110000001101 [R]
          - Swap Halves:      10011100000011011100011010101011
          - Bit Inversion:    01100011111100100011100101010100
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     00100100011010010000111100001100

          - FUNCTION OUTPUT:  00100100011010010000111100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000000111010110110101010

       - FUNCTION OUTPUT:          00100100011010010000111100001100

       - Left XOR FUNCTION OUTPUT: 10011111011010101010001010100110

       - Next Round Left 32 Bits:  11101101000111110101111001100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111011010101010001010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101000111110101111001100111

       - Right 32 Bits:            10011111011010101010001010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       10011111011010101010001010100110
          - S-Box Result:     00111011000001000100111001000000   [per every group of 4-bits]
          - Split Into Two:   0011101100000100 [L] 0100111001000000 [R]
          - Swap Halves:      01001110010000000011101100000100
          - Bit Inversion:    10110001101111111100010011111011
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00110010100110001101110001000111

          - FUNCTION OUTPUT:  00110010100110001101110001000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101000111110101111001100111

       - FUNCTION OUTPUT:          00110010100110001101110001000111

       - Left XOR FUNCTION OUTPUT: 11011111100001111000001000100000

       - Next Round Left 32 Bits:  10011111011010101010001010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111100001111000001000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111011010101010001010100110

       - Right 32 Bits:            11011111100001111000001000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11011111100001111000001000100000
          - S-Box Result:     01101011001011010010111011101111   [per every group of 4-bits]
          - Split Into Two:   0110101100101101 [L] 0010111011101111 [R]
          - Swap Halves:      00101110111011110110101100101101
          - Bit Inversion:    11010001000100001001010011010010
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     01101111110010111010111010010000

          - FUNCTION OUTPUT:  01101111110010111010111010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111011010101010001010100110

       - FUNCTION OUTPUT:          01101111110010111010111010010000

       - Left XOR FUNCTION OUTPUT: 11110000101000010000110000110110

       - Next Round Left 32 Bits:  11011111100001111000001000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000101000010000110000110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111000010100001000011000011011011011111100001111000001000100000

 > Processed Block:     1111000010100001000011000011011011011111100001111000001000100000



Plaintext Block: 2:                                      0101011001011101001001011000000011101000111010110100001100111011

!!!CBC: Previous Ciphertext:                             1111000010100001000011000011011011011111100001111000001000100000

!!!CBC: Current Block XOR with Previous Ciphertext:      1010011011111100001010011011011000110111011011001100000100011011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110111111000010100110110110

       - Right 32 Bits:            00110111011011001100000100011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       00110111011011001100000100011011
          - S-Box Result:     00011101000001010101101010101000   [per every group of 4-bits]
          - Split Into Two:   0001110100000101 [L] 0101101010101000 [R]
          - Swap Halves:      01011010101010000001110100000101
          - Bit Inversion:    10100101010101111110001011111010
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00100110011100001111101001000110

          - FUNCTION OUTPUT:  00100110011100001111101001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110111111000010100110110110

       - FUNCTION OUTPUT:          00100110011100001111101001000110

       - Left XOR FUNCTION OUTPUT: 10000000100011001101001111110000

       - Next Round Left 32 Bits:  00110111011011001100000100011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000100011001101001111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111011011001100000100011011

       - Right 32 Bits:            10000000100011001101001111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       10000000100011001101001111110000
          - S-Box Result:     00101111001001010110000110111111   [per every group of 4-bits]
          - Split Into Two:   0010111100100101 [L] 0110000110111111 [R]
          - Swap Halves:      01100001101111110010111100100101
          - Bit Inversion:    10011110010000001101000011011010
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00100000100110111110101010011000

          - FUNCTION OUTPUT:  00100000100110111110101010011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111011011001100000100011011

       - FUNCTION OUTPUT:          00100000100110111110101010011000

       - Left XOR FUNCTION OUTPUT: 00010111111101110010101110000011

       - Next Round Left 32 Bits:  10000000100011001101001111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111111101110010101110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000100011001101001111110000

       - Right 32 Bits:            00010111111101110010101110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       00010111111101110010101110000011
          - S-Box Result:     10101101101111011110100000100001   [per every group of 4-bits]
          - Split Into Two:   1010110110111101 [L] 1110100000100001 [R]
          - Swap Halves:      11101000001000011010110110111101
          - Bit Inversion:    00010111110111100101001001000010
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     10000110011001000011111100100100

          - FUNCTION OUTPUT:  10000110011001000011111100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000100011001101001111110000

       - FUNCTION OUTPUT:          10000110011001000011111100100100

       - Left XOR FUNCTION OUTPUT: 00000110111010001110110011010100

       - Next Round Left 32 Bits:  00010111111101110010101110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110111010001110110011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111111101110010101110000011

       - Right 32 Bits:            00000110111010001110110011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       00000110111010001110110011010100
          - S-Box Result:     11110000110000101100010101100111   [per every group of 4-bits]
          - Split Into Two:   1111000011000010 [L] 1100010101100111 [R]
          - Swap Halves:      11000101011001111111000011000010
          - Bit Inversion:    00111010100110000000111100111101
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     01000100011000010101111100100010

          - FUNCTION OUTPUT:  01000100011000010101111100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111111101110010101110000011

       - FUNCTION OUTPUT:          01000100011000010101111100100010

       - Left XOR FUNCTION OUTPUT: 01010011100101100111010010100001

       - Next Round Left 32 Bits:  00000110111010001110110011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011100101100111010010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110111010001110110011010100

       - Right 32 Bits:            01010011100101100111010010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       01010011100101100111010010100001
          - S-Box Result:     10010001001100001101011101001010   [per every group of 4-bits]
          - Split Into Two:   1001000100110000 [L] 1101011101001010 [R]
          - Swap Halves:      11010111010010101001000100110000
          - Bit Inversion:    00101000101101010110111011001111
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     10100101110001001000110111010011

          - FUNCTION OUTPUT:  10100101110001001000110111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110111010001110110011010100

       - FUNCTION OUTPUT:          10100101110001001000110111010011

       - Left XOR FUNCTION OUTPUT: 10100011001011000110000100000111

       - Next Round Left 32 Bits:  01010011100101100111010010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011001011000110000100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011100101100111010010100001

       - Right 32 Bits:            10100011001011000110000100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       10100011001011000110000100000111
          - S-Box Result:     01000001111001010000101011111101   [per every group of 4-bits]
          - Split Into Two:   0100000111100101 [L] 0000101011111101 [R]
          - Swap Halves:      00001010111111010100000111100101
          - Bit Inversion:    11110101000000101011111000011010
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     10101000111010101001010011000001

          - FUNCTION OUTPUT:  10101000111010101001010011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011100101100111010010100001

       - FUNCTION OUTPUT:          10101000111010101001010011000001

       - Left XOR FUNCTION OUTPUT: 11111011011111001110000001100000

       - Next Round Left 32 Bits:  10100011001011000110000100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011011111001110000001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011001011000110000100000111

       - Right 32 Bits:            11111011011111001110000001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       11111011011111001110000001100000
          - S-Box Result:     10111000110101011100111100001111   [per every group of 4-bits]
          - Split Into Two:   1011100011010101 [L] 1100111100001111 [R]
          - Swap Halves:      11001111000011111011100011010101
          - Bit Inversion:    00110000111100000100011100101010
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     11111001010101111111111101001110

          - FUNCTION OUTPUT:  11111001010101111111111101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011001011000110000100000111

       - FUNCTION OUTPUT:          11111001010101111111111101001110

       - Left XOR FUNCTION OUTPUT: 01011010011110111001111001001001

       - Next Round Left 32 Bits:  11111011011111001110000001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010011110111001111001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011011111001110000001100000

       - Right 32 Bits:            01011010011110111001111001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       01011010011110111001111001001001
          - S-Box Result:     10010100110110000011110001110011   [per every group of 4-bits]
          - Split Into Two:   1001010011011000 [L] 0011110001110011 [R]
          - Swap Halves:      00111100011100111001010011011000
          - Bit Inversion:    11000011100011000110101100100111
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00100100110011110001011111111111

          - FUNCTION OUTPUT:  00100100110011110001011111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011011111001110000001100000

       - FUNCTION OUTPUT:          00100100110011110001011111111111

       - Left XOR FUNCTION OUTPUT: 11011111101100111111011110011111

       - Next Round Left 32 Bits:  01011010011110111001111001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111101100111111011110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010011110111001111001001001

       - Right 32 Bits:            11011111101100111111011110011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       11011111101100111111011110011111
          - S-Box Result:     01101011100000011011110100111011   [per every group of 4-bits]
          - Split Into Two:   0110101110000001 [L] 1011110100111011 [R]
          - Swap Halves:      10111101001110110110101110000001
          - Bit Inversion:    01000010110001001001010001111110
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     10000111011110011101010101011010

          - FUNCTION OUTPUT:  10000111011110011101010101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010011110111001111001001001

       - FUNCTION OUTPUT:          10000111011110011101010101011010

       - Left XOR FUNCTION OUTPUT: 11011101000000100100101100010011

       - Next Round Left 32 Bits:  11011111101100111111011110011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101000000100100101100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111101100111111011110011111

       - Right 32 Bits:            11011101000000100100101100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       11011101000000100100101100010011
          - S-Box Result:     01100110111111100111100010100001   [per every group of 4-bits]
          - Split Into Two:   0110011011111110 [L] 0111100010100001 [R]
          - Swap Halves:      01111000101000010110011011111110
          - Bit Inversion:    10000111010111101001100100000001
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     00010101110001111111011101000100

          - FUNCTION OUTPUT:  00010101110001111111011101000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111101100111111011110011111

       - FUNCTION OUTPUT:          00010101110001111111011101000100

       - Left XOR FUNCTION OUTPUT: 11001010011101000000000011011011

       - Next Round Left 32 Bits:  11011101000000100100101100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010011101000000000011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101000000100100101100010011

       - Right 32 Bits:            11001010011101000000000011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       11001010011101000000000011011011
          - S-Box Result:     01010100110101111111111101101000   [per every group of 4-bits]
          - Split Into Two:   0101010011010111 [L] 1111111101101000 [R]
          - Swap Halves:      11111111011010000101010011010111
          - Bit Inversion:    00000000100101111010101100101000
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     10101111011101110010101000101110

          - FUNCTION OUTPUT:  10101111011101110010101000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101000000100100101100010011

       - FUNCTION OUTPUT:          10101111011101110010101000101110

       - Left XOR FUNCTION OUTPUT: 01110010011101010110000100111101

       - Next Round Left 32 Bits:  11001010011101000000000011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010011101010110000100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010011101000000000011011011

       - Right 32 Bits:            01110010011101010110000100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       01110010011101010110000100111101
          - S-Box Result:     11011110110110010000101000010110   [per every group of 4-bits]
          - Split Into Two:   1101111011011001 [L] 0000101000010110 [R]
          - Swap Halves:      00001010000101101101111011011001
          - Bit Inversion:    11110101111010010010000100100110
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     11101001000010100101001110101000

          - FUNCTION OUTPUT:  11101001000010100101001110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010011101000000000011011011

       - FUNCTION OUTPUT:          11101001000010100101001110101000

       - Left XOR FUNCTION OUTPUT: 00100011011111100101001101110011

       - Next Round Left 32 Bits:  01110010011101010110000100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011011111100101001101110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010011101010110000100111101

       - Right 32 Bits:            00100011011111100101001101110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       00100011011111100101001101110011
          - S-Box Result:     11100001110111001001000111010001   [per every group of 4-bits]
          - Split Into Two:   1110000111011100 [L] 1001000111010001 [R]
          - Swap Halves:      10010001110100011110000111011100
          - Bit Inversion:    01101110001011100001111000100011
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     10111011000010101011110000110100

          - FUNCTION OUTPUT:  10111011000010101011110000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010011101010110000100111101

       - FUNCTION OUTPUT:          10111011000010101011110000110100

       - Left XOR FUNCTION OUTPUT: 11001001011111111101110100001001

       - Next Round Left 32 Bits:  00100011011111100101001101110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001011111111101110100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011011111100101001101110011

       - Right 32 Bits:            11001001011111111101110100001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       11001001011111111101110100001001
          - S-Box Result:     01010011110110110110011011110011   [per every group of 4-bits]
          - Split Into Two:   0101001111011011 [L] 0110011011110011 [R]
          - Swap Halves:      01100110111100110101001111011011
          - Bit Inversion:    10011001000011001010110000100100
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     11011110100101111001101001111100

          - FUNCTION OUTPUT:  11011110100101111001101001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011011111100101001101110011

       - FUNCTION OUTPUT:          11011110100101111001101001111100

       - Left XOR FUNCTION OUTPUT: 11111101111010011100100100001111

       - Next Round Left 32 Bits:  11001001011111111101110100001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101111010011100100100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001011111111101110100001001

       - Right 32 Bits:            11111101111010011100100100001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       11111101111010011100100100001111
          - S-Box Result:     10110110110000110101001111111011   [per every group of 4-bits]
          - Split Into Two:   1011011011000011 [L] 0101001111111011 [R]
          - Swap Halves:      01010011111110111011011011000011
          - Bit Inversion:    10101100000001000100100100111100
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00101111001000110101000110000000

          - FUNCTION OUTPUT:  00101111001000110101000110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001011111111101110100001001

       - FUNCTION OUTPUT:          00101111001000110101000110000000

       - Left XOR FUNCTION OUTPUT: 11100110010111001000110010001001

       - Next Round Left 32 Bits:  11111101111010011100100100001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110010111001000110010001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101111010011100100100001111

       - Right 32 Bits:            11100110010111001000110010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11100110010111001000110010001001
          - S-Box Result:     11000000100101010010010100100011   [per every group of 4-bits]
          - Split Into Two:   1100000010010101 [L] 0010010100100011 [R]
          - Swap Halves:      00100101001000111100000010010101
          - Bit Inversion:    11011010110111000011111101101010
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     01100100000001110000010100101000

          - FUNCTION OUTPUT:  01100100000001110000010100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101111010011100100100001111

       - FUNCTION OUTPUT:          01100100000001110000010100101000

       - Left XOR FUNCTION OUTPUT: 10011001111011101100110000100111

       - Next Round Left 32 Bits:  11100110010111001000110010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011001111011101100110000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001100111101110110011000010011111100110010111001000110010001001

 > Processed Block:     1001100111101110110011000010011111100110010111001000110010001001



Plaintext Block: 3:                                      0111100011000100100110111010100010101001110110111100101011110111

!!!CBC: Previous Ciphertext:                             1001100111101110110011000010011111100110010111001000110010001001

!!!CBC: Current Block XOR with Previous Ciphertext:      1110000100101010010101111000111101001111100001110100011001111110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001001010100101011110001111

       - Right 32 Bits:            01001111100001110100011001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       01001111100001110100011001111110
          - S-Box Result:     01111011001011010111000011011100   [per every group of 4-bits]
          - Split Into Two:   0111101100101101 [L] 0111000011011100 [R]
          - Swap Halves:      01110000110111000111101100101101
          - Bit Inversion:    10001111001000111000010011010010
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00001100000001001001110001101110

          - FUNCTION OUTPUT:  00001100000001001001110001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001001010100101011110001111

       - FUNCTION OUTPUT:          00001100000001001001110001101110

       - Left XOR FUNCTION OUTPUT: 11101101001011101100101111100001

       - Next Round Left 32 Bits:  01001111100001110100011001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101001011101100101111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111100001110100011001111110

       - Right 32 Bits:            11101101001011101100101111100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       11101101001011101100101111100001
          - S-Box Result:     11000110111011000101100011001010   [per every group of 4-bits]
          - Split Into Two:   1100011011101100 [L] 0101100011001010 [R]
          - Swap Halves:      01011000110010101100011011101100
          - Bit Inversion:    10100111001101010011100100010011
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00011001111011100000001101010001

          - FUNCTION OUTPUT:  00011001111011100000001101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111100001110100011001111110

       - FUNCTION OUTPUT:          00011001111011100000001101010001

       - Left XOR FUNCTION OUTPUT: 01010110011010010100010100101111

       - Next Round Left 32 Bits:  11101101001011101100101111100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110011010010100010100101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101001011101100101111100001

       - Right 32 Bits:            01010110011010010100010100101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       01010110011010010100010100101111
          - S-Box Result:     10010000000000110111100111101011   [per every group of 4-bits]
          - Split Into Two:   1001000000000011 [L] 0111100111101011 [R]
          - Swap Halves:      01111001111010111001000000000011
          - Bit Inversion:    10000110000101000110111111111100
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     00010111101011100000001010011010

          - FUNCTION OUTPUT:  00010111101011100000001010011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101001011101100101111100001

       - FUNCTION OUTPUT:          00010111101011100000001010011010

       - Left XOR FUNCTION OUTPUT: 11111010100000001100100101111011

       - Next Round Left 32 Bits:  01010110011010010100010100101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010100000001100100101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110011010010100010100101111

       - Right 32 Bits:            11111010100000001100100101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       11111010100000001100100101111011
          - S-Box Result:     10110100001011110101001111011000   [per every group of 4-bits]
          - Split Into Two:   1011010000101111 [L] 0101001111011000 [R]
          - Swap Halves:      01010011110110001011010000101111
          - Bit Inversion:    10101100001001110100101111010000
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     11010010110111100001101111001111

          - FUNCTION OUTPUT:  11010010110111100001101111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110011010010100010100101111

       - FUNCTION OUTPUT:          11010010110111100001101111001111

       - Left XOR FUNCTION OUTPUT: 10000100101101110101111011100000

       - Next Round Left 32 Bits:  11111010100000001100100101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100101101110101111011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010100000001100100101111011

       - Right 32 Bits:            10000100101101110101111011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       10000100101101110101111011100000
          - S-Box Result:     00100111100011011001110011001111   [per every group of 4-bits]
          - Split Into Two:   0010011110001101 [L] 1001110011001111 [R]
          - Swap Halves:      10011100110011110010011110001101
          - Bit Inversion:    01100011001100001101100001110010
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     11101110010000010011101101101110

          - FUNCTION OUTPUT:  11101110010000010011101101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010100000001100100101111011

       - FUNCTION OUTPUT:          11101110010000010011101101101110

       - Left XOR FUNCTION OUTPUT: 00010100110000011111001000010101

       - Next Round Left 32 Bits:  10000100101101110101111011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100110000011111001000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100101101110101111011100000

       - Right 32 Bits:            00010100110000011111001000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       00010100110000011111001000010101
          - S-Box Result:     10100111010110101011111010101001   [per every group of 4-bits]
          - Split Into Two:   1010011101011010 [L] 1011111010101001 [R]
          - Swap Halves:      10111110101010011010011101011010
          - Bit Inversion:    01000001010101100101100010100101
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     00011100101111100111001001111110

          - FUNCTION OUTPUT:  00011100101111100111001001111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100101101110101111011100000

       - FUNCTION OUTPUT:          00011100101111100111001001111110

       - Left XOR FUNCTION OUTPUT: 10011000000010010010110010011110

       - Next Round Left 32 Bits:  00010100110000011111001000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000000010010010110010011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100110000011111001000010101

       - Right 32 Bits:            10011000000010010010110010011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       10011000000010010010110010011110
          - S-Box Result:     00110010111100111110010100111100   [per every group of 4-bits]
          - Split Into Two:   0011001011110011 [L] 1110010100111100 [R]
          - Swap Halves:      11100101001111000011001011110011
          - Bit Inversion:    00011010110000111100110100001100
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     11010011011001000111010101101000

          - FUNCTION OUTPUT:  11010011011001000111010101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100110000011111001000010101

       - FUNCTION OUTPUT:          11010011011001000111010101101000

       - Left XOR FUNCTION OUTPUT: 11000111101001011000011101111101

       - Next Round Left 32 Bits:  10011000000010010010110010011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111101001011000011101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000000010010010110010011110

       - Right 32 Bits:            11000111101001011000011101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       11000111101001011000011101111101
          - S-Box Result:     01011101010010010010110111010110   [per every group of 4-bits]
          - Split Into Two:   0101110101001001 [L] 0010110111010110 [R]
          - Swap Halves:      00101101110101100101110101001001
          - Bit Inversion:    11010010001010011010001010110110
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00110101011010101101111001101110

          - FUNCTION OUTPUT:  00110101011010101101111001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000000010010010110010011110

       - FUNCTION OUTPUT:          00110101011010101101111001101110

       - Left XOR FUNCTION OUTPUT: 10101101011000111111001011110000

       - Next Round Left 32 Bits:  11000111101001011000011101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101011000111111001011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111101001011000011101111101

       - Right 32 Bits:            10101101011000111111001011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       10101101011000111111001011110000
          - S-Box Result:     01000110000000011011111010111111   [per every group of 4-bits]
          - Split Into Two:   0100011000000001 [L] 1011111010111111 [R]
          - Swap Halves:      10111110101111110100011000000001
          - Bit Inversion:    01000001010000001011100111111110
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     10000100111111011111100011011010

          - FUNCTION OUTPUT:  10000100111111011111100011011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111101001011000011101111101

       - FUNCTION OUTPUT:          10000100111111011111100011011010

       - Left XOR FUNCTION OUTPUT: 01000011010110000111111110100111

       - Next Round Left 32 Bits:  10101101011000111111001011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011010110000111111110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101011000111111001011110000

       - Right 32 Bits:            01000011010110000111111110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       01000011010110000111111110100111
          - S-Box Result:     01110001100100101101101101001101   [per every group of 4-bits]
          - Split Into Two:   0111000110010010 [L] 1101101101001101 [R]
          - Swap Halves:      11011011010011010111000110010010
          - Bit Inversion:    00100100101100101000111001101101
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     10110110001010111110000000101000

          - FUNCTION OUTPUT:  10110110001010111110000000101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101011000111111001011110000

       - FUNCTION OUTPUT:          10110110001010111110000000101000

       - Left XOR FUNCTION OUTPUT: 00011011010010000001001011011000

       - Next Round Left 32 Bits:  01000011010110000111111110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011010010000001001011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011010110000111111110100111

       - Right 32 Bits:            00011011010010000001001011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       00011011010010000001001011011000
          - S-Box Result:     10101000011100101010111001100010   [per every group of 4-bits]
          - Split Into Two:   1010100001110010 [L] 1010111001100010 [R]
          - Swap Halves:      10101110011000101010100001110010
          - Bit Inversion:    01010001100111010101011110001101
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     11111110011111011101011010001011

          - FUNCTION OUTPUT:  11111110011111011101011010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011010110000111111110100111

       - FUNCTION OUTPUT:          11111110011111011101011010001011

       - Left XOR FUNCTION OUTPUT: 10111101001001011010100100101100

       - Next Round Left 32 Bits:  00011011010010000001001011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101001001011010100100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011010010000001001011011000

       - Right 32 Bits:            10111101001001011010100100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       10111101001001011010100100101100
          - S-Box Result:     10000110111010010100001111100101   [per every group of 4-bits]
          - Split Into Two:   1000011011101001 [L] 0100001111100101 [R]
          - Swap Halves:      01000011111001011000011011101001
          - Bit Inversion:    10111100000110100111100100010110
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     10100000111110010000101110011000

          - FUNCTION OUTPUT:  10100000111110010000101110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011010010000001001011011000

       - FUNCTION OUTPUT:          10100000111110010000101110011000

       - Left XOR FUNCTION OUTPUT: 10111011101100010001100101000000

       - Next Round Left 32 Bits:  10111101001001011010100100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011101100010001100101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101001001011010100100101100

       - Right 32 Bits:            10111011101100010001100101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       10111011101100010001100101000000
          - S-Box Result:     10001000100010101010001101111111   [per every group of 4-bits]
          - Split Into Two:   1000100010001010 [L] 1010001101111111 [R]
          - Swap Halves:      10100011011111111000100010001010
          - Bit Inversion:    01011100100000000111011101110101
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     10001001101001001101010101100010

          - FUNCTION OUTPUT:  10001001101001001101010101100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101001001011010100100101100

       - FUNCTION OUTPUT:          10001001101001001101010101100010

       - Left XOR FUNCTION OUTPUT: 00110100100000010111110001001110

       - Next Round Left 32 Bits:  10111011101100010001100101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100100000010111110001001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011101100010001100101000000

       - Right 32 Bits:            00110100100000010111110001001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       00110100100000010111110001001110
          - S-Box Result:     00010111001010101101010101111100   [per every group of 4-bits]
          - Split Into Two:   0001011100101010 [L] 1101010101111100 [R]
          - Swap Halves:      11010101011111000001011100101010
          - Bit Inversion:    00101010100000111110100011010101
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     01101101000110001101111010001101

          - FUNCTION OUTPUT:  01101101000110001101111010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011101100010001100101000000

       - FUNCTION OUTPUT:          01101101000110001101111010001101

       - Left XOR FUNCTION OUTPUT: 11010110101010011100011111001101

       - Next Round Left 32 Bits:  00110100100000010111110001001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110101010011100011111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100100000010111110001001110

       - Right 32 Bits:            11010110101010011100011111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       11010110101010011100011111001101
          - S-Box Result:     01100000010000110101110101010110   [per every group of 4-bits]
          - Split Into Two:   0110000001000011 [L] 0101110101010110 [R]
          - Swap Halves:      01011101010101100110000001000011
          - Bit Inversion:    10100010101010011001111110111100
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00100001100011101000011100000000

          - FUNCTION OUTPUT:  00100001100011101000011100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100100000010111110001001110

       - FUNCTION OUTPUT:          00100001100011101000011100000000

       - Left XOR FUNCTION OUTPUT: 00010101000011111111101101001110

       - Next Round Left 32 Bits:  11010110101010011100011111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101000011111111101101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110101010011100011111001101

       - Right 32 Bits:            00010101000011111111101101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       00010101000011111111101101001110
          - S-Box Result:     10101001111110111011100001111100   [per every group of 4-bits]
          - Split Into Two:   1010100111111011 [L] 1011100001111100 [R]
          - Swap Halves:      10111000011111001010100111111011
          - Bit Inversion:    01000111100000110101011000000100
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11111001010110000110110001000110

          - FUNCTION OUTPUT:  11111001010110000110110001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110101010011100011111001101

       - FUNCTION OUTPUT:          11111001010110000110110001000110

       - Left XOR FUNCTION OUTPUT: 00101111111100011010101110001011

       - Next Round Left 32 Bits:  00010101000011111111101101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111111100011010101110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010111111110001101010111000101100010101000011111111101101001110

 > Processed Block:     0010111111110001101010111000101100010101000011111111101101001110


FINAL PROCESSED DATA BLOCKS: 1111000010100001000011000011011011011111100001111000001000100000,1001100111101110110011000010011111100110010111001000110010001001,0010111111110001101010111000101100010101000011111111101101001110,

BLOCKS IN ASCII:             ð¡6ß?? ?îÌ'æ\??/ñ«?ûN

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 0UWh2Td
In Binary:  00110000010101010101011101101000001100100101010001100100

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 11111010101010101000100101111100110110101011100110111100
Subkey 2  : 01010101010101110110100000110010010101000110010000110000
Subkey 3  : 10101010100010010111110011011010101110011011110011111010
Subkey 4  : 01010111011010000011001001010100011001000011000001010101
Subkey 5  : 10001001011111001101101010111001101111001111101010101010
Subkey 6  : 01101000001100100101010001100100001100000101010101010111
Subkey 7  : 01111100110110101011100110111100111110101010101010001001
Subkey 8  : 00110010010101000110010000110000010101010101011101101000
Subkey 9  : 11011010101110011011110011111010101010101000100101111100
Subkey 10 : 01010100011001000011000001010101010101110110100000110010
Subkey 11 : 10111001101111001111101010101010100010010111110011011010
Subkey 12 : 01100100001100000101010101010111011010000011001001010100
Subkey 13 : 10111100111110101010101010001001011111001101101010111001
Subkey 14 : 00110000010101010101011101101000001100100101010001100100
Subkey 15 : 11111010101010101000100101111100110110101011100110111100
Subkey 16 : 01010101010101110110100000110010010101000110010000110000

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ð¡6ß?? ?îÌ'æ\??/ñ«?ûN

Data padded with spaces : ð¡6ß?? ?îÌ'æ\??/ñ«?ûN[Padded with '0' spaces]

Data in ASCII           : 240,161,12,54,223,135,130,32,153,238,204,39,230,92,140,137,47,241,171,139,21,15,251,78,

Data in Binary          : 11110000,10100001,00001100,00110110,11011111,10000111,10000010,00100000,10011001,11101110,11001100,00100111,11100110,01011100,10001100,10001001,00101111,11110001,10101011,10001011,00010101,00001111,11111011,01001110,

Data in 64-bit Blocks   : 1111000010100001000011000011011011011111100001111000001000100000,1001100111101110110011000010011111100110010111001000110010001001,0010111111110001101010111000101100010101000011111111101101001110,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011100101110110001101110101001100110011011000100011000001100110)

Ciphertext Block 1:                                      1111000010100001000011000011011011011111100001111000001000100000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000101000010000110000110110

       - Right 32 Bits:            11011111100001111000001000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11011111100001111000001000100000
          - S-Box Result:     01101011001011010010111011101111   [per every group of 4-bits]
          - Split Into Two:   0110101100101101 [L] 0010111011101111 [R]
          - Swap Halves:      00101110111011110110101100101101
          - Bit Inversion:    11010001000100001001010011010010
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10001011111100111000011010010010

          - FUNCTION OUTPUT:  10001011111100111000011010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000101000010000110000110110

       - FUNCTION OUTPUT:          10001011111100111000011010010010

       - Left XOR FUNCTION OUTPUT: 01111011010100101000101010100100

       - Next Round Left 32 Bits:  11011111100001111000001000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011010100101000101010100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111100001111000001000100000

       - Right 32 Bits:            01111011010100101000101010100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       01111011010100101000101010100100
          - S-Box Result:     11011000100111100010010001000111   [per every group of 4-bits]
          - Split Into Two:   1101100010011110 [L] 0010010001000111 [R]
          - Swap Halves:      00100100010001111101100010011110
          - Bit Inversion:    11011011101110000010011101100001
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     00111110100100111011001001011101

          - FUNCTION OUTPUT:  00111110100100111011001001011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111100001111000001000100000

       - FUNCTION OUTPUT:          00111110100100111011001001011101

       - Left XOR FUNCTION OUTPUT: 11100001000101000011000001111101

       - Next Round Left 32 Bits:  01111011010100101000101010100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001000101000011000001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011010100101000101010100100

       - Right 32 Bits:            11100001000101000011000001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       11100001000101000011000001111101
          - S-Box Result:     11001010101001110001111111010110   [per every group of 4-bits]
          - Split Into Two:   1100101010100111 [L] 0001111111010110 [R]
          - Swap Halves:      00011111110101101100101010100111
          - Bit Inversion:    11100000001010010011010101011000
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     10101010011100000001001100010000

          - FUNCTION OUTPUT:  10101010011100000001001100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011010100101000101010100100

       - FUNCTION OUTPUT:          10101010011100000001001100010000

       - Left XOR FUNCTION OUTPUT: 11010001001000101001100110110100

       - Next Round Left 32 Bits:  11100001000101000011000001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001001000101001100110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001000101000011000001111101

       - Right 32 Bits:            11010001001000101001100110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       11010001001000101001100110110100
          - S-Box Result:     01101010111011100011001110000111   [per every group of 4-bits]
          - Split Into Two:   0110101011101110 [L] 0011001110000111 [R]
          - Swap Halves:      00110011100001110110101011101110
          - Bit Inversion:    11001100011110001001010100010001
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     00010001110111001110011010110111

          - FUNCTION OUTPUT:  00010001110111001110011010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001000101000011000001111101

       - FUNCTION OUTPUT:          00010001110111001110011010110111

       - Left XOR FUNCTION OUTPUT: 11110000110010001101011011001010

       - Next Round Left 32 Bits:  11010001001000101001100110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000110010001101011011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001001000101001100110110100

       - Right 32 Bits:            11110000110010001101011011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11110000110010001101011011001010
          - S-Box Result:     10111111010100100110000001010100   [per every group of 4-bits]
          - Split Into Two:   1011111101010010 [L] 0110000001010100 [R]
          - Swap Halves:      01100000010101001011111101010010
          - Bit Inversion:    10011111101010110100000010101101
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     10000011111100010011000000100101

          - FUNCTION OUTPUT:  10000011111100010011000000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001001000101001100110110100

       - FUNCTION OUTPUT:          10000011111100010011000000100101

       - Left XOR FUNCTION OUTPUT: 01010010110100111010100110010001

       - Next Round Left 32 Bits:  11110000110010001101011011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010110100111010100110010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000110010001101011011001010

       - Right 32 Bits:            01010010110100111010100110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       01010010110100111010100110010001
          - S-Box Result:     10011110011000010100001100111010   [per every group of 4-bits]
          - Split Into Two:   1001111001100001 [L] 0100001100111010 [R]
          - Swap Halves:      01000011001110101001111001100001
          - Bit Inversion:    10111100110001010110000110011110
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     01110011001100001110101111111011

          - FUNCTION OUTPUT:  01110011001100001110101111111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000110010001101011011001010

       - FUNCTION OUTPUT:          01110011001100001110101111111011

       - Left XOR FUNCTION OUTPUT: 10000011111110000011110100110001

       - Next Round Left 32 Bits:  01010010110100111010100110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011111110000011110100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010110100111010100110010001

       - Right 32 Bits:            10000011111110000011110100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       10000011111110000011110100110001
          - S-Box Result:     00100001101100100001011000011010   [per every group of 4-bits]
          - Split Into Two:   0010000110110010 [L] 0001011000011010 [R]
          - Swap Halves:      00010110000110100010000110110010
          - Bit Inversion:    11101001111001011101111001001101
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     10111111011111111000000001001100

          - FUNCTION OUTPUT:  10111111011111111000000001001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010110100111010100110010001

       - FUNCTION OUTPUT:          10111111011111111000000001001100

       - Left XOR FUNCTION OUTPUT: 11101101101011000010100111011101

       - Next Round Left 32 Bits:  10000011111110000011110100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101101011000010100111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011111110000011110100110001

       - Right 32 Bits:            11101101101011000010100111011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       11101101101011000010100111011101
          - S-Box Result:     11000110010001011110001101100110   [per every group of 4-bits]
          - Split Into Two:   1100011001000101 [L] 1110001101100110 [R]
          - Swap Halves:      11100011011001101100011001000101
          - Bit Inversion:    00011100100110010011100110111010
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     11110001001001101001110010100110

          - FUNCTION OUTPUT:  11110001001001101001110010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011111110000011110100110001

       - FUNCTION OUTPUT:          11110001001001101001110010100110

       - Left XOR FUNCTION OUTPUT: 01110010110111101010000110010111

       - Next Round Left 32 Bits:  11101101101011000010100111011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010110111101010000110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101101011000010100111011101

       - Right 32 Bits:            01110010110111101010000110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       01110010110111101010000110010111
          - S-Box Result:     11011110011011000100101000111101   [per every group of 4-bits]
          - Split Into Two:   1101111001101100 [L] 0100101000111101 [R]
          - Swap Halves:      01001010001111011101111001101100
          - Bit Inversion:    10110101110000100010000110010011
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     11011111000000010011101101000111

          - FUNCTION OUTPUT:  11011111000000010011101101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101101011000010100111011101

       - FUNCTION OUTPUT:          11011111000000010011101101000111

       - Left XOR FUNCTION OUTPUT: 00110010101011010001001010011010

       - Next Round Left 32 Bits:  01110010110111101010000110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010101011010001001010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010110111101010000110010111

       - Right 32 Bits:            00110010101011010001001010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       00110010101011010001001010011010
          - S-Box Result:     00011110010001101010111000110100   [per every group of 4-bits]
          - Split Into Two:   0001111001000110 [L] 1010111000110100 [R]
          - Swap Halves:      10101110001101000001111001000110
          - Bit Inversion:    01010001110010111110000110111001
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     10001000011111000101010000011111

          - FUNCTION OUTPUT:  10001000011111000101010000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010110111101010000110010111

       - FUNCTION OUTPUT:          10001000011111000101010000011111

       - Left XOR FUNCTION OUTPUT: 11111010101000101111010110001000

       - Next Round Left 32 Bits:  00110010101011010001001010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010101000101111010110001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010101011010001001010011010

       - Right 32 Bits:            11111010101000101111010110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       11111010101000101111010110001000
          - S-Box Result:     10110100010011101011100100100010   [per every group of 4-bits]
          - Split Into Two:   1011010001001110 [L] 1011100100100010 [R]
          - Swap Halves:      10111001001000101011010001001110
          - Bit Inversion:    01000110110111010100101110110001
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     11001010100001000110100111101010

          - FUNCTION OUTPUT:  11001010100001000110100111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010101011010001001010011010

       - FUNCTION OUTPUT:          11001010100001000110100111101010

       - Left XOR FUNCTION OUTPUT: 11111000001010010111101101110000

       - Next Round Left 32 Bits:  11111010101000101111010110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000001010010111101101110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010101000101111010110001000

       - Right 32 Bits:            11111000001010010111101101110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       11111000001010010111101101110000
          - S-Box Result:     10110010111000111101100011011111   [per every group of 4-bits]
          - Split Into Two:   1011001011100011 [L] 1101100011011111 [R]
          - Swap Halves:      11011000110111111011001011100011
          - Bit Inversion:    00100111001000000100110100011100
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     10101000010101111010111010111001

          - FUNCTION OUTPUT:  10101000010101111010111010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010101000101111010110001000

       - FUNCTION OUTPUT:          10101000010101111010111010111001

       - Left XOR FUNCTION OUTPUT: 01010010111101010101101100110001

       - Next Round Left 32 Bits:  11111000001010010111101101110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010111101010101101100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000001010010111101101110000

       - Right 32 Bits:            01010010111101010101101100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       01010010111101010101101100110001
          - S-Box Result:     10011110101110011001100000011010   [per every group of 4-bits]
          - Split Into Two:   1001111010111001 [L] 1001100000011010 [R]
          - Swap Halves:      10011000000110101001111010111001
          - Bit Inversion:    01100111111001010110000101000110
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     00010010011111110101000101001100

          - FUNCTION OUTPUT:  00010010011111110101000101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000001010010111101101110000

       - FUNCTION OUTPUT:          00010010011111110101000101001100

       - Left XOR FUNCTION OUTPUT: 11101010010101100010101000111100

       - Next Round Left 32 Bits:  01010010111101010101101100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010010101100010101000111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010111101010101101100110001

       - Right 32 Bits:            11101010010101100010101000111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       11101010010101100010101000111100
          - S-Box Result:     11000100100100001110010000010101   [per every group of 4-bits]
          - Split Into Two:   1100010010010000 [L] 1110010000010101 [R]
          - Swap Halves:      11100100000101011100010010010000
          - Bit Inversion:    00011011111010100011101101101111
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     10111010000101001001001000001010

          - FUNCTION OUTPUT:  10111010000101001001001000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010111101010101101100110001

       - FUNCTION OUTPUT:          10111010000101001001001000001010

       - Left XOR FUNCTION OUTPUT: 11101000111000011100100100111011

       - Next Round Left 32 Bits:  11101010010101100010101000111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000111000011100100100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010010101100010101000111100

       - Right 32 Bits:            11101000111000011100100100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       11101000111000011100100100111011
          - S-Box Result:     11000010110010100101001100011000   [per every group of 4-bits]
          - Split Into Two:   1100001011001010 [L] 0101001100011000 [R]
          - Swap Halves:      01010011000110001100001011001010
          - Bit Inversion:    10101100111001110011110100110101
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     11110110000001000010111101110101

          - FUNCTION OUTPUT:  11110110000001000010111101110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010010101100010101000111100

       - FUNCTION OUTPUT:          11110110000001000010111101110101

       - Left XOR FUNCTION OUTPUT: 00011100010100100000010101001001

       - Next Round Left 32 Bits:  11101000111000011100100100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100010100100000010101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000111000011100100100111011

       - Right 32 Bits:            00011100010100100000010101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       00011100010100100000010101001001
          - S-Box Result:     10100101100111101111100101110011   [per every group of 4-bits]
          - Split Into Two:   1010010110011110 [L] 1111100101110011 [R]
          - Swap Halves:      11111001011100111010010110011110
          - Bit Inversion:    00000110100011000101101001100001
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     11100011101001111100111101011101

          - FUNCTION OUTPUT:  11100011101001111100111101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000111000011100100100111011

       - FUNCTION OUTPUT:          11100011101001111100111101011101

       - Left XOR FUNCTION OUTPUT: 00001011010001100000011001100110

       - Next Round Left 32 Bits:  00011100010100100000010101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011010001100000011001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000101101000110000001100110011000011100010100100000010101001001

 > Decrypted Block:     0000101101000110000001100110011000011100010100100000010101001001


!!!CBC: Previous Ciphertext:                             0011100101110110001101110101001100110011011000100011000001100110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011001000110000001100010011010100101111001100000011010100101111

 > Final Processed Block:                                0011001000110000001100010011010100101111001100000011010100101111



Ciphertext Block 2:                                      1001100111101110110011000010011111100110010111001000110010001001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011001111011101100110000100111

       - Right 32 Bits:            11100110010111001000110010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11100110010111001000110010001001
          - S-Box Result:     11000000100101010010010100100011   [per every group of 4-bits]
          - Split Into Two:   1100000010010101 [L] 0010010100100011 [R]
          - Swap Halves:      00100101001000111100000010010101
          - Bit Inversion:    11011010110111000011111101101010
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10000000001111110010110100101010

          - FUNCTION OUTPUT:  10000000001111110010110100101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011001111011101100110000100111

       - FUNCTION OUTPUT:          10000000001111110010110100101010

       - Left XOR FUNCTION OUTPUT: 00011001110100011110000100001101

       - Next Round Left 32 Bits:  11100110010111001000110010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001110100011110000100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110010111001000110010001001

       - Right 32 Bits:            00011001110100011110000100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       00011001110100011110000100001101
          - S-Box Result:     10100011011010101100101011110110   [per every group of 4-bits]
          - Split Into Two:   1010001101101010 [L] 1100101011110110 [R]
          - Swap Halves:      11001010111101101010001101101010
          - Bit Inversion:    00110101000010010101110010010101
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     11010000001000101100100110101001

          - FUNCTION OUTPUT:  11010000001000101100100110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110010111001000110010001001

       - FUNCTION OUTPUT:          11010000001000101100100110101001

       - Left XOR FUNCTION OUTPUT: 00110110011111100100010100100000

       - Next Round Left 32 Bits:  00011001110100011110000100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110011111100100010100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001110100011110000100001101

       - Right 32 Bits:            00110110011111100100010100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       00110110011111100100010100100000
          - S-Box Result:     00010000110111000111100111101111   [per every group of 4-bits]
          - Split Into Two:   0001000011011100 [L] 0111100111101111 [R]
          - Swap Halves:      01111001111011110001000011011100
          - Bit Inversion:    10000110000100001110111100100011
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     11001100010010011100100101101011

          - FUNCTION OUTPUT:  11001100010010011100100101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001110100011110000100001101

       - FUNCTION OUTPUT:          11001100010010011100100101101011

       - Left XOR FUNCTION OUTPUT: 11010101100110000010100001100110

       - Next Round Left 32 Bits:  00110110011111100100010100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101100110000010100001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110011111100100010100100000

       - Right 32 Bits:            11010101100110000010100001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       11010101100110000010100001100110
          - S-Box Result:     01101001001100101110001000000000   [per every group of 4-bits]
          - Split Into Two:   0110100100110010 [L] 1110001000000000 [R]
          - Swap Halves:      11100010000000000110100100110010
          - Bit Inversion:    00011101111111111001011011001101
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     11000000010110111110010101101011

          - FUNCTION OUTPUT:  11000000010110111110010101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110011111100100010100100000

       - FUNCTION OUTPUT:          11000000010110111110010101101011

       - Left XOR FUNCTION OUTPUT: 11110110001001011010000001001011

       - Next Round Left 32 Bits:  11010101100110000010100001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110001001011010000001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101100110000010100001100110

       - Right 32 Bits:            11110110001001011010000001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11110110001001011010000001001011
          - S-Box Result:     10110000111010010100111101111000   [per every group of 4-bits]
          - Split Into Two:   1011000011101001 [L] 0100111101111000 [R]
          - Swap Halves:      01001111011110001011000011101001
          - Bit Inversion:    10110000100001110100111100010110
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     10101100110111010011111110011110

          - FUNCTION OUTPUT:  10101100110111010011111110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101100110000010100001100110

       - FUNCTION OUTPUT:          10101100110111010011111110011110

       - Left XOR FUNCTION OUTPUT: 01111001010001010001011111111000

       - Next Round Left 32 Bits:  11110110001001011010000001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001010001010001011111111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110001001011010000001001011

       - Right 32 Bits:            01111001010001010001011111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       01111001010001010001011111111000
          - S-Box Result:     11010011011110011010110110110010   [per every group of 4-bits]
          - Split Into Two:   1101001101111001 [L] 1010110110110010 [R]
          - Swap Halves:      10101101101100101101001101111001
          - Bit Inversion:    01010010010011010010110010000110
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     10011101101110001010011011100011

          - FUNCTION OUTPUT:  10011101101110001010011011100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110001001011010000001001011

       - FUNCTION OUTPUT:          10011101101110001010011011100011

       - Left XOR FUNCTION OUTPUT: 01101011100111010000011010101000

       - Next Round Left 32 Bits:  01111001010001010001011111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011100111010000011010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001010001010001011111111000

       - Right 32 Bits:            01101011100111010000011010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       01101011100111010000011010101000
          - S-Box Result:     00001000001101101111000001000010   [per every group of 4-bits]
          - Split Into Two:   0000100000110110 [L] 1111000001000010 [R]
          - Swap Halves:      11110000010000100000100000110110
          - Bit Inversion:    00001111101111011111011111001001
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     01011001001001111010100111001000

          - FUNCTION OUTPUT:  01011001001001111010100111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001010001010001011111111000

       - FUNCTION OUTPUT:          01011001001001111010100111001000

       - Left XOR FUNCTION OUTPUT: 00100000011000101011111000110000

       - Next Round Left 32 Bits:  01101011100111010000011010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000011000101011111000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011100111010000011010101000

       - Right 32 Bits:            00100000011000101011111000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00100000011000101011111000110000
          - S-Box Result:     11101111000011101000110000011111   [per every group of 4-bits]
          - Split Into Two:   1110111100001110 [L] 1000110000011111 [R]
          - Swap Halves:      10001100000111111110111100001110
          - Bit Inversion:    01110011111000000001000011110001
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     10011110010111111011010111101101

          - FUNCTION OUTPUT:  10011110010111111011010111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011100111010000011010101000

       - FUNCTION OUTPUT:          10011110010111111011010111101101

       - Left XOR FUNCTION OUTPUT: 11110101110000101011001101000101

       - Next Round Left 32 Bits:  00100000011000101011111000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101110000101011001101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000011000101011111000110000

       - Right 32 Bits:            11110101110000101011001101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       11110101110000101011001101000101
          - S-Box Result:     10111001010111101000000101111001   [per every group of 4-bits]
          - Split Into Two:   1011100101011110 [L] 1000000101111001 [R]
          - Swap Halves:      10000001011110011011100101011110
          - Bit Inversion:    01111110100001100100011010100001
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     00010100010001010101110001110101

          - FUNCTION OUTPUT:  00010100010001010101110001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000011000101011111000110000

       - FUNCTION OUTPUT:          00010100010001010101110001110101

       - Left XOR FUNCTION OUTPUT: 00110100001001111110001001000101

       - Next Round Left 32 Bits:  11110101110000101011001101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100001001111110001001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101110000101011001101000101

       - Right 32 Bits:            00110100001001111110001001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       00110100001001111110001001000101
          - S-Box Result:     00010111111011011100111001111001   [per every group of 4-bits]
          - Split Into Two:   0001011111101101 [L] 1100111001111001 [R]
          - Swap Halves:      11001110011110010001011111101101
          - Bit Inversion:    00110001100001101110100000010010
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     11101000001100010101110110110100

          - FUNCTION OUTPUT:  11101000001100010101110110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101110000101011001101000101

       - FUNCTION OUTPUT:          11101000001100010101110110110100

       - Left XOR FUNCTION OUTPUT: 00011101111100111110111011110001

       - Next Round Left 32 Bits:  00110100001001111110001001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101111100111110111011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100001001111110001001000101

       - Right 32 Bits:            00011101111100111110111011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       00011101111100111110111011110001
          - S-Box Result:     10100110101100011100110010111010   [per every group of 4-bits]
          - Split Into Two:   1010011010110001 [L] 1100110010111010 [R]
          - Swap Halves:      11001100101110101010011010110001
          - Bit Inversion:    00110011010001010101100101001110
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     10111111000111000111101100010101

          - FUNCTION OUTPUT:  10111111000111000111101100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100001001111110001001000101

       - FUNCTION OUTPUT:          10111111000111000111101100010101

       - Left XOR FUNCTION OUTPUT: 10001011001110111001100101010000

       - Next Round Left 32 Bits:  00011101111100111110111011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011001110111001100101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101111100111110111011110001

       - Right 32 Bits:            10001011001110111001100101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       10001011001110111001100101010000
          - S-Box Result:     00101000000110000011001110011111   [per every group of 4-bits]
          - Split Into Two:   0010100000011000 [L] 0011001110011111 [R]
          - Swap Halves:      00110011100111110010100000011000
          - Bit Inversion:    11001100011000001101011111100111
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     01000011000101110011010001000010

          - FUNCTION OUTPUT:  01000011000101110011010001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101111100111110111011110001

       - FUNCTION OUTPUT:          01000011000101110011010001000010

       - Left XOR FUNCTION OUTPUT: 01011110111001001101101010110011

       - Next Round Left 32 Bits:  10001011001110111001100101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110111001001101101010110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011001110111001100101010000

       - Right 32 Bits:            01011110111001001101101010110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       01011110111001001101101010110011
          - S-Box Result:     10011100110001110110010010000001   [per every group of 4-bits]
          - Split Into Two:   1001110011000111 [L] 0110010010000001 [R]
          - Swap Halves:      01100100100000011001110011000111
          - Bit Inversion:    10011011011111100110001100111000
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     11101110111001000101001100110010

          - FUNCTION OUTPUT:  11101110111001000101001100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011001110111001100101010000

       - FUNCTION OUTPUT:          11101110111001000101001100110010

       - Left XOR FUNCTION OUTPUT: 01100101110111111100101001100010

       - Next Round Left 32 Bits:  01011110111001001101101010110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101110111111100101001100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110111001001101101010110011

       - Right 32 Bits:            01100101110111111100101001100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       01100101110111111100101001100010
          - S-Box Result:     00001001011010110101010000001110   [per every group of 4-bits]
          - Split Into Two:   0000100101101011 [L] 0101010000001110 [R]
          - Swap Halves:      01010100000011100000100101101011
          - Bit Inversion:    10101011111100011111011010010100
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     00001010000011110101111111110001

          - FUNCTION OUTPUT:  00001010000011110101111111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110111001001101101010110011

       - FUNCTION OUTPUT:          00001010000011110101111111110001

       - Left XOR FUNCTION OUTPUT: 01010100111010111000010101000010

       - Next Round Left 32 Bits:  01100101110111111100101001100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100111010111000010101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101110111111100101001100010

       - Right 32 Bits:            01010100111010111000010101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01010100111010111000010101000010
          - S-Box Result:     10010111110010000010100101111110   [per every group of 4-bits]
          - Split Into Two:   1001011111001000 [L] 0010100101111110 [R]
          - Swap Halves:      00101001011111101001011111001000
          - Bit Inversion:    11010110100000010110100000110111
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10001100011000100111101001110111

          - FUNCTION OUTPUT:  10001100011000100111101001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101110111111100101001100010

       - FUNCTION OUTPUT:          10001100011000100111101001110111

       - Left XOR FUNCTION OUTPUT: 11101001101111011011000000010101

       - Next Round Left 32 Bits:  01010100111010111000010101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001101111011011000000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100111010111000010101000010

       - Right 32 Bits:            11101001101111011011000000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       11101001101111011011000000010101
          - S-Box Result:     11000011100001101000111110101001   [per every group of 4-bits]
          - Split Into Two:   1100001110000110 [L] 1000111110101001 [R]
          - Swap Halves:      10001111101010011100001110000110
          - Bit Inversion:    01110000010101100011110001111001
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10010101011111011010100101000101

          - FUNCTION OUTPUT:  10010101011111011010100101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100111010111000010101000010

       - FUNCTION OUTPUT:          10010101011111011010100101000101

       - Left XOR FUNCTION OUTPUT: 11000001100101100010110000000111

       - Next Round Left 32 Bits:  11101001101111011011000000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001100101100010110000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100000110010110001011000000011111101001101111011011000000010101

 > Decrypted Block:     1100000110010110001011000000011111101001101111011011000000010101


!!!CBC: Previous Ciphertext:                             1111000010100001000011000011011011011111100001111000001000100000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011000100110111001000000011000100110110001110100011001000110101

 > Final Processed Block:                                0011000100110111001000000011000100110110001110100011001000110101



Ciphertext Block 3:                                      0010111111110001101010111000101100010101000011111111101101001110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111111100011010101110001011

       - Right 32 Bits:            00010101000011111111101101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       00010101000011111111101101001110
          - S-Box Result:     10101001111110111011100001111100   [per every group of 4-bits]
          - Split Into Two:   1010100111111011 [L] 1011100001111100 [R]
          - Swap Halves:      10111000011111001010100111111011
          - Bit Inversion:    01000111100000110101011000000100
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00011101011000000100010001000100

          - FUNCTION OUTPUT:  00011101011000000100010001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111111100011010101110001011

       - FUNCTION OUTPUT:          00011101011000000100010001000100

       - Left XOR FUNCTION OUTPUT: 00110010100100011110111111001111

       - Next Round Left 32 Bits:  00010101000011111111101101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010100100011110111111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101000011111111101101001110

       - Right 32 Bits:            00110010100100011110111111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       00110010100100011110111111001111
          - S-Box Result:     00011110001110101100101101011011   [per every group of 4-bits]
          - Split Into Two:   0001111000111010 [L] 1100101101011011 [R]
          - Swap Halves:      11001011010110110001111000111010
          - Bit Inversion:    00110100101001001110000111000101
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     11010001100011110111010011111001

          - FUNCTION OUTPUT:  11010001100011110111010011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101000011111111101101001110

       - FUNCTION OUTPUT:          11010001100011110111010011111001

       - Left XOR FUNCTION OUTPUT: 11000100100000001000111110110111

       - Next Round Left 32 Bits:  00110010100100011110111111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100100000001000111110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010100100011110111111001111

       - Right 32 Bits:            11000100100000001000111110110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       11000100100000001000111110110111
          - S-Box Result:     01010111001011110010101110001101   [per every group of 4-bits]
          - Split Into Two:   0101011100101111 [L] 0010101110001101 [R]
          - Swap Halves:      00101011100011010101011100101111
          - Bit Inversion:    11010100011100101010100011010000
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     10011110001010111000111010011000

          - FUNCTION OUTPUT:  10011110001010111000111010011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010100100011110111111001111

       - FUNCTION OUTPUT:          10011110001010111000111010011000

       - Left XOR FUNCTION OUTPUT: 10101100101110100110000101010111

       - Next Round Left 32 Bits:  11000100100000001000111110110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100101110100110000101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100100000001000111110110111

       - Right 32 Bits:            10101100101110100110000101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       10101100101110100110000101010111
          - S-Box Result:     01000101100001000000101010011101   [per every group of 4-bits]
          - Split Into Two:   0100010110000100 [L] 0000101010011101 [R]
          - Swap Halves:      00001010100111010100010110000100
          - Bit Inversion:    11110101011000101011101001111011
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     00101000110001101100100111011101

          - FUNCTION OUTPUT:  00101000110001101100100111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100100000001000111110110111

       - FUNCTION OUTPUT:          00101000110001101100100111011101

       - Left XOR FUNCTION OUTPUT: 11101100010001100100011001101010

       - Next Round Left 32 Bits:  10101100101110100110000101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100010001100100011001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100101110100110000101010111

       - Right 32 Bits:            11101100010001100100011001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11101100010001100100011001101010
          - S-Box Result:     11000101011100000111000000000100   [per every group of 4-bits]
          - Split Into Two:   1100010101110000 [L] 0111000000000100 [R]
          - Swap Halves:      01110000000001001100010101110000
          - Bit Inversion:    10001111111110110011101010001111
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     10010011101000010100101000000111

          - FUNCTION OUTPUT:  10010011101000010100101000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100101110100110000101010111

       - FUNCTION OUTPUT:          10010011101000010100101000000111

       - Left XOR FUNCTION OUTPUT: 00111111000110110010101101010000

       - Next Round Left 32 Bits:  11101100010001100100011001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111000110110010101101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100010001100100011001101010

       - Right 32 Bits:            00111111000110110010101101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       00111111000110110010101101010000
          - S-Box Result:     00011011101010001110100010011111   [per every group of 4-bits]
          - Split Into Two:   0001101110101000 [L] 1110100010011111 [R]
          - Swap Halves:      11101000100111110001101110101000
          - Bit Inversion:    00010111011000001110010001010111
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     11011000100101010110111000110010

          - FUNCTION OUTPUT:  11011000100101010110111000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100010001100100011001101010

       - FUNCTION OUTPUT:          11011000100101010110111000110010

       - Left XOR FUNCTION OUTPUT: 00110100110100110010100001011000

       - Next Round Left 32 Bits:  00111111000110110010101101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100110100110010100001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111000110110010101101010000

       - Right 32 Bits:            00110100110100110010100001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       00110100110100110010100001011000
          - S-Box Result:     00010111011000011110001010010010   [per every group of 4-bits]
          - Split Into Two:   0001011101100001 [L] 1110001010010010 [R]
          - Swap Halves:      11100010100100100001011101100001
          - Bit Inversion:    00011101011011011110100010011110
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     01001011111101111011011010011111

          - FUNCTION OUTPUT:  01001011111101111011011010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111000110110010101101010000

       - FUNCTION OUTPUT:          01001011111101111011011010011111

       - Left XOR FUNCTION OUTPUT: 01110100111011001001110111001111

       - Next Round Left 32 Bits:  00110100110100110010100001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100111011001001110111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100110100110010100001011000

       - Right 32 Bits:            01110100111011001001110111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       01110100111011001001110111001111
          - S-Box Result:     11010111110001010011011001011011   [per every group of 4-bits]
          - Split Into Two:   1101011111000101 [L] 0011011001011011 [R]
          - Swap Halves:      00110110010110111101011111000101
          - Bit Inversion:    11001001101001000010100000111010
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     00100100000110111000110100100110

          - FUNCTION OUTPUT:  00100100000110111000110100100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100110100110010100001011000

       - FUNCTION OUTPUT:          00100100000110111000110100100110

       - Left XOR FUNCTION OUTPUT: 00010000110010001010010101111110

       - Next Round Left 32 Bits:  01110100111011001001110111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000110010001010010101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100111011001001110111001111

       - Right 32 Bits:            00010000110010001010010101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       00010000110010001010010101111110
          - S-Box Result:     10101111010100100100100111011100   [per every group of 4-bits]
          - Split Into Two:   1010111101010010 [L] 0100100111011100 [R]
          - Swap Halves:      01001001110111001010111101010010
          - Bit Inversion:    10110110001000110101000010101101
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     11011100111000000100101001111001

          - FUNCTION OUTPUT:  11011100111000000100101001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100111011001001110111001111

       - FUNCTION OUTPUT:          11011100111000000100101001111001

       - Left XOR FUNCTION OUTPUT: 10101000000011001101011110110110

       - Next Round Left 32 Bits:  00010000110010001010010101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000000011001101011110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000110010001010010101111110

       - Right 32 Bits:            10101000000011001101011110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       10101000000011001101011110110110
          - S-Box Result:     01000010111101010110110110000000   [per every group of 4-bits]
          - Split Into Two:   0100001011110101 [L] 0110110110000000 [R]
          - Swap Halves:      01101101100000000100001011110101
          - Bit Inversion:    10010010011111111011110100001010
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     01001011110010000000100010101100

          - FUNCTION OUTPUT:  01001011110010000000100010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000110010001010010101111110

       - FUNCTION OUTPUT:          01001011110010000000100010101100

       - Left XOR FUNCTION OUTPUT: 01011011000000001010110111010010

       - Next Round Left 32 Bits:  10101000000011001101011110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011000000001010110111010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000000011001101011110110110

       - Right 32 Bits:            01011011000000001010110111010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       01011011000000001010110111010010
          - S-Box Result:     10011000111111110100011001101110   [per every group of 4-bits]
          - Split Into Two:   1001100011111111 [L] 0100011001101110 [R]
          - Swap Halves:      01000110011011101001100011111111
          - Bit Inversion:    10111001100100010110011100000000
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     00110101110010000100010101011011

          - FUNCTION OUTPUT:  00110101110010000100010101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000000011001101011110110110

       - FUNCTION OUTPUT:          00110101110010000100010101011011

       - Left XOR FUNCTION OUTPUT: 10011101110001001001001011101101

       - Next Round Left 32 Bits:  01011011000000001010110111010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101110001001001001011101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011000000001010110111010010

       - Right 32 Bits:            10011101110001001001001011101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       10011101110001001001001011101101
          - S-Box Result:     00110110010101110011111011000110   [per every group of 4-bits]
          - Split Into Two:   0011011001010111 [L] 0011111011000110 [R]
          - Swap Halves:      00111110110001100011011001010111
          - Bit Inversion:    11000001001110011100100110101000
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     01001110010011100010101000001101

          - FUNCTION OUTPUT:  01001110010011100010101000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011000000001010110111010010

       - FUNCTION OUTPUT:          01001110010011100010101000001101

       - Left XOR FUNCTION OUTPUT: 00010101010011101000011111011111

       - Next Round Left 32 Bits:  10011101110001001001001011101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101010011101000011111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101110001001001001011101101

       - Right 32 Bits:            00010101010011101000011111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       00010101010011101000011111011111
          - S-Box Result:     10101001011111000010110101101011   [per every group of 4-bits]
          - Split Into Two:   1010100101111100 [L] 0010110101101011 [R]
          - Swap Halves:      00101101011010111010100101111100
          - Bit Inversion:    11010010100101000101011010000011
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     10100111000011100110011010001001

          - FUNCTION OUTPUT:  10100111000011100110011010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101110001001001001011101101

       - FUNCTION OUTPUT:          10100111000011100110011010001001

       - Left XOR FUNCTION OUTPUT: 00111010110010101111010001100100

       - Next Round Left 32 Bits:  00010101010011101000011111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010110010101111010001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101010011101000011111011111

       - Right 32 Bits:            00111010110010101111010001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       00111010110010101111010001100100
          - S-Box Result:     00010100010101001011011100000111   [per every group of 4-bits]
          - Split Into Two:   0001010001010100 [L] 1011011100000111 [R]
          - Swap Halves:      10110111000001110001010001010100
          - Bit Inversion:    01001000111110001110101110101011
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     11101001000001100100001011001110

          - FUNCTION OUTPUT:  11101001000001100100001011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101010011101000011111011111

       - FUNCTION OUTPUT:          11101001000001100100001011001110

       - Left XOR FUNCTION OUTPUT: 11111100010010001100010100010001

       - Next Round Left 32 Bits:  00111010110010101111010001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100010010001100010100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010110010101111010001100100

       - Right 32 Bits:            11111100010010001100010100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       11111100010010001100010100010001
          - S-Box Result:     10110101011100100101100110101010   [per every group of 4-bits]
          - Split Into Two:   1011010101110010 [L] 0101100110101010 [R]
          - Swap Halves:      01011001101010101011010101110010
          - Bit Inversion:    10100110010101010100101010001101
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     11111100101101100101100011001101

          - FUNCTION OUTPUT:  11111100101101100101100011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010110010101111010001100100

       - FUNCTION OUTPUT:          11111100101101100101100011001101

       - Left XOR FUNCTION OUTPUT: 11000110011111001010110010101001

       - Next Round Left 32 Bits:  11111100010010001100010100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110011111001010110010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100010010001100010100010001

       - Right 32 Bits:            11000110011111001010110010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       11000110011111001010110010101001
          - S-Box Result:     01010000110101010100010101000011   [per every group of 4-bits]
          - Split Into Two:   0101000011010101 [L] 0100010101000011 [R]
          - Swap Halves:      01000101010000110101000011010101
          - Bit Inversion:    10111010101111001010111100101010
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     01011111100101110011101000010110

          - FUNCTION OUTPUT:  01011111100101110011101000010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100010010001100010100010001

       - FUNCTION OUTPUT:          01011111100101110011101000010110

       - Left XOR FUNCTION OUTPUT: 10100011110111111111111100000111

       - Next Round Left 32 Bits:  11000110011111001010110010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011110111111111111100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010001111011111111111110000011111000110011111001010110010101001

 > Decrypted Block:     1010001111011111111111110000011111000110011111001010110010101001


!!!CBC: Previous Ciphertext:                             1001100111101110110011000010011111100110010111001000110010001001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011101000110001001100110010000000100000001000000010000000100000

 > Final Processed Block:                                0011101000110001001100110010000000100000001000000010000000100000


FINAL PROCESSED DATA BLOCKS: 0011001000110000001100010011010100101111001100000011010100101111,0011000100110111001000000011000100110110001110100011001000110101,0011101000110001001100110010000000100000001000000010000000100000,

BLOCKS IN ASCII:             2015/05/17 16:25:13     

