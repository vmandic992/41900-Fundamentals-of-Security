Triple DES Capture

168-bit key: MyAwesomeTripleDESKey

3 x 56-bit DES keys: MyAweso, meTripl, eDESKey

Initialization Vector: N/A (Using ECB)

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: eDESKey
In Binary:  01100101010001000100010101010011010010110110010101111001

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00110101011101110111010101011001011010010011010100001101
Subkey 2  : 10010101000100010001010101001101001011011001010111100101
Subkey 3  : 11010101110111011101010101100101101001001101010000110100
Subkey 4  : 01010100010001000101010100110100101101100101011110010110
Subkey 5  : 01010111011101110101010110010110100100110101000011010011
Subkey 6  : 01010001000100010101010011010010110110010101111001011001
Subkey 7  : 01011101110111010101011001011010010011010100001101001101
Subkey 8  : 01000100010001010101001101001011011001010111100101100101
Subkey 9  : 01110111011101010101100101101001001101010000110100110101
Subkey 10 : 00010001000101010100110100101101100101011110010110010101
Subkey 11 : 11011101110101010110010110100100110101000011010011010101
Subkey 12 : 01000100010101010011010010110110010101111001011001010100
Subkey 13 : 01110111010101011001011010010011010100001101001101010111
Subkey 14 : 00010001010101001101001011011001010111100101100101010001
Subkey 15 : 11011101010101100101101001001101010000110100110101011101
Subkey 16 : 01000101010100110100101101100101011110010110010101000100

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ?uÈ?~RÆ)¥Õ¢92?ÿ¯HÀ?CÒzæeÁzZ?B¾f:È?y?xl$É?FÆ#&Z]¹WÉ?x¬$Q?FÆÝ.t??¬ 

Data padded with spaces : ?uÈ?~RÆ)¥Õ¢92?ÿ¯HÀ?CÒzæeÁzZ?B¾f:È?y?xl$É?FÆ#&Z]¹WÉ?x¬$Q?FÆÝ.t??¬ [Padded with '0' spaces]

Data in ASCII           : 128,117,200,153,126,82,19,198,41,165,213,162,57,50,141,255,175,16,72,4,192,130,67,210,1,122,230,101,193,122,90,156,66,190,102,58,200,154,21,121,159,120,108,36,201,128,70,198,35,38,90,93,26,185,87,201,159,120,172,36,81,128,70,198,221,46,116,158,24,147,172,32,

Data in Binary          : 10000000,01110101,11001000,10011001,01111110,01010010,00010011,11000110,00101001,10100101,11010101,10100010,00111001,00110010,10001101,11111111,10101111,00010000,01001000,00000100,11000000,10000010,01000011,11010010,00000001,01111010,11100110,01100101,11000001,01111010,01011010,10011100,01000010,10111110,01100110,00111010,11001000,10011010,00010101,01111001,10011111,01111000,01101100,00100100,11001001,10000000,01000110,11000110,00100011,00100110,01011010,01011101,00011010,10111001,01010111,11001001,10011111,01111000,10101100,00100100,01010001,10000000,01000110,11000110,11011101,00101110,01110100,10011110,00011000,10010011,10101100,00100000,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 1000000001110101110010001001100101111110010100100001001111000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000011101011100100010011001

       - Right 32 Bits:            01111110010100100001001111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       01111110010100100001001111000110
          - S-Box Result:     11011100100111101010000101010000   [per every group of 4-bits]
          - Split Into Two:   1101110010011110 [L] 1010000101010000 [R]
          - Swap Halves:      10100001010100001101110010011110
          - Bit Inversion:    01011110101011110010001101100001
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     01000110110001100101100100111001

          - FUNCTION OUTPUT:  01000110110001100101100100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000011101011100100010011001

       - FUNCTION OUTPUT:          01000110110001100101100100111001

       - Left XOR FUNCTION OUTPUT: 11000110101100111001000110100000

       - Next Round Left 32 Bits:  01111110010100100001001111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110101100111001000110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110010100100001001111000110

       - Right 32 Bits:            11000110101100111001000110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       11000110101100111001000110100000
          - S-Box Result:     01010000100000010011101001001111   [per every group of 4-bits]
          - Split Into Two:   0101000010000001 [L] 0011101001001111 [R]
          - Swap Halves:      00111010010011110101000010000001
          - Bit Inversion:    11000101101100001010111101111110
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     00011111110010001111000100100000

          - FUNCTION OUTPUT:  00011111110010001111000100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110010100100001001111000110

       - FUNCTION OUTPUT:          00011111110010001111000100100000

       - Left XOR FUNCTION OUTPUT: 01100001100110101110001011100110

       - Next Round Left 32 Bits:  11000110101100111001000110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001100110101110001011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110101100111001000110100000

       - Right 32 Bits:            01100001100110101110001011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01100001100110101110001011100110
          - S-Box Result:     00001010001101001100111011000000   [per every group of 4-bits]
          - Split Into Two:   0000101000110100 [L] 1100111011000000 [R]
          - Swap Halves:      11001110110000000000101000110100
          - Bit Inversion:    00110001001111111111010111001011
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     01111011011000011010001111011001

          - FUNCTION OUTPUT:  01111011011000011010001111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110101100111001000110100000

       - FUNCTION OUTPUT:          01111011011000011010001111011001

       - Left XOR FUNCTION OUTPUT: 10111101110100100011001001111001

       - Next Round Left 32 Bits:  01100001100110101110001011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101110100100011001001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001100110101110001011100110

       - Right 32 Bits:            10111101110100100011001001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       10111101110100100011001001111001
          - S-Box Result:     10000110011011100001111011010011   [per every group of 4-bits]
          - Split Into Two:   1000011001101110 [L] 0001111011010011 [R]
          - Swap Halves:      00011110110100111000011001101110
          - Bit Inversion:    11100001001011000111100110010001
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     10011011001110100010101000001010

          - FUNCTION OUTPUT:  10011011001110100010101000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001100110101110001011100110

       - FUNCTION OUTPUT:          10011011001110100010101000001010

       - Left XOR FUNCTION OUTPUT: 11111010101000001100100011101100

       - Next Round Left 32 Bits:  10111101110100100011001001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010101000001100100011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101110100100011001001111001

       - Right 32 Bits:            11111010101000001100100011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       11111010101000001100100011101100
          - S-Box Result:     10110100010011110101001011000101   [per every group of 4-bits]
          - Split Into Two:   1011010001001111 [L] 0101001011000101 [R]
          - Swap Halves:      01010010110001011011010001001111
          - Bit Inversion:    10101101001110100100101110110000
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     10110111101011010101011001111000

          - FUNCTION OUTPUT:  10110111101011010101011001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101110100100011001001111001

       - FUNCTION OUTPUT:          10110111101011010101011001111000

       - Left XOR FUNCTION OUTPUT: 00001010011111110110010000000001

       - Next Round Left 32 Bits:  11111010101000001100100011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010011111110110010000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010101000001100100011101100

       - Right 32 Bits:            00001010011111110110010000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       00001010011111110110010000000001
          - S-Box Result:     11110100110110110000011111111010   [per every group of 4-bits]
          - Split Into Two:   1111010011011011 [L] 0000011111111010 [R]
          - Swap Halves:      00000111111110101111010011011011
          - Bit Inversion:    11111000000001010000101100100100
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     00100010110000001001101101001110

          - FUNCTION OUTPUT:  00100010110000001001101101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010101000001100100011101100

       - FUNCTION OUTPUT:          00100010110000001001101101001110

       - Left XOR FUNCTION OUTPUT: 11011000011000000101001110100010

       - Next Round Left 32 Bits:  00001010011111110110010000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000011000000101001110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010011111110110010000000001

       - Right 32 Bits:            11011000011000000101001110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       11011000011000000101001110100010
          - S-Box Result:     01100010000011111001000101001110   [per every group of 4-bits]
          - Split Into Two:   0110001000001111 [L] 1001000101001110 [R]
          - Swap Halves:      10010001010011100110001000001111
          - Bit Inversion:    01101110101100011001110111110000
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     00100100110100000101011010001010

          - FUNCTION OUTPUT:  00100100110100000101011010001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010011111110110010000000001

       - FUNCTION OUTPUT:          00100100110100000101011010001010

       - Left XOR FUNCTION OUTPUT: 00101110101011110011001010001011

       - Next Round Left 32 Bits:  11011000011000000101001110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110101011110011001010001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000011000000101001110100010

       - Right 32 Bits:            00101110101011110011001010001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00101110101011110011001010001011
          - S-Box Result:     11101100010010110001111000101000   [per every group of 4-bits]
          - Split Into Two:   1110110001001011 [L] 0001111000101000 [R]
          - Swap Halves:      00011110001010001110110001001011
          - Bit Inversion:    11100001110101110001001110110100
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     10011111101011100111101111101110

          - FUNCTION OUTPUT:  10011111101011100111101111101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000011000000101001110100010

       - FUNCTION OUTPUT:          10011111101011100111101111101110

       - Left XOR FUNCTION OUTPUT: 01000111110011100010100001001100

       - Next Round Left 32 Bits:  00101110101011110011001010001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111110011100010100001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110101011110011001010001011

       - Right 32 Bits:            01000111110011100010100001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01000111110011100010100001001100
          - S-Box Result:     01111101010111001110001001110101   [per every group of 4-bits]
          - Split Into Two:   0111110101011100 [L] 1110001001110101 [R]
          - Swap Halves:      11100010011101010111110101011100
          - Bit Inversion:    00011101100010101000001010100011
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     00001111110100101111100010111001

          - FUNCTION OUTPUT:  00001111110100101111100010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110101011110011001010001011

       - FUNCTION OUTPUT:          00001111110100101111100010111001

       - Left XOR FUNCTION OUTPUT: 00100001011111011100101000110010

       - Next Round Left 32 Bits:  01000111110011100010100001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001011111011100101000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111110011100010100001001100

       - Right 32 Bits:            00100001011111011100101000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       00100001011111011100101000110010
          - S-Box Result:     11101010110101100101010000011110   [per every group of 4-bits]
          - Split Into Two:   1110101011010110 [L] 0101010000011110 [R]
          - Swap Halves:      01010100000111101110101011010110
          - Bit Inversion:    10101011111000010001010100101001
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     01110000101110110000111110110111

          - FUNCTION OUTPUT:  01110000101110110000111110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111110011100010100001001100

       - FUNCTION OUTPUT:          01110000101110110000111110110111

       - Left XOR FUNCTION OUTPUT: 00110111011101010010011111111011

       - Next Round Left 32 Bits:  00100001011111011100101000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111011101010010011111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001011111011100101000110010

       - Right 32 Bits:            00110111011101010010011111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       00110111011101010010011111111011
          - S-Box Result:     00011101110110011110110110111000   [per every group of 4-bits]
          - Split Into Two:   0001110111011001 [L] 1110110110111000 [R]
          - Swap Halves:      11101101101110000001110111011001
          - Bit Inversion:    00010010010001111110001000100110
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     01011010000110010111100011100000

          - FUNCTION OUTPUT:  01011010000110010111100011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001011111011100101000110010

       - FUNCTION OUTPUT:          01011010000110010111100011100000

       - Left XOR FUNCTION OUTPUT: 01111011011001001011001011010010

       - Next Round Left 32 Bits:  00110111011101010010011111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011011001001011001011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111011101010010011111111011

       - Right 32 Bits:            01111011011001001011001011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       01111011011001001011001011010010
          - S-Box Result:     11011000000001111000111001101110   [per every group of 4-bits]
          - Split Into Two:   1101100000000111 [L] 1000111001101110 [R]
          - Swap Halves:      10001110011011101101100000000111
          - Bit Inversion:    01110001100100010010011111111000
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     00001111110001111010100111011011

          - FUNCTION OUTPUT:  00001111110001111010100111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111011101010010011111111011

       - FUNCTION OUTPUT:          00001111110001111010100111011011

       - Left XOR FUNCTION OUTPUT: 00111000101100101000111000100000

       - Next Round Left 32 Bits:  01111011011001001011001011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000101100101000111000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011011001001011001011010010

       - Right 32 Bits:            00111000101100101000111000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       00111000101100101000111000100000
          - S-Box Result:     00010010100011100010110011101111   [per every group of 4-bits]
          - Split Into Two:   0001001010001110 [L] 0010110011101111 [R]
          - Swap Halves:      00101100111011110001001010001110
          - Bit Inversion:    11010011000100001110110101110001
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     10000001010000110100101110001000

          - FUNCTION OUTPUT:  10000001010000110100101110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011011001001011001011010010

       - FUNCTION OUTPUT:          10000001010000110100101110001000

       - Left XOR FUNCTION OUTPUT: 11111010001001111111100101011010

       - Next Round Left 32 Bits:  00111000101100101000111000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010001001111111100101011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000101100101000111000100000

       - Right 32 Bits:            11111010001001111111100101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       11111010001001111111100101011010
          - S-Box Result:     10110100111011011011001110010100   [per every group of 4-bits]
          - Split Into Two:   1011010011101101 [L] 1011001110010100 [R]
          - Swap Halves:      10110011100101001011010011101101
          - Bit Inversion:    01001100011010110100101100010010
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     00010111001100101010100001011010

          - FUNCTION OUTPUT:  00010111001100101010100001011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000101100101000111000100000

       - FUNCTION OUTPUT:          00010111001100101010100001011010

       - Left XOR FUNCTION OUTPUT: 00101111100000000010011001111010

       - Next Round Left 32 Bits:  11111010001001111111100101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111100000000010011001111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010001001111111100101011010

       - Right 32 Bits:            00101111100000000010011001111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       00101111100000000010011001111010
          - S-Box Result:     11101011001011111110000011010100   [per every group of 4-bits]
          - Split Into Two:   1110101100101111 [L] 1110000011010100 [R]
          - Swap Halves:      11100000110101001110101100101111
          - Bit Inversion:    00011111001010110001010011010000
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     01000111001100110111110110101010

          - FUNCTION OUTPUT:  01000111001100110111110110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010001001111111100101011010

       - FUNCTION OUTPUT:          01000111001100110111110110101010

       - Left XOR FUNCTION OUTPUT: 10111101000101001000010011110000

       - Next Round Left 32 Bits:  00101111100000000010011001111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101000101001000010011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111100000000010011001111010

       - Right 32 Bits:            10111101000101001000010011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       10111101000101001000010011110000
          - S-Box Result:     10000110101001110010011110111111   [per every group of 4-bits]
          - Split Into Two:   1000011010100111 [L] 0010011110111111 [R]
          - Swap Halves:      00100111101111111000011010100111
          - Bit Inversion:    11011000010000000111100101011000
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     10000110100110100000000100000110

          - FUNCTION OUTPUT:  10000110100110100000000100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111100000000010011001111010

       - FUNCTION OUTPUT:          10000110100110100000000100000110

       - Left XOR FUNCTION OUTPUT: 10101001000110100010011101111100

       - Next Round Left 32 Bits:  10111101000101001000010011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001000110100010011101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010100100011010001001110111110010111101000101001000010011110000

 > Processed Block:     1010100100011010001001110111110010111101000101001000010011110000


Ciphertext Block 2: 0010100110100101110101011010001000111001001100101000110111111111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001101001011101010110100010

       - Right 32 Bits:            00111001001100101000110111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       00111001001100101000110111111111
          - S-Box Result:     00010011000111100010011010111011   [per every group of 4-bits]
          - Split Into Two:   0001001100011110 [L] 0010011010111011 [R]
          - Swap Halves:      00100110101110110001001100011110
          - Bit Inversion:    11011001010001001110110011100001
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     11000001001011011001011010111001

          - FUNCTION OUTPUT:  11000001001011011001011010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001101001011101010110100010

       - FUNCTION OUTPUT:          11000001001011011001011010111001

       - Left XOR FUNCTION OUTPUT: 11101000100010000100001100011011

       - Next Round Left 32 Bits:  00111001001100101000110111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000100010000100001100011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001001100101000110111111111

       - Right 32 Bits:            11101000100010000100001100011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       11101000100010000100001100011011
          - S-Box Result:     11000010001000100111000110101000   [per every group of 4-bits]
          - Split Into Two:   1100001000100010 [L] 0111000110101000 [R]
          - Swap Halves:      01110001101010001100001000100010
          - Bit Inversion:    10001110010101110011110111011101
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     01010100001011110110001110000011

          - FUNCTION OUTPUT:  01010100001011110110001110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001001100101000110111111111

       - FUNCTION OUTPUT:          01010100001011110110001110000011

       - Left XOR FUNCTION OUTPUT: 01101101000111011110111001111100

       - Next Round Left 32 Bits:  11101000100010000100001100011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101000111011110111001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000100010000100001100011011

       - Right 32 Bits:            01101101000111011110111001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01101101000111011110111001111100
          - S-Box Result:     00000110101001101100110011010101   [per every group of 4-bits]
          - Split Into Two:   0000011010100110 [L] 1100110011010101 [R]
          - Swap Halves:      11001100110101010000011010100110
          - Bit Inversion:    00110011001010101111100101011001
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     01111001011101001010111101001011

          - FUNCTION OUTPUT:  01111001011101001010111101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000100010000100001100011011

       - FUNCTION OUTPUT:          01111001011101001010111101001011

       - Left XOR FUNCTION OUTPUT: 10010001111111001110110001010000

       - Next Round Left 32 Bits:  01101101000111011110111001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001111111001110110001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101000111011110111001111100

       - Right 32 Bits:            10010001111111001110110001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       10010001111111001110110001010000
          - S-Box Result:     00111010101101011100010110011111   [per every group of 4-bits]
          - Split Into Two:   0011101010110101 [L] 1100010110011111 [R]
          - Swap Halves:      11000101100111110011101010110101
          - Bit Inversion:    00111010011000001100010101001010
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     01000000011101101001011011010001

          - FUNCTION OUTPUT:  01000000011101101001011011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101000111011110111001111100

       - FUNCTION OUTPUT:          01000000011101101001011011010001

       - Left XOR FUNCTION OUTPUT: 00101101011010110111100010101101

       - Next Round Left 32 Bits:  10010001111111001110110001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101011010110111100010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001111111001110110001010000

       - Right 32 Bits:            00101101011010110111100010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       00101101011010110111100010101101
          - S-Box Result:     11100110000010001101001001000110   [per every group of 4-bits]
          - Split Into Two:   1110011000001000 [L] 1101001001000110 [R]
          - Swap Halves:      11010010010001101110011000001000
          - Bit Inversion:    00101101101110010001100111110111
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     00110111001011100000010000111111

          - FUNCTION OUTPUT:  00110111001011100000010000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001111111001110110001010000

       - FUNCTION OUTPUT:          00110111001011100000010000111111

       - Left XOR FUNCTION OUTPUT: 10100110110100101110100001101111

       - Next Round Left 32 Bits:  00101101011010110111100010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110110100101110100001101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101011010110111100010101101

       - Right 32 Bits:            10100110110100101110100001101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       10100110110100101110100001101111
          - S-Box Result:     01000000011011101100001000001011   [per every group of 4-bits]
          - Split Into Two:   0100000001101110 [L] 1100001000001011 [R]
          - Swap Halves:      11000010000010110100000001101110
          - Bit Inversion:    00111101111101001011111110010001
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     11100111001100010010111111111011

          - FUNCTION OUTPUT:  11100111001100010010111111111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101011010110111100010101101

       - FUNCTION OUTPUT:          11100111001100010010111111111011

       - Left XOR FUNCTION OUTPUT: 11001010010110100101011101010110

       - Next Round Left 32 Bits:  10100110110100101110100001101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010010110100101011101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110110100101110100001101111

       - Right 32 Bits:            11001010010110100101011101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       11001010010110100101011101010110
          - S-Box Result:     01010100100101001001110110010000   [per every group of 4-bits]
          - Split Into Two:   0101010010010100 [L] 1001110110010000 [R]
          - Swap Halves:      10011101100100000101010010010100
          - Bit Inversion:    01100010011011111010101101101011
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     00101000000011100110000000010001

          - FUNCTION OUTPUT:  00101000000011100110000000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110110100101110100001101111

       - FUNCTION OUTPUT:          00101000000011100110000000010001

       - Left XOR FUNCTION OUTPUT: 10001110110111001000100001111110

       - Next Round Left 32 Bits:  11001010010110100101011101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110110111001000100001111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010010110100101011101010110

       - Right 32 Bits:            10001110110111001000100001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       10001110110111001000100001111110
          - S-Box Result:     00101100011001010010001011011100   [per every group of 4-bits]
          - Split Into Two:   0010110001100101 [L] 0010001011011100 [R]
          - Swap Halves:      00100010110111000010110001100101
          - Bit Inversion:    11011101001000111101001110011010
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     10100011010110101011101111000000

          - FUNCTION OUTPUT:  10100011010110101011101111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010010110100101011101010110

       - FUNCTION OUTPUT:          10100011010110101011101111000000

       - Left XOR FUNCTION OUTPUT: 01101001000000001110110010010110

       - Next Round Left 32 Bits:  10001110110111001000100001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001000000001110110010010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110110111001000100001111110

       - Right 32 Bits:            01101001000000001110110010010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01101001000000001110110010010110
          - S-Box Result:     00000011111111111100010100110000   [per every group of 4-bits]
          - Split Into Two:   0000001111111111 [L] 1100010100110000 [R]
          - Swap Halves:      11000101001100000000001111111111
          - Bit Inversion:    00111010110011111111110000000000
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     00101000100101111000011000011010

          - FUNCTION OUTPUT:  00101000100101111000011000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110110111001000100001111110

       - FUNCTION OUTPUT:          00101000100101111000011000011010

       - Left XOR FUNCTION OUTPUT: 10100110010010110000111001100100

       - Next Round Left 32 Bits:  01101001000000001110110010010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110010010110000111001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001000000001110110010010110

       - Right 32 Bits:            10100110010010110000111001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       10100110010010110000111001100100
          - S-Box Result:     01000000011110001111110000000111   [per every group of 4-bits]
          - Split Into Two:   0100000001111000 [L] 1111110000000111 [R]
          - Swap Halves:      11111100000001110100000001111000
          - Bit Inversion:    00000011111110001011111110000111
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     11011000101000101010010100011001

          - FUNCTION OUTPUT:  11011000101000101010010100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001000000001110110010010110

       - FUNCTION OUTPUT:          11011000101000101010010100011001

       - Left XOR FUNCTION OUTPUT: 10110001101000100100100110001111

       - Next Round Left 32 Bits:  10100110010010110000111001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001101000100100100110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110010010110000111001100100

       - Right 32 Bits:            10110001101000100100100110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       10110001101000100100100110001111
          - S-Box Result:     10001010010011100111001100101011   [per every group of 4-bits]
          - Split Into Two:   1000101001001110 [L] 0111001100101011 [R]
          - Swap Halves:      01110011001010111000101001001110
          - Bit Inversion:    10001100110101000111010110110001
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     11000100100010101110111101110111

          - FUNCTION OUTPUT:  11000100100010101110111101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110010010110000111001100100

       - FUNCTION OUTPUT:          11000100100010101110111101110111

       - Left XOR FUNCTION OUTPUT: 01100010110000011110000100010011

       - Next Round Left 32 Bits:  10110001101000100100100110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010110000011110000100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001101000100100100110001111

       - Right 32 Bits:            01100010110000011110000100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       01100010110000011110000100010011
          - S-Box Result:     00001110010110101100101010100001   [per every group of 4-bits]
          - Split Into Two:   0000111001011010 [L] 1100101010100001 [R]
          - Swap Halves:      11001010101000010000111001011010
          - Bit Inversion:    00110101010111101111000110100101
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     01001011000010000111111110000110

          - FUNCTION OUTPUT:  01001011000010000111111110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001101000100100100110001111

       - FUNCTION OUTPUT:          01001011000010000111111110000110

       - Left XOR FUNCTION OUTPUT: 11111010101010100011011000001001

       - Next Round Left 32 Bits:  01100010110000011110000100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010101010100011011000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010110000011110000100010011

       - Right 32 Bits:            11111010101010100011011000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       11111010101010100011011000001001
          - S-Box Result:     10110100010001000001000011110011   [per every group of 4-bits]
          - Split Into Two:   1011010001000100 [L] 0001000011110011 [R]
          - Swap Halves:      00010000111100111011010001000100
          - Bit Inversion:    11101111000011000100101110111011
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     10111101010111111110110101000010

          - FUNCTION OUTPUT:  10111101010111111110110101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010110000011110000100010011

       - FUNCTION OUTPUT:          10111101010111111110110101000010

       - Left XOR FUNCTION OUTPUT: 11011111100111100000110001010001

       - Next Round Left 32 Bits:  11111010101010100011011000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111100111100000110001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010101010100011011000001001

       - Right 32 Bits:            11011111100111100000110001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       11011111100111100000110001010001
          - S-Box Result:     01101011001111001111010110011010   [per every group of 4-bits]
          - Split Into Two:   0110101100111100 [L] 1111010110011010 [R]
          - Swap Halves:      11110101100110100110101100111100
          - Bit Inversion:    00001010011001011001010011000011
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     01010001001111000111011110001011

          - FUNCTION OUTPUT:  01010001001111000111011110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010101010100011011000001001

       - FUNCTION OUTPUT:          01010001001111000111011110001011

       - Left XOR FUNCTION OUTPUT: 10101011100101100100000110000010

       - Next Round Left 32 Bits:  11011111100111100000110001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011100101100100000110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111100111100000110001010001

       - Right 32 Bits:            10101011100101100100000110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       10101011100101100100000110000010
          - S-Box Result:     01001000001100000111101000101110   [per every group of 4-bits]
          - Split Into Two:   0100100000110000 [L] 0111101000101110 [R]
          - Swap Halves:      01111010001011100100100000110000
          - Bit Inversion:    10000101110100011011011111001111
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     11011101110010011101111010110101

          - FUNCTION OUTPUT:  11011101110010011101111010110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111100111100000110001010001

       - FUNCTION OUTPUT:          11011101110010011101111010110101

       - Left XOR FUNCTION OUTPUT: 00000010010101111101001011100100

       - Next Round Left 32 Bits:  10101011100101100100000110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010010101111101001011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011100101100100000110000010

       - Right 32 Bits:            00000010010101111101001011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       00000010010101111101001011100100
          - S-Box Result:     11111110100111010110111011000111   [per every group of 4-bits]
          - Split Into Two:   1111111010011101 [L] 0110111011000111 [R]
          - Swap Halves:      01101110110001111111111010011101
          - Bit Inversion:    10010001001110000000000101100010
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     11001111111000100111100100111100

          - FUNCTION OUTPUT:  11001111111000100111100100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011100101100100000110000010

       - FUNCTION OUTPUT:          11001111111000100111100100111100

       - Left XOR FUNCTION OUTPUT: 01100100011101000011100010111110

       - Next Round Left 32 Bits:  00000010010101111101001011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100011101000011100010111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110010001110100001110001011111000000010010101111101001011100100

 > Processed Block:     0110010001110100001110001011111000000010010101111101001011100100


Ciphertext Block 3: 1010111100010000010010000000010011000000100000100100001111010010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111000100000100100000000100

       - Right 32 Bits:            11000000100000100100001111010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       11000000100000100100001111010010
          - S-Box Result:     01011111001011100111000101101110   [per every group of 4-bits]
          - Split Into Two:   0101111100101110 [L] 0111000101101110 [R]
          - Swap Halves:      01110001011011100101111100101110
          - Bit Inversion:    10001110100100011010000011010001
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     10010110111110001101101010001001

          - FUNCTION OUTPUT:  10010110111110001101101010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111000100000100100000000100

       - FUNCTION OUTPUT:          10010110111110001101101010001001

       - Left XOR FUNCTION OUTPUT: 00111001111010001001001010001101

       - Next Round Left 32 Bits:  11000000100000100100001111010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001111010001001001010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000100000100100001111010010

       - Right 32 Bits:            00111001111010001001001010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       00111001111010001001001010001101
          - S-Box Result:     00010011110000100011111000100110   [per every group of 4-bits]
          - Split Into Two:   0001001111000010 [L] 0011111000100110 [R]
          - Swap Halves:      00111110001001100001001111000010
          - Bit Inversion:    11000001110110011110110000111101
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     00011011101000011011001001100011

          - FUNCTION OUTPUT:  00011011101000011011001001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000100000100100001111010010

       - FUNCTION OUTPUT:          00011011101000011011001001100011

       - Left XOR FUNCTION OUTPUT: 11011011001000111111000110110001

       - Next Round Left 32 Bits:  00111001111010001001001010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011001000111111000110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001111010001001001010001101

       - Right 32 Bits:            11011011001000111111000110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       11011011001000111111000110110001
          - S-Box Result:     01101000111000011011101010001010   [per every group of 4-bits]
          - Split Into Two:   0110100011100001 [L] 1011101010001010 [R]
          - Swap Halves:      10111010100010100110100011100001
          - Bit Inversion:    01000101011101011001011100011110
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     00001111001010111100000100001100

          - FUNCTION OUTPUT:  00001111001010111100000100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001111010001001001010001101

       - FUNCTION OUTPUT:          00001111001010111100000100001100

       - Left XOR FUNCTION OUTPUT: 00110110110000110101001110000001

       - Next Round Left 32 Bits:  11011011001000111111000110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110110000110101001110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011001000111111000110110001

       - Right 32 Bits:            00110110110000110101001110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       00110110110000110101001110000001
          - S-Box Result:     00010000010100011001000100101010   [per every group of 4-bits]
          - Split Into Two:   0001000001010001 [L] 1001000100101010 [R]
          - Swap Halves:      10010001001010100001000001010001
          - Bit Inversion:    01101110110101011110111110101110
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     00010100110000111011110000110101

          - FUNCTION OUTPUT:  00010100110000111011110000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011001000111111000110110001

       - FUNCTION OUTPUT:          00010100110000111011110000110101

       - Left XOR FUNCTION OUTPUT: 11001111111000000100110110000100

       - Next Round Left 32 Bits:  00110110110000110101001110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111111000000100110110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110110000110101001110000001

       - Right 32 Bits:            11001111111000000100110110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       11001111111000000100110110000100
          - S-Box Result:     01011011110011110111011000100111   [per every group of 4-bits]
          - Split Into Two:   0101101111001111 [L] 0111011000100111 [R]
          - Swap Halves:      01110110001001110101101111001111
          - Bit Inversion:    10001001110110001010010000110000
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     10010011010011111011100111111000

          - FUNCTION OUTPUT:  10010011010011111011100111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110110000110101001110000001

       - FUNCTION OUTPUT:          10010011010011111011100111111000

       - Left XOR FUNCTION OUTPUT: 10100101100011001110101001111001

       - Next Round Left 32 Bits:  11001111111000000100110110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101100011001110101001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111111000000100110110000100

       - Right 32 Bits:            10100101100011001110101001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       10100101100011001110101001111001
          - S-Box Result:     01001001001001011100010011010011   [per every group of 4-bits]
          - Split Into Two:   0100100100100101 [L] 1100010011010011 [R]
          - Swap Halves:      11000100110100110100100100100101
          - Bit Inversion:    00111011001011001011011011011010
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     11100001111010010010011010110000

          - FUNCTION OUTPUT:  11100001111010010010011010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111111000000100110110000100

       - FUNCTION OUTPUT:          11100001111010010010011010110000

       - Left XOR FUNCTION OUTPUT: 00101110000010010110101100110100

       - Next Round Left 32 Bits:  10100101100011001110101001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110000010010110101100110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101100011001110101001111001

       - Right 32 Bits:            00101110000010010110101100110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       00101110000010010110101100110100
          - S-Box Result:     11101100111100110000100000010111   [per every group of 4-bits]
          - Split Into Two:   1110110011110011 [L] 0000100000010111 [R]
          - Swap Halves:      00001000000101111110110011110011
          - Bit Inversion:    11110111111010000001001100001100
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     10111101100010011101100001110110

          - FUNCTION OUTPUT:  10111101100010011101100001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101100011001110101001111001

       - FUNCTION OUTPUT:          10111101100010011101100001110110

       - Left XOR FUNCTION OUTPUT: 00011000000001010011001000001111

       - Next Round Left 32 Bits:  00101110000010010110101100110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000000001010011001000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110000010010110101100110100

       - Right 32 Bits:            00011000000001010011001000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00011000000001010011001000001111
          - S-Box Result:     10100010111110010001111011111011   [per every group of 4-bits]
          - Split Into Two:   1010001011111001 [L] 0001111011111011 [R]
          - Swap Halves:      00011110111110111010001011111001
          - Bit Inversion:    11100001000001000101110100000110
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     10011111011111010011010101011100

          - FUNCTION OUTPUT:  10011111011111010011010101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110000010010110101100110100

       - FUNCTION OUTPUT:          10011111011111010011010101011100

       - Left XOR FUNCTION OUTPUT: 10110001011101000101111001101000

       - Next Round Left 32 Bits:  00011000000001010011001000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001011101000101111001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000000001010011001000001111

       - Right 32 Bits:            10110001011101000101111001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       10110001011101000101111001101000
          - S-Box Result:     10001010110101111001110000000010   [per every group of 4-bits]
          - Split Into Two:   1000101011010111 [L] 1001110000000010 [R]
          - Swap Halves:      10011100000000101000101011010111
          - Bit Inversion:    01100011111111010111010100101000
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     01110001101001010000111100110010

          - FUNCTION OUTPUT:  01110001101001010000111100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000000001010011001000001111

       - FUNCTION OUTPUT:          01110001101001010000111100110010

       - Left XOR FUNCTION OUTPUT: 01101001101000000011110100111101

       - Next Round Left 32 Bits:  10110001011101000101111001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001101000000011110100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001011101000101111001101000

       - Right 32 Bits:            01101001101000000011110100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       01101001101000000011110100111101
          - S-Box Result:     00000011010011110001011000010110   [per every group of 4-bits]
          - Split Into Two:   0000001101001111 [L] 0001011000010110 [R]
          - Swap Halves:      00010110000101100000001101001111
          - Bit Inversion:    11101001111010011111110010110000
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     00110010101100111110011000101110

          - FUNCTION OUTPUT:  00110010101100111110011000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001011101000101111001101000

       - FUNCTION OUTPUT:          00110010101100111110011000101110

       - Left XOR FUNCTION OUTPUT: 10000011110001111011100001000110

       - Next Round Left 32 Bits:  01101001101000000011110100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011110001111011100001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001101000000011110100111101

       - Right 32 Bits:            10000011110001111011100001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       10000011110001111011100001000110
          - S-Box Result:     00100001010111011000001001110000   [per every group of 4-bits]
          - Split Into Two:   0010000101011101 [L] 1000001001110000 [R]
          - Swap Halves:      10000010011100000010000101011101
          - Bit Inversion:    01111101100011111101111010100010
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     00110101110100010100010001100100

          - FUNCTION OUTPUT:  00110101110100010100010001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001101000000011110100111101

       - FUNCTION OUTPUT:          00110101110100010100010001100100

       - Left XOR FUNCTION OUTPUT: 01011100011100010111100101011001

       - Next Round Left 32 Bits:  10000011110001111011100001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100011100010111100101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011110001111011100001000110

       - Right 32 Bits:            01011100011100010111100101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       01011100011100010111100101011001
          - S-Box Result:     10010101110110101101001110010011   [per every group of 4-bits]
          - Split Into Two:   1001010111011010 [L] 1101001110010011 [R]
          - Swap Halves:      11010011100100111001010111011010
          - Bit Inversion:    00101100011011000110101000100101
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     01010010001110101110010000000110

          - FUNCTION OUTPUT:  01010010001110101110010000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011110001111011100001000110

       - FUNCTION OUTPUT:          01010010001110101110010000000110

       - Left XOR FUNCTION OUTPUT: 11010001111111010101110001000000

       - Next Round Left 32 Bits:  01011100011100010111100101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001111111010101110001000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100011100010111100101011001

       - Right 32 Bits:            11010001111111010101110001000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       11010001111111010101110001000000
          - S-Box Result:     01101010101101101001010101111111   [per every group of 4-bits]
          - Split Into Two:   0110101010110110 [L] 1001010101111111 [R]
          - Swap Halves:      10010101011111110110101010110110
          - Bit Inversion:    01101010100000001001010101001001
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     00111000110100110011001110110000

          - FUNCTION OUTPUT:  00111000110100110011001110110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100011100010111100101011001

       - FUNCTION OUTPUT:          00111000110100110011001110110000

       - Left XOR FUNCTION OUTPUT: 01100100101000100100101011101001

       - Next Round Left 32 Bits:  11010001111111010101110001000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100101000100100101011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001111111010101110001000000

       - Right 32 Bits:            01100100101000100100101011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       01100100101000100100101011101001
          - S-Box Result:     00000111010011100111010011000011   [per every group of 4-bits]
          - Split Into Two:   0000011101001110 [L] 0111010011000011 [R]
          - Swap Halves:      01110100110000110000011101001110
          - Bit Inversion:    10001011001111001111100010110001
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     11010000011001010001101111111001

          - FUNCTION OUTPUT:  11010000011001010001101111111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001111111010101110001000000

       - FUNCTION OUTPUT:          11010000011001010001101111111001

       - Left XOR FUNCTION OUTPUT: 00000001100110000100011110111001

       - Next Round Left 32 Bits:  01100100101000100100101011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001100110000100011110111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100101000100100101011101001

       - Right 32 Bits:            00000001100110000100011110111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       00000001100110000100011110111001
          - S-Box Result:     11111010001100100111110110000011   [per every group of 4-bits]
          - Split Into Two:   1111101000110010 [L] 0111110110000011 [R]
          - Swap Halves:      01111101100000111111101000110010
          - Bit Inversion:    10000010011111000000010111001101
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     11011010011001000110110010110111

          - FUNCTION OUTPUT:  11011010011001000110110010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100101000100100101011101001

       - FUNCTION OUTPUT:          11011010011001000110110010110111

       - Left XOR FUNCTION OUTPUT: 10111110110001100010011001011110

       - Next Round Left 32 Bits:  00000001100110000100011110111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110110001100010011001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001100110000100011110111001

       - Right 32 Bits:            10111110110001100010011001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       10111110110001100010011001011110
          - S-Box Result:     10001100010100001110000010011100   [per every group of 4-bits]
          - Split Into Two:   1000110001010000 [L] 1110000010011100 [R]
          - Swap Halves:      11100000100111001000110001010000
          - Bit Inversion:    00011111011000110111001110101111
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     01000001101110010000101111110001

          - FUNCTION OUTPUT:  01000001101110010000101111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001100110000100011110111001

       - FUNCTION OUTPUT:          01000001101110010000101111110001

       - Left XOR FUNCTION OUTPUT: 01000000001000010100110001001000

       - Next Round Left 32 Bits:  10111110110001100010011001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000001000010100110001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100000000100001010011000100100010111110110001100010011001011110

 > Processed Block:     0100000000100001010011000100100010111110110001100010011001011110


Ciphertext Block 4: 0000000101111010111001100110010111000001011110100101101010011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001011110101110011001100101

       - Right 32 Bits:            11000001011110100101101010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       11000001011110100101101010011100
          - S-Box Result:     01011010110101001001010000110101   [per every group of 4-bits]
          - Split Into Two:   0101101011010100 [L] 1001010000110101 [R]
          - Swap Halves:      10010100001101010101101011010100
          - Bit Inversion:    01101011110010101010010100101011
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     01110011101000111101111101110011

          - FUNCTION OUTPUT:  01110011101000111101111101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001011110101110011001100101

       - FUNCTION OUTPUT:          01110011101000111101111101110011

       - Left XOR FUNCTION OUTPUT: 01110010110110010011100100010110

       - Next Round Left 32 Bits:  11000001011110100101101010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010110110010011100100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001011110100101101010011100

       - Right 32 Bits:            01110010110110010011100100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       01110010110110010011100100010110
          - S-Box Result:     11011110011000110001001110100000   [per every group of 4-bits]
          - Split Into Two:   1101111001100011 [L] 0001001110100000 [R]
          - Swap Halves:      00010011101000001101111001100011
          - Bit Inversion:    11101100010111110010000110011100
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     00110110001001110111111111000010

          - FUNCTION OUTPUT:  00110110001001110111111111000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001011110100101101010011100

       - FUNCTION OUTPUT:          00110110001001110111111111000010

       - Left XOR FUNCTION OUTPUT: 11110111010111010010010101011110

       - Next Round Left 32 Bits:  01110010110110010011100100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111010111010010010101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010110110010011100100010110

       - Right 32 Bits:            11110111010111010010010101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       11110111010111010010010101011110
          - S-Box Result:     10111101100101101110100110011100   [per every group of 4-bits]
          - Split Into Two:   1011110110010110 [L] 1110100110011100 [R]
          - Swap Halves:      11101001100111001011110110010110
          - Bit Inversion:    00010110011000110100001001101001
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     01011100001111010001010001111011

          - FUNCTION OUTPUT:  01011100001111010001010001111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010110110010011100100010110

       - FUNCTION OUTPUT:          01011100001111010001010001111011

       - Left XOR FUNCTION OUTPUT: 00101110111001000010110101101101

       - Next Round Left 32 Bits:  11110111010111010010010101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110111001000010110101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111010111010010010101011110

       - Right 32 Bits:            00101110111001000010110101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       00101110111001000010110101101101
          - S-Box Result:     11101100110001111110011000000110   [per every group of 4-bits]
          - Split Into Two:   1110110011000111 [L] 1110011000000110 [R]
          - Swap Halves:      11100110000001101110110011000111
          - Bit Inversion:    00011001111110010001001100111000
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     01100011111011110100000010100011

          - FUNCTION OUTPUT:  01100011111011110100000010100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111010111010010010101011110

       - FUNCTION OUTPUT:          01100011111011110100000010100011

       - Left XOR FUNCTION OUTPUT: 10010100101100100110010111111101

       - Next Round Left 32 Bits:  00101110111001000010110101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100101100100110010111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110111001000010110101101101

       - Right 32 Bits:            10010100101100100110010111111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       10010100101100100110010111111101
          - S-Box Result:     00110111100011100000100110110110   [per every group of 4-bits]
          - Split Into Two:   0011011110001110 [L] 0000100110110110 [R]
          - Swap Halves:      00001001101101100011011110001110
          - Bit Inversion:    11110110010010011100100001110001
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     11101100110111101101010110111001

          - FUNCTION OUTPUT:  11101100110111101101010110111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110111001000010110101101101

       - FUNCTION OUTPUT:          11101100110111101101010110111001

       - Left XOR FUNCTION OUTPUT: 11000010001110101111100011010100

       - Next Round Left 32 Bits:  10010100101100100110010111111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010001110101111100011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100101100100110010111111101

       - Right 32 Bits:            11000010001110101111100011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       11000010001110101111100011010100
          - S-Box Result:     01011110000101001011001001100111   [per every group of 4-bits]
          - Split Into Two:   0101111000010100 [L] 1011001001100111 [R]
          - Swap Halves:      10110010011001110101111000010100
          - Bit Inversion:    01001101100110001010000111101011
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     10010111010111010011000110000001

          - FUNCTION OUTPUT:  10010111010111010011000110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100101100100110010111111101

       - FUNCTION OUTPUT:          10010111010111010011000110000001

       - Left XOR FUNCTION OUTPUT: 00000011111011110101010001111100

       - Next Round Left 32 Bits:  11000010001110101111100011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011111011110101010001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010001110101111100011010100

       - Right 32 Bits:            00000011111011110101010001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       00000011111011110101010001111100
          - S-Box Result:     11110001110010111001011111010101   [per every group of 4-bits]
          - Split Into Two:   1111000111001011 [L] 1001011111010101 [R]
          - Swap Halves:      10010111110101011111000111001011
          - Bit Inversion:    01101000001010100000111000110100
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     00100010010010111100010101001110

          - FUNCTION OUTPUT:  00100010010010111100010101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010001110101111100011010100

       - FUNCTION OUTPUT:          00100010010010111100010101001110

       - Left XOR FUNCTION OUTPUT: 11100000011100010011110110011010

       - Next Round Left 32 Bits:  00000011111011110101010001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000011100010011110110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011111011110101010001111100

       - Right 32 Bits:            11100000011100010011110110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       11100000011100010011110110011010
          - S-Box Result:     11001111110110100001011000110100   [per every group of 4-bits]
          - Split Into Two:   1100111111011010 [L] 0001011000110100 [R]
          - Swap Halves:      00010110001101001100111111011010
          - Bit Inversion:    11101001110010110011000000100101
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     10010111101100100101100001111111

          - FUNCTION OUTPUT:  10010111101100100101100001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011111011110101010001111100

       - FUNCTION OUTPUT:          10010111101100100101100001111111

       - Left XOR FUNCTION OUTPUT: 10010100010111010000110000000011

       - Next Round Left 32 Bits:  11100000011100010011110110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100010111010000110000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000011100010011110110011010

       - Right 32 Bits:            10010100010111010000110000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       10010100010111010000110000000011
          - S-Box Result:     00110111100101101111010111110001   [per every group of 4-bits]
          - Split Into Two:   0011011110010110 [L] 1111010111110001 [R]
          - Swap Halves:      11110101111100010011011110010110
          - Bit Inversion:    00001010000011101100100001101001
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     00011000010101101011001001110011

          - FUNCTION OUTPUT:  00011000010101101011001001110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000011100010011110110011010

       - FUNCTION OUTPUT:          00011000010101101011001001110011

       - Left XOR FUNCTION OUTPUT: 11111000001001111000111111101001

       - Next Round Left 32 Bits:  10010100010111010000110000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000001001111000111111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100010111010000110000000011

       - Right 32 Bits:            11111000001001111000111111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       11111000001001111000111111101001
          - S-Box Result:     10110010111011010010101111000011   [per every group of 4-bits]
          - Split Into Two:   1011001011101101 [L] 0010101111000011 [R]
          - Swap Halves:      00101011110000111011001011101101
          - Bit Inversion:    11010100001111000100110100010010
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     00001111011001100101011110001100

          - FUNCTION OUTPUT:  00001111011001100101011110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100010111010000110000000011

       - FUNCTION OUTPUT:          00001111011001100101011110001100

       - Left XOR FUNCTION OUTPUT: 10011011001110110101101110001111

       - Next Round Left 32 Bits:  11111000001001111000111111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011001110110101101110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000001001111000111111101001

       - Right 32 Bits:            10011011001110110101101110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       10011011001110110101101110001111
          - S-Box Result:     00111000000110001001100000101011   [per every group of 4-bits]
          - Split Into Two:   0011100000011000 [L] 1001100000101011 [R]
          - Swap Halves:      10011000001010110011100000011000
          - Bit Inversion:    01100111110101001100011111100111
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     00101111100010100101110100100001

          - FUNCTION OUTPUT:  00101111100010100101110100100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000001001111000111111101001

       - FUNCTION OUTPUT:          00101111100010100101110100100001

       - Left XOR FUNCTION OUTPUT: 11010111101011011101001011001000

       - Next Round Left 32 Bits:  10011011001110110101101110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111101011011101001011001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011001110110101101110001111

       - Right 32 Bits:            11010111101011011101001011001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       11010111101011011101001011001000
          - S-Box Result:     01101101010001100110111001010010   [per every group of 4-bits]
          - Split Into Two:   0110110101000110 [L] 0110111001010010 [R]
          - Swap Halves:      01101110010100100110110101000110
          - Bit Inversion:    10010001101011011001001010111001
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     11101111111110110001110010011010

          - FUNCTION OUTPUT:  11101111111110110001110010011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011001110110101101110001111

       - FUNCTION OUTPUT:          11101111111110110001110010011010

       - Left XOR FUNCTION OUTPUT: 01110100110000000100011100010101

       - Next Round Left 32 Bits:  11010111101011011101001011001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100110000000100011100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111101011011101001011001000

       - Right 32 Bits:            01110100110000000100011100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       01110100110000000100011100010101
          - S-Box Result:     11010111010111110111110110101001   [per every group of 4-bits]
          - Split Into Two:   1101011101011111 [L] 0111110110101001 [R]
          - Swap Halves:      01111101101010011101011101011111
          - Bit Inversion:    10000010010101100010100010100000
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     11010000000001011000111001011001

          - FUNCTION OUTPUT:  11010000000001011000111001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111101011011101001011001000

       - FUNCTION OUTPUT:          11010000000001011000111001011001

       - Left XOR FUNCTION OUTPUT: 00000111101010000101110010010001

       - Next Round Left 32 Bits:  01110100110000000100011100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111101010000101110010010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100110000000100011100010101

       - Right 32 Bits:            00000111101010000101110010010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       00000111101010000101110010010001
          - S-Box Result:     11111101010000101001010100111010   [per every group of 4-bits]
          - Split Into Two:   1111110101000010 [L] 1001010100111010 [R]
          - Swap Halves:      10010101001110101111110101000010
          - Bit Inversion:    01101010110001010000001010111101
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     00110001100111001110000111110101

          - FUNCTION OUTPUT:  00110001100111001110000111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100110000000100011100010101

       - FUNCTION OUTPUT:          00110001100111001110000111110101

       - Left XOR FUNCTION OUTPUT: 01000101010111001010011011100000

       - Next Round Left 32 Bits:  00000111101010000101110010010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101010111001010011011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111101010000101110010010001

       - Right 32 Bits:            01000101010111001010011011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       01000101010111001010011011100000
          - S-Box Result:     01111001100101010100000011001111   [per every group of 4-bits]
          - Split Into Two:   0111100110010101 [L] 0100000011001111 [R]
          - Swap Halves:      01000000110011110111100110010101
          - Bit Inversion:    10111111001100001000011001101010
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     11100111001010001110111100010000

          - FUNCTION OUTPUT:  11100111001010001110111100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111101010000101110010010001

       - FUNCTION OUTPUT:          11100111001010001110111100010000

       - Left XOR FUNCTION OUTPUT: 11100000100000001011001110000001

       - Next Round Left 32 Bits:  01000101010111001010011011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000100000001011001110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101010111001010011011100000

       - Right 32 Bits:            11100000100000001011001110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       11100000100000001011001110000001
          - S-Box Result:     11001111001011111000000100101010   [per every group of 4-bits]
          - Split Into Two:   1100111100101111 [L] 1000000100101010 [R]
          - Swap Halves:      10000001001010101100111100101111
          - Bit Inversion:    01111110110101010011000011010000
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     00100000000011110100100010001110

          - FUNCTION OUTPUT:  00100000000011110100100010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101010111001010011011100000

       - FUNCTION OUTPUT:          00100000000011110100100010001110

       - Left XOR FUNCTION OUTPUT: 01100101010100111110111001101110

       - Next Round Left 32 Bits:  11100000100000001011001110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101010100111110111001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110010101010011111011100110111011100000100000001011001110000001

 > Processed Block:     0110010101010011111011100110111011100000100000001011001110000001


Ciphertext Block 5: 0100001010111110011001100011101011001000100110100001010101111001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010101111100110011000111010

       - Right 32 Bits:            11001000100110100001010101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       11001000100110100001010101111001
          - S-Box Result:     01010010001101001010100111010011   [per every group of 4-bits]
          - Split Into Two:   0101001000110100 [L] 1010100111010011 [R]
          - Swap Halves:      10101001110100110101001000110100
          - Bit Inversion:    01010110001011001010110111001011
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     01001110010001011101011110010011

          - FUNCTION OUTPUT:  01001110010001011101011110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010101111100110011000111010

       - FUNCTION OUTPUT:          01001110010001011101011110010011

       - Left XOR FUNCTION OUTPUT: 00001100111110111011000110101001

       - Next Round Left 32 Bits:  11001000100110100001010101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100111110111011000110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000100110100001010101111001

       - Right 32 Bits:            00001100111110111011000110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       00001100111110111011000110101001
          - S-Box Result:     11110101101110001000101001000011   [per every group of 4-bits]
          - Split Into Two:   1111010110111000 [L] 1000101001000011 [R]
          - Swap Halves:      10001010010000111111010110111000
          - Bit Inversion:    01110101101111000000101001000111
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     10101111110001000101010000011001

          - FUNCTION OUTPUT:  10101111110001000101010000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000100110100001010101111001

       - FUNCTION OUTPUT:          10101111110001000101010000011001

       - Left XOR FUNCTION OUTPUT: 01100111010111100100000101100000

       - Next Round Left 32 Bits:  00001100111110111011000110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111010111100100000101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100111110111011000110101001

       - Right 32 Bits:            01100111010111100100000101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01100111010111100100000101100000
          - S-Box Result:     00001101100111000111101000001111   [per every group of 4-bits]
          - Split Into Two:   0000110110011100 [L] 0111101000001111 [R]
          - Swap Halves:      01111010000011110000110110011100
          - Bit Inversion:    10000101111100001111001001100011
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     11001111101011101010010001110001

          - FUNCTION OUTPUT:  11001111101011101010010001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100111110111011000110101001

       - FUNCTION OUTPUT:          11001111101011101010010001110001

       - Left XOR FUNCTION OUTPUT: 11000011010101010001010111011000

       - Next Round Left 32 Bits:  01100111010111100100000101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011010101010001010111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111010111100100000101100000

       - Right 32 Bits:            11000011010101010001010111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       11000011010101010001010111011000
          - S-Box Result:     01010001100110011010100101100010   [per every group of 4-bits]
          - Split Into Two:   0101000110011001 [L] 1010100101100010 [R]
          - Swap Halves:      10101001011000100101000110011001
          - Bit Inversion:    01010110100111011010111001100110
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     00101100100010111111110111111101

          - FUNCTION OUTPUT:  00101100100010111111110111111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111010111100100000101100000

       - FUNCTION OUTPUT:          00101100100010111111110111111101

       - Left XOR FUNCTION OUTPUT: 01001011110101011011110010011101

       - Next Round Left 32 Bits:  11000011010101010001010111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011110101011011110010011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011010101010001010111011000

       - Right 32 Bits:            01001011110101011011110010011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       01001011110101011011110010011101
          - S-Box Result:     01111000011010011000010100110110   [per every group of 4-bits]
          - Split Into Two:   0111100001101001 [L] 1000010100110110 [R]
          - Swap Halves:      10000101001101100111100001101001
          - Bit Inversion:    01111010110010011000011110010110
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     01100000010111101001101001011110

          - FUNCTION OUTPUT:  01100000010111101001101001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011010101010001010111011000

       - FUNCTION OUTPUT:          01100000010111101001101001011110

       - Left XOR FUNCTION OUTPUT: 10100011000010111000111110000110

       - Next Round Left 32 Bits:  01001011110101011011110010011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011000010111000111110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011110101011011110010011101

       - Right 32 Bits:            10100011000010111000111110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       10100011000010111000111110000110
          - S-Box Result:     01000001111110000010101100100000   [per every group of 4-bits]
          - Split Into Two:   0100000111111000 [L] 0010101100100000 [R]
          - Swap Halves:      00101011001000000100000111111000
          - Bit Inversion:    11010100110111111011111000000111
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     00001110000110100010111001101101

          - FUNCTION OUTPUT:  00001110000110100010111001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011110101011011110010011101

       - FUNCTION OUTPUT:          00001110000110100010111001101101

       - Left XOR FUNCTION OUTPUT: 01000101110011111001001011110000

       - Next Round Left 32 Bits:  10100011000010111000111110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101110011111001001011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011000010111000111110000110

       - Right 32 Bits:            01000101110011111001001011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       01000101110011111001001011110000
          - S-Box Result:     01111001010110110011111010111111   [per every group of 4-bits]
          - Split Into Two:   0111100101011011 [L] 0011111010111111 [R]
          - Swap Halves:      00111110101111110111100101011011
          - Bit Inversion:    11000001010000001000011010100100
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     10001011001000010100110111011110

          - FUNCTION OUTPUT:  10001011001000010100110111011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011000010111000111110000110

       - FUNCTION OUTPUT:          10001011001000010100110111011110

       - Left XOR FUNCTION OUTPUT: 00101000001010101100001001011000

       - Next Round Left 32 Bits:  01000101110011111001001011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000001010101100001001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101110011111001001011110000

       - Right 32 Bits:            00101000001010101100001001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00101000001010101100001001011000
          - S-Box Result:     11100010111001000101111010010010   [per every group of 4-bits]
          - Split Into Two:   1110001011100100 [L] 0101111010010010 [R]
          - Swap Halves:      01011110100100101110001011100100
          - Bit Inversion:    10100001011011010001110100011011
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11011111000101000111010101000001

          - FUNCTION OUTPUT:  11011111000101000111010101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101110011111001001011110000

       - FUNCTION OUTPUT:          11011111000101000111010101000001

       - Left XOR FUNCTION OUTPUT: 10011010110110111110011110110001

       - Next Round Left 32 Bits:  00101000001010101100001001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010110110111110011110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000001010101100001001011000

       - Right 32 Bits:            10011010110110111110011110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       10011010110110111110011110110001
          - S-Box Result:     00110100011010001100110110001010   [per every group of 4-bits]
          - Split Into Two:   0011010001101000 [L] 1100110110001010 [R]
          - Swap Halves:      11001101100010100011010001101000
          - Bit Inversion:    00110010011101011100101110010111
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     00100000001011011011000110001101

          - FUNCTION OUTPUT:  00100000001011011011000110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000001010101100001001011000

       - FUNCTION OUTPUT:          00100000001011011011000110001101

       - Left XOR FUNCTION OUTPUT: 00001000000001110111001111010101

       - Next Round Left 32 Bits:  10011010110110111110011110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000001110111001111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010110110111110011110110001

       - Right 32 Bits:            00001000000001110111001111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       00001000000001110111001111010101
          - S-Box Result:     11110010111111011101000101101001   [per every group of 4-bits]
          - Split Into Two:   1111001011111101 [L] 1101000101101001 [R]
          - Swap Halves:      11010001011010011111001011111101
          - Bit Inversion:    00101110100101100000110100000010
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     11110101110011000001011110011100

          - FUNCTION OUTPUT:  11110101110011000001011110011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010110110111110011110110001

       - FUNCTION OUTPUT:          11110101110011000001011110011100

       - Left XOR FUNCTION OUTPUT: 01101111000101111111000000101101

       - Next Round Left 32 Bits:  00001000000001110111001111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111000101111111000000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000001110111001111010101

       - Right 32 Bits:            01101111000101111111000000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       01101111000101111111000000101101
          - S-Box Result:     00001011101011011011111111100110   [per every group of 4-bits]
          - Split Into Two:   0000101110101101 [L] 1011111111100110 [R]
          - Swap Halves:      10111111111001100000101110101101
          - Bit Inversion:    01000000000110011111010001010010
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     00001000010001110110111010010100

          - FUNCTION OUTPUT:  00001000010001110110111010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000001110111001111010101

       - FUNCTION OUTPUT:          00001000010001110110111010010100

       - Left XOR FUNCTION OUTPUT: 00000000010000000001110101000001

       - Next Round Left 32 Bits:  01101111000101111111000000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000010000000001110101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111000101111111000000101101

       - Right 32 Bits:            00000000010000000001110101000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       00000000010000000001110101000001
          - S-Box Result:     11111111011111111010011001111010   [per every group of 4-bits]
          - Split Into Two:   1111111101111111 [L] 1010011001111010 [R]
          - Swap Halves:      10100110011110101111111101111111
          - Bit Inversion:    01011001100001010000000010000000
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     00100111110100111000111010100011

          - FUNCTION OUTPUT:  00100111110100111000111010100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111000101111111000000101101

       - FUNCTION OUTPUT:          00100111110100111000111010100011

       - Left XOR FUNCTION OUTPUT: 01001000110001000111111010001110

       - Next Round Left 32 Bits:  00000000010000000001110101000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000110001000111111010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000010000000001110101000001

       - Right 32 Bits:            01001000110001000111111010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       01001000110001000111111010001110
          - S-Box Result:     01110010010101111101110000101100   [per every group of 4-bits]
          - Split Into Two:   0111001001010111 [L] 1101110000101100 [R]
          - Swap Halves:      11011100001011000111001001010111
          - Bit Inversion:    00100011110100111000110110101000
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     01110001100000000010101101010001

          - FUNCTION OUTPUT:  01110001100000000010101101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000010000000001110101000001

       - FUNCTION OUTPUT:          01110001100000000010101101010001

       - Left XOR FUNCTION OUTPUT: 01110001110000000011011000010000

       - Next Round Left 32 Bits:  01001000110001000111111010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001110000000011011000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000110001000111111010001110

       - Right 32 Bits:            01110001110000000011011000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       01110001110000000011011000010000
          - S-Box Result:     11011010010111110001000010101111   [per every group of 4-bits]
          - Split Into Two:   1101101001011111 [L] 0001000010101111 [R]
          - Swap Halves:      00010000101011111101101001011111
          - Bit Inversion:    11101111010100000010010110100000
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     10110100000010011100011011101000

          - FUNCTION OUTPUT:  10110100000010011100011011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000110001000111111010001110

       - FUNCTION OUTPUT:          10110100000010011100011011101000

       - Left XOR FUNCTION OUTPUT: 11111100110011011011100001100110

       - Next Round Left 32 Bits:  01110001110000000011011000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100110011011011100001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001110000000011011000010000

       - Right 32 Bits:            11111100110011011011100001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       11111100110011011011100001100110
          - S-Box Result:     10110101010101101000001000000000   [per every group of 4-bits]
          - Split Into Two:   1011010101010110 [L] 1000001000000000 [R]
          - Swap Halves:      10000010000000001011010101010110
          - Bit Inversion:    01111101111111110100101010101001
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     00100101111001110010001111010011

          - FUNCTION OUTPUT:  00100101111001110010001111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001110000000011011000010000

       - FUNCTION OUTPUT:          00100101111001110010001111010011

       - Left XOR FUNCTION OUTPUT: 01010100001001110001010111000011

       - Next Round Left 32 Bits:  11111100110011011011100001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100001001110001010111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100110011011011100001100110

       - Right 32 Bits:            01010100001001110001010111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       01010100001001110001010111000011
          - S-Box Result:     10010111111011011010100101010001   [per every group of 4-bits]
          - Split Into Two:   1001011111101101 [L] 1010100101010001 [R]
          - Swap Halves:      10101001010100011001011111101101
          - Bit Inversion:    01010110101011100110100000010010
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     00001000011101000001000001001100

          - FUNCTION OUTPUT:  00001000011101000001000001001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100110011011011100001100110

       - FUNCTION OUTPUT:          00001000011101000001000001001100

       - Left XOR FUNCTION OUTPUT: 11110100101110011010100000101010

       - Next Round Left 32 Bits:  01010100001001110001010111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100101110011010100000101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111010010111001101010000010101001010100001001110001010111000011

 > Processed Block:     1111010010111001101010000010101001010100001001110001010111000011


Ciphertext Block 6: 1001111101111000011011000010010011001001100000000100011011000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111011110000110110000100100

       - Right 32 Bits:            11001001100000000100011011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       11001001100000000100011011000110
          - S-Box Result:     01010011001011110111000001010000   [per every group of 4-bits]
          - Split Into Two:   0101001100101111 [L] 0111000001010000 [R]
          - Swap Halves:      01110000010100000101001100101111
          - Bit Inversion:    10001111101011111010110011010000
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     10010111110001101101011010001000

          - FUNCTION OUTPUT:  10010111110001101101011010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111011110000110110000100100

       - FUNCTION OUTPUT:          10010111110001101101011010001000

       - Left XOR FUNCTION OUTPUT: 00001000101111101011101010101100

       - Next Round Left 32 Bits:  11001001100000000100011011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000101111101011101010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001100000000100011011000110

       - Right 32 Bits:            00001000101111101011101010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       00001000101111101011101010101100
          - S-Box Result:     11110010100011001000010001000101   [per every group of 4-bits]
          - Split Into Two:   1111001010001100 [L] 1000010001000101 [R]
          - Swap Halves:      10000100010001011111001010001100
          - Bit Inversion:    01111011101110100000110101110011
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     10100001110000100101001100101101

          - FUNCTION OUTPUT:  10100001110000100101001100101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001100000000100011011000110

       - FUNCTION OUTPUT:          10100001110000100101001100101101

       - Left XOR FUNCTION OUTPUT: 01101000010000100001010111101011

       - Next Round Left 32 Bits:  00001000101111101011101010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000010000100001010111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000101111101011101010101100

       - Right 32 Bits:            01101000010000100001010111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       01101000010000100001010111101011
          - S-Box Result:     00000010011111101010100111001000   [per every group of 4-bits]
          - Split Into Two:   0000001001111110 [L] 1010100111001000 [R]
          - Swap Halves:      10101001110010000000001001111110
          - Bit Inversion:    01010110001101111111110110000001
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     00011100011010011010101110010011

          - FUNCTION OUTPUT:  00011100011010011010101110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000101111101011101010101100

       - FUNCTION OUTPUT:          00011100011010011010101110010011

       - Left XOR FUNCTION OUTPUT: 00010100110101110001000100111111

       - Next Round Left 32 Bits:  01101000010000100001010111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100110101110001000100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000010000100001010111101011

       - Right 32 Bits:            00010100110101110001000100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       00010100110101110001000100111111
          - S-Box Result:     10100111011011011010101000011011   [per every group of 4-bits]
          - Split Into Two:   1010011101101101 [L] 1010101000011011 [R]
          - Swap Halves:      10101010000110111010011101101101
          - Bit Inversion:    01010101111001000101100010010010
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     00101111111100100000101100001001

          - FUNCTION OUTPUT:  00101111111100100000101100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000010000100001010111101011

       - FUNCTION OUTPUT:          00101111111100100000101100001001

       - Left XOR FUNCTION OUTPUT: 01000111101100000001111011100010

       - Next Round Left 32 Bits:  00010100110101110001000100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111101100000001111011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100110101110001000100111111

       - Right 32 Bits:            01000111101100000001111011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       01000111101100000001111011100010
          - S-Box Result:     01111101100011111010110011001110   [per every group of 4-bits]
          - Split Into Two:   0111110110001111 [L] 1010110011001110 [R]
          - Swap Halves:      10101100110011100111110110001111
          - Bit Inversion:    01010011001100011000001001110000
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     01001001101001101001111110111000

          - FUNCTION OUTPUT:  01001001101001101001111110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100110101110001000100111111

       - FUNCTION OUTPUT:          01001001101001101001111110111000

       - Left XOR FUNCTION OUTPUT: 01011101011100011000111010000111

       - Next Round Left 32 Bits:  01000111101100000001111011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101011100011000111010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111101100000001111011100010

       - Right 32 Bits:            01011101011100011000111010000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       01011101011100011000111010000111
          - S-Box Result:     10010110110110100010110000101101   [per every group of 4-bits]
          - Split Into Two:   1001011011011010 [L] 0010110000101101 [R]
          - Swap Halves:      00101100001011011001011011011010
          - Bit Inversion:    11010011110100100110100100100101
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     00001001000101111111100101001111

          - FUNCTION OUTPUT:  00001001000101111111100101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111101100000001111011100010

       - FUNCTION OUTPUT:          00001001000101111111100101001111

       - Left XOR FUNCTION OUTPUT: 01001110101001111110011110101101

       - Next Round Left 32 Bits:  01011101011100011000111010000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110101001111110011110101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101011100011000111010000111

       - Right 32 Bits:            01001110101001111110011110101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       01001110101001111110011110101101
          - S-Box Result:     01111100010011011100110101000110   [per every group of 4-bits]
          - Split Into Two:   0111110001001101 [L] 1100110101000110 [R]
          - Swap Halves:      11001101010001100111110001001101
          - Bit Inversion:    00110010101110011000001110110010
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     01111000110110000100100011001000

          - FUNCTION OUTPUT:  01111000110110000100100011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101011100011000111010000111

       - FUNCTION OUTPUT:          01111000110110000100100011001000

       - Left XOR FUNCTION OUTPUT: 00100101101010011100011001001111

       - Next Round Left 32 Bits:  01001110101001111110011110101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101101010011100011001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110101001111110011110101101

       - Right 32 Bits:            00100101101010011100011001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00100101101010011100011001001111
          - S-Box Result:     11101001010000110101000001111011   [per every group of 4-bits]
          - Split Into Two:   1110100101000011 [L] 0101000001111011 [R]
          - Swap Halves:      01010000011110111110100101000011
          - Bit Inversion:    10101111100001000001011010111100
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11010001111111010111111011100110

          - FUNCTION OUTPUT:  11010001111111010111111011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110101001111110011110101101

       - FUNCTION OUTPUT:          11010001111111010111111011100110

       - Left XOR FUNCTION OUTPUT: 10011111010110101001100101001011

       - Next Round Left 32 Bits:  00100101101010011100011001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111010110101001100101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101101010011100011001001111

       - Right 32 Bits:            10011111010110101001100101001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       10011111010110101001100101001011
          - S-Box Result:     00111011100101000011001101111000   [per every group of 4-bits]
          - Split Into Two:   0011101110010100 [L] 0011001101111000 [R]
          - Swap Halves:      00110011011110000011101110010100
          - Bit Inversion:    11001100100001111100010001101011
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     11011110110111111011111001110001

          - FUNCTION OUTPUT:  11011110110111111011111001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101101010011100011001001111

       - FUNCTION OUTPUT:          11011110110111111011111001110001

       - Left XOR FUNCTION OUTPUT: 11111011011101100111100000111110

       - Next Round Left 32 Bits:  10011111010110101001100101001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011011101100111100000111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111010110101001100101001011

       - Right 32 Bits:            11111011011101100111100000111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       11111011011101100111100000111110
          - S-Box Result:     10111000110100001101001000011100   [per every group of 4-bits]
          - Split Into Two:   1011100011010000 [L] 1101001000011100 [R]
          - Swap Halves:      11010010000111001011100011010000
          - Bit Inversion:    00101101111000110100011100101111
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     11110110101110010101110110110001

          - FUNCTION OUTPUT:  11110110101110010101110110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111010110101001100101001011

       - FUNCTION OUTPUT:          11110110101110010101110110110001

       - Left XOR FUNCTION OUTPUT: 01101001111000111100010011111010

       - Next Round Left 32 Bits:  11111011011101100111100000111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001111000111100010011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011011101100111100000111110

       - Right 32 Bits:            01101001111000111100010011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       01101001111000111100010011111010
          - S-Box Result:     00000011110000010101011110110100   [per every group of 4-bits]
          - Split Into Two:   0000001111000001 [L] 0101011110110100 [R]
          - Swap Halves:      01010111101101000000001111000001
          - Bit Inversion:    10101000010010111111110000111110
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     11100000000101010110011011111000

          - FUNCTION OUTPUT:  11100000000101010110011011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011011101100111100000111110

       - FUNCTION OUTPUT:          11100000000101010110011011111000

       - Left XOR FUNCTION OUTPUT: 00011011011000110001111011000110

       - Next Round Left 32 Bits:  01101001111000111100010011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011011000110001111011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001111000111100010011111010

       - Right 32 Bits:            00011011011000110001111011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       00011011011000110001111011000110
          - S-Box Result:     10101000000000011010110001010000   [per every group of 4-bits]
          - Split Into Two:   1010100000000001 [L] 1010110001010000 [R]
          - Swap Halves:      10101100010100001010100000000001
          - Bit Inversion:    01010011101011110101011111111110
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     00101101111110011101100111011101

          - FUNCTION OUTPUT:  00101101111110011101100111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001111000111100010011111010

       - FUNCTION OUTPUT:          00101101111110011101100111011101

       - Left XOR FUNCTION OUTPUT: 01000100000110100001110100100111

       - Next Round Left 32 Bits:  00011011011000110001111011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100000110100001110100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011011000110001111011000110

       - Right 32 Bits:            01000100000110100001110100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       01000100000110100001110100100111
          - S-Box Result:     01110111101001001010011011101101   [per every group of 4-bits]
          - Split Into Two:   0111011110100100 [L] 1010011011101101 [R]
          - Swap Halves:      10100110111011010111011110100100
          - Bit Inversion:    01011001000100101000100001011011
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     00001011010000010010111010100010

          - FUNCTION OUTPUT:  00001011010000010010111010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011011000110001111011000110

       - FUNCTION OUTPUT:          00001011010000010010111010100010

       - Left XOR FUNCTION OUTPUT: 00010000001000100011000001100100

       - Next Round Left 32 Bits:  01000100000110100001110100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000001000100011000001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100000110100001110100100111

       - Right 32 Bits:            00010000001000100011000001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       00010000001000100011000001100100
          - S-Box Result:     10101111111011100001111100000111   [per every group of 4-bits]
          - Split Into Two:   1010111111101110 [L] 0001111100000111 [R]
          - Swap Halves:      00011111000001111010111111101110
          - Bit Inversion:    11100000111110000101000000010001
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     10111011101000011011001101011001

          - FUNCTION OUTPUT:  10111011101000011011001101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100000110100001110100100111

       - FUNCTION OUTPUT:          10111011101000011011001101011001

       - Left XOR FUNCTION OUTPUT: 11111111101110111010111001111110

       - Next Round Left 32 Bits:  00010000001000100011000001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111101110111010111001111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000001000100011000001100100

       - Right 32 Bits:            11111111101110111010111001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       11111111101110111010111001111110
          - S-Box Result:     10111011100010000100110011011100   [per every group of 4-bits]
          - Split Into Two:   1011101110001000 [L] 0100110011011100 [R]
          - Swap Halves:      01001100110111001011101110001000
          - Bit Inversion:    10110011001000110100010001110111
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     11101011001110110010110100001101

          - FUNCTION OUTPUT:  11101011001110110010110100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000001000100011000001100100

       - FUNCTION OUTPUT:          11101011001110110010110100001101

       - Left XOR FUNCTION OUTPUT: 11111011000110010001110101101001

       - Next Round Left 32 Bits:  11111111101110111010111001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011000110010001110101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111101110111010111001111110

       - Right 32 Bits:            11111011000110010001110101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       11111011000110010001110101101001
          - S-Box Result:     10111000101000111010011000000011   [per every group of 4-bits]
          - Split Into Two:   1011100010100011 [L] 1010011000000011 [R]
          - Swap Halves:      10100110000000111011100010100011
          - Bit Inversion:    01011001111111000100011101011100
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     00000111001001100011111100000010

          - FUNCTION OUTPUT:  00000111001001100011111100000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111101110111010111001111110

       - FUNCTION OUTPUT:          00000111001001100011111100000010

       - Left XOR FUNCTION OUTPUT: 11111000100111011001000101111100

       - Next Round Left 32 Bits:  11111011000110010001110101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000100111011001000101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111100010011101100100010111110011111011000110010001110101101001

 > Processed Block:     1111100010011101100100010111110011111011000110010001110101101001


Ciphertext Block 7: 0010001100100110010110100101110100011010101110010101011111001001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011001001100101101001011101

       - Right 32 Bits:            00011010101110010101011111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       00011010101110010101011111001001
          - S-Box Result:     10100100100000111001110101010011   [per every group of 4-bits]
          - Split Into Two:   1010010010000011 [L] 1001110101010011 [R]
          - Swap Halves:      10011101010100111010010010000011
          - Bit Inversion:    01100010101011000101101101111100
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     01111010110001010010000100100100

          - FUNCTION OUTPUT:  01111010110001010010000100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011001001100101101001011101

       - FUNCTION OUTPUT:          01111010110001010010000100100100

       - Left XOR FUNCTION OUTPUT: 01011001111000110111101101111001

       - Next Round Left 32 Bits:  00011010101110010101011111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001111000110111101101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010101110010101011111001001

       - Right 32 Bits:            01011001111000110111101101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       01011001111000110111101101111001
          - S-Box Result:     10010011110000011101100011010011   [per every group of 4-bits]
          - Split Into Two:   1001001111000001 [L] 1101100011010011 [R]
          - Swap Halves:      11011000110100111001001111000001
          - Bit Inversion:    00100111001011000110110000111110
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     11111101010101000011001001100000

          - FUNCTION OUTPUT:  11111101010101000011001001100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010101110010101011111001001

       - FUNCTION OUTPUT:          11111101010101000011001001100000

       - Left XOR FUNCTION OUTPUT: 11100111111011010110010110101001

       - Next Round Left 32 Bits:  01011001111000110111101101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111111011010110010110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001111000110111101101111001

       - Right 32 Bits:            11100111111011010110010110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       11100111111011010110010110101001
          - S-Box Result:     11001101110001100000100101000011   [per every group of 4-bits]
          - Split Into Two:   1100110111000110 [L] 0000100101000011 [R]
          - Swap Halves:      00001001010000111100110111000110
          - Bit Inversion:    11110110101111000011001000111001
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     10111100111000100110010000101011

          - FUNCTION OUTPUT:  10111100111000100110010000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001111000110111101101111001

       - FUNCTION OUTPUT:          10111100111000100110010000101011

       - Left XOR FUNCTION OUTPUT: 11100101000000010001111101010010

       - Next Round Left 32 Bits:  11100111111011010110010110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101000000010001111101010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111111011010110010110101001

       - Right 32 Bits:            11100101000000010001111101010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       11100101000000010001111101010010
          - S-Box Result:     11001001111110101010101110011110   [per every group of 4-bits]
          - Split Into Two:   1100100111111010 [L] 1010101110011110 [R]
          - Swap Halves:      10101011100111101100100111111010
          - Bit Inversion:    01010100011000010011011000000101
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     00101110011101110110010110011110

          - FUNCTION OUTPUT:  00101110011101110110010110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111111011010110010110101001

       - FUNCTION OUTPUT:          00101110011101110110010110011110

       - Left XOR FUNCTION OUTPUT: 11001001100110100000000000110111

       - Next Round Left 32 Bits:  11100101000000010001111101010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001100110100000000000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101000000010001111101010010

       - Right 32 Bits:            11001001100110100000000000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       11001001100110100000000000110111
          - S-Box Result:     01010011001101001111111100011101   [per every group of 4-bits]
          - Split Into Two:   0101001100110100 [L] 1111111100011101 [R]
          - Swap Halves:      11111111000111010101001100110100
          - Bit Inversion:    00000000111000101010110011001011
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     00011010011101011011000100000011

          - FUNCTION OUTPUT:  00011010011101011011000100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101000000010001111101010010

       - FUNCTION OUTPUT:          00011010011101011011000100000011

       - Left XOR FUNCTION OUTPUT: 11111111011101001010111001010001

       - Next Round Left 32 Bits:  11001001100110100000000000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111011101001010111001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001100110100000000000110111

       - Right 32 Bits:            11111111011101001010111001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       11111111011101001010111001010001
          - S-Box Result:     10111011110101110100110010011010   [per every group of 4-bits]
          - Split Into Two:   1011101111010111 [L] 0100110010011010 [R]
          - Swap Halves:      01001100100110101011101111010111
          - Bit Inversion:    10110011011001010100010000101000
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     01101001101000001101010001000010

          - FUNCTION OUTPUT:  01101001101000001101010001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001100110100000000000110111

       - FUNCTION OUTPUT:          01101001101000001101010001000010

       - Left XOR FUNCTION OUTPUT: 10100000001110101101010001110101

       - Next Round Left 32 Bits:  11111111011101001010111001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000001110101101010001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111011101001010111001010001

       - Right 32 Bits:            10100000001110101101010001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       10100000001110101101010001110101
          - S-Box Result:     01001111000101000110011111011001   [per every group of 4-bits]
          - Split Into Two:   0100111100010100 [L] 0110011111011001 [R]
          - Swap Halves:      01100111110110010100111100010100
          - Bit Inversion:    10011000001001101011000011101011
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     11010010010001110111101110010001

          - FUNCTION OUTPUT:  11010010010001110111101110010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111011101001010111001010001

       - FUNCTION OUTPUT:          11010010010001110111101110010001

       - Left XOR FUNCTION OUTPUT: 00101101001100111101010111000000

       - Next Round Left 32 Bits:  10100000001110101101010001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101001100111101010111000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000001110101101010001110101

       - Right 32 Bits:            00101101001100111101010111000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00101101001100111101010111000000
          - S-Box Result:     11100110000100010110100101011111   [per every group of 4-bits]
          - Split Into Two:   1110011000010001 [L] 0110100101011111 [R]
          - Swap Halves:      01101001010111111110011000010001
          - Bit Inversion:    10010110101000000001100111101110
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11101000110110010111000110110100

          - FUNCTION OUTPUT:  11101000110110010111000110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000001110101101010001110101

       - FUNCTION OUTPUT:          11101000110110010111000110110100

       - Left XOR FUNCTION OUTPUT: 01001000111000111010010111000001

       - Next Round Left 32 Bits:  00101101001100111101010111000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000111000111010010111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101001100111101010111000000

       - Right 32 Bits:            01001000111000111010010111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01001000111000111010010111000001
          - S-Box Result:     01110010110000010100100101011010   [per every group of 4-bits]
          - Split Into Two:   0111001011000001 [L] 0100100101011010 [R]
          - Swap Halves:      01001001010110100111001011000001
          - Bit Inversion:    10110110101001011000110100111110
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     10100100111111011111011100100100

          - FUNCTION OUTPUT:  10100100111111011111011100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101001100111101010111000000

       - FUNCTION OUTPUT:          10100100111111011111011100100100

       - Left XOR FUNCTION OUTPUT: 10001001110011100010001011100100

       - Next Round Left 32 Bits:  01001000111000111010010111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001110011100010001011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000111000111010010111000001

       - Right 32 Bits:            10001001110011100010001011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       10001001110011100010001011100100
          - S-Box Result:     00100011010111001110111011000111   [per every group of 4-bits]
          - Split Into Two:   0010001101011100 [L] 1110111011000111 [R]
          - Swap Halves:      11101110110001110010001101011100
          - Bit Inversion:    00010001001110001101110010100011
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     11001010011000101100011000111101

          - FUNCTION OUTPUT:  11001010011000101100011000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000111000111010010111000001

       - FUNCTION OUTPUT:          11001010011000101100011000111101

       - Left XOR FUNCTION OUTPUT: 10000010100000010110001111111100

       - Next Round Left 32 Bits:  10001001110011100010001011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010100000010110001111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001110011100010001011100100

       - Right 32 Bits:            10000010100000010110001111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       10000010100000010110001111111100
          - S-Box Result:     00101110001010100000000110110101   [per every group of 4-bits]
          - Split Into Two:   0010111000101010 [L] 0000000110110101 [R]
          - Swap Halves:      00000001101101010010111000101010
          - Bit Inversion:    11111110010010101101000111010101
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     10110110000101000100101100010011

          - FUNCTION OUTPUT:  10110110000101000100101100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001110011100010001011100100

       - FUNCTION OUTPUT:          10110110000101000100101100010011

       - Left XOR FUNCTION OUTPUT: 00111111110110100110100111110111

       - Next Round Left 32 Bits:  10000010100000010110001111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111110110100110100111110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010100000010110001111111100

       - Right 32 Bits:            00111111110110100110100111110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       00111111110110100110100111110111
          - S-Box Result:     00011011011001000000001110111101   [per every group of 4-bits]
          - Split Into Two:   0001101101100100 [L] 0000001110111101 [R]
          - Swap Halves:      00000011101111010001101101100100
          - Bit Inversion:    11111100010000101110010010011011
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     10000010000101000110101010111000

          - FUNCTION OUTPUT:  10000010000101000110101010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010100000010110001111111100

       - FUNCTION OUTPUT:          10000010000101000110101010111000

       - Left XOR FUNCTION OUTPUT: 00000000100101010000100101000100

       - Next Round Left 32 Bits:  00111111110110100110100111110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000100101010000100101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111110110100110100111110111

       - Right 32 Bits:            00000000100101010000100101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       00000000100101010000100101000100
          - S-Box Result:     11111111001110011111001101110111   [per every group of 4-bits]
          - Split Into Two:   1111111100111001 [L] 1111001101110111 [R]
          - Swap Halves:      11110011011101111111111100111001
          - Bit Inversion:    00001100100010000000000011000110
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     01011110110110111010011000111111

          - FUNCTION OUTPUT:  01011110110110111010011000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111110110100110100111110111

       - FUNCTION OUTPUT:          01011110110110111010011000111111

       - Left XOR FUNCTION OUTPUT: 01100001000000011100111111001000

       - Next Round Left 32 Bits:  00000000100101010000100101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001000000011100111111001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000100101010000100101000100

       - Right 32 Bits:            01100001000000011100111111001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       01100001000000011100111111001000
          - S-Box Result:     00001010111110100101101101010010   [per every group of 4-bits]
          - Split Into Two:   0000101011111010 [L] 0101101101010010 [R]
          - Swap Halves:      01011011010100100000101011111010
          - Bit Inversion:    10100100101011011111010100000101
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     11111111111101000001011001001101

          - FUNCTION OUTPUT:  11111111111101000001011001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000100101010000100101000100

       - FUNCTION OUTPUT:          11111111111101000001011001001101

       - Left XOR FUNCTION OUTPUT: 11111111011000010001111100001001

       - Next Round Left 32 Bits:  01100001000000011100111111001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111011000010001111100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001000000011100111111001000

       - Right 32 Bits:            11111111011000010001111100001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       11111111011000010001111100001001
          - S-Box Result:     10111011000010101010101111110011   [per every group of 4-bits]
          - Split Into Two:   1011101100001010 [L] 1010101111110011 [R]
          - Swap Halves:      10101011111100111011101100001010
          - Bit Inversion:    01010100000011000100010011110101
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     00001100000101000010110110001111

          - FUNCTION OUTPUT:  00001100000101000010110110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001000000011100111111001000

       - FUNCTION OUTPUT:          00001100000101000010110110001111

       - Left XOR FUNCTION OUTPUT: 01101101000101011110001001000111

       - Next Round Left 32 Bits:  11111111011000010001111100001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101000101011110001001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111011000010001111100001001

       - Right 32 Bits:            01101101000101011110001001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       01101101000101011110001001000111
          - S-Box Result:     00000110101010011100111001111101   [per every group of 4-bits]
          - Split Into Two:   0000011010101001 [L] 1100111001111101 [R]
          - Swap Halves:      11001110011111010000011010101001
          - Bit Inversion:    00110001100000101111100101010110
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     01101111010110001000000100001000

          - FUNCTION OUTPUT:  01101111010110001000000100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111011000010001111100001001

       - FUNCTION OUTPUT:          01101111010110001000000100001000

       - Left XOR FUNCTION OUTPUT: 10010000001110011001111000000001

       - Next Round Left 32 Bits:  01101101000101011110001001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000001110011001111000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001000000111001100111100000000101101101000101011110001001000111

 > Processed Block:     1001000000111001100111100000000101101101000101011110001001000111


Ciphertext Block 8: 1001111101111000101011000010010001010001100000000100011011000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111011110001010110000100100

       - Right 32 Bits:            01010001100000000100011011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       01010001100000000100011011000110
          - S-Box Result:     10011010001011110111000001010000   [per every group of 4-bits]
          - Split Into Two:   1001101000101111 [L] 0111000001010000 [R]
          - Swap Halves:      01110000010100001001101000101111
          - Bit Inversion:    10001111101011110110010111010000
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     10010111110001100001111110001000

          - FUNCTION OUTPUT:  10010111110001100001111110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111011110001010110000100100

       - FUNCTION OUTPUT:          10010111110001100001111110001000

       - Left XOR FUNCTION OUTPUT: 00001000101111101011001110101100

       - Next Round Left 32 Bits:  01010001100000000100011011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000101111101011001110101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001100000000100011011000110

       - Right 32 Bits:            00001000101111101011001110101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       00001000101111101011001110101100
          - S-Box Result:     11110010100011001000000101000101   [per every group of 4-bits]
          - Split Into Two:   1111001010001100 [L] 1000000101000101 [R]
          - Swap Halves:      10000001010001011111001010001100
          - Bit Inversion:    01111110101110100000110101110011
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     10100100110000100101001100101101

          - FUNCTION OUTPUT:  10100100110000100101001100101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001100000000100011011000110

       - FUNCTION OUTPUT:          10100100110000100101001100101101

       - Left XOR FUNCTION OUTPUT: 11110101010000100001010111101011

       - Next Round Left 32 Bits:  00001000101111101011001110101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101010000100001010111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000101111101011001110101100

       - Right 32 Bits:            11110101010000100001010111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       11110101010000100001010111101011
          - S-Box Result:     10111001011111101010100111001000   [per every group of 4-bits]
          - Split Into Two:   1011100101111110 [L] 1010100111001000 [R]
          - Swap Halves:      10101001110010001011100101111110
          - Bit Inversion:    01010110001101110100011010000001
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     00011100011010010001000010010011

          - FUNCTION OUTPUT:  00011100011010010001000010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000101111101011001110101100

       - FUNCTION OUTPUT:          00011100011010010001000010010011

       - Left XOR FUNCTION OUTPUT: 00010100110101111010001100111111

       - Next Round Left 32 Bits:  11110101010000100001010111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100110101111010001100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101010000100001010111101011

       - Right 32 Bits:            00010100110101111010001100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       00010100110101111010001100111111
          - S-Box Result:     10100111011011010100000100011011   [per every group of 4-bits]
          - Split Into Two:   1010011101101101 [L] 0100000100011011 [R]
          - Swap Halves:      01000001000110111010011101101101
          - Bit Inversion:    10111110111001000101100010010010
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     11000100111100100000101100001001

          - FUNCTION OUTPUT:  11000100111100100000101100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101010000100001010111101011

       - FUNCTION OUTPUT:          11000100111100100000101100001001

       - Left XOR FUNCTION OUTPUT: 00110001101100000001111011100010

       - Next Round Left 32 Bits:  00010100110101111010001100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001101100000001111011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100110101111010001100111111

       - Right 32 Bits:            00110001101100000001111011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       00110001101100000001111011100010
          - S-Box Result:     00011010100011111010110011001110   [per every group of 4-bits]
          - Split Into Two:   0001101010001111 [L] 1010110011001110 [R]
          - Swap Halves:      10101100110011100001101010001111
          - Bit Inversion:    01010011001100011110010101110000
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     01001001101001101111100010111000

          - FUNCTION OUTPUT:  01001001101001101111100010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100110101111010001100111111

       - FUNCTION OUTPUT:          01001001101001101111100010111000

       - Left XOR FUNCTION OUTPUT: 01011101011100010101101110000111

       - Next Round Left 32 Bits:  00110001101100000001111011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101011100010101101110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001101100000001111011100010

       - Right 32 Bits:            01011101011100010101101110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       01011101011100010101101110000111
          - S-Box Result:     10010110110110101001100000101101   [per every group of 4-bits]
          - Split Into Two:   1001011011011010 [L] 1001100000101101 [R]
          - Swap Halves:      10011000001011011001011011011010
          - Bit Inversion:    01100111110100100110100100100101
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     10111101000101111111100101001111

          - FUNCTION OUTPUT:  10111101000101111111100101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001101100000001111011100010

       - FUNCTION OUTPUT:          10111101000101111111100101001111

       - Left XOR FUNCTION OUTPUT: 10001100101001111110011110101101

       - Next Round Left 32 Bits:  01011101011100010101101110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100101001111110011110101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101011100010101101110000111

       - Right 32 Bits:            10001100101001111110011110101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       10001100101001111110011110101101
          - S-Box Result:     00100101010011011100110101000110   [per every group of 4-bits]
          - Split Into Two:   0010010101001101 [L] 1100110101000110 [R]
          - Swap Halves:      11001101010001100010010101001101
          - Bit Inversion:    00110010101110011101101010110010
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     01111000110110000001000111001000

          - FUNCTION OUTPUT:  01111000110110000001000111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101011100010101101110000111

       - FUNCTION OUTPUT:          01111000110110000001000111001000

       - Left XOR FUNCTION OUTPUT: 00100101101010010100101001001111

       - Next Round Left 32 Bits:  10001100101001111110011110101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101101010010100101001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100101001111110011110101101

       - Right 32 Bits:            00100101101010010100101001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       00100101101010010100101001001111
          - S-Box Result:     11101001010000110111010001111011   [per every group of 4-bits]
          - Split Into Two:   1110100101000011 [L] 0111010001111011 [R]
          - Swap Halves:      01110100011110111110100101000011
          - Bit Inversion:    10001011100001000001011010111100
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11110101111111010111111011100110

          - FUNCTION OUTPUT:  11110101111111010111111011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100101001111110011110101101

       - FUNCTION OUTPUT:          11110101111111010111111011100110

       - Left XOR FUNCTION OUTPUT: 01111001010110101001100101001011

       - Next Round Left 32 Bits:  00100101101010010100101001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001010110101001100101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101101010010100101001001111

       - Right 32 Bits:            01111001010110101001100101001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       01111001010110101001100101001011
          - S-Box Result:     11010011100101000011001101111000   [per every group of 4-bits]
          - Split Into Two:   1101001110010100 [L] 0011001101111000 [R]
          - Swap Halves:      00110011011110001101001110010100
          - Bit Inversion:    11001100100001110010110001101011
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     11011110110111110101011001110001

          - FUNCTION OUTPUT:  11011110110111110101011001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101101010010100101001001111

       - FUNCTION OUTPUT:          11011110110111110101011001110001

       - Left XOR FUNCTION OUTPUT: 11111011011101100001110000111110

       - Next Round Left 32 Bits:  01111001010110101001100101001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011011101100001110000111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001010110101001100101001011

       - Right 32 Bits:            11111011011101100001110000111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       11111011011101100001110000111110
          - S-Box Result:     10111000110100001010010100011100   [per every group of 4-bits]
          - Split Into Two:   1011100011010000 [L] 1010010100011100 [R]
          - Swap Halves:      10100101000111001011100011010000
          - Bit Inversion:    01011010111000110100011100101111
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     10000001101110010101110110110001

          - FUNCTION OUTPUT:  10000001101110010101110110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001010110101001100101001011

       - FUNCTION OUTPUT:          10000001101110010101110110110001

       - Left XOR FUNCTION OUTPUT: 11111000111000111100010011111010

       - Next Round Left 32 Bits:  11111011011101100001110000111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000111000111100010011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011011101100001110000111110

       - Right 32 Bits:            11111000111000111100010011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       11111000111000111100010011111010
          - S-Box Result:     10110010110000010101011110110100   [per every group of 4-bits]
          - Split Into Two:   1011001011000001 [L] 0101011110110100 [R]
          - Swap Halves:      01010111101101001011001011000001
          - Bit Inversion:    10101000010010110100110100111110
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     11100000000101011101011111111000

          - FUNCTION OUTPUT:  11100000000101011101011111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011011101100001110000111110

       - FUNCTION OUTPUT:          11100000000101011101011111111000

       - Left XOR FUNCTION OUTPUT: 00011011011000111100101111000110

       - Next Round Left 32 Bits:  11111000111000111100010011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011011000111100101111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000111000111100010011111010

       - Right 32 Bits:            00011011011000111100101111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       00011011011000111100101111000110
          - S-Box Result:     10101000000000010101100001010000   [per every group of 4-bits]
          - Split Into Two:   1010100000000001 [L] 0101100001010000 [R]
          - Swap Halves:      01011000010100001010100000000001
          - Bit Inversion:    10100111101011110101011111111110
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     11011001111110011101100111011101

          - FUNCTION OUTPUT:  11011001111110011101100111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000111000111100010011111010

       - FUNCTION OUTPUT:          11011001111110011101100111011101

       - Left XOR FUNCTION OUTPUT: 00100001000110100001110100100111

       - Next Round Left 32 Bits:  00011011011000111100101111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001000110100001110100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011011000111100101111000110

       - Right 32 Bits:            00100001000110100001110100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       00100001000110100001110100100111
          - S-Box Result:     11101010101001001010011011101101   [per every group of 4-bits]
          - Split Into Two:   1110101010100100 [L] 1010011011101101 [R]
          - Swap Halves:      10100110111011011110101010100100
          - Bit Inversion:    01011001000100100001010101011011
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     00001011010000011011001110100010

          - FUNCTION OUTPUT:  00001011010000011011001110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011011000111100101111000110

       - FUNCTION OUTPUT:          00001011010000011011001110100010

       - Left XOR FUNCTION OUTPUT: 00010000001000100111100001100100

       - Next Round Left 32 Bits:  00100001000110100001110100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000001000100111100001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001000110100001110100100111

       - Right 32 Bits:            00010000001000100111100001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       00010000001000100111100001100100
          - S-Box Result:     10101111111011101101001000000111   [per every group of 4-bits]
          - Split Into Two:   1010111111101110 [L] 1101001000000111 [R]
          - Swap Halves:      11010010000001111010111111101110
          - Bit Inversion:    00101101111110000101000000010001
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     01110110101000011011001101011001

          - FUNCTION OUTPUT:  01110110101000011011001101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001000110100001110100100111

       - FUNCTION OUTPUT:          01110110101000011011001101011001

       - Left XOR FUNCTION OUTPUT: 01010111101110111010111001111110

       - Next Round Left 32 Bits:  00010000001000100111100001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111101110111010111001111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000001000100111100001100100

       - Right 32 Bits:            01010111101110111010111001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       01010111101110111010111001111110
          - S-Box Result:     10011101100010000100110011011100   [per every group of 4-bits]
          - Split Into Two:   1001110110001000 [L] 0100110011011100 [R]
          - Swap Halves:      01001100110111001001110110001000
          - Bit Inversion:    10110011001000110110001001110111
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     11101011001110110000101100001101

          - FUNCTION OUTPUT:  11101011001110110000101100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000001000100111100001100100

       - FUNCTION OUTPUT:          11101011001110110000101100001101

       - Left XOR FUNCTION OUTPUT: 11111011000110010111001101101001

       - Next Round Left 32 Bits:  01010111101110111010111001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011000110010111001101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111101110111010111001111110

       - Right 32 Bits:            11111011000110010111001101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       11111011000110010111001101101001
          - S-Box Result:     10111000101000111101000100000011   [per every group of 4-bits]
          - Split Into Two:   1011100010100011 [L] 1101000100000011 [R]
          - Swap Halves:      11010001000000111011100010100011
          - Bit Inversion:    00101110111111000100011101011100
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     01110000001001100011111100000010

          - FUNCTION OUTPUT:  01110000001001100011111100000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111101110111010111001111110

       - FUNCTION OUTPUT:          01110000001001100011111100000010

       - Left XOR FUNCTION OUTPUT: 00100111100111011001000101111100

       - Next Round Left 32 Bits:  11111011000110010111001101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111100111011001000101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010011110011101100100010111110011111011000110010111001101101001

 > Processed Block:     0010011110011101100100010111110011111011000110010111001101101001


Ciphertext Block 9: 1101110100101110011101001001111000011000100100111010110000100000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101001011100111010010011110

       - Right 32 Bits:            00011000100100111010110000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101010100110100101101100101011110010110010101000100   [Subkey: 16]
          - Input Half:       00011000100100111010110000100000
          - S-Box Result:     10100010001100010100010111101111   [per every group of 4-bits]
          - Split Into Two:   1010001000110001 [L] 0100010111101111 [R]
          - Swap Halves:      01000101111011111010001000110001
          - Bit Inversion:    10111010000100000101110111001110
          - Compressed Key:   00011000011010010111101001011000   [done by compression P-Box]
          - XOR with Key:     10100010011110010010011110010110

          - FUNCTION OUTPUT:  10100010011110010010011110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101001011100111010010011110

       - FUNCTION OUTPUT:          10100010011110010010011110010110

       - Left XOR FUNCTION OUTPUT: 01111111010101110101001100001000

       - Next Round Left 32 Bits:  00011000100100111010110000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111010101110101001100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000100100111010110000100000

       - Right 32 Bits:            01111111010101110101001100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010101100101101001001101010000110100110101011101   [Subkey: 15]
          - Input Half:       01111111010101110101001100001000
          - S-Box Result:     11011011100111011001000111110010   [per every group of 4-bits]
          - Split Into Two:   1101101110011101 [L] 1001000111110010 [R]
          - Swap Halves:      10010001111100101101101110011101
          - Bit Inversion:    01101110000011010010010001100010
          - Compressed Key:   11011010011110000101111001011110   [done by compression P-Box]
          - XOR with Key:     10110100011101010111101000111100

          - FUNCTION OUTPUT:  10110100011101010111101000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000100100111010110000100000

       - FUNCTION OUTPUT:          10110100011101010111101000111100

       - Left XOR FUNCTION OUTPUT: 10101100111001101101011000011100

       - Next Round Left 32 Bits:  01111111010101110101001100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100111001101101011000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111010101110101001100001000

       - Right 32 Bits:            10101100111001101101011000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001010101001101001011011001010111100101100101010001   [Subkey: 14]
          - Input Half:       10101100111001101101011000011100
          - S-Box Result:     01000101110000000110000010100101   [per every group of 4-bits]
          - Split Into Two:   0100010111000000 [L] 0110000010100101 [R]
          - Swap Halves:      01100000101001010100010111000000
          - Bit Inversion:    10011111010110101011101000111111
          - Compressed Key:   01001010010111100101011000010010   [done by compression P-Box]
          - XOR with Key:     11010101000001001110110000101101

          - FUNCTION OUTPUT:  11010101000001001110110000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111010101110101001100001000

       - FUNCTION OUTPUT:          11010101000001001110110000101101

       - Left XOR FUNCTION OUTPUT: 10101010010100111011111100100101

       - Next Round Left 32 Bits:  10101100111001101101011000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010010100111011111100100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100111001101101011000011100

       - Right 32 Bits:            10101010010100111011111100100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010101011001011010010011010100001101001101010111   [Subkey: 13]
          - Input Half:       10101010010100111011111100100101
          - S-Box Result:     01000100100100011000101111101001   [per every group of 4-bits]
          - Split Into Two:   0100010010010001 [L] 1000101111101001 [R]
          - Swap Halves:      10001011111010010100010010010001
          - Bit Inversion:    01110100000101101011101101101110
          - Compressed Key:   01111010000101100101001110011011   [done by compression P-Box]
          - XOR with Key:     00001110000000001110100011110101

          - FUNCTION OUTPUT:  00001110000000001110100011110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100111001101101011000011100

       - FUNCTION OUTPUT:          00001110000000001110100011110101

       - Left XOR FUNCTION OUTPUT: 10100010111001100011111011101001

       - Next Round Left 32 Bits:  10101010010100111011111100100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010111001100011111011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010010100111011111100100101

       - Right 32 Bits:            10100010111001100011111011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101010011010010110110010101111001011001010100   [Subkey: 12]
          - Input Half:       10100010111001100011111011101001
          - S-Box Result:     01001110110000000001110011000011   [per every group of 4-bits]
          - Split Into Two:   0100111011000000 [L] 0001110011000011 [R]
          - Swap Halves:      00011100110000110100111011000000
          - Bit Inversion:    11100011001111001011000100111111
          - Compressed Key:   00011010100101110001110111001000   [done by compression P-Box]
          - XOR with Key:     11111001101010111010110011110111

          - FUNCTION OUTPUT:  11111001101010111010110011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010010100111011111100100101

       - FUNCTION OUTPUT:          11111001101010111010110011110111

       - Left XOR FUNCTION OUTPUT: 01010011111110000001001111010010

       - Next Round Left 32 Bits:  10100010111001100011111011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011111110000001001111010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010111001100011111011101001

       - Right 32 Bits:            01010011111110000001001111010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101110101010110010110100100110101000011010011010101   [Subkey: 11]
          - Input Half:       01010011111110000001001111010010
          - S-Box Result:     10010001101100101010000101101110   [per every group of 4-bits]
          - Split Into Two:   1001000110110010 [L] 1010000101101110 [R]
          - Swap Halves:      10100001011011101001000110110010
          - Bit Inversion:    01011110100100010110111001001101
          - Compressed Key:   11011010110001011001000001101010   [done by compression P-Box]
          - XOR with Key:     10000100010101001111111000100111

          - FUNCTION OUTPUT:  10000100010101001111111000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010111001100011111011101001

       - FUNCTION OUTPUT:          10000100010101001111111000100111

       - Left XOR FUNCTION OUTPUT: 00100110101100101100000011001110

       - Next Round Left 32 Bits:  01010011111110000001001111010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110101100101100000011001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011111110000001001111010010

       - Right 32 Bits:            00100110101100101100000011001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010001000101010100110100101101100101011110010110010101   [Subkey: 10]
          - Input Half:       00100110101100101100000011001110
          - S-Box Result:     11100000100011100101111101011100   [per every group of 4-bits]
          - Split Into Two:   1110000010001110 [L] 0101111101011100 [R]
          - Swap Halves:      01011111010111001110000010001110
          - Bit Inversion:    10100000101000110001111101110001
          - Compressed Key:   01001010011000011100101101111010   [done by compression P-Box]
          - XOR with Key:     11101010110000101101010000001011

          - FUNCTION OUTPUT:  11101010110000101101010000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011111110000001001111010010

       - FUNCTION OUTPUT:          11101010110000101101010000001011

       - Left XOR FUNCTION OUTPUT: 10111001001110101100011111011001

       - Next Round Left 32 Bits:  00100110101100101100000011001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001001110101100011111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110101100101100000011001110

       - Right 32 Bits:            10111001001110101100011111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111011101010101100101101001001101010000110100110101   [Subkey: 9]
          - Input Half:       10111001001110101100011111011001
          - S-Box Result:     10000011000101000101110101100011   [per every group of 4-bits]
          - Split Into Two:   1000001100010100 [L] 0101110101100011 [R]
          - Swap Halves:      01011101011000111000001100010100
          - Bit Inversion:    10100010100111000111110011101011
          - Compressed Key:   01111110011110010110100001011010   [done by compression P-Box]
          - XOR with Key:     11011100111001010001010010110001

          - FUNCTION OUTPUT:  11011100111001010001010010110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110101100101100000011001110

       - FUNCTION OUTPUT:          11011100111001010001010010110001

       - Left XOR FUNCTION OUTPUT: 11111010010101111101010001111111

       - Next Round Left 32 Bits:  10111001001110101100011111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010010101111101010001111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001001110101100011111011001

       - Right 32 Bits:            11111010010101111101010001111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010001010101001101001011011001010111100101100101   [Subkey: 8]
          - Input Half:       11111010010101111101010001111111
          - S-Box Result:     10110100100111010110011111011011   [per every group of 4-bits]
          - Split Into Two:   1011010010011101 [L] 0110011111011011 [R]
          - Swap Halves:      01100111110110111011010010011101
          - Bit Inversion:    10011000001001000100101101100010
          - Compressed Key:   00010010010110000111101000011010   [done by compression P-Box]
          - XOR with Key:     10001010011111000011000101111000

          - FUNCTION OUTPUT:  10001010011111000011000101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001001110101100011111011001

       - FUNCTION OUTPUT:          10001010011111000011000101111000

       - Left XOR FUNCTION OUTPUT: 00110011010001101111011010100001

       - Next Round Left 32 Bits:  11111010010101111101010001111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011010001101111011010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010010101111101010001111111

       - Right 32 Bits:            00110011010001101111011010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110111010101011001011010010011010100001101001101   [Subkey: 7]
          - Input Half:       00110011010001101111011010100001
          - S-Box Result:     00010001011100001011000001001010   [per every group of 4-bits]
          - Split Into Two:   0001000101110000 [L] 1011000001001010 [R]
          - Swap Halves:      10110000010010100001000101110000
          - Bit Inversion:    01001111101101011110111010001111
          - Compressed Key:   11011011010110100001101010011110   [done by compression P-Box]
          - XOR with Key:     10010100111011111111010000010001

          - FUNCTION OUTPUT:  10010100111011111111010000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010010101111101010001111111

       - FUNCTION OUTPUT:          10010100111011111111010000010001

       - Left XOR FUNCTION OUTPUT: 01101110101110000010000001101110

       - Next Round Left 32 Bits:  00110011010001101111011010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110101110000010000001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011010001101111011010100001

       - Right 32 Bits:            01101110101110000010000001101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000100010101010011010010110110010101111001011001   [Subkey: 6]
          - Input Half:       01101110101110000010000001101110
          - S-Box Result:     00001100100000101110111100001100   [per every group of 4-bits]
          - Split Into Two:   0000110010000010 [L] 1110111100001100 [R]
          - Swap Halves:      11101111000011000000110010000010
          - Bit Inversion:    00010000111100111111001101111101
          - Compressed Key:   01001000010111101001101011000110   [done by compression P-Box]
          - XOR with Key:     01011000101011010110100110111011

          - FUNCTION OUTPUT:  01011000101011010110100110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011010001101111011010100001

       - FUNCTION OUTPUT:          01011000101011010110100110111011

       - Left XOR FUNCTION OUTPUT: 01101011111010111001111100011010

       - Next Round Left 32 Bits:  01101110101110000010000001101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011111010111001111100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110101110000010000001101110

       - Right 32 Bits:            01101011111010111001111100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101110101010110010110100100110101000011010011   [Subkey: 5]
          - Input Half:       01101011111010111001111100011010
          - S-Box Result:     00001000110010000011101110100100   [per every group of 4-bits]
          - Split Into Two:   0000100011001000 [L] 0011101110100100 [R]
          - Swap Halves:      00111011101001000000100011001000
          - Bit Inversion:    11000100010110111111011100110111
          - Compressed Key:   01111110010101101000111000100011   [done by compression P-Box]
          - XOR with Key:     10111010000011010111100100010100

          - FUNCTION OUTPUT:  10111010000011010111100100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110101110000010000001101110

       - FUNCTION OUTPUT:          10111010000011010111100100010100

       - Left XOR FUNCTION OUTPUT: 11010100101101010101100101111010

       - Next Round Left 32 Bits:  01101011111010111001111100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100101101010101100101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011111010111001111100011010

       - Right 32 Bits:            11010100101101010101100101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010001000101010100110100101101100101011110010110   [Subkey: 4]
          - Input Half:       11010100101101010101100101111010
          - S-Box Result:     01100111100010011001001111010100   [per every group of 4-bits]
          - Split Into Two:   0110011110001001 [L] 1001001111010100 [R]
          - Swap Halves:      10010011110101000110011110001001
          - Bit Inversion:    01101100001010111001100001110110
          - Compressed Key:   01010010010100111010011011111001   [done by compression P-Box]
          - XOR with Key:     00111110011110000011111010001111

          - FUNCTION OUTPUT:  00111110011110000011111010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011111010111001111100011010

       - FUNCTION OUTPUT:          00111110011110000011111010001111

       - Left XOR FUNCTION OUTPUT: 01010101100100111010000110010101

       - Next Round Left 32 Bits:  11010100101101010101100101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101100100111010000110010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100101101010101100101111010

       - Right 32 Bits:            01010101100100111010000110010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101110111011101010101100101101001001101010000110100   [Subkey: 3]
          - Input Half:       01010101100100111010000110010101
          - S-Box Result:     10011001001100010100101000111001   [per every group of 4-bits]
          - Split Into Two:   1001100100110001 [L] 0100101000111001 [R]
          - Swap Halves:      01001010001110011001100100110001
          - Bit Inversion:    10110101110001100110011011001110
          - Compressed Key:   01011011010110011110001101001000   [done by compression P-Box]
          - XOR with Key:     11101110100111111000010110000110

          - FUNCTION OUTPUT:  11101110100111111000010110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100101101010101100101111010

       - FUNCTION OUTPUT:          11101110100111111000010110000110

       - Left XOR FUNCTION OUTPUT: 00111010001010101101110011111100

       - Next Round Left 32 Bits:  01010101100100111010000110010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010001010101101110011111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101100100111010000110010101

       - Right 32 Bits:            00111010001010101101110011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101000100010001010101001101001011011001010111100101   [Subkey: 2]
          - Input Half:       00111010001010101101110011111100
          - S-Box Result:     00010100111001000110010110110101   [per every group of 4-bits]
          - Split Into Two:   0001010011100100 [L] 0110010110110101 [R]
          - Swap Halves:      01100101101101010001010011100100
          - Bit Inversion:    10011010010010101110101100011011
          - Compressed Key:   01011000000110000110100101111010   [done by compression P-Box]
          - XOR with Key:     11000010010100101000001001100001

          - FUNCTION OUTPUT:  11000010010100101000001001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101100100111010000110010101

       - FUNCTION OUTPUT:          11000010010100101000001001100001

       - Left XOR FUNCTION OUTPUT: 10010111110000010010001111110100

       - Next Round Left 32 Bits:  00111010001010101101110011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111110000010010001111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010001010101101110011111100

       - Right 32 Bits:            10010111110000010010001111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101011101110111010101011001011010010011010100001101   [Subkey: 1]
          - Input Half:       10010111110000010010001111110100
          - S-Box Result:     00111101010110101110000110110111   [per every group of 4-bits]
          - Split Into Two:   0011110101011010 [L] 1110000110110111 [R]
          - Swap Halves:      11100001101101110011110101011010
          - Bit Inversion:    00011110010010001100001010100101
          - Compressed Key:   01011110110110100111100001011110   [done by compression P-Box]
          - XOR with Key:     01000000100100101011101011111011

          - FUNCTION OUTPUT:  01000000100100101011101011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010001010101101110011111100

       - FUNCTION OUTPUT:          01000000100100101011101011111011

       - Left XOR FUNCTION OUTPUT: 01111010101110000110011000000111

       - Next Round Left 32 Bits:  10010111110000010010001111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010101110000110011000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111101010111000011001100000011110010111110000010010001111110100

 > Processed Block:     0111101010111000011001100000011110010111110000010010001111110100




BLOCKS IN ASCII:             ©'|½?ðdt8¾WÒä@!LH¾Æ&^eSînà?³?ô¹¨*T'Ãø??|ûi?9?mâG'??|ûsiz¸f?Á#ô

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: meTripl
In Binary:  01101101011001010101010001110010011010010111000001101100

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00100101001101010101011100011011001011010001111100100111
Subkey 2  : 10110101100101010101000111001001101001011100000110110001
Subkey 3  : 10010100110101010101110001101100101101000111110010011100
Subkey 4  : 11010110010101010100011100100110100101110000011011000110
Subkey 5  : 01010011010101010111000110110010110100011111001001110010
Subkey 6  : 01011001010101010001110010011010010111000001101100011011
Subkey 7  : 01001101010101011100011011001011010001111100100111001001
Subkey 8  : 01100101010101000111001001101001011100000110110001101101
Subkey 9  : 00110101010101110001101100101101000111110010011100100101
Subkey 10 : 10010101010100011100100110100101110000011011000110110101
Subkey 11 : 11010101010111000110110010110100011111001001110010010100
Subkey 12 : 01010101010001110010011010010111000001101100011011010110
Subkey 13 : 01010101011100011011001011010001111100100111001001010011
Subkey 14 : 01010101000111001001101001011100000110110001101101011001
Subkey 15 : 01010101110001101100101101000111110010011100100101001101
Subkey 16 : 01010100011100100110100101110000011011000110110101100101

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ©'|½?ðdt8¾WÒä@!LH¾Æ&^eSînà?³?ô¹¨*T'Ãø??|ûi?9?mâG'??|ûsiz¸f?Á#ô

Data padded with spaces : ©'|½?ðdt8¾WÒä@!LH¾Æ&^eSînà?³?ô¹¨*T'Ãø??|ûi?9?mâG'??|ûsiz¸f?Á#ô[Padded with '0' spaces]

Data in ASCII           : 169,26,39,124,189,20,132,240,100,116,56,190,2,87,210,228,64,33,76,72,190,198,38,94,101,83,238,110,224,128,179,129,244,185,168,42,84,39,21,195,248,157,145,124,251,25,29,105,144,57,158,1,109,21,226,71,39,157,145,124,251,25,115,105,122,184,102,7,151,193,35,244,

Data in Binary          : 10101001,00011010,00100111,01111100,10111101,00010100,10000100,11110000,01100100,01110100,00111000,10111110,00000010,01010111,11010010,11100100,01000000,00100001,01001100,01001000,10111110,11000110,00100110,01011110,01100101,01010011,11101110,01101110,11100000,10000000,10110011,10000001,11110100,10111001,10101000,00101010,01010100,00100111,00010101,11000011,11111000,10011101,10010001,01111100,11111011,00011001,00011101,01101001,10010000,00111001,10011110,00000001,01101101,00010101,11100010,01000111,00100111,10011101,10010001,01111100,11111011,00011001,01110011,01101001,01111010,10111000,01100110,00000111,10010111,11000001,00100011,11110100,

Data in 64-bit Blocks



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>



Plaintext Block 1: 1010100100011010001001110111110010111101000101001000010011110000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001000110100010011101111100

       - Right 32 Bits:            10111101000101001000010011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       10111101000101001000010011110000
          - S-Box Result:     10000110101001110010011110111111   [per every group of 4-bits]
          - Split Into Two:   1000011010100111 [L] 0010011110111111 [R]
          - Swap Halves:      00100111101111111000011010100111
          - Bit Inversion:    11011000010000000111100101011000
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     11000110000100100001000110000011

          - FUNCTION OUTPUT:  11000110000100100001000110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001000110100010011101111100

       - FUNCTION OUTPUT:          11000110000100100001000110000011

       - Left XOR FUNCTION OUTPUT: 01101111000010000011011011111111

       - Next Round Left 32 Bits:  10111101000101001000010011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111000010000011011011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101000101001000010011110000

       - Right 32 Bits:            01101111000010000011011011111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       01101111000010000011011011111111
          - S-Box Result:     00001011111100100001000010111011   [per every group of 4-bits]
          - Split Into Two:   0000101111110010 [L] 0001000010111011 [R]
          - Swap Halves:      00010000101110110000101111110010
          - Bit Inversion:    11101111010001001111010000001101
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     10110101000110000001111100111111

          - FUNCTION OUTPUT:  10110101000110000001111100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101000101001000010011110000

       - FUNCTION OUTPUT:          10110101000110000001111100111111

       - Left XOR FUNCTION OUTPUT: 00001000000011001001101111001111

       - Next Round Left 32 Bits:  01101111000010000011011011111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000011001001101111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111000010000011011011111111

       - Right 32 Bits:            00001000000011001001101111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       00001000000011001001101111001111
          - S-Box Result:     11110010111101010011100001011011   [per every group of 4-bits]
          - Split Into Two:   1111001011110101 [L] 0011100001011011 [R]
          - Swap Halves:      00111000010110111111001011110101
          - Bit Inversion:    11000111101001000000110100001010
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     10011101110111011010111101100110

          - FUNCTION OUTPUT:  10011101110111011010111101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111000010000011011011111111

       - FUNCTION OUTPUT:          10011101110111011010111101100110

       - Left XOR FUNCTION OUTPUT: 11110010110101011001100110011001

       - Next Round Left 32 Bits:  00001000000011001001101111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010110101011001100110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000011001001101111001111

       - Right 32 Bits:            11110010110101011001100110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       11110010110101011001100110011001
          - S-Box Result:     10111110011010010011001100110011   [per every group of 4-bits]
          - Split Into Two:   1011111001101001 [L] 0011001100110011 [R]
          - Swap Halves:      00110011001100111011111001101001
          - Bit Inversion:    11001100110011000100000110010110
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     10110110100011011100110101111111

          - FUNCTION OUTPUT:  10110110100011011100110101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000011001001101111001111

       - FUNCTION OUTPUT:          10110110100011011100110101111111

       - Left XOR FUNCTION OUTPUT: 10111110100000010101011010110000

       - Next Round Left 32 Bits:  11110010110101011001100110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110100000010101011010110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010110101011001100110011001

       - Right 32 Bits:            10111110100000010101011010110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       10111110100000010101011010110000
          - S-Box Result:     10001100001010101001000010001111   [per every group of 4-bits]
          - Split Into Two:   1000110000101010 [L] 1001000010001111 [R]
          - Swap Halves:      10010000100011111000110000101010
          - Bit Inversion:    01101111011100000111001111010101
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     00000101101001111110100001010100

          - FUNCTION OUTPUT:  00000101101001111110100001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010110101011001100110011001

       - FUNCTION OUTPUT:          00000101101001111110100001010100

       - Left XOR FUNCTION OUTPUT: 11110111011100100111000111001101

       - Next Round Left 32 Bits:  10111110100000010101011010110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111011100100111000111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110100000010101011010110000

       - Right 32 Bits:            11110111011100100111000111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       11110111011100100111000111001101
          - S-Box Result:     10111101110111101101101001010110   [per every group of 4-bits]
          - Split Into Two:   1011110111011110 [L] 1101101001010110 [R]
          - Swap Halves:      11011010010101101011110111011110
          - Bit Inversion:    00100101101010010100001000100001
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     11101111100111110101001010110110

          - FUNCTION OUTPUT:  11101111100111110101001010110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110100000010101011010110000

       - FUNCTION OUTPUT:          11101111100111110101001010110110

       - Left XOR FUNCTION OUTPUT: 01010001000111100000010000000110

       - Next Round Left 32 Bits:  11110111011100100111000111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001000111100000010000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111011100100111000111001101

       - Right 32 Bits:            01010001000111100000010000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       01010001000111100000010000000110
          - S-Box Result:     10011010101011001111011111110000   [per every group of 4-bits]
          - Split Into Two:   1001101010101100 [L] 1111011111110000 [R]
          - Swap Halves:      11110111111100001001101010101100
          - Bit Inversion:    00001000000011110110010101010011
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10010010010000110011101001100101

          - FUNCTION OUTPUT:  10010010010000110011101001100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111011100100111000111001101

       - FUNCTION OUTPUT:          10010010010000110011101001100101

       - Left XOR FUNCTION OUTPUT: 01100101001100010100101110101000

       - Next Round Left 32 Bits:  01010001000111100000010000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101001100010100101110101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001000111100000010000000110

       - Right 32 Bits:            01100101001100010100101110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       01100101001100010100101110101000
          - S-Box Result:     00001001000110100111100001000010   [per every group of 4-bits]
          - Split Into Two:   0000100100011010 [L] 0111100001000010 [R]
          - Swap Halves:      01111000010000100000100100011010
          - Bit Inversion:    10000111101111011111011011100101
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     10011101011001001000010010101011

          - FUNCTION OUTPUT:  10011101011001001000010010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001000111100000010000000110

       - FUNCTION OUTPUT:          10011101011001001000010010101011

       - Left XOR FUNCTION OUTPUT: 11001100011110101000000010101101

       - Next Round Left 32 Bits:  01100101001100010100101110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100011110101000000010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101001100010100101110101000

       - Right 32 Bits:            11001100011110101000000010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       11001100011110101000000010101101
          - S-Box Result:     01010101110101000010111101000110   [per every group of 4-bits]
          - Split Into Two:   0101010111010100 [L] 0010111101000110 [R]
          - Swap Halves:      00101111010001100101010111010100
          - Bit Inversion:    11010000101110011010101000101011
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10001010100010001110011011110001

          - FUNCTION OUTPUT:  10001010100010001110011011110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101001100010100101110101000

       - FUNCTION OUTPUT:          10001010100010001110011011110001

       - Left XOR FUNCTION OUTPUT: 11101111101110011010110101011001

       - Next Round Left 32 Bits:  11001100011110101000000010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111101110011010110101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100011110101000000010101101

       - Right 32 Bits:            11101111101110011010110101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       11101111101110011010110101011001
          - S-Box Result:     11001011100000110100011010010011   [per every group of 4-bits]
          - Split Into Two:   1100101110000011 [L] 0100011010010011 [R]
          - Swap Halves:      01000110100100111100101110000011
          - Bit Inversion:    10111001011011000011010001111100
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     11100001000010011110110101000110

          - FUNCTION OUTPUT:  11100001000010011110110101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100011110101000000010101101

       - FUNCTION OUTPUT:          11100001000010011110110101000110

       - Left XOR FUNCTION OUTPUT: 00101101011100110110110111101011

       - Next Round Left 32 Bits:  11101111101110011010110101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101011100110110110111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111101110011010110101011001

       - Right 32 Bits:            00101101011100110110110111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       00101101011100110110110111101011
          - S-Box Result:     11100110110100010000011011001000   [per every group of 4-bits]
          - Split Into Two:   1110011011010001 [L] 0000011011001000 [R]
          - Swap Halves:      00000110110010001110011011010001
          - Bit Inversion:    11111001001101110001100100101110
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     10100010110100000010100001000110

          - FUNCTION OUTPUT:  10100010110100000010100001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111101110011010110101011001

       - FUNCTION OUTPUT:          10100010110100000010100001000110

       - Left XOR FUNCTION OUTPUT: 01001101011010011000010100011111

       - Next Round Left 32 Bits:  00101101011100110110110111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101011010011000010100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101011100110110110111101011

       - Right 32 Bits:            01001101011010011000010100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       01001101011010011000010100011111
          - S-Box Result:     01110110000000110010100110101011   [per every group of 4-bits]
          - Split Into Two:   0111011000000011 [L] 0010100110101011 [R]
          - Swap Halves:      00101001101010110111011000000011
          - Bit Inversion:    11010110010101001000100111111100
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     10000100110100101100111000010101

          - FUNCTION OUTPUT:  10000100110100101100111000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101011100110110110111101011

       - FUNCTION OUTPUT:          10000100110100101100111000010101

       - Left XOR FUNCTION OUTPUT: 10101001101000011010001111111110

       - Next Round Left 32 Bits:  01001101011010011000010100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001101000011010001111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101011010011000010100011111

       - Right 32 Bits:            10101001101000011010001111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       10101001101000011010001111111110
          - S-Box Result:     01000011010010100100000110111100   [per every group of 4-bits]
          - Split Into Two:   0100001101001010 [L] 0100000110111100 [R]
          - Swap Halves:      01000001101111000100001101001010
          - Bit Inversion:    10111110010000111011110010110101
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     11100010110111010100101000110110

          - FUNCTION OUTPUT:  11100010110111010100101000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101011010011000010100011111

       - FUNCTION OUTPUT:          11100010110111010100101000110110

       - Left XOR FUNCTION OUTPUT: 10101111101101001100111100101001

       - Next Round Left 32 Bits:  10101001101000011010001111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111101101001100111100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001101000011010001111111110

       - Right 32 Bits:            10101111101101001100111100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       10101111101101001100111100101001
          - S-Box Result:     01001011100001110101101111100011   [per every group of 4-bits]
          - Split Into Two:   0100101110000111 [L] 0101101111100011 [R]
          - Swap Halves:      01011011111000110100101110000111
          - Bit Inversion:    10100100000111001011010001111000
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     11111111001001101011100011101110

          - FUNCTION OUTPUT:  11111111001001101011100011101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001101000011010001111111110

       - FUNCTION OUTPUT:          11111111001001101011100011101110

       - Left XOR FUNCTION OUTPUT: 01010110100001110001101100010000

       - Next Round Left 32 Bits:  10101111101101001100111100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110100001110001101100010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111101101001100111100101001

       - Right 32 Bits:            01010110100001110001101100010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       01010110100001110001101100010000
          - S-Box Result:     10010000001011011010100010101111   [per every group of 4-bits]
          - Split Into Two:   1001000000101101 [L] 1010100010101111 [R]
          - Swap Halves:      10101000101011111001000000101101
          - Bit Inversion:    01010111010100000110111111010010
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     00000101001110001011010011001100

          - FUNCTION OUTPUT:  00000101001110001011010011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111101101001100111100101001

       - FUNCTION OUTPUT:          00000101001110001011010011001100

       - Left XOR FUNCTION OUTPUT: 10101010100011000111101111100101

       - Next Round Left 32 Bits:  01010110100001110001101100010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010100011000111101111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110100001110001101100010000

       - Right 32 Bits:            10101010100011000111101111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       10101010100011000111101111100101
          - S-Box Result:     01000100001001011101100011001001   [per every group of 4-bits]
          - Split Into Two:   0100010000100101 [L] 1101100011001001 [R]
          - Swap Halves:      11011000110010010100010000100101
          - Bit Inversion:    00100111001101101011101111011010
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     01111011110111011000100110000000

          - FUNCTION OUTPUT:  01111011110111011000100110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110100001110001101100010000

       - FUNCTION OUTPUT:          01111011110111011000100110000000

       - Left XOR FUNCTION OUTPUT: 00101101010110101001001010010000

       - Next Round Left 32 Bits:  10101010100011000111101111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101010110101001001010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010110101011010100100101001000010101010100011000111101111100101

 > Processed Block:     0010110101011010100100101001000010101010100011000111101111100101



Plaintext Block 2: 0110010001110100001110001011111000000010010101111101001011100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100011101000011100010111110

       - Right 32 Bits:            00000010010101111101001011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       00000010010101111101001011100100
          - S-Box Result:     11111110100111010110111011000111   [per every group of 4-bits]
          - Split Into Two:   1111111010011101 [L] 0110111011000111 [R]
          - Swap Halves:      01101110110001111111111010011101
          - Bit Inversion:    10010001001110000000000101100010
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     10001111011010100110100110111001

          - FUNCTION OUTPUT:  10001111011010100110100110111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100011101000011100010111110

       - FUNCTION OUTPUT:          10001111011010100110100110111001

       - Left XOR FUNCTION OUTPUT: 11101011000111100101000100000111

       - Next Round Left 32 Bits:  00000010010101111101001011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011000111100101000100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010010101111101001011100100

       - Right 32 Bits:            11101011000111100101000100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       11101011000111100101000100000111
          - S-Box Result:     11001000101011001001101011111101   [per every group of 4-bits]
          - Split Into Two:   1100100010101100 [L] 1001101011111101 [R]
          - Swap Halves:      10011010111111011100100010101100
          - Bit Inversion:    01100101000000100011011101010011
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     00111111010111101101110001100001

          - FUNCTION OUTPUT:  00111111010111101101110001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010010101111101001011100100

       - FUNCTION OUTPUT:          00111111010111101101110001100001

       - Left XOR FUNCTION OUTPUT: 00111101000010010000111010000101

       - Next Round Left 32 Bits:  11101011000111100101000100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101000010010000111010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011000111100101000100000111

       - Right 32 Bits:            00111101000010010000111010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       00111101000010010000111010000101
          - S-Box Result:     00010110111100111111110000101001   [per every group of 4-bits]
          - Split Into Two:   0001011011110011 [L] 1111110000101001 [R]
          - Swap Halves:      11111100001010010001011011110011
          - Bit Inversion:    00000011110101101110100100001100
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     01011001101011110100101101100000

          - FUNCTION OUTPUT:  01011001101011110100101101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011000111100101000100000111

       - FUNCTION OUTPUT:          01011001101011110100101101100000

       - Left XOR FUNCTION OUTPUT: 10110010101100010001101001100111

       - Next Round Left 32 Bits:  00111101000010010000111010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010101100010001101001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101000010010000111010000101

       - Right 32 Bits:            10110010101100010001101001100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       10110010101100010001101001100111
          - S-Box Result:     10001110100010101010010000001101   [per every group of 4-bits]
          - Split Into Two:   1000111010001010 [L] 1010010000001101 [R]
          - Swap Halves:      10100100000011011000111010001010
          - Bit Inversion:    01011011111100100111000101110101
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     00100001101100111111110110011100

          - FUNCTION OUTPUT:  00100001101100111111110110011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101000010010000111010000101

       - FUNCTION OUTPUT:          00100001101100111111110110011100

       - Left XOR FUNCTION OUTPUT: 00011100101110101111001100011001

       - Next Round Left 32 Bits:  10110010101100010001101001100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100101110101111001100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010101100010001101001100111

       - Right 32 Bits:            00011100101110101111001100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       00011100101110101111001100011001
          - S-Box Result:     10100101100001001011000110100011   [per every group of 4-bits]
          - Split Into Two:   1010010110000100 [L] 1011000110100011 [R]
          - Swap Halves:      10110001101000111010010110000100
          - Bit Inversion:    01001110010111000101101001111011
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     00100100100010111100000111111010

          - FUNCTION OUTPUT:  00100100100010111100000111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010101100010001101001100111

       - FUNCTION OUTPUT:          00100100100010111100000111111010

       - Left XOR FUNCTION OUTPUT: 10010110001110101101101110011101

       - Next Round Left 32 Bits:  00011100101110101111001100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110001110101101101110011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100101110101111001100011001

       - Right 32 Bits:            10010110001110101101101110011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       10010110001110101101101110011101
          - S-Box Result:     00110000000101000110100000110110   [per every group of 4-bits]
          - Split Into Two:   0011000000010100 [L] 0110100000110110 [R]
          - Swap Halves:      01101000001101100011000000010100
          - Bit Inversion:    10010111110010011100111111101011
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     01011101111111111101111101111100

          - FUNCTION OUTPUT:  01011101111111111101111101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100101110101111001100011001

       - FUNCTION OUTPUT:          01011101111111111101111101111100

       - Left XOR FUNCTION OUTPUT: 01000001010001010010110001100101

       - Next Round Left 32 Bits:  10010110001110101101101110011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001010001010010110001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110001110101101101110011101

       - Right 32 Bits:            01000001010001010010110001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       01000001010001010010110001100101
          - S-Box Result:     01111010011110011110010100001001   [per every group of 4-bits]
          - Split Into Two:   0111101001111001 [L] 1110010100001001 [R]
          - Swap Halves:      11100101000010010111101001111001
          - Bit Inversion:    00011010111101101000010110000110
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10000000101110101101101010110000

          - FUNCTION OUTPUT:  10000000101110101101101010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110001110101101101110011101

       - FUNCTION OUTPUT:          10000000101110101101101010110000

       - Left XOR FUNCTION OUTPUT: 00010110100000000000000100101101

       - Next Round Left 32 Bits:  01000001010001010010110001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110100000000000000100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001010001010010110001100101

       - Right 32 Bits:            00010110100000000000000100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       00010110100000000000000100101101
          - S-Box Result:     10100000001011111111101011100110   [per every group of 4-bits]
          - Split Into Two:   1010000000101111 [L] 1111101011100110 [R]
          - Swap Halves:      11111010111001101010000000101111
          - Bit Inversion:    00000101000110010101111111010000
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     00011111110000000010110110011110

          - FUNCTION OUTPUT:  00011111110000000010110110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001010001010010110001100101

       - FUNCTION OUTPUT:          00011111110000000010110110011110

       - Left XOR FUNCTION OUTPUT: 01011110100001010000000111111011

       - Next Round Left 32 Bits:  00010110100000000000000100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100001010000000111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110100000000000000100101101

       - Right 32 Bits:            01011110100001010000000111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       01011110100001010000000111111011
          - S-Box Result:     10011100001010011111101010111000   [per every group of 4-bits]
          - Split Into Two:   1001110000101001 [L] 1111101010111000 [R]
          - Swap Halves:      11111010101110001001110000101001
          - Bit Inversion:    00000101010001110110001111010110
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     01011111011101100010111100001100

          - FUNCTION OUTPUT:  01011111011101100010111100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110100000000000000100101101

       - FUNCTION OUTPUT:          01011111011101100010111100001100

       - Left XOR FUNCTION OUTPUT: 01001001111101100010111000100001

       - Next Round Left 32 Bits:  01011110100001010000000111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001111101100010111000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100001010000000111111011

       - Right 32 Bits:            01001001111101100010111000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01001001111101100010111000100001
          - S-Box Result:     01110011101100001110110011101010   [per every group of 4-bits]
          - Split Into Two:   0111001110110000 [L] 1110110011101010 [R]
          - Swap Halves:      11101100111010100111001110110000
          - Bit Inversion:    00010011000101011000110001001111
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     01001011011100000101010101110101

          - FUNCTION OUTPUT:  01001011011100000101010101110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100001010000000111111011

       - FUNCTION OUTPUT:          01001011011100000101010101110101

       - Left XOR FUNCTION OUTPUT: 00010101111101010101010010001110

       - Next Round Left 32 Bits:  01001001111101100010111000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101111101010101010010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001111101100010111000100001

       - Right 32 Bits:            00010101111101010101010010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       00010101111101010101010010001110
          - S-Box Result:     10101001101110011001011100101100   [per every group of 4-bits]
          - Split Into Two:   1010100110111001 [L] 1001011100101100 [R]
          - Swap Halves:      10010111001011001010100110111001
          - Bit Inversion:    01101000110100110101011001000110
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     00110011001101000110011100101110

          - FUNCTION OUTPUT:  00110011001101000110011100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001111101100010111000100001

       - FUNCTION OUTPUT:          00110011001101000110011100101110

       - Left XOR FUNCTION OUTPUT: 01111010110000100100100100001111

       - Next Round Left 32 Bits:  00010101111101010101010010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010110000100100100100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101111101010101010010001110

       - Right 32 Bits:            01111010110000100100100100001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       01111010110000100100100100001111
          - S-Box Result:     11010100010111100111001111111011   [per every group of 4-bits]
          - Split Into Two:   1101010001011110 [L] 0111001111111011 [R]
          - Swap Halves:      01110011111110111101010001011110
          - Bit Inversion:    10001100000001000010101110100001
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     11011110100000100110110001001000

          - FUNCTION OUTPUT:  11011110100000100110110001001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101111101010101010010001110

       - FUNCTION OUTPUT:          11011110100000100110110001001000

       - Left XOR FUNCTION OUTPUT: 11001011011101110011100011000110

       - Next Round Left 32 Bits:  01111010110000100100100100001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011011101110011100011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010110000100100100100001111

       - Right 32 Bits:            11001011011101110011100011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       11001011011101110011100011000110
          - S-Box Result:     01011000110111010001001001010000   [per every group of 4-bits]
          - Split Into Two:   0101100011011101 [L] 0001001001010000 [R]
          - Swap Halves:      00010010010100000101100011011101
          - Bit Inversion:    11101101101011111010011100100010
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     10110001001100010101000110100001

          - FUNCTION OUTPUT:  10110001001100010101000110100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010110000100100100100001111

       - FUNCTION OUTPUT:          10110001001100010101000110100001

       - Left XOR FUNCTION OUTPUT: 11001011111100110001100010101110

       - Next Round Left 32 Bits:  11001011011101110011100011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011111100110001100010101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011011101110011100011000110

       - Right 32 Bits:            11001011111100110001100010101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11001011111100110001100010101110
          - S-Box Result:     01011000101100011010001001001100   [per every group of 4-bits]
          - Split Into Two:   0101100010110001 [L] 1010001001001100 [R]
          - Swap Halves:      10100010010011000101100010110001
          - Bit Inversion:    01011101101100111010011101001110
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     00000110100010011010101111011000

          - FUNCTION OUTPUT:  00000110100010011010101111011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011011101110011100011000110

       - FUNCTION OUTPUT:          00000110100010011010101111011000

       - Left XOR FUNCTION OUTPUT: 11001101111111101001001100011110

       - Next Round Left 32 Bits:  11001011111100110001100010101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101111111101001001100011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011111100110001100010101110

       - Right 32 Bits:            11001101111111101001001100011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       11001101111111101001001100011110
          - S-Box Result:     01010110101111000011000110101100   [per every group of 4-bits]
          - Split Into Two:   0101011010111100 [L] 0011000110101100 [R]
          - Swap Halves:      00110001101011000101011010111100
          - Bit Inversion:    11001110010100111010100101000011
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     10011100001110110111001001011101

          - FUNCTION OUTPUT:  10011100001110110111001001011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011111100110001100010101110

       - FUNCTION OUTPUT:          10011100001110110111001001011101

       - Left XOR FUNCTION OUTPUT: 01010111110010000110101011110011

       - Next Round Left 32 Bits:  11001101111111101001001100011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111110010000110101011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101111111101001001100011110

       - Right 32 Bits:            01010111110010000110101011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01010111110010000110101011110011
          - S-Box Result:     10011101010100100000010010110001   [per every group of 4-bits]
          - Split Into Two:   1001110101010010 [L] 0000010010110001 [R]
          - Swap Halves:      00000100101100011001110101010010
          - Bit Inversion:    11111011010011100110001010101101
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     10100111101001010101000011110111

          - FUNCTION OUTPUT:  10100111101001010101000011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101111111101001001100011110

       - FUNCTION OUTPUT:          10100111101001010101000011110111

       - Left XOR FUNCTION OUTPUT: 01101010010110111100001111101001

       - Next Round Left 32 Bits:  01010111110010000110101011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010010110111100001111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110101001011011110000111110100101010111110010000110101011110011

 > Processed Block:     0110101001011011110000111110100101010111110010000110101011110011



Plaintext Block 3: 0100000000100001010011000100100010111110110001100010011001011110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000001000010100110001001000

       - Right 32 Bits:            10111110110001100010011001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       10111110110001100010011001011110
          - S-Box Result:     10001100010100001110000010011100   [per every group of 4-bits]
          - Split Into Two:   1000110001010000 [L] 1110000010011100 [R]
          - Swap Halves:      11100000100111001000110001010000
          - Bit Inversion:    00011111011000110111001110101111
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     00000001001100010001101101110100

          - FUNCTION OUTPUT:  00000001001100010001101101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000001000010100110001001000

       - FUNCTION OUTPUT:          00000001001100010001101101110100

       - Left XOR FUNCTION OUTPUT: 01000001000100000101011100111100

       - Next Round Left 32 Bits:  10111110110001100010011001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001000100000101011100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110110001100010011001011110

       - Right 32 Bits:            01000001000100000101011100111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       01000001000100000101011100111100
          - S-Box Result:     01111010101011111001110100010101   [per every group of 4-bits]
          - Split Into Two:   0111101010101111 [L] 1001110100010101 [R]
          - Swap Halves:      10011101000101010111101010101111
          - Bit Inversion:    01100010111010101000010101010000
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     00111000101101100110111001100010

          - FUNCTION OUTPUT:  00111000101101100110111001100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110110001100010011001011110

       - FUNCTION OUTPUT:          00111000101101100110111001100010

       - Left XOR FUNCTION OUTPUT: 10000110011100000100100000111100

       - Next Round Left 32 Bits:  01000001000100000101011100111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110011100000100100000111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001000100000101011100111100

       - Right 32 Bits:            10000110011100000100100000111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       10000110011100000100100000111100
          - S-Box Result:     00100000110111110111001000010101   [per every group of 4-bits]
          - Split Into Two:   0010000011011111 [L] 0111001000010101 [R]
          - Swap Halves:      01110010000101010010000011011111
          - Bit Inversion:    10001101111010101101111100100000
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     11010111100100110111110101001100

          - FUNCTION OUTPUT:  11010111100100110111110101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001000100000101011100111100

       - FUNCTION OUTPUT:          11010111100100110111110101001100

       - Left XOR FUNCTION OUTPUT: 10010110100000110010101001110000

       - Next Round Left 32 Bits:  10000110011100000100100000111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110100000110010101001110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110011100000100100000111100

       - Right 32 Bits:            10010110100000110010101001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       10010110100000110010101001110000
          - S-Box Result:     00110000001000011110010011011111   [per every group of 4-bits]
          - Split Into Two:   0011000000100001 [L] 1110010011011111 [R]
          - Swap Halves:      11100100110111110011000000100001
          - Bit Inversion:    00011011001000001100111111011110
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     01100001011000010100001100110111

          - FUNCTION OUTPUT:  01100001011000010100001100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110011100000100100000111100

       - FUNCTION OUTPUT:          01100001011000010100001100110111

       - Left XOR FUNCTION OUTPUT: 11100111000100010000101100001011

       - Next Round Left 32 Bits:  10010110100000110010101001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111000100010000101100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110100000110010101001110000

       - Right 32 Bits:            11100111000100010000101100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       11100111000100010000101100001011
          - S-Box Result:     11001101101010101111100011111000   [per every group of 4-bits]
          - Split Into Two:   1100110110101010 [L] 1111100011111000 [R]
          - Swap Halves:      11111000111110001100110110101010
          - Bit Inversion:    00000111000001110011001001010101
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01101101110100001010100111010100

          - FUNCTION OUTPUT:  01101101110100001010100111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110100000110010101001110000

       - FUNCTION OUTPUT:          01101101110100001010100111010100

       - Left XOR FUNCTION OUTPUT: 11111011010100111000001110100100

       - Next Round Left 32 Bits:  11100111000100010000101100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011010100111000001110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111000100010000101100001011

       - Right 32 Bits:            11111011010100111000001110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       11111011010100111000001110100100
          - S-Box Result:     10111000100100010010000101000111   [per every group of 4-bits]
          - Split Into Two:   1011100010010001 [L] 0010000101000111 [R]
          - Swap Halves:      00100001010001111011100010010001
          - Bit Inversion:    11011110101110000100011101101110
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     00010100100011100101011111111001

          - FUNCTION OUTPUT:  00010100100011100101011111111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111000100010000101100001011

       - FUNCTION OUTPUT:          00010100100011100101011111111001

       - Left XOR FUNCTION OUTPUT: 11110011100111110101110011110010

       - Next Round Left 32 Bits:  11111011010100111000001110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011100111110101110011110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011010100111000001110100100

       - Right 32 Bits:            11110011100111110101110011110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       11110011100111110101110011110010
          - S-Box Result:     10110001001110111001010110111110   [per every group of 4-bits]
          - Split Into Two:   1011000100111011 [L] 1001010110111110 [R]
          - Swap Halves:      10010101101111101011000100111011
          - Bit Inversion:    01101010010000010100111011000100
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     11110000000011010001000111110010

          - FUNCTION OUTPUT:  11110000000011010001000111110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011010100111000001110100100

       - FUNCTION OUTPUT:          11110000000011010001000111110010

       - Left XOR FUNCTION OUTPUT: 00001011010111101001001001010110

       - Next Round Left 32 Bits:  11110011100111110101110011110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011010111101001001001010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011100111110101110011110010

       - Right 32 Bits:            00001011010111101001001001010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       00001011010111101001001001010110
          - S-Box Result:     11111000100111000011111010010000   [per every group of 4-bits]
          - Split Into Two:   1111100010011100 [L] 0011111010010000 [R]
          - Swap Halves:      00111110100100001111100010011100
          - Bit Inversion:    11000001011011110000011101100011
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     11011011101101100111010100101101

          - FUNCTION OUTPUT:  11011011101101100111010100101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011100111110101110011110010

       - FUNCTION OUTPUT:          11011011101101100111010100101101

       - Left XOR FUNCTION OUTPUT: 00101000001010010010100111011111

       - Next Round Left 32 Bits:  00001011010111101001001001010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000001010010010100111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011010111101001001001010110

       - Right 32 Bits:            00101000001010010010100111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       00101000001010010010100111011111
          - S-Box Result:     11100010111000111110001101101011   [per every group of 4-bits]
          - Split Into Two:   1110001011100011 [L] 1110001101101011 [R]
          - Swap Halves:      11100011011010111110001011100011
          - Bit Inversion:    00011100100101000001110100011100
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     01000110101001010101000111000110

          - FUNCTION OUTPUT:  01000110101001010101000111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011010111101001001001010110

       - FUNCTION OUTPUT:          01000110101001010101000111000110

       - Left XOR FUNCTION OUTPUT: 01001101111110111100001110010000

       - Next Round Left 32 Bits:  00101000001010010010100111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101111110111100001110010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000001010010010100111011111

       - Right 32 Bits:            01001101111110111100001110010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01001101111110111100001110010000
          - S-Box Result:     01110110101110000101000100111111   [per every group of 4-bits]
          - Split Into Two:   0111011010111000 [L] 0101000100111111 [R]
          - Swap Halves:      01010001001111110111011010111000
          - Bit Inversion:    10101110110000001000100101000111
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     11110110101001010101000001111101

          - FUNCTION OUTPUT:  11110110101001010101000001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000001010010010100111011111

       - FUNCTION OUTPUT:          11110110101001010101000001111101

       - Left XOR FUNCTION OUTPUT: 11011110100011000111100110100010

       - Next Round Left 32 Bits:  01001101111110111100001110010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110100011000111100110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101111110111100001110010000

       - Right 32 Bits:            11011110100011000111100110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       11011110100011000111100110100010
          - S-Box Result:     01101100001001011101001101001110   [per every group of 4-bits]
          - Split Into Two:   0110110000100101 [L] 1101001101001110 [R]
          - Swap Halves:      11010011010011100110110000100101
          - Bit Inversion:    00101100101100011001001111011010
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     01110111010101101010001010110010

          - FUNCTION OUTPUT:  01110111010101101010001010110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101111110111100001110010000

       - FUNCTION OUTPUT:          01110111010101101010001010110010

       - Left XOR FUNCTION OUTPUT: 00111010101011010110000100100010

       - Next Round Left 32 Bits:  11011110100011000111100110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010101011010110000100100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110100011000111100110100010

       - Right 32 Bits:            00111010101011010110000100100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       00111010101011010110000100100010
          - S-Box Result:     00010100010001100000101011101110   [per every group of 4-bits]
          - Split Into Two:   0001010001000110 [L] 0000101011101110 [R]
          - Swap Halves:      00001010111011100001010001000110
          - Bit Inversion:    11110101000100011110101110111001
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     10100111100101111010110001010000

          - FUNCTION OUTPUT:  10100111100101111010110001010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110100011000111100110100010

       - FUNCTION OUTPUT:          10100111100101111010110001010000

       - Left XOR FUNCTION OUTPUT: 01111001000110111101010111110010

       - Next Round Left 32 Bits:  00111010101011010110000100100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001000110111101010111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010101011010110000100100010

       - Right 32 Bits:            01111001000110111101010111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       01111001000110111101010111110010
          - S-Box Result:     11010011101010000110100110111110   [per every group of 4-bits]
          - Split Into Two:   1101001110101000 [L] 0110100110111110 [R]
          - Swap Halves:      01101001101111101101001110101000
          - Bit Inversion:    10010110010000010010110001010111
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     11001010110111111101101011010100

          - FUNCTION OUTPUT:  11001010110111111101101011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010101011010110000100100010

       - FUNCTION OUTPUT:          11001010110111111101101011010100

       - Left XOR FUNCTION OUTPUT: 11110000011100101011101111110110

       - Next Round Left 32 Bits:  01111001000110111101010111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000011100101011101111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001000110111101010111110010

       - Right 32 Bits:            11110000011100101011101111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11110000011100101011101111110110
          - S-Box Result:     10111111110111101000100010110000   [per every group of 4-bits]
          - Split Into Two:   1011111111011110 [L] 1000100010110000 [R]
          - Swap Halves:      10001000101100001011111111011110
          - Bit Inversion:    01110111010011110100000000100001
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     00101100011101010100110010110111

          - FUNCTION OUTPUT:  00101100011101010100110010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001000110111101010111110010

       - FUNCTION OUTPUT:          00101100011101010100110010110111

       - Left XOR FUNCTION OUTPUT: 01010101011011101001100101000101

       - Next Round Left 32 Bits:  11110000011100101011101111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101011011101001100101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000011100101011101111110110

       - Right 32 Bits:            01010101011011101001100101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       01010101011011101001100101000101
          - S-Box Result:     10011001000011000011001101111001   [per every group of 4-bits]
          - Split Into Two:   1001100100001100 [L] 0011001101111001 [R]
          - Swap Halves:      00110011011110011001100100001100
          - Bit Inversion:    11001100100001100110011011110011
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     10011110111011101011110111101101

          - FUNCTION OUTPUT:  10011110111011101011110111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000011100101011101111110110

       - FUNCTION OUTPUT:          10011110111011101011110111101101

       - Left XOR FUNCTION OUTPUT: 01101110100111000000011000011011

       - Next Round Left 32 Bits:  01010101011011101001100101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110100111000000011000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101011011101001100101000101

       - Right 32 Bits:            01101110100111000000011000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01101110100111000000011000011011
          - S-Box Result:     00001100001101011111000010101000   [per every group of 4-bits]
          - Split Into Two:   0000110000110101 [L] 1111000010101000 [R]
          - Swap Halves:      11110000101010000000110000110101
          - Bit Inversion:    00001111010101111111001111001010
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     01010011101111001100000110010000

          - FUNCTION OUTPUT:  01010011101111001100000110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101011011101001100101000101

       - FUNCTION OUTPUT:          01010011101111001100000110010000

       - Left XOR FUNCTION OUTPUT: 00000110110100100101100011010101

       - Next Round Left 32 Bits:  01101110100111000000011000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110110100100101100011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000011011010010010110001101010101101110100111000000011000011011

 > Processed Block:     0000011011010010010110001101010101101110100111000000011000011011



Plaintext Block 4: 0110010101010011111011100110111011100000100000001011001110000001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101010100111110111001101110

       - Right 32 Bits:            11100000100000001011001110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       11100000100000001011001110000001
          - S-Box Result:     11001111001011111000000100101010   [per every group of 4-bits]
          - Split Into Two:   1100111100101111 [L] 1000000100101010 [R]
          - Swap Halves:      10000001001010101100111100101111
          - Bit Inversion:    01111110110101010011000011010000
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     01100000100001110101100000001011

          - FUNCTION OUTPUT:  01100000100001110101100000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101010100111110111001101110

       - FUNCTION OUTPUT:          01100000100001110101100000001011

       - Left XOR FUNCTION OUTPUT: 00000101110101001011011001100101

       - Next Round Left 32 Bits:  11100000100000001011001110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101110101001011011001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000100000001011001110000001

       - Right 32 Bits:            00000101110101001011011001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       00000101110101001011011001100101
          - S-Box Result:     11111001011001111000000000001001   [per every group of 4-bits]
          - Split Into Two:   1111100101100111 [L] 1000000000001001 [R]
          - Swap Halves:      10000000000010011111100101100111
          - Bit Inversion:    01111111111101100000011010011000
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     00100101101010101110110110101010

          - FUNCTION OUTPUT:  00100101101010101110110110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000100000001011001110000001

       - FUNCTION OUTPUT:          00100101101010101110110110101010

       - Left XOR FUNCTION OUTPUT: 11000101001010100101111000101011

       - Next Round Left 32 Bits:  00000101110101001011011001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101001010100101111000101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101110101001011011001100101

       - Right 32 Bits:            11000101001010100101111000101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       11000101001010100101111000101011
          - S-Box Result:     01011001111001001001110011101000   [per every group of 4-bits]
          - Split Into Two:   0101100111100100 [L] 1001110011101000 [R]
          - Swap Halves:      10011100111010000101100111100100
          - Bit Inversion:    01100011000101111010011000011011
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     00111001011011100000010001110111

          - FUNCTION OUTPUT:  00111001011011100000010001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101110101001011011001100101

       - FUNCTION OUTPUT:          00111001011011100000010001110111

       - Left XOR FUNCTION OUTPUT: 00111100101110101011001000010010

       - Next Round Left 32 Bits:  11000101001010100101111000101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100101110101011001000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101001010100101111000101011

       - Right 32 Bits:            00111100101110101011001000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00111100101110101011001000010010
          - S-Box Result:     00010101100001001000111010101110   [per every group of 4-bits]
          - Split Into Two:   0001010110000100 [L] 1000111010101110 [R]
          - Swap Halves:      10001110101011100001010110000100
          - Bit Inversion:    01110001010100011110101001111011
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     00001011000100000110011010010010

          - FUNCTION OUTPUT:  00001011000100000110011010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101001010100101111000101011

       - FUNCTION OUTPUT:          00001011000100000110011010010010

       - Left XOR FUNCTION OUTPUT: 11001110001110100011100010111001

       - Next Round Left 32 Bits:  00111100101110101011001000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110001110100011100010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100101110101011001000010010

       - Right 32 Bits:            11001110001110100011100010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       11001110001110100011100010111001
          - S-Box Result:     01011100000101000001001010000011   [per every group of 4-bits]
          - Split Into Two:   0101110000010100 [L] 0001001010000011 [R]
          - Swap Halves:      00010010100000110101110000010100
          - Bit Inversion:    11101101011111001010001111101011
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     10000111101010110011100001101010

          - FUNCTION OUTPUT:  10000111101010110011100001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100101110101011001000010010

       - FUNCTION OUTPUT:          10000111101010110011100001101010

       - Left XOR FUNCTION OUTPUT: 10111011000100011000101001111000

       - Next Round Left 32 Bits:  11001110001110100011100010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000100011000101001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110001110100011100010111001

       - Right 32 Bits:            10111011000100011000101001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       10111011000100011000101001111000
          - S-Box Result:     10001000101010100010010011010010   [per every group of 4-bits]
          - Split Into Two:   1000100010101010 [L] 0010010011010010 [R]
          - Swap Halves:      00100100110100101000100010101010
          - Bit Inversion:    11011011001011010111011101010101
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     00010001000110110110011111000010

          - FUNCTION OUTPUT:  00010001000110110110011111000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110001110100011100010111001

       - FUNCTION OUTPUT:          00010001000110110110011111000010

       - Left XOR FUNCTION OUTPUT: 11011111001000010101111101111011

       - Next Round Left 32 Bits:  10111011000100011000101001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111001000010101111101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000100011000101001111000

       - Right 32 Bits:            11011111001000010101111101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       11011111001000010101111101111011
          - S-Box Result:     01101011111010101001101111011000   [per every group of 4-bits]
          - Split Into Two:   0110101111101010 [L] 1001101111011000 [R]
          - Swap Halves:      10011011110110000110101111101010
          - Bit Inversion:    01100100001001111001010000010101
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     11111110011010111100101100100011

          - FUNCTION OUTPUT:  11111110011010111100101100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000100011000101001111000

       - FUNCTION OUTPUT:          11111110011010111100101100100011

       - Left XOR FUNCTION OUTPUT: 01000101011110100100000101011011

       - Next Round Left 32 Bits:  11011111001000010101111101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101011110100100000101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111001000010101111101111011

       - Right 32 Bits:            01000101011110100100000101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       01000101011110100100000101011011
          - S-Box Result:     01111001110101000111101010011000   [per every group of 4-bits]
          - Split Into Two:   0111100111010100 [L] 0111101010011000 [R]
          - Swap Halves:      01111010100110000111100111010100
          - Bit Inversion:    10000101011001111000011000101011
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     10011111101111101111010001100101

          - FUNCTION OUTPUT:  10011111101111101111010001100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111001000010101111101111011

       - FUNCTION OUTPUT:          10011111101111101111010001100101

       - Left XOR FUNCTION OUTPUT: 01000000100111111010101100011110

       - Next Round Left 32 Bits:  01000101011110100100000101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000100111111010101100011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101011110100100000101011011

       - Right 32 Bits:            01000000100111111010101100011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       01000000100111111010101100011110
          - S-Box Result:     01111111001110110100100010101100   [per every group of 4-bits]
          - Split Into Two:   0111111100111011 [L] 0100100010101100 [R]
          - Swap Halves:      01001000101011000111111100111011
          - Bit Inversion:    10110111010100111000000011000100
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     11101101011000101100110000011110

          - FUNCTION OUTPUT:  11101101011000101100110000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101011110100100000101011011

       - FUNCTION OUTPUT:          11101101011000101100110000011110

       - Left XOR FUNCTION OUTPUT: 10101000000110001000110101000101

       - Next Round Left 32 Bits:  01000000100111111010101100011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000000110001000110101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000100111111010101100011110

       - Right 32 Bits:            10101000000110001000110101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       10101000000110001000110101000101
          - S-Box Result:     01000010101000100010011001111001   [per every group of 4-bits]
          - Split Into Two:   0100001010100010 [L] 0010011001111001 [R]
          - Swap Halves:      00100110011110010100001010100010
          - Bit Inversion:    11011001100001101011110101011101
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     10000001111000110110010001100111

          - FUNCTION OUTPUT:  10000001111000110110010001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000100111111010101100011110

       - FUNCTION OUTPUT:          10000001111000110110010001100111

       - Left XOR FUNCTION OUTPUT: 11000001011111001100111101111001

       - Next Round Left 32 Bits:  10101000000110001000110101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001011111001100111101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000000110001000110101000101

       - Right 32 Bits:            11000001011111001100111101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       11000001011111001100111101111001
          - S-Box Result:     01011010110101010101101111010011   [per every group of 4-bits]
          - Split Into Two:   0101101011010101 [L] 0101101111010011 [R]
          - Swap Halves:      01011011110100110101101011010101
          - Bit Inversion:    10100100001011001010010100101010
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     11111111110010111001010001000010

          - FUNCTION OUTPUT:  11111111110010111001010001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000000110001000110101000101

       - FUNCTION OUTPUT:          11111111110010111001010001000010

       - Left XOR FUNCTION OUTPUT: 01010111110100110001100100000111

       - Next Round Left 32 Bits:  11000001011111001100111101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111110100110001100100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001011111001100111101111001

       - Right 32 Bits:            01010111110100110001100100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       01010111110100110001100100000111
          - S-Box Result:     10011101011000011010001111111101   [per every group of 4-bits]
          - Split Into Two:   1001110101100001 [L] 1010001111111101 [R]
          - Swap Halves:      10100011111111011001110101100001
          - Bit Inversion:    01011100000000100110001010011110
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     00001110100001000010010101110111

          - FUNCTION OUTPUT:  00001110100001000010010101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001011111001100111101111001

       - FUNCTION OUTPUT:          00001110100001000010010101110111

       - Left XOR FUNCTION OUTPUT: 11001111111110001110101000001110

       - Next Round Left 32 Bits:  01010111110100110001100100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111111110001110101000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111110100110001100100000111

       - Right 32 Bits:            11001111111110001110101000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       11001111111110001110101000001110
          - S-Box Result:     01011011101100101100010011111100   [per every group of 4-bits]
          - Split Into Two:   0101101110110010 [L] 1100010011111100 [R]
          - Swap Halves:      11000100111111000101101110110010
          - Bit Inversion:    00111011000000111010010001001101
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     01100111100111010101001011001110

          - FUNCTION OUTPUT:  01100111100111010101001011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111110100110001100100000111

       - FUNCTION OUTPUT:          01100111100111010101001011001110

       - Left XOR FUNCTION OUTPUT: 00110000010011100100101111001001

       - Next Round Left 32 Bits:  11001111111110001110101000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000010011100100101111001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111111110001110101000001110

       - Right 32 Bits:            00110000010011100100101111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       00110000010011100100101111001001
          - S-Box Result:     00011111011111000111100001010011   [per every group of 4-bits]
          - Split Into Two:   0001111101111100 [L] 0111100001010011 [R]
          - Swap Halves:      01111000010100110001111101111100
          - Bit Inversion:    10000111101011001110000010000011
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     11011100100101101110110000010101

          - FUNCTION OUTPUT:  11011100100101101110110000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111111110001110101000001110

       - FUNCTION OUTPUT:          11011100100101101110110000010101

       - Left XOR FUNCTION OUTPUT: 00010011011011100000011000011011

       - Next Round Left 32 Bits:  00110000010011100100101111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011011011100000011000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000010011100100101111001001

       - Right 32 Bits:            00010011011011100000011000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       00010011011011100000011000011011
          - S-Box Result:     10100001000011001111000010101000   [per every group of 4-bits]
          - Split Into Two:   1010000100001100 [L] 1111000010101000 [R]
          - Swap Halves:      11110000101010001010000100001100
          - Bit Inversion:    00001111010101110101111011110011
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     01011101001111111000010111101101

          - FUNCTION OUTPUT:  01011101001111111000010111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000010011100100101111001001

       - FUNCTION OUTPUT:          01011101001111111000010111101101

       - Left XOR FUNCTION OUTPUT: 01101101011100011100111000100100

       - Next Round Left 32 Bits:  00010011011011100000011000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101011100011100111000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011011011100000011000011011

       - Right 32 Bits:            01101101011100011100111000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01101101011100011100111000100100
          - S-Box Result:     00000110110110100101110011100111   [per every group of 4-bits]
          - Split Into Two:   0000011011011010 [L] 0101110011100111 [R]
          - Swap Halves:      01011100111001110000011011011010
          - Bit Inversion:    10100011000110001111100100100101
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     11111111111100111100101101111111

          - FUNCTION OUTPUT:  11111111111100111100101101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011011011100000011000011011

       - FUNCTION OUTPUT:          11111111111100111100101101111111

       - Left XOR FUNCTION OUTPUT: 11101100100111011100110101100100

       - Next Round Left 32 Bits:  01101101011100011100111000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100100111011100110101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110110010011101110011010110010001101101011100011100111000100100

 > Processed Block:     1110110010011101110011010110010001101101011100011100111000100100



Plaintext Block 5: 1111010010111001101010000010101001010100001001110001010111000011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100101110011010100000101010

       - Right 32 Bits:            01010100001001110001010111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       01010100001001110001010111000011
          - S-Box Result:     10010111111011011010100101010001   [per every group of 4-bits]
          - Split Into Two:   1001011111101101 [L] 1010100101010001 [R]
          - Swap Halves:      10101001010100011001011111101101
          - Bit Inversion:    01010110101011100110100000010010
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     01001000111111000000000011001001

          - FUNCTION OUTPUT:  01001000111111000000000011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100101110011010100000101010

       - FUNCTION OUTPUT:          01001000111111000000000011001001

       - Left XOR FUNCTION OUTPUT: 10111100010001011010100011100011

       - Next Round Left 32 Bits:  01010100001001110001010111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100010001011010100011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100001001110001010111000011

       - Right 32 Bits:            10111100010001011010100011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       10111100010001011010100011100011
          - S-Box Result:     10000101011110010100001011000001   [per every group of 4-bits]
          - Split Into Two:   1000010101111001 [L] 0100001011000001 [R]
          - Swap Halves:      01000010110000011000010101111001
          - Bit Inversion:    10111101001111100111101010000110
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     11100111011000101001000110110100

          - FUNCTION OUTPUT:  11100111011000101001000110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100001001110001010111000011

       - FUNCTION OUTPUT:          11100111011000101001000110110100

       - Left XOR FUNCTION OUTPUT: 10110011010001011000010001110111

       - Next Round Left 32 Bits:  10111100010001011010100011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011010001011000010001110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100010001011010100011100011

       - Right 32 Bits:            10110011010001011000010001110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       10110011010001011000010001110111
          - S-Box Result:     10000001011110010010011111011101   [per every group of 4-bits]
          - Split Into Two:   1000000101111001 [L] 0010011111011101 [R]
          - Swap Halves:      00100111110111011000000101111001
          - Bit Inversion:    11011000001000100111111010000110
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     10000010010110111101110011101010

          - FUNCTION OUTPUT:  10000010010110111101110011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100010001011010100011100011

       - FUNCTION OUTPUT:          10000010010110111101110011101010

       - Left XOR FUNCTION OUTPUT: 00111110000111100111010000001001

       - Next Round Left 32 Bits:  10110011010001011000010001110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110000111100111010000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011010001011000010001110111

       - Right 32 Bits:            00111110000111100111010000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00111110000111100111010000001001
          - S-Box Result:     00011100101011001101011111110011   [per every group of 4-bits]
          - Split Into Two:   0001110010101100 [L] 1101011111110011 [R]
          - Swap Halves:      11010111111100110001110010101100
          - Bit Inversion:    00101000000011001110001101010011
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     01010010010011010110111110111010

          - FUNCTION OUTPUT:  01010010010011010110111110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011010001011000010001110111

       - FUNCTION OUTPUT:          01010010010011010110111110111010

       - Left XOR FUNCTION OUTPUT: 11100001000010001110101111001101

       - Next Round Left 32 Bits:  00111110000111100111010000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001000010001110101111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110000111100111010000001001

       - Right 32 Bits:            11100001000010001110101111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       11100001000010001110101111001101
          - S-Box Result:     11001010111100101100100001010110   [per every group of 4-bits]
          - Split Into Two:   1100101011110010 [L] 1100100001010110 [R]
          - Swap Halves:      11001000010101101100101011110010
          - Bit Inversion:    00110111101010010011010100001101
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01011101011111101010111010001100

          - FUNCTION OUTPUT:  01011101011111101010111010001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110000111100111010000001001

       - FUNCTION OUTPUT:          01011101011111101010111010001100

       - Left XOR FUNCTION OUTPUT: 01100011011000001101101010000101

       - Next Round Left 32 Bits:  11100001000010001110101111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011011000001101101010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001000010001110101111001101

       - Right 32 Bits:            01100011011000001101101010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       01100011011000001101101010000101
          - S-Box Result:     00000001000011110110010000101001   [per every group of 4-bits]
          - Split Into Two:   0000000100001111 [L] 0110010000101001 [R]
          - Swap Halves:      01100100001010010000000100001111
          - Bit Inversion:    10011011110101101111111011110000
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     01010001111000001110111001100111

          - FUNCTION OUTPUT:  01010001111000001110111001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001000010001110101111001101

       - FUNCTION OUTPUT:          01010001111000001110111001100111

       - Left XOR FUNCTION OUTPUT: 10110000111010000000010110101010

       - Next Round Left 32 Bits:  01100011011000001101101010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000111010000000010110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011011000001101101010000101

       - Right 32 Bits:            10110000111010000000010110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       10110000111010000000010110101010
          - S-Box Result:     10001111110000101111100101000100   [per every group of 4-bits]
          - Split Into Two:   1000111111000010 [L] 1111100101000100 [R]
          - Swap Halves:      11111001010001001000111111000010
          - Bit Inversion:    00000110101110110111000000111101
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10011100111101110010111100001011

          - FUNCTION OUTPUT:  10011100111101110010111100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011011000001101101010000101

       - FUNCTION OUTPUT:          10011100111101110010111100001011

       - Left XOR FUNCTION OUTPUT: 11111111100101111111010110001110

       - Next Round Left 32 Bits:  10110000111010000000010110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111100101111111010110001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000111010000000010110101010

       - Right 32 Bits:            11111111100101111111010110001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       11111111100101111111010110001110
          - S-Box Result:     10111011001111011011100100101100   [per every group of 4-bits]
          - Split Into Two:   1011101100111101 [L] 1011100100101100 [R]
          - Swap Halves:      10111001001011001011101100111101
          - Bit Inversion:    01000110110100110100010011000010
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     01011100000010100011011010001100

          - FUNCTION OUTPUT:  01011100000010100011011010001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000111010000000010110101010

       - FUNCTION OUTPUT:          01011100000010100011011010001100

       - Left XOR FUNCTION OUTPUT: 11101100111000100011001100100110

       - Next Round Left 32 Bits:  11111111100101111111010110001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100111000100011001100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111100101111111010110001110

       - Right 32 Bits:            11101100111000100011001100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       11101100111000100011001100100110
          - S-Box Result:     11000101110011100001000111100000   [per every group of 4-bits]
          - Split Into Two:   1100010111001110 [L] 0001000111100000 [R]
          - Swap Halves:      00010001111000001100010111001110
          - Bit Inversion:    11101110000111110011101000110001
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10110100001011100111011011101011

          - FUNCTION OUTPUT:  10110100001011100111011011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111100101111111010110001110

       - FUNCTION OUTPUT:          10110100001011100111011011101011

       - Left XOR FUNCTION OUTPUT: 01001011101110011000001101100101

       - Next Round Left 32 Bits:  11101100111000100011001100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011101110011000001101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100111000100011001100100110

       - Right 32 Bits:            01001011101110011000001101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01001011101110011000001101100101
          - S-Box Result:     01111000100000110010000100001001   [per every group of 4-bits]
          - Split Into Two:   0111100010000011 [L] 0010000100001001 [R]
          - Swap Halves:      00100001000010010111100010000011
          - Bit Inversion:    11011110111101101000011101111100
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     10000110100100110101111001000110

          - FUNCTION OUTPUT:  10000110100100110101111001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100111000100011001100100110

       - FUNCTION OUTPUT:          10000110100100110101111001000110

       - Left XOR FUNCTION OUTPUT: 01101010011100010110110101100000

       - Next Round Left 32 Bits:  01001011101110011000001101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010011100010110110101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011101110011000001101100101

       - Right 32 Bits:            01101010011100010110110101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       01101010011100010110110101100000
          - S-Box Result:     00000100110110100000011000001111   [per every group of 4-bits]
          - Split Into Two:   0000010011011010 [L] 0000011000001111 [R]
          - Swap Halves:      00000110000011110000010011011010
          - Bit Inversion:    11111001111100001111101100100101
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     10100010000101111100101001001101

          - FUNCTION OUTPUT:  10100010000101111100101001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011101110011000001101100101

       - FUNCTION OUTPUT:          10100010000101111100101001001101

       - Left XOR FUNCTION OUTPUT: 11101001101011100100100100101000

       - Next Round Left 32 Bits:  01101010011100010110110101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001101011100100100100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010011100010110110101100000

       - Right 32 Bits:            11101001101011100100100100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11101001101011100100100100101000
          - S-Box Result:     11000011010011000111001111100010   [per every group of 4-bits]
          - Split Into Two:   1100001101001100 [L] 0111001111100010 [R]
          - Swap Halves:      01110011111000101100001101001100
          - Bit Inversion:    10001100000111010011110010110011
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     11011110100110110111101101011010

          - FUNCTION OUTPUT:  11011110100110110111101101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010011100010110110101100000

       - FUNCTION OUTPUT:          11011110100110110111101101011010

       - Left XOR FUNCTION OUTPUT: 10110100111010100001011000111010

       - Next Round Left 32 Bits:  11101001101011100100100100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100111010100001011000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001101011100100100100101000

       - Right 32 Bits:            10110100111010100001011000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       10110100111010100001011000111010
          - S-Box Result:     10000111110001001010000000010100   [per every group of 4-bits]
          - Split Into Two:   1000011111000100 [L] 1010000000010100 [R]
          - Swap Halves:      10100000000101001000011111000100
          - Bit Inversion:    01011111111010110111100000111011
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     00000011011101011000111010111000

          - FUNCTION OUTPUT:  00000011011101011000111010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001101011100100100100101000

       - FUNCTION OUTPUT:          00000011011101011000111010111000

       - Left XOR FUNCTION OUTPUT: 11101010110110111100011110010000

       - Next Round Left 32 Bits:  10110100111010100001011000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010110110111100011110010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100111010100001011000111010

       - Right 32 Bits:            11101010110110111100011110010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11101010110110111100011110010000
          - S-Box Result:     11000100011010000101110100111111   [per every group of 4-bits]
          - Split Into Two:   1100010001101000 [L] 0101110100111111 [R]
          - Swap Halves:      01011101001111111100010001101000
          - Bit Inversion:    10100010110000000011101110010111
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     11111001111110100011011100000001

          - FUNCTION OUTPUT:  11111001111110100011011100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100111010100001011000111010

       - FUNCTION OUTPUT:          11111001111110100011011100000001

       - Left XOR FUNCTION OUTPUT: 01001101000100000010000100111011

       - Next Round Left 32 Bits:  11101010110110111100011110010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101000100000010000100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010110110111100011110010000

       - Right 32 Bits:            01001101000100000010000100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       01001101000100000010000100111011
          - S-Box Result:     01110110101011111110101000011000   [per every group of 4-bits]
          - Split Into Two:   0111011010101111 [L] 1110101000011000 [R]
          - Swap Halves:      11101010000110000111011010101111
          - Bit Inversion:    00010101111001111000100101010000
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     01000111100011110101001001001110

          - FUNCTION OUTPUT:  01000111100011110101001001001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010110110111100011110010000

       - FUNCTION OUTPUT:          01000111100011110101001001001110

       - Left XOR FUNCTION OUTPUT: 10101101010101001001010111011110

       - Next Round Left 32 Bits:  01001101000100000010000100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101010101001001010111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101000100000010000100111011

       - Right 32 Bits:            10101101010101001001010111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       10101101010101001001010111011110
          - S-Box Result:     01000110100101110011100101101100   [per every group of 4-bits]
          - Split Into Two:   0100011010010111 [L] 0011100101101100 [R]
          - Swap Halves:      00111001011011000100011010010111
          - Bit Inversion:    11000110100100111011100101101000
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     10011010011110001000101100110010

          - FUNCTION OUTPUT:  10011010011110001000101100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101000100000010000100111011

       - FUNCTION OUTPUT:          10011010011110001000101100110010

       - Left XOR FUNCTION OUTPUT: 11010111011010001010101000001001

       - Next Round Left 32 Bits:  10101101010101001001010111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111011010001010101000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101011101101000101010100000100110101101010101001001010111011110

 > Processed Block:     1101011101101000101010100000100110101101010101001001010111011110



Plaintext Block 6: 1111100010011101100100010111110011111011000110010001110101101001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000100111011001000101111100

       - Right 32 Bits:            11111011000110010001110101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       11111011000110010001110101101001
          - S-Box Result:     10111000101000111010011000000011   [per every group of 4-bits]
          - Split Into Two:   1011100010100011 [L] 1010011000000011 [R]
          - Swap Halves:      10100110000000111011100010100011
          - Bit Inversion:    01011001111111000100011101011100
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     01000111101011100010111110000111

          - FUNCTION OUTPUT:  01000111101011100010111110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000100111011001000101111100

       - FUNCTION OUTPUT:          01000111101011100010111110000111

       - Left XOR FUNCTION OUTPUT: 10111111001100111011111011111011

       - Next Round Left 32 Bits:  11111011000110010001110101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111001100111011111011111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011000110010001110101101001

       - Right 32 Bits:            10111111001100111011111011111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       10111111001100111011111011111011
          - S-Box Result:     10001011000100011000110010111000   [per every group of 4-bits]
          - Split Into Two:   1000101100010001 [L] 1000110010111000 [R]
          - Swap Halves:      10001100101110001000101100010001
          - Bit Inversion:    01110011010001110111010011101110
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     00101001000110111001111111011100

          - FUNCTION OUTPUT:  00101001000110111001111111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011000110010001110101101001

       - FUNCTION OUTPUT:          00101001000110111001111111011100

       - Left XOR FUNCTION OUTPUT: 11010010000000101000001010110101

       - Next Round Left 32 Bits:  10111111001100111011111011111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010000000101000001010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111001100111011111011111011

       - Right 32 Bits:            11010010000000101000001010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       11010010000000101000001010110101
          - S-Box Result:     01101110111111100010111010001001   [per every group of 4-bits]
          - Split Into Two:   0110111011111110 [L] 0010111010001001 [R]
          - Swap Halves:      00101110100010010110111011111110
          - Bit Inversion:    11010001011101101001000100000001
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     10001011000011110011001101101101

          - FUNCTION OUTPUT:  10001011000011110011001101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111001100111011111011111011

       - FUNCTION OUTPUT:          10001011000011110011001101101101

       - Left XOR FUNCTION OUTPUT: 00110100001111001000110110010110

       - Next Round Left 32 Bits:  11010010000000101000001010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100001111001000110110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010000000101000001010110101

       - Right 32 Bits:            00110100001111001000110110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00110100001111001000110110010110
          - S-Box Result:     00010111000101010010011000110000   [per every group of 4-bits]
          - Split Into Two:   0001011100010101 [L] 0010011000110000 [R]
          - Swap Halves:      00100110001100000001011100010101
          - Bit Inversion:    11011001110011111110100011101010
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     10100011100011100110010000000011

          - FUNCTION OUTPUT:  10100011100011100110010000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010000000101000001010110101

       - FUNCTION OUTPUT:          10100011100011100110010000000011

       - Left XOR FUNCTION OUTPUT: 01110001100011001110011010110110

       - Next Round Left 32 Bits:  00110100001111001000110110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001100011001110011010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100001111001000110110010110

       - Right 32 Bits:            01110001100011001110011010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       01110001100011001110011010110110
          - S-Box Result:     11011010001001011100000010000000   [per every group of 4-bits]
          - Split Into Two:   1101101000100101 [L] 1100000010000000 [R]
          - Swap Halves:      11000000100000001101101000100101
          - Bit Inversion:    00111111011111110010010111011010
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01010101101010001011111001011011

          - FUNCTION OUTPUT:  01010101101010001011111001011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100001111001000110110010110

       - FUNCTION OUTPUT:          01010101101010001011111001011011

       - Left XOR FUNCTION OUTPUT: 01100001100101000011001111001101

       - Next Round Left 32 Bits:  01110001100011001110011010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001100101000011001111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001100011001110011010110110

       - Right 32 Bits:            01100001100101000011001111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       01100001100101000011001111001101
          - S-Box Result:     00001010001101110001000101010110   [per every group of 4-bits]
          - Split Into Two:   0000101000110111 [L] 0001000101010110 [R]
          - Swap Halves:      00010001010101100000101000110111
          - Bit Inversion:    11101110101010011111010111001000
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     00100100100111111110010101011111

          - FUNCTION OUTPUT:  00100100100111111110010101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001100011001110011010110110

       - FUNCTION OUTPUT:          00100100100111111110010101011111

       - Left XOR FUNCTION OUTPUT: 01010101000100110000001111101001

       - Next Round Left 32 Bits:  01100001100101000011001111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101000100110000001111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001100101000011001111001101

       - Right 32 Bits:            01010101000100110000001111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       01010101000100110000001111101001
          - S-Box Result:     10011001101000011111000111000011   [per every group of 4-bits]
          - Split Into Two:   1001100110100001 [L] 1111000111000011 [R]
          - Swap Halves:      11110001110000111001100110100001
          - Bit Inversion:    00001110001111000110011001011110
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10010100011100000011100101101000

          - FUNCTION OUTPUT:  10010100011100000011100101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001100101000011001111001101

       - FUNCTION OUTPUT:          10010100011100000011100101101000

       - Left XOR FUNCTION OUTPUT: 11110101111001000000101010100101

       - Next Round Left 32 Bits:  01010101000100110000001111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101111001000000101010100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101000100110000001111101001

       - Right 32 Bits:            11110101111001000000101010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       11110101111001000000101010100101
          - S-Box Result:     10111001110001111111010001001001   [per every group of 4-bits]
          - Split Into Two:   1011100111000111 [L] 1111010001001001 [R]
          - Swap Halves:      11110100010010011011100111000111
          - Bit Inversion:    00001011101101100100011000111000
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     00010001011011110011010001110110

          - FUNCTION OUTPUT:  00010001011011110011010001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101000100110000001111101001

       - FUNCTION OUTPUT:          00010001011011110011010001110110

       - Left XOR FUNCTION OUTPUT: 01000100011111000011011110011111

       - Next Round Left 32 Bits:  11110101111001000000101010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100011111000011011110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101111001000000101010100101

       - Right 32 Bits:            01000100011111000011011110011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       01000100011111000011011110011111
          - S-Box Result:     01110111110101010001110100111011   [per every group of 4-bits]
          - Split Into Two:   0111011111010101 [L] 0001110100111011 [R]
          - Swap Halves:      00011101001110110111011111010101
          - Bit Inversion:    11100010110001001000100000101010
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10111000111101011100010011110000

          - FUNCTION OUTPUT:  10111000111101011100010011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101111001000000101010100101

       - FUNCTION OUTPUT:          10111000111101011100010011110000

       - Left XOR FUNCTION OUTPUT: 01001101000100011100111001010101

       - Next Round Left 32 Bits:  01000100011111000011011110011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101000100011100111001010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100011111000011011110011111

       - Right 32 Bits:            01001101000100011100111001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01001101000100011100111001010101
          - S-Box Result:     01110110101010100101110010011001   [per every group of 4-bits]
          - Split Into Two:   0111011010101010 [L] 0101110010011001 [R]
          - Swap Halves:      01011100100110010111011010101010
          - Bit Inversion:    10100011011001101000100101010101
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     11111011000000110101000001101111

          - FUNCTION OUTPUT:  11111011000000110101000001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100011111000011011110011111

       - FUNCTION OUTPUT:          11111011000000110101000001101111

       - Left XOR FUNCTION OUTPUT: 10111111011111110110011111110000

       - Next Round Left 32 Bits:  01001101000100011100111001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111011111110110011111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101000100011100111001010101

       - Right 32 Bits:            10111111011111110110011111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       10111111011111110110011111110000
          - S-Box Result:     10001011110110110000110110111111   [per every group of 4-bits]
          - Split Into Two:   1000101111011011 [L] 0000110110111111 [R]
          - Swap Halves:      00001101101111111000101111011011
          - Bit Inversion:    11110010010000000111010000100100
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     10101001101001110100010101001100

          - FUNCTION OUTPUT:  10101001101001110100010101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101000100011100111001010101

       - FUNCTION OUTPUT:          10101001101001110100010101001100

       - Left XOR FUNCTION OUTPUT: 11100100101101101000101100011001

       - Next Round Left 32 Bits:  10111111011111110110011111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100101101101000101100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111011111110110011111110000

       - Right 32 Bits:            11100100101101101000101100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11100100101101101000101100011001
          - S-Box Result:     11000111100000000010100010100011   [per every group of 4-bits]
          - Split Into Two:   1100011110000000 [L] 0010100010100011 [R]
          - Swap Halves:      00101000101000111100011110000000
          - Bit Inversion:    11010111010111000011100001111111
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     10000101110110100111111110010110

          - FUNCTION OUTPUT:  10000101110110100111111110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111011111110110011111110000

       - FUNCTION OUTPUT:          10000101110110100111111110010110

       - Left XOR FUNCTION OUTPUT: 00111010101001010001100001100110

       - Next Round Left 32 Bits:  11100100101101101000101100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010101001010001100001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100101101101000101100011001

       - Right 32 Bits:            00111010101001010001100001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       00111010101001010001100001100110
          - S-Box Result:     00010100010010011010001000000000   [per every group of 4-bits]
          - Split Into Two:   0001010001001001 [L] 1010001000000000 [R]
          - Swap Halves:      10100010000000000001010001001001
          - Bit Inversion:    01011101111111111110101110110110
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     00000001011000010001110100110101

          - FUNCTION OUTPUT:  00000001011000010001110100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100101101101000101100011001

       - FUNCTION OUTPUT:          00000001011000010001110100110101

       - Left XOR FUNCTION OUTPUT: 11100101110101111001011000101100

       - Next Round Left 32 Bits:  00111010101001010001100001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101110101111001011000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010101001010001100001100110

       - Right 32 Bits:            11100101110101111001011000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11100101110101111001011000101100
          - S-Box Result:     11001001011011010011000011100101   [per every group of 4-bits]
          - Split Into Two:   1100100101101101 [L] 0011000011100101 [R]
          - Swap Halves:      00110000111001011100100101101101
          - Bit Inversion:    11001111000110100011011010010010
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     10010100001000000011101000000100

          - FUNCTION OUTPUT:  10010100001000000011101000000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010101001010001100001100110

       - FUNCTION OUTPUT:          10010100001000000011101000000100

       - Left XOR FUNCTION OUTPUT: 10101110100001010010001001100010

       - Next Round Left 32 Bits:  11100101110101111001011000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110100001010010001001100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101110101111001011000101100

       - Right 32 Bits:            10101110100001010010001001100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       10101110100001010010001001100010
          - S-Box Result:     01001100001010011110111000001110   [per every group of 4-bits]
          - Split Into Two:   0100110000101001 [L] 1110111000001110 [R]
          - Swap Halves:      11101110000011100100110000101001
          - Bit Inversion:    00010001111100011011001111010110
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     01000011100110010110100011001000

          - FUNCTION OUTPUT:  01000011100110010110100011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101110101111001011000101100

       - FUNCTION OUTPUT:          01000011100110010110100011001000

       - Left XOR FUNCTION OUTPUT: 10100110010011101111111011100100

       - Next Round Left 32 Bits:  10101110100001010010001001100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110010011101111111011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110100001010010001001100010

       - Right 32 Bits:            10100110010011101111111011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       10100110010011101111111011100100
          - S-Box Result:     01000000011111001011110011000111   [per every group of 4-bits]
          - Split Into Two:   0100000001111100 [L] 1011110011000111 [R]
          - Swap Halves:      10111100110001110100000001111100
          - Bit Inversion:    01000011001110001011111110000011
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     00011111110100111000110111011001

          - FUNCTION OUTPUT:  00011111110100111000110111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110100001010010001001100010

       - FUNCTION OUTPUT:          00011111110100111000110111011001

       - Left XOR FUNCTION OUTPUT: 10110001010101101010111110111011

       - Next Round Left 32 Bits:  10100110010011101111111011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001010101101010111110111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011000101010110101011111011101110100110010011101111111011100100

 > Processed Block:     1011000101010110101011111011101110100110010011101111111011100100



Plaintext Block 7: 1001000000111001100111100000000101101101000101011110001001000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000001110011001111000000001

       - Right 32 Bits:            01101101000101011110001001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       01101101000101011110001001000111
          - S-Box Result:     00000110101010011100111001111101   [per every group of 4-bits]
          - Split Into Two:   0000011010101001 [L] 1100111001111101 [R]
          - Swap Halves:      11001110011111010000011010101001
          - Bit Inversion:    00110001100000101111100101010110
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     00101111110100001001000110001101

          - FUNCTION OUTPUT:  00101111110100001001000110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000001110011001111000000001

       - FUNCTION OUTPUT:          00101111110100001001000110001101

       - Left XOR FUNCTION OUTPUT: 10111111111010010000111110001100

       - Next Round Left 32 Bits:  01101101000101011110001001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111111010010000111110001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101000101011110001001000111

       - Right 32 Bits:            10111111111010010000111110001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       10111111111010010000111110001100
          - S-Box Result:     10001011110000111111101100100101   [per every group of 4-bits]
          - Split Into Two:   1000101111000011 [L] 1111101100100101 [R]
          - Swap Halves:      11111011001001011000101111000011
          - Bit Inversion:    00000100110110100111010000111100
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     01011110100001101001111100001110

          - FUNCTION OUTPUT:  01011110100001101001111100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101000101011110001001000111

       - FUNCTION OUTPUT:          01011110100001101001111100001110

       - Left XOR FUNCTION OUTPUT: 00110011100100110111110101001001

       - Next Round Left 32 Bits:  10111111111010010000111110001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011100100110111110101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111111010010000111110001100

       - Right 32 Bits:            00110011100100110111110101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       00110011100100110111110101001001
          - S-Box Result:     00010001001100011101011001110011   [per every group of 4-bits]
          - Split Into Two:   0001000100110001 [L] 1101011001110011 [R]
          - Swap Halves:      11010110011100110001000100110001
          - Bit Inversion:    00101001100011001110111011001110
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     01110011111101010100110010100010

          - FUNCTION OUTPUT:  01110011111101010100110010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111111010010000111110001100

       - FUNCTION OUTPUT:          01110011111101010100110010100010

       - Left XOR FUNCTION OUTPUT: 11001100000111000100001100101110

       - Next Round Left 32 Bits:  00110011100100110111110101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100000111000100001100101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011100100110111110101001001

       - Right 32 Bits:            11001100000111000100001100101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       11001100000111000100001100101110
          - S-Box Result:     01010101101001010111000111101100   [per every group of 4-bits]
          - Split Into Two:   0101010110100101 [L] 0111000111101100 [R]
          - Swap Halves:      01110001111011000101010110100101
          - Bit Inversion:    10001110000100111010101001011010
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     11110100010100100010011010110011

          - FUNCTION OUTPUT:  11110100010100100010011010110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011100100110111110101001001

       - FUNCTION OUTPUT:          11110100010100100010011010110011

       - Left XOR FUNCTION OUTPUT: 11000111110000010101101111111010

       - Next Round Left 32 Bits:  11001100000111000100001100101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111110000010101101111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100000111000100001100101110

       - Right 32 Bits:            11000111110000010101101111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       11000111110000010101101111111010
          - S-Box Result:     01011101010110101001100010110100   [per every group of 4-bits]
          - Split Into Two:   0101110101011010 [L] 1001100010110100 [R]
          - Swap Halves:      10011000101101000101110101011010
          - Bit Inversion:    01100111010010111010001010100101
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     00001101100111000011100100100100

          - FUNCTION OUTPUT:  00001101100111000011100100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100000111000100001100101110

       - FUNCTION OUTPUT:          00001101100111000011100100100100

       - Left XOR FUNCTION OUTPUT: 11000001100000000111101000001010

       - Next Round Left 32 Bits:  11000111110000010101101111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001100000000111101000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111110000010101101111111010

       - Right 32 Bits:            11000001100000000111101000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       11000001100000000111101000001010
          - S-Box Result:     01011010001011111101010011110100   [per every group of 4-bits]
          - Split Into Two:   0101101000101111 [L] 1101010011110100 [R]
          - Swap Halves:      11010100111101000101101000101111
          - Bit Inversion:    00101011000010111010010111010000
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     11100001001111011011010101000111

          - FUNCTION OUTPUT:  11100001001111011011010101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111110000010101101111111010

       - FUNCTION OUTPUT:          11100001001111011011010101000111

       - Left XOR FUNCTION OUTPUT: 00100110111111001110111010111101

       - Next Round Left 32 Bits:  11000001100000000111101000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110111111001110111010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001100000000111101000001010

       - Right 32 Bits:            00100110111111001110111010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       00100110111111001110111010111101
          - S-Box Result:     11100000101101011100110010000110   [per every group of 4-bits]
          - Split Into Two:   1110000010110101 [L] 1100110010000110 [R]
          - Swap Halves:      11001100100001101110000010110101
          - Bit Inversion:    00110011011110010001111101001010
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10101001001101010100000001111100

          - FUNCTION OUTPUT:  10101001001101010100000001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001100000000111101000001010

       - FUNCTION OUTPUT:          10101001001101010100000001111100

       - Left XOR FUNCTION OUTPUT: 01101000101101010011101001110110

       - Next Round Left 32 Bits:  00100110111111001110111010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000101101010011101001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110111111001110111010111101

       - Right 32 Bits:            01101000101101010011101001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       01101000101101010011101001110110
          - S-Box Result:     00000010100010010001010011010000   [per every group of 4-bits]
          - Split Into Two:   0000001010001001 [L] 0001010011010000 [R]
          - Swap Halves:      00010100110100000000001010001001
          - Bit Inversion:    11101011001011111111110101110110
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     11110001111101101000111100111000

          - FUNCTION OUTPUT:  11110001111101101000111100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110111111001110111010111101

       - FUNCTION OUTPUT:          11110001111101101000111100111000

       - Left XOR FUNCTION OUTPUT: 11010111000010100110000110000101

       - Next Round Left 32 Bits:  01101000101101010011101001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111000010100110000110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000101101010011101001110110

       - Right 32 Bits:            11010111000010100110000110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       11010111000010100110000110000101
          - S-Box Result:     01101101111101000000101000101001   [per every group of 4-bits]
          - Split Into Two:   0110110111110100 [L] 0000101000101001 [R]
          - Swap Halves:      00001010001010010110110111110100
          - Bit Inversion:    11110101110101101001001000001011
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     10101111111001111101111011010001

          - FUNCTION OUTPUT:  10101111111001111101111011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000101101010011101001110110

       - FUNCTION OUTPUT:          10101111111001111101111011010001

       - Left XOR FUNCTION OUTPUT: 11000111010100101110010010100111

       - Next Round Left 32 Bits:  11010111000010100110000110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111010100101110010010100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111000010100110000110000101

       - Right 32 Bits:            11000111010100101110010010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       11000111010100101110010010100111
          - S-Box Result:     01011101100111101100011101001101   [per every group of 4-bits]
          - Split Into Two:   0101110110011110 [L] 1100011101001101 [R]
          - Swap Halves:      11000111010011010101110110011110
          - Bit Inversion:    00111000101100101010001001100001
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     01100000110101110111101101011011

          - FUNCTION OUTPUT:  01100000110101110111101101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111000010100110000110000101

       - FUNCTION OUTPUT:          01100000110101110111101101011011

       - Left XOR FUNCTION OUTPUT: 10110111110111010001101011011110

       - Next Round Left 32 Bits:  11000111010100101110010010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111110111010001101011011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111010100101110010010100111

       - Right 32 Bits:            10110111110111010001101011011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       10110111110111010001101011011110
          - S-Box Result:     10001101011001101010010001101100   [per every group of 4-bits]
          - Split Into Two:   1000110101100110 [L] 1010010001101100 [R]
          - Swap Halves:      10100100011011001000110101100110
          - Bit Inversion:    01011011100100110111001010011001
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     00000000011101000100001111110001

          - FUNCTION OUTPUT:  00000000011101000100001111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111010100101110010010100111

       - FUNCTION OUTPUT:          00000000011101000100001111110001

       - Left XOR FUNCTION OUTPUT: 11000111001001101010011101010110

       - Next Round Left 32 Bits:  10110111110111010001101011011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111001001101010011101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111110111010001101011011110

       - Right 32 Bits:            11000111001001101010011101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11000111001001101010011101010110
          - S-Box Result:     01011101111000000100110110010000   [per every group of 4-bits]
          - Split Into Two:   0101110111100000 [L] 0100110110010000 [R]
          - Swap Halves:      01001101100100000101110111100000
          - Bit Inversion:    10110010011011111010001000011111
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     11100000111010011110010111110110

          - FUNCTION OUTPUT:  11100000111010011110010111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111110111010001101011011110

       - FUNCTION OUTPUT:          11100000111010011110010111110110

       - Left XOR FUNCTION OUTPUT: 01010111001101001111111100101000

       - Next Round Left 32 Bits:  11000111001001101010011101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111001101001111111100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111001001101010011101010110

       - Right 32 Bits:            01010111001101001111111100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       01010111001101001111111100101000
          - S-Box Result:     10011101000101111011101111100010   [per every group of 4-bits]
          - Split Into Two:   1001110100010111 [L] 1011101111100010 [R]
          - Swap Halves:      10111011111000101001110100010111
          - Bit Inversion:    01000100000111010110001011101000
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     00011000100000111001010001101011

          - FUNCTION OUTPUT:  00011000100000111001010001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111001001101010011101010110

       - FUNCTION OUTPUT:          00011000100000111001010001101011

       - Left XOR FUNCTION OUTPUT: 11011111101001010011001100111101

       - Next Round Left 32 Bits:  01010111001101001111111100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111101001010011001100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111001101001111111100101000

       - Right 32 Bits:            11011111101001010011001100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       11011111101001010011001100111101
          - S-Box Result:     01101011010010010001000100010110   [per every group of 4-bits]
          - Split Into Two:   0110101101001001 [L] 0001000100010110 [R]
          - Swap Halves:      00010001000101100110101101001001
          - Bit Inversion:    11101110111010011001010010110110
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     10110101110100111001100000100000

          - FUNCTION OUTPUT:  10110101110100111001100000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111001101001111111100101000

       - FUNCTION OUTPUT:          10110101110100111001100000100000

       - Left XOR FUNCTION OUTPUT: 11100010111001110110011100001000

       - Next Round Left 32 Bits:  11011111101001010011001100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111001110110011100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111101001010011001100111101

       - Right 32 Bits:            11100010111001110110011100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       11100010111001110110011100001000
          - S-Box Result:     11001110110011010000110111110010   [per every group of 4-bits]
          - Split Into Two:   1100111011001101 [L] 0000110111110010 [R]
          - Swap Halves:      00001101111100101100111011001101
          - Bit Inversion:    11110010000011010011000100110010
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     10100000011001011110101000101100

          - FUNCTION OUTPUT:  10100000011001011110101000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111101001010011001100111101

       - FUNCTION OUTPUT:          10100000011001011110101000101100

       - Left XOR FUNCTION OUTPUT: 01111111110000001101100100010001

       - Next Round Left 32 Bits:  11100010111001110110011100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111110000001101100100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111001110110011100001000

       - Right 32 Bits:            01111111110000001101100100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01111111110000001101100100010001
          - S-Box Result:     11011011010111110110001110101010   [per every group of 4-bits]
          - Split Into Two:   1101101101011111 [L] 0110001110101010 [R]
          - Swap Halves:      01100011101010101101101101011111
          - Bit Inversion:    10011100010101010010010010100000
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     11000000101111100001011011111010

          - FUNCTION OUTPUT:  11000000101111100001011011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111001110110011100001000

       - FUNCTION OUTPUT:          11000000101111100001011011111010

       - Left XOR FUNCTION OUTPUT: 00100010010110010111000111110010

       - Next Round Left 32 Bits:  01111111110000001101100100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010010110010111000111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010001001011001011100011111001001111111110000001101100100010001

 > Processed Block:     0010001001011001011100011111001001111111110000001101100100010001



Plaintext Block 8: 0010011110011101100100010111110011111011000110010111001101101001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111100111011001000101111100

       - Right 32 Bits:            11111011000110010111001101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       11111011000110010111001101101001
          - S-Box Result:     10111000101000111101000100000011   [per every group of 4-bits]
          - Split Into Two:   1011100010100011 [L] 1101000100000011 [R]
          - Swap Halves:      11010001000000111011100010100011
          - Bit Inversion:    00101110111111000100011101011100
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     00110000101011100010111110000111

          - FUNCTION OUTPUT:  00110000101011100010111110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111100111011001000101111100

       - FUNCTION OUTPUT:          00110000101011100010111110000111

       - Left XOR FUNCTION OUTPUT: 00010111001100111011111011111011

       - Next Round Left 32 Bits:  11111011000110010111001101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111001100111011111011111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011000110010111001101101001

       - Right 32 Bits:            00010111001100111011111011111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       00010111001100111011111011111011
          - S-Box Result:     10101101000100011000110010111000   [per every group of 4-bits]
          - Split Into Two:   1010110100010001 [L] 1000110010111000 [R]
          - Swap Halves:      10001100101110001010110100010001
          - Bit Inversion:    01110011010001110101001011101110
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     00101001000110111011100111011100

          - FUNCTION OUTPUT:  00101001000110111011100111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011000110010111001101101001

       - FUNCTION OUTPUT:          00101001000110111011100111011100

       - Left XOR FUNCTION OUTPUT: 11010010000000101100101010110101

       - Next Round Left 32 Bits:  00010111001100111011111011111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010000000101100101010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111001100111011111011111011

       - Right 32 Bits:            11010010000000101100101010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       11010010000000101100101010110101
          - S-Box Result:     01101110111111100101010010001001   [per every group of 4-bits]
          - Split Into Two:   0110111011111110 [L] 0101010010001001 [R]
          - Swap Halves:      01010100100010010110111011111110
          - Bit Inversion:    10101011011101101001000100000001
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     11110001000011110011001101101101

          - FUNCTION OUTPUT:  11110001000011110011001101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111001100111011111011111011

       - FUNCTION OUTPUT:          11110001000011110011001101101101

       - Left XOR FUNCTION OUTPUT: 11100110001111001000110110010110

       - Next Round Left 32 Bits:  11010010000000101100101010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110001111001000110110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010000000101100101010110101

       - Right 32 Bits:            11100110001111001000110110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       11100110001111001000110110010110
          - S-Box Result:     11000000000101010010011000110000   [per every group of 4-bits]
          - Split Into Two:   1100000000010101 [L] 0010011000110000 [R]
          - Swap Halves:      00100110001100001100000000010101
          - Bit Inversion:    11011001110011110011111111101010
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     10100011100011101011001100000011

          - FUNCTION OUTPUT:  10100011100011101011001100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010000000101100101010110101

       - FUNCTION OUTPUT:          10100011100011101011001100000011

       - Left XOR FUNCTION OUTPUT: 01110001100011000111100110110110

       - Next Round Left 32 Bits:  11100110001111001000110110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001100011000111100110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110001111001000110110010110

       - Right 32 Bits:            01110001100011000111100110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       01110001100011000111100110110110
          - S-Box Result:     11011010001001011101001110000000   [per every group of 4-bits]
          - Split Into Two:   1101101000100101 [L] 1101001110000000 [R]
          - Swap Halves:      11010011100000001101101000100101
          - Bit Inversion:    00101100011111110010010111011010
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     01000110101010001011111001011011

          - FUNCTION OUTPUT:  01000110101010001011111001011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110001111001000110110010110

       - FUNCTION OUTPUT:          01000110101010001011111001011011

       - Left XOR FUNCTION OUTPUT: 10100000100101000011001111001101

       - Next Round Left 32 Bits:  01110001100011000111100110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000100101000011001111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001100011000111100110110110

       - Right 32 Bits:            10100000100101000011001111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       10100000100101000011001111001101
          - S-Box Result:     01001111001101110001000101010110   [per every group of 4-bits]
          - Split Into Two:   0100111100110111 [L] 0001000101010110 [R]
          - Swap Halves:      00010001010101100100111100110111
          - Bit Inversion:    11101110101010011011000011001000
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     00100100100111111010000001011111

          - FUNCTION OUTPUT:  00100100100111111010000001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001100011000111100110110110

       - FUNCTION OUTPUT:          00100100100111111010000001011111

       - Left XOR FUNCTION OUTPUT: 01010101000100111101100111101001

       - Next Round Left 32 Bits:  10100000100101000011001111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101000100111101100111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000100101000011001111001101

       - Right 32 Bits:            01010101000100111101100111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       01010101000100111101100111101001
          - S-Box Result:     10011001101000010110001111000011   [per every group of 4-bits]
          - Split Into Two:   1001100110100001 [L] 0110001111000011 [R]
          - Swap Halves:      01100011110000111001100110100001
          - Bit Inversion:    10011100001111000110011001011110
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     00000110011100000011100101101000

          - FUNCTION OUTPUT:  00000110011100000011100101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000100101000011001111001101

       - FUNCTION OUTPUT:          00000110011100000011100101101000

       - Left XOR FUNCTION OUTPUT: 10100110111001000000101010100101

       - Next Round Left 32 Bits:  01010101000100111101100111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110111001000000101010100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101000100111101100111101001

       - Right 32 Bits:            10100110111001000000101010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       10100110111001000000101010100101
          - S-Box Result:     01000000110001111111010001001001   [per every group of 4-bits]
          - Split Into Two:   0100000011000111 [L] 1111010001001001 [R]
          - Swap Halves:      11110100010010010100000011000111
          - Bit Inversion:    00001011101101101011111100111000
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     00010001011011111100110101110110

          - FUNCTION OUTPUT:  00010001011011111100110101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101000100111101100111101001

       - FUNCTION OUTPUT:          00010001011011111100110101110110

       - Left XOR FUNCTION OUTPUT: 01000100011111000001010010011111

       - Next Round Left 32 Bits:  10100110111001000000101010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100011111000001010010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110111001000000101010100101

       - Right 32 Bits:            01000100011111000001010010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       01000100011111000001010010011111
          - S-Box Result:     01110111110101011010011100111011   [per every group of 4-bits]
          - Split Into Two:   0111011111010101 [L] 1010011100111011 [R]
          - Swap Halves:      10100111001110110111011111010101
          - Bit Inversion:    01011000110001001000100000101010
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     00000010111101011100010011110000

          - FUNCTION OUTPUT:  00000010111101011100010011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110111001000000101010100101

       - FUNCTION OUTPUT:          00000010111101011100010011110000

       - Left XOR FUNCTION OUTPUT: 10100100000100011100111001010101

       - Next Round Left 32 Bits:  01000100011111000001010010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100000100011100111001010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100011111000001010010011111

       - Right 32 Bits:            10100100000100011100111001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       10100100000100011100111001010101
          - S-Box Result:     01000111101010100101110010011001   [per every group of 4-bits]
          - Split Into Two:   0100011110101010 [L] 0101110010011001 [R]
          - Swap Halves:      01011100100110010100011110101010
          - Bit Inversion:    10100011011001101011100001010101
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     11111011000000110110000101101111

          - FUNCTION OUTPUT:  11111011000000110110000101101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100011111000001010010011111

       - FUNCTION OUTPUT:          11111011000000110110000101101111

       - Left XOR FUNCTION OUTPUT: 10111111011111110111010111110000

       - Next Round Left 32 Bits:  10100100000100011100111001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111011111110111010111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100000100011100111001010101

       - Right 32 Bits:            10111111011111110111010111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       10111111011111110111010111110000
          - S-Box Result:     10001011110110111101100110111111   [per every group of 4-bits]
          - Split Into Two:   1000101111011011 [L] 1101100110111111 [R]
          - Swap Halves:      11011001101111111000101111011011
          - Bit Inversion:    00100110010000000111010000100100
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     01111101101001110100010101001100

          - FUNCTION OUTPUT:  01111101101001110100010101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100000100011100111001010101

       - FUNCTION OUTPUT:          01111101101001110100010101001100

       - Left XOR FUNCTION OUTPUT: 11011001101101101000101100011001

       - Next Round Left 32 Bits:  10111111011111110111010111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001101101101000101100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111011111110111010111110000

       - Right 32 Bits:            11011001101101101000101100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       11011001101101101000101100011001
          - S-Box Result:     01100011100000000010100010100011   [per every group of 4-bits]
          - Split Into Two:   0110001110000000 [L] 0010100010100011 [R]
          - Swap Halves:      00101000101000110110001110000000
          - Bit Inversion:    11010111010111001001110001111111
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     10000101110110101101101110010110

          - FUNCTION OUTPUT:  10000101110110101101101110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111011111110111010111110000

       - FUNCTION OUTPUT:          10000101110110101101101110010110

       - Left XOR FUNCTION OUTPUT: 00111010101001011010111001100110

       - Next Round Left 32 Bits:  11011001101101101000101100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010101001011010111001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001101101101000101100011001

       - Right 32 Bits:            00111010101001011010111001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       00111010101001011010111001100110
          - S-Box Result:     00010100010010010100110000000000   [per every group of 4-bits]
          - Split Into Two:   0001010001001001 [L] 0100110000000000 [R]
          - Swap Halves:      01001100000000000001010001001001
          - Bit Inversion:    10110011111111111110101110110110
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     11101111011000010001110100110101

          - FUNCTION OUTPUT:  11101111011000010001110100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001101101101000101100011001

       - FUNCTION OUTPUT:          11101111011000010001110100110101

       - Left XOR FUNCTION OUTPUT: 00110110110101111001011000101100

       - Next Round Left 32 Bits:  00111010101001011010111001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110110101111001011000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010101001011010111001100110

       - Right 32 Bits:            00110110110101111001011000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       00110110110101111001011000101100
          - S-Box Result:     00010000011011010011000011100101   [per every group of 4-bits]
          - Split Into Two:   0001000001101101 [L] 0011000011100101 [R]
          - Swap Halves:      00110000111001010001000001101101
          - Bit Inversion:    11001111000110101110111110010010
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     10010100001000001110001100000100

          - FUNCTION OUTPUT:  10010100001000001110001100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010101001011010111001100110

       - FUNCTION OUTPUT:          10010100001000001110001100000100

       - Left XOR FUNCTION OUTPUT: 10101110100001010100110101100010

       - Next Round Left 32 Bits:  00110110110101111001011000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110100001010100110101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110110101111001011000101100

       - Right 32 Bits:            10101110100001010100110101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       10101110100001010100110101100010
          - S-Box Result:     01001100001010010111011000001110   [per every group of 4-bits]
          - Split Into Two:   0100110000101001 [L] 0111011000001110 [R]
          - Swap Halves:      01110110000011100100110000101001
          - Bit Inversion:    10001001111100011011001111010110
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     11011011100110010110100011001000

          - FUNCTION OUTPUT:  11011011100110010110100011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110110101111001011000101100

       - FUNCTION OUTPUT:          11011011100110010110100011001000

       - Left XOR FUNCTION OUTPUT: 11101101010011101111111011100100

       - Next Round Left 32 Bits:  10101110100001010100110101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101010011101111111011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110100001010100110101100010

       - Right 32 Bits:            11101101010011101111111011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       11101101010011101111111011100100
          - S-Box Result:     11000110011111001011110011000111   [per every group of 4-bits]
          - Split Into Two:   1100011001111100 [L] 1011110011000111 [R]
          - Swap Halves:      10111100110001111100011001111100
          - Bit Inversion:    01000011001110000011100110000011
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     00011111110100110000101111011001

          - FUNCTION OUTPUT:  00011111110100110000101111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110100001010100110101100010

       - FUNCTION OUTPUT:          00011111110100110000101111011001

       - Left XOR FUNCTION OUTPUT: 10110001010101100100011010111011

       - Next Round Left 32 Bits:  11101101010011101111111011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001010101100100011010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011000101010110010001101011101111101101010011101111111011100100

 > Processed Block:     1011000101010110010001101011101111101101010011101111111011100100



Plaintext Block 9: 0111101010111000011001100000011110010111110000010010001111110100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010101110000110011000000111

       - Right 32 Bits:            10010111110000010010001111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101001101010101011100011011001011010001111100100111   [Subkey: 1]
          - Input Half:       10010111110000010010001111110100
          - S-Box Result:     00111101010110101110000110110111   [per every group of 4-bits]
          - Split Into Two:   0011110101011010 [L] 1110000110110111 [R]
          - Swap Halves:      11100001101101110011110101011010
          - Bit Inversion:    00011110010010001100001010100101
          - Compressed Key:   00011110010100100110100011011011   [done by compression P-Box]
          - XOR with Key:     00000000000110101010101001111110

          - FUNCTION OUTPUT:  00000000000110101010101001111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010101110000110011000000111

       - FUNCTION OUTPUT:          00000000000110101010101001111110

       - Left XOR FUNCTION OUTPUT: 01111010101000101100110001111001

       - Next Round Left 32 Bits:  10010111110000010010001111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010101000101100110001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111110000010010001111110100

       - Right 32 Bits:            01111010101000101100110001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101100101010101000111001001101001011100000110110001   [Subkey: 2]
          - Input Half:       01111010101000101100110001111001
          - S-Box Result:     11010100010011100101010111010011   [per every group of 4-bits]
          - Split Into Two:   1101010001001110 [L] 0101010111010011 [R]
          - Swap Halves:      01010101110100111101010001001110
          - Bit Inversion:    10101010001011000010101110110001
          - Compressed Key:   01011010010111001110101100110010   [done by compression P-Box]
          - XOR with Key:     11110000011100001100000010000011

          - FUNCTION OUTPUT:  11110000011100001100000010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111110000010010001111110100

       - FUNCTION OUTPUT:          11110000011100001100000010000011

       - Left XOR FUNCTION OUTPUT: 01100111101100011110001101110111

       - Next Round Left 32 Bits:  01111010101000101100110001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111101100011110001101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010101000101100110001111001

       - Right 32 Bits:            01100111101100011110001101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100110101010101110001101100101101000111110010011100   [Subkey: 3]
          - Input Half:       01100111101100011110001101110111
          - S-Box Result:     00001101100010101100000111011101   [per every group of 4-bits]
          - Split Into Two:   0000110110001010 [L] 1100000111011101 [R]
          - Swap Halves:      11000001110111010000110110001010
          - Bit Inversion:    00111110001000101111001001110101
          - Compressed Key:   01011010011110011010001001101100   [done by compression P-Box]
          - XOR with Key:     01100100010110110101000000011001

          - FUNCTION OUTPUT:  01100100010110110101000000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010101000101100110001111001

       - FUNCTION OUTPUT:          01100100010110110101000000011001

       - Left XOR FUNCTION OUTPUT: 00011110111110011001110001100000

       - Next Round Left 32 Bits:  01100111101100011110001101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110111110011001110001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111101100011110001101110111

       - Right 32 Bits:            00011110111110011001110001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010101010100011100100110100101110000011011000110   [Subkey: 4]
          - Input Half:       00011110111110011001110001100000
          - S-Box Result:     10101100101100110011010100001111   [per every group of 4-bits]
          - Split Into Two:   1010110010110011 [L] 0011010100001111 [R]
          - Swap Halves:      00110101000011111010110010110011
          - Bit Inversion:    11001010111100000101001101001100
          - Compressed Key:   01111010010000011000110011101001   [done by compression P-Box]
          - XOR with Key:     10110000101100011101111110100101

          - FUNCTION OUTPUT:  10110000101100011101111110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111101100011110001101110111

       - FUNCTION OUTPUT:          10110000101100011101111110100101

       - Left XOR FUNCTION OUTPUT: 11010111000000000011110011010010

       - Next Round Left 32 Bits:  00011110111110011001110001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111000000000011110011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110111110011001110001100000

       - Right 32 Bits:            11010111000000000011110011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011010101010111000110110010110100011111001001110010   [Subkey: 5]
          - Input Half:       11010111000000000011110011010010
          - S-Box Result:     01101101111111110001010101101110   [per every group of 4-bits]
          - Split Into Two:   0110110111111111 [L] 0001010101101110 [R]
          - Swap Halves:      00010101011011100110110111111111
          - Bit Inversion:    11101010100100011001001000000000
          - Compressed Key:   01101010110101111001101110000001   [done by compression P-Box]
          - XOR with Key:     10000000010001100000100110000001

          - FUNCTION OUTPUT:  10000000010001100000100110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110111110011001110001100000

       - FUNCTION OUTPUT:          10000000010001100000100110000001

       - Left XOR FUNCTION OUTPUT: 10011110101111111001010111100001

       - Next Round Left 32 Bits:  11010111000000000011110011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110101111111001010111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111000000000011110011010010

       - Right 32 Bits:            10011110101111111001010111100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110010011010010111000001101100011011   [Subkey: 6]
          - Input Half:       10011110101111111001010111100001
          - S-Box Result:     00111100100010110011100111001010   [per every group of 4-bits]
          - Split Into Two:   0011110010001011 [L] 0011100111001010 [R]
          - Swap Halves:      00111001110010100011110010001011
          - Bit Inversion:    11000110001101011100001101110100
          - Compressed Key:   11001010001101100001000010010111   [done by compression P-Box]
          - XOR with Key:     00001100000000111101001111100011

          - FUNCTION OUTPUT:  00001100000000111101001111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111000000000011110011010010

       - FUNCTION OUTPUT:          00001100000000111101001111100011

       - Left XOR FUNCTION OUTPUT: 11011011000000111110111100110001

       - Next Round Left 32 Bits:  10011110101111111001010111100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011000000111110111100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110101111111001010111100001

       - Right 32 Bits:            11011011000000111110111100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010101011100011011001011010001111100100111001001   [Subkey: 7]
          - Input Half:       11011011000000111110111100110001
          - S-Box Result:     01101000111100011100101100011010   [per every group of 4-bits]
          - Split Into Two:   0110100011110001 [L] 1100101100011010 [R]
          - Swap Halves:      11001011000110100110100011110001
          - Bit Inversion:    00110100111001011001011100001110
          - Compressed Key:   10011010010011000101111100110110   [done by compression P-Box]
          - XOR with Key:     10101110101010011100100000111000

          - FUNCTION OUTPUT:  10101110101010011100100000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110101111111001010111100001

       - FUNCTION OUTPUT:          10101110101010011100100000111000

       - Left XOR FUNCTION OUTPUT: 00110000000101100101110111011001

       - Next Round Left 32 Bits:  11011011000000111110111100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000000101100101110111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011000000111110111100110001

       - Right 32 Bits:            00110000000101100101110111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010101000111001001101001011100000110110001101101   [Subkey: 8]
          - Input Half:       00110000000101100101110111011001
          - S-Box Result:     00011111101000001001011001100011   [per every group of 4-bits]
          - Split Into Two:   0001111110100000 [L] 1001011001100011 [R]
          - Swap Halves:      10010110011000110001111110100000
          - Bit Inversion:    01101001100111001110000001011111
          - Compressed Key:   00011010110110010111001001001110   [done by compression P-Box]
          - XOR with Key:     01110011010001011001001000010001

          - FUNCTION OUTPUT:  01110011010001011001001000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011000000111110111100110001

       - FUNCTION OUTPUT:          01110011010001011001001000010001

       - Left XOR FUNCTION OUTPUT: 10101000010001100111110100100000

       - Next Round Left 32 Bits:  00110000000101100101110111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000010001100111110100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000000101100101110111011001

       - Right 32 Bits:            10101000010001100111110100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001101100101101000111110010011100100101   [Subkey: 9]
          - Input Half:       10101000010001100111110100100000
          - S-Box Result:     01000010011100001101011011101111   [per every group of 4-bits]
          - Split Into Two:   0100001001110000 [L] 1101011011101111 [R]
          - Swap Halves:      11010110111011110100001001110000
          - Bit Inversion:    00101001000100001011110110001111
          - Compressed Key:   01011010001100010100110011011010   [done by compression P-Box]
          - XOR with Key:     01110011001000011111000101010101

          - FUNCTION OUTPUT:  01110011001000011111000101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000000101100101110111011001

       - FUNCTION OUTPUT:          01110011001000011111000101010101

       - Left XOR FUNCTION OUTPUT: 01000011001101111010110010001100

       - Next Round Left 32 Bits:  10101000010001100111110100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011001101111010110010001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000010001100111110100100000

       - Right 32 Bits:            01000011001101111010110010001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101010100011100100110100101110000011011000110110101   [Subkey: 10]
          - Input Half:       01000011001101111010110010001100
          - S-Box Result:     01110001000111010100010100100101   [per every group of 4-bits]
          - Split Into Two:   0111000100011101 [L] 0100010100100101 [R]
          - Swap Halves:      01000101001001010111000100011101
          - Bit Inversion:    10111010110110101000111011100010
          - Compressed Key:   01011000011001011101100100111010   [done by compression P-Box]
          - XOR with Key:     11100010101111110101011111011000

          - FUNCTION OUTPUT:  11100010101111110101011111011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000010001100111110100100000

       - FUNCTION OUTPUT:          11100010101111110101011111011000

       - Left XOR FUNCTION OUTPUT: 01001010111110010010101011111000

       - Next Round Left 32 Bits:  01000011001101111010110010001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010111110010010101011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011001101111010110010001100

       - Right 32 Bits:            01001010111110010010101011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010101010111000110110010110100011111001001110010010100   [Subkey: 11]
          - Input Half:       01001010111110010010101011111000
          - S-Box Result:     01110100101100111110010010110010   [per every group of 4-bits]
          - Split Into Two:   0111010010110011 [L] 1110010010110010 [R]
          - Swap Halves:      11100100101100100111010010110011
          - Bit Inversion:    00011011010011011000101101001100
          - Compressed Key:   01011011111001110011000101101000   [done by compression P-Box]
          - XOR with Key:     01000000101010101011101000100100

          - FUNCTION OUTPUT:  01000000101010101011101000100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011001101111010110010001100

       - FUNCTION OUTPUT:          01000000101010101011101000100100

       - Left XOR FUNCTION OUTPUT: 00000011100111010001011010101000

       - Next Round Left 32 Bits:  01001010111110010010101011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011100111010001011010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010111110010010101011111000

       - Right 32 Bits:            00000011100111010001011010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110010011010010111000001101100011011010110   [Subkey: 12]
          - Input Half:       00000011100111010001011010101000
          - S-Box Result:     11110001001101101010000001000010   [per every group of 4-bits]
          - Split Into Two:   1111000100110110 [L] 1010000001000010 [R]
          - Swap Halves:      10100000010000101111000100110110
          - Bit Inversion:    01011111101111010000111011001001
          - Compressed Key:   01010010100001100100011111101001   [done by compression P-Box]
          - XOR with Key:     00001101001110110100100100100000

          - FUNCTION OUTPUT:  00001101001110110100100100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010111110010010101011111000

       - FUNCTION OUTPUT:          00001101001110110100100100100000

       - Left XOR FUNCTION OUTPUT: 01000111110000100110001111011000

       - Next Round Left 32 Bits:  00000011100111010001011010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111110000100110001111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011100111010001011010101000

       - Right 32 Bits:            01000111110000100110001111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011100011011001011010001111100100111001001010011   [Subkey: 13]
          - Input Half:       01000111110000100110001111011000
          - S-Box Result:     01111101010111100000000101100010   [per every group of 4-bits]
          - Split Into Two:   0111110101011110 [L] 0000000101100010 [R]
          - Swap Halves:      00000001011000100111110101011110
          - Bit Inversion:    11111110100111011000001010100001
          - Compressed Key:   01011100100111101111011010000011   [done by compression P-Box]
          - XOR with Key:     10100010000000110111010000100010

          - FUNCTION OUTPUT:  10100010000000110111010000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011100111010001011010101000

       - FUNCTION OUTPUT:          10100010000000110111010000100010

       - Left XOR FUNCTION OUTPUT: 10100001100111100110001010001010

       - Next Round Left 32 Bits:  01000111110000100110001111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001100111100110001010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111110000100110001111011000

       - Right 32 Bits:            10100001100111100110001010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101000111001001101001011100000110110001101101011001   [Subkey: 14]
          - Input Half:       10100001100111100110001010001010
          - S-Box Result:     01001010001111000000111000100100   [per every group of 4-bits]
          - Split Into Two:   0100101000111100 [L] 0000111000100100 [R]
          - Swap Halves:      00001110001001000100101000111100
          - Bit Inversion:    11110001110110111011010111000011
          - Compressed Key:   01011011001110100000110010010110   [done by compression P-Box]
          - XOR with Key:     10101010111000011011100101010101

          - FUNCTION OUTPUT:  10101010111000011011100101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111110000100110001111011000

       - FUNCTION OUTPUT:          10101010111000011011100101010101

       - Left XOR FUNCTION OUTPUT: 11101101001000111101101010001101

       - Next Round Left 32 Bits:  10100001100111100110001010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101001000111101101010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001100111100110001010001010

       - Right 32 Bits:            11101101001000111101101010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001101100101101000111110010011100100101001101   [Subkey: 15]
          - Input Half:       11101101001000111101101010001101
          - S-Box Result:     11000110111000010110010000100110   [per every group of 4-bits]
          - Split Into Two:   1100011011100001 [L] 0110010000100110 [R]
          - Swap Halves:      01100100001001101100011011100001
          - Bit Inversion:    10011011110110010011100100011110
          - Compressed Key:   01010010011010001101101100011110   [done by compression P-Box]
          - XOR with Key:     11001001101100011110001000000000

          - FUNCTION OUTPUT:  11001001101100011110001000000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001100111100110001010001010

       - FUNCTION OUTPUT:          11001001101100011110001000000000

       - Left XOR FUNCTION OUTPUT: 01101000001011111000000010001010

       - Next Round Left 32 Bits:  11101101001000111101101010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000001011111000000010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101001000111101101010001101

       - Right 32 Bits:            01101000001011111000000010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011100100110100101110000011011000110110101100101   [Subkey: 16]
          - Input Half:       01101000001011111000000010001010
          - S-Box Result:     00000010111010110010111100100100   [per every group of 4-bits]
          - Split Into Two:   0000001011101011 [L] 0010111100100100 [R]
          - Swap Halves:      00101111001001000000001011101011
          - Bit Inversion:    11010000110110111111110100010100
          - Compressed Key:   01011100111010110011001001011010   [done by compression P-Box]
          - XOR with Key:     10001100001100001100111101001110

          - FUNCTION OUTPUT:  10001100001100001100111101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101001000111101101010001101

       - FUNCTION OUTPUT:          10001100001100001100111101001110

       - Left XOR FUNCTION OUTPUT: 01100001000100110001010111000011

       - Next Round Left 32 Bits:  01101000001011111000000010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001000100110001010111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110000100010011000101011100001101101000001011111000000010001010

 > Processed Block:     0110000100010011000101011100001101101000001011111000000010001010




BLOCKS IN ASCII:             -Z??ª?{åj[ÃéWÈjóÒXÕn?ì?ÍdmqÎ$×hª	­T?Þ±V¯»¦Nþä"YqòÀÙ±VF»íNþäaÃh/??

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: MyAweso
In Binary:  01001101011110010100000101110111011001010111001101101111

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01100101000011010111110100010001001101010001100100100001
Subkey 2  : 00110101111001010000010111011101100101011100110110111101
Subkey 3  : 10010100001101011111010001000100110101000110010010000101
Subkey 4  : 11010111100101000001011101110110010101110011011011110100
Subkey 5  : 01010000110101111101000100010011010100011001001000010110
Subkey 6  : 01011110010100000101110111011001010111001101101111010011
Subkey 7  : 01000011010111110100010001001101010001100100100001011001
Subkey 8  : 01111001010000010111011101100101011100110110111101001101
Subkey 9  : 00001101011111010001000100110101000110010010000101100101
Subkey 10 : 11100101000001011101110110010101110011011011110100110101
Subkey 11 : 00110101111101000100010011010100011001001000010110010100
Subkey 12 : 10010100000101110111011001010111001101101111010011010111
Subkey 13 : 11010111110100010001001101010001100100100001011001010000
Subkey 14 : 01010000010111011101100101011100110110111101001101011110
Subkey 15 : 01011111010001000100110101000110010010000101100101000011
Subkey 16 : 01000001011101110110010101110011011011110100110101111001

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : -Z??ª?{åj[ÃéWÈjóÒXÕn?ì?ÍdmqÎ$×hª	­T?Þ±V¯»¦Nþä"YqòÀÙ±VF»íNþäaÃh/??

Data padded with spaces : -Z??ª?{åj[ÃéWÈjóÒXÕn?ì?ÍdmqÎ$×hª	­T?Þ±V¯»¦Nþä"YqòÀÙ±VF»íNþäaÃh/??[Padded with '0' spaces]

Data in ASCII           : 45,90,146,144,170,140,123,229,106,91,195,233,87,200,106,243,6,210,88,213,110,156,6,27,236,157,205,100,109,113,206,36,215,104,170,9,173,84,149,222,177,86,175,187,166,78,254,228,34,89,113,242,127,192,217,17,177,86,70,187,237,78,254,228,97,19,21,195,104,47,128,138,

Data in Binary          : 00101101,01011010,10010010,10010000,10101010,10001100,01111011,11100101,01101010,01011011,11000011,11101001,01010111,11001000,01101010,11110011,00000110,11010010,01011000,11010101,01101110,10011100,00000110,00011011,11101100,10011101,11001101,01100100,01101101,01110001,11001110,00100100,11010111,01101000,10101010,00001001,10101101,01010100,10010101,11011110,10110001,01010110,10101111,10111011,10100110,01001110,11111110,11100100,00100010,01011001,01110001,11110010,01111111,11000000,11011001,00010001,10110001,01010110,01000110,10111011,11101101,01001110,11111110,11100100,01100001,00010011,00010101,11000011,01101000,00101111,10000000,10001010,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 0010110101011010100100101001000010101010100011000111101111100101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101010110101001001010010000

       - Right 32 Bits:            10101010100011000111101111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       10101010100011000111101111100101
          - S-Box Result:     01000100001001011101100011001001   [per every group of 4-bits]
          - Split Into Two:   0100010000100101 [L] 1101100011001001 [R]
          - Swap Halves:      11011000110010010100010000100101
          - Bit Inversion:    00100111001101101011101111011010
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     00101001111111011100010110001100

          - FUNCTION OUTPUT:  00101001111111011100010110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101010110101001001010010000

       - FUNCTION OUTPUT:          00101001111111011100010110001100

       - Left XOR FUNCTION OUTPUT: 00000100101001110101011100011100

       - Next Round Left 32 Bits:  10101010100011000111101111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100101001110101011100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010100011000111101111100101

       - Right 32 Bits:            00000100101001110101011100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       00000100101001110101011100011100
          - S-Box Result:     11110111010011011001110110100101   [per every group of 4-bits]
          - Split Into Two:   1111011101001101 [L] 1001110110100101 [R]
          - Swap Halves:      10011101101001011111011101001101
          - Bit Inversion:    01100010010110100000100010110010
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     10010000001100100001101010100001

          - FUNCTION OUTPUT:  10010000001100100001101010100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010100011000111101111100101

       - FUNCTION OUTPUT:          10010000001100100001101010100001

       - Left XOR FUNCTION OUTPUT: 00111010101111100110000101000100

       - Next Round Left 32 Bits:  00000100101001110101011100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010101111100110000101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100101001110101011100011100

       - Right 32 Bits:            00111010101111100110000101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       00111010101111100110000101000100
          - S-Box Result:     00010100100011000000101001110111   [per every group of 4-bits]
          - Split Into Two:   0001010010001100 [L] 0000101001110111 [R]
          - Swap Halves:      00001010011101110001010010001100
          - Bit Inversion:    11110101100010001110101101110011
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     10111110111100100111010011101110

          - FUNCTION OUTPUT:  10111110111100100111010011101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100101001110101011100011100

       - FUNCTION OUTPUT:          10111110111100100111010011101110

       - Left XOR FUNCTION OUTPUT: 10111010010101010010001111110010

       - Next Round Left 32 Bits:  00111010101111100110000101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010010101010010001111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010101111100110000101000100

       - Right 32 Bits:            10111010010101010010001111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       10111010010101010010001111110010
          - S-Box Result:     10000100100110011110000110111110   [per every group of 4-bits]
          - Split Into Two:   1000010010011001 [L] 1110000110111110 [R]
          - Swap Halves:      11100001101111101000010010011001
          - Bit Inversion:    00011110010000010111101101100110
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     01100110010110111011111110100110

          - FUNCTION OUTPUT:  01100110010110111011111110100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010101111100110000101000100

       - FUNCTION OUTPUT:          01100110010110111011111110100110

       - Left XOR FUNCTION OUTPUT: 01011100111001011101111011100010

       - Next Round Left 32 Bits:  10111010010101010010001111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100111001011101111011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010010101010010001111110010

       - Right 32 Bits:            01011100111001011101111011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       01011100111001011101111011100010
          - S-Box Result:     10010101110010010110110011001110   [per every group of 4-bits]
          - Split Into Two:   1001010111001001 [L] 0110110011001110 [R]
          - Swap Halves:      01101100110011101001010111001001
          - Bit Inversion:    10010011001100010110101000110110
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     11001001111010110000110101011101

          - FUNCTION OUTPUT:  11001001111010110000110101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010010101010010001111110010

       - FUNCTION OUTPUT:          11001001111010110000110101011101

       - Left XOR FUNCTION OUTPUT: 01110011101111100010111010101111

       - Next Round Left 32 Bits:  01011100111001011101111011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011101111100010111010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100111001011101111011100010

       - Right 32 Bits:            01110011101111100010111010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       01110011101111100010111010101111
          - S-Box Result:     11010001100011001110110001001011   [per every group of 4-bits]
          - Split Into Two:   1101000110001100 [L] 1110110001001011 [R]
          - Swap Halves:      11101100010010111101000110001100
          - Bit Inversion:    00010011101101000010111001110011
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     01001101111110100001111100001011

          - FUNCTION OUTPUT:  01001101111110100001111100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100111001011101111011100010

       - FUNCTION OUTPUT:          01001101111110100001111100001011

       - Left XOR FUNCTION OUTPUT: 00010001000111111100000111101001

       - Next Round Left 32 Bits:  01110011101111100010111010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001000111111100000111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011101111100010111010101111

       - Right 32 Bits:            00010001000111111100000111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       00010001000111111100000111101001
          - S-Box Result:     10101010101010110101101011000011   [per every group of 4-bits]
          - Split Into Two:   1010101010101011 [L] 0101101011000011 [R]
          - Swap Halves:      01011010110000111010101010101011
          - Bit Inversion:    10100101001111000101010101010100
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     10110111010010101000110000001110

          - FUNCTION OUTPUT:  10110111010010101000110000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011101111100010111010101111

       - FUNCTION OUTPUT:          10110111010010101000110000001110

       - Left XOR FUNCTION OUTPUT: 11000100111101001010001010100001

       - Next Round Left 32 Bits:  00010001000111111100000111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100111101001010001010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001000111111100000111101001

       - Right 32 Bits:            11000100111101001010001010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       11000100111101001010001010100001
          - S-Box Result:     01010111101101110100111001001010   [per every group of 4-bits]
          - Split Into Two:   0101011110110111 [L] 0100111001001010 [R]
          - Swap Halves:      01001110010010100101011110110111
          - Bit Inversion:    10110001101101011010100001001000
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     00101110101001101110000001010010

          - FUNCTION OUTPUT:  00101110101001101110000001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001000111111100000111101001

       - FUNCTION OUTPUT:          00101110101001101110000001010010

       - Left XOR FUNCTION OUTPUT: 00111111101110010010000110111011

       - Next Round Left 32 Bits:  11000100111101001010001010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111101110010010000110111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100111101001010001010100001

       - Right 32 Bits:            00111111101110010010000110111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       00111111101110010010000110111011
          - S-Box Result:     00011011100000111110101010001000   [per every group of 4-bits]
          - Split Into Two:   0001101110000011 [L] 1110101010001000 [R]
          - Swap Halves:      11101010100010000001101110000011
          - Bit Inversion:    00010101011101111110010001111100
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11010101101011101001101010100010

          - FUNCTION OUTPUT:  11010101101011101001101010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100111101001010001010100001

       - FUNCTION OUTPUT:          11010101101011101001101010100010

       - Left XOR FUNCTION OUTPUT: 00010001010110100011100000000011

       - Next Round Left 32 Bits:  00111111101110010010000110111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001010110100011100000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111101110010010000110111011

       - Right 32 Bits:            00010001010110100011100000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       00010001010110100011100000000011
          - S-Box Result:     10101010100101000001001011110001   [per every group of 4-bits]
          - Split Into Two:   1010101010010100 [L] 0001001011110001 [R]
          - Swap Halves:      00010010111100011010101010010100
          - Bit Inversion:    11101101000011100101010101101011
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     11000110010001100000001101101101

          - FUNCTION OUTPUT:  11000110010001100000001101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111101110010010000110111011

       - FUNCTION OUTPUT:          11000110010001100000001101101101

       - Left XOR FUNCTION OUTPUT: 11111001111111110010001011010110

       - Next Round Left 32 Bits:  00010001010110100011100000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001111111110010001011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001010110100011100000000011

       - Right 32 Bits:            11111001111111110010001011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       11111001111111110010001011010110
          - S-Box Result:     10110011101110111110111001100000   [per every group of 4-bits]
          - Split Into Two:   1011001110111011 [L] 1110111001100000 [R]
          - Swap Halves:      11101110011000001011001110111011
          - Bit Inversion:    00010001100111110100110001000100
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     11101001111000010001111111110111

          - FUNCTION OUTPUT:  11101001111000010001111111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001010110100011100000000011

       - FUNCTION OUTPUT:          11101001111000010001111111110111

       - Left XOR FUNCTION OUTPUT: 11111000101110110010011111110100

       - Next Round Left 32 Bits:  11111001111111110010001011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000101110110010011111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001111111110010001011010110

       - Right 32 Bits:            11111000101110110010011111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       11111000101110110010011111110100
          - S-Box Result:     10110010100010001110110110110111   [per every group of 4-bits]
          - Split Into Two:   1011001010001000 [L] 1110110110110111 [R]
          - Swap Halves:      11101101101101111011001010001000
          - Bit Inversion:    00010010010010000100110101110111
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01011000000110100001010011111110

          - FUNCTION OUTPUT:  01011000000110100001010011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001111111110010001011010110

       - FUNCTION OUTPUT:          01011000000110100001010011111110

       - Left XOR FUNCTION OUTPUT: 10100001111001010011011000101000

       - Next Round Left 32 Bits:  11111000101110110010011111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001111001010011011000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000101110110010011111110100

       - Right 32 Bits:            10100001111001010011011000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       10100001111001010011011000101000
          - S-Box Result:     01001010110010010001000011100010   [per every group of 4-bits]
          - Split Into Two:   0100101011001001 [L] 0001000011100010 [R]
          - Swap Halves:      00010000111000100100101011001001
          - Bit Inversion:    11101111000111011011010100110110
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10010101000001101010100111011110

          - FUNCTION OUTPUT:  10010101000001101010100111011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000101110110010011111110100

       - FUNCTION OUTPUT:          10010101000001101010100111011110

       - Left XOR FUNCTION OUTPUT: 01101101101111011000111000101010

       - Next Round Left 32 Bits:  10100001111001010011011000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101101111011000111000101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001111001010011011000101000

       - Right 32 Bits:            01101101101111011000111000101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       01101101101111011000111000101010
          - S-Box Result:     00000110100001100010110011100100   [per every group of 4-bits]
          - Split Into Two:   0000011010000110 [L] 0010110011100100 [R]
          - Swap Halves:      00101100111001000000011010000110
          - Bit Inversion:    11010011000110111111100101111001
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     10001101110000110110101100010011

          - FUNCTION OUTPUT:  10001101110000110110101100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001111001010011011000101000

       - FUNCTION OUTPUT:          10001101110000110110101100010011

       - Left XOR FUNCTION OUTPUT: 00101100001001100101110100111011

       - Next Round Left 32 Bits:  01101101101111011000111000101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100001001100101110100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101101111011000111000101010

       - Right 32 Bits:            00101100001001100101110100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       00101100001001100101110100111011
          - S-Box Result:     11100101111000001001011000011000   [per every group of 4-bits]
          - Split Into Two:   1110010111100000 [L] 1001011000011000 [R]
          - Swap Halves:      10010110000110001110010111100000
          - Bit Inversion:    01101001111001110001101000011111
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     00111111111010011101000101100001

          - FUNCTION OUTPUT:  00111111111010011101000101100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101101111011000111000101010

       - FUNCTION OUTPUT:          00111111111010011101000101100001

       - Left XOR FUNCTION OUTPUT: 01010010010101000101111101001011

       - Next Round Left 32 Bits:  00101100001001100101110100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010010101000101111101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100001001100101110100111011

       - Right 32 Bits:            01010010010101000101111101001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01010010010101000101111101001011
          - S-Box Result:     10011110100101111001101101111000   [per every group of 4-bits]
          - Split Into Two:   1001111010010111 [L] 1001101101111000 [R]
          - Swap Halves:      10011011011110001001111010010111
          - Bit Inversion:    01100100100001110110000101101000
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     01110111011101010000100101111010

          - FUNCTION OUTPUT:  01110111011101010000100101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100001001100101110100111011

       - FUNCTION OUTPUT:          01110111011101010000100101111010

       - Left XOR FUNCTION OUTPUT: 01011011010100110101010001000001

       - Next Round Left 32 Bits:  01010010010101000101111101001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010100110101010001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101101101010011010101000100000101010010010101000101111101001011

 > Processed Block:     0101101101010011010101000100000101010010010101000101111101001011


Ciphertext Block 2: 0110101001011011110000111110100101010111110010000110101011110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010010110111100001111101001

       - Right 32 Bits:            01010111110010000110101011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01010111110010000110101011110011
          - S-Box Result:     10011101010100100000010010110001   [per every group of 4-bits]
          - Split Into Two:   1001110101010010 [L] 0000010010110001 [R]
          - Swap Halves:      00000100101100011001110101010010
          - Bit Inversion:    11111011010011100110001010101101
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     11110101100001010001110011111011

          - FUNCTION OUTPUT:  11110101100001010001110011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010010110111100001111101001

       - FUNCTION OUTPUT:          11110101100001010001110011111011

       - Left XOR FUNCTION OUTPUT: 10011111110111101101111100010010

       - Next Round Left 32 Bits:  01010111110010000110101011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111110111101101111100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111110010000110101011110011

       - Right 32 Bits:            10011111110111101101111100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       10011111110111101101111100010010
          - S-Box Result:     00111011011011000110101110101110   [per every group of 4-bits]
          - Split Into Two:   0011101101101100 [L] 0110101110101110 [R]
          - Swap Halves:      01101011101011100011101101101100
          - Bit Inversion:    10010100010100011100010010010011
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     01100110001110011101011010000000

          - FUNCTION OUTPUT:  01100110001110011101011010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111110010000110101011110011

       - FUNCTION OUTPUT:          01100110001110011101011010000000

       - Left XOR FUNCTION OUTPUT: 00110001111100011011110001110011

       - Next Round Left 32 Bits:  10011111110111101101111100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001111100011011110001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111110111101101111100010010

       - Right 32 Bits:            00110001111100011011110001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       00110001111100011011110001110011
          - S-Box Result:     00011010101110101000010111010001   [per every group of 4-bits]
          - Split Into Two:   0001101010111010 [L] 1000010111010001 [R]
          - Swap Halves:      10000101110100010001101010111010
          - Bit Inversion:    01111010001011101110010101000101
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     00110001010101000111101011011000

          - FUNCTION OUTPUT:  00110001010101000111101011011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111110111101101111100010010

       - FUNCTION OUTPUT:          00110001010101000111101011011000

       - Left XOR FUNCTION OUTPUT: 10101110100010101010010111001010

       - Next Round Left 32 Bits:  00110001111100011011110001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110100010101010010111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001111100011011110001110011

       - Right 32 Bits:            10101110100010101010010111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       10101110100010101010010111001010
          - S-Box Result:     01001100001001000100100101010100   [per every group of 4-bits]
          - Split Into Two:   0100110000100100 [L] 0100100101010100 [R]
          - Swap Halves:      01001001010101000100110000100100
          - Bit Inversion:    10110110101010111011001111011011
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     11001110101100010111011100011011

          - FUNCTION OUTPUT:  11001110101100010111011100011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001111100011011110001110011

       - FUNCTION OUTPUT:          11001110101100010111011100011011

       - Left XOR FUNCTION OUTPUT: 11111111010000001100101101101000

       - Next Round Left 32 Bits:  10101110100010101010010111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111010000001100101101101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110100010101010010111001010

       - Right 32 Bits:            11111111010000001100101101101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11111111010000001100101101101000
          - S-Box Result:     10111011011111110101100000000010   [per every group of 4-bits]
          - Split Into Two:   1011101101111111 [L] 0101100000000010 [R]
          - Swap Halves:      01011000000000101011101101111111
          - Bit Inversion:    10100111111111010100010010000000
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     11111101001001110010001111101011

          - FUNCTION OUTPUT:  11111101001001110010001111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110100010101010010111001010

       - FUNCTION OUTPUT:          11111101001001110010001111101011

       - Left XOR FUNCTION OUTPUT: 01010011101011011000011000100001

       - Next Round Left 32 Bits:  11111111010000001100101101101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011101011011000011000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111010000001100101101101000

       - Right 32 Bits:            01010011101011011000011000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       01010011101011011000011000100001
          - S-Box Result:     10010001010001100010000011101010   [per every group of 4-bits]
          - Split Into Two:   1001000101000110 [L] 0010000011101010 [R]
          - Swap Halves:      00100000111010101001000101000110
          - Bit Inversion:    11011111000101010110111010111001
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     10000001010110110101111111000001

          - FUNCTION OUTPUT:  10000001010110110101111111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111010000001100101101101000

       - FUNCTION OUTPUT:          10000001010110110101111111000001

       - Left XOR FUNCTION OUTPUT: 01111110000110111001010010101001

       - Next Round Left 32 Bits:  01010011101011011000011000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110000110111001010010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011101011011000011000100001

       - Right 32 Bits:            01111110000110111001010010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       01111110000110111001010010101001
          - S-Box Result:     11011100101010000011011101000011   [per every group of 4-bits]
          - Split Into Two:   1101110010101000 [L] 0011011101000011 [R]
          - Swap Halves:      00110111010000111101110010101000
          - Bit Inversion:    11001000101111000010001101010111
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     11011010110010101111101000001101

          - FUNCTION OUTPUT:  11011010110010101111101000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011101011011000011000100001

       - FUNCTION OUTPUT:          11011010110010101111101000001101

       - Left XOR FUNCTION OUTPUT: 10001001011001110111110000101100

       - Next Round Left 32 Bits:  01111110000110111001010010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001011001110111110000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110000110111001010010101001

       - Right 32 Bits:            10001001011001110111110000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10001001011001110111110000101100
          - S-Box Result:     00100011000011011101010111100101   [per every group of 4-bits]
          - Split Into Two:   0010001100001101 [L] 1101010111100101 [R]
          - Swap Halves:      11010101111001010010001100001101
          - Bit Inversion:    00101010000110101101110011110010
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     10110101000010011001010011101000

          - FUNCTION OUTPUT:  10110101000010011001010011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110000110111001010010101001

       - FUNCTION OUTPUT:          10110101000010011001010011101000

       - Left XOR FUNCTION OUTPUT: 11001011000100100000000001000001

       - Next Round Left 32 Bits:  10001001011001110111110000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011000100100000000001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001011001110111110000101100

       - Right 32 Bits:            11001011000100100000000001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       11001011000100100000000001000001
          - S-Box Result:     01011000101011101111111101111010   [per every group of 4-bits]
          - Split Into Two:   0101100010101110 [L] 1111111101111010 [R]
          - Swap Halves:      11111111011110100101100010101110
          - Bit Inversion:    00000000100001011010011101010001
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11000000010111001101100110001111

          - FUNCTION OUTPUT:  11000000010111001101100110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001011001110111110000101100

       - FUNCTION OUTPUT:          11000000010111001101100110001111

       - Left XOR FUNCTION OUTPUT: 01001001001110111010010110100011

       - Next Round Left 32 Bits:  11001011000100100000000001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001001110111010010110100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011000100100000000001000001

       - Right 32 Bits:            01001001001110111010010110100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01001001001110111010010110100011
          - S-Box Result:     01110011000110000100100101000001   [per every group of 4-bits]
          - Split Into Two:   0111001100011000 [L] 0100100101000001 [R]
          - Swap Halves:      01001001010000010111001100011000
          - Bit Inversion:    10110110101111101000110011100111
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     10011101111101101101101011100001

          - FUNCTION OUTPUT:  10011101111101101101101011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011000100100000000001000001

       - FUNCTION OUTPUT:          10011101111101101101101011100001

       - Left XOR FUNCTION OUTPUT: 01010110111001001101101010100000

       - Next Round Left 32 Bits:  01001001001110111010010110100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110111001001101101010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001001110111010010110100011

       - Right 32 Bits:            01010110111001001101101010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       01010110111001001101101010100000
          - S-Box Result:     10010000110001110110010001001111   [per every group of 4-bits]
          - Split Into Two:   1001000011000111 [L] 0110010001001111 [R]
          - Swap Halves:      01100100010011111001000011000111
          - Bit Inversion:    10011011101100000110111100111000
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01100011110011100011110010001011

          - FUNCTION OUTPUT:  01100011110011100011110010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001001110111010010110100011

       - FUNCTION OUTPUT:          01100011110011100011110010001011

       - Left XOR FUNCTION OUTPUT: 00101010111101011001100100101000

       - Next Round Left 32 Bits:  01010110111001001101101010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010111101011001100100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110111001001101101010100000

       - Right 32 Bits:            00101010111101011001100100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       00101010111101011001100100101000
          - S-Box Result:     11100100101110010011001111100010   [per every group of 4-bits]
          - Split Into Two:   1110010010111001 [L] 0011001111100010 [R]
          - Swap Halves:      00110011111000101110010010111001
          - Bit Inversion:    11001100000111010001101101000110
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     10000110010011110100001011001111

          - FUNCTION OUTPUT:  10000110010011110100001011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110111001001101101010100000

       - FUNCTION OUTPUT:          10000110010011110100001011001111

       - Left XOR FUNCTION OUTPUT: 11010000101010111001100001101111

       - Next Round Left 32 Bits:  00101010111101011001100100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000101010111001100001101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010111101011001100100101000

       - Right 32 Bits:            11010000101010111001100001101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       11010000101010111001100001101111
          - S-Box Result:     01101111010010000011001000001011   [per every group of 4-bits]
          - Split Into Two:   0110111101001000 [L] 0011001000001011 [R]
          - Swap Halves:      00110010000010110110111101001000
          - Bit Inversion:    11001101111101001001000010110111
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10110111111011111000110001011111

          - FUNCTION OUTPUT:  10110111111011111000110001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010111101011001100100101000

       - FUNCTION OUTPUT:          10110111111011111000110001011111

       - Left XOR FUNCTION OUTPUT: 10011101000110100001010101110111

       - Next Round Left 32 Bits:  11010000101010111001100001101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101000110100001010101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000101010111001100001101111

       - Right 32 Bits:            10011101000110100001010101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       10011101000110100001010101110111
          - S-Box Result:     00110110101001001010100111011101   [per every group of 4-bits]
          - Split Into Two:   0011011010100100 [L] 1010100111011101 [R]
          - Swap Halves:      10101001110111010011011010100100
          - Bit Inversion:    01010110001000101100100101011011
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     00001000111110100101101100110001

          - FUNCTION OUTPUT:  00001000111110100101101100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000101010111001100001101111

       - FUNCTION OUTPUT:          00001000111110100101101100110001

       - Left XOR FUNCTION OUTPUT: 11011000010100011100001101011110

       - Next Round Left 32 Bits:  10011101000110100001010101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000010100011100001101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101000110100001010101110111

       - Right 32 Bits:            11011000010100011100001101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       11011000010100011100001101011110
          - S-Box Result:     01100010100110100101000110011100   [per every group of 4-bits]
          - Split Into Two:   0110001010011010 [L] 0101000110011100 [R]
          - Swap Halves:      01010001100111000110001010011010
          - Bit Inversion:    10101110011000111001110101100101
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     11111000011011010101011000011011

          - FUNCTION OUTPUT:  11111000011011010101011000011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101000110100001010101110111

       - FUNCTION OUTPUT:          11111000011011010101011000011011

       - Left XOR FUNCTION OUTPUT: 01100101011101110100001101101100

       - Next Round Left 32 Bits:  11011000010100011100001101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101011101110100001101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000010100011100001101011110

       - Right 32 Bits:            01100101011101110100001101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01100101011101110100001101101100
          - S-Box Result:     00001001110111010111000100000101   [per every group of 4-bits]
          - Split Into Two:   0000100111011101 [L] 0111000100000101 [R]
          - Swap Halves:      01110001000001010000100111011101
          - Bit Inversion:    10001110111110101111011000100010
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     10011101000010001001111000110000

          - FUNCTION OUTPUT:  10011101000010001001111000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000010100011100001101011110

       - FUNCTION OUTPUT:          10011101000010001001111000110000

       - Left XOR FUNCTION OUTPUT: 01000101010110010101110101101110

       - Next Round Left 32 Bits:  01100101011101110100001101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101010110010101110101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100010101011001010111010110111001100101011101110100001101101100

 > Processed Block:     0100010101011001010111010110111001100101011101110100001101101100


Ciphertext Block 3: 0000011011010010010110001101010101101110100111000000011000011011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110110100100101100011010101

       - Right 32 Bits:            01101110100111000000011000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01101110100111000000011000011011
          - S-Box Result:     00001100001101011111000010101000   [per every group of 4-bits]
          - Split Into Two:   0000110000110101 [L] 1111000010101000 [R]
          - Swap Halves:      11110000101010000000110000110101
          - Bit Inversion:    00001111010101111111001111001010
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     00000001100111001000110110011100

          - FUNCTION OUTPUT:  00000001100111001000110110011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110110100100101100011010101

       - FUNCTION OUTPUT:          00000001100111001000110110011100

       - Left XOR FUNCTION OUTPUT: 00000111010011101101010101001001

       - Next Round Left 32 Bits:  01101110100111000000011000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111010011101101010101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110100111000000011000011011

       - Right 32 Bits:            00000111010011101101010101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       00000111010011101101010101001001
          - S-Box Result:     11111101011111000110100101110011   [per every group of 4-bits]
          - Split Into Two:   1111110101111100 [L] 0110100101110011 [R]
          - Swap Halves:      01101001011100111111110101111100
          - Bit Inversion:    10010110100011000000001010000011
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     01100100111001000001000010010000

          - FUNCTION OUTPUT:  01100100111001000001000010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110100111000000011000011011

       - FUNCTION OUTPUT:          01100100111001000001000010010000

       - Left XOR FUNCTION OUTPUT: 00001010011110000001011010001011

       - Next Round Left 32 Bits:  00000111010011101101010101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010011110000001011010001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111010011101101010101001001

       - Right 32 Bits:            00001010011110000001011010001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       00001010011110000001011010001011
          - S-Box Result:     11110100110100101010000000101000   [per every group of 4-bits]
          - Split Into Two:   1111010011010010 [L] 1010000000101000 [R]
          - Swap Halves:      10100000001010001111010011010010
          - Bit Inversion:    01011111110101110000101100101101
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     00010100101011011001010010110000

          - FUNCTION OUTPUT:  00010100101011011001010010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111010011101101010101001001

       - FUNCTION OUTPUT:          00010100101011011001010010110000

       - Left XOR FUNCTION OUTPUT: 00010011111000110100000111111001

       - Next Round Left 32 Bits:  00001010011110000001011010001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011111000110100000111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010011110000001011010001011

       - Right 32 Bits:            00010011111000110100000111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       00010011111000110100000111111001
          - S-Box Result:     10100001110000010111101010110011   [per every group of 4-bits]
          - Split Into Two:   1010000111000001 [L] 0111101010110011 [R]
          - Swap Halves:      01111010101100111010000111000001
          - Bit Inversion:    10000101010011000101111000111110
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     11111101010101101001101011111110

          - FUNCTION OUTPUT:  11111101010101101001101011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010011110000001011010001011

       - FUNCTION OUTPUT:          11111101010101101001101011111110

       - Left XOR FUNCTION OUTPUT: 11110111001011101000110001110101

       - Next Round Left 32 Bits:  00010011111000110100000111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111001011101000110001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011111000110100000111111001

       - Right 32 Bits:            11110111001011101000110001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11110111001011101000110001110101
          - S-Box Result:     10111101111011000010010111011001   [per every group of 4-bits]
          - Split Into Two:   1011110111101100 [L] 0010010111011001 [R]
          - Swap Halves:      00100101110110011011110111101100
          - Bit Inversion:    11011010001001100100001000010011
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     10000000111111000010010101111000

          - FUNCTION OUTPUT:  10000000111111000010010101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011111000110100000111111001

       - FUNCTION OUTPUT:          10000000111111000010010101111000

       - Left XOR FUNCTION OUTPUT: 10010011000111110110010010000001

       - Next Round Left 32 Bits:  11110111001011101000110001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011000111110110010010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111001011101000110001110101

       - Right 32 Bits:            10010011000111110110010010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       10010011000111110110010010000001
          - S-Box Result:     00110001101010110000011100101010   [per every group of 4-bits]
          - Split Into Two:   0011000110101011 [L] 0000011100101010 [R]
          - Swap Halves:      00000111001010100011000110101011
          - Bit Inversion:    11111000110101011100111001010100
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     10100110100110111111111100101100

          - FUNCTION OUTPUT:  10100110100110111111111100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111001011101000110001110101

       - FUNCTION OUTPUT:          10100110100110111111111100101100

       - Left XOR FUNCTION OUTPUT: 01010001101101010111001101011001

       - Next Round Left 32 Bits:  10010011000111110110010010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001101101010111001101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011000111110110010010000001

       - Right 32 Bits:            01010001101101010111001101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       01010001101101010111001101011001
          - S-Box Result:     10011010100010011101000110010011   [per every group of 4-bits]
          - Split Into Two:   1001101010001001 [L] 1101000110010011 [R]
          - Swap Halves:      11010001100100111001101010001001
          - Bit Inversion:    00101110011011000110010101110110
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     00111100000110101011110000101100

          - FUNCTION OUTPUT:  00111100000110101011110000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011000111110110010010000001

       - FUNCTION OUTPUT:          00111100000110101011110000101100

       - Left XOR FUNCTION OUTPUT: 10101111000001011101100010101101

       - Next Round Left 32 Bits:  01010001101101010111001101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111000001011101100010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001101101010111001101011001

       - Right 32 Bits:            10101111000001011101100010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10101111000001011101100010101101
          - S-Box Result:     01001011111110010110001001000110   [per every group of 4-bits]
          - Split Into Two:   0100101111111001 [L] 0110001001000110 [R]
          - Swap Halves:      01100010010001100100101111111001
          - Bit Inversion:    10011101101110011011010000000110
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     00000010101010101111110000011100

          - FUNCTION OUTPUT:  00000010101010101111110000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001101101010111001101011001

       - FUNCTION OUTPUT:          00000010101010101111110000011100

       - Left XOR FUNCTION OUTPUT: 01010011000111111000111101000101

       - Next Round Left 32 Bits:  10101111000001011101100010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011000111111000111101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111000001011101100010101101

       - Right 32 Bits:            01010011000111111000111101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       01010011000111111000111101000101
          - S-Box Result:     10010001101010110010101101111001   [per every group of 4-bits]
          - Split Into Two:   1001000110101011 [L] 0010101101111001 [R]
          - Swap Halves:      00101011011110011001000110101011
          - Bit Inversion:    11010100100001100110111001010100
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     00010100010111110001000010001010

          - FUNCTION OUTPUT:  00010100010111110001000010001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111000001011101100010101101

       - FUNCTION OUTPUT:          00010100010111110001000010001010

       - Left XOR FUNCTION OUTPUT: 10111011010110101100100000100111

       - Next Round Left 32 Bits:  01010011000111111000111101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011010110101100100000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011000111111000111101000101

       - Right 32 Bits:            10111011010110101100100000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       10111011010110101100100000100111
          - S-Box Result:     10001000100101000101001011101101   [per every group of 4-bits]
          - Split Into Two:   1000100010010100 [L] 0101001011101101 [R]
          - Swap Halves:      01010010111011011000100010010100
          - Bit Inversion:    10101101000100100111011101101011
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     10000110010110100010000101101101

          - FUNCTION OUTPUT:  10000110010110100010000101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011000111111000111101000101

       - FUNCTION OUTPUT:          10000110010110100010000101101101

       - Left XOR FUNCTION OUTPUT: 11010101010001011010111000101000

       - Next Round Left 32 Bits:  10111011010110101100100000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101010001011010111000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011010110101100100000100111

       - Right 32 Bits:            11010101010001011010111000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       11010101010001011010111000101000
          - S-Box Result:     01101001011110010100110011100010   [per every group of 4-bits]
          - Split Into Two:   0110100101111001 [L] 0100110011100010 [R]
          - Swap Halves:      01001100111000100110100101111001
          - Bit Inversion:    10110011000111011001011010000110
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01001011011000111100010100110101

          - FUNCTION OUTPUT:  01001011011000111100010100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011010110101100100000100111

       - FUNCTION OUTPUT:          01001011011000111100010100110101

       - Left XOR FUNCTION OUTPUT: 11110000001110010000110100010010

       - Next Round Left 32 Bits:  11010101010001011010111000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000001110010000110100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101010001011010111000101000

       - Right 32 Bits:            11110000001110010000110100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       11110000001110010000110100010010
          - S-Box Result:     10111111000100111111011010101110   [per every group of 4-bits]
          - Split Into Two:   1011111100010011 [L] 1111011010101110 [R]
          - Swap Halves:      11110110101011101011111100010011
          - Bit Inversion:    00001001010100010100000011101100
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01000011000000110001100101100101

          - FUNCTION OUTPUT:  01000011000000110001100101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101010001011010111000101000

       - FUNCTION OUTPUT:          01000011000000110001100101100101

       - Left XOR FUNCTION OUTPUT: 10010110010001101011011101001101

       - Next Round Left 32 Bits:  11110000001110010000110100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110010001101011011101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000001110010000110100010010

       - Right 32 Bits:            10010110010001101011011101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       10010110010001101011011101001101
          - S-Box Result:     00110000011100001000110101110110   [per every group of 4-bits]
          - Split Into Two:   0011000001110000 [L] 1000110101110110 [R]
          - Swap Halves:      10001101011101100011000001110000
          - Bit Inversion:    01110010100010011100111110001111
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     00001000100100101101001101100111

          - FUNCTION OUTPUT:  00001000100100101101001101100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000001110010000110100010010

       - FUNCTION OUTPUT:          00001000100100101101001101100111

       - Left XOR FUNCTION OUTPUT: 11111000101010111101111001110101

       - Next Round Left 32 Bits:  10010110010001101011011101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000101010111101111001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110010001101011011101001101

       - Right 32 Bits:            11111000101010111101111001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       11111000101010111101111001110101
          - S-Box Result:     10110010010010000110110011011001   [per every group of 4-bits]
          - Split Into Two:   1011001001001000 [L] 0110110011011001 [R]
          - Swap Halves:      01101100110110011011001001001000
          - Bit Inversion:    10010011001001100100110110110111
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     11001101111111101101111111011101

          - FUNCTION OUTPUT:  11001101111111101101111111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110010001101011011101001101

       - FUNCTION OUTPUT:          11001101111111101101111111011101

       - Left XOR FUNCTION OUTPUT: 01011011101110000110100010010000

       - Next Round Left 32 Bits:  11111000101010111101111001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011101110000110100010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000101010111101111001110101

       - Right 32 Bits:            01011011101110000110100010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       01011011101110000110100010010000
          - S-Box Result:     10011000100000100000001000111111   [per every group of 4-bits]
          - Split Into Two:   1001100010000010 [L] 0000001000111111 [R]
          - Swap Halves:      00000010001111111001100010000010
          - Bit Inversion:    11111101110000000110011101111101
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     10101011110011101010110000000011

          - FUNCTION OUTPUT:  10101011110011101010110000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000101010111101111001110101

       - FUNCTION OUTPUT:          10101011110011101010110000000011

       - Left XOR FUNCTION OUTPUT: 01010011011001010111001001110110

       - Next Round Left 32 Bits:  01011011101110000110100010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011011001010111001001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011101110000110100010010000

       - Right 32 Bits:            01010011011001010111001001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01010011011001010111001001110110
          - S-Box Result:     10010001000010011101111011010000   [per every group of 4-bits]
          - Split Into Two:   1001000100001001 [L] 1101111011010000 [R]
          - Swap Halves:      11011110110100001001000100001001
          - Bit Inversion:    00100001001011110110111011110110
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     00110010110111010000011011100100

          - FUNCTION OUTPUT:  00110010110111010000011011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011101110000110100010010000

       - FUNCTION OUTPUT:          00110010110111010000011011100100

       - Left XOR FUNCTION OUTPUT: 01101001011001010110111001110100

       - Next Round Left 32 Bits:  01010011011001010111001001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001011001010110111001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110100101100101011011100111010001010011011001010111001001110110

 > Processed Block:     0110100101100101011011100111010001010011011001010111001001110110


Ciphertext Block 4: 1110110010011101110011010110010001101101011100011100111000100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100100111011100110101100100

       - Right 32 Bits:            01101101011100011100111000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01101101011100011100111000100100
          - S-Box Result:     00000110110110100101110011100111   [per every group of 4-bits]
          - Split Into Two:   0000011011011010 [L] 0101110011100111 [R]
          - Swap Halves:      01011100111001110000011011011010
          - Bit Inversion:    10100011000110001111100100100101
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     10101101110100111000011101110011

          - FUNCTION OUTPUT:  10101101110100111000011101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100100111011100110101100100

       - FUNCTION OUTPUT:          10101101110100111000011101110011

       - Left XOR FUNCTION OUTPUT: 01000001010011100100101000010111

       - Next Round Left 32 Bits:  01101101011100011100111000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001010011100100101000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101011100011100111000100100

       - Right 32 Bits:            01000001010011100100101000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       01000001010011100100101000010111
          - S-Box Result:     01111010011111000111010010101101   [per every group of 4-bits]
          - Split Into Two:   0111101001111100 [L] 0111010010101101 [R]
          - Swap Halves:      01110100101011010111101001111100
          - Bit Inversion:    10001011010100101000010110000011
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     01111001001110101001011110010000

          - FUNCTION OUTPUT:  01111001001110101001011110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101011100011100111000100100

       - FUNCTION OUTPUT:          01111001001110101001011110010000

       - Left XOR FUNCTION OUTPUT: 00010100010010110101100110110100

       - Next Round Left 32 Bits:  01000001010011100100101000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100010010110101100110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001010011100100101000010111

       - Right 32 Bits:            00010100010010110101100110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       00010100010010110101100110110100
          - S-Box Result:     10100111011110001001001110000111   [per every group of 4-bits]
          - Split Into Two:   1010011101111000 [L] 1001001110000111 [R]
          - Swap Halves:      10010011100001111010011101111000
          - Bit Inversion:    01101100011110000101100010000111
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     00100111000000101100011100011010

          - FUNCTION OUTPUT:  00100111000000101100011100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001010011100100101000010111

       - FUNCTION OUTPUT:          00100111000000101100011100011010

       - Left XOR FUNCTION OUTPUT: 01100110010011001000110100001101

       - Next Round Left 32 Bits:  00010100010010110101100110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110010011001000110100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100010010110101100110110100

       - Right 32 Bits:            01100110010011001000110100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       01100110010011001000110100001101
          - S-Box Result:     00000000011101010010011011110110   [per every group of 4-bits]
          - Split Into Two:   0000000001110101 [L] 0010011011110110 [R]
          - Swap Halves:      00100110111101100000000001110101
          - Bit Inversion:    11011001000010011111111110001010
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     10100001000100110011101101001010

          - FUNCTION OUTPUT:  10100001000100110011101101001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100010010110101100110110100

       - FUNCTION OUTPUT:          10100001000100110011101101001010

       - Left XOR FUNCTION OUTPUT: 10110101010110000110001011111110

       - Next Round Left 32 Bits:  01100110010011001000110100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101010110000110001011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110010011001000110100001101

       - Right 32 Bits:            10110101010110000110001011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       10110101010110000110001011111110
          - S-Box Result:     10001001100100100000111010111100   [per every group of 4-bits]
          - Split Into Two:   1000100110010010 [L] 0000111010111100 [R]
          - Swap Halves:      00001110101111001000100110010010
          - Bit Inversion:    11110001010000110111011001101101
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     10101011100110010001000100000110

          - FUNCTION OUTPUT:  10101011100110010001000100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110010011001000110100001101

       - FUNCTION OUTPUT:          10101011100110010001000100000110

       - Left XOR FUNCTION OUTPUT: 11001101110101011001110000001011

       - Next Round Left 32 Bits:  10110101010110000110001011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101110101011001110000001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101010110000110001011111110

       - Right 32 Bits:            11001101110101011001110000001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       11001101110101011001110000001011
          - S-Box Result:     01010110011010010011010111111000   [per every group of 4-bits]
          - Split Into Two:   0101011001101001 [L] 0011010111111000 [R]
          - Swap Halves:      00110101111110000101011001101001
          - Bit Inversion:    11001010000001111010100110010110
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     10010100010010011001100011101110

          - FUNCTION OUTPUT:  10010100010010011001100011101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101010110000110001011111110

       - FUNCTION OUTPUT:          10010100010010011001100011101110

       - Left XOR FUNCTION OUTPUT: 00100001000100011111101000010000

       - Next Round Left 32 Bits:  11001101110101011001110000001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001000100011111101000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101110101011001110000001011

       - Right 32 Bits:            00100001000100011111101000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       00100001000100011111101000010000
          - S-Box Result:     11101010101010101011010010101111   [per every group of 4-bits]
          - Split Into Two:   1110101010101010 [L] 1011010010101111 [R]
          - Swap Halves:      10110100101011111110101010101010
          - Bit Inversion:    01001011010100000001010101010101
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     01011001001001101100110000001111

          - FUNCTION OUTPUT:  01011001001001101100110000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101110101011001110000001011

       - FUNCTION OUTPUT:          01011001001001101100110000001111

       - Left XOR FUNCTION OUTPUT: 10010100111100110101000000000100

       - Next Round Left 32 Bits:  00100001000100011111101000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100111100110101000000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001000100011111101000010000

       - Right 32 Bits:            10010100111100110101000000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10010100111100110101000000000100
          - S-Box Result:     00110111101100011001111111110111   [per every group of 4-bits]
          - Split Into Two:   0011011110110001 [L] 1001111111110111 [R]
          - Swap Halves:      10011111111101110011011110110001
          - Bit Inversion:    01100000000010001100100001001110
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     11111111000110111000000001010100

          - FUNCTION OUTPUT:  11111111000110111000000001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001000100011111101000010000

       - FUNCTION OUTPUT:          11111111000110111000000001010100

       - Left XOR FUNCTION OUTPUT: 11011110000010100111101001000100

       - Next Round Left 32 Bits:  10010100111100110101000000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110000010100111101001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100111100110101000000000100

       - Right 32 Bits:            11011110000010100111101001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       11011110000010100111101001000100
          - S-Box Result:     01101100111101001101010001110111   [per every group of 4-bits]
          - Split Into Two:   0110110011110100 [L] 1101010001110111 [R]
          - Swap Halves:      11010100011101110110110011110100
          - Bit Inversion:    00101011100010001001001100001011
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11101011010100011110110111010101

          - FUNCTION OUTPUT:  11101011010100011110110111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100111100110101000000000100

       - FUNCTION OUTPUT:          11101011010100011110110111010101

       - Left XOR FUNCTION OUTPUT: 01111111101000101011110111010001

       - Next Round Left 32 Bits:  11011110000010100111101001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111101000101011110111010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110000010100111101001000100

       - Right 32 Bits:            01111111101000101011110111010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01111111101000101011110111010001
          - S-Box Result:     11011011010011101000011001101010   [per every group of 4-bits]
          - Split Into Two:   1101101101001110 [L] 1000011001101010 [R]
          - Swap Halves:      10000110011010101101101101001110
          - Bit Inversion:    01111001100101010010010010110001
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     01010010110111010111001010110111

          - FUNCTION OUTPUT:  01010010110111010111001010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110000010100111101001000100

       - FUNCTION OUTPUT:          01010010110111010111001010110111

       - Left XOR FUNCTION OUTPUT: 10001100110101110000100011110011

       - Next Round Left 32 Bits:  01111111101000101011110111010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100110101110000100011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111101000101011110111010001

       - Right 32 Bits:            10001100110101110000100011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       10001100110101110000100011110011
          - S-Box Result:     00100101011011011111001010110001   [per every group of 4-bits]
          - Split Into Two:   0010010101101101 [L] 1111001010110001 [R]
          - Swap Halves:      11110010101100010010010101101101
          - Bit Inversion:    00001101010011101101101010010010
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     11110101001100001000100100100001

          - FUNCTION OUTPUT:  11110101001100001000100100100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111101000101011110111010001

       - FUNCTION OUTPUT:          11110101001100001000100100100001

       - Left XOR FUNCTION OUTPUT: 10001010100100100011010011110000

       - Next Round Left 32 Bits:  10001100110101110000100011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010100100100011010011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100110101110000100011110011

       - Right 32 Bits:            10001010100100100011010011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       10001010100100100011010011110000
          - S-Box Result:     00100100001111100001011110111111   [per every group of 4-bits]
          - Split Into Two:   0010010000111110 [L] 0001011110111111 [R]
          - Swap Halves:      00010111101111110010010000111110
          - Bit Inversion:    11101000010000001101101111000001
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     10100010000100101000001001001000

          - FUNCTION OUTPUT:  10100010000100101000001001001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100110101110000100011110011

       - FUNCTION OUTPUT:          10100010000100101000001001001000

       - Left XOR FUNCTION OUTPUT: 00101110110001011000101010111011

       - Next Round Left 32 Bits:  10001010100100100011010011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110110001011000101010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010100100100011010011110000

       - Right 32 Bits:            00101110110001011000101010111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       00101110110001011000101010111011
          - S-Box Result:     11101100010110010010010010001000   [per every group of 4-bits]
          - Split Into Two:   1110110001011001 [L] 0010010010001000 [R]
          - Swap Halves:      00100100100010001110110001011001
          - Bit Inversion:    11011011011101110001001110100110
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10100001011011000000111101001110

          - FUNCTION OUTPUT:  10100001011011000000111101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010100100100011010011110000

       - FUNCTION OUTPUT:          10100001011011000000111101001110

       - Left XOR FUNCTION OUTPUT: 00101011111111100011101110111110

       - Next Round Left 32 Bits:  00101110110001011000101010111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011111111100011101110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110110001011000101010111011

       - Right 32 Bits:            00101011111111100011101110111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       00101011111111100011101110111110
          - S-Box Result:     11101000101111000001100010001100   [per every group of 4-bits]
          - Split Into Two:   1110100010111100 [L] 0001100010001100 [R]
          - Swap Halves:      00011000100011001110100010111100
          - Bit Inversion:    11100111011100110001011101000011
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     10111001101010111000010100101001

          - FUNCTION OUTPUT:  10111001101010111000010100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110110001011000101010111011

       - FUNCTION OUTPUT:          10111001101010111000010100101001

       - Left XOR FUNCTION OUTPUT: 10010111011011100000111110010010

       - Next Round Left 32 Bits:  00101011111111100011101110111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111011011100000111110010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011111111100011101110111110

       - Right 32 Bits:            10010111011011100000111110010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       10010111011011100000111110010010
          - S-Box Result:     00111101000011001111101100111110   [per every group of 4-bits]
          - Split Into Two:   0011110100001100 [L] 1111101100111110 [R]
          - Swap Halves:      11111011001111100011110100001100
          - Bit Inversion:    00000100110000011100001011110011
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     01010010110011110000100110001101

          - FUNCTION OUTPUT:  01010010110011110000100110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011111111100011101110111110

       - FUNCTION OUTPUT:          01010010110011110000100110001101

       - Left XOR FUNCTION OUTPUT: 01111001001100010011001000110011

       - Next Round Left 32 Bits:  10010111011011100000111110010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001001100010011001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111011011100000111110010010

       - Right 32 Bits:            01111001001100010011001000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01111001001100010011001000110011
          - S-Box Result:     11010011000110100001111000010001   [per every group of 4-bits]
          - Split Into Two:   1101001100011010 [L] 0001111000010001 [R]
          - Swap Halves:      00011110000100011101001100011010
          - Bit Inversion:    11100001111011100010110011100101
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     11110010000111000100010011110111

          - FUNCTION OUTPUT:  11110010000111000100010011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111011011100000111110010010

       - FUNCTION OUTPUT:          11110010000111000100010011110111

       - Left XOR FUNCTION OUTPUT: 01100101011100100100101101100101

       - Next Round Left 32 Bits:  01111001001100010011001000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101011100100100101101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110010101110010010010110110010101111001001100010011001000110011

 > Processed Block:     0110010101110010010010110110010101111001001100010011001000110011


Ciphertext Block 5: 1101011101101000101010100000100110101101010101001001010111011110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111011010001010101000001001

       - Right 32 Bits:            10101101010101001001010111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       10101101010101001001010111011110
          - S-Box Result:     01000110100101110011100101101100   [per every group of 4-bits]
          - Split Into Two:   0100011010010111 [L] 0011100101101100 [R]
          - Swap Halves:      00111001011011000100011010010111
          - Bit Inversion:    11000110100100111011100101101000
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     11001000010110001100011100111110

          - FUNCTION OUTPUT:  11001000010110001100011100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111011010001010101000001001

       - FUNCTION OUTPUT:          11001000010110001100011100111110

       - Left XOR FUNCTION OUTPUT: 00011111001100000110110100110111

       - Next Round Left 32 Bits:  10101101010101001001010111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111001100000110110100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101010101001001010111011110

       - Right 32 Bits:            00011111001100000110110100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       00011111001100000110110100110111
          - S-Box Result:     10101011000111110000011000011101   [per every group of 4-bits]
          - Split Into Two:   1010101100011111 [L] 0000011000011101 [R]
          - Swap Halves:      00000110000111011010101100011111
          - Bit Inversion:    11111001111000100101010011100000
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     00001011100010100100011011110011

          - FUNCTION OUTPUT:  00001011100010100100011011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101010101001001010111011110

       - FUNCTION OUTPUT:          00001011100010100100011011110011

       - Left XOR FUNCTION OUTPUT: 10100110110111101101001100101101

       - Next Round Left 32 Bits:  00011111001100000110110100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110110111101101001100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111001100000110110100110111

       - Right 32 Bits:            10100110110111101101001100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       10100110110111101101001100101101
          - S-Box Result:     01000000011011000110000111100110   [per every group of 4-bits]
          - Split Into Two:   0100000001101100 [L] 0110000111100110 [R]
          - Swap Halves:      01100001111001100100000001101100
          - Bit Inversion:    10011110000110011011111110010011
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     11010101011000110010000000001110

          - FUNCTION OUTPUT:  11010101011000110010000000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111001100000110110100110111

       - FUNCTION OUTPUT:          11010101011000110010000000001110

       - Left XOR FUNCTION OUTPUT: 11001010010100110100110100111001

       - Next Round Left 32 Bits:  10100110110111101101001100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010010100110100110100111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110110111101101001100101101

       - Right 32 Bits:            11001010010100110100110100111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       11001010010100110100110100111001
          - S-Box Result:     01010100100100010111011000010011   [per every group of 4-bits]
          - Split Into Two:   0101010010010001 [L] 0111011000010011 [R]
          - Swap Halves:      01110110000100110101010010010001
          - Bit Inversion:    10001001111011001010101101101110
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     11110001111101100110111110101110

          - FUNCTION OUTPUT:  11110001111101100110111110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110110111101101001100101101

       - FUNCTION OUTPUT:          11110001111101100110111110101110

       - Left XOR FUNCTION OUTPUT: 01010111001010001011110010000011

       - Next Round Left 32 Bits:  11001010010100110100110100111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111001010001011110010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010010100110100110100111001

       - Right 32 Bits:            01010111001010001011110010000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       01010111001010001011110010000011
          - S-Box Result:     10011101111000101000010100100001   [per every group of 4-bits]
          - Split Into Two:   1001110111100010 [L] 1000010100100001 [R]
          - Swap Halves:      10000101001000011001110111100010
          - Bit Inversion:    01111010110111100110001000011101
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     00100000000001000000010101110110

          - FUNCTION OUTPUT:  00100000000001000000010101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010010100110100110100111001

       - FUNCTION OUTPUT:          00100000000001000000010101110110

       - Left XOR FUNCTION OUTPUT: 11101010010101110100100001001111

       - Next Round Left 32 Bits:  01010111001010001011110010000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010010101110100100001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111001010001011110010000011

       - Right 32 Bits:            11101010010101110100100001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       11101010010101110100100001001111
          - S-Box Result:     11000100100111010111001001111011   [per every group of 4-bits]
          - Split Into Two:   1100010010011101 [L] 0111001001111011 [R]
          - Swap Halves:      01110010011110111100010010011101
          - Bit Inversion:    10001101100001000011101101100010
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     11010011110010100000101000011010

          - FUNCTION OUTPUT:  11010011110010100000101000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111001010001011110010000011

       - FUNCTION OUTPUT:          11010011110010100000101000011010

       - Left XOR FUNCTION OUTPUT: 10000100111000101011011010011001

       - Next Round Left 32 Bits:  11101010010101110100100001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100111000101011011010011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010010101110100100001001111

       - Right 32 Bits:            10000100111000101011011010011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       10000100111000101011011010011001
          - S-Box Result:     00100111110011101000000000110011   [per every group of 4-bits]
          - Split Into Two:   0010011111001110 [L] 1000000000110011 [R]
          - Swap Halves:      10000000001100110010011111001110
          - Bit Inversion:    01111111110011001101100000110001
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     01101101101110100000000101101011

          - FUNCTION OUTPUT:  01101101101110100000000101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010010101110100100001001111

       - FUNCTION OUTPUT:          01101101101110100000000101101011

       - Left XOR FUNCTION OUTPUT: 10000111111011010100100100100100

       - Next Round Left 32 Bits:  10000100111000101011011010011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111111011010100100100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100111000101011011010011001

       - Right 32 Bits:            10000111111011010100100100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10000111111011010100100100100100
          - S-Box Result:     00101101110001100111001111100111   [per every group of 4-bits]
          - Split Into Two:   0010110111000110 [L] 0111001111100111 [R]
          - Swap Halves:      01110011111001110010110111000110
          - Bit Inversion:    10001100000110001101001000111001
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     00010011000010111001101000100011

          - FUNCTION OUTPUT:  00010011000010111001101000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100111000101011011010011001

       - FUNCTION OUTPUT:          00010011000010111001101000100011

       - Left XOR FUNCTION OUTPUT: 10010111111010010010110010111010

       - Next Round Left 32 Bits:  10000111111011010100100100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111111010010010110010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111111011010100100100100100

       - Right 32 Bits:            10010111111010010010110010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       10010111111010010010110010111010
          - S-Box Result:     00111101110000111110010110000100   [per every group of 4-bits]
          - Split Into Two:   0011110111000011 [L] 1110010110000100 [R]
          - Swap Halves:      11100101100001000011110111000011
          - Bit Inversion:    00011010011110111100001000111100
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11011010101000101011110011100010

          - FUNCTION OUTPUT:  11011010101000101011110011100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111111011010100100100100100

       - FUNCTION OUTPUT:          11011010101000101011110011100010

       - Left XOR FUNCTION OUTPUT: 01011101010011111111010111000110

       - Next Round Left 32 Bits:  10010111111010010010110010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101010011111111010111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111111010010010110010111010

       - Right 32 Bits:            01011101010011111111010111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01011101010011111111010111000110
          - S-Box Result:     10010110011110111011100101010000   [per every group of 4-bits]
          - Split Into Two:   1001011001111011 [L] 1011100101010000 [R]
          - Swap Halves:      10111001010100001001011001111011
          - Bit Inversion:    01000110101011110110100110000100
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     01101101111001110011111110000010

          - FUNCTION OUTPUT:  01101101111001110011111110000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111111010010010110010111010

       - FUNCTION OUTPUT:          01101101111001110011111110000010

       - Left XOR FUNCTION OUTPUT: 11111010000011100001001100111000

       - Next Round Left 32 Bits:  01011101010011111111010111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010000011100001001100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101010011111111010111000110

       - Right 32 Bits:            11111010000011100001001100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       11111010000011100001001100111000
          - S-Box Result:     10110100111111001010000100010010   [per every group of 4-bits]
          - Split Into Two:   1011010011111100 [L] 1010000100010010 [R]
          - Swap Halves:      10100001000100101011010011111100
          - Bit Inversion:    01011110111011010100101100000011
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     10100110100100110001100010110000

          - FUNCTION OUTPUT:  10100110100100110001100010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101010011111111010111000110

       - FUNCTION OUTPUT:          10100110100100110001100010110000

       - Left XOR FUNCTION OUTPUT: 11111011110111001110110101110110

       - Next Round Left 32 Bits:  11111010000011100001001100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011110111001110110101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010000011100001001100111000

       - Right 32 Bits:            11111011110111001110110101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       11111011110111001110110101110110
          - S-Box Result:     10111000011001011100011011010000   [per every group of 4-bits]
          - Split Into Two:   1011100001100101 [L] 1100011011010000 [R]
          - Swap Halves:      11000110110100001011100001100101
          - Bit Inversion:    00111001001011110100011110011010
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01110011011111010001111000010011

          - FUNCTION OUTPUT:  01110011011111010001111000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010000011100001001100111000

       - FUNCTION OUTPUT:          01110011011111010001111000010011

       - Left XOR FUNCTION OUTPUT: 10001001011100110000110100101011

       - Next Round Left 32 Bits:  11111011110111001110110101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001011100110000110100101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011110111001110110101110110

       - Right 32 Bits:            10001001011100110000110100101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       10001001011100110000110100101011
          - S-Box Result:     00100011110100011111011011101000   [per every group of 4-bits]
          - Split Into Two:   0010001111010001 [L] 1111011011101000 [R]
          - Swap Halves:      11110110111010000010001111010001
          - Bit Inversion:    00001001000101111101110000101110
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     01110011000011001100000011000110

          - FUNCTION OUTPUT:  01110011000011001100000011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011110111001110110101110110

       - FUNCTION OUTPUT:          01110011000011001100000011000110

       - Left XOR FUNCTION OUTPUT: 10001000110100000010110110110000

       - Next Round Left 32 Bits:  10001001011100110000110100101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000110100000010110110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001011100110000110100101011

       - Right 32 Bits:            10001000110100000010110110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       10001000110100000010110110110000
          - S-Box Result:     00100010011011111110011010001111   [per every group of 4-bits]
          - Split Into Two:   0010001001101111 [L] 1110011010001111 [R]
          - Swap Halves:      11100110100011110010001001101111
          - Bit Inversion:    00011001011100001101110110010000
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     01000111101010000100111111111010

          - FUNCTION OUTPUT:  01000111101010000100111111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001011100110000110100101011

       - FUNCTION OUTPUT:          01000111101010000100111111111010

       - Left XOR FUNCTION OUTPUT: 11001110110110110100001011010001

       - Next Round Left 32 Bits:  10001000110100000010110110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110110110110100001011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000110100000010110110110000

       - Right 32 Bits:            11001110110110110100001011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       11001110110110110100001011010001
          - S-Box Result:     01011100011010000111111001101010   [per every group of 4-bits]
          - Split Into Two:   0101110001101000 [L] 0111111001101010 [R]
          - Swap Halves:      01111110011010100101110001101000
          - Bit Inversion:    10000001100101011010001110010111
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     11010111100110110110100011101001

          - FUNCTION OUTPUT:  11010111100110110110100011101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000110100000010110110110000

       - FUNCTION OUTPUT:          11010111100110110110100011101001

       - Left XOR FUNCTION OUTPUT: 01011111010010110100010101011001

       - Next Round Left 32 Bits:  11001110110110110100001011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111010010110100010101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110110110110100001011010001

       - Right 32 Bits:            01011111010010110100010101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01011111010010110100010101011001
          - S-Box Result:     10011011011110000111100110010011   [per every group of 4-bits]
          - Split Into Two:   1001101101111000 [L] 0111100110010011 [R]
          - Swap Halves:      01111001100100111001101101111000
          - Bit Inversion:    10000110011011000110010010000111
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     10010101100111100000110010010101

          - FUNCTION OUTPUT:  10010101100111100000110010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110110110110100001011010001

       - FUNCTION OUTPUT:          10010101100111100000110010010101

       - Left XOR FUNCTION OUTPUT: 01011011010001010100111001000100

       - Next Round Left 32 Bits:  01011111010010110100010101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010001010100111001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101101101000101010011100100010001011111010010110100010101011001

 > Processed Block:     0101101101000101010011100100010001011111010010110100010101011001


Ciphertext Block 6: 1011000101010110101011111011101110100110010011101111111011100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001010101101010111110111011

       - Right 32 Bits:            10100110010011101111111011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       10100110010011101111111011100100
          - S-Box Result:     01000000011111001011110011000111   [per every group of 4-bits]
          - Split Into Two:   0100000001111100 [L] 1011110011000111 [R]
          - Swap Halves:      10111100110001110100000001111100
          - Bit Inversion:    01000011001110001011111110000011
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     01001101111100111100000111010101

          - FUNCTION OUTPUT:  01001101111100111100000111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001010101101010111110111011

       - FUNCTION OUTPUT:          01001101111100111100000111010101

       - Left XOR FUNCTION OUTPUT: 11111100101001010110111001101110

       - Next Round Left 32 Bits:  10100110010011101111111011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100101001010110111001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110010011101111111011100100

       - Right 32 Bits:            11111100101001010110111001101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       11111100101001010110111001101110
          - S-Box Result:     10110101010010010000110000001100   [per every group of 4-bits]
          - Split Into Two:   1011010101001001 [L] 0000110000001100 [R]
          - Swap Halves:      00001100000011001011010101001001
          - Bit Inversion:    11110011111100110100101010110110
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     00000001100110110101100010100101

          - FUNCTION OUTPUT:  00000001100110110101100010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110010011101111111011100100

       - FUNCTION OUTPUT:          00000001100110110101100010100101

       - Left XOR FUNCTION OUTPUT: 10100111110101011010011001000001

       - Next Round Left 32 Bits:  11111100101001010110111001101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111110101011010011001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100101001010110111001101110

       - Right 32 Bits:            10100111110101011010011001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       10100111110101011010011001000001
          - S-Box Result:     01001101011010010100000001111010   [per every group of 4-bits]
          - Split Into Two:   0100110101101001 [L] 0100000001111010 [R]
          - Swap Halves:      01000000011110100100110101101001
          - Bit Inversion:    10111111100001011011001010010110
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     11110100111111110010110100001011

          - FUNCTION OUTPUT:  11110100111111110010110100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100101001010110111001101110

       - FUNCTION OUTPUT:          11110100111111110010110100001011

       - Left XOR FUNCTION OUTPUT: 00001000010110100100001101100101

       - Next Round Left 32 Bits:  10100111110101011010011001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000010110100100001101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111110101011010011001000001

       - Right 32 Bits:            00001000010110100100001101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       00001000010110100100001101100101
          - S-Box Result:     11110010100101000111000100001001   [per every group of 4-bits]
          - Split Into Two:   1111001010010100 [L] 0111000100001001 [R]
          - Swap Halves:      01110001000010011111001010010100
          - Bit Inversion:    10001110111101100000110101101011
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     11110110111011001100100110101011

          - FUNCTION OUTPUT:  11110110111011001100100110101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111110101011010011001000001

       - FUNCTION OUTPUT:          11110110111011001100100110101011

       - Left XOR FUNCTION OUTPUT: 01010001001110010110111111101010

       - Next Round Left 32 Bits:  00001000010110100100001101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001001110010110111111101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000010110100100001101100101

       - Right 32 Bits:            01010001001110010110111111101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       01010001001110010110111111101010
          - S-Box Result:     10011010000100110000101111000100   [per every group of 4-bits]
          - Split Into Two:   1001101000010011 [L] 0000101111000100 [R]
          - Swap Halves:      00001011110001001001101000010011
          - Bit Inversion:    11110100001110110110010111101100
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     10101110111000010000001010000111

          - FUNCTION OUTPUT:  10101110111000010000001010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000010110100100001101100101

       - FUNCTION OUTPUT:          10101110111000010000001010000111

       - Left XOR FUNCTION OUTPUT: 10100110101110110100000111100010

       - Next Round Left 32 Bits:  01010001001110010110111111101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110101110110100000111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001001110010110111111101010

       - Right 32 Bits:            10100110101110110100000111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       10100110101110110100000111100010
          - S-Box Result:     01000000100010000111101011001110   [per every group of 4-bits]
          - Split Into Two:   0100000010001000 [L] 0111101011001110 [R]
          - Swap Halves:      01111010110011100100000010001000
          - Bit Inversion:    10000101001100011011111101110111
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     11011011011111111000111000001111

          - FUNCTION OUTPUT:  11011011011111111000111000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001001110010110111111101010

       - FUNCTION OUTPUT:          11011011011111111000111000001111

       - Left XOR FUNCTION OUTPUT: 10001010010001101110000111100101

       - Next Round Left 32 Bits:  10100110101110110100000111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010010001101110000111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110101110110100000111100010

       - Right 32 Bits:            10001010010001101110000111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       10001010010001101110000111100101
          - S-Box Result:     00100100011100001100101011001001   [per every group of 4-bits]
          - Split Into Two:   0010010001110000 [L] 1100101011001001 [R]
          - Swap Halves:      11001010110010010010010001110000
          - Bit Inversion:    00110101001101101101101110001111
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     00100111010000000000001011010101

          - FUNCTION OUTPUT:  00100111010000000000001011010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110101110110100000111100010

       - FUNCTION OUTPUT:          00100111010000000000001011010101

       - Left XOR FUNCTION OUTPUT: 10000001111110110100001100110111

       - Next Round Left 32 Bits:  10001010010001101110000111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001111110110100001100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010010001101110000111100101

       - Right 32 Bits:            10000001111110110100001100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10000001111110110100001100110111
          - S-Box Result:     00101010101110000111000100011101   [per every group of 4-bits]
          - Split Into Two:   0010101010111000 [L] 0111000100011101 [R]
          - Swap Halves:      01110001000111010010101010111000
          - Bit Inversion:    10001110111000101101010101000111
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     00010001111100011001110101011101

          - FUNCTION OUTPUT:  00010001111100011001110101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010010001101110000111100101

       - FUNCTION OUTPUT:          00010001111100011001110101011101

       - Left XOR FUNCTION OUTPUT: 10011011101101110111110010111000

       - Next Round Left 32 Bits:  10000001111110110100001100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011101101110111110010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001111110110100001100110111

       - Right 32 Bits:            10011011101101110111110010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       10011011101101110111110010111000
          - S-Box Result:     00111000100011011101010110000010   [per every group of 4-bits]
          - Split Into Two:   0011100010001101 [L] 1101010110000010 [R]
          - Swap Halves:      11010101100000100011100010001101
          - Bit Inversion:    00101010011111011100011101110010
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11101010101001001011100110101100

          - FUNCTION OUTPUT:  11101010101001001011100110101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001111110110100001100110111

       - FUNCTION OUTPUT:          11101010101001001011100110101100

       - Left XOR FUNCTION OUTPUT: 01101011010111111111101010011011

       - Next Round Left 32 Bits:  10011011101101110111110010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011010111111111101010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011101101110111110010111000

       - Right 32 Bits:            01101011010111111111101010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01101011010111111111101010011011
          - S-Box Result:     00001000100110111011010000111000   [per every group of 4-bits]
          - Split Into Two:   0000100010011011 [L] 1011010000111000 [R]
          - Swap Halves:      10110100001110000000100010011011
          - Bit Inversion:    01001011110001111111011101100100
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     01100000100011111010000101100010

          - FUNCTION OUTPUT:  01100000100011111010000101100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011101101110111110010111000

       - FUNCTION OUTPUT:          01100000100011111010000101100010

       - Left XOR FUNCTION OUTPUT: 11111011001110001101110111011010

       - Next Round Left 32 Bits:  01101011010111111111101010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011001110001101110111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011010111111111101010011011

       - Right 32 Bits:            11111011001110001101110111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       11111011001110001101110111011010
          - S-Box Result:     10111000000100100110011001100100   [per every group of 4-bits]
          - Split Into Two:   1011100000010010 [L] 0110011001100100 [R]
          - Swap Halves:      01100110011001001011100000010010
          - Bit Inversion:    10011001100110110100011111101101
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01100001111001010001010001011110

          - FUNCTION OUTPUT:  01100001111001010001010001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011010111111111101010011011

       - FUNCTION OUTPUT:          01100001111001010001010001011110

       - Left XOR FUNCTION OUTPUT: 00001010101110101110111011000101

       - Next Round Left 32 Bits:  11111011001110001101110111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010101110101110111011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011001110001101110111011010

       - Right 32 Bits:            00001010101110101110111011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       00001010101110101110111011000101
          - S-Box Result:     11110100100001001100110001011001   [per every group of 4-bits]
          - Split Into Two:   1111010010000100 [L] 1100110001011001 [R]
          - Swap Halves:      11001100010110011111010010000100
          - Bit Inversion:    00110011101001100000101101111011
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01111001111101000101001011110010

          - FUNCTION OUTPUT:  01111001111101000101001011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011001110001101110111011010

       - FUNCTION OUTPUT:          01111001111101000101001011110010

       - Left XOR FUNCTION OUTPUT: 10000010110011001000111100101000

       - Next Round Left 32 Bits:  00001010101110101110111011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010110011001000111100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010101110101110111011000101

       - Right 32 Bits:            10000010110011001000111100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       10000010110011001000111100101000
          - S-Box Result:     00101110010101010010101111100010   [per every group of 4-bits]
          - Split Into Two:   0010111001010101 [L] 0010101111100010 [R]
          - Swap Halves:      00101011111000100010111001010101
          - Bit Inversion:    11010100000111011101000110101010
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10101110000001101100110101000010

          - FUNCTION OUTPUT:  10101110000001101100110101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010101110101110111011000101

       - FUNCTION OUTPUT:          10101110000001101100110101000010

       - Left XOR FUNCTION OUTPUT: 10100100101111000010001110000111

       - Next Round Left 32 Bits:  10000010110011001000111100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100101111000010001110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010110011001000111100101000

       - Right 32 Bits:            10100100101111000010001110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       10100100101111000010001110000111
          - S-Box Result:     01000111100001011110000100101101   [per every group of 4-bits]
          - Split Into Two:   0100011110000101 [L] 1110000100101101 [R]
          - Swap Halves:      11100001001011010100011110000101
          - Bit Inversion:    00011110110100101011100001111010
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     01000000000010100010101000010000

          - FUNCTION OUTPUT:  01000000000010100010101000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010110011001000111100101000

       - FUNCTION OUTPUT:          01000000000010100010101000010000

       - Left XOR FUNCTION OUTPUT: 11000010110001101010010100111000

       - Next Round Left 32 Bits:  10100100101111000010001110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010110001101010010100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100101111000010001110000111

       - Right 32 Bits:            11000010110001101010010100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       11000010110001101010010100111000
          - S-Box Result:     01011110010100000100100100010010   [per every group of 4-bits]
          - Split Into Two:   0101111001010000 [L] 0100100100010010 [R]
          - Swap Halves:      01001001000100100101111001010000
          - Bit Inversion:    10110110111011011010000110101111
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     11100000111000110110101011010001

          - FUNCTION OUTPUT:  11100000111000110110101011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100101111000010001110000111

       - FUNCTION OUTPUT:          11100000111000110110101011010001

       - Left XOR FUNCTION OUTPUT: 01000100010111110100100101010110

       - Next Round Left 32 Bits:  11000010110001101010010100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100010111110100100101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010110001101010010100111000

       - Right 32 Bits:            01000100010111110100100101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01000100010111110100100101010110
          - S-Box Result:     01110111100110110111001110010000   [per every group of 4-bits]
          - Split Into Two:   0111011110011011 [L] 0111001110010000 [R]
          - Swap Halves:      01110011100100000111011110011011
          - Bit Inversion:    10001100011011111000100001100100
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     10011111100111011110000001110110

          - FUNCTION OUTPUT:  10011111100111011110000001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010110001101010010100111000

       - FUNCTION OUTPUT:          10011111100111011110000001110110

       - Left XOR FUNCTION OUTPUT: 01011101010110110100010101001110

       - Next Round Left 32 Bits:  01000100010111110100100101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101010110110100010101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101110101011011010001010100111001000100010111110100100101010110

 > Processed Block:     0101110101011011010001010100111001000100010111110100100101010110


Ciphertext Block 7: 0010001001011001011100011111001001111111110000001101100100010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010010110010111000111110010

       - Right 32 Bits:            01111111110000001101100100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01111111110000001101100100010001
          - S-Box Result:     11011011010111110110001110101010   [per every group of 4-bits]
          - Split Into Two:   1101101101011111 [L] 0110001110101010 [R]
          - Swap Halves:      01100011101010101101101101011111
          - Bit Inversion:    10011100010101010010010010100000
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     10010010100111100101101011110110

          - FUNCTION OUTPUT:  10010010100111100101101011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010010110010111000111110010

       - FUNCTION OUTPUT:          10010010100111100101101011110110

       - Left XOR FUNCTION OUTPUT: 10110000110001110010101100000100

       - Next Round Left 32 Bits:  01111111110000001101100100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000110001110010101100000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111110000001101100100010001

       - Right 32 Bits:            10110000110001110010101100000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       10110000110001110010101100000100
          - S-Box Result:     10001111010111011110100011110111   [per every group of 4-bits]
          - Split Into Two:   1000111101011101 [L] 1110100011110111 [R]
          - Swap Halves:      11101000111101111000111101011101
          - Bit Inversion:    00010111000010000111000010100010
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     11100101011000000110001010110001

          - FUNCTION OUTPUT:  11100101011000000110001010110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111110000001101100100010001

       - FUNCTION OUTPUT:          11100101011000000110001010110001

       - Left XOR FUNCTION OUTPUT: 10011010101000001011101110100000

       - Next Round Left 32 Bits:  10110000110001110010101100000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010101000001011101110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000110001110010101100000100

       - Right 32 Bits:            10011010101000001011101110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       10011010101000001011101110100000
          - S-Box Result:     00110100010011111000100001001111   [per every group of 4-bits]
          - Split Into Two:   0011010001001111 [L] 1000100001001111 [R]
          - Swap Halves:      10001000010011110011010001001111
          - Bit Inversion:    01110111101100001100101110110000
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     00111100110010100101010000101101

          - FUNCTION OUTPUT:  00111100110010100101010000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000110001110010101100000100

       - FUNCTION OUTPUT:          00111100110010100101010000101101

       - Left XOR FUNCTION OUTPUT: 10001100000011010111111100101001

       - Next Round Left 32 Bits:  10011010101000001011101110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100000011010111111100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010101000001011101110100000

       - Right 32 Bits:            10001100000011010111111100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       10001100000011010111111100101001
          - S-Box Result:     00100101111101101101101111100011   [per every group of 4-bits]
          - Split Into Two:   0010010111110110 [L] 1101101111100011 [R]
          - Swap Halves:      11011011111000110010010111110110
          - Bit Inversion:    00100100000111001101101000001001
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     01011100000001100001111011001001

          - FUNCTION OUTPUT:  01011100000001100001111011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010101000001011101110100000

       - FUNCTION OUTPUT:          01011100000001100001111011001001

       - Left XOR FUNCTION OUTPUT: 11000110101001101010010101101001

       - Next Round Left 32 Bits:  10001100000011010111111100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110101001101010010101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100000011010111111100101001

       - Right 32 Bits:            11000110101001101010010101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11000110101001101010010101101001
          - S-Box Result:     01010000010000000100100100000011   [per every group of 4-bits]
          - Split Into Two:   0101000001000000 [L] 0100100100000011 [R]
          - Swap Halves:      01001001000000110101000001000000
          - Bit Inversion:    10110110111111001010111110111111
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     11101100001001101100100011010100

          - FUNCTION OUTPUT:  11101100001001101100100011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100000011010111111100101001

       - FUNCTION OUTPUT:          11101100001001101100100011010100

       - Left XOR FUNCTION OUTPUT: 01100000001010111011011111111101

       - Next Round Left 32 Bits:  11000110101001101010010101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000001010111011011111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110101001101010010101101001

       - Right 32 Bits:            01100000001010111011011111111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       01100000001010111011011111111101
          - S-Box Result:     00001111111010001000110110110110   [per every group of 4-bits]
          - Split Into Two:   0000111111101000 [L] 1000110110110110 [R]
          - Swap Halves:      10001101101101100000111111101000
          - Bit Inversion:    01110010010010011111000000010111
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     00101100000001111100000101101111

          - FUNCTION OUTPUT:  00101100000001111100000101101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110101001101010010101101001

       - FUNCTION OUTPUT:          00101100000001111100000101101111

       - Left XOR FUNCTION OUTPUT: 11101010101000010110010000000110

       - Next Round Left 32 Bits:  01100000001010111011011111111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010101000010110010000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000001010111011011111111101

       - Right 32 Bits:            11101010101000010110010000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       11101010101000010110010000000110
          - S-Box Result:     11000100010010100000011111110000   [per every group of 4-bits]
          - Split Into Two:   1100010001001010 [L] 0000011111110000 [R]
          - Swap Halves:      00000111111100001100010001001010
          - Bit Inversion:    11111000000011110011101110110101
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     11101010011110011110001011101111

          - FUNCTION OUTPUT:  11101010011110011110001011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000001010111011011111111101

       - FUNCTION OUTPUT:          11101010011110011110001011101111

       - Left XOR FUNCTION OUTPUT: 10001010010100100101010100010010

       - Next Round Left 32 Bits:  11101010101000010110010000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010010100100101010100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010101000010110010000000110

       - Right 32 Bits:            10001010010100100101010100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10001010010100100101010100010010
          - S-Box Result:     00100100100111101001100110101110   [per every group of 4-bits]
          - Split Into Two:   0010010010011110 [L] 1001100110101110 [R]
          - Swap Halves:      10011001101011100010010010011110
          - Bit Inversion:    01100110010100011101101101100001
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     11111001010000101001001101111011

          - FUNCTION OUTPUT:  11111001010000101001001101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010101000010110010000000110

       - FUNCTION OUTPUT:          11111001010000101001001101111011

       - Left XOR FUNCTION OUTPUT: 00010011111000111111011101111101

       - Next Round Left 32 Bits:  10001010010100100101010100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011111000111111011101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010010100100101010100010010

       - Right 32 Bits:            00010011111000111111011101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       00010011111000111111011101111101
          - S-Box Result:     10100001110000011011110111010110   [per every group of 4-bits]
          - Split Into Two:   1010000111000001 [L] 1011110111010110 [R]
          - Swap Halves:      10111101110101101010000111000001
          - Bit Inversion:    01000010001010010101111000111110
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     10000010111100000010000011100000

          - FUNCTION OUTPUT:  10000010111100000010000011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010010100100101010100010010

       - FUNCTION OUTPUT:          10000010111100000010000011100000

       - Left XOR FUNCTION OUTPUT: 00001000101000100111010111110010

       - Next Round Left 32 Bits:  00010011111000111111011101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000101000100111010111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011111000111111011101111101

       - Right 32 Bits:            00001000101000100111010111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       00001000101000100111010111110010
          - S-Box Result:     11110010010011101101100110111110   [per every group of 4-bits]
          - Split Into Two:   1111001001001110 [L] 1101100110111110 [R]
          - Swap Halves:      11011001101111101111001001001110
          - Bit Inversion:    00100110010000010000110110110001
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     00001101000010010101101110110111

          - FUNCTION OUTPUT:  00001101000010010101101110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011111000111111011101111101

       - FUNCTION OUTPUT:          00001101000010010101101110110111

       - Left XOR FUNCTION OUTPUT: 00011110111010101010110011001010

       - Next Round Left 32 Bits:  00001000101000100111010111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110111010101010110011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000101000100111010111110010

       - Right 32 Bits:            00011110111010101010110011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       00011110111010101010110011001010
          - S-Box Result:     10101100110001000100010101010100   [per every group of 4-bits]
          - Split Into Two:   1010110011000100 [L] 0100010101010100 [R]
          - Swap Halves:      01000101010101001010110011000100
          - Bit Inversion:    10111010101010110101001100111011
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01000010110101010000000010001000

          - FUNCTION OUTPUT:  01000010110101010000000010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000101000100111010111110010

       - FUNCTION OUTPUT:          01000010110101010000000010001000

       - Left XOR FUNCTION OUTPUT: 01001010011101110111010101111010

       - Next Round Left 32 Bits:  00011110111010101010110011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010011101110111010101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110111010101010110011001010

       - Right 32 Bits:            01001010011101110111010101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       01001010011101110111010101111010
          - S-Box Result:     01110100110111011101100111010100   [per every group of 4-bits]
          - Split Into Two:   0111010011011101 [L] 1101100111010100 [R]
          - Swap Halves:      11011001110101000111010011011101
          - Bit Inversion:    00100110001010111000101100100010
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01101100011110011101001010101011

          - FUNCTION OUTPUT:  01101100011110011101001010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110111010101010110011001010

       - FUNCTION OUTPUT:          01101100011110011101001010101011

       - Left XOR FUNCTION OUTPUT: 01110010100100110111111001100001

       - Next Round Left 32 Bits:  01001010011101110111010101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010100100110111111001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010011101110111010101111010

       - Right 32 Bits:            01110010100100110111111001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       01110010100100110111111001100001
          - S-Box Result:     11011110001100011101110000001010   [per every group of 4-bits]
          - Split Into Two:   1101111000110001 [L] 1101110000001010 [R]
          - Swap Halves:      11011100000010101101111000110001
          - Bit Inversion:    00100011111101010010000111001110
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     01011001111011100011110100100110

          - FUNCTION OUTPUT:  01011001111011100011110100100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010011101110111010101111010

       - FUNCTION OUTPUT:          01011001111011100011110100100110

       - Left XOR FUNCTION OUTPUT: 00010011100110010100100001011100

       - Next Round Left 32 Bits:  01110010100100110111111001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100110010100100001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010100100110111111001100001

       - Right 32 Bits:            00010011100110010100100001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       00010011100110010100100001011100
          - S-Box Result:     10100001001100110111001010010101   [per every group of 4-bits]
          - Split Into Two:   1010000100110011 [L] 0111001010010101 [R]
          - Swap Halves:      01110010100101011010000100110011
          - Bit Inversion:    10001101011010100101111011001100
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     11010011101100101100110010100110

          - FUNCTION OUTPUT:  11010011101100101100110010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010100100110111111001100001

       - FUNCTION OUTPUT:          11010011101100101100110010100110

       - Left XOR FUNCTION OUTPUT: 10100001001000011011001011000111

       - Next Round Left 32 Bits:  00010011100110010100100001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001001000011011001011000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011100110010100100001011100

       - Right 32 Bits:            10100001001000011011001011000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       10100001001000011011001011000111
          - S-Box Result:     01001010111010101000111001011101   [per every group of 4-bits]
          - Split Into Two:   0100101011101010 [L] 1000111001011101 [R]
          - Swap Halves:      10001110010111010100101011101010
          - Bit Inversion:    01110001101000101011010100010101
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     00100111101011000111111001101011

          - FUNCTION OUTPUT:  00100111101011000111111001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011100110010100100001011100

       - FUNCTION OUTPUT:          00100111101011000111111001101011

       - Left XOR FUNCTION OUTPUT: 00110100001101010011011000110111

       - Next Round Left 32 Bits:  10100001001000011011001011000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100001101010011011000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001001000011011001011000111

       - Right 32 Bits:            00110100001101010011011000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       00110100001101010011011000110111
          - S-Box Result:     00010111000110010001000000011101   [per every group of 4-bits]
          - Split Into Two:   0001011100011001 [L] 0001000000011101 [R]
          - Swap Halves:      00010000000111010001011100011001
          - Bit Inversion:    11101111111000101110100011100110
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     11111100000100001000000011110100

          - FUNCTION OUTPUT:  11111100000100001000000011110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001001000011011001011000111

       - FUNCTION OUTPUT:          11111100000100001000000011110100

       - Left XOR FUNCTION OUTPUT: 01011101001100010011001000110011

       - Next Round Left 32 Bits:  00110100001101010011011000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101001100010011001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101110100110001001100100011001100110100001101010011011000110111

 > Processed Block:     0101110100110001001100100011001100110100001101010011011000110111


Ciphertext Block 8: 1011000101010110010001101011101111101101010011101111111011100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001010101100100011010111011

       - Right 32 Bits:            11101101010011101111111011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       11101101010011101111111011100100
          - S-Box Result:     11000110011111001011110011000111   [per every group of 4-bits]
          - Split Into Two:   1100011001111100 [L] 1011110011000111 [R]
          - Swap Halves:      10111100110001111100011001111100
          - Bit Inversion:    01000011001110000011100110000011
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     01001101111100110100011111010101

          - FUNCTION OUTPUT:  01001101111100110100011111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001010101100100011010111011

       - FUNCTION OUTPUT:          01001101111100110100011111010101

       - Left XOR FUNCTION OUTPUT: 11111100101001010000000101101110

       - Next Round Left 32 Bits:  11101101010011101111111011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100101001010000000101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101010011101111111011100100

       - Right 32 Bits:            11111100101001010000000101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       11111100101001010000000101101110
          - S-Box Result:     10110101010010011111101000001100   [per every group of 4-bits]
          - Split Into Two:   1011010101001001 [L] 1111101000001100 [R]
          - Swap Halves:      11111010000011001011010101001001
          - Bit Inversion:    00000101111100110100101010110110
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     11110111100110110101100010100101

          - FUNCTION OUTPUT:  11110111100110110101100010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101010011101111111011100100

       - FUNCTION OUTPUT:          11110111100110110101100010100101

       - Left XOR FUNCTION OUTPUT: 00011010110101011010011001000001

       - Next Round Left 32 Bits:  11111100101001010000000101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010110101011010011001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100101001010000000101101110

       - Right 32 Bits:            00011010110101011010011001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       00011010110101011010011001000001
          - S-Box Result:     10100100011010010100000001111010   [per every group of 4-bits]
          - Split Into Two:   1010010001101001 [L] 0100000001111010 [R]
          - Swap Halves:      01000000011110101010010001101001
          - Bit Inversion:    10111111100001010101101110010110
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     11110100111111111100010000001011

          - FUNCTION OUTPUT:  11110100111111111100010000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100101001010000000101101110

       - FUNCTION OUTPUT:          11110100111111111100010000001011

       - Left XOR FUNCTION OUTPUT: 00001000010110101100010101100101

       - Next Round Left 32 Bits:  00011010110101011010011001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000010110101100010101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010110101011010011001000001

       - Right 32 Bits:            00001000010110101100010101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       00001000010110101100010101100101
          - S-Box Result:     11110010100101000101100100001001   [per every group of 4-bits]
          - Split Into Two:   1111001010010100 [L] 0101100100001001 [R]
          - Swap Halves:      01011001000010011111001010010100
          - Bit Inversion:    10100110111101100000110101101011
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     11011110111011001100100110101011

          - FUNCTION OUTPUT:  11011110111011001100100110101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010110101011010011001000001

       - FUNCTION OUTPUT:          11011110111011001100100110101011

       - Left XOR FUNCTION OUTPUT: 11000100001110010110111111101010

       - Next Round Left 32 Bits:  00001000010110101100010101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100001110010110111111101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000010110101100010101100101

       - Right 32 Bits:            11000100001110010110111111101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11000100001110010110111111101010
          - S-Box Result:     01010111000100110000101111000100   [per every group of 4-bits]
          - Split Into Two:   0101011100010011 [L] 0000101111000100 [R]
          - Swap Halves:      00001011110001000101011100010011
          - Bit Inversion:    11110100001110111010100011101100
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     10101110111000011100111110000111

          - FUNCTION OUTPUT:  10101110111000011100111110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000010110101100010101100101

       - FUNCTION OUTPUT:          10101110111000011100111110000111

       - Left XOR FUNCTION OUTPUT: 10100110101110110000101011100010

       - Next Round Left 32 Bits:  11000100001110010110111111101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110101110110000101011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100001110010110111111101010

       - Right 32 Bits:            10100110101110110000101011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       10100110101110110000101011100010
          - S-Box Result:     01000000100010001111010011001110   [per every group of 4-bits]
          - Split Into Two:   0100000010001000 [L] 1111010011001110 [R]
          - Swap Halves:      11110100110011100100000010001000
          - Bit Inversion:    00001011001100011011111101110111
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     01010101011111111000111000001111

          - FUNCTION OUTPUT:  01010101011111111000111000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100001110010110111111101010

       - FUNCTION OUTPUT:          01010101011111111000111000001111

       - Left XOR FUNCTION OUTPUT: 10010001010001101110000111100101

       - Next Round Left 32 Bits:  10100110101110110000101011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001010001101110000111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110101110110000101011100010

       - Right 32 Bits:            10010001010001101110000111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       10010001010001101110000111100101
          - S-Box Result:     00111010011100001100101011001001   [per every group of 4-bits]
          - Split Into Two:   0011101001110000 [L] 1100101011001001 [R]
          - Swap Halves:      11001010110010010011101001110000
          - Bit Inversion:    00110101001101101100010110001111
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     00100111010000000001110011010101

          - FUNCTION OUTPUT:  00100111010000000001110011010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110101110110000101011100010

       - FUNCTION OUTPUT:          00100111010000000001110011010101

       - Left XOR FUNCTION OUTPUT: 10000001111110110001011000110111

       - Next Round Left 32 Bits:  10010001010001101110000111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001111110110001011000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001010001101110000111100101

       - Right 32 Bits:            10000001111110110001011000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10000001111110110001011000110111
          - S-Box Result:     00101010101110001010000000011101   [per every group of 4-bits]
          - Split Into Two:   0010101010111000 [L] 1010000000011101 [R]
          - Swap Halves:      10100000000111010010101010111000
          - Bit Inversion:    01011111111000101101010101000111
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     11000000111100011001110101011101

          - FUNCTION OUTPUT:  11000000111100011001110101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001010001101110000111100101

       - FUNCTION OUTPUT:          11000000111100011001110101011101

       - Left XOR FUNCTION OUTPUT: 01010001101101110111110010111000

       - Next Round Left 32 Bits:  10000001111110110001011000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001101101110111110010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001111110110001011000110111

       - Right 32 Bits:            01010001101101110111110010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       01010001101101110111110010111000
          - S-Box Result:     10011010100011011101010110000010   [per every group of 4-bits]
          - Split Into Two:   1001101010001101 [L] 1101010110000010 [R]
          - Swap Halves:      11010101100000101001101010001101
          - Bit Inversion:    00101010011111010110010101110010
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11101010101001000001101110101100

          - FUNCTION OUTPUT:  11101010101001000001101110101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001111110110001011000110111

       - FUNCTION OUTPUT:          11101010101001000001101110101100

       - Left XOR FUNCTION OUTPUT: 01101011010111110000110110011011

       - Next Round Left 32 Bits:  01010001101101110111110010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011010111110000110110011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001101101110111110010111000

       - Right 32 Bits:            01101011010111110000110110011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01101011010111110000110110011011
          - S-Box Result:     00001000100110111111011000111000   [per every group of 4-bits]
          - Split Into Two:   0000100010011011 [L] 1111011000111000 [R]
          - Swap Halves:      11110110001110000000100010011011
          - Bit Inversion:    00001001110001111111011101100100
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     00100010100011111010000101100010

          - FUNCTION OUTPUT:  00100010100011111010000101100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001101101110111110010111000

       - FUNCTION OUTPUT:          00100010100011111010000101100010

       - Left XOR FUNCTION OUTPUT: 01110011001110001101110111011010

       - Next Round Left 32 Bits:  01101011010111110000110110011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011001110001101110111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011010111110000110110011011

       - Right 32 Bits:            01110011001110001101110111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       01110011001110001101110111011010
          - S-Box Result:     11010001000100100110011001100100   [per every group of 4-bits]
          - Split Into Two:   1101000100010010 [L] 0110011001100100 [R]
          - Swap Halves:      01100110011001001101000100010010
          - Bit Inversion:    10011001100110110010111011101101
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     01100001111001010111110101011110

          - FUNCTION OUTPUT:  01100001111001010111110101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011010111110000110110011011

       - FUNCTION OUTPUT:          01100001111001010111110101011110

       - Left XOR FUNCTION OUTPUT: 00001010101110100111000011000101

       - Next Round Left 32 Bits:  01110011001110001101110111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010101110100111000011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011001110001101110111011010

       - Right 32 Bits:            00001010101110100111000011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       00001010101110100111000011000101
          - S-Box Result:     11110100100001001101111101011001   [per every group of 4-bits]
          - Split Into Two:   1111010010000100 [L] 1101111101011001 [R]
          - Swap Halves:      11011111010110011111010010000100
          - Bit Inversion:    00100000101001100000101101111011
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01101010111101000101001011110010

          - FUNCTION OUTPUT:  01101010111101000101001011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011001110001101110111011010

       - FUNCTION OUTPUT:          01101010111101000101001011110010

       - Left XOR FUNCTION OUTPUT: 00011001110011001000111100101000

       - Next Round Left 32 Bits:  00001010101110100111000011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001110011001000111100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010101110100111000011000101

       - Right 32 Bits:            00011001110011001000111100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       00011001110011001000111100101000
          - S-Box Result:     10100011010101010010101111100010   [per every group of 4-bits]
          - Split Into Two:   1010001101010101 [L] 0010101111100010 [R]
          - Swap Halves:      00101011111000101010001101010101
          - Bit Inversion:    11010100000111010101110010101010
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10101110000001100100000001000010

          - FUNCTION OUTPUT:  10101110000001100100000001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010101110100111000011000101

       - FUNCTION OUTPUT:          10101110000001100100000001000010

       - Left XOR FUNCTION OUTPUT: 10100100101111000011000010000111

       - Next Round Left 32 Bits:  00011001110011001000111100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100101111000011000010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001110011001000111100101000

       - Right 32 Bits:            10100100101111000011000010000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       10100100101111000011000010000111
          - S-Box Result:     01000111100001010001111100101101   [per every group of 4-bits]
          - Split Into Two:   0100011110000101 [L] 0001111100101101 [R]
          - Swap Halves:      00011111001011010100011110000101
          - Bit Inversion:    11100000110100101011100001111010
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     10111110000010100010101000010000

          - FUNCTION OUTPUT:  10111110000010100010101000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001110011001000111100101000

       - FUNCTION OUTPUT:          10111110000010100010101000010000

       - Left XOR FUNCTION OUTPUT: 10100111110001101010010100111000

       - Next Round Left 32 Bits:  10100100101111000011000010000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111110001101010010100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100101111000011000010000111

       - Right 32 Bits:            10100111110001101010010100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       10100111110001101010010100111000
          - S-Box Result:     01001101010100000100100100010010   [per every group of 4-bits]
          - Split Into Two:   0100110101010000 [L] 0100100100010010 [R]
          - Swap Halves:      01001001000100100100110101010000
          - Bit Inversion:    10110110111011011011001010101111
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     11100000111000110111100111010001

          - FUNCTION OUTPUT:  11100000111000110111100111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100101111000011000010000111

       - FUNCTION OUTPUT:          11100000111000110111100111010001

       - Left XOR FUNCTION OUTPUT: 01000100010111110100100101010110

       - Next Round Left 32 Bits:  10100111110001101010010100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100010111110100100101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111110001101010010100111000

       - Right 32 Bits:            01000100010111110100100101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       01000100010111110100100101010110
          - S-Box Result:     01110111100110110111001110010000   [per every group of 4-bits]
          - Split Into Two:   0111011110011011 [L] 0111001110010000 [R]
          - Swap Halves:      01110011100100000111011110011011
          - Bit Inversion:    10001100011011111000100001100100
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     10011111100111011110000001110110

          - FUNCTION OUTPUT:  10011111100111011110000001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111110001101010010100111000

       - FUNCTION OUTPUT:          10011111100111011110000001110110

       - Left XOR FUNCTION OUTPUT: 00111000010110110100010101001110

       - Next Round Left 32 Bits:  01000100010111110100100101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000010110110100010101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011100001011011010001010100111001000100010111110100100101010110

 > Processed Block:     0011100001011011010001010100111001000100010111110100100101010110


Ciphertext Block 9: 0110000100010011000101011100001101101000001011111000000010001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001000100110001010111000011

       - Right 32 Bits:            01101000001011111000000010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011101110110010101110011011011110100110101111001   [Subkey: 16]
          - Input Half:       01101000001011111000000010001010
          - S-Box Result:     00000010111010110010111100100100   [per every group of 4-bits]
          - Split Into Two:   0000001011101011 [L] 0010111100100100 [R]
          - Swap Halves:      00101111001001000000001011101011
          - Bit Inversion:    11010000110110111111110100010100
          - Compressed Key:   00001110110010110111111001010110   [done by compression P-Box]
          - XOR with Key:     11011110000100001000001101000010

          - FUNCTION OUTPUT:  11011110000100001000001101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001000100110001010111000011

       - FUNCTION OUTPUT:          11011110000100001000001101000010

       - Left XOR FUNCTION OUTPUT: 10111111000000111001011010000001

       - Next Round Left 32 Bits:  01101000001011111000000010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111000000111001011010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000001011111000000010001010

       - Right 32 Bits:            10111111000000111001011010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011111010001000100110101000110010010000101100101000011   [Subkey: 15]
          - Input Half:       10111111000000111001011010000001
          - S-Box Result:     10001011111100010011000000101010   [per every group of 4-bits]
          - Split Into Two:   1000101111110001 [L] 0011000000101010 [R]
          - Swap Halves:      00110000001010101000101111110001
          - Bit Inversion:    11001111110101010111010000001110
          - Compressed Key:   11110010011010000001001000010011   [done by compression P-Box]
          - XOR with Key:     00111101101111010110011000011101

          - FUNCTION OUTPUT:  00111101101111010110011000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000001011111000000010001010

       - FUNCTION OUTPUT:          00111101101111010110011000011101

       - Left XOR FUNCTION OUTPUT: 01010101100100101110011010010111

       - Next Round Left 32 Bits:  10111111000000111001011010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101100100101110011010010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111000000111001011010000001

       - Right 32 Bits:            01010101100100101110011010010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010111011101100101011100110110111101001101011110   [Subkey: 14]
          - Input Half:       01010101100100101110011010010111
          - S-Box Result:     10011001001111101100000000111101   [per every group of 4-bits]
          - Split Into Two:   1001100100111110 [L] 1100000000111101 [R]
          - Swap Halves:      11000000001111011001100100111110
          - Bit Inversion:    00111111110000100110011011000001
          - Compressed Key:   01001011011110101001111110011101   [done by compression P-Box]
          - XOR with Key:     01110100101110001111100101011100

          - FUNCTION OUTPUT:  01110100101110001111100101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111000000111001011010000001

       - FUNCTION OUTPUT:          01110100101110001111100101011100

       - Left XOR FUNCTION OUTPUT: 11001011101110110110111111011101

       - Next Round Left 32 Bits:  01010101100100101110011010010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011101110110110111111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101100100101110011010010111

       - Right 32 Bits:            11001011101110110110111111011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111110100010001001101010001100100100001011001010000   [Subkey: 13]
          - Input Half:       11001011101110110110111111011101
          - S-Box Result:     01011000100010000000101101100110   [per every group of 4-bits]
          - Split Into Two:   0101100010001000 [L] 0000101101100110 [R]
          - Swap Halves:      00001011011001100101100010001000
          - Bit Inversion:    11110100100110011010011101110111
          - Compressed Key:   01111000000110101100010011000000   [done by compression P-Box]
          - XOR with Key:     10001100100000110110001110110111

          - FUNCTION OUTPUT:  10001100100000110110001110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101100100101110011010010111

       - FUNCTION OUTPUT:          10001100100000110110001110110111

       - Left XOR FUNCTION OUTPUT: 11011001000100011000010100100000

       - Next Round Left 32 Bits:  11001011101110110110111111011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001000100011000010100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011101110110110111111011101

       - Right 32 Bits:            11011001000100011000010100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100000101110111011001010111001101101111010011010111   [Subkey: 12]
          - Input Half:       11011001000100011000010100100000
          - S-Box Result:     01100011101010100010100111101111   [per every group of 4-bits]
          - Split Into Two:   0110001110101010 [L] 0010100111101111 [R]
          - Swap Halves:      00101001111011110110001110101010
          - Bit Inversion:    11010110000100001001110001010101
          - Compressed Key:   01011010110110100110011101101011   [done by compression P-Box]
          - XOR with Key:     10001100110010101111101100111110

          - FUNCTION OUTPUT:  10001100110010101111101100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011101110110110111111011101

       - FUNCTION OUTPUT:          10001100110010101111101100111110

       - Left XOR FUNCTION OUTPUT: 01000111011100011001010011100011

       - Next Round Left 32 Bits:  11011001000100011000010100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111011100011001010011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001000100011000010100100000

       - Right 32 Bits:            01000111011100011001010011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111101000100010011010100011001001000010110010100   [Subkey: 11]
          - Input Half:       01000111011100011001010011100011
          - S-Box Result:     01111101110110100011011111000001   [per every group of 4-bits]
          - Split Into Two:   0111110111011010 [L] 0011011111000001 [R]
          - Swap Halves:      00110111110000010111110111011010
          - Bit Inversion:    11001000001111101000001000100101
          - Compressed Key:   01011110010011100011000101111000   [done by compression P-Box]
          - XOR with Key:     10010110011100001011001101011101

          - FUNCTION OUTPUT:  10010110011100001011001101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001000100011000010100100000

       - FUNCTION OUTPUT:          10010110011100001011001101011101

       - Left XOR FUNCTION OUTPUT: 01001111011000010011011001111101

       - Next Round Left 32 Bits:  01000111011100011001010011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111011000010011011001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111011100011001010011100011

       - Right 32 Bits:            01001111011000010011011001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101000001011101110110010101110011011011110100110101   [Subkey: 10]
          - Input Half:       01001111011000010011011001111101
          - S-Box Result:     01111011000010100001000011010110   [per every group of 4-bits]
          - Split Into Two:   0111101100001010 [L] 0001000011010110 [R]
          - Swap Halves:      00010000110101100111101100001010
          - Bit Inversion:    11101111001010011000010011110101
          - Compressed Key:   00010010011101101101100101011010   [done by compression P-Box]
          - XOR with Key:     11111101010111110101110110101111

          - FUNCTION OUTPUT:  11111101010111110101110110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111011100011001010011100011

       - FUNCTION OUTPUT:          11111101010111110101110110101111

       - Left XOR FUNCTION OUTPUT: 10111010001011101100100101001100

       - Next Round Left 32 Bits:  01001111011000010011011001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010001011101100100101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111011000010011011001111101

       - Right 32 Bits:            10111010001011101100100101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011111010001000100110101000110010010000101100101   [Subkey: 9]
          - Input Half:       10111010001011101100100101001100
          - S-Box Result:     10000100111011000101001101110101   [per every group of 4-bits]
          - Split Into Two:   1000010011101100 [L] 0101001101110101 [R]
          - Swap Halves:      01010011011101011000010011101100
          - Bit Inversion:    10101100100010100111101100010011
          - Compressed Key:   10011111000100110100100000011010   [done by compression P-Box]
          - XOR with Key:     00110011100110010011001100001001

          - FUNCTION OUTPUT:  00110011100110010011001100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111011000010011011001111101

       - FUNCTION OUTPUT:          00110011100110010011001100001001

       - Left XOR FUNCTION OUTPUT: 01111100111110000000010101110100

       - Next Round Left 32 Bits:  10111010001011101100100101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100111110000000010101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010001011101100100101001100

       - Right 32 Bits:            01111100111110000000010101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010111011101100101011100110110111101001101   [Subkey: 8]
          - Input Half:       01111100111110000000010101110100
          - S-Box Result:     11010101101100101111100111010111   [per every group of 4-bits]
          - Split Into Two:   1101010110110010 [L] 1111100111010111 [R]
          - Swap Halves:      11111001110101111101010110110010
          - Bit Inversion:    00000110001010000010101001001101
          - Compressed Key:   11000000110110010111111011011110   [done by compression P-Box]
          - XOR with Key:     11000110111100010101010010010011

          - FUNCTION OUTPUT:  11000110111100010101010010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010001011101100100101001100

       - FUNCTION OUTPUT:          11000110111100010101010010010011

       - Left XOR FUNCTION OUTPUT: 01111100110111111001110111011111

       - Next Round Left 32 Bits:  01111100111110000000010101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100110111111001110111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100111110000000010101110100

       - Right 32 Bits:            01111100110111111001110111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011010111110100010001001101010001100100100001011001   [Subkey: 7]
          - Input Half:       01111100110111111001110111011111
          - S-Box Result:     11010101011010110011011001101011   [per every group of 4-bits]
          - Split Into Two:   1101010101101011 [L] 0011011001101011 [R]
          - Swap Halves:      00110110011010111101010101101011
          - Bit Inversion:    11001001100101000010101010010100
          - Compressed Key:   00101011010010000101011000000110   [done by compression P-Box]
          - XOR with Key:     11100010110111000111110010010010

          - FUNCTION OUTPUT:  11100010110111000111110010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100111110000000010101110100

       - FUNCTION OUTPUT:          11100010110111000111110010010010

       - Left XOR FUNCTION OUTPUT: 10011110001001000111100111100110

       - Next Round Left 32 Bits:  01111100110111111001110111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110001001000111100111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100110111111001110111011111

       - Right 32 Bits:            10011110001001000111100111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110010100000101110111011001010111001101101111010011   [Subkey: 6]
          - Input Half:       10011110001001000111100111100110
          - S-Box Result:     00111100111001111101001111000000   [per every group of 4-bits]
          - Split Into Two:   0011110011100111 [L] 1101001111000000 [R]
          - Swap Halves:      11010011110000000011110011100111
          - Bit Inversion:    00101100001111111100001100011000
          - Compressed Key:   11111000011111100101001110110011   [done by compression P-Box]
          - XOR with Key:     11010100010000011001000010101011

          - FUNCTION OUTPUT:  11010100010000011001000010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100110111111001110111011111

       - FUNCTION OUTPUT:          11010100010000011001000010101011

       - Left XOR FUNCTION OUTPUT: 10101000100111100000110101110100

       - Next Round Left 32 Bits:  10011110001001000111100111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000100111100000110101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110001001000111100111100110

       - Right 32 Bits:            10101000100111100000110101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000110101111101000100010011010100011001001000010110   [Subkey: 5]
          - Input Half:       10101000100111100000110101110100
          - S-Box Result:     01000010001111001111011011010111   [per every group of 4-bits]
          - Split Into Two:   0100001000111100 [L] 1111011011010111 [R]
          - Swap Halves:      11110110110101110100001000111100
          - Bit Inversion:    00001001001010001011110111000011
          - Compressed Key:   01001010010100100101100110001001   [done by compression P-Box]
          - XOR with Key:     01000011011110101110010001001010

          - FUNCTION OUTPUT:  01000011011110101110010001001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110001001000111100111100110

       - FUNCTION OUTPUT:          01000011011110101110010001001010

       - Left XOR FUNCTION OUTPUT: 11011101010111101001110110101100

       - Next Round Left 32 Bits:  10101000100111100000110101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101010111101001110110101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000100111100000110101110100

       - Right 32 Bits:            11011101010111101001110110101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010111100101000001011101110110010101110011011011110100   [Subkey: 4]
          - Input Half:       11011101010111101001110110101100
          - S-Box Result:     01100110100111000011011001000101   [per every group of 4-bits]
          - Split Into Two:   0110011010011100 [L] 0011011001000101 [R]
          - Swap Halves:      00110110010001010110011010011100
          - Bit Inversion:    11001001101110101001100101100011
          - Compressed Key:   01111010000110110001110011101000   [done by compression P-Box]
          - XOR with Key:     10110011101000011000010110001011

          - FUNCTION OUTPUT:  10110011101000011000010110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000100111100000110101110100

       - FUNCTION OUTPUT:          10110011101000011000010110001011

       - Left XOR FUNCTION OUTPUT: 00011011001111111000100011111111

       - Next Round Left 32 Bits:  11011101010111101001110110101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011001111111000100011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101010111101001110110101100

       - Right 32 Bits:            00011011001111111000100011111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100001101011111010001000100110101000110010010000101   [Subkey: 3]
          - Input Half:       00011011001111111000100011111111
          - S-Box Result:     10101000000110110010001010111011   [per every group of 4-bits]
          - Split Into Two:   1010100000011011 [L] 0010001010111011 [R]
          - Swap Halves:      00100010101110111010100000011011
          - Bit Inversion:    11011101010001000101011111100100
          - Compressed Key:   01011110110110001001001001101010   [done by compression P-Box]
          - XOR with Key:     10000011100111001100010110001110

          - FUNCTION OUTPUT:  10000011100111001100010110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101010111101001110110101100

       - FUNCTION OUTPUT:          10000011100111001100010110001110

       - Left XOR FUNCTION OUTPUT: 01011110110000100101100000100010

       - Next Round Left 32 Bits:  00011011001111111000100011111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110110000100101100000100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011001111111000100011111111

       - Right 32 Bits:            01011110110000100101100000100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101111001010000010111011101100101011100110110111101   [Subkey: 2]
          - Input Half:       01011110110000100101100000100010
          - S-Box Result:     10011100010111101001001011101110   [per every group of 4-bits]
          - Split Into Two:   1001110001011110 [L] 1001001011101110 [R]
          - Swap Halves:      10010010111011101001110001011110
          - Bit Inversion:    01101101000100010110001110100001
          - Compressed Key:   01010110000011101100101101111110   [done by compression P-Box]
          - XOR with Key:     00111011000111111010100011011111

          - FUNCTION OUTPUT:  00111011000111111010100011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011001111111000100011111111

       - FUNCTION OUTPUT:          00111011000111111010100011011111

       - Left XOR FUNCTION OUTPUT: 00100000001000000010000000100000

       - Next Round Left 32 Bits:  01011110110000100101100000100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000001000000010000000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110110000100101100000100010

       - Right 32 Bits:            00100000001000000010000000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101000011010111110100010001001101010001100100100001   [Subkey: 1]
          - Input Half:       00100000001000000010000000100000
          - S-Box Result:     11101111111011111110111111101111   [per every group of 4-bits]
          - Split Into Two:   1110111111101111 [L] 1110111111101111 [R]
          - Swap Halves:      11101111111011111110111111101111
          - Bit Inversion:    00010000000100000001000000010000
          - Compressed Key:   00010011111100100110100000010010   [done by compression P-Box]
          - XOR with Key:     00000011111000100111100000000010

          - FUNCTION OUTPUT:  00000011111000100111100000000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110110000100101100000100010

       - FUNCTION OUTPUT:          00000011111000100111100000000010

       - Left XOR FUNCTION OUTPUT: 01011101001000000010000000100000

       - Next Round Left 32 Bits:  00100000001000000010000000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101001000000010000000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101110100100000001000000010000000100000001000000010000000100000

 > Processed Block:     0101110100100000001000000010000000100000001000000010000000100000




BLOCKS IN ASCII:             [START_KEY]newClientServerKey123[END_KEY][END_IV]12345678[END_IV]       

