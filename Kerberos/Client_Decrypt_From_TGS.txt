Triple DES Capture

168-bit key: 0UWh2Td1o7tzmDUtCvGDp

3 x 56-bit DES keys: 0UWh2Td, 1o7tzmD, UtCvGDp

Initialization Vector: 9v7S3b0f

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: UtCvGDp
In Binary:  01010101011101000100001101110110010001110100010001110000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 10101000101110111100100010011011100010111011100011111010
Subkey 2  : 01110100010000110111011001000111010001000111000001010101
Subkey 3  : 10111011110010001001101110001011101110001111101010101000
Subkey 4  : 01000011011101100100011101000100011100000101010101110100
Subkey 5  : 11001000100110111000101110111000111110101010100010111011
Subkey 6  : 01110110010001110100010001110000010101010111010001000011
Subkey 7  : 10011011100010111011100011111010101010001011101111001000
Subkey 8  : 01000111010001000111000001010101011101000100001101110110
Subkey 9  : 10001011101110001111101010101000101110111100100010011011
Subkey 10 : 01000100011100000101010101110100010000110111011001000111
Subkey 11 : 10111000111110101010100010111011110010001001101110001011
Subkey 12 : 01110000010101010111010001000011011101100100011101000100
Subkey 13 : 11111010101010001011101111001000100110111000101110111000
Subkey 14 : 01010101011101000100001101110110010001110100010001110000
Subkey 15 : 10101000101110111100100010011011100010111011100011111010
Subkey 16 : 01110100010000110111011001000111010001000111000001010101

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ‡7/!‹?¯/”?w=j¡JÁe?ÎhlJ«4Ùk?ŸzŸF‹ﬂÊÆÓLuªÎÀ/&©.?æ?…Â'Õf“??-Ã

Data padded with spaces : ‡7/!‹?¯/”?w=j¡JÁe?ÎhlJ«4Ùk?ŸzŸF‹ﬂÊÆÓLuªÎÀ/&©.?æ?…Â'Õf“??-Ã[Padded with '0' spaces]

Data in ASCII           : 224,55,47,33,220,143,11,248,47,211,149,119,61,106,193,74,231,101,29,139,235,104,108,74,199,52,244,107,147,13,217,122,23,29,217,70,21,31,220,223,7,7,230,14,174,238,76,117,187,235,203,23,47,38,169,46,63,190,146,201,229,39,205,102,210,14,139,27,132,45,5,204,

Data in Binary          : 11100000,00110111,00101111,00100001,11011100,10001111,00001011,11111000,00101111,11010011,10010101,01110111,00111101,01101010,11000001,01001010,11100111,01100101,00011101,10001011,11101011,01101000,01101100,01001010,11000111,00110100,11110100,01101011,10010011,00001101,11011001,01111010,00010111,00011101,11011001,01000110,00010101,00011111,11011100,11011111,00000111,00000111,11100110,00001110,10101110,11101110,01001100,01110101,10111011,11101011,11001011,00010111,00101111,00100110,10101001,00101110,00111111,10111110,10010010,11001001,11100101,00100111,11001101,01100110,11010010,00001110,10001011,00011011,10000100,00101101,00000101,11001100,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011100101110110001101110101001100110011011000100011000001100110)

Ciphertext Block 1:                                      1110000000110111001011110010000111011100100011110000101111111000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000001101110010111100100001

       - Right 32 Bits:            11011100100011110000101111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       11011100100011110000101111111000
          - S-Box Result:     01100101001010111111100010110010   [per every group of 4-bits]
          - Split Into Two:   0110010100101011 [L] 1111100010110010 [R]
          - Swap Halves:      11111000101100100110010100101011
          - Bit Inversion:    00000111010011011001101011010100
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     01010111100101011100100011011110

          - FUNCTION OUTPUT:  01010111100101011100100011011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000001101110010111100100001

       - FUNCTION OUTPUT:          01010111100101011100100011011110

       - Left XOR FUNCTION OUTPUT: 10110111101000101110011111111111

       - Next Round Left 32 Bits:  11011100100011110000101111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111101000101110011111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100100011110000101111111000

       - Right 32 Bits:            10110111101000101110011111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       10110111101000101110011111111111
          - S-Box Result:     10001101010011101100110110111011   [per every group of 4-bits]
          - Split Into Two:   1000110101001110 [L] 1100110110111011 [R]
          - Swap Halves:      11001101101110111000110101001110
          - Bit Inversion:    00110010010001000111001010110001
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10111111001000101011111110010100

          - FUNCTION OUTPUT:  10111111001000101011111110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100100011110000101111111000

       - FUNCTION OUTPUT:          10111111001000101011111110010100

       - Left XOR FUNCTION OUTPUT: 01100011101011011011010001101100

       - Next Round Left 32 Bits:  10110111101000101110011111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011101011011011010001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111101000101110011111111111

       - Right 32 Bits:            01100011101011011011010001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       01100011101011011011010001101100
          - S-Box Result:     00000001010001101000011100000101   [per every group of 4-bits]
          - Split Into Two:   0000000101000110 [L] 1000011100000101 [R]
          - Swap Halves:      10000111000001010000000101000110
          - Bit Inversion:    01111000111110101111111010111001
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     00100110101100011110000011111001

          - FUNCTION OUTPUT:  00100110101100011110000011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111101000101110011111111111

       - FUNCTION OUTPUT:          00100110101100011110000011111001

       - Left XOR FUNCTION OUTPUT: 10010001000100110000011100000110

       - Next Round Left 32 Bits:  01100011101011011011010001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001000100110000011100000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011101011011011010001101100

       - Right 32 Bits:            10010001000100110000011100000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       10010001000100110000011100000110
          - S-Box Result:     00111010101000011111110111110000   [per every group of 4-bits]
          - Split Into Two:   0011101010100001 [L] 1111110111110000 [R]
          - Swap Halves:      11111101111100000011101010100001
          - Bit Inversion:    00000010000011111100010101011110
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     11100111101100110100100011101010

          - FUNCTION OUTPUT:  11100111101100110100100011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011101011011011010001101100

       - FUNCTION OUTPUT:          11100111101100110100100011101010

       - Left XOR FUNCTION OUTPUT: 10000100000111101111110010000110

       - Next Round Left 32 Bits:  10010001000100110000011100000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100000111101111110010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001000100110000011100000110

       - Right 32 Bits:            10000100000111101111110010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10000100000111101111110010000110
          - S-Box Result:     00100111101011001011010100100000   [per every group of 4-bits]
          - Split Into Two:   0010011110101100 [L] 1011010100100000 [R]
          - Swap Halves:      10110101001000000010011110101100
          - Bit Inversion:    01001010110111111101100001010011
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     00000000000001111010111010001011

          - FUNCTION OUTPUT:  00000000000001111010111010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001000100110000011100000110

       - FUNCTION OUTPUT:          00000000000001111010111010001011

       - Left XOR FUNCTION OUTPUT: 10010001000101001010100110001101

       - Next Round Left 32 Bits:  10000100000111101111110010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001000101001010100110001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100000111101111110010000110

       - Right 32 Bits:            10010001000101001010100110001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       10010001000101001010100110001101
          - S-Box Result:     00111010101001110100001100100110   [per every group of 4-bits]
          - Split Into Two:   0011101010100111 [L] 0100001100100110 [R]
          - Swap Halves:      01000011001001100011101010100111
          - Bit Inversion:    10111100110110011100010101011000
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     01110001011111100001010011101111

          - FUNCTION OUTPUT:  01110001011111100001010011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100000111101111110010000110

       - FUNCTION OUTPUT:          01110001011111100001010011101111

       - Left XOR FUNCTION OUTPUT: 11110101011000001110100001101001

       - Next Round Left 32 Bits:  10010001000101001010100110001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101011000001110100001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001000101001010100110001101

       - Right 32 Bits:            11110101011000001110100001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       11110101011000001110100001101001
          - S-Box Result:     10111001000011111100001000000011   [per every group of 4-bits]
          - Split Into Two:   1011100100001111 [L] 1100001000000011 [R]
          - Swap Halves:      11000010000000111011100100001111
          - Bit Inversion:    00111101111111000100011011110000
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     00100001101001110101100000111011

          - FUNCTION OUTPUT:  00100001101001110101100000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001000101001010100110001101

       - FUNCTION OUTPUT:          00100001101001110101100000111011

       - Left XOR FUNCTION OUTPUT: 10110000101100111111000110110110

       - Next Round Left 32 Bits:  11110101011000001110100001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000101100111111000110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101011000001110100001101001

       - Right 32 Bits:            10110000101100111111000110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       10110000101100111111000110110110
          - S-Box Result:     10001111100000011011101010000000   [per every group of 4-bits]
          - Split Into Two:   1000111110000001 [L] 1011101010000000 [R]
          - Swap Halves:      10111010100000001000111110000001
          - Bit Inversion:    01000101011111110111000001111110
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     11101000100010101101111101011001

          - FUNCTION OUTPUT:  11101000100010101101111101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101011000001110100001101001

       - FUNCTION OUTPUT:          11101000100010101101111101011001

       - Left XOR FUNCTION OUTPUT: 00011101111010100011011100110000

       - Next Round Left 32 Bits:  10110000101100111111000110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101111010100011011100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000101100111111000110110110

       - Right 32 Bits:            00011101111010100011011100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       00011101111010100011011100110000
          - S-Box Result:     10100110110001000001110100011111   [per every group of 4-bits]
          - Split Into Two:   1010011011000100 [L] 0001110100011111 [R]
          - Swap Halves:      00011101000111111010011011000100
          - Bit Inversion:    11100010111000000101100100111011
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     11010000001110100010101110100010

          - FUNCTION OUTPUT:  11010000001110100010101110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000101100111111000110110110

       - FUNCTION OUTPUT:          11010000001110100010101110100010

       - Left XOR FUNCTION OUTPUT: 01100000100010011101101000010100

       - Next Round Left 32 Bits:  00011101111010100011011100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000100010011101101000010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101111010100011011100110000

       - Right 32 Bits:            01100000100010011101101000010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       01100000100010011101101000010100
          - S-Box Result:     00001111001000110110010010100111   [per every group of 4-bits]
          - Split Into Two:   0000111100100011 [L] 0110010010100111 [R]
          - Swap Halves:      01100100101001110000111100100011
          - Bit Inversion:    10011011010110001111000011011100
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     01111010111001110101000101101000

          - FUNCTION OUTPUT:  01111010111001110101000101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101111010100011011100110000

       - FUNCTION OUTPUT:          01111010111001110101000101101000

       - Left XOR FUNCTION OUTPUT: 01100111000011010110011001011000

       - Next Round Left 32 Bits:  01100000100010011101101000010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111000011010110011001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000100010011101101000010100

       - Right 32 Bits:            01100111000011010110011001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       01100111000011010110011001011000
          - S-Box Result:     00001101111101100000000010010010   [per every group of 4-bits]
          - Split Into Two:   0000110111110110 [L] 0000000010010010 [R]
          - Swap Halves:      00000000100100100000110111110110
          - Bit Inversion:    11111111011011011111001000001001
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     10001101001001101110100001001010

          - FUNCTION OUTPUT:  10001101001001101110100001001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000100010011101101000010100

       - FUNCTION OUTPUT:          10001101001001101110100001001010

       - Left XOR FUNCTION OUTPUT: 11101101101011110011001001011110

       - Next Round Left 32 Bits:  01100111000011010110011001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101101011110011001001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111000011010110011001011000

       - Right 32 Bits:            11101101101011110011001001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       11101101101011110011001001011110
          - S-Box Result:     11000110010010110001111010011100   [per every group of 4-bits]
          - Split Into Two:   1100011001001011 [L] 0001111010011100 [R]
          - Swap Halves:      00011110100111001100011001001011
          - Bit Inversion:    11100001011000110011100110110100
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     01101000010001001000110010010011

          - FUNCTION OUTPUT:  01101000010001001000110010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111000011010110011001011000

       - FUNCTION OUTPUT:          01101000010001001000110010010011

       - Left XOR FUNCTION OUTPUT: 00001111010010011110101011001011

       - Next Round Left 32 Bits:  11101101101011110011001001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111010010011110101011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101101011110011001001011110

       - Right 32 Bits:            00001111010010011110101011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       00001111010010011110101011001011
          - S-Box Result:     11111011011100111100010001011000   [per every group of 4-bits]
          - Split Into Two:   1111101101110011 [L] 1100010001011000 [R]
          - Swap Halves:      11000100010110001111101101110011
          - Bit Inversion:    00111011101001110000010010001100
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     00010101111011110011011011010100

          - FUNCTION OUTPUT:  00010101111011110011011011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101101011110011001001011110

       - FUNCTION OUTPUT:          00010101111011110011011011010100

       - Left XOR FUNCTION OUTPUT: 11111000010000000000010010001010

       - Next Round Left 32 Bits:  00001111010010011110101011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000010000000000010010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001111010010011110101011001011

       - Right 32 Bits:            11111000010000000000010010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       11111000010000000000010010001010
          - S-Box Result:     10110010011111111111011100100100   [per every group of 4-bits]
          - Split Into Two:   1011001001111111 [L] 1111011100100100 [R]
          - Swap Halves:      11110111001001001011001001111111
          - Bit Inversion:    00001000110110110100110110000000
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     11101001111011111010111000100100

          - FUNCTION OUTPUT:  11101001111011111010111000100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001111010010011110101011001011

       - FUNCTION OUTPUT:          11101001111011111010111000100100

       - Left XOR FUNCTION OUTPUT: 11100110101001100100010011101111

       - Next Round Left 32 Bits:  11111000010000000000010010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110101001100100010011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000010000000000010010001010

       - Right 32 Bits:            11100110101001100100010011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       11100110101001100100010011101111
          - S-Box Result:     11000000010000000111011111001011   [per every group of 4-bits]
          - Split Into Two:   1100000001000000 [L] 0111011111001011 [R]
          - Swap Halves:      01110111110010111100000001000000
          - Bit Inversion:    10001000001101000011111110111111
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11011000111011000110110110110101

          - FUNCTION OUTPUT:  11011000111011000110110110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000010000000000010010001010

       - FUNCTION OUTPUT:          11011000111011000110110110110101

       - Left XOR FUNCTION OUTPUT: 00100000101011000110100100111111

       - Next Round Left 32 Bits:  11100110101001100100010011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000101011000110100100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110101001100100010011101111

       - Right 32 Bits:            00100000101011000110100100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       00100000101011000110100100111111
          - S-Box Result:     11101111010001010000001100011011   [per every group of 4-bits]
          - Split Into Two:   1110111101000101 [L] 0000001100011011 [R]
          - Swap Halves:      00000011000110111110111101000101
          - Bit Inversion:    11111100111001000001000010111010
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     01110001100000101101110110011111

          - FUNCTION OUTPUT:  01110001100000101101110110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110101001100100010011101111

       - FUNCTION OUTPUT:          01110001100000101101110110011111

       - Left XOR FUNCTION OUTPUT: 10010111001001001001100101110000

       - Next Round Left 32 Bits:  00100000101011000110100100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111001001001001100101110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001011100100100100110010111000000100000101011000110100100111111

 > Decrypted Block:     1001011100100100100110010111000000100000101011000110100100111111


!!!CBC: Previous Ciphertext:                             0011100101110110001101110101001100110011011000100011000001100110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1010111001010010101011100010001100010011110011100101100101011001

 > Final Processed Block:                                1010111001010010101011100010001100010011110011100101100101011001



Ciphertext Block 2:                                      0010111111010011100101010111011100111101011010101100000101001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111110100111001010101110111

       - Right 32 Bits:            00111101011010101100000101001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       00111101011010101100000101001010
          - S-Box Result:     00010110000001000101101001110100   [per every group of 4-bits]
          - Split Into Two:   0001011000000100 [L] 0101101001110100 [R]
          - Swap Halves:      01011010011101000001011000000100
          - Bit Inversion:    10100101100010111110100111111011
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11110101010100111011101111110001

          - FUNCTION OUTPUT:  11110101010100111011101111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111110100111001010101110111

       - FUNCTION OUTPUT:          11110101010100111011101111110001

       - Left XOR FUNCTION OUTPUT: 11011010100000000010111010000110

       - Next Round Left 32 Bits:  00111101011010101100000101001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010100000000010111010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101011010101100000101001010

       - Right 32 Bits:            11011010100000000010111010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       11011010100000000010111010000110
          - S-Box Result:     01100100001011111110110000100000   [per every group of 4-bits]
          - Split Into Two:   0110010000101111 [L] 1110110000100000 [R]
          - Swap Halves:      11101100001000000110010000101111
          - Bit Inversion:    00010011110111111001101111010000
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10011110101110010101011011110101

          - FUNCTION OUTPUT:  10011110101110010101011011110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101011010101100000101001010

       - FUNCTION OUTPUT:          10011110101110010101011011110101

       - Left XOR FUNCTION OUTPUT: 10100011110100111001011110111111

       - Next Round Left 32 Bits:  11011010100000000010111010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011110100111001011110111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010100000000010111010000110

       - Right 32 Bits:            10100011110100111001011110111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       10100011110100111001011110111111
          - S-Box Result:     01000001011000010011110110001011   [per every group of 4-bits]
          - Split Into Two:   0100000101100001 [L] 0011110110001011 [R]
          - Swap Halves:      00111101100010110100000101100001
          - Bit Inversion:    11000010011101001011111010011110
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     10011100001111111010000011011110

          - FUNCTION OUTPUT:  10011100001111111010000011011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010100000000010111010000110

       - FUNCTION OUTPUT:          10011100001111111010000011011110

       - Left XOR FUNCTION OUTPUT: 01000110101111111000111001011000

       - Next Round Left 32 Bits:  10100011110100111001011110111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110101111111000111001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011110100111001011110111111

       - Right 32 Bits:            01000110101111111000111001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       01000110101111111000111001011000
          - S-Box Result:     01110000100010110010110010010010   [per every group of 4-bits]
          - Split Into Two:   0111000010001011 [L] 0010110010010010 [R]
          - Swap Halves:      00101100100100100111000010001011
          - Bit Inversion:    11010011011011011000111101110100
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     00110110110100010000001011000000

          - FUNCTION OUTPUT:  00110110110100010000001011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011110100111001011110111111

       - FUNCTION OUTPUT:          00110110110100010000001011000000

       - Left XOR FUNCTION OUTPUT: 10010101000000101001010101111111

       - Next Round Left 32 Bits:  01000110101111111000111001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101000000101001010101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110101111111000111001011000

       - Right 32 Bits:            10010101000000101001010101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10010101000000101001010101111111
          - S-Box Result:     00111001111111100011100111011011   [per every group of 4-bits]
          - Split Into Two:   0011100111111110 [L] 0011100111011011 [R]
          - Swap Halves:      00111001110110110011100111111110
          - Bit Inversion:    11000110001001001100011000000001
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     10001100111111001011000011011001

          - FUNCTION OUTPUT:  10001100111111001011000011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110101111111000111001011000

       - FUNCTION OUTPUT:          10001100111111001011000011011001

       - Left XOR FUNCTION OUTPUT: 11001010010000110011111010000001

       - Next Round Left 32 Bits:  10010101000000101001010101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010010000110011111010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101000000101001010101111111

       - Right 32 Bits:            11001010010000110011111010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       11001010010000110011111010000001
          - S-Box Result:     01010100011100010001110000101010   [per every group of 4-bits]
          - Split Into Two:   0101010001110001 [L] 0001110000101010 [R]
          - Swap Halves:      00011100001010100101010001110001
          - Bit Inversion:    11100011110101011010101110001110
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     00101110011100100111101000111001

          - FUNCTION OUTPUT:  00101110011100100111101000111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101000000101001010101111111

       - FUNCTION OUTPUT:          00101110011100100111101000111001

       - Left XOR FUNCTION OUTPUT: 10111011011100001110111101000110

       - Next Round Left 32 Bits:  11001010010000110011111010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011011100001110111101000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010010000110011111010000001

       - Right 32 Bits:            10111011011100001110111101000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       10111011011100001110111101000110
          - S-Box Result:     10001000110111111100101101110000   [per every group of 4-bits]
          - Split Into Two:   1000100011011111 [L] 1100101101110000 [R]
          - Swap Halves:      11001011011100001000100011011111
          - Bit Inversion:    00110100100011110111011100100000
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     00101000110101000110100111101011

          - FUNCTION OUTPUT:  00101000110101000110100111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010010000110011111010000001

       - FUNCTION OUTPUT:          00101000110101000110100111101011

       - Left XOR FUNCTION OUTPUT: 11100010100101110101011101101010

       - Next Round Left 32 Bits:  10111011011100001110111101000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010100101110101011101101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011011100001110111101000110

       - Right 32 Bits:            11100010100101110101011101101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       11100010100101110101011101101010
          - S-Box Result:     11001110001111011001110100000100   [per every group of 4-bits]
          - Split Into Two:   1100111000111101 [L] 1001110100000100 [R]
          - Swap Halves:      10011101000001001100111000111101
          - Bit Inversion:    01100010111110110011000111000010
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     11001111000011101001111011100101

          - FUNCTION OUTPUT:  11001111000011101001111011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011011100001110111101000110

       - FUNCTION OUTPUT:          11001111000011101001111011100101

       - Left XOR FUNCTION OUTPUT: 01110100011111100111000110100011

       - Next Round Left 32 Bits:  11100010100101110101011101101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100011111100111000110100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010100101110101011101101010

       - Right 32 Bits:            01110100011111100111000110100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       01110100011111100111000110100011
          - S-Box Result:     11010111110111001101101001000001   [per every group of 4-bits]
          - Split Into Two:   1101011111011100 [L] 1101101001000001 [R]
          - Swap Halves:      11011010010000011101011111011100
          - Bit Inversion:    00100101101111100010100000100011
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     00010111011001000101101010111010

          - FUNCTION OUTPUT:  00010111011001000101101010111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010100101110101011101101010

       - FUNCTION OUTPUT:          00010111011001000101101010111010

       - Left XOR FUNCTION OUTPUT: 11110101111100110000110111010000

       - Next Round Left 32 Bits:  01110100011111100111000110100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101111100110000110111010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100011111100111000110100011

       - Right 32 Bits:            11110101111100110000110111010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       11110101111100110000110111010000
          - S-Box Result:     10111001101100011111011001101111   [per every group of 4-bits]
          - Split Into Two:   1011100110110001 [L] 1111011001101111 [R]
          - Swap Halves:      11110110011011111011100110110001
          - Bit Inversion:    00001001100100000100011001001110
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     11101000001011111110011111111010

          - FUNCTION OUTPUT:  11101000001011111110011111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100011111100111000110100011

       - FUNCTION OUTPUT:          11101000001011111110011111111010

       - Left XOR FUNCTION OUTPUT: 10011100010100011001011001011001

       - Next Round Left 32 Bits:  11110101111100110000110111010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100010100011001011001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101111100110000110111010000

       - Right 32 Bits:            10011100010100011001011001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       10011100010100011001011001011001
          - S-Box Result:     00110101100110100011000010010011   [per every group of 4-bits]
          - Split Into Two:   0011010110011010 [L] 0011000010010011 [R]
          - Swap Halves:      00110000100100110011010110011010
          - Bit Inversion:    11001111011011001100101001100101
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     10111101001001111101000000100110

          - FUNCTION OUTPUT:  10111101001001111101000000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101111100110000110111010000

       - FUNCTION OUTPUT:          10111101001001111101000000100110

       - Left XOR FUNCTION OUTPUT: 01001000110101001101110111110110

       - Next Round Left 32 Bits:  10011100010100011001011001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000110101001101110111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100010100011001011001011001

       - Right 32 Bits:            01001000110101001101110111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       01001000110101001101110111110110
          - S-Box Result:     01110010011001110110011010110000   [per every group of 4-bits]
          - Split Into Two:   0111001001100111 [L] 0110011010110000 [R]
          - Swap Halves:      01100110101100000111001001100111
          - Bit Inversion:    10011001010011111000110110011000
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     00010000011010000011100010111111

          - FUNCTION OUTPUT:  00010000011010000011100010111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100010100011001011001011001

       - FUNCTION OUTPUT:          00010000011010000011100010111111

       - Left XOR FUNCTION OUTPUT: 10001100001110011010111011100110

       - Next Round Left 32 Bits:  01001000110101001101110111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100001110011010111011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000110101001101110111110110

       - Right 32 Bits:            10001100001110011010111011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       10001100001110011010111011100110
          - S-Box Result:     00100101000100110100110011000000   [per every group of 4-bits]
          - Split Into Two:   0010010100010011 [L] 0100110011000000 [R]
          - Swap Halves:      01001100110000000010010100010011
          - Bit Inversion:    10110011001111111101101011101100
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     10011101011101111110100010110100

          - FUNCTION OUTPUT:  10011101011101111110100010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000110101001101110111110110

       - FUNCTION OUTPUT:          10011101011101111110100010110100

       - Left XOR FUNCTION OUTPUT: 11010101101000110011010101000010

       - Next Round Left 32 Bits:  10001100001110011010111011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101101000110011010101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100001110011010111011100110

       - Right 32 Bits:            11010101101000110011010101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       11010101101000110011010101000010
          - S-Box Result:     01101001010000010001100101111110   [per every group of 4-bits]
          - Split Into Two:   0110100101000001 [L] 0001100101111110 [R]
          - Swap Halves:      00011001011111100110100101000001
          - Bit Inversion:    11100110100000011001011010111110
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     00000111101101010111010100011010

          - FUNCTION OUTPUT:  00000111101101010111010100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100001110011010111011100110

       - FUNCTION OUTPUT:          00000111101101010111010100011010

       - Left XOR FUNCTION OUTPUT: 10001011100011001101101111111100

       - Next Round Left 32 Bits:  11010101101000110011010101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011100011001101101111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101101000110011010101000010

       - Right 32 Bits:            10001011100011001101101111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       10001011100011001101101111111100
          - S-Box Result:     00101000001001010110100010110101   [per every group of 4-bits]
          - Split Into Two:   0010100000100101 [L] 0110100010110101 [R]
          - Swap Halves:      01101000101101010010100000100101
          - Bit Inversion:    10010111010010101101011111011010
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11000111100100101000010111010000

          - FUNCTION OUTPUT:  11000111100100101000010111010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101101000110011010101000010

       - FUNCTION OUTPUT:          11000111100100101000010111010000

       - Left XOR FUNCTION OUTPUT: 00010010001100011011000010010010

       - Next Round Left 32 Bits:  10001011100011001101101111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001100011011000010010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100011001101101111111100

       - Right 32 Bits:            00010010001100011011000010010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       00010010001100011011000010010010
          - S-Box Result:     10101110000110101000111100111110   [per every group of 4-bits]
          - Split Into Two:   1010111000011010 [L] 1000111100111110 [R]
          - Swap Halves:      10001111001111101010111000011010
          - Bit Inversion:    01110000110000010101000111100101
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     11111101101001111001110011000000

          - FUNCTION OUTPUT:  11111101101001111001110011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100011001101101111111100

       - FUNCTION OUTPUT:          11111101101001111001110011000000

       - Left XOR FUNCTION OUTPUT: 01110110001010110100011100111100

       - Next Round Left 32 Bits:  00010010001100011011000010010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110001010110100011100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111011000101011010001110011110000010010001100011011000010010010

 > Decrypted Block:     0111011000101011010001110011110000010010001100011011000010010010


!!!CBC: Previous Ciphertext:                             1110000000110111001011110010000111011100100011110000101111111000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1001011000011100011010000001110111001110101111101011101101101010

 > Final Processed Block:                                1001011000011100011010000001110111001110101111101011101101101010



Ciphertext Block 3:                                      1110011101100101000111011000101111101011011010000110110001001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111011001010001110110001011

       - Right 32 Bits:            11101011011010000110110001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       11101011011010000110110001001010
          - S-Box Result:     11001000000000100000010101110100   [per every group of 4-bits]
          - Split Into Two:   1100100000000010 [L] 0000010101110100 [R]
          - Swap Halves:      00000101011101001100100000000010
          - Bit Inversion:    11111010100010110011011111111101
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     10101010010100110110010111110111

          - FUNCTION OUTPUT:  10101010010100110110010111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111011001010001110110001011

       - FUNCTION OUTPUT:          10101010010100110110010111110111

       - Left XOR FUNCTION OUTPUT: 01001101001101100111100001111100

       - Next Round Left 32 Bits:  11101011011010000110110001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101001101100111100001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011011010000110110001001010

       - Right 32 Bits:            01001101001101100111100001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       01001101001101100111100001111100
          - S-Box Result:     01110110000100001101001011010101   [per every group of 4-bits]
          - Split Into Two:   0111011000010000 [L] 1101001011010101 [R]
          - Swap Halves:      11010010110101010111011000010000
          - Bit Inversion:    00101101001010101000100111101111
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10100000010011000100010011001010

          - FUNCTION OUTPUT:  10100000010011000100010011001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011011010000110110001001010

       - FUNCTION OUTPUT:          10100000010011000100010011001010

       - Left XOR FUNCTION OUTPUT: 01001011001001000010100010000000

       - Next Round Left 32 Bits:  01001101001101100111100001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011001001000010100010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101001101100111100001111100

       - Right 32 Bits:            01001011001001000010100010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       01001011001001000010100010000000
          - S-Box Result:     01111000111001111110001000101111   [per every group of 4-bits]
          - Split Into Two:   0111100011100111 [L] 1110001000101111 [R]
          - Swap Halves:      11100010001011110111100011100111
          - Bit Inversion:    00011101110100001000011100011000
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     01000011100110111001100101011000

          - FUNCTION OUTPUT:  01000011100110111001100101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101001101100111100001111100

       - FUNCTION OUTPUT:          01000011100110111001100101011000

       - Left XOR FUNCTION OUTPUT: 00001110101011011110000100100100

       - Next Round Left 32 Bits:  01001011001001000010100010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110101011011110000100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011001001000010100010000000

       - Right 32 Bits:            00001110101011011110000100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       00001110101011011110000100100100
          - S-Box Result:     11111100010001101100101011100111   [per every group of 4-bits]
          - Split Into Two:   1111110001000110 [L] 1100101011100111 [R]
          - Swap Halves:      11001010111001111111110001000110
          - Bit Inversion:    00110101000110000000001110111001
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     11010000101001001000111000001101

          - FUNCTION OUTPUT:  11010000101001001000111000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011001001000010100010000000

       - FUNCTION OUTPUT:          11010000101001001000111000001101

       - Left XOR FUNCTION OUTPUT: 10011011100000001010011010001101

       - Next Round Left 32 Bits:  00001110101011011110000100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011100000001010011010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110101011011110000100100100

       - Right 32 Bits:            10011011100000001010011010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10011011100000001010011010001101
          - S-Box Result:     00111000001011110100000000100110   [per every group of 4-bits]
          - Split Into Two:   0011100000101111 [L] 0100000000100110 [R]
          - Swap Halves:      01000000001001100011100000101111
          - Bit Inversion:    10111111110110011100011111010000
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     11110101000000011011000100001000

          - FUNCTION OUTPUT:  11110101000000011011000100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110101011011110000100100100

       - FUNCTION OUTPUT:          11110101000000011011000100001000

       - Left XOR FUNCTION OUTPUT: 11111011101011000101000000101100

       - Next Round Left 32 Bits:  10011011100000001010011010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011101011000101000000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011100000001010011010001101

       - Right 32 Bits:            11111011101011000101000000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       11111011101011000101000000101100
          - S-Box Result:     10111000010001011001111111100101   [per every group of 4-bits]
          - Split Into Two:   1011100001000101 [L] 1001111111100101 [R]
          - Swap Halves:      10011111111001011011100001000101
          - Bit Inversion:    01100000000110100100011110111010
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     10101101101111011001011000001101

          - FUNCTION OUTPUT:  10101101101111011001011000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011100000001010011010001101

       - FUNCTION OUTPUT:          10101101101111011001011000001101

       - Left XOR FUNCTION OUTPUT: 00110110001111010011000010000000

       - Next Round Left 32 Bits:  11111011101011000101000000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110001111010011000010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011101011000101000000101100

       - Right 32 Bits:            00110110001111010011000010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       00110110001111010011000010000000
          - S-Box Result:     00010000000101100001111100101111   [per every group of 4-bits]
          - Split Into Two:   0001000000010110 [L] 0001111100101111 [R]
          - Swap Halves:      00011111001011110001000000010110
          - Bit Inversion:    11100000110100001110111111101001
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     11111100100010111111000100100010

          - FUNCTION OUTPUT:  11111100100010111111000100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011101011000101000000101100

       - FUNCTION OUTPUT:          11111100100010111111000100100010

       - Left XOR FUNCTION OUTPUT: 00000111001001111010000100001110

       - Next Round Left 32 Bits:  00110110001111010011000010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001001111010000100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110001111010011000010000000

       - Right 32 Bits:            00000111001001111010000100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       00000111001001111010000100001110
          - S-Box Result:     11111101111011010100101011111100   [per every group of 4-bits]
          - Split Into Two:   1111110111101101 [L] 0100101011111100 [R]
          - Swap Halves:      01001010111111001111110111101101
          - Bit Inversion:    10110101000000110000001000010010
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     00011000111101101010110100110101

          - FUNCTION OUTPUT:  00011000111101101010110100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110001111010011000010000000

       - FUNCTION OUTPUT:          00011000111101101010110100110101

       - Left XOR FUNCTION OUTPUT: 00101110110010111001110110110101

       - Next Round Left 32 Bits:  00000111001001111010000100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110110010111001110110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001001111010000100001110

       - Right 32 Bits:            00101110110010111001110110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       00101110110010111001110110110101
          - S-Box Result:     11101100010110000011011010001001   [per every group of 4-bits]
          - Split Into Two:   1110110001011000 [L] 0011011010001001 [R]
          - Swap Halves:      00110110100010011110110001011000
          - Bit Inversion:    11001001011101100001001110100111
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     11111011101011000110000100111110

          - FUNCTION OUTPUT:  11111011101011000110000100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001001111010000100001110

       - FUNCTION OUTPUT:          11111011101011000110000100111110

       - Left XOR FUNCTION OUTPUT: 11111100100010111100000000110000

       - Next Round Left 32 Bits:  00101110110010111001110110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100100010111100000000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110110010111001110110110101

       - Right 32 Bits:            11111100100010111100000000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       11111100100010111100000000110000
          - S-Box Result:     10110101001010000101111100011111   [per every group of 4-bits]
          - Split Into Two:   1011010100101000 [L] 0101111100011111 [R]
          - Swap Halves:      01011111000111111011010100101000
          - Bit Inversion:    10100000111000000100101011010111
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     01000001010111111110101101100011

          - FUNCTION OUTPUT:  01000001010111111110101101100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110110010111001110110110101

       - FUNCTION OUTPUT:          01000001010111111110101101100011

       - Left XOR FUNCTION OUTPUT: 01101111100101000111011011010110

       - Next Round Left 32 Bits:  11111100100010111100000000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111100101000111011011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100100010111100000000110000

       - Right 32 Bits:            01101111100101000111011011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       01101111100101000111011011010110
          - S-Box Result:     00001011001101111101000001100000   [per every group of 4-bits]
          - Split Into Two:   0000101100110111 [L] 1101000001100000 [R]
          - Swap Halves:      11010000011000000000101100110111
          - Bit Inversion:    00101111100111111111010011001000
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     01011101110101001110111010001011

          - FUNCTION OUTPUT:  01011101110101001110111010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100100010111100000000110000

       - FUNCTION OUTPUT:          01011101110101001110111010001011

       - Left XOR FUNCTION OUTPUT: 10100001010111110010111010111011

       - Next Round Left 32 Bits:  01101111100101000111011011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001010111110010111010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111100101000111011011010110

       - Right 32 Bits:            10100001010111110010111010111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       10100001010111110010111010111011
          - S-Box Result:     01001010100110111110110010001000   [per every group of 4-bits]
          - Split Into Two:   0100101010011011 [L] 1110110010001000 [R]
          - Swap Halves:      11101100100010000100101010011011
          - Bit Inversion:    00010011011101111011010101100100
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     10011010010100000000000001000011

          - FUNCTION OUTPUT:  10011010010100000000000001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111100101000111011011010110

       - FUNCTION OUTPUT:          10011010010100000000000001000011

       - Left XOR FUNCTION OUTPUT: 11110101110001000111011010010101

       - Next Round Left 32 Bits:  10100001010111110010111010111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101110001000111011010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001010111110010111010111011

       - Right 32 Bits:            11110101110001000111011010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       11110101110001000111011010010101
          - S-Box Result:     10111001010101111101000000111001   [per every group of 4-bits]
          - Split Into Two:   1011100101010111 [L] 1101000000111001 [R]
          - Swap Halves:      11010000001110011011100101010111
          - Bit Inversion:    00101111110001100100011010101000
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     00000001100011100111010011110000

          - FUNCTION OUTPUT:  00000001100011100111010011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001010111110010111010111011

       - FUNCTION OUTPUT:          00000001100011100111010011110000

       - Left XOR FUNCTION OUTPUT: 10100000110100010101101001001011

       - Next Round Left 32 Bits:  11110101110001000111011010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000110100010101101001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101110001000111011010010101

       - Right 32 Bits:            10100000110100010101101001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       10100000110100010101101001001011
          - S-Box Result:     01001111011010101001010001111000   [per every group of 4-bits]
          - Split Into Two:   0100111101101010 [L] 1001010001111000 [R]
          - Swap Halves:      10010100011110000100111101101010
          - Bit Inversion:    01101011100001111011000010010101
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     10001010101100110101001100110001

          - FUNCTION OUTPUT:  10001010101100110101001100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101110001000111011010010101

       - FUNCTION OUTPUT:          10001010101100110101001100110001

       - Left XOR FUNCTION OUTPUT: 01111111011101110010010110100100

       - Next Round Left 32 Bits:  10100000110100010101101001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111011101110010010110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000110100010101101001001011

       - Right 32 Bits:            01111111011101110010010110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       01111111011101110010010110100100
          - S-Box Result:     11011011110111011110100101000111   [per every group of 4-bits]
          - Split Into Two:   1101101111011101 [L] 1110100101000111 [R]
          - Swap Halves:      11101001010001111101101111011101
          - Bit Inversion:    00010110101110000010010000100010
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     01000110011000000111011000101000

          - FUNCTION OUTPUT:  01000110011000000111011000101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000110100010101101001001011

       - FUNCTION OUTPUT:          01000110011000000111011000101000

       - Left XOR FUNCTION OUTPUT: 11100110101100010010110001100011

       - Next Round Left 32 Bits:  01111111011101110010010110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110101100010010110001100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111011101110010010110100100

       - Right 32 Bits:            11100110101100010010110001100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       11100110101100010010110001100011
          - S-Box Result:     11000000100010101110010100000001   [per every group of 4-bits]
          - Split Into Two:   1100000010001010 [L] 1110010100000001 [R]
          - Swap Halves:      11100101000000011100000010001010
          - Bit Inversion:    00011010111111100011111101110101
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10010111100110001111001001010000

          - FUNCTION OUTPUT:  10010111100110001111001001010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111011101110010010110100100

       - FUNCTION OUTPUT:          10010111100110001111001001010000

       - Left XOR FUNCTION OUTPUT: 11101000111011111101011111110100

       - Next Round Left 32 Bits:  11100110101100010010110001100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000111011111101011111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110100011101111110101111111010011100110101100010010110001100011

 > Decrypted Block:     1110100011101111110101111111010011100110101100010010110001100011


!!!CBC: Previous Ciphertext:                             0010111111010011100101010111011100111101011010101100000101001010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1100011100111100010000101000001111011011110110111110110100101001

 > Final Processed Block:                                1100011100111100010000101000001111011011110110111110110100101001



Ciphertext Block 4:                                      1100011100110100111101000110101110010011000011011101100101111010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111001101001111010001101011

       - Right 32 Bits:            10010011000011011101100101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       10010011000011011101100101111010
          - S-Box Result:     00110001111101100110001111010100   [per every group of 4-bits]
          - Split Into Two:   0011000111110110 [L] 0110001111010100 [R]
          - Swap Halves:      01100011110101000011000111110110
          - Bit Inversion:    10011100001010111100111000001001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11001100111100111001110000000011

          - FUNCTION OUTPUT:  11001100111100111001110000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111001101001111010001101011

       - FUNCTION OUTPUT:          11001100111100111001110000000011

       - Left XOR FUNCTION OUTPUT: 00001011110001110110100001101000

       - Next Round Left 32 Bits:  10010011000011011101100101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011110001110110100001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011000011011101100101111010

       - Right 32 Bits:            00001011110001110110100001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       00001011110001110110100001101000
          - S-Box Result:     11111000010111010000001000000010   [per every group of 4-bits]
          - Split Into Two:   1111100001011101 [L] 0000001000000010 [R]
          - Swap Halves:      00000010000000101111100001011101
          - Bit Inversion:    11111101111111010000011110100010
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     01110000100110111100101010000111

          - FUNCTION OUTPUT:  01110000100110111100101010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011000011011101100101111010

       - FUNCTION OUTPUT:          01110000100110111100101010000111

       - Left XOR FUNCTION OUTPUT: 11100011100101100001001111111101

       - Next Round Left 32 Bits:  00001011110001110110100001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011100101100001001111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011110001110110100001101000

       - Right 32 Bits:            11100011100101100001001111111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       11100011100101100001001111111101
          - S-Box Result:     11000001001100001010000110110110   [per every group of 4-bits]
          - Split Into Two:   1100000100110000 [L] 1010000110110110 [R]
          - Swap Halves:      10100001101101101100000100110000
          - Bit Inversion:    01011110010010010011111011001111
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     00000000000000100010000010001111

          - FUNCTION OUTPUT:  00000000000000100010000010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011110001110110100001101000

       - FUNCTION OUTPUT:          00000000000000100010000010001111

       - Left XOR FUNCTION OUTPUT: 00001011110001010100100011100111

       - Next Round Left 32 Bits:  11100011100101100001001111111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011110001010100100011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011100101100001001111111101

       - Right 32 Bits:            00001011110001010100100011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       00001011110001010100100011100111
          - S-Box Result:     11111000010110010111001011001101   [per every group of 4-bits]
          - Split Into Two:   1111100001011001 [L] 0111001011001101 [R]
          - Swap Halves:      01110010110011011111100001011001
          - Bit Inversion:    10001101001100100000011110100110
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     01101000100011101000101000010010

          - FUNCTION OUTPUT:  01101000100011101000101000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011100101100001001111111101

       - FUNCTION OUTPUT:          01101000100011101000101000010010

       - Left XOR FUNCTION OUTPUT: 10001011000110001001100111101111

       - Next Round Left 32 Bits:  00001011110001010100100011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011000110001001100111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011110001010100100011100111

       - Right 32 Bits:            10001011000110001001100111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10001011000110001001100111101111
          - S-Box Result:     00101000101000100011001111001011   [per every group of 4-bits]
          - Split Into Two:   0010100010100010 [L] 0011001111001011 [R]
          - Swap Halves:      00110011110010110010100010100010
          - Bit Inversion:    11001100001101001101011101011101
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     10000110111011001010000110000101

          - FUNCTION OUTPUT:  10000110111011001010000110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011110001010100100011100111

       - FUNCTION OUTPUT:          10000110111011001010000110000101

       - Left XOR FUNCTION OUTPUT: 10001101001010011110100101100010

       - Next Round Left 32 Bits:  10001011000110001001100111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101001010011110100101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011000110001001100111101111

       - Right 32 Bits:            10001101001010011110100101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       10001101001010011110100101100010
          - S-Box Result:     00100110111000111100001100001110   [per every group of 4-bits]
          - Split Into Two:   0010011011100011 [L] 1100001100001110 [R]
          - Swap Halves:      11000011000011100010011011100011
          - Bit Inversion:    00111100111100011101100100011100
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     11110001010101100000100010101011

          - FUNCTION OUTPUT:  11110001010101100000100010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011000110001001100111101111

       - FUNCTION OUTPUT:          11110001010101100000100010101011

       - Left XOR FUNCTION OUTPUT: 01111010010011101001000101000100

       - Next Round Left 32 Bits:  10001101001010011110100101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010010011101001000101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101001010011110100101100010

       - Right 32 Bits:            01111010010011101001000101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       01111010010011101001000101000100
          - S-Box Result:     11010100011111000011101001110111   [per every group of 4-bits]
          - Split Into Two:   1101010001111100 [L] 0011101001110111 [R]
          - Swap Halves:      00111010011101111101010001111100
          - Bit Inversion:    11000101100010000010101110000011
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     11011001110100110011010101001000

          - FUNCTION OUTPUT:  11011001110100110011010101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101001010011110100101100010

       - FUNCTION OUTPUT:          11011001110100110011010101001000

       - Left XOR FUNCTION OUTPUT: 01010100111110101101110000101010

       - Next Round Left 32 Bits:  01111010010011101001000101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100111110101101110000101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010010011101001000101000100

       - Right 32 Bits:            01010100111110101101110000101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       01010100111110101101110000101010
          - S-Box Result:     10010111101101000110010111100100   [per every group of 4-bits]
          - Split Into Two:   1001011110110100 [L] 0110010111100100 [R]
          - Swap Halves:      01100101111001001001011110110100
          - Bit Inversion:    10011010000110110110100001001011
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     00110111111011101100011101101100

          - FUNCTION OUTPUT:  00110111111011101100011101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010010011101001000101000100

       - FUNCTION OUTPUT:          00110111111011101100011101101100

       - Left XOR FUNCTION OUTPUT: 01001101101000000101011000101000

       - Next Round Left 32 Bits:  01010100111110101101110000101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101101000000101011000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100111110101101110000101010

       - Right 32 Bits:            01001101101000000101011000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       01001101101000000101011000101000
          - S-Box Result:     01110110010011111001000011100010   [per every group of 4-bits]
          - Split Into Two:   0111011001001111 [L] 1001000011100010 [R]
          - Swap Halves:      10010000111000100111011001001111
          - Bit Inversion:    01101111000111011000100110110000
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     01011101110001111111101100101001

          - FUNCTION OUTPUT:  01011101110001111111101100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100111110101101110000101010

       - FUNCTION OUTPUT:          01011101110001111111101100101001

       - Left XOR FUNCTION OUTPUT: 00001001001111010010011100000011

       - Next Round Left 32 Bits:  01001101101000000101011000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001001111010010011100000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101101000000101011000101000

       - Right 32 Bits:            00001001001111010010011100000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       00001001001111010010011100000011
          - S-Box Result:     11110011000101101110110111110001   [per every group of 4-bits]
          - Split Into Two:   1111001100010110 [L] 1110110111110001 [R]
          - Swap Halves:      11101101111100011111001100010110
          - Bit Inversion:    00010010000011100000110011101001
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     11110011101100011010110101011101

          - FUNCTION OUTPUT:  11110011101100011010110101011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101101000000101011000101000

       - FUNCTION OUTPUT:          11110011101100011010110101011101

       - Left XOR FUNCTION OUTPUT: 10111110000100011111101101110101

       - Next Round Left 32 Bits:  00001001001111010010011100000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110000100011111101101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001001111010010011100000011

       - Right 32 Bits:            10111110000100011111101101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       10111110000100011111101101110101
          - S-Box Result:     10001100101010101011100011011001   [per every group of 4-bits]
          - Split Into Two:   1000110010101010 [L] 1011100011011001 [R]
          - Swap Halves:      10111000110110011000110010101010
          - Bit Inversion:    01000111001001100111001101010101
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     00110101011011010110100100010110

          - FUNCTION OUTPUT:  00110101011011010110100100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001001111010010011100000011

       - FUNCTION OUTPUT:          00110101011011010110100100010110

       - Left XOR FUNCTION OUTPUT: 00111100010100000100111000010101

       - Next Round Left 32 Bits:  10111110000100011111101101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100010100000100111000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110000100011111101101110101

       - Right 32 Bits:            00111100010100000100111000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       00111100010100000100111000010101
          - S-Box Result:     00010101100111110111110010101001   [per every group of 4-bits]
          - Split Into Two:   0001010110011111 [L] 0111110010101001 [R]
          - Swap Halves:      01111100101010010001010110011111
          - Bit Inversion:    10000011010101101110101001100000
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     00001010011100010101111101000111

          - FUNCTION OUTPUT:  00001010011100010101111101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110000100011111101101110101

       - FUNCTION OUTPUT:          00001010011100010101111101000111

       - Left XOR FUNCTION OUTPUT: 10110100011000001010010000110010

       - Next Round Left 32 Bits:  00111100010100000100111000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100011000001010010000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100010100000100111000010101

       - Right 32 Bits:            10110100011000001010010000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       10110100011000001010010000110010
          - S-Box Result:     10000111000011110100011100011110   [per every group of 4-bits]
          - Split Into Two:   1000011100001111 [L] 0100011100011110 [R]
          - Swap Halves:      01000111000111101000011100001111
          - Bit Inversion:    10111000111000010111100011110000
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     10010110101010010100101010101000

          - FUNCTION OUTPUT:  10010110101010010100101010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100010100000100111000010101

       - FUNCTION OUTPUT:          10010110101010010100101010101000

       - Left XOR FUNCTION OUTPUT: 10101010111110010000010010111101

       - Next Round Left 32 Bits:  10110100011000001010010000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010111110010000010010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100011000001010010000110010

       - Right 32 Bits:            10101010111110010000010010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       10101010111110010000010010111101
          - S-Box Result:     01000100101100111111011110000110   [per every group of 4-bits]
          - Split Into Two:   0100010010110011 [L] 1111011110000110 [R]
          - Swap Halves:      11110111100001100100010010110011
          - Bit Inversion:    00001000011110011011101101001100
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     11101001010011010101100011101000

          - FUNCTION OUTPUT:  11101001010011010101100011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100011000001010010000110010

       - FUNCTION OUTPUT:          11101001010011010101100011101000

       - Left XOR FUNCTION OUTPUT: 01011101001011011111110011011010

       - Next Round Left 32 Bits:  10101010111110010000010010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101001011011111110011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010111110010000010010111101

       - Right 32 Bits:            01011101001011011111110011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       01011101001011011111110011011010
          - S-Box Result:     10010110111001101011010101100100   [per every group of 4-bits]
          - Split Into Two:   1001011011100110 [L] 1011010101100100 [R]
          - Swap Halves:      10110101011001001001011011100110
          - Bit Inversion:    01001010100110110110100100011001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     00011010010000110011101100010011

          - FUNCTION OUTPUT:  00011010010000110011101100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010111110010000010010111101

       - FUNCTION OUTPUT:          00011010010000110011101100010011

       - Left XOR FUNCTION OUTPUT: 10110000101110100011111110101110

       - Next Round Left 32 Bits:  01011101001011011111110011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000101110100011111110101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101001011011111110011011010

       - Right 32 Bits:            10110000101110100011111110101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       10110000101110100011111110101110
          - S-Box Result:     10001111100001000001101101001100   [per every group of 4-bits]
          - Split Into Two:   1000111110000100 [L] 0001101101001100 [R]
          - Swap Halves:      00011011010011001000111110000100
          - Bit Inversion:    11100100101100110111000001111011
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     01101001110101011011110101011110

          - FUNCTION OUTPUT:  01101001110101011011110101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101001011011111110011011010

       - FUNCTION OUTPUT:          01101001110101011011110101011110

       - Left XOR FUNCTION OUTPUT: 00110100111110000100000110000100

       - Next Round Left 32 Bits:  10110000101110100011111110101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100111110000100000110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011010011111000010000011000010010110000101110100011111110101110

 > Decrypted Block:     0011010011111000010000011000010010110000101110100011111110101110


!!!CBC: Previous Ciphertext:                             1110011101100101000111011000101111101011011010000110110001001010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101001110011101010111000000111101011011110100100101001111100100

 > Final Processed Block:                                1101001110011101010111000000111101011011110100100101001111100100



Ciphertext Block 5:                                      0001011100011101110110010100011000010101000111111101110011011111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111000111011101100101000110

       - Right 32 Bits:            00010101000111111101110011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       00010101000111111101110011011111
          - S-Box Result:     10101001101010110110010101101011   [per every group of 4-bits]
          - Split Into Two:   1010100110101011 [L] 0110010101101011 [R]
          - Swap Halves:      01100101011010111010100110101011
          - Bit Inversion:    10011010100101000101011001010100
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11001010010011000000010001011110

          - FUNCTION OUTPUT:  11001010010011000000010001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111000111011101100101000110

       - FUNCTION OUTPUT:          11001010010011000000010001011110

       - Left XOR FUNCTION OUTPUT: 11011101010100011101110100011000

       - Next Round Left 32 Bits:  00010101000111111101110011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101010100011101110100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101000111111101110011011111

       - Right 32 Bits:            11011101010100011101110100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       11011101010100011101110100011000
          - S-Box Result:     01100110100110100110011010100010   [per every group of 4-bits]
          - Split Into Two:   0110011010011010 [L] 0110011010100010 [R]
          - Swap Halves:      01100110101000100110011010011010
          - Bit Inversion:    10011001010111011001100101100101
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     00010100001110110101010001000000

          - FUNCTION OUTPUT:  00010100001110110101010001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101000111111101110011011111

       - FUNCTION OUTPUT:          00010100001110110101010001000000

       - Left XOR FUNCTION OUTPUT: 00000001001001001000100010011111

       - Next Round Left 32 Bits:  11011101010100011101110100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001001001001000100010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101010100011101110100011000

       - Right 32 Bits:            00000001001001001000100010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       00000001001001001000100010011111
          - S-Box Result:     11111010111001110010001000111011   [per every group of 4-bits]
          - Split Into Two:   1111101011100111 [L] 0010001000111011 [R]
          - Swap Halves:      00100010001110111111101011100111
          - Bit Inversion:    11011101110001000000010100011000
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     10000011100011110001101101011000

          - FUNCTION OUTPUT:  10000011100011110001101101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101010100011101110100011000

       - FUNCTION OUTPUT:          10000011100011110001101101011000

       - Left XOR FUNCTION OUTPUT: 01011110110111101100011001000000

       - Next Round Left 32 Bits:  00000001001001001000100010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110110111101100011001000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001001001001000100010011111

       - Right 32 Bits:            01011110110111101100011001000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       01011110110111101100011001000000
          - S-Box Result:     10011100011011000101000001111111   [per every group of 4-bits]
          - Split Into Two:   1001110001101100 [L] 0101000001111111 [R]
          - Swap Halves:      01010000011111111001110001101100
          - Bit Inversion:    10101111100000000110001110010011
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     01001010001111001110111000100111

          - FUNCTION OUTPUT:  01001010001111001110111000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001001001001000100010011111

       - FUNCTION OUTPUT:          01001010001111001110111000100111

       - Left XOR FUNCTION OUTPUT: 01001011000110000110011010111000

       - Next Round Left 32 Bits:  01011110110111101100011001000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011000110000110011010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110110111101100011001000000

       - Right 32 Bits:            01001011000110000110011010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       01001011000110000110011010111000
          - S-Box Result:     01111000101000100000000010000010   [per every group of 4-bits]
          - Split Into Two:   0111100010100010 [L] 0000000010000010 [R]
          - Swap Halves:      00000000100000100111100010100010
          - Bit Inversion:    11111111011111011000011101011101
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     10110101101001011111000110000101

          - FUNCTION OUTPUT:  10110101101001011111000110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110110111101100011001000000

       - FUNCTION OUTPUT:          10110101101001011111000110000101

       - Left XOR FUNCTION OUTPUT: 11101011011110110011011111000101

       - Next Round Left 32 Bits:  01001011000110000110011010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011011110110011011111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011000110000110011010111000

       - Right 32 Bits:            11101011011110110011011111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       11101011011110110011011111000101
          - S-Box Result:     11001000110110000001110101011001   [per every group of 4-bits]
          - Split Into Two:   1100100011011000 [L] 0001110101011001 [R]
          - Swap Halves:      00011101010110011100100011011000
          - Bit Inversion:    11100010101001100011011100100111
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     00101111000000011110011010010000

          - FUNCTION OUTPUT:  00101111000000011110011010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011000110000110011010111000

       - FUNCTION OUTPUT:          00101111000000011110011010010000

       - Left XOR FUNCTION OUTPUT: 01100100000110011000000000101000

       - Next Round Left 32 Bits:  11101011011110110011011111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100000110011000000000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011011110110011011111000101

       - Right 32 Bits:            01100100000110011000000000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       01100100000110011000000000101000
          - S-Box Result:     00000111101000110010111111100010   [per every group of 4-bits]
          - Split Into Two:   0000011110100011 [L] 0010111111100010 [R]
          - Swap Halves:      00101111111000100000011110100011
          - Bit Inversion:    11010000000111011111100001011100
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     11001100010001101110011010010111

          - FUNCTION OUTPUT:  11001100010001101110011010010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011011110110011011111000101

       - FUNCTION OUTPUT:          11001100010001101110011010010111

       - Left XOR FUNCTION OUTPUT: 00100111001111011101000101010010

       - Next Round Left 32 Bits:  01100100000110011000000000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111001111011101000101010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100000110011000000000101000

       - Right 32 Bits:            00100111001111011101000101010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       00100111001111011101000101010010
          - S-Box Result:     11101101000101100110101010011110   [per every group of 4-bits]
          - Split Into Two:   1110110100010110 [L] 0110101010011110 [R]
          - Swap Halves:      01101010100111101110110100010110
          - Bit Inversion:    10010101011000010001001011101001
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     00111000100101001011110111001110

          - FUNCTION OUTPUT:  00111000100101001011110111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100000110011000000000101000

       - FUNCTION OUTPUT:          00111000100101001011110111001110

       - Left XOR FUNCTION OUTPUT: 01011100100011010011110111100110

       - Next Round Left 32 Bits:  00100111001111011101000101010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100100011010011110111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111001111011101000101010010

       - Right 32 Bits:            01011100100011010011110111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       01011100100011010011110111100110
          - S-Box Result:     10010101001001100001011011000000   [per every group of 4-bits]
          - Split Into Two:   1001010100100110 [L] 0001011011000000 [R]
          - Swap Halves:      00010110110000001001010100100110
          - Bit Inversion:    11101001001111110110101011011001
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     11011011111001010001100001000000

          - FUNCTION OUTPUT:  11011011111001010001100001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111001111011101000101010010

       - FUNCTION OUTPUT:          11011011111001010001100001000000

       - Left XOR FUNCTION OUTPUT: 11111100110110001100100100010010

       - Next Round Left 32 Bits:  01011100100011010011110111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100110110001100100100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100100011010011110111100110

       - Right 32 Bits:            11111100110110001100100100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       11111100110110001100100100010010
          - S-Box Result:     10110101011000100101001110101110   [per every group of 4-bits]
          - Split Into Two:   1011010101100010 [L] 0101001110101110 [R]
          - Swap Halves:      01010011101011101011010101100010
          - Bit Inversion:    10101100010100010100101010011101
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     01001101111011101110101100101001

          - FUNCTION OUTPUT:  01001101111011101110101100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100100011010011110111100110

       - FUNCTION OUTPUT:          01001101111011101110101100101001

       - Left XOR FUNCTION OUTPUT: 00010001011000111101011011001111

       - Next Round Left 32 Bits:  11111100110110001100100100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001011000111101011011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100110110001100100100010010

       - Right 32 Bits:            00010001011000111101011011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       00010001011000111101011011001111
          - S-Box Result:     10101010000000010110000001011011   [per every group of 4-bits]
          - Split Into Two:   1010101000000001 [L] 0110000001011011 [R]
          - Swap Halves:      01100000010110111010101000000001
          - Bit Inversion:    10011111101001000101010111111110
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     11101101111011110100111110111101

          - FUNCTION OUTPUT:  11101101111011110100111110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100110110001100100100010010

       - FUNCTION OUTPUT:          11101101111011110100111110111101

       - Left XOR FUNCTION OUTPUT: 00010001001101111000011010101111

       - Next Round Left 32 Bits:  00010001011000111101011011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001001101111000011010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001011000111101011011001111

       - Right 32 Bits:            00010001001101111000011010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       00010001001101111000011010101111
          - S-Box Result:     10101010000111010010000001001011   [per every group of 4-bits]
          - Split Into Two:   1010101000011101 [L] 0010000001001011 [R]
          - Swap Halves:      00100000010010111010101000011101
          - Bit Inversion:    11011111101101000101010111100010
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     01010110100100111110000011000101

          - FUNCTION OUTPUT:  01010110100100111110000011000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001011000111101011011001111

       - FUNCTION OUTPUT:          01010110100100111110000011000101

       - Left XOR FUNCTION OUTPUT: 01000111111100000011011000001010

       - Next Round Left 32 Bits:  00010001001101111000011010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111111100000011011000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001001101111000011010101111

       - Right 32 Bits:            01000111111100000011011000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       01000111111100000011011000001010
          - S-Box Result:     01111101101111110001000011110100   [per every group of 4-bits]
          - Split Into Two:   0111110110111111 [L] 0001000011110100 [R]
          - Swap Halves:      00010000111101000111110110111111
          - Bit Inversion:    11101111000010111000001001000000
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     11000001010000111011000000011000

          - FUNCTION OUTPUT:  11000001010000111011000000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001001101111000011010101111

       - FUNCTION OUTPUT:          11000001010000111011000000011000

       - Left XOR FUNCTION OUTPUT: 11010000011101000011011010110111

       - Next Round Left 32 Bits:  01000111111100000011011000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000011101000011011010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111111100000011011000001010

       - Right 32 Bits:            11010000011101000011011010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       11010000011101000011011010110111
          - S-Box Result:     01101111110101110001000010001101   [per every group of 4-bits]
          - Split Into Two:   0110111111010111 [L] 0001000010001101 [R]
          - Swap Halves:      00010000100011010110111111010111
          - Bit Inversion:    11101111011100101001000000101000
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     00001110010001100111001110001100

          - FUNCTION OUTPUT:  00001110010001100111001110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111111100000011011000001010

       - FUNCTION OUTPUT:          00001110010001100111001110001100

       - Left XOR FUNCTION OUTPUT: 01001001101101100100010110000110

       - Next Round Left 32 Bits:  11010000011101000011011010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001101101100100010110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000011101000011011010110111

       - Right 32 Bits:            01001001101101100100010110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       01001001101101100100010110000110
          - S-Box Result:     01110011100000000111100100100000   [per every group of 4-bits]
          - Split Into Two:   0111001110000000 [L] 0111100100100000 [R]
          - Swap Halves:      01111001001000000111001110000000
          - Bit Inversion:    10000110110111111000110001111111
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11010110000001111101111001110101

          - FUNCTION OUTPUT:  11010110000001111101111001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000011101000011011010110111

       - FUNCTION OUTPUT:          11010110000001111101111001110101

       - Left XOR FUNCTION OUTPUT: 00000110011100111110100011000010

       - Next Round Left 32 Bits:  01001001101101100100010110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110011100111110100011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001101101100100010110000110

       - Right 32 Bits:            00000110011100111110100011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       00000110011100111110100011000010
          - S-Box Result:     11110000110100011100001001011110   [per every group of 4-bits]
          - Split Into Two:   1111000011010001 [L] 1100001001011110 [R]
          - Swap Halves:      11000010010111101111000011010001
          - Bit Inversion:    00111101101000010000111100101110
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10110000110001111100001000001011

          - FUNCTION OUTPUT:  10110000110001111100001000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001101101100100010110000110

       - FUNCTION OUTPUT:          10110000110001111100001000001011

       - Left XOR FUNCTION OUTPUT: 11111001011100011000011110001101

       - Next Round Left 32 Bits:  00000110011100111110100011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001011100011000011110001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111100101110001100001111000110100000110011100111110100011000010

 > Decrypted Block:     1111100101110001100001111000110100000110011100111110100011000010


!!!CBC: Previous Ciphertext:                             1100011100110100111101000110101110010011000011011101100101111010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011111001000101011100111110011010010101011111100011000110111000

 > Final Processed Block:                                0011111001000101011100111110011010010101011111100011000110111000



Ciphertext Block 6:                                      0000011100000111111001100000111010101110111011100100110001110101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111000001111110011000001110

       - Right 32 Bits:            10101110111011100100110001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       10101110111011100100110001110101
          - S-Box Result:     01001100110011000111010111011001   [per every group of 4-bits]
          - Split Into Two:   0100110011001100 [L] 0111010111011001 [R]
          - Swap Halves:      01110101110110010100110011001100
          - Bit Inversion:    10001010001001101011001100110011
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11011010111111101110000100111001

          - FUNCTION OUTPUT:  11011010111111101110000100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111000001111110011000001110

       - FUNCTION OUTPUT:          11011010111111101110000100111001

       - Left XOR FUNCTION OUTPUT: 11011101111110010000011100110111

       - Next Round Left 32 Bits:  10101110111011100100110001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101111110010000011100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110111011100100110001110101

       - Right 32 Bits:            11011101111110010000011100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       11011101111110010000011100110111
          - S-Box Result:     01100110101100111111110100011101   [per every group of 4-bits]
          - Split Into Two:   0110011010110011 [L] 1111110100011101 [R]
          - Swap Halves:      11111101000111010110011010110011
          - Bit Inversion:    00000010111000101001100101001100
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10001111100001000101010001101001

          - FUNCTION OUTPUT:  10001111100001000101010001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110111011100100110001110101

       - FUNCTION OUTPUT:          10001111100001000101010001101001

       - Left XOR FUNCTION OUTPUT: 00100001011010100001100000011100

       - Next Round Left 32 Bits:  11011101111110010000011100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001011010100001100000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101111110010000011100110111

       - Right 32 Bits:            00100001011010100001100000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       00100001011010100001100000011100
          - S-Box Result:     11101010000001001010001010100101   [per every group of 4-bits]
          - Split Into Two:   1110101000000100 [L] 1010001010100101 [R]
          - Swap Halves:      10100010101001011110101000000100
          - Bit Inversion:    01011101010110100001010111111011
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     00000011000100010000101110111011

          - FUNCTION OUTPUT:  00000011000100010000101110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101111110010000011100110111

       - FUNCTION OUTPUT:          00000011000100010000101110111011

       - Left XOR FUNCTION OUTPUT: 11011110111010000000110010001100

       - Next Round Left 32 Bits:  00100001011010100001100000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110111010000000110010001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001011010100001100000011100

       - Right 32 Bits:            11011110111010000000110010001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       11011110111010000000110010001100
          - S-Box Result:     01101100110000101111010100100101   [per every group of 4-bits]
          - Split Into Two:   0110110011000010 [L] 1111010100100101 [R]
          - Swap Halves:      11110101001001010110110011000010
          - Bit Inversion:    00001010110110101001001100111101
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     11101111011001100001111010001001

          - FUNCTION OUTPUT:  11101111011001100001111010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001011010100001100000011100

       - FUNCTION OUTPUT:          11101111011001100001111010001001

       - Left XOR FUNCTION OUTPUT: 11001110000011000000011010010101

       - Next Round Left 32 Bits:  11011110111010000000110010001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110000011000000011010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110111010000000110010001100

       - Right 32 Bits:            11001110000011000000011010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       11001110000011000000011010010101
          - S-Box Result:     01011100111101011111000000111001   [per every group of 4-bits]
          - Split Into Two:   0101110011110101 [L] 1111000000111001 [R]
          - Swap Halves:      11110000001110010101110011110101
          - Bit Inversion:    00001111110001101010001100001010
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     01000101000111101101010111010010

          - FUNCTION OUTPUT:  01000101000111101101010111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110111010000000110010001100

       - FUNCTION OUTPUT:          01000101000111101101010111010010

       - Left XOR FUNCTION OUTPUT: 10011011111101101101100101011110

       - Next Round Left 32 Bits:  11001110000011000000011010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011111101101101100101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110000011000000011010010101

       - Right 32 Bits:            10011011111101101101100101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       10011011111101101101100101011110
          - S-Box Result:     00111000101100000110001110011100   [per every group of 4-bits]
          - Split Into Two:   0011100010110000 [L] 0110001110011100 [R]
          - Swap Halves:      01100011100111000011100010110000
          - Bit Inversion:    10011100011000111100011101001111
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     01010001110001000001011011111000

          - FUNCTION OUTPUT:  01010001110001000001011011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110000011000000011010010101

       - FUNCTION OUTPUT:          01010001110001000001011011111000

       - Left XOR FUNCTION OUTPUT: 10011111110010000001000001101101

       - Next Round Left 32 Bits:  10011011111101101101100101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111110010000001000001101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011111101101101100101011110

       - Right 32 Bits:            10011111110010000001000001101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       10011111110010000001000001101101
          - S-Box Result:     00111011010100101010111100000110   [per every group of 4-bits]
          - Split Into Two:   0011101101010010 [L] 1010111100000110 [R]
          - Swap Halves:      10101111000001100011101101010010
          - Bit Inversion:    01010000111110011100010010101101
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     01001100101000101101101001100110

          - FUNCTION OUTPUT:  01001100101000101101101001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011111101101101100101011110

       - FUNCTION OUTPUT:          01001100101000101101101001100110

       - Left XOR FUNCTION OUTPUT: 11010111010101000000001100111000

       - Next Round Left 32 Bits:  10011111110010000001000001101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111010101000000001100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111110010000001000001101101

       - Right 32 Bits:            11010111010101000000001100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       11010111010101000000001100111000
          - S-Box Result:     01101101100101111111000100010010   [per every group of 4-bits]
          - Split Into Two:   0110110110010111 [L] 1111000100010010 [R]
          - Swap Halves:      11110001000100100110110110010111
          - Bit Inversion:    00001110111011011001001001101000
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     10100011000110000011110101001111

          - FUNCTION OUTPUT:  10100011000110000011110101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111110010000001000001101101

       - FUNCTION OUTPUT:          10100011000110000011110101001111

       - Left XOR FUNCTION OUTPUT: 00111100110100000010110100100010

       - Next Round Left 32 Bits:  11010111010101000000001100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100110100000010110100100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111010101000000001100111000

       - Right 32 Bits:            00111100110100000010110100100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       00111100110100000010110100100010
          - S-Box Result:     00010101011011111110011011101110   [per every group of 4-bits]
          - Split Into Two:   0001010101101111 [L] 1110011011101110 [R]
          - Swap Halves:      11100110111011100001010101101111
          - Bit Inversion:    00011001000100011110101010010000
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     00101011110010111001100000001001

          - FUNCTION OUTPUT:  00101011110010111001100000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111010101000000001100111000

       - FUNCTION OUTPUT:          00101011110010111001100000001001

       - Left XOR FUNCTION OUTPUT: 11111100100111111001101100110001

       - Next Round Left 32 Bits:  00111100110100000010110100100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100100111111001101100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100110100000010110100100010

       - Right 32 Bits:            11111100100111111001101100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       11111100100111111001101100110001
          - S-Box Result:     10110101001110110011100000011010   [per every group of 4-bits]
          - Split Into Two:   1011010100111011 [L] 0011100000011010 [R]
          - Swap Halves:      00111000000110101011010100111011
          - Bit Inversion:    11000111111001010100101011000100
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     00100110010110101110101101110000

          - FUNCTION OUTPUT:  00100110010110101110101101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100110100000010110100100010

       - FUNCTION OUTPUT:          00100110010110101110101101110000

       - Left XOR FUNCTION OUTPUT: 00011010100010101100011001010010

       - Next Round Left 32 Bits:  11111100100111111001101100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010100010101100011001010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100100111111001101100110001

       - Right 32 Bits:            00011010100010101100011001010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       00011010100010101100011001010010
          - S-Box Result:     10100100001001000101000010011110   [per every group of 4-bits]
          - Split Into Two:   1010010000100100 [L] 0101000010011110 [R]
          - Swap Halves:      01010000100111101010010000100100
          - Bit Inversion:    10101111011000010101101111011011
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     11011101001010100100000110011000

          - FUNCTION OUTPUT:  11011101001010100100000110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100100111111001101100110001

       - FUNCTION OUTPUT:          11011101001010100100000110011000

       - Left XOR FUNCTION OUTPUT: 00100001101101011101101010101001

       - Next Round Left 32 Bits:  00011010100010101100011001010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001101101011101101010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010100010101100011001010010

       - Right 32 Bits:            00100001101101011101101010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       00100001101101011101101010101001
          - S-Box Result:     11101010100010010110010001000011   [per every group of 4-bits]
          - Split Into Two:   1110101010001001 [L] 0110010001000011 [R]
          - Swap Halves:      01100100010000111110101010001001
          - Bit Inversion:    10011011101111000001010101110110
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     00010010100110111010000001010001

          - FUNCTION OUTPUT:  00010010100110111010000001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010100010101100011001010010

       - FUNCTION OUTPUT:          00010010100110111010000001010001

       - Left XOR FUNCTION OUTPUT: 00001000000100010110011000000011

       - Next Round Left 32 Bits:  00100001101101011101101010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000100010110011000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001101101011101101010101001

       - Right 32 Bits:            00001000000100010110011000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       00001000000100010110011000000011
          - S-Box Result:     11110010101010100000000011110001   [per every group of 4-bits]
          - Split Into Two:   1111001010101010 [L] 0000000011110001 [R]
          - Swap Halves:      00000000111100011111001010101010
          - Bit Inversion:    11111111000011100000110101010101
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     11010001010001100011111100001101

          - FUNCTION OUTPUT:  11010001010001100011111100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001101101011101101010101001

       - FUNCTION OUTPUT:          11010001010001100011111100001101

       - Left XOR FUNCTION OUTPUT: 11110000111100111110010110100100

       - Next Round Left 32 Bits:  00001000000100010110011000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000111100111110010110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000100010110011000000011

       - Right 32 Bits:            11110000111100111110010110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       11110000111100111110010110100100
          - S-Box Result:     10111111101100011100100101000111   [per every group of 4-bits]
          - Split Into Two:   1011111110110001 [L] 1100100101000111 [R]
          - Swap Halves:      11001001010001111011111110110001
          - Bit Inversion:    00110110101110000100000001001110
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     11010111100011001010001111101010

          - FUNCTION OUTPUT:  11010111100011001010001111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000100010110011000000011

       - FUNCTION OUTPUT:          11010111100011001010001111101010

       - Left XOR FUNCTION OUTPUT: 11011111100111011100010111101001

       - Next Round Left 32 Bits:  11110000111100111110010110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111100111011100010111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000111100111110010110100100

       - Right 32 Bits:            11011111100111011100010111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       11011111100111011100010111101001
          - S-Box Result:     01101011001101100101100111000011   [per every group of 4-bits]
          - Split Into Two:   0110101100110110 [L] 0101100111000011 [R]
          - Swap Halves:      01011001110000110110101100110110
          - Bit Inversion:    10100110001111001001010011001001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11110110111001001100011011000011

          - FUNCTION OUTPUT:  11110110111001001100011011000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000111100111110010110100100

       - FUNCTION OUTPUT:          11110110111001001100011011000011

       - Left XOR FUNCTION OUTPUT: 00000110000101110010001101100111

       - Next Round Left 32 Bits:  11011111100111011100010111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110000101110010001101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111100111011100010111101001

       - Right 32 Bits:            00000110000101110010001101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       00000110000101110010001101100111
          - S-Box Result:     11110000101011011110000100001101   [per every group of 4-bits]
          - Split Into Two:   1111000010101101 [L] 1110000100001101 [R]
          - Swap Halves:      11100001000011011111000010101101
          - Bit Inversion:    00011110111100100000111101010010
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10010011100101001100001001110111

          - FUNCTION OUTPUT:  10010011100101001100001001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111100111011100010111101001

       - FUNCTION OUTPUT:          10010011100101001100001001110111

       - Left XOR FUNCTION OUTPUT: 01001100000010010000011110011110

       - Next Round Left 32 Bits:  00000110000101110010001101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100000010010000011110011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100110000001001000001111001111000000110000101110010001101100111

 > Decrypted Block:     0100110000001001000001111001111000000110000101110010001101100111


!!!CBC: Previous Ciphertext:                             0001011100011101110110010100011000010101000111111101110011011111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101100010100110111101101100000010011000010001111111110111000

 > Final Processed Block:                                0101101100010100110111101101100000010011000010001111111110111000



Ciphertext Block 7:                                      1011101111101011110010110001011100101111001001101010100100101110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011111010111100101100010111

       - Right 32 Bits:            00101111001001101010100100101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       00101111001001101010100100101110
          - S-Box Result:     11101011111000000100001111101100   [per every group of 4-bits]
          - Split Into Two:   1110101111100000 [L] 0100001111101100 [R]
          - Swap Halves:      01000011111011001110101111100000
          - Bit Inversion:    10111100000100110001010000011111
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11101100110010110100011000010101

          - FUNCTION OUTPUT:  11101100110010110100011000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011111010111100101100010111

       - FUNCTION OUTPUT:          11101100110010110100011000010101

       - Left XOR FUNCTION OUTPUT: 01010111001000001000110100000010

       - Next Round Left 32 Bits:  00101111001001101010100100101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111001000001000110100000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111001001101010100100101110

       - Right 32 Bits:            01010111001000001000110100000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       01010111001000001000110100000010
          - S-Box Result:     10011101111011110010011011111110   [per every group of 4-bits]
          - Split Into Two:   1001110111101111 [L] 0010011011111110 [R]
          - Swap Halves:      00100110111111101001110111101111
          - Bit Inversion:    11011001000000010110001000010000
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     01010100011001111010111100110101

          - FUNCTION OUTPUT:  01010100011001111010111100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111001001101010100100101110

       - FUNCTION OUTPUT:          01010100011001111010111100110101

       - Left XOR FUNCTION OUTPUT: 01111011010000010000011000011011

       - Next Round Left 32 Bits:  01010111001000001000110100000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011010000010000011000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111001000001000110100000010

       - Right 32 Bits:            01111011010000010000011000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       01111011010000010000011000011011
          - S-Box Result:     11011000011110101111000010101000   [per every group of 4-bits]
          - Split Into Two:   1101100001111010 [L] 1111000010101000 [R]
          - Swap Halves:      11110000101010001101100001111010
          - Bit Inversion:    00001111010101110010011110000101
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     01010001000111000011100111000101

          - FUNCTION OUTPUT:  01010001000111000011100111000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111001000001000110100000010

       - FUNCTION OUTPUT:          01010001000111000011100111000101

       - Left XOR FUNCTION OUTPUT: 00000110001111001011010011000111

       - Next Round Left 32 Bits:  01111011010000010000011000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110001111001011010011000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011010000010000011000011011

       - Right 32 Bits:            00000110001111001011010011000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       00000110001111001011010011000111
          - S-Box Result:     11110000000101011000011101011101   [per every group of 4-bits]
          - Split Into Two:   1111000000010101 [L] 1000011101011101 [R]
          - Swap Halves:      10000111010111011111000000010101
          - Bit Inversion:    01111000101000100000111111101010
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     10011101000111101000001001011110

          - FUNCTION OUTPUT:  10011101000111101000001001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011010000010000011000011011

       - FUNCTION OUTPUT:          10011101000111101000001001011110

       - Left XOR FUNCTION OUTPUT: 11100110010111111000010001000101

       - Next Round Left 32 Bits:  00000110001111001011010011000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110010111111000010001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110001111001011010011000111

       - Right 32 Bits:            11100110010111111000010001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       11100110010111111000010001000101
          - S-Box Result:     11000000100110110010011101111001   [per every group of 4-bits]
          - Split Into Two:   1100000010011011 [L] 0010011101111001 [R]
          - Swap Halves:      00100111011110011100000010011011
          - Bit Inversion:    11011000100001100011111101100100
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     10010010010111100100100110111100

          - FUNCTION OUTPUT:  10010010010111100100100110111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110001111001011010011000111

       - FUNCTION OUTPUT:          10010010010111100100100110111100

       - Left XOR FUNCTION OUTPUT: 10010100011000101111110101111011

       - Next Round Left 32 Bits:  11100110010111111000010001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100011000101111110101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110010111111000010001000101

       - Right 32 Bits:            10010100011000101111110101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       10010100011000101111110101111011
          - S-Box Result:     00110111000011101011011011011000   [per every group of 4-bits]
          - Split Into Two:   0011011100001110 [L] 1011011011011000 [R]
          - Swap Halves:      10110110110110000011011100001110
          - Bit Inversion:    01001001001001111100100011110001
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     10000100100000000001100101000110

          - FUNCTION OUTPUT:  10000100100000000001100101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110010111111000010001000101

       - FUNCTION OUTPUT:          10000100100000000001100101000110

       - Left XOR FUNCTION OUTPUT: 01100010110111111001110100000011

       - Next Round Left 32 Bits:  10010100011000101111110101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010110111111001110100000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100011000101111110101111011

       - Right 32 Bits:            01100010110111111001110100000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       01100010110111111001110100000011
          - S-Box Result:     00001110011010110011011011110001   [per every group of 4-bits]
          - Split Into Two:   0000111001101011 [L] 0011011011110001 [R]
          - Swap Halves:      00110110111100010000111001101011
          - Bit Inversion:    11001001000011101111000110010100
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     11010101010101011110111101011111

          - FUNCTION OUTPUT:  11010101010101011110111101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100011000101111110101111011

       - FUNCTION OUTPUT:          11010101010101011110111101011111

       - Left XOR FUNCTION OUTPUT: 01000001001101110001001000100100

       - Next Round Left 32 Bits:  01100010110111111001110100000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001001101110001001000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010110111111001110100000011

       - Right 32 Bits:            01000001001101110001001000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       01000001001101110001001000100100
          - S-Box Result:     01111010000111011010111011100111   [per every group of 4-bits]
          - Split Into Two:   0111101000011101 [L] 1010111011100111 [R]
          - Swap Halves:      10101110111001110111101000011101
          - Bit Inversion:    01010001000110001000010111100010
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     11111100111011010010101011000101

          - FUNCTION OUTPUT:  11111100111011010010101011000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010110111111001110100000011

       - FUNCTION OUTPUT:          11111100111011010010101011000101

       - Left XOR FUNCTION OUTPUT: 10011110001100101011011111000110

       - Next Round Left 32 Bits:  01000001001101110001001000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110001100101011011111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001001101110001001000100100

       - Right 32 Bits:            10011110001100101011011111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       10011110001100101011011111000110
          - S-Box Result:     00111100000111101000110101010000   [per every group of 4-bits]
          - Split Into Two:   0011110000011110 [L] 1000110101010000 [R]
          - Swap Halves:      10001101010100000011110000011110
          - Bit Inversion:    01110010101011111100001111100001
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     01000000011101011011000101111000

          - FUNCTION OUTPUT:  01000000011101011011000101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001001101110001001000100100

       - FUNCTION OUTPUT:          01000000011101011011000101111000

       - Left XOR FUNCTION OUTPUT: 00000001010000101010001101011100

       - Next Round Left 32 Bits:  10011110001100101011011111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001010000101010001101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110001100101011011111000110

       - Right 32 Bits:            00000001010000101010001101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       00000001010000101010001101011100
          - S-Box Result:     11111010011111100100000110010101   [per every group of 4-bits]
          - Split Into Two:   1111101001111110 [L] 0100000110010101 [R]
          - Swap Halves:      01000001100101011111101001111110
          - Bit Inversion:    10111110011010100000010110000001
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     01011111110101011010010000110101

          - FUNCTION OUTPUT:  01011111110101011010010000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110001100101011011111000110

       - FUNCTION OUTPUT:          01011111110101011010010000110101

       - Left XOR FUNCTION OUTPUT: 11000001111001110001001111110011

       - Next Round Left 32 Bits:  00000001010000101010001101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001111001110001001111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001010000101010001101011100

       - Right 32 Bits:            11000001111001110001001111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       11000001111001110001001111110011
          - S-Box Result:     01011010110011011010000110110001   [per every group of 4-bits]
          - Split Into Two:   0101101011001101 [L] 1010000110110001 [R]
          - Swap Halves:      10100001101100010101101011001101
          - Bit Inversion:    01011110010011101010010100110010
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     00101100000001011011111101110001

          - FUNCTION OUTPUT:  00101100000001011011111101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001010000101010001101011100

       - FUNCTION OUTPUT:          00101100000001011011111101110001

       - Left XOR FUNCTION OUTPUT: 00101101010001110001110000101101

       - Next Round Left 32 Bits:  11000001111001110001001111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101010001110001110000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001111001110001001111110011

       - Right 32 Bits:            00101101010001110001110000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       00101101010001110001110000101101
          - S-Box Result:     11100110011111011010010111100110   [per every group of 4-bits]
          - Split Into Two:   1110011001111101 [L] 1010010111100110 [R]
          - Swap Halves:      10100101111001101110011001111101
          - Bit Inversion:    01011010000110010001100110000010
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     11010011001111101010110010100101

          - FUNCTION OUTPUT:  11010011001111101010110010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001111001110001001111110011

       - FUNCTION OUTPUT:          11010011001111101010110010100101

       - Left XOR FUNCTION OUTPUT: 00010010110110011011111101010110

       - Next Round Left 32 Bits:  00101101010001110001110000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010110110011011111101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101010001110001110000101101

       - Right 32 Bits:            00010010110110011011111101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       00010010110110011011111101010110
          - S-Box Result:     10101110011000111000101110010000   [per every group of 4-bits]
          - Split Into Two:   1010111001100011 [L] 1000101110010000 [R]
          - Swap Halves:      10001011100100001010111001100011
          - Bit Inversion:    01110100011011110101000110011100
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     01011010001001110110001111000100

          - FUNCTION OUTPUT:  01011010001001110110001111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101010001110001110000101101

       - FUNCTION OUTPUT:          01011010001001110110001111000100

       - Left XOR FUNCTION OUTPUT: 01110111011000000111111111101001

       - Next Round Left 32 Bits:  00010010110110011011111101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111011000000111111111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010110110011011111101010110

       - Right 32 Bits:            01110111011000000111111111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       01110111011000000111111111101001
          - S-Box Result:     11011101000011111101101111000011   [per every group of 4-bits]
          - Split Into Two:   1101110100001111 [L] 1101101111000011 [R]
          - Swap Halves:      11011011110000111101110100001111
          - Bit Inversion:    00100100001111000010001011110000
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     11000101000010001100000101010100

          - FUNCTION OUTPUT:  11000101000010001100000101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010110110011011111101010110

       - FUNCTION OUTPUT:          11000101000010001100000101010100

       - Left XOR FUNCTION OUTPUT: 11010111110100010111111000000010

       - Next Round Left 32 Bits:  01110111011000000111111111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111110100010111111000000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111011000000111111111101001

       - Right 32 Bits:            11010111110100010111111000000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       11010111110100010111111000000010
          - S-Box Result:     01101101011010101101110011111110   [per every group of 4-bits]
          - Split Into Two:   0110110101101010 [L] 1101110011111110 [R]
          - Swap Halves:      11011100111111100110110101101010
          - Bit Inversion:    00100011000000011001001010010101
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     01110011110110011100000010011111

          - FUNCTION OUTPUT:  01110011110110011100000010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111011000000111111111101001

       - FUNCTION OUTPUT:          01110011110110011100000010011111

       - Left XOR FUNCTION OUTPUT: 00000100101110011011111101110110

       - Next Round Left 32 Bits:  11010111110100010111111000000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100101110011011111101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111110100010111111000000010

       - Right 32 Bits:            00000100101110011011111101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       00000100101110011011111101110110
          - S-Box Result:     11110111100000111000101111010000   [per every group of 4-bits]
          - Split Into Two:   1111011110000011 [L] 1000101111010000 [R]
          - Swap Halves:      10001011110100001111011110000011
          - Bit Inversion:    01110100001011110000100001111100
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     11111001010010011100010101011001

          - FUNCTION OUTPUT:  11111001010010011100010101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111110100010111111000000010

       - FUNCTION OUTPUT:          11111001010010011100010101011001

       - Left XOR FUNCTION OUTPUT: 00101110100110001011101101011011

       - Next Round Left 32 Bits:  00000100101110011011111101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110100110001011101101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010111010011000101110110101101100000100101110011011111101110110

 > Decrypted Block:     0010111010011000101110110101101100000100101110011011111101110110


!!!CBC: Previous Ciphertext:                             0000011100000111111001100000111010101110111011100100110001110101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010100110011111010111010101010110101010010101111111001100000011

 > Final Processed Block:                                0010100110011111010111010101010110101010010101111111001100000011



Ciphertext Block 8:                                      0011111110111110100100101100100111100101001001111100110101100110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111101111101001001011001001

       - Right 32 Bits:            11100101001001111100110101100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       11100101001001111100110101100110
          - S-Box Result:     11001001111011010101011000000000   [per every group of 4-bits]
          - Split Into Two:   1100100111101101 [L] 0101011000000000 [R]
          - Swap Halves:      01010110000000001100100111101101
          - Bit Inversion:    10101001111111110011011000010010
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     11111001001001110110010000011000

          - FUNCTION OUTPUT:  11111001001001110110010000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111101111101001001011001001

       - FUNCTION OUTPUT:          11111001001001110110010000011000

       - Left XOR FUNCTION OUTPUT: 11000110100110011111011011010001

       - Next Round Left 32 Bits:  11100101001001111100110101100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110100110011111011011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101001001111100110101100110

       - Right 32 Bits:            11000110100110011111011011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       11000110100110011111011011010001
          - S-Box Result:     01010000001100111011000001101010   [per every group of 4-bits]
          - Split Into Two:   0101000000110011 [L] 1011000001101010 [R]
          - Swap Halves:      10110000011010100101000000110011
          - Bit Inversion:    01001111100101011010111111001100
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     11000010111100110110001011101001

          - FUNCTION OUTPUT:  11000010111100110110001011101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101001001111100110101100110

       - FUNCTION OUTPUT:          11000010111100110110001011101001

       - Left XOR FUNCTION OUTPUT: 00100111110101001010111110001111

       - Next Round Left 32 Bits:  11000110100110011111011011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111110101001010111110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110100110011111011011010001

       - Right 32 Bits:            00100111110101001010111110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       00100111110101001010111110001111
          - S-Box Result:     11101101011001110100101100101011   [per every group of 4-bits]
          - Split Into Two:   1110110101100111 [L] 0100101100101011 [R]
          - Swap Halves:      01001011001010111110110101100111
          - Bit Inversion:    10110100110101000001001010011000
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     11101010100111110000110011011000

          - FUNCTION OUTPUT:  11101010100111110000110011011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110100110011111011011010001

       - FUNCTION OUTPUT:          11101010100111110000110011011000

       - Left XOR FUNCTION OUTPUT: 00101100000001101111101000001001

       - Next Round Left 32 Bits:  00100111110101001010111110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100000001101111101000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111110101001010111110001111

       - Right 32 Bits:            00101100000001101111101000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       00101100000001101111101000001001
          - S-Box Result:     11100101111100001011010011110011   [per every group of 4-bits]
          - Split Into Two:   1110010111110000 [L] 1011010011110011 [R]
          - Swap Halves:      10110100111100111110010111110000
          - Bit Inversion:    01001011000011000001101000001111
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     10101110101100001001011110111011

          - FUNCTION OUTPUT:  10101110101100001001011110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111110101001010111110001111

       - FUNCTION OUTPUT:          10101110101100001001011110111011

       - Left XOR FUNCTION OUTPUT: 10001001011001000011100000110100

       - Next Round Left 32 Bits:  00101100000001101111101000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001011001000011100000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100000001101111101000001001

       - Right 32 Bits:            10001001011001000011100000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10001001011001000011100000110100
          - S-Box Result:     00100011000001110001001000010111   [per every group of 4-bits]
          - Split Into Two:   0010001100000111 [L] 0001001000010111 [R]
          - Swap Halves:      00010010000101110010001100000111
          - Bit Inversion:    11101101111010001101110011111000
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     10100111001100001010101000100000

          - FUNCTION OUTPUT:  10100111001100001010101000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100000001101111101000001001

       - FUNCTION OUTPUT:          10100111001100001010101000100000

       - Left XOR FUNCTION OUTPUT: 10001011001101100101000000101001

       - Next Round Left 32 Bits:  10001001011001000011100000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011001101100101000000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001011001000011100000110100

       - Right 32 Bits:            10001011001101100101000000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       10001011001101100101000000101001
          - S-Box Result:     00101000000100001001111111100011   [per every group of 4-bits]
          - Split Into Two:   0010100000010000 [L] 1001111111100011 [R]
          - Swap Halves:      10011111111000110010100000010000
          - Bit Inversion:    01100000000111001101011111101111
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     10101101101110110000011001011000

          - FUNCTION OUTPUT:  10101101101110110000011001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001011001000011100000110100

       - FUNCTION OUTPUT:          10101101101110110000011001011000

       - Left XOR FUNCTION OUTPUT: 00100100110111110011111001101100

       - Next Round Left 32 Bits:  10001011001101100101000000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100110111110011111001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011001101100101000000101001

       - Right 32 Bits:            00100100110111110011111001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       00100100110111110011111001101100
          - S-Box Result:     11100111011010110001110000000101   [per every group of 4-bits]
          - Split Into Two:   1110011101101011 [L] 0001110000000101 [R]
          - Swap Halves:      00011100000001011110011101101011
          - Bit Inversion:    11100011111110100001100010010100
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     11111111101000010000011001011111

          - FUNCTION OUTPUT:  11111111101000010000011001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011001101100101000000101001

       - FUNCTION OUTPUT:          11111111101000010000011001011111

       - Left XOR FUNCTION OUTPUT: 01110100100101110101011001110110

       - Next Round Left 32 Bits:  00100100110111110011111001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100100101110101011001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100110111110011111001101100

       - Right 32 Bits:            01110100100101110101011001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       01110100100101110101011001110110
          - S-Box Result:     11010111001111011001000011010000   [per every group of 4-bits]
          - Split Into Two:   1101011100111101 [L] 1001000011010000 [R]
          - Swap Halves:      10010000110100001101011100111101
          - Bit Inversion:    01101111001011110010100011000010
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     11000010110110101000011111100101

          - FUNCTION OUTPUT:  11000010110110101000011111100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100110111110011111001101100

       - FUNCTION OUTPUT:          11000010110110101000011111100101

       - Left XOR FUNCTION OUTPUT: 11100110000001011011100110001001

       - Next Round Left 32 Bits:  01110100100101110101011001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110000001011011100110001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100100101110101011001110110

       - Right 32 Bits:            11100110000001011011100110001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       11100110000001011011100110001001
          - S-Box Result:     11000000111110011000001100100011   [per every group of 4-bits]
          - Split Into Two:   1100000011111001 [L] 1000001100100011 [R]
          - Swap Halves:      10000011001000111100000011111001
          - Bit Inversion:    01111100110111000011111100000110
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     01001110000001100100110110011111

          - FUNCTION OUTPUT:  01001110000001100100110110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100100101110101011001110110

       - FUNCTION OUTPUT:          01001110000001100100110110011111

       - Left XOR FUNCTION OUTPUT: 00111010100100010001101111101001

       - Next Round Left 32 Bits:  11100110000001011011100110001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010100100010001101111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110000001011011100110001001

       - Right 32 Bits:            00111010100100010001101111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       00111010100100010001101111101001
          - S-Box Result:     00010100001110101010100011000011   [per every group of 4-bits]
          - Split Into Two:   0001010000111010 [L] 1010100011000011 [R]
          - Swap Halves:      10101000110000110001010000111010
          - Bit Inversion:    01010111001111001110101111000101
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     10110110100000110100101001110001

          - FUNCTION OUTPUT:  10110110100000110100101001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110000001011011100110001001

       - FUNCTION OUTPUT:          10110110100000110100101001110001

       - Left XOR FUNCTION OUTPUT: 01010000100001101111001111111000

       - Next Round Left 32 Bits:  00111010100100010001101111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000100001101111001111111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010100100010001101111101001

       - Right 32 Bits:            01010000100001101111001111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       01010000100001101111001111111000
          - S-Box Result:     10011111001000001011000110110010   [per every group of 4-bits]
          - Split Into Two:   1001111100100000 [L] 1011000110110010 [R]
          - Swap Halves:      10110001101100101001111100100000
          - Bit Inversion:    01001110010011010110000011011111
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     00111100000001100111101010011100

          - FUNCTION OUTPUT:  00111100000001100111101010011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010100100010001101111101001

       - FUNCTION OUTPUT:          00111100000001100111101010011100

       - Left XOR FUNCTION OUTPUT: 00000110100101110110000101110101

       - Next Round Left 32 Bits:  01010000100001101111001111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110100101110110000101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000100001101111001111111000

       - Right 32 Bits:            00000110100101110110000101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       00000110100101110110000101110101
          - S-Box Result:     11110000001111010000101011011001   [per every group of 4-bits]
          - Split Into Two:   1111000000111101 [L] 0000101011011001 [R]
          - Swap Halves:      00001010110110011111000000111101
          - Bit Inversion:    11110101001001100000111111000010
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     01111100000000011011101011100101

          - FUNCTION OUTPUT:  01111100000000011011101011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000100001101111001111111000

       - FUNCTION OUTPUT:          01111100000000011011101011100101

       - Left XOR FUNCTION OUTPUT: 00101100100001110100100100011101

       - Next Round Left 32 Bits:  00000110100101110110000101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100100001110100100100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110100101110110000101110101

       - Right 32 Bits:            00101100100001110100100100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       00101100100001110100100100011101
          - S-Box Result:     11100101001011010111001110100110   [per every group of 4-bits]
          - Split Into Two:   1110010100101101 [L] 0111001110100110 [R]
          - Swap Halves:      01110011101001101110010100101101
          - Bit Inversion:    10001100010110010001101011010010
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     10100010000100010010100010001010

          - FUNCTION OUTPUT:  10100010000100010010100010001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110100101110110000101110101

       - FUNCTION OUTPUT:          10100010000100010010100010001010

       - Left XOR FUNCTION OUTPUT: 10100100100001100100100111111111

       - Next Round Left 32 Bits:  00101100100001110100100100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100100001100100100111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100100001110100100100011101

       - Right 32 Bits:            10100100100001100100100111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       10100100100001100100100111111111
          - S-Box Result:     01000111001000000111001110111011   [per every group of 4-bits]
          - Split Into Two:   0100011100100000 [L] 0111001110111011 [R]
          - Swap Halves:      01110011101110110100011100100000
          - Bit Inversion:    10001100010001001011100011011111
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     01101101011100000101101101111011

          - FUNCTION OUTPUT:  01101101011100000101101101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100100001110100100100011101

       - FUNCTION OUTPUT:          01101101011100000101101101111011

       - Left XOR FUNCTION OUTPUT: 01000001111101110001001001100110

       - Next Round Left 32 Bits:  10100100100001100100100111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001111101110001001001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100100001100100100111111111

       - Right 32 Bits:            01000001111101110001001001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       01000001111101110001001001100110
          - S-Box Result:     01111010101111011010111000000000   [per every group of 4-bits]
          - Split Into Two:   0111101010111101 [L] 1010111000000000 [R]
          - Swap Halves:      10101110000000000111101010111101
          - Bit Inversion:    01010001111111111000010101000010
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     00000001001001111101011101001000

          - FUNCTION OUTPUT:  00000001001001111101011101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100100001100100100111111111

       - FUNCTION OUTPUT:          00000001001001111101011101001000

       - Left XOR FUNCTION OUTPUT: 10100101101000011001111010110111

       - Next Round Left 32 Bits:  01000001111101110001001001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101101000011001111010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001111101110001001001100110

       - Right 32 Bits:            10100101101000011001111010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       10100101101000011001111010110111
          - S-Box Result:     01001001010010100011110010001101   [per every group of 4-bits]
          - Split Into Two:   0100100101001010 [L] 0011110010001101 [R]
          - Swap Halves:      00111100100011010100100101001010
          - Bit Inversion:    11000011011100101011011010110101
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     01001110000101000111101110010000

          - FUNCTION OUTPUT:  01001110000101000111101110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001111101110001001001100110

       - FUNCTION OUTPUT:          01001110000101000111101110010000

       - Left XOR FUNCTION OUTPUT: 00001111111000110110100111110110

       - Next Round Left 32 Bits:  10100101101000011001111010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111111000110110100111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000111111100011011010011111011010100101101000011001111010110111

 > Decrypted Block:     0000111111100011011010011111011010100101101000011001111010110111


!!!CBC: Previous Ciphertext:                             1011101111101011110010110001011100101111001001101010100100101110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1011010000001000101000101110000110001010100001110011011110011001

 > Final Processed Block:                                1011010000001000101000101110000110001010100001110011011110011001



Ciphertext Block 9:                                      1101001000001110100010110001101110000100001011010000010111001100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010000011101000101100011011

       - Right 32 Bits:            10000100001011010000010111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 16]
          - Input Half:       10000100001011010000010111001100
          - S-Box Result:     00100111111001101111100101010101   [per every group of 4-bits]
          - Split Into Two:   0010011111100110 [L] 1111100101010101 [R]
          - Swap Halves:      11111001010101010010011111100110
          - Bit Inversion:    00000110101010101101100000011001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     01010110011100101000101000010011

          - FUNCTION OUTPUT:  01010110011100101000101000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010000011101000101100011011

       - FUNCTION OUTPUT:          01010110011100101000101000010011

       - Left XOR FUNCTION OUTPUT: 10000100011111000000000100001000

       - Next Round Left 32 Bits:  10000100001011010000010111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100011111000000000100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100001011010000010111001100

       - Right 32 Bits:            10000100011111000000000100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 15]
          - Input Half:       10000100011111000000000100001000
          - S-Box Result:     00100111110101011111101011110010   [per every group of 4-bits]
          - Split Into Two:   0010011111010101 [L] 1111101011110010 [R]
          - Swap Halves:      11111010111100100010011111010101
          - Bit Inversion:    00000101000011011101100000101010
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10001000011010110001010100001111

          - FUNCTION OUTPUT:  10001000011010110001010100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100001011010000010111001100

       - FUNCTION OUTPUT:          10001000011010110001010100001111

       - Left XOR FUNCTION OUTPUT: 00001100010001100001000011000011

       - Next Round Left 32 Bits:  10000100011111000000000100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100010001100001000011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100011111000000000100001000

       - Right 32 Bits:            00001100010001100001000011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101011101000100001101110110010001110100010001110000   [Subkey: 14]
          - Input Half:       00001100010001100001000011000011
          - S-Box Result:     11110101011100001010111101010001   [per every group of 4-bits]
          - Split Into Two:   1111010101110000 [L] 1010111101010001 [R]
          - Swap Halves:      10101111010100011111010101110000
          - Bit Inversion:    01010000101011100000101010001111
          - Compressed Key:   01011110010010110001111001000000   [done by compression P-Box]
          - XOR with Key:     00001110111001010001010011001111

          - FUNCTION OUTPUT:  00001110111001010001010011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100011111000000000100001000

       - FUNCTION OUTPUT:          00001110111001010001010011001111

       - Left XOR FUNCTION OUTPUT: 10001010100110010001010111000111

       - Next Round Left 32 Bits:  00001100010001100001000011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010100110010001010111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100010001100001000011000011

       - Right 32 Bits:            10001010100110010001010111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010001011101111001000100110111000101110111000   [Subkey: 13]
          - Input Half:       10001010100110010001010111000111
          - S-Box Result:     00100100001100111010100101011101   [per every group of 4-bits]
          - Split Into Two:   0010010000110011 [L] 1010100101011101 [R]
          - Swap Halves:      10101001010111010010010000110011
          - Bit Inversion:    01010110101000101101101111001100
          - Compressed Key:   11100101101111001000110110110100   [done by compression P-Box]
          - XOR with Key:     10110011000111100101011001111000

          - FUNCTION OUTPUT:  10110011000111100101011001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100010001100001000011000011

       - FUNCTION OUTPUT:          10110011000111100101011001111000

       - Left XOR FUNCTION OUTPUT: 10111111010110000100011010111011

       - Next Round Left 32 Bits:  10001010100110010001010111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111010110000100011010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010100110010001010111000111

       - Right 32 Bits:            10111111010110000100011010111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101010111010001000011011101100100011101000100   [Subkey: 12]
          - Input Half:       10111111010110000100011010111011
          - S-Box Result:     10001011100100100111000010001000   [per every group of 4-bits]
          - Split Into Two:   1000101110010010 [L] 0111000010001000 [R]
          - Swap Halves:      01110000100010001000101110010010
          - Bit Inversion:    10001111011101110111010001101101
          - Compressed Key:   01001010110110000111011011011000   [done by compression P-Box]
          - XOR with Key:     11000101101011110000001010110101

          - FUNCTION OUTPUT:  11000101101011110000001010110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010100110010001010111000111

       - FUNCTION OUTPUT:          11000101101011110000001010110101

       - Left XOR FUNCTION OUTPUT: 01001111001101100001011101110010

       - Next Round Left 32 Bits:  10111111010110000100011010111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111001101100001011101110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111010110000100011010111011

       - Right 32 Bits:            01001111001101100001011101110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000111110101010100010111011110010001001101110001011   [Subkey: 11]
          - Input Half:       01001111001101100001011101110010
          - S-Box Result:     01111011000100001010110111011110   [per every group of 4-bits]
          - Split Into Two:   0111101100010000 [L] 1010110111011110 [R]
          - Swap Halves:      10101101110111100111101100010000
          - Bit Inversion:    01010010001000011000010011101111
          - Compressed Key:   11001101101001111101000110110111   [done by compression P-Box]
          - XOR with Key:     10011111100001100101010101011000

          - FUNCTION OUTPUT:  10011111100001100101010101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111010110000100011010111011

       - FUNCTION OUTPUT:          10011111100001100101010101011000

       - Left XOR FUNCTION OUTPUT: 00100000110111100001001111100011

       - Next Round Left 32 Bits:  01001111001101100001011101110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000110111100001001111100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111001101100001011101110010

       - Right 32 Bits:            00100000110111100001001111100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100011100000101010101110100010000110111011001000111   [Subkey: 10]
          - Input Half:       00100000110111100001001111100011
          - S-Box Result:     11101111011011001010000111000001   [per every group of 4-bits]
          - Split Into Two:   1110111101101100 [L] 1010000111000001 [R]
          - Swap Halves:      10100001110000011110111101101100
          - Bit Inversion:    01011110001111100001000010010011
          - Compressed Key:   00011100010110110001111011001011   [done by compression P-Box]
          - XOR with Key:     01000010011001010000111001011000

          - FUNCTION OUTPUT:  01000010011001010000111001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111001101100001011101110010

       - FUNCTION OUTPUT:          01000010011001010000111001011000

       - Left XOR FUNCTION OUTPUT: 00001101010100110001100100101010

       - Next Round Left 32 Bits:  00100000110111100001001111100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101010100110001100100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000110111100001001111100011

       - Right 32 Bits:            00001101010100110001100100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011101110001111101010101000101110111100100010011011   [Subkey: 9]
          - Input Half:       00001101010100110001100100101010
          - S-Box Result:     11110110100100011010001111100100   [per every group of 4-bits]
          - Split Into Two:   1111011010010001 [L] 1010001111100100 [R]
          - Swap Halves:      10100011111001001111011010010001
          - Bit Inversion:    01011100000110110000100101101110
          - Compressed Key:   10101101111101011010111100100111   [done by compression P-Box]
          - XOR with Key:     11110001111011101010011001001001

          - FUNCTION OUTPUT:  11110001111011101010011001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000110111100001001111100011

       - FUNCTION OUTPUT:          11110001111011101010011001001001

       - Left XOR FUNCTION OUTPUT: 11010001001100001011010110101010

       - Next Round Left 32 Bits:  00001101010100110001100100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001001100001011010110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101010100110001100100101010

       - Right 32 Bits:            11010001001100001011010110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111010001000111000001010101011101000100001101110110   [Subkey: 8]
          - Input Half:       11010001001100001011010110101010
          - S-Box Result:     01101010000111111000100101000100   [per every group of 4-bits]
          - Split Into Two:   0110101000011111 [L] 1000100101000100 [R]
          - Swap Halves:      10001001010001000110101000011111
          - Bit Inversion:    01110110101110111001010111100000
          - Compressed Key:   00110010110110100111001010011001   [done by compression P-Box]
          - XOR with Key:     01000100011000011110011101111001

          - FUNCTION OUTPUT:  01000100011000011110011101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101010100110001100100101010

       - FUNCTION OUTPUT:          01000100011000011110011101111001

       - Left XOR FUNCTION OUTPUT: 01001001001100101111111001010011

       - Next Round Left 32 Bits:  11010001001100001011010110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001001100101111111001010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001001100001011010110101010

       - Right 32 Bits:            01001001001100101111111001010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011100010111011100011111010101010001011101111001000   [Subkey: 7]
          - Input Half:       01001001001100101111111001010011
          - S-Box Result:     01110011000111101011110010010001   [per every group of 4-bits]
          - Split Into Two:   0111001100011110 [L] 1011110010010001 [R]
          - Swap Halves:      10111100100100010111001100011110
          - Bit Inversion:    01000011011011101000110011100001
          - Compressed Key:   11100001101111111010000110110100   [done by compression P-Box]
          - XOR with Key:     10100010110100010010110101010101

          - FUNCTION OUTPUT:  10100010110100010010110101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001001100001011010110101010

       - FUNCTION OUTPUT:          10100010110100010010110101010101

       - Left XOR FUNCTION OUTPUT: 01110011111000011001100011111111

       - Next Round Left 32 Bits:  01001001001100101111111001010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011111000011001100011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001001100101111111001010011

       - Right 32 Bits:            01110011111000011001100011111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110110010001110100010001110000010101010111010001000011   [Subkey: 6]
          - Input Half:       01110011111000011001100011111111
          - S-Box Result:     11010001110010100011001010111011   [per every group of 4-bits]
          - Split Into Two:   1101000111001010 [L] 0011001010111011 [R]
          - Swap Halves:      00110010101110111101000111001010
          - Bit Inversion:    11001101010001000010111000110101
          - Compressed Key:   01110010010010110001101001000011   [done by compression P-Box]
          - XOR with Key:     10111111000011110011010001110110

          - FUNCTION OUTPUT:  10111111000011110011010001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001001100101111111001010011

       - FUNCTION OUTPUT:          10111111000011110011010001110110

       - Left XOR FUNCTION OUTPUT: 11110110001111011100101000100101

       - Next Round Left 32 Bits:  01110011111000011001100011111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110001111011100101000100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011111000011001100011111111

       - Right 32 Bits:            11110110001111011100101000100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000100110111000101110111000111110101010100010111011   [Subkey: 5]
          - Input Half:       11110110001111011100101000100101
          - S-Box Result:     10110000000101100101010011101001   [per every group of 4-bits]
          - Split Into Two:   1011000000010110 [L] 0101010011101001 [R]
          - Swap Halves:      01010100111010011011000000010110
          - Bit Inversion:    10101011000101100100111111101001
          - Compressed Key:   10001001001001111011010100100111   [done by compression P-Box]
          - XOR with Key:     00100010001100011111101011001110

          - FUNCTION OUTPUT:  00100010001100011111101011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011111000011001100011111111

       - FUNCTION OUTPUT:          00100010001100011111101011001110

       - Left XOR FUNCTION OUTPUT: 01010001110100000110001000110001

       - Next Round Left 32 Bits:  11110110001111011100101000100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001110100000110001000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110001111011100101000100101

       - Right 32 Bits:            01010001110100000110001000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000011011101100100011101000100011100000101010101110100   [Subkey: 4]
          - Input Half:       01010001110100000110001000110001
          - S-Box Result:     10011010011011110000111000011010   [per every group of 4-bits]
          - Split Into Two:   1001101001101111 [L] 0000111000011010 [R]
          - Swap Halves:      00001110000110101001101001101111
          - Bit Inversion:    11110001111001010110010110010000
          - Compressed Key:   00101110010010000011001001011000   [done by compression P-Box]
          - XOR with Key:     11011111101011010101011111001000

          - FUNCTION OUTPUT:  11011111101011010101011111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110001111011100101000100101

       - FUNCTION OUTPUT:          11011111101011010101011111001000

       - Left XOR FUNCTION OUTPUT: 00101001100100001001110111101101

       - Next Round Left 32 Bits:  01010001110100000110001000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001100100001001110111101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001110100000110001000110001

       - Right 32 Bits:            00101001100100001001110111101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111011110010001001101110001011101110001111101010101000   [Subkey: 3]
          - Input Half:       00101001100100001001110111101101
          - S-Box Result:     11100011001111110011011011000110   [per every group of 4-bits]
          - Split Into Two:   1110001100111111 [L] 0011011011000110 [R]
          - Swap Halves:      00110110110001101110001100111111
          - Bit Inversion:    11001001001110010001110011000000
          - Compressed Key:   11100001001101001110001110100100   [done by compression P-Box]
          - XOR with Key:     00101000000011011111111101100100

          - FUNCTION OUTPUT:  00101000000011011111111101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001110100000110001000110001

       - FUNCTION OUTPUT:          00101000000011011111111101100100

       - Left XOR FUNCTION OUTPUT: 01111001110111011001110101010101

       - Next Round Left 32 Bits:  00101001100100001001110111101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001110111011001110101010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001100100001001110111101101

       - Right 32 Bits:            01111001110111011001110101010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010000110111011001000111010001000111000001010101   [Subkey: 2]
          - Input Half:       01111001110111011001110101010101
          - S-Box Result:     11010011011001100011011010011001   [per every group of 4-bits]
          - Split Into Two:   1101001101100110 [L] 0011011010011001 [R]
          - Swap Halves:      00110110100110011101001101100110
          - Bit Inversion:    11001001011001100010110010011001
          - Compressed Key:   01010000110110000101001000001010   [done by compression P-Box]
          - XOR with Key:     10011001101111100111111010010011

          - FUNCTION OUTPUT:  10011001101111100111111010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001100100001001110111101101

       - FUNCTION OUTPUT:          10011001101111100111111010010011

       - Left XOR FUNCTION OUTPUT: 10110000001011101110001101111110

       - Next Round Left 32 Bits:  01111001110111011001110101010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000001011101110001101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001110111011001110101010101

       - Right 32 Bits:            10110000001011101110001101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101000101110111100100010011011100010111011100011111010   [Subkey: 1]
          - Input Half:       10110000001011101110001101111110
          - S-Box Result:     10001111111011001100000111011100   [per every group of 4-bits]
          - Split Into Two:   1000111111101100 [L] 1100000111011100 [R]
          - Swap Halves:      11000001110111001000111111101100
          - Bit Inversion:    00111110001000110111000000010011
          - Compressed Key:   10001101011001101100110100100101   [done by compression P-Box]
          - XOR with Key:     10110011010001011011110100110110

          - FUNCTION OUTPUT:  10110011010001011011110100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001110111011001110101010101

       - FUNCTION OUTPUT:          10110011010001011011110100110110

       - Left XOR FUNCTION OUTPUT: 11001010100110000010000001100011

       - Next Round Left 32 Bits:  10110000001011101110001101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010100110000010000001100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100101010011000001000000110001110110000001011101110001101111110

 > Decrypted Block:     1100101010011000001000000110001110110000001011101110001101111110


!!!CBC: Previous Ciphertext:                             0011111110111110100100101100100111100101001001111100110101100110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1111010100100110101100101010101001010101000010010010111000011000

 > Final Processed Block:                                1111010100100110101100101010101001010101000010010010111000011000




BLOCKS IN ASCII:             ÆRÆ#ŒYY?hŒæªj«<B?€€Ì)”?\[“S‰>EsÊ?~1∏[ﬁÿˇ∏)?]U™WÛ¥¢·??7?ı&≤™U	.

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 1o7tzmD
In Binary:  00110001011011110011011101110100011110100110110101000100

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 11101001000011001000100010111000010110010010101110111100
Subkey 2  : 01101111001101110111010001111010011011010100010000110001
Subkey 3  : 00001100100010001011100001011001001010111011110011101001
Subkey 4  : 00110111011101000111101001101101010001000011000101101111
Subkey 5  : 10001000101110000101100100101011101111001110100100001100
Subkey 6  : 01110100011110100110110101000100001100010110111100110111
Subkey 7  : 10111000010110010010101110111100111010010000110010001000
Subkey 8  : 01111010011011010100010000110001011011110011011101110100
Subkey 9  : 01011001001010111011110011101001000011001000100010111000
Subkey 10 : 01101101010001000011000101101111001101110111010001111010
Subkey 11 : 00101011101111001110100100001100100010001011100001011001
Subkey 12 : 01000100001100010110111100110111011101000111101001101101
Subkey 13 : 10111100111010010000110010001000101110000101100100101011
Subkey 14 : 00110001011011110011011101110100011110100110110101000100
Subkey 15 : 11101001000011001000100010111000010110010010101110111100
Subkey 16 : 01101111001101110111010001111010011011010100010000110001

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ÆRÆ#ŒYY?hŒæªj«<B?€€Ì)”?\[“S‰>EsÊ?~1∏[ﬁÿˇ∏)?]U™WÛ¥¢·??7?ı&≤™U	.

Data padded with spaces : ÆRÆ#ŒYY?hŒæªj«<B?€€Ì)”?\[“S‰>EsÊ?~1∏[ﬁÿˇ∏)?]U™WÛ¥¢·??7?ı&≤™U	.[Padded with '0' spaces]

Data in ASCII           : 174,82,174,35,19,206,89,89,150,28,104,29,206,190,187,106,199,60,66,131,219,219,237,41,211,157,92,15,91,210,83,228,62,69,115,230,149,126,49,184,91,20,222,216,19,8,255,184,41,159,93,85,170,87,243,3,180,8,162,225,138,135,55,153,245,38,178,170,85,9,46,24,

Data in Binary          : 10101110,01010010,10101110,00100011,00010011,11001110,01011001,01011001,10010110,00011100,01101000,00011101,11001110,10111110,10111011,01101010,11000111,00111100,01000010,10000011,11011011,11011011,11101101,00101001,11010011,10011101,01011100,00001111,01011011,11010010,01010011,11100100,00111110,01000101,01110011,11100110,10010101,01111110,00110001,10111000,01011011,00010100,11011110,11011000,00010011,00001000,11111111,10111000,00101001,10011111,01011101,01010101,10101010,01010111,11110011,00000011,10110100,00001000,10100010,11100001,10001010,10000111,00110111,10011001,11110101,00100110,10110010,10101010,01010101,00001001,00101110,00011000,

Data in 64-bit Blocks



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011100101110110001101110101001100110011011000100011000001100110)

Plaintext Block: 1:                                      1010111001010010101011100010001100010011110011100101100101011001

!!!CBC: Previous Ciphertext:                             0011100101110110001101110101001100110011011000100011000001100110

!!!CBC: Current Block XOR with Previous Ciphertext:      1001011100100100100110010111000000100000101011000110100100111111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111001001001001100101110000

       - Right 32 Bits:            00100000101011000110100100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       00100000101011000110100100111111
          - S-Box Result:     11101111010001010000001100011011   [per every group of 4-bits]
          - Split Into Two:   1110111101000101 [L] 0000001100011011 [R]
          - Swap Halves:      00000011000110111110111101000101
          - Bit Inversion:    11111100111001000001000010111010
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01111111110000110000100000000110

          - FUNCTION OUTPUT:  01111111110000110000100000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111001001001001100101110000

       - FUNCTION OUTPUT:          01111111110000110000100000000110

       - Left XOR FUNCTION OUTPUT: 11101000111001111001000101110110

       - Next Round Left 32 Bits:  00100000101011000110100100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000111001111001000101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000101011000110100100111111

       - Right 32 Bits:            11101000111001111001000101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       11101000111001111001000101110110
          - S-Box Result:     11000010110011010011101011010000   [per every group of 4-bits]
          - Split Into Two:   1100001011001101 [L] 0011101011010000 [R]
          - Swap Halves:      00111010110100001100001011001101
          - Bit Inversion:    11000101001011110011110100110010
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     01111011111101000000011101110000

          - FUNCTION OUTPUT:  01111011111101000000011101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000101011000110100100111111

       - FUNCTION OUTPUT:          01111011111101000000011101110000

       - Left XOR FUNCTION OUTPUT: 01011011010110000110111001001111

       - Next Round Left 32 Bits:  11101000111001111001000101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010110000110111001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000111001111001000101110110

       - Right 32 Bits:            01011011010110000110111001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       01011011010110000110111001001111
          - S-Box Result:     10011000100100100000110001111011   [per every group of 4-bits]
          - Split Into Two:   1001100010010010 [L] 0000110001111011 [R]
          - Swap Halves:      00001100011110111001100010010010
          - Bit Inversion:    11110011100001000110011101101101
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     01100010001111100000101000001011

          - FUNCTION OUTPUT:  01100010001111100000101000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000111001111001000101110110

       - FUNCTION OUTPUT:          01100010001111100000101000001011

       - Left XOR FUNCTION OUTPUT: 10001010110110011001101101111101

       - Next Round Left 32 Bits:  01011011010110000110111001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010110110011001101101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011010110000110111001001111

       - Right 32 Bits:            10001010110110011001101101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       10001010110110011001101101111101
          - S-Box Result:     00100100011000110011100011010110   [per every group of 4-bits]
          - Split Into Two:   0010010001100011 [L] 0011100011010110 [R]
          - Swap Halves:      00111000110101100010010001100011
          - Bit Inversion:    11000111001010011101101110011100
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     10111001110100001000101110000011

          - FUNCTION OUTPUT:  10111001110100001000101110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011010110000110111001001111

       - FUNCTION OUTPUT:          10111001110100001000101110000011

       - Left XOR FUNCTION OUTPUT: 11100010100010001110010111001100

       - Next Round Left 32 Bits:  10001010110110011001101101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010100010001110010111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010110110011001101101111101

       - Right 32 Bits:            11100010100010001110010111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       11100010100010001110010111001100
          - S-Box Result:     11001110001000101100100101010101   [per every group of 4-bits]
          - Split Into Two:   1100111000100010 [L] 1100100101010101 [R]
          - Swap Halves:      11001001010101011100111000100010
          - Bit Inversion:    00110110101010100011000111011101
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     10111011110110111101001011000001

          - FUNCTION OUTPUT:  10111011110110111101001011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010110110011001101101111101

       - FUNCTION OUTPUT:          10111011110110111101001011000001

       - Left XOR FUNCTION OUTPUT: 00110001000000100100100110111100

       - Next Round Left 32 Bits:  11100010100010001110010111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001000000100100100110111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010100010001110010111001100

       - Right 32 Bits:            00110001000000100100100110111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       00110001000000100100100110111100
          - S-Box Result:     00011010111111100111001110000101   [per every group of 4-bits]
          - Split Into Two:   0001101011111110 [L] 0111001110000101 [R]
          - Swap Halves:      01110011100001010001101011111110
          - Bit Inversion:    10001100011110101110010100000001
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     11010001100100101100111111011010

          - FUNCTION OUTPUT:  11010001100100101100111111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010100010001110010111001100

       - FUNCTION OUTPUT:          11010001100100101100111111011010

       - Left XOR FUNCTION OUTPUT: 00110011000110100010101000010110

       - Next Round Left 32 Bits:  00110001000000100100100110111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011000110100010101000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001000000100100100110111100

       - Right 32 Bits:            00110011000110100010101000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       00110011000110100010101000010110
          - S-Box Result:     00010001101001001110010010100000   [per every group of 4-bits]
          - Split Into Two:   0001000110100100 [L] 1110010010100000 [R]
          - Swap Halves:      11100100101000000001000110100100
          - Bit Inversion:    00011011010111111110111001011011
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     11010010111110000101011000111111

          - FUNCTION OUTPUT:  11010010111110000101011000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001000000100100100110111100

       - FUNCTION OUTPUT:          11010010111110000101011000111111

       - Left XOR FUNCTION OUTPUT: 11100011111110100001111110000011

       - Next Round Left 32 Bits:  00110011000110100010101000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011111110100001111110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011000110100010101000010110

       - Right 32 Bits:            11100011111110100001111110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       11100011111110100001111110000011
          - S-Box Result:     11000001101101001010101100100001   [per every group of 4-bits]
          - Split Into Two:   1100000110110100 [L] 1010101100100001 [R]
          - Swap Halves:      10101011001000011100000110110100
          - Bit Inversion:    01010100110111100011111001001011
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     10110011100111010100001010010011

          - FUNCTION OUTPUT:  10110011100111010100001010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011000110100010101000010110

       - FUNCTION OUTPUT:          10110011100111010100001010010011

       - Left XOR FUNCTION OUTPUT: 10000000100001110110100010000101

       - Next Round Left 32 Bits:  11100011111110100001111110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000100001110110100010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011111110100001111110000011

       - Right 32 Bits:            10000000100001110110100010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       10000000100001110110100010000101
          - S-Box Result:     00101111001011010000001000101001   [per every group of 4-bits]
          - Split Into Two:   0010111100101101 [L] 0000001000101001 [R]
          - Swap Halves:      00000010001010010010111100101101
          - Bit Inversion:    11111101110101101101000011010010
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     00111000011010111001000111110110

          - FUNCTION OUTPUT:  00111000011010111001000111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011111110100001111110000011

       - FUNCTION OUTPUT:          00111000011010111001000111110110

       - Left XOR FUNCTION OUTPUT: 11011011100100011000111001110101

       - Next Round Left 32 Bits:  10000000100001110110100010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011100100011000111001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000100001110110100010000101

       - Right 32 Bits:            11011011100100011000111001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       11011011100100011000111001110101
          - S-Box Result:     01101000001110100010110011011001   [per every group of 4-bits]
          - Split Into Two:   0110100000111010 [L] 0010110011011001 [R]
          - Swap Halves:      00101100110110010110100000111010
          - Bit Inversion:    11010011001001101001011111000101
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     01000001101111111111100110000000

          - FUNCTION OUTPUT:  01000001101111111111100110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000100001110110100010000101

       - FUNCTION OUTPUT:          01000001101111111111100110000000

       - Left XOR FUNCTION OUTPUT: 11000001001110001001000100000101

       - Next Round Left 32 Bits:  11011011100100011000111001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001001110001001000100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011100100011000111001110101

       - Right 32 Bits:            11000001001110001001000100000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       11000001001110001001000100000101
          - S-Box Result:     01011010000100100011101011111001   [per every group of 4-bits]
          - Split Into Two:   0101101000010010 [L] 0011101011111001 [R]
          - Swap Halves:      00111010111110010101101000010010
          - Bit Inversion:    11000101000001101010010111101101
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     01101010111001100010010011101011

          - FUNCTION OUTPUT:  01101010111001100010010011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011100100011000111001110101

       - FUNCTION OUTPUT:          01101010111001100010010011101011

       - Left XOR FUNCTION OUTPUT: 10110001011101111010101010011110

       - Next Round Left 32 Bits:  11000001001110001001000100000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001011101111010101010011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001001110001001000100000101

       - Right 32 Bits:            10110001011101111010101010011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       10110001011101111010101010011110
          - S-Box Result:     10001010110111010100010000111100   [per every group of 4-bits]
          - Split Into Two:   1000101011011101 [L] 0100010000111100 [R]
          - Swap Halves:      01000100001111001000101011011101
          - Bit Inversion:    10111011110000110111010100100010
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     10100111001000000000011110101100

          - FUNCTION OUTPUT:  10100111001000000000011110101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001001110001001000100000101

       - FUNCTION OUTPUT:          10100111001000000000011110101100

       - Left XOR FUNCTION OUTPUT: 01100110000110001001011010101001

       - Next Round Left 32 Bits:  10110001011101111010101010011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110000110001001011010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001011101111010101010011110

       - Right 32 Bits:            01100110000110001001011010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       01100110000110001001011010101001
          - S-Box Result:     00000000101000100011000001000011   [per every group of 4-bits]
          - Split Into Two:   0000000010100010 [L] 0011000001000011 [R]
          - Swap Halves:      00110000010000110000000010100010
          - Bit Inversion:    11001111101111001111111101011101
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     00011010100110000101110101001010

          - FUNCTION OUTPUT:  00011010100110000101110101001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001011101111010101010011110

       - FUNCTION OUTPUT:          00011010100110000101110101001010

       - Left XOR FUNCTION OUTPUT: 10101011111011111111011111010100

       - Next Round Left 32 Bits:  01100110000110001001011010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011111011111111011111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110000110001001011010101001

       - Right 32 Bits:            10101011111011111111011111010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       10101011111011111111011111010100
          - S-Box Result:     01001000110010111011110101100111   [per every group of 4-bits]
          - Split Into Two:   0100100011001011 [L] 1011110101100111 [R]
          - Swap Halves:      10111101011001110100100011001011
          - Bit Inversion:    01000010100110001011011100110100
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     00000101000000111000000101101100

          - FUNCTION OUTPUT:  00000101000000111000000101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110000110001001011010101001

       - FUNCTION OUTPUT:          00000101000000111000000101101100

       - Left XOR FUNCTION OUTPUT: 01100011000110110001011111000101

       - Next Round Left 32 Bits:  10101011111011111111011111010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011000110110001011111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011111011111111011111010100

       - Right 32 Bits:            01100011000110110001011111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       01100011000110110001011111000101
          - S-Box Result:     00000001101010001010110101011001   [per every group of 4-bits]
          - Split Into Two:   0000000110101000 [L] 1010110101011001 [R]
          - Swap Halves:      10101101010110010000000110101000
          - Bit Inversion:    01010010101001101111111001010111
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     11010001100000011110011011101011

          - FUNCTION OUTPUT:  11010001100000011110011011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011111011111111011111010100

       - FUNCTION OUTPUT:          11010001100000011110011011101011

       - Left XOR FUNCTION OUTPUT: 01111010011011100001000100111111

       - Next Round Left 32 Bits:  01100011000110110001011111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010011011100001000100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011000110110001011111000101

       - Right 32 Bits:            01111010011011100001000100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       01111010011011100001000100111111
          - S-Box Result:     11010100000011001010101000011011   [per every group of 4-bits]
          - Split Into Two:   1101010000001100 [L] 1010101000011011 [R]
          - Swap Halves:      10101010000110111101010000001100
          - Bit Inversion:    01010101111001000010101111110011
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11101011001111110001000110110001

          - FUNCTION OUTPUT:  11101011001111110001000110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011000110110001011111000101

       - FUNCTION OUTPUT:          11101011001111110001000110110001

       - Left XOR FUNCTION OUTPUT: 10001000001001000000011001110100

       - Next Round Left 32 Bits:  01111010011011100001000100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000001001000000011001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000100000100100000001100111010001111010011011100001000100111111

 > Processed Block:     1000100000100100000001100111010001111010011011100001000100111111



Plaintext Block: 2:                                      1001011000011100011010000001110111001110101111101011101101101010

!!!CBC: Previous Ciphertext:                             1000100000100100000001100111010001111010011011100001000100111111

!!!CBC: Current Block XOR with Previous Ciphertext:      0001111000111000011011100110100110110100110100001010101001010101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110001110000110111001101001

       - Right 32 Bits:            10110100110100001010101001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       10110100110100001010101001010101
          - S-Box Result:     10000111011011110100010010011001   [per every group of 4-bits]
          - Split Into Two:   1000011101101111 [L] 0100010010011001 [R]
          - Swap Halves:      01000100100110011000011101101111
          - Bit Inversion:    10111011011001100111100010010000
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00111000010000010110000000101100

          - FUNCTION OUTPUT:  00111000010000010110000000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110001110000110111001101001

       - FUNCTION OUTPUT:          00111000010000010110000000101100

       - Left XOR FUNCTION OUTPUT: 00100110011110010000111001000101

       - Next Round Left 32 Bits:  10110100110100001010101001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110011110010000111001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100110100001010101001010101

       - Right 32 Bits:            00100110011110010000111001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       00100110011110010000111001000101
          - S-Box Result:     11100000110100111111110001111001   [per every group of 4-bits]
          - Split Into Two:   1110000011010011 [L] 1111110001111001 [R]
          - Swap Halves:      11111100011110011110000011010011
          - Bit Inversion:    00000011100001100001111100101100
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     10111101010111010010010101101110

          - FUNCTION OUTPUT:  10111101010111010010010101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100110100001010101001010101

       - FUNCTION OUTPUT:          10111101010111010010010101101110

       - Left XOR FUNCTION OUTPUT: 00001001100011011000111100111011

       - Next Round Left 32 Bits:  00100110011110010000111001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001100011011000111100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110011110010000111001000101

       - Right 32 Bits:            00001001100011011000111100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       00001001100011011000111100111011
          - S-Box Result:     11110011001001100010101100011000   [per every group of 4-bits]
          - Split Into Two:   1111001100100110 [L] 0010101100011000 [R]
          - Swap Halves:      00101011000110001111001100100110
          - Bit Inversion:    11010100111001110000110011011001
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     01000101010111010110000110111111

          - FUNCTION OUTPUT:  01000101010111010110000110111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110011110010000111001000101

       - FUNCTION OUTPUT:          01000101010111010110000110111111

       - Left XOR FUNCTION OUTPUT: 01100011001001000110111111111010

       - Next Round Left 32 Bits:  00001001100011011000111100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011001001000110111111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001100011011000111100111011

       - Right 32 Bits:            01100011001001000110111111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       01100011001001000110111111111010
          - S-Box Result:     00000001111001110000101110110100   [per every group of 4-bits]
          - Split Into Two:   0000000111100111 [L] 0000101110110100 [R]
          - Swap Halves:      00001011101101000000000111100111
          - Bit Inversion:    11110100010010111111111000011000
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     10001010101100101010111000000111

          - FUNCTION OUTPUT:  10001010101100101010111000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001100011011000111100111011

       - FUNCTION OUTPUT:          10001010101100101010111000000111

       - Left XOR FUNCTION OUTPUT: 10000011001111110010000100111100

       - Next Round Left 32 Bits:  01100011001001000110111111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011001111110010000100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011001001000110111111111010

       - Right 32 Bits:            10000011001111110010000100111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       10000011001111110010000100111100
          - S-Box Result:     00100001000110111110101000010101   [per every group of 4-bits]
          - Split Into Two:   0010000100011011 [L] 1110101000010101 [R]
          - Swap Halves:      11101010000101010010000100011011
          - Bit Inversion:    00010101111010101101111011100100
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     10011000100110110011110111111000

          - FUNCTION OUTPUT:  10011000100110110011110111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011001001000110111111111010

       - FUNCTION OUTPUT:          10011000100110110011110111111000

       - Left XOR FUNCTION OUTPUT: 11111011101111110101001000000010

       - Next Round Left 32 Bits:  10000011001111110010000100111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011101111110101001000000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011001111110010000100111100

       - Right 32 Bits:            11111011101111110101001000000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       11111011101111110101001000000010
          - S-Box Result:     10111000100010111001111011111110   [per every group of 4-bits]
          - Split Into Two:   1011100010001011 [L] 1001111011111110 [R]
          - Swap Halves:      10011110111111101011100010001011
          - Bit Inversion:    01100001000000010100011101110100
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     00111100111010010110110110101111

          - FUNCTION OUTPUT:  00111100111010010110110110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011001111110010000100111100

       - FUNCTION OUTPUT:          00111100111010010110110110101111

       - Left XOR FUNCTION OUTPUT: 10111111110101100100110010010011

       - Next Round Left 32 Bits:  11111011101111110101001000000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111110101100100110010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011101111110101001000000010

       - Right 32 Bits:            10111111110101100100110010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       10111111110101100100110010010011
          - S-Box Result:     10001011011000000111010100110001   [per every group of 4-bits]
          - Split Into Two:   1000101101100000 [L] 0111010100110001 [R]
          - Swap Halves:      01110101001100011000101101100000
          - Bit Inversion:    10001010110011100111010010011111
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     01000011011010011100110011111011

          - FUNCTION OUTPUT:  01000011011010011100110011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011101111110101001000000010

       - FUNCTION OUTPUT:          01000011011010011100110011111011

       - Left XOR FUNCTION OUTPUT: 10111000110101101001111011111001

       - Next Round Left 32 Bits:  10111111110101100100110010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000110101101001111011111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111110101100100110010010011

       - Right 32 Bits:            10111000110101101001111011111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       10111000110101101001111011111001
          - S-Box Result:     10000010011000000011110010110011   [per every group of 4-bits]
          - Split Into Two:   1000001001100000 [L] 0011110010110011 [R]
          - Swap Halves:      00111100101100111000001001100000
          - Bit Inversion:    11000011010011000111110110011111
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00100100000011110000000101000111

          - FUNCTION OUTPUT:  00100100000011110000000101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111110101100100110010010011

       - FUNCTION OUTPUT:          00100100000011110000000101000111

       - Left XOR FUNCTION OUTPUT: 10011011110110010100110111010100

       - Next Round Left 32 Bits:  10111000110101101001111011111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011110110010100110111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000110101101001111011111001

       - Right 32 Bits:            10011011110110010100110111010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       10011011110110010100110111010100
          - S-Box Result:     00111000011000110111011001100111   [per every group of 4-bits]
          - Split Into Two:   0011100001100011 [L] 0111011001100111 [R]
          - Swap Halves:      01110110011001110011100001100011
          - Bit Inversion:    10001001100110001100011110011100
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     01001100001001011000011010111000

          - FUNCTION OUTPUT:  01001100001001011000011010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000110101101001111011111001

       - FUNCTION OUTPUT:          01001100001001011000011010111000

       - Left XOR FUNCTION OUTPUT: 11110100111100110001100001000001

       - Next Round Left 32 Bits:  10011011110110010100110111010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100111100110001100001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011110110010100110111010100

       - Right 32 Bits:            11110100111100110001100001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       11110100111100110001100001000001
          - S-Box Result:     10110111101100011010001001111010   [per every group of 4-bits]
          - Split Into Two:   1011011110110001 [L] 1010001001111010 [R]
          - Swap Halves:      10100010011110101011011110110001
          - Bit Inversion:    01011101100001010100100001001110
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     11001111000111000010011000001011

          - FUNCTION OUTPUT:  11001111000111000010011000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011110110010100110111010100

       - FUNCTION OUTPUT:          11001111000111000010011000001011

       - Left XOR FUNCTION OUTPUT: 01010100110001010110101111011111

       - Next Round Left 32 Bits:  11110100111100110001100001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100110001010110101111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100111100110001100001000001

       - Right 32 Bits:            01010100110001010110101111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       01010100110001010110101111011111
          - S-Box Result:     10010111010110010000100001101011   [per every group of 4-bits]
          - Split Into Two:   1001011101011001 [L] 0000100001101011 [R]
          - Swap Halves:      00001000011010111001011101011001
          - Bit Inversion:    11110111100101000110100010100110
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     01011000011101001110100110100000

          - FUNCTION OUTPUT:  01011000011101001110100110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100111100110001100001000001

       - FUNCTION OUTPUT:          01011000011101001110100110100000

       - Left XOR FUNCTION OUTPUT: 10101100100001111111000111100001

       - Next Round Left 32 Bits:  01010100110001010110101111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100100001111111000111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100110001010110101111011111

       - Right 32 Bits:            10101100100001111111000111100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       10101100100001111111000111100001
          - S-Box Result:     01000101001011011011101011001010   [per every group of 4-bits]
          - Split Into Two:   0100010100101101 [L] 1011101011001010 [R]
          - Swap Halves:      10111010110010100100010100101101
          - Bit Inversion:    01000101001101011011101011010010
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     01011001110101101100100001011100

          - FUNCTION OUTPUT:  01011001110101101100100001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100110001010110101111011111

       - FUNCTION OUTPUT:          01011001110101101100100001011100

       - Left XOR FUNCTION OUTPUT: 00001101000100111010001110000011

       - Next Round Left 32 Bits:  10101100100001111111000111100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101000100111010001110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100100001111111000111100001

       - Right 32 Bits:            00001101000100111010001110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       00001101000100111010001110000011
          - S-Box Result:     11110110101000010100000100100001   [per every group of 4-bits]
          - Split Into Two:   1111011010100001 [L] 0100000100100001 [R]
          - Swap Halves:      01000001001000011111011010100001
          - Bit Inversion:    10111110110111100000100101011110
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     01101011111110101010101101001001

          - FUNCTION OUTPUT:  01101011111110101010101101001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100100001111111000111100001

       - FUNCTION OUTPUT:          01101011111110101010101101001001

       - Left XOR FUNCTION OUTPUT: 11000111011111010101101010101000

       - Next Round Left 32 Bits:  00001101000100111010001110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111011111010101101010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101000100111010001110000011

       - Right 32 Bits:            11000111011111010101101010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       11000111011111010101101010101000
          - S-Box Result:     01011101110101101001010001000010   [per every group of 4-bits]
          - Split Into Two:   0101110111010110 [L] 1001010001000010 [R]
          - Swap Halves:      10010100010000100101110111010110
          - Bit Inversion:    01101011101111011010001000101001
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     00101100001001101001010001110001

          - FUNCTION OUTPUT:  00101100001001101001010001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101000100111010001110000011

       - FUNCTION OUTPUT:          00101100001001101001010001110001

       - Left XOR FUNCTION OUTPUT: 00100001001101010011011111110010

       - Next Round Left 32 Bits:  11000111011111010101101010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001001101010011011111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111011111010101101010101000

       - Right 32 Bits:            00100001001101010011011111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       00100001001101010011011111110010
          - S-Box Result:     11101010000110010001110110111110   [per every group of 4-bits]
          - Split Into Two:   1110101000011001 [L] 0001110110111110 [R]
          - Swap Halves:      00011101101111101110101000011001
          - Bit Inversion:    11100010010000010001010111100110
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01100001011001100000110101011010

          - FUNCTION OUTPUT:  01100001011001100000110101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111011111010101101010101000

       - FUNCTION OUTPUT:          01100001011001100000110101011010

       - Left XOR FUNCTION OUTPUT: 10100110000110110101011111110010

       - Next Round Left 32 Bits:  00100001001101010011011111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110000110110101011111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001001101010011011111110010

       - Right 32 Bits:            10100110000110110101011111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       10100110000110110101011111110010
          - S-Box Result:     01000000101010001001110110111110   [per every group of 4-bits]
          - Split Into Two:   0100000010101000 [L] 1001110110111110 [R]
          - Swap Halves:      10011101101111100100000010101000
          - Bit Inversion:    01100010010000011011111101010111
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11011100100110101000010100010101

          - FUNCTION OUTPUT:  11011100100110101000010100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001001101010011011111110010

       - FUNCTION OUTPUT:          11011100100110101000010100010101

       - Left XOR FUNCTION OUTPUT: 11111101101011111011001011100111

       - Next Round Left 32 Bits:  10100110000110110101011111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101101011111011001011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111110110101111101100101110011110100110000110110101011111110010

 > Processed Block:     1111110110101111101100101110011110100110000110110101011111110010



Plaintext Block: 3:                                      1100011100111100010000101000001111011011110110111110110100101001

!!!CBC: Previous Ciphertext:                             1111110110101111101100101110011110100110000110110101011111110010

!!!CBC: Current Block XOR with Previous Ciphertext:      0011101010010011111100000110010001111101110000001011101011011011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010100100111111000001100100

       - Right 32 Bits:            01111101110000001011101011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       01111101110000001011101011011011
          - S-Box Result:     11010110010111111000010001101000   [per every group of 4-bits]
          - Split Into Two:   1101011001011111 [L] 1000010001101000 [R]
          - Swap Halves:      10000100011010001101011001011111
          - Bit Inversion:    01111011100101110010100110100000
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     11111000101100000011000100011100

          - FUNCTION OUTPUT:  11111000101100000011000100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010100100111111000001100100

       - FUNCTION OUTPUT:          11111000101100000011000100011100

       - Left XOR FUNCTION OUTPUT: 11000010001000111100000101111000

       - Next Round Left 32 Bits:  01111101110000001011101011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010001000111100000101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101110000001011101011011011

       - Right 32 Bits:            11000010001000111100000101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       11000010001000111100000101111000
          - S-Box Result:     01011110111000010101101011010010   [per every group of 4-bits]
          - Split Into Two:   0101111011100001 [L] 0101101011010010 [R]
          - Swap Halves:      01011010110100100101111011100001
          - Bit Inversion:    10100101001011011010000100011110
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00011011111101101001101101011100

          - FUNCTION OUTPUT:  00011011111101101001101101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101110000001011101011011011

       - FUNCTION OUTPUT:          00011011111101101001101101011100

       - Left XOR FUNCTION OUTPUT: 01100110001101100010000110000111

       - Next Round Left 32 Bits:  11000010001000111100000101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110001101100010000110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010001000111100000101111000

       - Right 32 Bits:            01100110001101100010000110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       01100110001101100010000110000111
          - S-Box Result:     00000000000100001110101000101101   [per every group of 4-bits]
          - Split Into Two:   0000000000010000 [L] 1110101000101101 [R]
          - Swap Halves:      11101010001011010000000000010000
          - Bit Inversion:    00010101110100101111111111101111
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     10000100011010001001001010001001

          - FUNCTION OUTPUT:  10000100011010001001001010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010001000111100000101111000

       - FUNCTION OUTPUT:          10000100011010001001001010001001

       - Left XOR FUNCTION OUTPUT: 01000110010010110101001111110001

       - Next Round Left 32 Bits:  01100110001101100010000110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110010010110101001111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110001101100010000110000111

       - Right 32 Bits:            01000110010010110101001111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       01000110010010110101001111110001
          - S-Box Result:     01110000011110001001000110111010   [per every group of 4-bits]
          - Split Into Two:   0111000001111000 [L] 1001000110111010 [R]
          - Swap Halves:      10010001101110100111000001111000
          - Bit Inversion:    01101110010001011000111110000111
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     00010000101111001101111110011000

          - FUNCTION OUTPUT:  00010000101111001101111110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110001101100010000110000111

       - FUNCTION OUTPUT:          00010000101111001101111110011000

       - Left XOR FUNCTION OUTPUT: 01110110100010101111111000011111

       - Next Round Left 32 Bits:  01000110010010110101001111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110100010101111111000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110010010110101001111110001

       - Right 32 Bits:            01110110100010101111111000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       01110110100010101111111000011111
          - S-Box Result:     11010000001001001011110010101011   [per every group of 4-bits]
          - Split Into Two:   1101000000100100 [L] 1011110010101011 [R]
          - Swap Halves:      10111100101010111101000000100100
          - Bit Inversion:    01000011010101000010111111011011
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     11001110001001011100110011000111

          - FUNCTION OUTPUT:  11001110001001011100110011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110010010110101001111110001

       - FUNCTION OUTPUT:          11001110001001011100110011000111

       - Left XOR FUNCTION OUTPUT: 10001000011011101001111100110110

       - Next Round Left 32 Bits:  01110110100010101111111000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000011011101001111100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110100010101111111000011111

       - Right 32 Bits:            10001000011011101001111100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       10001000011011101001111100110110
          - S-Box Result:     00100010000011000011101100010000   [per every group of 4-bits]
          - Split Into Two:   0010001000001100 [L] 0011101100010000 [R]
          - Swap Halves:      00111011000100000010001000001100
          - Bit Inversion:    11000100111011111101110111110011
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     10011001000001111111011100101000

          - FUNCTION OUTPUT:  10011001000001111111011100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110100010101111111000011111

       - FUNCTION OUTPUT:          10011001000001111111011100101000

       - Left XOR FUNCTION OUTPUT: 11101111100011010000100100110111

       - Next Round Left 32 Bits:  10001000011011101001111100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111100011010000100100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000011011101001111100110110

       - Right 32 Bits:            11101111100011010000100100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       11101111100011010000100100110111
          - S-Box Result:     11001011001001101111001100011101   [per every group of 4-bits]
          - Split Into Two:   1100101100100110 [L] 1111001100011101 [R]
          - Swap Halves:      11110011000111011100101100100110
          - Bit Inversion:    00001100111000100011010011011001
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     11000101010001011000110010111101

          - FUNCTION OUTPUT:  11000101010001011000110010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000011011101001111100110110

       - FUNCTION OUTPUT:          11000101010001011000110010111101

       - Left XOR FUNCTION OUTPUT: 01001101001010110001001110001011

       - Next Round Left 32 Bits:  11101111100011010000100100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101001010110001001110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111100011010000100100110111

       - Right 32 Bits:            01001101001010110001001110001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       01001101001010110001001110001011
          - S-Box Result:     01110110111010001010000100101000   [per every group of 4-bits]
          - Split Into Two:   0111011011101000 [L] 1010000100101000 [R]
          - Swap Halves:      10100001001010000111011011101000
          - Bit Inversion:    01011110110101111000100100010111
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     10111001100101001111010111001111

          - FUNCTION OUTPUT:  10111001100101001111010111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111100011010000100100110111

       - FUNCTION OUTPUT:          10111001100101001111010111001111

       - Left XOR FUNCTION OUTPUT: 01010110000110011111110011111000

       - Next Round Left 32 Bits:  01001101001010110001001110001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110000110011111110011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101001010110001001110001011

       - Right 32 Bits:            01010110000110011111110011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       01010110000110011111110011111000
          - S-Box Result:     10010000101000111011010110110010   [per every group of 4-bits]
          - Split Into Two:   1001000010100011 [L] 1011010110110010 [R]
          - Swap Halves:      10110101101100101001000010100011
          - Bit Inversion:    01001010010011010110111101011100
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     10001111111100000010111001111000

          - FUNCTION OUTPUT:  10001111111100000010111001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101001010110001001110001011

       - FUNCTION OUTPUT:          10001111111100000010111001111000

       - Left XOR FUNCTION OUTPUT: 11000010110110110011110111110011

       - Next Round Left 32 Bits:  01010110000110011111110011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010110110110011110111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110000110011111110011111000

       - Right 32 Bits:            11000010110110110011110111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       11000010110110110011110111110011
          - S-Box Result:     01011110011010000001011010110001   [per every group of 4-bits]
          - Split Into Two:   0101111001101000 [L] 0001011010110001 [R]
          - Swap Halves:      00010110101100010101111001101000
          - Bit Inversion:    11101001010011101010000110010111
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     01111011110101111100111111010010

          - FUNCTION OUTPUT:  01111011110101111100111111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110000110011111110011111000

       - FUNCTION OUTPUT:          01111011110101111100111111010010

       - Left XOR FUNCTION OUTPUT: 00101101110011100011001100101010

       - Next Round Left 32 Bits:  11000010110110110011110111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101110011100011001100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010110110110011110111110011

       - Right 32 Bits:            00101101110011100011001100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       00101101110011100011001100101010
          - S-Box Result:     11100110010111000001000111100100   [per every group of 4-bits]
          - Split Into Two:   1110011001011100 [L] 0001000111100100 [R]
          - Swap Halves:      00010001111001001110011001011100
          - Bit Inversion:    11101110000110110001100110100011
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     01000001111110111001100010100101

          - FUNCTION OUTPUT:  01000001111110111001100010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010110110110011110111110011

       - FUNCTION OUTPUT:          01000001111110111001100010100101

       - Left XOR FUNCTION OUTPUT: 10000011001000001010010101010110

       - Next Round Left 32 Bits:  00101101110011100011001100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011001000001010010101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101110011100011001100101010

       - Right 32 Bits:            10000011001000001010010101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       10000011001000001010010101010110
          - S-Box Result:     00100001111011110100100110010000   [per every group of 4-bits]
          - Split Into Two:   0010000111101111 [L] 0100100110010000 [R]
          - Swap Halves:      01001001100100000010000111101111
          - Bit Inversion:    10110110011011111101111000010000
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     10101010100011001010110010011110

          - FUNCTION OUTPUT:  10101010100011001010110010011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101110011100011001100101010

       - FUNCTION OUTPUT:          10101010100011001010110010011110

       - Left XOR FUNCTION OUTPUT: 10000111010000101001111110110100

       - Next Round Left 32 Bits:  10000011001000001010010101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111010000101001111110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011001000001010010101010110

       - Right 32 Bits:            10000111010000101001111110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       10000111010000101001111110110100
          - S-Box Result:     00101101011111100011101110000111   [per every group of 4-bits]
          - Split Into Two:   0010110101111110 [L] 0011101110000111 [R]
          - Swap Halves:      00111011100001110010110101111110
          - Bit Inversion:    11000100011110001101001010000001
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     00010001010111000111000010010110

          - FUNCTION OUTPUT:  00010001010111000111000010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011001000001010010101010110

       - FUNCTION OUTPUT:          00010001010111000111000010010110

       - Left XOR FUNCTION OUTPUT: 10010010011111001101010111000000

       - Next Round Left 32 Bits:  10000111010000101001111110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010011111001101010111000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111010000101001111110110100

       - Right 32 Bits:            10010010011111001101010111000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       10010010011111001101010111000000
          - S-Box Result:     00111110110101010110100101011111   [per every group of 4-bits]
          - Split Into Two:   0011111011010101 [L] 0110100101011111 [R]
          - Swap Halves:      01101001010111110011111011010101
          - Bit Inversion:    10010110101000001100000100101010
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     11010001001110111111011101110010

          - FUNCTION OUTPUT:  11010001001110111111011101110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111010000101001111110110100

       - FUNCTION OUTPUT:          11010001001110111111011101110010

       - Left XOR FUNCTION OUTPUT: 01010110011110010110100011000110

       - Next Round Left 32 Bits:  10010010011111001101010111000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110011110010110100011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010011111001101010111000000

       - Right 32 Bits:            01010110011110010110100011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       01010110011110010110100011000110
          - S-Box Result:     10010000110100110000001001010000   [per every group of 4-bits]
          - Split Into Two:   1001000011010011 [L] 0000001001010000 [R]
          - Swap Halves:      00000010010100001001000011010011
          - Bit Inversion:    11111101101011110110111100101100
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01111110100010000111011110010000

          - FUNCTION OUTPUT:  01111110100010000111011110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010011111001101010111000000

       - FUNCTION OUTPUT:          01111110100010000111011110010000

       - Left XOR FUNCTION OUTPUT: 11101100111101001010001001010000

       - Next Round Left 32 Bits:  01010110011110010110100011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100111101001010001001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110011110010110100011000110

       - Right 32 Bits:            11101100111101001010001001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11101100111101001010001001010000
          - S-Box Result:     11000101101101110100111010011111   [per every group of 4-bits]
          - Split Into Two:   1100010110110111 [L] 0100111010011111 [R]
          - Swap Halves:      01001110100111111100010110110111
          - Bit Inversion:    10110001011000000011101001001000
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00001111101110110000000000001010

          - FUNCTION OUTPUT:  00001111101110110000000000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110011110010110100011000110

       - FUNCTION OUTPUT:          00001111101110110000000000001010

       - Left XOR FUNCTION OUTPUT: 01011001110000100110100011001100

       - Next Round Left 32 Bits:  11101100111101001010001001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001110000100110100011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101100111000010011010001100110011101100111101001010001001010000

 > Processed Block:     0101100111000010011010001100110011101100111101001010001001010000



Plaintext Block: 4:                                      1101001110011101010111000000111101011011110100100101001111100100

!!!CBC: Previous Ciphertext:                             0101100111000010011010001100110011101100111101001010001001010000

!!!CBC: Current Block XOR with Previous Ciphertext:      1000101001011111001101001100001110110111001001101111000110110100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010010111110011010011000011

       - Right 32 Bits:            10110111001001101111000110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       10110111001001101111000110110100
          - S-Box Result:     10001101111000001011101010000111   [per every group of 4-bits]
          - Split Into Two:   1000110111100000 [L] 1011101010000111 [R]
          - Swap Halves:      10111010100001111000110111100000
          - Bit Inversion:    01000101011110000111001000011111
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     11000110010111110110101010100011

          - FUNCTION OUTPUT:  11000110010111110110101010100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010010111110011010011000011

       - FUNCTION OUTPUT:          11000110010111110110101010100011

       - Left XOR FUNCTION OUTPUT: 01001100000000000101111001100000

       - Next Round Left 32 Bits:  10110111001001101111000110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100000000000101111001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111001001101111000110110100

       - Right 32 Bits:            01001100000000000101111001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       01001100000000000101111001100000
          - S-Box Result:     01110101111111111001110000001111   [per every group of 4-bits]
          - Split Into Two:   0111010111111111 [L] 1001110000001111 [R]
          - Swap Halves:      10011100000011110111010111111111
          - Bit Inversion:    01100011111100001000101000000000
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11011101001010111011000001000010

          - FUNCTION OUTPUT:  11011101001010111011000001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111001001101111000110110100

       - FUNCTION OUTPUT:          11011101001010111011000001000010

       - Left XOR FUNCTION OUTPUT: 01101010000011010100000111110110

       - Next Round Left 32 Bits:  01001100000000000101111001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010000011010100000111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100000000000101111001100000

       - Right 32 Bits:            01101010000011010100000111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       01101010000011010100000111110110
          - S-Box Result:     00000100111101100111101010110000   [per every group of 4-bits]
          - Split Into Two:   0000010011110110 [L] 0111101010110000 [R]
          - Swap Halves:      01111010101100000000010011110110
          - Bit Inversion:    10000101010011111111101100001001
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     00010100111101011001011001101111

          - FUNCTION OUTPUT:  00010100111101011001011001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100000000000101111001100000

       - FUNCTION OUTPUT:          00010100111101011001011001101111

       - Left XOR FUNCTION OUTPUT: 01011000111101011100100000001111

       - Next Round Left 32 Bits:  01101010000011010100000111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000111101011100100000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010000011010100000111110110

       - Right 32 Bits:            01011000111101011100100000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       01011000111101011100100000001111
          - S-Box Result:     10010010101110010101001011111011   [per every group of 4-bits]
          - Split Into Two:   1001001010111001 [L] 0101001011111011 [R]
          - Swap Halves:      01010010111110111001001010111001
          - Bit Inversion:    10101101000001000110110101000110
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     11010011111111010011110101011001

          - FUNCTION OUTPUT:  11010011111111010011110101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010000011010100000111110110

       - FUNCTION OUTPUT:          11010011111111010011110101011001

       - Left XOR FUNCTION OUTPUT: 10111001111100000111110010101111

       - Next Round Left 32 Bits:  01011000111101011100100000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001111100000111110010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000111101011100100000001111

       - Right 32 Bits:            10111001111100000111110010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       10111001111100000111110010101111
          - S-Box Result:     10000011101111111101010101001011   [per every group of 4-bits]
          - Split Into Two:   1000001110111111 [L] 1101010101001011 [R]
          - Swap Halves:      11010101010010111000001110111111
          - Bit Inversion:    00101010101101000111110001000000
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     10100111110001011001111101011100

          - FUNCTION OUTPUT:  10100111110001011001111101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000111101011100100000001111

       - FUNCTION OUTPUT:          10100111110001011001111101011100

       - Left XOR FUNCTION OUTPUT: 11111111001100000101011101010011

       - Next Round Left 32 Bits:  10111001111100000111110010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111001100000101011101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001111100000111110010101111

       - Right 32 Bits:            11111111001100000101011101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       11111111001100000101011101010011
          - S-Box Result:     10111011000111111001110110010001   [per every group of 4-bits]
          - Split Into Two:   1011101100011111 [L] 1001110110010001 [R]
          - Swap Halves:      10011101100100011011101100011111
          - Bit Inversion:    01100010011011100100010011100000
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     00111111100001100110111000111011

          - FUNCTION OUTPUT:  00111111100001100110111000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001111100000111110010101111

       - FUNCTION OUTPUT:          00111111100001100110111000111011

       - Left XOR FUNCTION OUTPUT: 10000110011101100001001010010100

       - Next Round Left 32 Bits:  11111111001100000101011101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110011101100001001010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111001100000101011101010011

       - Right 32 Bits:            10000110011101100001001010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       10000110011101100001001010010100
          - S-Box Result:     00100000110100001010111000110111   [per every group of 4-bits]
          - Split Into Two:   0010000011010000 [L] 1010111000110111 [R]
          - Swap Halves:      10101110001101110010000011010000
          - Bit Inversion:    01010001110010001101111100101111
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     10011000011011110110011101001011

          - FUNCTION OUTPUT:  10011000011011110110011101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111001100000101011101010011

       - FUNCTION OUTPUT:          10011000011011110110011101001011

       - Left XOR FUNCTION OUTPUT: 01100111010111110011000000011000

       - Next Round Left 32 Bits:  10000110011101100001001010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111010111110011000000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110011101100001001010010100

       - Right 32 Bits:            01100111010111110011000000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       01100111010111110011000000011000
          - S-Box Result:     00001101100110110001111110100010   [per every group of 4-bits]
          - Split Into Two:   0000110110011011 [L] 0001111110100010 [R]
          - Swap Halves:      00011111101000100000110110011011
          - Bit Inversion:    11100000010111011111001001100100
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00000111000111101000111010111100

          - FUNCTION OUTPUT:  00000111000111101000111010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110011101100001001010010100

       - FUNCTION OUTPUT:          00000111000111101000111010111100

       - Left XOR FUNCTION OUTPUT: 10000001011010001001110000101000

       - Next Round Left 32 Bits:  01100111010111110011000000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001011010001001110000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111010111110011000000011000

       - Right 32 Bits:            10000001011010001001110000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       10000001011010001001110000101000
          - S-Box Result:     00101010000000100011010111100010   [per every group of 4-bits]
          - Split Into Two:   0010101000000010 [L] 0011010111100010 [R]
          - Swap Halves:      00110101111000100010101000000010
          - Bit Inversion:    11001010000111011101010111111101
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     00001111101000001001010011011001

          - FUNCTION OUTPUT:  00001111101000001001010011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111010111110011000000011000

       - FUNCTION OUTPUT:          00001111101000001001010011011001

       - Left XOR FUNCTION OUTPUT: 01101000111111111010010011000001

       - Next Round Left 32 Bits:  10000001011010001001110000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000111111111010010011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001011010001001110000101000

       - Right 32 Bits:            01101000111111111010010011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       01101000111111111010010011000001
          - S-Box Result:     00000010101110110100011101011010   [per every group of 4-bits]
          - Split Into Two:   0000001010111011 [L] 0100011101011010 [R]
          - Swap Halves:      01000111010110100000001010111011
          - Bit Inversion:    10111000101001011111110101000100
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     00101010001111001001001100000001

          - FUNCTION OUTPUT:  00101010001111001001001100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001011010001001110000101000

       - FUNCTION OUTPUT:          00101010001111001001001100000001

       - Left XOR FUNCTION OUTPUT: 10101011010101000000111100101001

       - Next Round Left 32 Bits:  01101000111111111010010011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011010101000000111100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000111111111010010011000001

       - Right 32 Bits:            10101011010101000000111100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       10101011010101000000111100101001
          - S-Box Result:     01001000100101111111101111100011   [per every group of 4-bits]
          - Split Into Two:   0100100010010111 [L] 1111101111100011 [R]
          - Swap Halves:      11111011111000110100100010010111
          - Bit Inversion:    00000100000111001011011101101000
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     10101011111111000011011001101110

          - FUNCTION OUTPUT:  10101011111111000011011001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000111111111010010011000001

       - FUNCTION OUTPUT:          10101011111111000011011001101110

       - Left XOR FUNCTION OUTPUT: 11000011000000111001001010101111

       - Next Round Left 32 Bits:  10101011010101000000111100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011000000111001001010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011010101000000111100101001

       - Right 32 Bits:            11000011000000111001001010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       11000011000000111001001010101111
          - S-Box Result:     01010001111100010011111001001011   [per every group of 4-bits]
          - Split Into Two:   0101000111110001 [L] 0011111001001011 [R]
          - Swap Halves:      00111110010010110101000111110001
          - Bit Inversion:    11000001101101001010111000001110
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     11011101010101111101110010000000

          - FUNCTION OUTPUT:  11011101010101111101110010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011010101000000111100101001

       - FUNCTION OUTPUT:          11011101010101111101110010000000

       - Left XOR FUNCTION OUTPUT: 01110110000000111101001110101001

       - Next Round Left 32 Bits:  11000011000000111001001010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110000000111101001110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011000000111001001010101111

       - Right 32 Bits:            01110110000000111101001110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       01110110000000111101001110101001
          - S-Box Result:     11010000111100010110000101000011   [per every group of 4-bits]
          - Split Into Two:   1101000011110001 [L] 0110000101000011 [R]
          - Swap Halves:      01100001010000111101000011110001
          - Bit Inversion:    10011110101111000010111100001110
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     01001011100110001000110100011001

          - FUNCTION OUTPUT:  01001011100110001000110100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011000000111001001010101111

       - FUNCTION OUTPUT:          01001011100110001000110100011001

       - Left XOR FUNCTION OUTPUT: 10001000100110110001111110110110

       - Next Round Left 32 Bits:  01110110000000111101001110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000100110110001111110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110000000111101001110101001

       - Right 32 Bits:            10001000100110110001111110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       10001000100110110001111110110110
          - S-Box Result:     00100010001110001010101110000000   [per every group of 4-bits]
          - Split Into Two:   0010001000111000 [L] 1010101110000000 [R]
          - Swap Halves:      10101011100000000010001000111000
          - Bit Inversion:    01010100011111111101110111000111
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     00010011111001001110101110011111

          - FUNCTION OUTPUT:  00010011111001001110101110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110000000111101001110101001

       - FUNCTION OUTPUT:          00010011111001001110101110011111

       - Left XOR FUNCTION OUTPUT: 01100101111001110011100000110110

       - Next Round Left 32 Bits:  10001000100110110001111110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101111001110011100000110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000100110110001111110110110

       - Right 32 Bits:            01100101111001110011100000110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       01100101111001110011100000110110
          - S-Box Result:     00001001110011010001001000010000   [per every group of 4-bits]
          - Split Into Two:   0000100111001101 [L] 0001001000010000 [R]
          - Swap Halves:      00010010000100000000100111001101
          - Bit Inversion:    11101101111011111111011000110010
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01101110110010001110111010001110

          - FUNCTION OUTPUT:  01101110110010001110111010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000100110110001111110110110

       - FUNCTION OUTPUT:          01101110110010001110111010001110

       - Left XOR FUNCTION OUTPUT: 11100110010100111111000100111000

       - Next Round Left 32 Bits:  01100101111001110011100000110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110010100111111000100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101111001110011100000110110

       - Right 32 Bits:            11100110010100111111000100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11100110010100111111000100111000
          - S-Box Result:     11000000100100011011101000010010   [per every group of 4-bits]
          - Split Into Two:   1100000010010001 [L] 1011101000010010 [R]
          - Swap Halves:      10111010000100101100000010010001
          - Bit Inversion:    01000101111011010011111101101110
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11111011001101100000010100101100

          - FUNCTION OUTPUT:  11111011001101100000010100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101111001110011100000110110

       - FUNCTION OUTPUT:          11111011001101100000010100101100

       - Left XOR FUNCTION OUTPUT: 10011110110100010011110100011010

       - Next Round Left 32 Bits:  11100110010100111111000100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110110100010011110100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001111011010001001111010001101011100110010100111111000100111000

 > Processed Block:     1001111011010001001111010001101011100110010100111111000100111000



Plaintext Block: 5:                                      0011111001000101011100111110011010010101011111100011000110111000

!!!CBC: Previous Ciphertext:                             1001111011010001001111010001101011100110010100111111000100111000

!!!CBC: Current Block XOR with Previous Ciphertext:      1010000010010100010011101111110001110011001011011100000010000000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000100101000100111011111100

       - Right 32 Bits:            01110011001011011100000010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       01110011001011011100000010000000
          - S-Box Result:     11010001111001100101111100101111   [per every group of 4-bits]
          - Split Into Two:   1101000111100110 [L] 0101111100101111 [R]
          - Swap Halves:      01011111001011111101000111100110
          - Bit Inversion:    10100000110100000010111000011001
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00100011111101110011011010100101

          - FUNCTION OUTPUT:  00100011111101110011011010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000100101000100111011111100

       - FUNCTION OUTPUT:          00100011111101110011011010100101

       - Left XOR FUNCTION OUTPUT: 10000011011000110111100001011001

       - Next Round Left 32 Bits:  01110011001011011100000010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011011000110111100001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011001011011100000010000000

       - Right 32 Bits:            10000011011000110111100001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       10000011011000110111100001011001
          - S-Box Result:     00100001000000011101001010010011   [per every group of 4-bits]
          - Split Into Two:   0010000100000001 [L] 1101001010010011 [R]
          - Swap Halves:      11010010100100110010000100000001
          - Bit Inversion:    00101101011011001101111011111110
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     10010011101101111110010010111100

          - FUNCTION OUTPUT:  10010011101101111110010010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011001011011100000010000000

       - FUNCTION OUTPUT:          10010011101101111110010010111100

       - Left XOR FUNCTION OUTPUT: 11100000100110100010010000111100

       - Next Round Left 32 Bits:  10000011011000110111100001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000100110100010010000111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011011000110111100001011001

       - Right 32 Bits:            11100000100110100010010000111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       11100000100110100010010000111100
          - S-Box Result:     11001111001101001110011100010101   [per every group of 4-bits]
          - Split Into Two:   1100111100110100 [L] 1110011100010101 [R]
          - Swap Halves:      11100111000101011100111100110100
          - Bit Inversion:    00011000111010100011000011001011
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     10001001010100000101110110101101

          - FUNCTION OUTPUT:  10001001010100000101110110101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011011000110111100001011001

       - FUNCTION OUTPUT:          10001001010100000101110110101101

       - Left XOR FUNCTION OUTPUT: 00001010001100110010010111110100

       - Next Round Left 32 Bits:  11100000100110100010010000111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010001100110010010111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000100110100010010000111100

       - Right 32 Bits:            00001010001100110010010111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       00001010001100110010010111110100
          - S-Box Result:     11110100000100011110100110110111   [per every group of 4-bits]
          - Split Into Two:   1111010000010001 [L] 1110100110110111 [R]
          - Swap Halves:      11101001101101111111010000010001
          - Bit Inversion:    00010110010010000000101111101110
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     01101000101100010101101111110001

          - FUNCTION OUTPUT:  01101000101100010101101111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000100110100010010000111100

       - FUNCTION OUTPUT:          01101000101100010101101111110001

       - Left XOR FUNCTION OUTPUT: 10001000001010110111111111001101

       - Next Round Left 32 Bits:  00001010001100110010010111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000001010110111111111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010001100110010010111110100

       - Right 32 Bits:            10001000001010110111111111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       10001000001010110111111111001101
          - S-Box Result:     00100010111010001101101101010110   [per every group of 4-bits]
          - Split Into Two:   0010001011101000 [L] 1101101101010110 [R]
          - Swap Halves:      11011011010101100010001011101000
          - Bit Inversion:    00100100101010011101110100010111
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     10101001110110000011111000001011

          - FUNCTION OUTPUT:  10101001110110000011111000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010001100110010010111110100

       - FUNCTION OUTPUT:          10101001110110000011111000001011

       - Left XOR FUNCTION OUTPUT: 10100011111010110001101111111111

       - Next Round Left 32 Bits:  10001000001010110111111111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011111010110001101111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000001010110111111111001101

       - Right 32 Bits:            10100011111010110001101111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       10100011111010110001101111111111
          - S-Box Result:     01000001110010001010100010111011   [per every group of 4-bits]
          - Split Into Two:   0100000111001000 [L] 1010100010111011 [R]
          - Swap Halves:      10101000101110110100000111001000
          - Bit Inversion:    01010111010001001011111000110111
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     00001010101011001001010011101100

          - FUNCTION OUTPUT:  00001010101011001001010011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000001010110111111111001101

       - FUNCTION OUTPUT:          00001010101011001001010011101100

       - Left XOR FUNCTION OUTPUT: 10000010100001111110101100100001

       - Next Round Left 32 Bits:  10100011111010110001101111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010100001111110101100100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011111010110001101111111111

       - Right 32 Bits:            10000010100001111110101100100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       10000010100001111110101100100001
          - S-Box Result:     00101110001011011100100011101010   [per every group of 4-bits]
          - Split Into Two:   0010111000101101 [L] 1100100011101010 [R]
          - Swap Halves:      11001000111010100010111000101101
          - Bit Inversion:    00110111000101011101000111010010
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     11111110101100100110100110110110

          - FUNCTION OUTPUT:  11111110101100100110100110110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011111010110001101111111111

       - FUNCTION OUTPUT:          11111110101100100110100110110110

       - Left XOR FUNCTION OUTPUT: 01011101010110010111001001001001

       - Next Round Left 32 Bits:  10000010100001111110101100100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101010110010111001001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010100001111110101100100001

       - Right 32 Bits:            01011101010110010111001001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       01011101010110010111001001001001
          - S-Box Result:     10010110100100111101111001110011   [per every group of 4-bits]
          - Split Into Two:   1001011010010011 [L] 1101111001110011 [R]
          - Swap Halves:      11011110011100111001011010010011
          - Bit Inversion:    00100001100011000110100101101100
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     11000110110011110001010110110100

          - FUNCTION OUTPUT:  11000110110011110001010110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010100001111110101100100001

       - FUNCTION OUTPUT:          11000110110011110001010110110100

       - Left XOR FUNCTION OUTPUT: 01000100010010001111111010010101

       - Next Round Left 32 Bits:  01011101010110010111001001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100010010001111111010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101010110010111001001001001

       - Right 32 Bits:            01000100010010001111111010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       01000100010010001111111010010101
          - S-Box Result:     01110111011100101011110000111001   [per every group of 4-bits]
          - Split Into Two:   0111011101110010 [L] 1011110000111001 [R]
          - Swap Halves:      10111100001110010111011101110010
          - Bit Inversion:    01000011110001101000100010001101
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     10000110011110111100100110101001

          - FUNCTION OUTPUT:  10000110011110111100100110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101010110010111001001001001

       - FUNCTION OUTPUT:          10000110011110111100100110101001

       - Left XOR FUNCTION OUTPUT: 11011011001000101011101111100000

       - Next Round Left 32 Bits:  01000100010010001111111010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011001000101011101111100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100010010001111111010010101

       - Right 32 Bits:            11011011001000101011101111100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       11011011001000101011101111100000
          - S-Box Result:     01101000111011101000100011001111   [per every group of 4-bits]
          - Split Into Two:   0110100011101110 [L] 1000100011001111 [R]
          - Swap Halves:      10001000110011110110100011101110
          - Bit Inversion:    01110111001100001001011100010001
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     11100101101010011111100101010100

          - FUNCTION OUTPUT:  11100101101010011111100101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100010010001111111010010101

       - FUNCTION OUTPUT:          11100101101010011111100101010100

       - Left XOR FUNCTION OUTPUT: 10100001111000010000011111000001

       - Next Round Left 32 Bits:  11011011001000101011101111100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001111000010000011111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011001000101011101111100000

       - Right 32 Bits:            10100001111000010000011111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       10100001111000010000011111000001
          - S-Box Result:     01001010110010101111110101011010   [per every group of 4-bits]
          - Split Into Two:   0100101011001010 [L] 1111110101011010 [R]
          - Swap Halves:      11111101010110100100101011001010
          - Bit Inversion:    00000010101001011011010100110101
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     10101101010001010011010000110011

          - FUNCTION OUTPUT:  10101101010001010011010000110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011001000101011101111100000

       - FUNCTION OUTPUT:          10101101010001010011010000110011

       - Left XOR FUNCTION OUTPUT: 01110110011001111000111111010011

       - Next Round Left 32 Bits:  10100001111000010000011111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110011001111000111111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001111000010000011111000001

       - Right 32 Bits:            01110110011001111000111111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       01110110011001111000111111010011
          - S-Box Result:     11010000000011010010101101100001   [per every group of 4-bits]
          - Split Into Two:   1101000000001101 [L] 0010101101100001 [R]
          - Swap Halves:      00101011011000011101000000001101
          - Bit Inversion:    11010100100111100010111111110010
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     11001000011111010101110101111100

          - FUNCTION OUTPUT:  11001000011111010101110101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001111000010000011111000001

       - FUNCTION OUTPUT:          11001000011111010101110101111100

       - Left XOR FUNCTION OUTPUT: 01101001100111000101101010111101

       - Next Round Left 32 Bits:  01110110011001111000111111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001100111000101101010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110011001111000111111010011

       - Right 32 Bits:            01101001100111000101101010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       01101001100111000101101010111101
          - S-Box Result:     00000011001101011001010010000110   [per every group of 4-bits]
          - Split Into Two:   0000001100110101 [L] 1001010010000110 [R]
          - Swap Halves:      10010100100001100000001100110101
          - Bit Inversion:    01101011011110011111110011001010
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     10111110010111010101111011011101

          - FUNCTION OUTPUT:  10111110010111010101111011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110011001111000111111010011

       - FUNCTION OUTPUT:          10111110010111010101111011011101

       - Left XOR FUNCTION OUTPUT: 11001000001110101101000100001110

       - Next Round Left 32 Bits:  01101001100111000101101010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000001110101101000100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001100111000101101010111101

       - Right 32 Bits:            11001000001110101101000100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       11001000001110101101000100001110
          - S-Box Result:     01010010000101000110101011111100   [per every group of 4-bits]
          - Split Into Two:   0101001000010100 [L] 0110101011111100 [R]
          - Swap Halves:      01101010111111000101001000010100
          - Bit Inversion:    10010101000000111010110111101011
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     11010010100110001001101110110011

          - FUNCTION OUTPUT:  11010010100110001001101110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001100111000101101010111101

       - FUNCTION OUTPUT:          11010010100110001001101110110011

       - Left XOR FUNCTION OUTPUT: 10111011000001001100000100001110

       - Next Round Left 32 Bits:  11001000001110101101000100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000001001100000100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000001110101101000100001110

       - Right 32 Bits:            10111011000001001100000100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       10111011000001001100000100001110
          - S-Box Result:     10001000111101110101101011111100   [per every group of 4-bits]
          - Split Into Two:   1000100011110111 [L] 0101101011111100 [R]
          - Swap Halves:      01011010111111001000100011110111
          - Bit Inversion:    10100101000000110111011100001000
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00100110001001000110111110110100

          - FUNCTION OUTPUT:  00100110001001000110111110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000001110101101000100001110

       - FUNCTION OUTPUT:          00100110001001000110111110110100

       - Left XOR FUNCTION OUTPUT: 11101110000111101011111010111010

       - Next Round Left 32 Bits:  10111011000001001100000100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110000111101011111010111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000001001100000100001110

       - Right 32 Bits:            11101110000111101011111010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11101110000111101011111010111010
          - S-Box Result:     11001100101011001000110010000100   [per every group of 4-bits]
          - Split Into Two:   1100110010101100 [L] 1000110010000100 [R]
          - Swap Halves:      10001100100001001100110010101100
          - Bit Inversion:    01110011011110110011001101010011
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11001101101000000000100100010001

          - FUNCTION OUTPUT:  11001101101000000000100100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000001001100000100001110

       - FUNCTION OUTPUT:          11001101101000000000100100010001

       - Left XOR FUNCTION OUTPUT: 01110110101001001100100000011111

       - Next Round Left 32 Bits:  11101110000111101011111010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110101001001100100000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111011010100100110010000001111111101110000111101011111010111010

 > Processed Block:     0111011010100100110010000001111111101110000111101011111010111010



Plaintext Block: 6:                                      0101101100010100110111101101100000010011000010001111111110111000

!!!CBC: Previous Ciphertext:                             0111011010100100110010000001111111101110000111101011111010111010

!!!CBC: Current Block XOR with Previous Ciphertext:      0010110110110000000101101100011111111101000101100100000100000010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101101100000001011011000111

       - Right 32 Bits:            11111101000101100100000100000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       11111101000101100100000100000010
          - S-Box Result:     10110110101000000111101011111110   [per every group of 4-bits]
          - Split Into Two:   1011011010100000 [L] 0111101011111110 [R]
          - Swap Halves:      01111010111111101011011010100000
          - Bit Inversion:    10000101000000010100100101011111
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     00000110001001100101000111100011

          - FUNCTION OUTPUT:  00000110001001100101000111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101101100000001011011000111

       - FUNCTION OUTPUT:          00000110001001100101000111100011

       - Left XOR FUNCTION OUTPUT: 00101011100101100100011100100100

       - Next Round Left 32 Bits:  11111101000101100100000100000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011100101100100011100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101000101100100000100000010

       - Right 32 Bits:            00101011100101100100011100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       00101011100101100100011100100100
          - S-Box Result:     11101000001100000111110111100111   [per every group of 4-bits]
          - Split Into Two:   1110100000110000 [L] 0111110111100111 [R]
          - Swap Halves:      01111101111001111110100000110000
          - Bit Inversion:    10000010000110000001011111001111
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00111100110000110010110110001101

          - FUNCTION OUTPUT:  00111100110000110010110110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101000101100100000100000010

       - FUNCTION OUTPUT:          00111100110000110010110110001101

       - Left XOR FUNCTION OUTPUT: 11000001110101010110110010001111

       - Next Round Left 32 Bits:  00101011100101100100011100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110101010110110010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011100101100100011100100100

       - Right 32 Bits:            11000001110101010110110010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       11000001110101010110110010001111
          - S-Box Result:     01011010011010010000010100101011   [per every group of 4-bits]
          - Split Into Two:   0101101001101001 [L] 0000010100101011 [R]
          - Swap Halves:      00000101001010110101101001101001
          - Bit Inversion:    11111010110101001010010110010110
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     01101011011011101100100011110000

          - FUNCTION OUTPUT:  01101011011011101100100011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011100101100100011100100100

       - FUNCTION OUTPUT:          01101011011011101100100011110000

       - Left XOR FUNCTION OUTPUT: 01000000111110001000111111010100

       - Next Round Left 32 Bits:  11000001110101010110110010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000111110001000111111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001110101010110110010001111

       - Right 32 Bits:            01000000111110001000111111010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       01000000111110001000111111010100
          - S-Box Result:     01111111101100100010101101100111   [per every group of 4-bits]
          - Split Into Two:   0111111110110010 [L] 0010101101100111 [R]
          - Swap Halves:      00101011011001110111111110110010
          - Bit Inversion:    11010100100110001000000001001101
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     10101010011000011101000001010010

          - FUNCTION OUTPUT:  10101010011000011101000001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001110101010110110010001111

       - FUNCTION OUTPUT:          10101010011000011101000001010010

       - Left XOR FUNCTION OUTPUT: 01101011101101001011110011011101

       - Next Round Left 32 Bits:  01000000111110001000111111010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011101101001011110011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000111110001000111111010100

       - Right 32 Bits:            01101011101101001011110011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       01101011101101001011110011011101
          - S-Box Result:     00001000100001111000010101100110   [per every group of 4-bits]
          - Split Into Two:   0000100010000111 [L] 1000010101100110 [R]
          - Swap Halves:      10000101011001100000100010000111
          - Bit Inversion:    01111010100110011111011101111000
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     11110111111010000001010001100100

          - FUNCTION OUTPUT:  11110111111010000001010001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000111110001000111111010100

       - FUNCTION OUTPUT:          11110111111010000001010001100100

       - Left XOR FUNCTION OUTPUT: 10110111000100001001101110110000

       - Next Round Left 32 Bits:  01101011101101001011110011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111000100001001101110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011101101001011110011011101

       - Right 32 Bits:            10110111000100001001101110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       10110111000100001001101110110000
          - S-Box Result:     10001101101011110011100010001111   [per every group of 4-bits]
          - Split Into Two:   1000110110101111 [L] 0011100010001111 [R]
          - Swap Halves:      00111000100011111000110110101111
          - Bit Inversion:    11000111011100000111001001010000
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     10011010100110000101100010001011

          - FUNCTION OUTPUT:  10011010100110000101100010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011101101001011110011011101

       - FUNCTION OUTPUT:          10011010100110000101100010001011

       - Left XOR FUNCTION OUTPUT: 11110001001011001110010001010110

       - Next Round Left 32 Bits:  10110111000100001001101110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001001011001110010001010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111000100001001101110110000

       - Right 32 Bits:            11110001001011001110010001010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       11110001001011001110010001010110
          - S-Box Result:     10111010111001011100011110010000   [per every group of 4-bits]
          - Split Into Two:   1011101011100101 [L] 1100011110010000 [R]
          - Swap Halves:      11000111100100001011101011100101
          - Bit Inversion:    00111000011011110100010100011010
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     11110001110010001111110101111110

          - FUNCTION OUTPUT:  11110001110010001111110101111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111000100001001101110110000

       - FUNCTION OUTPUT:          11110001110010001111110101111110

       - Left XOR FUNCTION OUTPUT: 01000110110110000110011011001110

       - Next Round Left 32 Bits:  11110001001011001110010001010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110110110000110011011001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110001001011001110010001010110

       - Right 32 Bits:            01000110110110000110011011001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       01000110110110000110011011001110
          - S-Box Result:     01110000011000100000000001011100   [per every group of 4-bits]
          - Split Into Two:   0111000001100010 [L] 0000000001011100 [R]
          - Swap Halves:      00000000010111000111000001100010
          - Bit Inversion:    11111111101000111000111110011101
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00011000111000001111001101000101

          - FUNCTION OUTPUT:  00011000111000001111001101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110001001011001110010001010110

       - FUNCTION OUTPUT:          00011000111000001111001101000101

       - Left XOR FUNCTION OUTPUT: 11101001110011000001011100010011

       - Next Round Left 32 Bits:  01000110110110000110011011001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001110011000001011100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110110110000110011011001110

       - Right 32 Bits:            11101001110011000001011100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       11101001110011000001011100010011
          - S-Box Result:     11000011010101011010110110100001   [per every group of 4-bits]
          - Split Into Two:   1100001101010101 [L] 1010110110100001 [R]
          - Swap Halves:      10101101101000011100001101010101
          - Bit Inversion:    01010010010111100011110010101010
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     10010111111000110111110110001110

          - FUNCTION OUTPUT:  10010111111000110111110110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110110110000110011011001110

       - FUNCTION OUTPUT:          10010111111000110111110110001110

       - Left XOR FUNCTION OUTPUT: 11010001001110110001101101000000

       - Next Round Left 32 Bits:  11101001110011000001011100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001001110110001101101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001110011000001011100010011

       - Right 32 Bits:            11010001001110110001101101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       11010001001110110001101101000000
          - S-Box Result:     01101010000110001010100001111111   [per every group of 4-bits]
          - Split Into Two:   0110101000011000 [L] 1010100001111111 [R]
          - Swap Halves:      10101000011111110110101000011000
          - Bit Inversion:    01010111100000001001010111100111
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     11000101000110011111101110100010

          - FUNCTION OUTPUT:  11000101000110011111101110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001110011000001011100010011

       - FUNCTION OUTPUT:          11000101000110011111101110100010

       - Left XOR FUNCTION OUTPUT: 00101100110101011110110010110001

       - Next Round Left 32 Bits:  11010001001110110001101101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100110101011110110010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001001110110001101101000000

       - Right 32 Bits:            00101100110101011110110010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       00101100110101011110110010110001
          - S-Box Result:     11100101011010011100010110001010   [per every group of 4-bits]
          - Split Into Two:   1110010101101001 [L] 1100010110001010 [R]
          - Swap Halves:      11000101100010101110010101101001
          - Bit Inversion:    00111010011101010001101010010110
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     10010101100101011001101110010000

          - FUNCTION OUTPUT:  10010101100101011001101110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001001110110001101101000000

       - FUNCTION OUTPUT:          10010101100101011001101110010000

       - Left XOR FUNCTION OUTPUT: 01000100101011101000000011010000

       - Next Round Left 32 Bits:  00101100110101011110110010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100101011101000000011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100110101011110110010110001

       - Right 32 Bits:            01000100101011101000000011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       01000100101011101000000011010000
          - S-Box Result:     01110111010011000010111101101111   [per every group of 4-bits]
          - Split Into Two:   0111011101001100 [L] 0010111101101111 [R]
          - Swap Halves:      00101111011011110111011101001100
          - Bit Inversion:    11010000100100001000100010110011
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     11001100011100111111101000111101

          - FUNCTION OUTPUT:  11001100011100111111101000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100110101011110110010110001

       - FUNCTION OUTPUT:          11001100011100111111101000111101

       - Left XOR FUNCTION OUTPUT: 11100000101001100001011010001100

       - Next Round Left 32 Bits:  01000100101011101000000011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000101001100001011010001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100101011101000000011010000

       - Right 32 Bits:            11100000101001100001011010001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       11100000101001100001011010001100
          - S-Box Result:     11001111010000001010000000100101   [per every group of 4-bits]
          - Split Into Two:   1100111101000000 [L] 1010000000100101 [R]
          - Swap Halves:      10100000001001011100111101000000
          - Bit Inversion:    01011111110110100011000010111111
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     10001010111111101001001010101000

          - FUNCTION OUTPUT:  10001010111111101001001010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100101011101000000011010000

       - FUNCTION OUTPUT:          10001010111111101001001010101000

       - Left XOR FUNCTION OUTPUT: 11001110010100000001001001111000

       - Next Round Left 32 Bits:  11100000101001100001011010001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110010100000001001001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000101001100001011010001100

       - Right 32 Bits:            11001110010100000001001001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       11001110010100000001001001111000
          - S-Box Result:     01011100100111111010111011010010   [per every group of 4-bits]
          - Split Into Two:   0101110010011111 [L] 1010111011010010 [R]
          - Swap Halves:      10101110110100100101110010011111
          - Bit Inversion:    01010001001011011010001101100000
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     00010110101101101001010100111000

          - FUNCTION OUTPUT:  00010110101101101001010100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000101001100001011010001100

       - FUNCTION OUTPUT:          00010110101101101001010100111000

       - Left XOR FUNCTION OUTPUT: 11110110000100001000001110110100

       - Next Round Left 32 Bits:  11001110010100000001001001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110000100001000001110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110010100000001001001111000

       - Right 32 Bits:            11110110000100001000001110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       11110110000100001000001110110100
          - S-Box Result:     10110000101011110010000110000111   [per every group of 4-bits]
          - Split Into Two:   1011000010101111 [L] 0010000110000111 [R]
          - Swap Halves:      00100001100001111011000010101111
          - Bit Inversion:    11011110011110000100111101010000
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01011101010111110101011111101100

          - FUNCTION OUTPUT:  01011101010111110101011111101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110010100000001001001111000

       - FUNCTION OUTPUT:          01011101010111110101011111101100

       - Left XOR FUNCTION OUTPUT: 10010011000011110100010110010100

       - Next Round Left 32 Bits:  11110110000100001000001110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011000011110100010110010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110000100001000001110110100

       - Right 32 Bits:            10010011000011110100010110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       10010011000011110100010110010100
          - S-Box Result:     00110001111110110111100100110111   [per every group of 4-bits]
          - Split Into Two:   0011000111111011 [L] 0111100100110111 [R]
          - Swap Halves:      01111001001101110011000111111011
          - Bit Inversion:    10000110110010001100111000000100
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00111000000100111111010001000110

          - FUNCTION OUTPUT:  00111000000100111111010001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110000100001000001110110100

       - FUNCTION OUTPUT:          00111000000100111111010001000110

       - Left XOR FUNCTION OUTPUT: 11001110000000110111011111110010

       - Next Round Left 32 Bits:  10010011000011110100010110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110000000110111011111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100111000000011011101111111001010010011000011110100010110010100

 > Processed Block:     1100111000000011011101111111001010010011000011110100010110010100



Plaintext Block: 7:                                      0010100110011111010111010101010110101010010101111111001100000011

!!!CBC: Previous Ciphertext:                             1100111000000011011101111111001010010011000011110100010110010100

!!!CBC: Current Block XOR with Previous Ciphertext:      1110011110011100001010101010011100111001010110001011011010010111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111100111000010101010100111

       - Right 32 Bits:            00111001010110001011011010010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       00111001010110001011011010010111
          - S-Box Result:     00010011100100101000000000111101   [per every group of 4-bits]
          - Split Into Two:   0001001110010010 [L] 1000000000111101 [R]
          - Swap Halves:      10000000001111010001001110010010
          - Bit Inversion:    01111111110000101110110001101101
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     11111100111001011111010011010001

          - FUNCTION OUTPUT:  11111100111001011111010011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111100111000010101010100111

       - FUNCTION OUTPUT:          11111100111001011111010011010001

       - Left XOR FUNCTION OUTPUT: 00011011011110011101111001110110

       - Next Round Left 32 Bits:  00111001010110001011011010010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011011110011101111001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001010110001011011010010111

       - Right 32 Bits:            00011011011110011101111001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       00011011011110011101111001110110
          - S-Box Result:     10101000110100110110110011010000   [per every group of 4-bits]
          - Split Into Two:   1010100011010011 [L] 0110110011010000 [R]
          - Swap Halves:      01101100110100001010100011010011
          - Bit Inversion:    10010011001011110101011100101100
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     00101101111101000110110101101110

          - FUNCTION OUTPUT:  00101101111101000110110101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001010110001011011010010111

       - FUNCTION OUTPUT:          00101101111101000110110101101110

       - Left XOR FUNCTION OUTPUT: 00010100101011001101101111111001

       - Next Round Left 32 Bits:  00011011011110011101111001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100101011001101101111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011011110011101111001110110

       - Right 32 Bits:            00010100101011001101101111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       00010100101011001101101111111001
          - S-Box Result:     10100111010001010110100010110011   [per every group of 4-bits]
          - Split Into Two:   1010011101000101 [L] 0110100010110011 [R]
          - Swap Halves:      01101000101100111010011101000101
          - Bit Inversion:    10010111010011000101100010111010
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     00000110111101100011010111011100

          - FUNCTION OUTPUT:  00000110111101100011010111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011011110011101111001110110

       - FUNCTION OUTPUT:          00000110111101100011010111011100

       - Left XOR FUNCTION OUTPUT: 00011101100011111110101110101010

       - Next Round Left 32 Bits:  00010100101011001101101111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101100011111110101110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100101011001101101111111001

       - Right 32 Bits:            00011101100011111110101110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       00011101100011111110101110101010
          - S-Box Result:     10100110001010111100100001000100   [per every group of 4-bits]
          - Split Into Two:   1010011000101011 [L] 1100100001000100 [R]
          - Swap Halves:      11001000010001001010011000101011
          - Bit Inversion:    00110111101110110101100111010100
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     01001001010000100000100111001011

          - FUNCTION OUTPUT:  01001001010000100000100111001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100101011001101101111111001

       - FUNCTION OUTPUT:          01001001010000100000100111001011

       - Left XOR FUNCTION OUTPUT: 01011101111011101101001000110010

       - Next Round Left 32 Bits:  00011101100011111110101110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101111011101101001000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101100011111110101110101010

       - Right 32 Bits:            01011101111011101101001000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       01011101111011101101001000110010
          - S-Box Result:     10010110110011000110111000011110   [per every group of 4-bits]
          - Split Into Two:   1001011011001100 [L] 0110111000011110 [R]
          - Swap Halves:      01101110000111101001011011001100
          - Bit Inversion:    10010001111000010110100100110011
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     00011100100100001000101000101111

          - FUNCTION OUTPUT:  00011100100100001000101000101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101100011111110101110101010

       - FUNCTION OUTPUT:          00011100100100001000101000101111

       - Left XOR FUNCTION OUTPUT: 00000001000111110110000110000101

       - Next Round Left 32 Bits:  01011101111011101101001000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001000111110110000110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101111011101101001000110010

       - Right 32 Bits:            00000001000111110110000110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       00000001000111110110000110000101
          - S-Box Result:     11111010101010110000101000101001   [per every group of 4-bits]
          - Split Into Two:   1111101010101011 [L] 0000101000101001 [R]
          - Swap Halves:      00001010001010011111101010101011
          - Bit Inversion:    11110101110101100000010101010100
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     10101000001111100010111110001111

          - FUNCTION OUTPUT:  10101000001111100010111110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101111011101101001000110010

       - FUNCTION OUTPUT:          10101000001111100010111110001111

       - Left XOR FUNCTION OUTPUT: 11110101110100001111110110111101

       - Next Round Left 32 Bits:  00000001000111110110000110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101110100001111110110111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001000111110110000110000101

       - Right 32 Bits:            11110101110100001111110110111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       11110101110100001111110110111101
          - S-Box Result:     10111001011011111011011010000110   [per every group of 4-bits]
          - Split Into Two:   1011100101101111 [L] 1011011010000110 [R]
          - Swap Halves:      10110110100001101011100101101111
          - Bit Inversion:    01001001011110010100011010010000
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     10000000110111101111111011110100

          - FUNCTION OUTPUT:  10000000110111101111111011110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001000111110110000110000101

       - FUNCTION OUTPUT:          10000000110111101111111011110100

       - Left XOR FUNCTION OUTPUT: 10000001110000011001111101110001

       - Next Round Left 32 Bits:  11110101110100001111110110111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001110000011001111101110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101110100001111110110111101

       - Right 32 Bits:            10000001110000011001111101110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       10000001110000011001111101110001
          - S-Box Result:     00101010010110100011101111011010   [per every group of 4-bits]
          - Split Into Two:   0010101001011010 [L] 0011101111011010 [R]
          - Swap Halves:      00111011110110100010101001011010
          - Bit Inversion:    11000100001001011101010110100101
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00100011011001101010100101111101

          - FUNCTION OUTPUT:  00100011011001101010100101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101110100001111110110111101

       - FUNCTION OUTPUT:          00100011011001101010100101111101

       - Left XOR FUNCTION OUTPUT: 11010110101101100101010011000000

       - Next Round Left 32 Bits:  10000001110000011001111101110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110101101100101010011000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001110000011001111101110001

       - Right 32 Bits:            11010110101101100101010011000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       11010110101101100101010011000000
          - S-Box Result:     01100000100000001001011101011111   [per every group of 4-bits]
          - Split Into Two:   0110000010000000 [L] 1001011101011111 [R]
          - Swap Halves:      10010111010111110110000010000000
          - Bit Inversion:    01101000101000001001111101111111
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     10101101000111011101111001011011

          - FUNCTION OUTPUT:  10101101000111011101111001011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001110000011001111101110001

       - FUNCTION OUTPUT:          10101101000111011101111001011011

       - Left XOR FUNCTION OUTPUT: 00101100110111000100000100101010

       - Next Round Left 32 Bits:  11010110101101100101010011000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100110111000100000100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110101101100101010011000000

       - Right 32 Bits:            00101100110111000100000100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       00101100110111000100000100101010
          - S-Box Result:     11100101011001010111101011100100   [per every group of 4-bits]
          - Split Into Two:   1110010101100101 [L] 0111101011100100 [R]
          - Swap Halves:      01111010111001001110010101100101
          - Bit Inversion:    10000101000110110001101010011010
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     00010111100000100111010011011111

          - FUNCTION OUTPUT:  00010111100000100111010011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110101101100101010011000000

       - FUNCTION OUTPUT:          00010111100000100111010011011111

       - Left XOR FUNCTION OUTPUT: 11000001001101000010000000011111

       - Next Round Left 32 Bits:  00101100110111000100000100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001001101000010000000011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100110111000100000100101010

       - Right 32 Bits:            11000001001101000010000000011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       11000001001101000010000000011111
          - S-Box Result:     01011010000101111110111110101011   [per every group of 4-bits]
          - Split Into Two:   0101101000010111 [L] 1110111110101011 [R]
          - Swap Halves:      11101111101010110101101000010111
          - Bit Inversion:    00010000010101001010010111101000
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     10111111101101000010010011101110

          - FUNCTION OUTPUT:  10111111101101000010010011101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100110111000100000100101010

       - FUNCTION OUTPUT:          10111111101101000010010011101110

       - Left XOR FUNCTION OUTPUT: 10010011011010000110010111000100

       - Next Round Left 32 Bits:  11000001001101000010000000011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011011010000110010111000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001001101000010000000011111

       - Right 32 Bits:            10010011011010000110010111000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       10010011011010000110010111000100
          - S-Box Result:     00110001000000100000100101010111   [per every group of 4-bits]
          - Split Into Two:   0011000100000010 [L] 0000100101010111 [R]
          - Swap Halves:      00001001010101110011000100000010
          - Bit Inversion:    11110110101010001100111011111101
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     11101010010010111011110001110011

          - FUNCTION OUTPUT:  11101010010010111011110001110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001001101000010000000011111

       - FUNCTION OUTPUT:          11101010010010111011110001110011

       - Left XOR FUNCTION OUTPUT: 00101011011111111001110001101100

       - Next Round Left 32 Bits:  10010011011010000110010111000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011011111111001110001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011011010000110010111000100

       - Right 32 Bits:            00101011011111111001110001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       00101011011111111001110001101100
          - S-Box Result:     11101000110110110011010100000101   [per every group of 4-bits]
          - Split Into Two:   1110100011011011 [L] 0011010100000101 [R]
          - Swap Halves:      00110101000001011110100011011011
          - Bit Inversion:    11001010111110100001011100100100
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     00011111110111101011010100110011

          - FUNCTION OUTPUT:  00011111110111101011010100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011011010000110010111000100

       - FUNCTION OUTPUT:          00011111110111101011010100110011

       - Left XOR FUNCTION OUTPUT: 10001100101101101101000011110111

       - Next Round Left 32 Bits:  00101011011111111001110001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100101101101101000011110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011011111111001110001101100

       - Right 32 Bits:            10001100101101101101000011110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       10001100101101101101000011110111
          - S-Box Result:     00100101100000000110111110111101   [per every group of 4-bits]
          - Split Into Two:   0010010110000000 [L] 0110111110111101 [R]
          - Swap Halves:      01101111101111010010010110000000
          - Bit Inversion:    10010000010000101101101001111111
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     11010111110110011110110000100111

          - FUNCTION OUTPUT:  11010111110110011110110000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011011111111001110001101100

       - FUNCTION OUTPUT:          11010111110110011110110000100111

       - Left XOR FUNCTION OUTPUT: 11111100101001100111000001001011

       - Next Round Left 32 Bits:  10001100101101101101000011110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100101001100111000001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100101101101101000011110111

       - Right 32 Bits:            11111100101001100111000001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       11111100101001100111000001001011
          - S-Box Result:     10110101010000001101111101111000   [per every group of 4-bits]
          - Split Into Two:   1011010101000000 [L] 1101111101111000 [R]
          - Swap Halves:      11011111011110001011010101000000
          - Bit Inversion:    00100000100001110100101010111111
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     10100011101000000101001000000011

          - FUNCTION OUTPUT:  10100011101000000101001000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100101101101101000011110111

       - FUNCTION OUTPUT:          10100011101000000101001000000011

       - Left XOR FUNCTION OUTPUT: 00101111000101101000001011110100

       - Next Round Left 32 Bits:  11111100101001100111000001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111000101101000001011110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100101001100111000001001011

       - Right 32 Bits:            00101111000101101000001011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       00101111000101101000001011110100
          - S-Box Result:     11101011101000000010111010110111   [per every group of 4-bits]
          - Split Into Two:   1110101110100000 [L] 0010111010110111 [R]
          - Swap Halves:      00101110101101111110101110100000
          - Bit Inversion:    11010001010010000001010001011111
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     01101111100100110010111000011101

          - FUNCTION OUTPUT:  01101111100100110010111000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100101001100111000001001011

       - FUNCTION OUTPUT:          01101111100100110010111000011101

       - Left XOR FUNCTION OUTPUT: 10010011001101010101111001010110

       - Next Round Left 32 Bits:  00101111000101101000001011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011001101010101111001010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001001100110101010111100101011000101111000101101000001011110100

 > Processed Block:     1001001100110101010111100101011000101111000101101000001011110100



Plaintext Block: 8:                                      1011010000001000101000101110000110001010100001110011011110011001

!!!CBC: Previous Ciphertext:                             1001001100110101010111100101011000101111000101101000001011110100

!!!CBC: Current Block XOR with Previous Ciphertext:      0010011100111101111111001011011110100101100100011011010101101101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111001111011111110010110111

       - Right 32 Bits:            10100101100100011011010101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       10100101100100011011010101101101
          - S-Box Result:     01001001001110101000100100000110   [per every group of 4-bits]
          - Split Into Two:   0100100100111010 [L] 1000100100000110 [R]
          - Swap Halves:      10001001000001100100100100111010
          - Bit Inversion:    01110110111110011011011011000101
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     11110101110111101010111001111001

          - FUNCTION OUTPUT:  11110101110111101010111001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111001111011111110010110111

       - FUNCTION OUTPUT:          11110101110111101010111001111001

       - Left XOR FUNCTION OUTPUT: 11010010111000110101001011001110

       - Next Round Left 32 Bits:  10100101100100011011010101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010111000110101001011001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101100100011011010101101101

       - Right 32 Bits:            11010010111000110101001011001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       11010010111000110101001011001110
          - S-Box Result:     01101110110000011001111001011100   [per every group of 4-bits]
          - Split Into Two:   0110111011000001 [L] 1001111001011100 [R]
          - Swap Halves:      10011110010111000110111011000001
          - Bit Inversion:    01100001101000111001000100111110
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11011111011110001010101101111100

          - FUNCTION OUTPUT:  11011111011110001010101101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101100100011011010101101101

       - FUNCTION OUTPUT:          11011111011110001010101101111100

       - Left XOR FUNCTION OUTPUT: 01111010111010010001111000010001

       - Next Round Left 32 Bits:  11010010111000110101001011001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010111010010001111000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010111000110101001011001110

       - Right 32 Bits:            01111010111010010001111000010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       01111010111010010001111000010001
          - S-Box Result:     11010100110000111010110010101010   [per every group of 4-bits]
          - Split Into Two:   1101010011000011 [L] 1010110010101010 [R]
          - Swap Halves:      10101100101010101101010011000011
          - Bit Inversion:    01010011010101010010101100111100
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     11000010111011110100011001011010

          - FUNCTION OUTPUT:  11000010111011110100011001011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010111000110101001011001110

       - FUNCTION OUTPUT:          11000010111011110100011001011010

       - Left XOR FUNCTION OUTPUT: 00010000000011000001010010010100

       - Next Round Left 32 Bits:  01111010111010010001111000010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000000011000001010010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010111010010001111000010001

       - Right 32 Bits:            00010000000011000001010010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       00010000000011000001010010010100
          - S-Box Result:     10101111111101011010011100110111   [per every group of 4-bits]
          - Split Into Two:   1010111111110101 [L] 1010011100110111 [R]
          - Swap Halves:      10100111001101111010111111110101
          - Bit Inversion:    01011000110010000101000000001010
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     00100110001100010000000000010101

          - FUNCTION OUTPUT:  00100110001100010000000000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010111010010001111000010001

       - FUNCTION OUTPUT:          00100110001100010000000000010101

       - Left XOR FUNCTION OUTPUT: 01011100110110000001111000000100

       - Next Round Left 32 Bits:  00010000000011000001010010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100110110000001111000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000000011000001010010010100

       - Right 32 Bits:            01011100110110000001111000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       01011100110110000001111000000100
          - S-Box Result:     10010101011000101010110011110111   [per every group of 4-bits]
          - Split Into Two:   1001010101100010 [L] 1010110011110111 [R]
          - Swap Halves:      10101100111101111001010101100010
          - Bit Inversion:    01010011000010000110101010011101
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     11011110011110011000100110000001

          - FUNCTION OUTPUT:  11011110011110011000100110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000000011000001010010010100

       - FUNCTION OUTPUT:          11011110011110011000100110000001

       - Left XOR FUNCTION OUTPUT: 11001110011101011001110100010101

       - Next Round Left 32 Bits:  01011100110110000001111000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110011101011001110100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100110110000001111000000100

       - Right 32 Bits:            11001110011101011001110100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       11001110011101011001110100010101
          - S-Box Result:     01011100110110010011011010101001   [per every group of 4-bits]
          - Split Into Two:   0101110011011001 [L] 0011011010101001 [R]
          - Swap Halves:      00110110101010010101110011011001
          - Bit Inversion:    11001001010101101010001100100110
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     10010100101111101000100111111101

          - FUNCTION OUTPUT:  10010100101111101000100111111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100110110000001111000000100

       - FUNCTION OUTPUT:          10010100101111101000100111111101

       - Left XOR FUNCTION OUTPUT: 11001000011001101001011111111001

       - Next Round Left 32 Bits:  11001110011101011001110100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000011001101001011111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110011101011001110100010101

       - Right 32 Bits:            11001000011001101001011111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       11001000011001101001011111111001
          - S-Box Result:     01010010000000000011110110110011   [per every group of 4-bits]
          - Split Into Two:   0101001000000000 [L] 0011110110110011 [R]
          - Swap Halves:      00111101101100110101001000000000
          - Bit Inversion:    11000010010011001010110111111111
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     00001011111010110001010110011011

          - FUNCTION OUTPUT:  00001011111010110001010110011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110011101011001110100010101

       - FUNCTION OUTPUT:          00001011111010110001010110011011

       - Left XOR FUNCTION OUTPUT: 11000101100111101000100010001110

       - Next Round Left 32 Bits:  11001000011001101001011111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101100111101000100010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000011001101001011111111001

       - Right 32 Bits:            11000101100111101000100010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       11000101100111101000100010001110
          - S-Box Result:     01011001001111000010001000101100   [per every group of 4-bits]
          - Split Into Two:   0101100100111100 [L] 0010001000101100 [R]
          - Swap Halves:      00100010001011000101100100111100
          - Bit Inversion:    11011101110100111010011011000011
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     00111010100100001101101000011011

          - FUNCTION OUTPUT:  00111010100100001101101000011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000011001101001011111111001

       - FUNCTION OUTPUT:          00111010100100001101101000011011

       - Left XOR FUNCTION OUTPUT: 11110010111101100100110111100010

       - Next Round Left 32 Bits:  11000101100111101000100010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010111101100100110111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101100111101000100010001110

       - Right 32 Bits:            11110010111101100100110111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       11110010111101100100110111100010
          - S-Box Result:     10111110101100000111011011001110   [per every group of 4-bits]
          - Split Into Two:   1011111010110000 [L] 0111011011001110 [R]
          - Swap Halves:      01110110110011101011111010110000
          - Bit Inversion:    10001001001100010100000101001111
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     01001100100011000000000001101011

          - FUNCTION OUTPUT:  01001100100011000000000001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101100111101000100010001110

       - FUNCTION OUTPUT:          01001100100011000000000001101011

       - Left XOR FUNCTION OUTPUT: 10001001000100101000100011100101

       - Next Round Left 32 Bits:  11110010111101100100110111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001000100101000100011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010111101100100110111100010

       - Right 32 Bits:            10001001000100101000100011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       10001001000100101000100011100101
          - S-Box Result:     00100011101011100010001011001001   [per every group of 4-bits]
          - Split Into Two:   0010001110101110 [L] 0010001011001001 [R]
          - Swap Halves:      00100010110010010010001110101110
          - Bit Inversion:    11011101001101101101110001010001
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     01001111101011111011001000010100

          - FUNCTION OUTPUT:  01001111101011111011001000010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010111101100100110111100010

       - FUNCTION OUTPUT:          01001111101011111011001000010100

       - Left XOR FUNCTION OUTPUT: 10111101010110011111111111110110

       - Next Round Left 32 Bits:  10001001000100101000100011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101010110011111111111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001000100101000100011100101

       - Right 32 Bits:            10111101010110011111111111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       10111101010110011111111111110110
          - S-Box Result:     10000110100100111011101110110000   [per every group of 4-bits]
          - Split Into Two:   1000011010010011 [L] 1011101110110000 [R]
          - Swap Halves:      10111011101100001000011010010011
          - Bit Inversion:    01000100010011110111100101101100
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     11101011101011111111100001101010

          - FUNCTION OUTPUT:  11101011101011111111100001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001000100101000100011100101

       - FUNCTION OUTPUT:          11101011101011111111100001101010

       - Left XOR FUNCTION OUTPUT: 01100010101111010111000010001111

       - Next Round Left 32 Bits:  10111101010110011111111111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010101111010111000010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101010110011111111111110110

       - Right 32 Bits:            01100010101111010111000010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       01100010101111010111000010001111
          - S-Box Result:     00001110100001101101111100101011   [per every group of 4-bits]
          - Split Into Two:   0000111010000110 [L] 1101111100101011 [R]
          - Swap Halves:      11011111001010110000111010000110
          - Bit Inversion:    00100000110101001111000101111001
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     00111100001101111000001111110111

          - FUNCTION OUTPUT:  00111100001101111000001111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101010110011111111111110110

       - FUNCTION OUTPUT:          00111100001101111000001111110111

       - Left XOR FUNCTION OUTPUT: 10000001011011100111110000000001

       - Next Round Left 32 Bits:  01100010101111010111000010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001011011100111110000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010101111010111000010001111

       - Right 32 Bits:            10000001011011100111110000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       10000001011011100111110000000001
          - S-Box Result:     00101010000011001101010111111010   [per every group of 4-bits]
          - Split Into Two:   0010101000001100 [L] 1101010111111010 [R]
          - Swap Halves:      11010101111110100010101000001100
          - Bit Inversion:    00101010000001011101010111110011
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     11111111001000010111011111100100

          - FUNCTION OUTPUT:  11111111001000010111011111100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010101111010111000010001111

       - FUNCTION OUTPUT:          11111111001000010111011111100100

       - Left XOR FUNCTION OUTPUT: 10011101100111000000011101101011

       - Next Round Left 32 Bits:  10000001011011100111110000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101100111000000011101101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001011011100111110000000001

       - Right 32 Bits:            10011101100111000000011101101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       10011101100111000000011101101011
          - S-Box Result:     00110110001101011111110100001000   [per every group of 4-bits]
          - Split Into Two:   0011011000110101 [L] 1111110100001000 [R]
          - Swap Halves:      11111101000010000011011000110101
          - Bit Inversion:    00000010111101111100100111001010
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     01000101011011001111111110010010

          - FUNCTION OUTPUT:  01000101011011001111111110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001011011100111110000000001

       - FUNCTION OUTPUT:          01000101011011001111111110010010

       - Left XOR FUNCTION OUTPUT: 11000100000000101000001110010011

       - Next Round Left 32 Bits:  10011101100111000000011101101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100000000101000001110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101100111000000011101101011

       - Right 32 Bits:            11000100000000101000001110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       11000100000000101000001110010011
          - S-Box Result:     01010111111111100010000100110001   [per every group of 4-bits]
          - Split Into Two:   0101011111111110 [L] 0010000100110001 [R]
          - Swap Halves:      00100001001100010101011111111110
          - Bit Inversion:    11011110110011101010100000000001
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01011101111010011011000010111101

          - FUNCTION OUTPUT:  01011101111010011011000010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101100111000000011101101011

       - FUNCTION OUTPUT:          01011101111010011011000010111101

       - Left XOR FUNCTION OUTPUT: 11000000011101011011011111010110

       - Next Round Left 32 Bits:  11000100000000101000001110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000011101011011011111010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100000000101000001110010011

       - Right 32 Bits:            11000000011101011011011111010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11000000011101011011011111010110
          - S-Box Result:     01011111110110011000110101100000   [per every group of 4-bits]
          - Split Into Two:   0101111111011001 [L] 1000110101100000 [R]
          - Swap Halves:      10001101011000000101111111011001
          - Bit Inversion:    01110010100111111010000000100110
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11001100010001001001101001100100

          - FUNCTION OUTPUT:  11001100010001001001101001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100000000101000001110010011

       - FUNCTION OUTPUT:          11001100010001001001101001100100

       - Left XOR FUNCTION OUTPUT: 00001000010001100001100111110111

       - Next Round Left 32 Bits:  11000000011101011011011111010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000010001100001100111110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000100001000110000110011111011111000000011101011011011111010110

 > Processed Block:     0000100001000110000110011111011111000000011101011011011111010110



Plaintext Block: 9:                                      1111010100100110101100101010101001010101000010010010111000011000

!!!CBC: Previous Ciphertext:                             0000100001000110000110011111011111000000011101011011011111010110

!!!CBC: Current Block XOR with Previous Ciphertext:      1111110101100000101010110101110110010101011111001001100111001110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101011000001010101101011101

       - Right 32 Bits:            10010101011111001001100111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 1]
          - Input Half:       10010101011111001001100111001110
          - S-Box Result:     00111001110101010011001101011100   [per every group of 4-bits]
          - Split Into Two:   0011100111010101 [L] 0011001101011100 [R]
          - Swap Halves:      00110011010111000011100111010101
          - Bit Inversion:    11001100101000111100011000101010
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     01001111100001001101111010010110

          - FUNCTION OUTPUT:  01001111100001001101111010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101011000001010101101011101

       - FUNCTION OUTPUT:          01001111100001001101111010010110

       - Left XOR FUNCTION OUTPUT: 10110010111001000111010111001011

       - Next Round Left 32 Bits:  10010101011111001001100111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010111001000111010111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101011111001001100111001110

       - Right 32 Bits:            10110010111001000111010111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 2]
          - Input Half:       10110010111001000111010111001011
          - S-Box Result:     10001110110001111101100101011000   [per every group of 4-bits]
          - Split Into Two:   1000111011000111 [L] 1101100101011000 [R]
          - Swap Halves:      11011001010110001000111011000111
          - Bit Inversion:    00100110101001110111000100111000
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     10011000011111000100101101111010

          - FUNCTION OUTPUT:  10011000011111000100101101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101011111001001100111001110

       - FUNCTION OUTPUT:          10011000011111000100101101111010

       - Left XOR FUNCTION OUTPUT: 00001101000000001101001010110100

       - Next Round Left 32 Bits:  10110010111001000111010111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101000000001101001010110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010111001000111010111001011

       - Right 32 Bits:            00001101000000001101001010110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001100100010001011100001011001001010111011110011101001   [Subkey: 3]
          - Input Half:       00001101000000001101001010110100
          - S-Box Result:     11110110111111110110111010000111   [per every group of 4-bits]
          - Split Into Two:   1111011011111111 [L] 0110111010000111 [R]
          - Swap Halves:      01101110100001111111011011111111
          - Bit Inversion:    10010001011110000000100100000000
          - Compressed Key:   10010001101110100110110101100110   [done by compression P-Box]
          - XOR with Key:     00000000110000100110010001100110

          - FUNCTION OUTPUT:  00000000110000100110010001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010111001000111010111001011

       - FUNCTION OUTPUT:          00000000110000100110010001100110

       - Left XOR FUNCTION OUTPUT: 10110010001001100001000110101101

       - Next Round Left 32 Bits:  00001101000000001101001010110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010001001100001000110101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101000000001101001010110100

       - Right 32 Bits:            10110010001001100001000110101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110111011101000111101001101101010001000011000101101111   [Subkey: 4]
          - Input Half:       10110010001001100001000110101101
          - S-Box Result:     10001110111000001010101001000110   [per every group of 4-bits]
          - Split Into Two:   1000111011100000 [L] 1010101001000110 [R]
          - Swap Halves:      10101010010001101000111011100000
          - Bit Inversion:    01010101101110010111000100011111
          - Compressed Key:   01111110111110010101000000011111   [done by compression P-Box]
          - XOR with Key:     00101011010000000010000100000000

          - FUNCTION OUTPUT:  00101011010000000010000100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101000000001101001010110100

       - FUNCTION OUTPUT:          00101011010000000010000100000000

       - Left XOR FUNCTION OUTPUT: 00100110010000001111001110110100

       - Next Round Left 32 Bits:  10110010001001100001000110101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110010000001111001110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010001001100001000110101101

       - Right 32 Bits:            00100110010000001111001110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001000101110000101100100101011101111001110100100001100   [Subkey: 5]
          - Input Half:       00100110010000001111001110110100
          - S-Box Result:     11100000011111111011000110000111   [per every group of 4-bits]
          - Split Into Two:   1110000001111111 [L] 1011000110000111 [R]
          - Swap Halves:      10110001100001111110000001111111
          - Bit Inversion:    01001110011110000001111110000000
          - Compressed Key:   10001101011100011110001100011100   [done by compression P-Box]
          - XOR with Key:     11000011000010011111110010011100

          - FUNCTION OUTPUT:  11000011000010011111110010011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010001001100001000110101101

       - FUNCTION OUTPUT:          11000011000010011111110010011100

       - Left XOR FUNCTION OUTPUT: 01110001001011111110110100110001

       - Next Round Left 32 Bits:  00100110010000001111001110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001001011111110110100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110010000001111001110110100

       - Right 32 Bits:            01110001001011111110110100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100011110100110110101000100001100010110111100110111   [Subkey: 6]
          - Input Half:       01110001001011111110110100110001
          - S-Box Result:     11011010111010111100011000011010   [per every group of 4-bits]
          - Split Into Two:   1101101011101011 [L] 1100011000011010 [R]
          - Swap Halves:      11000110000110101101101011101011
          - Bit Inversion:    00111001111001010010010100010100
          - Compressed Key:   01011101111010000010101011011011   [done by compression P-Box]
          - XOR with Key:     01100100000011010000111111001111

          - FUNCTION OUTPUT:  01100100000011010000111111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110010000001111001110110100

       - FUNCTION OUTPUT:          01100100000011010000111111001111

       - Left XOR FUNCTION OUTPUT: 01000010010011011111110001111011

       - Next Round Left 32 Bits:  01110001001011111110110100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010010011011111110001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001001011111110110100110001

       - Right 32 Bits:            01000010010011011111110001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111000010110010010101110111100111010010000110010001000   [Subkey: 7]
          - Input Half:       01000010010011011111110001111011
          - S-Box Result:     01111110011101101011010111011000   [per every group of 4-bits]
          - Split Into Two:   0111111001110110 [L] 1011010111011000 [R]
          - Swap Halves:      10110101110110000111111001110110
          - Bit Inversion:    01001010001001111000000110001001
          - Compressed Key:   11001001101001111011100001100100   [done by compression P-Box]
          - XOR with Key:     10000011100000000011100111101101

          - FUNCTION OUTPUT:  10000011100000000011100111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001001011111110110100110001

       - FUNCTION OUTPUT:          10000011100000000011100111101101

       - Left XOR FUNCTION OUTPUT: 11110010101011111101010011011100

       - Next Round Left 32 Bits:  01000010010011011111110001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010101011111101010011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010010011011111110001111011

       - Right 32 Bits:            11110010101011111101010011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011011010100010000110001011011110011011101110100   [Subkey: 8]
          - Input Half:       11110010101011111101010011011100
          - S-Box Result:     10111110010010110110011101100101   [per every group of 4-bits]
          - Split Into Two:   1011111001001011 [L] 0110011101100101 [R]
          - Swap Halves:      01100111011001011011111001001011
          - Bit Inversion:    10011000100110100100000110110100
          - Compressed Key:   11100111010000110111110011011000   [done by compression P-Box]
          - XOR with Key:     01111111110110010011110101101100

          - FUNCTION OUTPUT:  01111111110110010011110101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010010011011111110001111011

       - FUNCTION OUTPUT:          01111111110110010011110101101100

       - Left XOR FUNCTION OUTPUT: 00111101100101001100000100010111

       - Next Round Left 32 Bits:  11110010101011111101010011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101100101001100000100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010101011111101010011011100

       - Right 32 Bits:            00111101100101001100000100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001010111011110011101001000011001000100010111000   [Subkey: 9]
          - Input Half:       00111101100101001100000100010111
          - S-Box Result:     00010110001101110101101010101101   [per every group of 4-bits]
          - Split Into Two:   0001011000110111 [L] 0101101010101101 [R]
          - Swap Halves:      01011010101011010001011000110111
          - Bit Inversion:    10100101010100101110100111001000
          - Compressed Key:   11000101101111010100000100100100   [done by compression P-Box]
          - XOR with Key:     01100000111011111010100011101100

          - FUNCTION OUTPUT:  01100000111011111010100011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010101011111101010011011100

       - FUNCTION OUTPUT:          01100000111011111010100011101100

       - Left XOR FUNCTION OUTPUT: 10010010010000000111110000110000

       - Next Round Left 32 Bits:  00111101100101001100000100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010010000000111110000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101100101001100000100010111

       - Right 32 Bits:            10010010010000000111110000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101010001000011000101101111001101110111010001111010   [Subkey: 10]
          - Input Half:       10010010010000000111110000110000
          - S-Box Result:     00111110011111111101010100011111   [per every group of 4-bits]
          - Split Into Two:   0011111001111111 [L] 1101010100011111 [R]
          - Swap Halves:      11010101000111110011111001111111
          - Bit Inversion:    00101010111000001100000110000000
          - Compressed Key:   10010010100110010110111001000101   [done by compression P-Box]
          - XOR with Key:     10111000011110011010111111000101

          - FUNCTION OUTPUT:  10111000011110011010111111000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101100101001100000100010111

       - FUNCTION OUTPUT:          10111000011110011010111111000101

       - Left XOR FUNCTION OUTPUT: 10000101111011010110111011010010

       - Next Round Left 32 Bits:  10010010010000000111110000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101111011010110111011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010010000000111110000110000

       - Right 32 Bits:            10000101111011010110111011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101011101111001110100100001100100010001011100001011001   [Subkey: 11]
          - Input Half:       10000101111011010110111011010010
          - S-Box Result:     00101001110001100000110001101110   [per every group of 4-bits]
          - Split Into Two:   0010100111000110 [L] 0000110001101110 [R]
          - Swap Halves:      00001100011011100010100111000110
          - Bit Inversion:    11110011100100011101011000111001
          - Compressed Key:   10101111111000001000000100000110   [done by compression P-Box]
          - XOR with Key:     01011100011100010101011100111111

          - FUNCTION OUTPUT:  01011100011100010101011100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010010000000111110000110000

       - FUNCTION OUTPUT:          01011100011100010101011100111111

       - Left XOR FUNCTION OUTPUT: 11001110001100010010101100001111

       - Next Round Left 32 Bits:  10000101111011010110111011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110001100010010101100001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101111011010110111011010010

       - Right 32 Bits:            11001110001100010010101100001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100001100010110111100110111011101000111101001101101   [Subkey: 12]
          - Input Half:       11001110001100010010101100001111
          - S-Box Result:     01011100000110101110100011111011   [per every group of 4-bits]
          - Split Into Two:   0101110000011010 [L] 1110100011111011 [R]
          - Swap Halves:      11101000111110110101110000011010
          - Bit Inversion:    00010111000001001010001111100101
          - Compressed Key:   00011100111000110111001010001110   [done by compression P-Box]
          - XOR with Key:     00001011111001111101000101101011

          - FUNCTION OUTPUT:  00001011111001111101000101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101111011010110111011010010

       - FUNCTION OUTPUT:          00001011111001111101000101101011

       - Left XOR FUNCTION OUTPUT: 10001110000010101011111110111001

       - Next Round Left 32 Bits:  11001110001100010010101100001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110000010101011111110111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110001100010010101100001111

       - Right 32 Bits:            10001110000010101011111110111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111010010000110010001000101110000101100100101011   [Subkey: 13]
          - Input Half:       10001110000010101011111110111001
          - S-Box Result:     00101100111101001000101110000011   [per every group of 4-bits]
          - Split Into Two:   0010110011110100 [L] 1000101110000011 [R]
          - Swap Halves:      10001011100000110010110011110100
          - Bit Inversion:    01110100011111001101001100001011
          - Compressed Key:   11010101001001001010001000010111   [done by compression P-Box]
          - XOR with Key:     10100001010110000111000100011100

          - FUNCTION OUTPUT:  10100001010110000111000100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110001100010010101100001111

       - FUNCTION OUTPUT:          10100001010110000111000100011100

       - Left XOR FUNCTION OUTPUT: 01101111011010010101101000010011

       - Next Round Left 32 Bits:  10001110000010101011111110111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111011010010101101000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110000010101011111110111001

       - Right 32 Bits:            01101111011010010101101000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011011110011011101110100011110100110110101000100   [Subkey: 14]
          - Input Half:       01101111011010010101101000010011
          - S-Box Result:     00001011000000111001010010100001   [per every group of 4-bits]
          - Split Into Two:   0000101100000011 [L] 1001010010100001 [R]
          - Swap Halves:      10010100101000010000101100000011
          - Bit Inversion:    01101011010111101111010011111100
          - Compressed Key:   01000111100110110011011001011000   [done by compression P-Box]
          - XOR with Key:     00101100110001011100001010100100

          - FUNCTION OUTPUT:  00101100110001011100001010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110000010101011111110111001

       - FUNCTION OUTPUT:          00101100110001011100001010100100

       - Left XOR FUNCTION OUTPUT: 10100010110011110111110100011101

       - Next Round Left 32 Bits:  01101111011010010101101000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010110011110111110100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111011010010101101000010011

       - Right 32 Bits:            10100010110011110111110100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001000011001000100010111000010110010010101110111100   [Subkey: 15]
          - Input Half:       10100010110011110111110100011101
          - S-Box Result:     01001110010110111101011010100110   [per every group of 4-bits]
          - Split Into Two:   0100111001011011 [L] 1101011010100110 [R]
          - Swap Halves:      11010110101001100100111001011011
          - Bit Inversion:    00101001010110011011000110100100
          - Compressed Key:   10000011001001110001100010111100   [done by compression P-Box]
          - XOR with Key:     10101010011111101010100100011000

          - FUNCTION OUTPUT:  10101010011111101010100100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111011010010101101000010011

       - FUNCTION OUTPUT:          10101010011111101010100100011000

       - Left XOR FUNCTION OUTPUT: 11000101000101111111001100001011

       - Next Round Left 32 Bits:  10100010110011110111110100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101000101111111001100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010110011110111110100011101

       - Right 32 Bits:            11000101000101111111001100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111001101110111010001111010011011010100010000110001   [Subkey: 16]
          - Input Half:       11000101000101111111001100001011
          - S-Box Result:     01011001101011011011000111111000   [per every group of 4-bits]
          - Split Into Two:   0101100110101101 [L] 1011000111111000 [R]
          - Swap Halves:      10110001111110000101100110101101
          - Bit Inversion:    01001110000001111010011001010010
          - Compressed Key:   10111110110110110011101001000010   [done by compression P-Box]
          - XOR with Key:     11110000110111001001110000010000

          - FUNCTION OUTPUT:  11110000110111001001110000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010110011110111110100011101

       - FUNCTION OUTPUT:          11110000110111001001110000010000

       - Left XOR FUNCTION OUTPUT: 01010010000100111110000100001101

       - Next Round Left 32 Bits:  11000101000101111111001100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010000100111110000100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101001000010011111000010000110111000101000101111111001100001011

 > Processed Block:     0101001000010011111000010000110111000101000101111111001100001011




BLOCKS IN ASCII:             ?$tzn?˝Ø≤Á¶WÚY¬hÃÏÙ¢P?—=ÊSÒ8v§»Óæ∫ŒwÚ?E??5^V/?ÙF˜¿u∑÷R·≈Û

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 0UWh2Td
In Binary:  00110000010101010101011101101000001100100101010001100100

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 11111010101010101000100101111100110110101011100110111100
Subkey 2  : 01010101010101110110100000110010010101000110010000110000
Subkey 3  : 10101010100010010111110011011010101110011011110011111010
Subkey 4  : 01010111011010000011001001010100011001000011000001010101
Subkey 5  : 10001001011111001101101010111001101111001111101010101010
Subkey 6  : 01101000001100100101010001100100001100000101010101010111
Subkey 7  : 01111100110110101011100110111100111110101010101010001001
Subkey 8  : 00110010010101000110010000110000010101010101011101101000
Subkey 9  : 11011010101110011011110011111010101010101000100101111100
Subkey 10 : 01010100011001000011000001010101010101110110100000110010
Subkey 11 : 10111001101111001111101010101010100010010111110011011010
Subkey 12 : 01100100001100000101010101010111011010000011001001010100
Subkey 13 : 10111100111110101010101010001001011111001101101010111001
Subkey 14 : 00110000010101010101011101101000001100100101010001100100
Subkey 15 : 11111010101010101000100101111100110110101011100110111100
Subkey 16 : 01010101010101110110100000110010010101000110010000110000

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ?$tzn?˝Ø≤Á¶WÚY¬hÃÏÙ¢P?—=ÊSÒ8v§»Óæ∫ŒwÚ?E??5^V/?ÙF˜¿u∑÷R·≈Û

Data padded with spaces : ?$tzn?˝Ø≤Á¶WÚY¬hÃÏÙ¢P?—=ÊSÒ8v§»Óæ∫ŒwÚ?E??5^V/?ÙF˜¿u∑÷R·≈Û[Padded with '0' spaces]

Data in ASCII           : 136,36,6,116,122,110,17,63,253,175,178,231,166,27,87,242,89,194,104,204,236,244,162,80,158,209,61,26,230,83,241,56,118,164,200,31,238,30,190,186,206,3,119,242,147,15,69,148,147,53,94,86,47,22,130,244,8,70,25,247,192,117,183,214,82,19,225,13,197,23,243,11,

Data in Binary          : 10001000,00100100,00000110,01110100,01111010,01101110,00010001,00111111,11111101,10101111,10110010,11100111,10100110,00011011,01010111,11110010,01011001,11000010,01101000,11001100,11101100,11110100,10100010,01010000,10011110,11010001,00111101,00011010,11100110,01010011,11110001,00111000,01110110,10100100,11001000,00011111,11101110,00011110,10111110,10111010,11001110,00000011,01110111,11110010,10010011,00001111,01000101,10010100,10010011,00110101,01011110,01010110,00101111,00010110,10000010,11110100,00001000,01000110,00011001,11110111,11000000,01110101,10110111,11010110,01010010,00010011,11100001,00001101,11000101,00010111,11110011,00001011,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011100101110110001101110101001100110011011000100011000001100110)

Ciphertext Block 1:                                      1000100000100100000001100111010001111010011011100001000100111111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000001001000000011001110100

       - Right 32 Bits:            01111010011011100001000100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       01111010011011100001000100111111
          - S-Box Result:     11010100000011001010101000011011   [per every group of 4-bits]
          - Split Into Two:   1101010000001100 [L] 1010101000011011 [R]
          - Swap Halves:      10101010000110111101010000001100
          - Bit Inversion:    01010101111001000010101111110011
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00001111000001110011100110110011

          - FUNCTION OUTPUT:  00001111000001110011100110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000001001000000011001110100

       - FUNCTION OUTPUT:          00001111000001110011100110110011

       - Left XOR FUNCTION OUTPUT: 10000111001000110011111111000111

       - Next Round Left 32 Bits:  01111010011011100001000100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111001000110011111111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010011011100001000100111111

       - Right 32 Bits:            10000111001000110011111111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       10000111001000110011111111000111
          - S-Box Result:     00101101111000010001101101011101   [per every group of 4-bits]
          - Split Into Two:   0010110111100001 [L] 0001101101011101 [R]
          - Swap Halves:      00011011010111010010110111100001
          - Bit Inversion:    11100100101000101101001000011110
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     00000001100010010100011100100010

          - FUNCTION OUTPUT:  00000001100010010100011100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010011011100001000100111111

       - FUNCTION OUTPUT:          00000001100010010100011100100010

       - Left XOR FUNCTION OUTPUT: 01111011111001110101011000011101

       - Next Round Left 32 Bits:  10000111001000110011111111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011111001110101011000011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111001000110011111111000111

       - Right 32 Bits:            01111011111001110101011000011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       01111011111001110101011000011101
          - S-Box Result:     11011000110011011001000010100110   [per every group of 4-bits]
          - Split Into Two:   1101100011001101 [L] 1001000010100110 [R]
          - Swap Halves:      10010000101001101101100011001101
          - Bit Inversion:    01101111010110010010011100110010
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     00100101000000000000000101111010

          - FUNCTION OUTPUT:  00100101000000000000000101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111001000110011111111000111

       - FUNCTION OUTPUT:          00100101000000000000000101111010

       - Left XOR FUNCTION OUTPUT: 10100010001000110011111010111101

       - Next Round Left 32 Bits:  01111011111001110101011000011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010001000110011111010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011111001110101011000011101

       - Right 32 Bits:            10100010001000110011111010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       10100010001000110011111010111101
          - S-Box Result:     01001110111000010001110010000110   [per every group of 4-bits]
          - Split Into Two:   0100111011100001 [L] 0001110010000110 [R]
          - Swap Halves:      00011100100001100100111011100001
          - Bit Inversion:    11100011011110011011000100011110
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     00111110110111011100001010111000

          - FUNCTION OUTPUT:  00111110110111011100001010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011111001110101011000011101

       - FUNCTION OUTPUT:          00111110110111011100001010111000

       - Left XOR FUNCTION OUTPUT: 01000101001110101001010010100101

       - Next Round Left 32 Bits:  10100010001000110011111010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101001110101001010010100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010001000110011111010111101

       - Right 32 Bits:            01000101001110101001010010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       01000101001110101001010010100101
          - S-Box Result:     01111001000101000011011101001001   [per every group of 4-bits]
          - Split Into Two:   0111100100010100 [L] 0011011101001001 [R]
          - Swap Halves:      00110111010010010111100100010100
          - Bit Inversion:    11001000101101101000011011101011
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     11010100111011001111011001100011

          - FUNCTION OUTPUT:  11010100111011001111011001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010001000110011111010111101

       - FUNCTION OUTPUT:          11010100111011001111011001100011

       - Left XOR FUNCTION OUTPUT: 01110110110011111100100011011110

       - Next Round Left 32 Bits:  01000101001110101001010010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110110011111100100011011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101001110101001010010100101

       - Right 32 Bits:            01110110110011111100100011011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       01110110110011111100100011011110
          - S-Box Result:     11010000010110110101001001101100   [per every group of 4-bits]
          - Split Into Two:   1101000001011011 [L] 0101001001101100 [R]
          - Swap Halves:      01010010011011001101000001011011
          - Bit Inversion:    10101101100100110010111110100100
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     01100010011001101010010111000001

          - FUNCTION OUTPUT:  01100010011001101010010111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101001110101001010010100101

       - FUNCTION OUTPUT:          01100010011001101010010111000001

       - Left XOR FUNCTION OUTPUT: 00100111010111000011000101100100

       - Next Round Left 32 Bits:  01110110110011111100100011011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111010111000011000101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110110011111100100011011110

       - Right 32 Bits:            00100111010111000011000101100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       00100111010111000011000101100100
          - S-Box Result:     11101101100101010001101000000111   [per every group of 4-bits]
          - Split Into Two:   1110110110010101 [L] 0001101000000111 [R]
          - Swap Halves:      00011010000001111110110110010101
          - Bit Inversion:    11100101111110000001001001101010
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     10110011011000100100110001101011

          - FUNCTION OUTPUT:  10110011011000100100110001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110110011111100100011011110

       - FUNCTION OUTPUT:          10110011011000100100110001101011

       - Left XOR FUNCTION OUTPUT: 11000101101011011000010010110101

       - Next Round Left 32 Bits:  00100111010111000011000101100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101101011011000010010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111010111000011000101100100

       - Right 32 Bits:            11000101101011011000010010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       11000101101011011000010010110101
          - S-Box Result:     01011001010001100010011110001001   [per every group of 4-bits]
          - Split Into Two:   0101100101000110 [L] 0010011110001001 [R]
          - Swap Halves:      00100111100010010101100101000110
          - Bit Inversion:    11011000011101101010011010111001
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     00110101110010010000001110100101

          - FUNCTION OUTPUT:  00110101110010010000001110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111010111000011000101100100

       - FUNCTION OUTPUT:          00110101110010010000001110100101

       - Left XOR FUNCTION OUTPUT: 00010010100101010011001011000001

       - Next Round Left 32 Bits:  11000101101011011000010010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010100101010011001011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101101011011000010010110101

       - Right 32 Bits:            00010010100101010011001011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       00010010100101010011001011000001
          - S-Box Result:     10101110001110010001111001011010   [per every group of 4-bits]
          - Split Into Two:   1010111000111001 [L] 0001111001011010 [R]
          - Swap Halves:      00011110010110101010111000111001
          - Bit Inversion:    11100001101001010101000111000110
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     10001011011001100100101100010010

          - FUNCTION OUTPUT:  10001011011001100100101100010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101101011011000010010110101

       - FUNCTION OUTPUT:          10001011011001100100101100010010

       - Left XOR FUNCTION OUTPUT: 01001110110010111100111110100111

       - Next Round Left 32 Bits:  00010010100101010011001011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110110010111100111110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010100101010011001011000001

       - Right 32 Bits:            01001110110010111100111110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       01001110110010111100111110100111
          - S-Box Result:     01111100010110000101101101001101   [per every group of 4-bits]
          - Split Into Two:   0111110001011000 [L] 0101101101001101 [R]
          - Swap Halves:      01011011010011010111110001011000
          - Bit Inversion:    10100100101100101000001110100111
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     01111101000001010011011000000001

          - FUNCTION OUTPUT:  01111101000001010011011000000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010100101010011001011000001

       - FUNCTION OUTPUT:          01111101000001010011011000000001

       - Left XOR FUNCTION OUTPUT: 01101111100100000000010011000000

       - Next Round Left 32 Bits:  01001110110010111100111110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111100100000000010011000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110110010111100111110100111

       - Right 32 Bits:            01101111100100000000010011000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       01101111100100000000010011000000
          - S-Box Result:     00001011001111111111011101011111   [per every group of 4-bits]
          - Split Into Two:   0000101100111111 [L] 1111011101011111 [R]
          - Swap Halves:      11110111010111110000101100111111
          - Bit Inversion:    00001000101000001111010011000000
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     10000100111110011101011010011011

          - FUNCTION OUTPUT:  10000100111110011101011010011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110110010111100111110100111

       - FUNCTION OUTPUT:          10000100111110011101011010011011

       - Left XOR FUNCTION OUTPUT: 11001010001100100001100100111100

       - Next Round Left 32 Bits:  01101111100100000000010011000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010001100100001100100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111100100000000010011000000

       - Right 32 Bits:            11001010001100100001100100111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       11001010001100100001100100111100
          - S-Box Result:     01010100000111101010001100010101   [per every group of 4-bits]
          - Split Into Two:   0101010000011110 [L] 1010001100010101 [R]
          - Swap Halves:      10100011000101010101010000011110
          - Bit Inversion:    01011100111010101010101111100001
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     11010011100111010100100001000100

          - FUNCTION OUTPUT:  11010011100111010100100001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111100100000000010011000000

       - FUNCTION OUTPUT:          11010011100111010100100001000100

       - Left XOR FUNCTION OUTPUT: 10111100000011010100110010000100

       - Next Round Left 32 Bits:  11001010001100100001100100111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100000011010100110010000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010001100100001100100111100

       - Right 32 Bits:            10111100000011010100110010000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       10111100000011010100110010000100
          - S-Box Result:     10000101111101100111010100100111   [per every group of 4-bits]
          - Split Into Two:   1000010111110110 [L] 0111010100100111 [R]
          - Swap Halves:      01110101001001111000010111110110
          - Bit Inversion:    10001010110110000111101000001001
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     11111111010000100100101000000011

          - FUNCTION OUTPUT:  11111111010000100100101000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010001100100001100100111100

       - FUNCTION OUTPUT:          11111111010000100100101000000011

       - Left XOR FUNCTION OUTPUT: 00110101011100000101001100111111

       - Next Round Left 32 Bits:  10111100000011010100110010000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101011100000101001100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100000011010100110010000100

       - Right 32 Bits:            00110101011100000101001100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       00110101011100000101001100111111
          - S-Box Result:     00011001110111111001000100011011   [per every group of 4-bits]
          - Split Into Two:   0001100111011111 [L] 1001000100011011 [R]
          - Swap Halves:      10010001000110110001100111011111
          - Bit Inversion:    01101110111001001110011000100000
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     11001111000110100100111101000101

          - FUNCTION OUTPUT:  11001111000110100100111101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100000011010100110010000100

       - FUNCTION OUTPUT:          11001111000110100100111101000101

       - Left XOR FUNCTION OUTPUT: 01110011000101110000001111000001

       - Next Round Left 32 Bits:  00110101011100000101001100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011000101110000001111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101011100000101001100111111

       - Right 32 Bits:            01110011000101110000001111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01110011000101110000001111000001
          - S-Box Result:     11010001101011011111000101011010   [per every group of 4-bits]
          - Split Into Two:   1101000110101101 [L] 1111000101011010 [R]
          - Swap Halves:      11110001010110101101000110101101
          - Bit Inversion:    00001110101001010010111001010010
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     01010100010001100011110000010010

          - FUNCTION OUTPUT:  01010100010001100011110000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101011100000101001100111111

       - FUNCTION OUTPUT:          01010100010001100011110000010010

       - Left XOR FUNCTION OUTPUT: 01100001001101100110111100101101

       - Next Round Left 32 Bits:  01110011000101110000001111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001001101100110111100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011000101110000001111000001

       - Right 32 Bits:            01100001001101100110111100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       01100001001101100110111100101101
          - S-Box Result:     00001010000100000000101111100110   [per every group of 4-bits]
          - Split Into Two:   0000101000010000 [L] 0000101111100110 [R]
          - Swap Halves:      00001011111001100000101000010000
          - Bit Inversion:    11110100000110011111010111101111
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     00010001001100100110000011010011

          - FUNCTION OUTPUT:  00010001001100100110000011010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011000101110000001111000001

       - FUNCTION OUTPUT:          00010001001100100110000011010011

       - Left XOR FUNCTION OUTPUT: 01100010001001010110001100010010

       - Next Round Left 32 Bits:  01100001001101100110111100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010001001010110001100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110001000100101011000110001001001100001001101100110111100101101

 > Decrypted Block:     0110001000100101011000110001001001100001001101100110111100101101


!!!CBC: Previous Ciphertext:                             0011100101110110001101110101001100110011011000100011000001100110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101101010011010101000100000101010010010101000101111101001011

 > Final Processed Block:                                0101101101010011010101000100000101010010010101000101111101001011



Ciphertext Block 2:                                      1111110110101111101100101110011110100110000110110101011111110010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101101011111011001011100111

       - Right 32 Bits:            10100110000110110101011111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       10100110000110110101011111110010
          - S-Box Result:     01000000101010001001110110111110   [per every group of 4-bits]
          - Split Into Two:   0100000010101000 [L] 1001110110111110 [R]
          - Swap Halves:      10011101101111100100000010101000
          - Bit Inversion:    01100010010000011011111101010111
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00111000101000101010110100010111

          - FUNCTION OUTPUT:  00111000101000101010110100010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101101011111011001011100111

       - FUNCTION OUTPUT:          00111000101000101010110100010111

       - Left XOR FUNCTION OUTPUT: 11000101000011010001111111110000

       - Next Round Left 32 Bits:  10100110000110110101011111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101000011010001111111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110000110110101011111110010

       - Right 32 Bits:            11000101000011010001111111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       11000101000011010001111111110000
          - S-Box Result:     01011001111101101010101110111111   [per every group of 4-bits]
          - Split Into Two:   0101100111110110 [L] 1010101110111111 [R]
          - Swap Halves:      10101011101111110101100111110110
          - Bit Inversion:    01010100010000001010011000001001
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10110001011010110011001100110101

          - FUNCTION OUTPUT:  10110001011010110011001100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110000110110101011111110010

       - FUNCTION OUTPUT:          10110001011010110011001100110101

       - Left XOR FUNCTION OUTPUT: 00010111011100000110010011000111

       - Next Round Left 32 Bits:  11000101000011010001111111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111011100000110010011000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101000011010001111111110000

       - Right 32 Bits:            00010111011100000110010011000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       00010111011100000110010011000111
          - S-Box Result:     10101101110111110000011101011101   [per every group of 4-bits]
          - Split Into Two:   1010110111011111 [L] 0000011101011101 [R]
          - Swap Halves:      00000111010111011010110111011111
          - Bit Inversion:    11111000101000100101001000100000
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     10110010111110110111010001101000

          - FUNCTION OUTPUT:  10110010111110110111010001101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101000011010001111111110000

       - FUNCTION OUTPUT:          10110010111110110111010001101000

       - Left XOR FUNCTION OUTPUT: 01110111111101100110101110011000

       - Next Round Left 32 Bits:  00010111011100000110010011000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111111101100110101110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111011100000110010011000111

       - Right 32 Bits:            01110111111101100110101110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       01110111111101100110101110011000
          - S-Box Result:     11011101101100000000100000110010   [per every group of 4-bits]
          - Split Into Two:   1101110110110000 [L] 0000100000110010 [R]
          - Swap Halves:      00001000001100101101110110110000
          - Bit Inversion:    11110111110011010010001001001111
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     00101010011010010101000111101001

          - FUNCTION OUTPUT:  00101010011010010101000111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111011100000110010011000111

       - FUNCTION OUTPUT:          00101010011010010101000111101001

       - Left XOR FUNCTION OUTPUT: 00111101000110010011010100101110

       - Next Round Left 32 Bits:  01110111111101100110101110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101000110010011010100101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111111101100110101110011000

       - Right 32 Bits:            00111101000110010011010100101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       00111101000110010011010100101110
          - S-Box Result:     00010110101000110001100111101100   [per every group of 4-bits]
          - Split Into Two:   0001011010100011 [L] 0001100111101100 [R]
          - Swap Halves:      00011001111011000001011010100011
          - Bit Inversion:    11100110000100111110100101011100
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     11111010010010011001100111010100

          - FUNCTION OUTPUT:  11111010010010011001100111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111111101100110101110011000

       - FUNCTION OUTPUT:          11111010010010011001100111010100

       - Left XOR FUNCTION OUTPUT: 10001101101111111111001001001100

       - Next Round Left 32 Bits:  00111101000110010011010100101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101101111111111001001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101000110010011010100101110

       - Right 32 Bits:            10001101101111111111001001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       10001101101111111111001001001100
          - S-Box Result:     00100110100010111011111001110101   [per every group of 4-bits]
          - Split Into Two:   0010011010001011 [L] 1011111001110101 [R]
          - Swap Halves:      10111110011101010010011010001011
          - Bit Inversion:    01000001100010101101100101110100
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     10001110011111110101001100010001

          - FUNCTION OUTPUT:  10001110011111110101001100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101000110010011010100101110

       - FUNCTION OUTPUT:          10001110011111110101001100010001

       - Left XOR FUNCTION OUTPUT: 10110011011001100110011000111111

       - Next Round Left 32 Bits:  10001101101111111111001001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011011001100110011000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101101111111111001001001100

       - Right 32 Bits:            10110011011001100110011000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       10110011011001100110011000111111
          - S-Box Result:     10000001000000000000000000011011   [per every group of 4-bits]
          - Split Into Two:   1000000100000000 [L] 0000000000011011 [R]
          - Swap Halves:      00000000000110111000000100000000
          - Bit Inversion:    11111111111001000111111011111111
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     10101001011111100010000011111110

          - FUNCTION OUTPUT:  10101001011111100010000011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101101111111111001001001100

       - FUNCTION OUTPUT:          10101001011111100010000011111110

       - Left XOR FUNCTION OUTPUT: 00100100110000011101001010110010

       - Next Round Left 32 Bits:  10110011011001100110011000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100110000011101001010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011011001100110011000111111

       - Right 32 Bits:            00100100110000011101001010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00100100110000011101001010110010
          - S-Box Result:     11100111010110100110111010001110   [per every group of 4-bits]
          - Split Into Two:   1110011101011010 [L] 0110111010001110 [R]
          - Swap Halves:      01101110100011101110011101011010
          - Bit Inversion:    10010001011100010001100010100101
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     01111100110011101011110110111001

          - FUNCTION OUTPUT:  01111100110011101011110110111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011011001100110011000111111

       - FUNCTION OUTPUT:          01111100110011101011110110111001

       - Left XOR FUNCTION OUTPUT: 11001111101010001101101110000110

       - Next Round Left 32 Bits:  00100100110000011101001010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111101010001101101110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100110000011101001010110010

       - Right 32 Bits:            11001111101010001101101110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       11001111101010001101101110000110
          - S-Box Result:     01011011010000100110100000100000   [per every group of 4-bits]
          - Split Into Two:   0101101101000010 [L] 0110100000100000 [R]
          - Swap Halves:      01101000001000000101101101000010
          - Bit Inversion:    10010111110111111010010010111101
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     11111101000111001011111001101001

          - FUNCTION OUTPUT:  11111101000111001011111001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100110000011101001010110010

       - FUNCTION OUTPUT:          11111101000111001011111001101001

       - Left XOR FUNCTION OUTPUT: 11011001110111010110110011011011

       - Next Round Left 32 Bits:  11001111101010001101101110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001110111010110110011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111101010001101101110000110

       - Right 32 Bits:            11011001110111010110110011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       11011001110111010110110011011011
          - S-Box Result:     01100011011001100000010101101000   [per every group of 4-bits]
          - Split Into Two:   0110001101100110 [L] 0000010101101000 [R]
          - Swap Halves:      00000101011010000110001101100110
          - Bit Inversion:    11111010100101111001110010011001
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     00100011001000000010100100111111

          - FUNCTION OUTPUT:  00100011001000000010100100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111101010001101101110000110

       - FUNCTION OUTPUT:          00100011001000000010100100111111

       - Left XOR FUNCTION OUTPUT: 11101100100010001111001010111001

       - Next Round Left 32 Bits:  11011001110111010110110011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100100010001111001010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001110111010110110011011011

       - Right 32 Bits:            11101100100010001111001010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       11101100100010001111001010111001
          - S-Box Result:     11000101001000101011111010000011   [per every group of 4-bits]
          - Split Into Two:   1100010100100010 [L] 1011111010000011 [R]
          - Swap Halves:      10111110100000111100010100100010
          - Bit Inversion:    01000001011111000011101011011101
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     11001101001001010001100010000110

          - FUNCTION OUTPUT:  11001101001001010001100010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001110111010110110011011011

       - FUNCTION OUTPUT:          11001101001001010001100010000110

       - Left XOR FUNCTION OUTPUT: 00010100111110000111010001011101

       - Next Round Left 32 Bits:  11101100100010001111001010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100111110000111010001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100100010001111001010111001

       - Right 32 Bits:            00010100111110000111010001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       00010100111110000111010001011101
          - S-Box Result:     10100111101100101101011110010110   [per every group of 4-bits]
          - Split Into Two:   1010011110110010 [L] 1101011110010110 [R]
          - Swap Halves:      11010111100101101010011110110010
          - Bit Inversion:    00101000011010010101100001001101
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     10100111000111101011101111101000

          - FUNCTION OUTPUT:  10100111000111101011101111101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100100010001111001010111001

       - FUNCTION OUTPUT:          10100111000111101011101111101000

       - Left XOR FUNCTION OUTPUT: 01001011100101100100100101010001

       - Next Round Left 32 Bits:  00010100111110000111010001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011100101100100100101010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100111110000111010001011101

       - Right 32 Bits:            01001011100101100100100101010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       01001011100101100100100101010001
          - S-Box Result:     01111000001100000111001110011010   [per every group of 4-bits]
          - Split Into Two:   0111100000110000 [L] 0111001110011010 [R]
          - Swap Halves:      01110011100110100111100000110000
          - Bit Inversion:    10001100011001011000011111001111
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     11111001111111111011011111000101

          - FUNCTION OUTPUT:  11111001111111111011011111000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100111110000111010001011101

       - FUNCTION OUTPUT:          11111001111111111011011111000101

       - Left XOR FUNCTION OUTPUT: 11101101000001111100001110011000

       - Next Round Left 32 Bits:  01001011100101100100100101010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101000001111100001110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011100101100100100101010001

       - Right 32 Bits:            11101101000001111100001110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       11101101000001111100001110011000
          - S-Box Result:     11000110111111010101000100110010   [per every group of 4-bits]
          - Split Into Two:   1100011011111101 [L] 0101000100110010 [R]
          - Swap Halves:      01010001001100101100011011111101
          - Bit Inversion:    10101110110011010011100100000010
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     00001111001100111001000001100111

          - FUNCTION OUTPUT:  00001111001100111001000001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011100101100100100101010001

       - FUNCTION OUTPUT:          00001111001100111001000001100111

       - Left XOR FUNCTION OUTPUT: 01000100101001011101100100110110

       - Next Round Left 32 Bits:  11101101000001111100001110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100101001011101100100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101000001111100001110011000

       - Right 32 Bits:            01000100101001011101100100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01000100101001011101100100110110
          - S-Box Result:     01110111010010010110001100010000   [per every group of 4-bits]
          - Split Into Two:   0111011101001001 [L] 0110001100010000 [R]
          - Swap Halves:      01100011000100000111011101001001
          - Bit Inversion:    10011100111011111000100010110110
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     11000110000011001001101011110110

          - FUNCTION OUTPUT:  11000110000011001001101011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101000001111100001110011000

       - FUNCTION OUTPUT:          11000110000011001001101011110110

       - Left XOR FUNCTION OUTPUT: 00101011000010110101100101101110

       - Next Round Left 32 Bits:  01000100101001011101100100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011000010110101100101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100101001011101100100110110

       - Right 32 Bits:            00101011000010110101100101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       00101011000010110101100101101110
          - S-Box Result:     11101000111110001001001100001100   [per every group of 4-bits]
          - Split Into Two:   1110100011111000 [L] 1001001100001100 [R]
          - Swap Halves:      10010011000011001110100011111000
          - Bit Inversion:    01101100111100110001011100000111
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10001001110110001000001000111011

          - FUNCTION OUTPUT:  10001001110110001000001000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100101001011101100100110110

       - FUNCTION OUTPUT:          10001001110110001000001000111011

       - Left XOR FUNCTION OUTPUT: 11001101011111010101101100001101

       - Next Round Left 32 Bits:  00101011000010110101100101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101011111010101101100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100110101111101010110110000110100101011000010110101100101101110

 > Decrypted Block:     1100110101111101010110110000110100101011000010110101100101101110


!!!CBC: Previous Ciphertext:                             1000100000100100000001100111010001111010011011100001000100111111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100010101011001010111010111100101010001011001010100100001010001

 > Final Processed Block:                                0100010101011001010111010111100101010001011001010100100001010001



Ciphertext Block 3:                                      0101100111000010011010001100110011101100111101001010001001010000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001110000100110100011001100

       - Right 32 Bits:            11101100111101001010001001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11101100111101001010001001010000
          - S-Box Result:     11000101101101110100111010011111   [per every group of 4-bits]
          - Split Into Two:   1100010110110111 [L] 0100111010011111 [R]
          - Swap Halves:      01001110100111111100010110110111
          - Bit Inversion:    10110001011000000011101001001000
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     11101011100000110010100000001000

          - FUNCTION OUTPUT:  11101011100000110010100000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001110000100110100011001100

       - FUNCTION OUTPUT:          11101011100000110010100000001000

       - Left XOR FUNCTION OUTPUT: 10110010010000010100000011000100

       - Next Round Left 32 Bits:  11101100111101001010001001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010010000010100000011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100111101001010001001010000

       - Right 32 Bits:            10110010010000010100000011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       10110010010000010100000011000100
          - S-Box Result:     10001110011110100111111101010111   [per every group of 4-bits]
          - Split Into Two:   1000111001111010 [L] 0111111101010111 [R]
          - Swap Halves:      01111111010101111000111001111010
          - Bit Inversion:    10000000101010000111000110000101
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     01100101100000111110010010111001

          - FUNCTION OUTPUT:  01100101100000111110010010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100111101001010001001010000

       - FUNCTION OUTPUT:          01100101100000111110010010111001

       - Left XOR FUNCTION OUTPUT: 10001001011101110100011011101001

       - Next Round Left 32 Bits:  10110010010000010100000011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001011101110100011011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010010000010100000011000100

       - Right 32 Bits:            10001001011101110100011011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       10001001011101110100011011101001
          - S-Box Result:     00100011110111010111000011000011   [per every group of 4-bits]
          - Split Into Two:   0010001111011101 [L] 0111000011000011 [R]
          - Swap Halves:      01110000110000110010001111011101
          - Bit Inversion:    10001111001111001101110000100010
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     11000101011001011111101001101010

          - FUNCTION OUTPUT:  11000101011001011111101001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010010000010100000011000100

       - FUNCTION OUTPUT:          11000101011001011111101001101010

       - Left XOR FUNCTION OUTPUT: 01110111001001001011101010101110

       - Next Round Left 32 Bits:  10001001011101110100011011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111001001001011101010101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001011101110100011011101001

       - Right 32 Bits:            01110111001001001011101010101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       01110111001001001011101010101110
          - S-Box Result:     11011101111001111000010001001100   [per every group of 4-bits]
          - Split Into Two:   1101110111100111 [L] 1000010001001100 [R]
          - Swap Halves:      10000100010011001101110111100111
          - Bit Inversion:    01111011101100110010001000011000
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     10100110000101110101000110111110

          - FUNCTION OUTPUT:  10100110000101110101000110111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001011101110100011011101001

       - FUNCTION OUTPUT:          10100110000101110101000110111110

       - Left XOR FUNCTION OUTPUT: 00101111011000000001011101010111

       - Next Round Left 32 Bits:  01110111001001001011101010101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111011000000001011101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111001001001011101010101110

       - Right 32 Bits:            00101111011000000001011101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       00101111011000000001011101010111
          - S-Box Result:     11101011000011111010110110011101   [per every group of 4-bits]
          - Split Into Two:   1110101100001111 [L] 1010110110011101 [R]
          - Swap Halves:      10101101100111011110101100001111
          - Bit Inversion:    01010010011000100001010011110000
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     01001110001110000110010001111000

          - FUNCTION OUTPUT:  01001110001110000110010001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111001001001011101010101110

       - FUNCTION OUTPUT:          01001110001110000110010001111000

       - Left XOR FUNCTION OUTPUT: 00111001000111001101111011010110

       - Next Round Left 32 Bits:  00101111011000000001011101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001000111001101111011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111011000000001011101010111

       - Right 32 Bits:            00111001000111001101111011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       00111001000111001101111011010110
          - S-Box Result:     00010011101001010110110001100000   [per every group of 4-bits]
          - Split Into Two:   0001001110100101 [L] 0110110001100000 [R]
          - Swap Halves:      01101100011000000001001110100101
          - Bit Inversion:    10010011100111111110110001011010
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     01011100011010100110011000111111

          - FUNCTION OUTPUT:  01011100011010100110011000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111011000000001011101010111

       - FUNCTION OUTPUT:          01011100011010100110011000111111

       - Left XOR FUNCTION OUTPUT: 01110011000010100111000101101000

       - Next Round Left 32 Bits:  00111001000111001101111011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011000010100111000101101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001000111001101111011010110

       - Right 32 Bits:            01110011000010100111000101101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       01110011000010100111000101101000
          - S-Box Result:     11010001111101001101101000000010   [per every group of 4-bits]
          - Split Into Two:   1101000111110100 [L] 1101101000000010 [R]
          - Swap Halves:      11011010000000101101000111110100
          - Bit Inversion:    00100101111111010010111000001011
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     01110011011001110111000000001010

          - FUNCTION OUTPUT:  01110011011001110111000000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001000111001101111011010110

       - FUNCTION OUTPUT:          01110011011001110111000000001010

       - Left XOR FUNCTION OUTPUT: 01001010011110111010111011011100

       - Next Round Left 32 Bits:  01110011000010100111000101101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010011110111010111011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011000010100111000101101000

       - Right 32 Bits:            01001010011110111010111011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       01001010011110111010111011011100
          - S-Box Result:     01110100110110000100110001100101   [per every group of 4-bits]
          - Split Into Two:   0111010011011000 [L] 0100110001100101 [R]
          - Swap Halves:      01001100011001010111010011011000
          - Bit Inversion:    10110011100110101000101100100111
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     01011110001001010010111000111011

          - FUNCTION OUTPUT:  01011110001001010010111000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011000010100111000101101000

       - FUNCTION OUTPUT:          01011110001001010010111000111011

       - Left XOR FUNCTION OUTPUT: 00101101001011110101111101010011

       - Next Round Left 32 Bits:  01001010011110111010111011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101001011110101111101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010011110111010111011011100

       - Right 32 Bits:            00101101001011110101111101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       00101101001011110101111101010011
          - S-Box Result:     11100110111010111001101110010001   [per every group of 4-bits]
          - Split Into Two:   1110011011101011 [L] 1001101110010001 [R]
          - Swap Halves:      10011011100100011110011011101011
          - Bit Inversion:    01100100011011100001100100010100
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     00001110101011010000001111000000

          - FUNCTION OUTPUT:  00001110101011010000001111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010011110111010111011011100

       - FUNCTION OUTPUT:          00001110101011010000001111000000

       - Left XOR FUNCTION OUTPUT: 01000100110101101010110100011100

       - Next Round Left 32 Bits:  00101101001011110101111101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100110101101010110100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101001011110101111101010011

       - Right 32 Bits:            01000100110101101010110100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       01000100110101101010110100011100
          - S-Box Result:     01110111011000000100011010100101   [per every group of 4-bits]
          - Split Into Two:   0111011101100000 [L] 0100011010100101 [R]
          - Swap Halves:      01000110101001010111011101100000
          - Bit Inversion:    10111001010110101000100010011111
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     01100000111011010011110100111001

          - FUNCTION OUTPUT:  01100000111011010011110100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101001011110101111101010011

       - FUNCTION OUTPUT:          01100000111011010011110100111001

       - Left XOR FUNCTION OUTPUT: 01001101110000100110001001101010

       - Next Round Left 32 Bits:  01000100110101101010110100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101110000100110001001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100110101101010110100011100

       - Right 32 Bits:            01001101110000100110001001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       01001101110000100110001001101010
          - S-Box Result:     01110110010111100000111000000100   [per every group of 4-bits]
          - Split Into Two:   0111011001011110 [L] 0000111000000100 [R]
          - Swap Halves:      00001110000001000111011001011110
          - Bit Inversion:    11110001111110111000100110100001
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     01111101101000101010101111111010

          - FUNCTION OUTPUT:  01111101101000101010101111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100110101101010110100011100

       - FUNCTION OUTPUT:          01111101101000101010101111111010

       - Left XOR FUNCTION OUTPUT: 00111001011101000000011011100110

       - Next Round Left 32 Bits:  01001101110000100110001001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001011101000000011011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101110000100110001001101010

       - Right 32 Bits:            00111001011101000000011011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       00111001011101000000011011100110
          - S-Box Result:     00010011110101111111000011000000   [per every group of 4-bits]
          - Split Into Two:   0001001111010111 [L] 1111000011000000 [R]
          - Swap Halves:      11110000110000000001001111010111
          - Bit Inversion:    00001111001111111110110000101000
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     10000000010010000000111110001101

          - FUNCTION OUTPUT:  10000000010010000000111110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101110000100110001001101010

       - FUNCTION OUTPUT:          10000000010010000000111110001101

       - Left XOR FUNCTION OUTPUT: 11001101100010100110110111100111

       - Next Round Left 32 Bits:  00111001011101000000011011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101100010100110110111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001011101000000011011100110

       - Right 32 Bits:            11001101100010100110110111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       11001101100010100110110111100111
          - S-Box Result:     01010110001001000000011011001101   [per every group of 4-bits]
          - Split Into Two:   0101011000100100 [L] 0000011011001101 [R]
          - Swap Halves:      00000110110011010101011000100100
          - Bit Inversion:    11111001001100101010100111011011
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     10001100101010001001100111010001

          - FUNCTION OUTPUT:  10001100101010001001100111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001011101000000011011100110

       - FUNCTION OUTPUT:          10001100101010001001100111010001

       - Left XOR FUNCTION OUTPUT: 10110101110111001001111100110111

       - Next Round Left 32 Bits:  11001101100010100110110111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101110111001001111100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101100010100110110111100111

       - Right 32 Bits:            10110101110111001001111100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       10110101110111001001111100110111
          - S-Box Result:     10001001011001010011101100011101   [per every group of 4-bits]
          - Split Into Two:   1000100101100101 [L] 0011101100011101 [R]
          - Swap Halves:      00111011000111011000100101100101
          - Bit Inversion:    11000100111000100111011010011010
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     01100101000111001101111111111111

          - FUNCTION OUTPUT:  01100101000111001101111111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101100010100110110111100111

       - FUNCTION OUTPUT:          01100101000111001101111111111111

       - Left XOR FUNCTION OUTPUT: 10101000100101101011001000011000

       - Next Round Left 32 Bits:  10110101110111001001111100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000100101101011001000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101110111001001111100110111

       - Right 32 Bits:            10101000100101101011001000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       10101000100101101011001000011000
          - S-Box Result:     01000010001100001000111010100010   [per every group of 4-bits]
          - Split Into Two:   0100001000110000 [L] 1000111010100010 [R]
          - Swap Halves:      10001110101000100100001000110000
          - Bit Inversion:    01110001010111011011110111001111
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00101011101111101010111110001111

          - FUNCTION OUTPUT:  00101011101111101010111110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101110111001001111100110111

       - FUNCTION OUTPUT:          00101011101111101010111110001111

       - Left XOR FUNCTION OUTPUT: 10011110011000100011000010111000

       - Next Round Left 32 Bits:  10101000100101101011001000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110011000100011000010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000100101101011001000011000

       - Right 32 Bits:            10011110011000100011000010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       10011110011000100011000010111000
          - S-Box Result:     00111100000011100001111110000010   [per every group of 4-bits]
          - Split Into Two:   0011110000001110 [L] 0001111110000010 [R]
          - Swap Halves:      00011111100000100011110000001110
          - Bit Inversion:    11100000011111011100001111110001
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     00000101010101100101011011001101

          - FUNCTION OUTPUT:  00000101010101100101011011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000100101101011001000011000

       - FUNCTION OUTPUT:          00000101010101100101011011001101

       - Left XOR FUNCTION OUTPUT: 10101101110000001110010011010101

       - Next Round Left 32 Bits:  10011110011000100011000010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101110000001110010011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010110111000000111001001101010110011110011000100011000010111000

 > Decrypted Block:     1010110111000000111001001101010110011110011000100011000010111000


!!!CBC: Previous Ciphertext:                             1111110110101111101100101110011110100110000110110101011111110010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101000001101111010101100011001000111000011110010110011101001010

 > Final Processed Block:                                0101000001101111010101100011001000111000011110010110011101001010



Ciphertext Block 4:                                      1001111011010001001111010001101011100110010100111111000100111000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110110100010011110100011010

       - Right 32 Bits:            11100110010100111111000100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11100110010100111111000100111000
          - S-Box Result:     11000000100100011011101000010010   [per every group of 4-bits]
          - Split Into Two:   1100000010010001 [L] 1011101000010010 [R]
          - Swap Halves:      10111010000100101100000010010001
          - Bit Inversion:    01000101111011010011111101101110
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00011111000011100010110100101110

          - FUNCTION OUTPUT:  00011111000011100010110100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110110100010011110100011010

       - FUNCTION OUTPUT:          00011111000011100010110100101110

       - Left XOR FUNCTION OUTPUT: 10000001110111110001000000110100

       - Next Round Left 32 Bits:  11100110010100111111000100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001110111110001000000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110010100111111000100111000

       - Right 32 Bits:            10000001110111110001000000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       10000001110111110001000000110100
          - S-Box Result:     00101010011010111010111100010111   [per every group of 4-bits]
          - Split Into Two:   0010101001101011 [L] 1010111100010111 [R]
          - Swap Halves:      10101111000101110010101001101011
          - Bit Inversion:    01010000111010001101010110010100
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10110101110000110100000010101000

          - FUNCTION OUTPUT:  10110101110000110100000010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110010100111111000100111000

       - FUNCTION OUTPUT:          10110101110000110100000010101000

       - Left XOR FUNCTION OUTPUT: 01010011100100001011000110010000

       - Next Round Left 32 Bits:  10000001110111110001000000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011100100001011000110010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001110111110001000000110100

       - Right 32 Bits:            01010011100100001011000110010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       01010011100100001011000110010000
          - S-Box Result:     10010001001111111000101000111111   [per every group of 4-bits]
          - Split Into Two:   1001000100111111 [L] 1000101000111111 [R]
          - Swap Halves:      10001010001111111001000100111111
          - Bit Inversion:    01110101110000000110111011000000
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     00111111100110010100100010001000

          - FUNCTION OUTPUT:  00111111100110010100100010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001110111110001000000110100

       - FUNCTION OUTPUT:          00111111100110010100100010001000

       - Left XOR FUNCTION OUTPUT: 10111110010001100101100010111100

       - Next Round Left 32 Bits:  01010011100100001011000110010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110010001100101100010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011100100001011000110010000

       - Right 32 Bits:            10111110010001100101100010111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       10111110010001100101100010111100
          - S-Box Result:     10001100011100001001001010000101   [per every group of 4-bits]
          - Split Into Two:   1000110001110000 [L] 1001001010000101 [R]
          - Swap Halves:      10010010100001011000110001110000
          - Bit Inversion:    01101101011110100111001110001111
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     10110000110111100000000000101001

          - FUNCTION OUTPUT:  10110000110111100000000000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011100100001011000110010000

       - FUNCTION OUTPUT:          10110000110111100000000000101001

       - Left XOR FUNCTION OUTPUT: 11100011010011101011000110111001

       - Next Round Left 32 Bits:  10111110010001100101100010111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011010011101011000110111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110010001100101100010111100

       - Right 32 Bits:            11100011010011101011000110111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11100011010011101011000110111001
          - S-Box Result:     11000001011111001000101010000011   [per every group of 4-bits]
          - Split Into Two:   1100000101111100 [L] 1000101010000011 [R]
          - Swap Halves:      10001010100000111100000101111100
          - Bit Inversion:    01110101011111000011111010000011
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     01101001001001100100111000001011

          - FUNCTION OUTPUT:  01101001001001100100111000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110010001100101100010111100

       - FUNCTION OUTPUT:          01101001001001100100111000001011

       - Left XOR FUNCTION OUTPUT: 11010111011000000001011010110111

       - Next Round Left 32 Bits:  11100011010011101011000110111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111011000000001011010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011010011101011000110111001

       - Right 32 Bits:            11010111011000000001011010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       11010111011000000001011010110111
          - S-Box Result:     01101101000011111010000010001101   [per every group of 4-bits]
          - Split Into Two:   0110110100001111 [L] 1010000010001101 [R]
          - Swap Halves:      10100000100011010110110100001111
          - Bit Inversion:    01011111011100101001001011110000
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     10010000100001110001100010010101

          - FUNCTION OUTPUT:  10010000100001110001100010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011010011101011000110111001

       - FUNCTION OUTPUT:          10010000100001110001100010010101

       - Left XOR FUNCTION OUTPUT: 01110011110010011010100100101100

       - Next Round Left 32 Bits:  11010111011000000001011010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011110010011010100100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111011000000001011010110111

       - Right 32 Bits:            01110011110010011010100100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       01110011110010011010100100101100
          - S-Box Result:     11010001010100110100001111100101   [per every group of 4-bits]
          - Split Into Two:   1101000101010011 [L] 0100001111100101 [R]
          - Swap Halves:      01000011111001011101000101010011
          - Bit Inversion:    10111100000110100010111010101100
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     11101010100000000111000010101101

          - FUNCTION OUTPUT:  11101010100000000111000010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111011000000001011010110111

       - FUNCTION OUTPUT:          11101010100000000111000010101101

       - Left XOR FUNCTION OUTPUT: 00111101111000000110011000011010

       - Next Round Left 32 Bits:  01110011110010011010100100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101111000000110011000011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011110010011010100100101100

       - Right 32 Bits:            00111101111000000110011000011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00111101111000000110011000011010
          - S-Box Result:     00010110110011110000000010100100   [per every group of 4-bits]
          - Split Into Two:   0001011011001111 [L] 0000000010100100 [R]
          - Swap Halves:      00000000101001000001011011001111
          - Bit Inversion:    11111111010110111110100100110000
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     00010010111001000100110000101100

          - FUNCTION OUTPUT:  00010010111001000100110000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011110010011010100100101100

       - FUNCTION OUTPUT:          00010010111001000100110000101100

       - Left XOR FUNCTION OUTPUT: 01100001001011011110010100000000

       - Next Round Left 32 Bits:  00111101111000000110011000011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001001011011110010100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101111000000110011000011010

       - Right 32 Bits:            01100001001011011110010100000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       01100001001011011110010100000000
          - S-Box Result:     00001010111001101100100111111111   [per every group of 4-bits]
          - Split Into Two:   0000101011100110 [L] 1100100111111111 [R]
          - Swap Halves:      11001001111111110000101011100110
          - Bit Inversion:    00110110000000001111010100011001
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     01011100110000111110111111001101

          - FUNCTION OUTPUT:  01011100110000111110111111001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101111000000110011000011010

       - FUNCTION OUTPUT:          01011100110000111110111111001101

       - Left XOR FUNCTION OUTPUT: 01100001001000111000100111010111

       - Next Round Left 32 Bits:  01100001001011011110010100000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001001000111000100111010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001001011011110010100000000

       - Right 32 Bits:            01100001001000111000100111010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       01100001001000111000100111010111
          - S-Box Result:     00001010111000010010001101101101   [per every group of 4-bits]
          - Split Into Two:   0000101011100001 [L] 0010001101101101 [R]
          - Swap Halves:      00100011011011010000101011100001
          - Bit Inversion:    11011100100100101111010100011110
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     00000101001001010100000010111000

          - FUNCTION OUTPUT:  00000101001001010100000010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001001011011110010100000000

       - FUNCTION OUTPUT:          00000101001001010100000010111000

       - Left XOR FUNCTION OUTPUT: 01100100000010001010010110111000

       - Next Round Left 32 Bits:  01100001001000111000100111010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100000010001010010110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001001000111000100111010111

       - Right 32 Bits:            01100100000010001010010110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       01100100000010001010010110111000
          - S-Box Result:     00000111111100100100100110000010   [per every group of 4-bits]
          - Split Into Two:   0000011111110010 [L] 0100100110000010 [R]
          - Swap Halves:      01001001100000100000011111110010
          - Bit Inversion:    10110110011111011111100000001101
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     00111010001001001101101001010110

          - FUNCTION OUTPUT:  00111010001001001101101001010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001001000111000100111010111

       - FUNCTION OUTPUT:          00111010001001001101101001010110

       - Left XOR FUNCTION OUTPUT: 01011011000001110101001110000001

       - Next Round Left 32 Bits:  01100100000010001010010110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011000001110101001110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100000010001010010110111000

       - Right 32 Bits:            01011011000001110101001110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       01011011000001110101001110000001
          - S-Box Result:     10011000111111011001000100101010   [per every group of 4-bits]
          - Split Into Two:   1001100011111101 [L] 1001000100101010 [R]
          - Swap Halves:      10010001001010101001100011111101
          - Bit Inversion:    01101110110101010110011100000010
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     11100001101000101000010010100111

          - FUNCTION OUTPUT:  11100001101000101000010010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100000010001010010110111000

       - FUNCTION OUTPUT:          11100001101000101000010010100111

       - Left XOR FUNCTION OUTPUT: 10000101101010100010000100011111

       - Next Round Left 32 Bits:  01011011000001110101001110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101101010100010000100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011000001110101001110000001

       - Right 32 Bits:            10000101101010100010000100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       10000101101010100010000100011111
          - S-Box Result:     00101001010001001110101010101011   [per every group of 4-bits]
          - Split Into Two:   0010100101000100 [L] 1110101010101011 [R]
          - Swap Halves:      11101010101010110010100101000100
          - Bit Inversion:    00010101010101001101011010111011
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     01100000110011101110011010110001

          - FUNCTION OUTPUT:  01100000110011101110011010110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011000001110101001110000001

       - FUNCTION OUTPUT:          01100000110011101110011010110001

       - Left XOR FUNCTION OUTPUT: 00111011110010011011010100110000

       - Next Round Left 32 Bits:  10000101101010100010000100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011110010011011010100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101101010100010000100011111

       - Right 32 Bits:            00111011110010011011010100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       00111011110010011011010100110000
          - S-Box Result:     00011000010100111000100100011111   [per every group of 4-bits]
          - Split Into Two:   0001100001010011 [L] 1000100100011111 [R]
          - Swap Halves:      10001001000111110001100001010011
          - Bit Inversion:    01110110111000001110011110101100
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     11010111000111100100111011001001

          - FUNCTION OUTPUT:  11010111000111100100111011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101101010100010000100011111

       - FUNCTION OUTPUT:          11010111000111100100111011001001

       - Left XOR FUNCTION OUTPUT: 01010010101101000110111111010110

       - Next Round Left 32 Bits:  00111011110010011011010100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010101101000110111111010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011110010011011010100110000

       - Right 32 Bits:            01010010101101000110111111010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01010010101101000110111111010110
          - S-Box Result:     10011110100001110000101101100000   [per every group of 4-bits]
          - Split Into Two:   1001111010000111 [L] 0000101101100000 [R]
          - Swap Halves:      00001011011000001001111010000111
          - Bit Inversion:    11110100100111110110000101111000
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10101110011111000111001100111000

          - FUNCTION OUTPUT:  10101110011111000111001100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011110010011011010100110000

       - FUNCTION OUTPUT:          10101110011111000111001100111000

       - Left XOR FUNCTION OUTPUT: 10010101101101011100011000001000

       - Next Round Left 32 Bits:  01010010101101000110111111010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101101101011100011000001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010101101000110111111010110

       - Right 32 Bits:            10010101101101011100011000001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       10010101101101011100011000001000
          - S-Box Result:     00111001100010010101000011110010   [per every group of 4-bits]
          - Split Into Two:   0011100110001001 [L] 0101000011110010 [R]
          - Swap Halves:      01010000111100100011100110001001
          - Bit Inversion:    10101111000011011100011001110110
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     01001010001001100101001101001010

          - FUNCTION OUTPUT:  01001010001001100101001101001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010101101000110111111010110

       - FUNCTION OUTPUT:          01001010001001100101001101001010

       - Left XOR FUNCTION OUTPUT: 00011000100100100011110010011100

       - Next Round Left 32 Bits:  10010101101101011100011000001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000100100100011110010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001100010010010001111001001110010010101101101011100011000001000

 > Decrypted Block:     0001100010010010001111001001110010010101101101011100011000001000


!!!CBC: Previous Ciphertext:                             0101100111000010011010001100110011101100111101001010001001010000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100000101010000010101000101000001111001010000010110010001011000

 > Final Processed Block:                                0100000101010000010101000101000001111001010000010110010001011000



Ciphertext Block 5:                                      0111011010100100110010000001111111101110000111101011111010111010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110101001001100100000011111

       - Right 32 Bits:            11101110000111101011111010111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11101110000111101011111010111010
          - S-Box Result:     11001100101011001000110010000100   [per every group of 4-bits]
          - Split Into Two:   1100110010101100 [L] 1000110010000100 [R]
          - Swap Halves:      10001100100001001100110010101100
          - Bit Inversion:    01110011011110110011001101010011
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00101001100110000010000100010011

          - FUNCTION OUTPUT:  00101001100110000010000100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110101001001100100000011111

       - FUNCTION OUTPUT:          00101001100110000010000100010011

       - Left XOR FUNCTION OUTPUT: 01011111001111001110100100001100

       - Next Round Left 32 Bits:  11101110000111101011111010111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111001111001110100100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110000111101011111010111010

       - Right 32 Bits:            01011111001111001110100100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       01011111001111001110100100001100
          - S-Box Result:     10011011000101011100001111110101   [per every group of 4-bits]
          - Split Into Two:   1001101100010101 [L] 1100001111110101 [R]
          - Swap Halves:      11000011111101011001101100010101
          - Bit Inversion:    00111100000010100110010011101010
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     11011001001000011111000111010110

          - FUNCTION OUTPUT:  11011001001000011111000111010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110000111101011111010111010

       - FUNCTION OUTPUT:          11011001001000011111000111010110

       - Left XOR FUNCTION OUTPUT: 00110111001111110100111101101100

       - Next Round Left 32 Bits:  01011111001111001110100100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111001111110100111101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111001111001110100100001100

       - Right 32 Bits:            00110111001111110100111101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       00110111001111110100111101101100
          - S-Box Result:     00011101000110110111101100000101   [per every group of 4-bits]
          - Split Into Two:   0001110100011011 [L] 0111101100000101 [R]
          - Swap Halves:      01111011000001010001110100011011
          - Bit Inversion:    10000100111110101110001011100100
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     11001110101000111100010010101100

          - FUNCTION OUTPUT:  11001110101000111100010010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111001111001110100100001100

       - FUNCTION OUTPUT:          11001110101000111100010010101100

       - Left XOR FUNCTION OUTPUT: 10010001100111110010110110100000

       - Next Round Left 32 Bits:  00110111001111110100111101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001100111110010110110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111001111110100111101101100

       - Right 32 Bits:            10010001100111110010110110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       10010001100111110010110110100000
          - S-Box Result:     00111010001110111110011001001111   [per every group of 4-bits]
          - Split Into Two:   0011101000111011 [L] 1110011001001111 [R]
          - Swap Halves:      11100110010011110011101000111011
          - Bit Inversion:    00011001101100001100010111000100
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     11000100000101001011011001100010

          - FUNCTION OUTPUT:  11000100000101001011011001100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111001111110100111101101100

       - FUNCTION OUTPUT:          11000100000101001011011001100010

       - Left XOR FUNCTION OUTPUT: 11110011001010111111100100001110

       - Next Round Left 32 Bits:  10010001100111110010110110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011001010111111100100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001100111110010110110100000

       - Right 32 Bits:            11110011001010111111100100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11110011001010111111100100001110
          - S-Box Result:     10110001111010001011001111111100   [per every group of 4-bits]
          - Split Into Two:   1011000111101000 [L] 1011001111111100 [R]
          - Swap Halves:      10110011111111001011000111101000
          - Bit Inversion:    01001100000000110100111000010111
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     01010000010110010011111010011111

          - FUNCTION OUTPUT:  01010000010110010011111010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001100111110010110110100000

       - FUNCTION OUTPUT:          01010000010110010011111010011111

       - Left XOR FUNCTION OUTPUT: 11000001110001100001001100111111

       - Next Round Left 32 Bits:  11110011001010111111100100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110001100001001100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011001010111111100100001110

       - Right 32 Bits:            11000001110001100001001100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       11000001110001100001001100111111
          - S-Box Result:     01011010010100001010000100011011   [per every group of 4-bits]
          - Split Into Two:   0101101001010000 [L] 1010000100011011 [R]
          - Swap Halves:      10100001000110110101101001010000
          - Bit Inversion:    01011110111001001010010110101111
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     10010001000100010010111111001010

          - FUNCTION OUTPUT:  10010001000100010010111111001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011001010111111100100001110

       - FUNCTION OUTPUT:          10010001000100010010111111001010

       - Left XOR FUNCTION OUTPUT: 01100010001110101101011011000100

       - Next Round Left 32 Bits:  11000001110001100001001100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010001110101101011011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001110001100001001100111111

       - Right 32 Bits:            01100010001110101101011011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       01100010001110101101011011000100
          - S-Box Result:     00001110000101000110000001010111   [per every group of 4-bits]
          - Split Into Two:   0000111000010100 [L] 0110000001010111 [R]
          - Swap Halves:      01100000010101110000111000010100
          - Bit Inversion:    10011111101010001111000111101011
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     11001001001100101010111111101010

          - FUNCTION OUTPUT:  11001001001100101010111111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001110001100001001100111111

       - FUNCTION OUTPUT:          11001001001100101010111111101010

       - Left XOR FUNCTION OUTPUT: 00001000111101001011110011010101

       - Next Round Left 32 Bits:  01100010001110101101011011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000111101001011110011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010001110101101011011000100

       - Right 32 Bits:            00001000111101001011110011010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00001000111101001011110011010101
          - S-Box Result:     11110010101101111000010101101001   [per every group of 4-bits]
          - Split Into Two:   1111001010110111 [L] 1000010101101001 [R]
          - Swap Halves:      10000101011010011111001010110111
          - Bit Inversion:    01111010100101100000110101001000
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     10010111001010011010100001010100

          - FUNCTION OUTPUT:  10010111001010011010100001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010001110101101011011000100

       - FUNCTION OUTPUT:          10010111001010011010100001010100

       - Left XOR FUNCTION OUTPUT: 11110101000100110111111010010000

       - Next Round Left 32 Bits:  00001000111101001011110011010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101000100110111111010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000111101001011110011010101

       - Right 32 Bits:            11110101000100110111111010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       11110101000100110111111010010000
          - S-Box Result:     10111001101000011101110000111111   [per every group of 4-bits]
          - Split Into Two:   1011100110100001 [L] 1101110000111111 [R]
          - Swap Halves:      11011100001111111011100110100001
          - Bit Inversion:    00100011110000000100011001011110
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     01001001000000110101110010001010

          - FUNCTION OUTPUT:  01001001000000110101110010001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000111101001011110011010101

       - FUNCTION OUTPUT:          01001001000000110101110010001010

       - Left XOR FUNCTION OUTPUT: 01000001111101111110000001011111

       - Next Round Left 32 Bits:  11110101000100110111111010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001111101111110000001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101000100110111111010010000

       - Right 32 Bits:            01000001111101111110000001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       01000001111101111110000001011111
          - S-Box Result:     01111010101111011100111110011011   [per every group of 4-bits]
          - Split Into Two:   0111101010111101 [L] 1100111110011011 [R]
          - Swap Halves:      11001111100110110111101010111101
          - Bit Inversion:    00110000011001001000010101000010
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     11101001110100110011000011100100

          - FUNCTION OUTPUT:  11101001110100110011000011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101000100110111111010010000

       - FUNCTION OUTPUT:          11101001110100110011000011100100

       - Left XOR FUNCTION OUTPUT: 00011100110000000100111001110100

       - Next Round Left 32 Bits:  01000001111101111110000001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100110000000100111001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001111101111110000001011111

       - Right 32 Bits:            00011100110000000100111001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       00011100110000000100111001110100
          - S-Box Result:     10100101010111110111110011010111   [per every group of 4-bits]
          - Split Into Two:   1010010101011111 [L] 0111110011010111 [R]
          - Swap Halves:      01111100110101111010010101011111
          - Bit Inversion:    10000011001010000101101010100000
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     00001111011100010111100011111011

          - FUNCTION OUTPUT:  00001111011100010111100011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001111101111110000001011111

       - FUNCTION OUTPUT:          00001111011100010111100011111011

       - Left XOR FUNCTION OUTPUT: 01001110100001101001100010100100

       - Next Round Left 32 Bits:  00011100110000000100111001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110100001101001100010100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100110000000100111001110100

       - Right 32 Bits:            01001110100001101001100010100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       01001110100001101001100010100100
          - S-Box Result:     01111100001000000011001001000111   [per every group of 4-bits]
          - Split Into Two:   0111110000100000 [L] 0011001001000111 [R]
          - Swap Halves:      00110010010001110111110000100000
          - Bit Inversion:    11001101101110001000001111011111
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     01000010110011110110000001111010

          - FUNCTION OUTPUT:  01000010110011110110000001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100110000000100111001110100

       - FUNCTION OUTPUT:          01000010110011110110000001111010

       - Left XOR FUNCTION OUTPUT: 01011110000011110010111000001110

       - Next Round Left 32 Bits:  01001110100001101001100010100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110000011110010111000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110100001101001100010100100

       - Right 32 Bits:            01011110000011110010111000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       01011110000011110010111000001110
          - S-Box Result:     10011100111110111110110011111100   [per every group of 4-bits]
          - Split Into Two:   1001110011111011 [L] 1110110011111100 [R]
          - Swap Halves:      11101100111111001001110011111011
          - Bit Inversion:    00010011000000110110001100000100
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     01100110100110010101001100001110

          - FUNCTION OUTPUT:  01100110100110010101001100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110100001101001100010100100

       - FUNCTION OUTPUT:          01100110100110010101001100001110

       - Left XOR FUNCTION OUTPUT: 00101000000111111100101110101010

       - Next Round Left 32 Bits:  01011110000011110010111000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000000111111100101110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110000011110010111000001110

       - Right 32 Bits:            00101000000111111100101110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       00101000000111111100101110101010
          - S-Box Result:     11100010101010110101100001000100   [per every group of 4-bits]
          - Split Into Two:   1110001010101011 [L] 0101100001000100 [R]
          - Swap Halves:      01011000010001001110001010101011
          - Bit Inversion:    10100111101110110001110101010100
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     00000110010001011011010000110001

          - FUNCTION OUTPUT:  00000110010001011011010000110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110000011110010111000001110

       - FUNCTION OUTPUT:          00000110010001011011010000110001

       - Left XOR FUNCTION OUTPUT: 01011000010010101001101000111111

       - Next Round Left 32 Bits:  00101000000111111100101110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000010010101001101000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000000111111100101110101010

       - Right 32 Bits:            01011000010010101001101000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01011000010010101001101000111111
          - S-Box Result:     10010010011101000011010000011011   [per every group of 4-bits]
          - Split Into Two:   1001001001110100 [L] 0011010000011011 [R]
          - Swap Halves:      00110100000110111001001001110100
          - Bit Inversion:    11001011111001000110110110001011
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10010001000001110111111111001011

          - FUNCTION OUTPUT:  10010001000001110111111111001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000000111111100101110101010

       - FUNCTION OUTPUT:          10010001000001110111111111001011

       - Left XOR FUNCTION OUTPUT: 10111001000110001011010001100001

       - Next Round Left 32 Bits:  01011000010010101001101000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001000110001011010001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000010010101001101000111111

       - Right 32 Bits:            10111001000110001011010001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       10111001000110001011010001100001
          - S-Box Result:     10000011101000101000011100001010   [per every group of 4-bits]
          - Split Into Two:   1000001110100010 [L] 1000011100001010 [R]
          - Swap Halves:      10000111000010101000001110100010
          - Bit Inversion:    01111000111101010111110001011101
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10011101110111101110100101100001

          - FUNCTION OUTPUT:  10011101110111101110100101100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000010010101001101000111111

       - FUNCTION OUTPUT:          10011101110111101110100101100001

       - Left XOR FUNCTION OUTPUT: 11000101100101000111001101011110

       - Next Round Left 32 Bits:  10111001000110001011010001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101100101000111001101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100010110010100011100110101111010111001000110001011010001100001

 > Decrypted Block:     1100010110010100011100110101111010111001000110001011010001100001


!!!CBC: Previous Ciphertext:                             1001111011010001001111010001101011100110010100111111000100111000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101101000101010011100100010001011111010010110100010101011001

 > Final Processed Block:                                0101101101000101010011100100010001011111010010110100010101011001



Ciphertext Block 6:                                      1100111000000011011101111111001010010011000011110100010110010100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110000000110111011111110010

       - Right 32 Bits:            10010011000011110100010110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       10010011000011110100010110010100
          - S-Box Result:     00110001111110110111100100110111   [per every group of 4-bits]
          - Split Into Two:   0011000111111011 [L] 0111100100110111 [R]
          - Swap Halves:      01111001001101110011000111111011
          - Bit Inversion:    10000110110010001100111000000100
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     11011100001010111101110001000100

          - FUNCTION OUTPUT:  11011100001010111101110001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110000000110111011111110010

       - FUNCTION OUTPUT:          11011100001010111101110001000100

       - Left XOR FUNCTION OUTPUT: 00010010001010001010101110110110

       - Next Round Left 32 Bits:  10010011000011110100010110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001010001010101110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011000011110100010110010100

       - Right 32 Bits:            00010010001010001010101110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       00010010001010001010101110110110
          - S-Box Result:     10101110111000100100100010000000   [per every group of 4-bits]
          - Split Into Two:   1010111011100010 [L] 0100100010000000 [R]
          - Swap Halves:      01001000100000001010111011100010
          - Bit Inversion:    10110111011111110101000100011101
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     01010010010101001100010000100001

          - FUNCTION OUTPUT:  01010010010101001100010000100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011000011110100010110010100

       - FUNCTION OUTPUT:          01010010010101001100010000100001

       - Left XOR FUNCTION OUTPUT: 11000001010110111000000110110101

       - Next Round Left 32 Bits:  00010010001010001010101110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001010110111000000110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010001010001010101110110110

       - Right 32 Bits:            11000001010110111000000110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       11000001010110111000000110110101
          - S-Box Result:     01011010100110000010101010001001   [per every group of 4-bits]
          - Split Into Two:   0101101010011000 [L] 0010101010001001 [R]
          - Swap Halves:      00101010100010010101101010011000
          - Bit Inversion:    11010101011101101010010101100111
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     10011111001011111000001100101111

          - FUNCTION OUTPUT:  10011111001011111000001100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010001010001010101110110110

       - FUNCTION OUTPUT:          10011111001011111000001100101111

       - Left XOR FUNCTION OUTPUT: 10001101000001110010100010011001

       - Next Round Left 32 Bits:  11000001010110111000000110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101000001110010100010011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001010110111000000110110101

       - Right 32 Bits:            10001101000001110010100010011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       10001101000001110010100010011001
          - S-Box Result:     00100110111111011110001000110011   [per every group of 4-bits]
          - Split Into Two:   0010011011111101 [L] 1110001000110011 [R]
          - Swap Halves:      11100010001100110010011011111101
          - Bit Inversion:    00011101110011001101100100000010
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     11000000011010001010101010100100

          - FUNCTION OUTPUT:  11000000011010001010101010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001010110111000000110110101

       - FUNCTION OUTPUT:          11000000011010001010101010100100

       - Left XOR FUNCTION OUTPUT: 00000001001100110010101100010001

       - Next Round Left 32 Bits:  10001101000001110010100010011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001001100110010101100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101000001110010100010011001

       - Right 32 Bits:            00000001001100110010101100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       00000001001100110010101100010001
          - S-Box Result:     11111010000100011110100010101010   [per every group of 4-bits]
          - Split Into Two:   1111101000010001 [L] 1110100010101010 [R]
          - Swap Halves:      11101000101010101111101000010001
          - Bit Inversion:    00010111010101010000010111101110
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     00001011000011110111010101100110

          - FUNCTION OUTPUT:  00001011000011110111010101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101000001110010100010011001

       - FUNCTION OUTPUT:          00001011000011110111010101100110

       - Left XOR FUNCTION OUTPUT: 10000110000010000101110111111111

       - Next Round Left 32 Bits:  00000001001100110010101100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110000010000101110111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001001100110010101100010001

       - Right 32 Bits:            10000110000010000101110111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       10000110000010000101110111111111
          - S-Box Result:     00100000111100101001011010111011   [per every group of 4-bits]
          - Split Into Two:   0010000011110010 [L] 1001011010111011 [R]
          - Swap Halves:      10010110101110110010000011110010
          - Bit Inversion:    01101001010001001101111100001101
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     10100110101100010101010101101000

          - FUNCTION OUTPUT:  10100110101100010101010101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001001100110010101100010001

       - FUNCTION OUTPUT:          10100110101100010101010101101000

       - Left XOR FUNCTION OUTPUT: 10100111100000100111111001111001

       - Next Round Left 32 Bits:  10000110000010000101110111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111100000100111111001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110000010000101110111111111

       - Right 32 Bits:            10100111100000100111111001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       10100111100000100111111001111001
          - S-Box Result:     01001101001011101101110011010011   [per every group of 4-bits]
          - Split Into Two:   0100110100101110 [L] 1101110011010011 [R]
          - Swap Halves:      11011100110100110100110100101110
          - Bit Inversion:    00100011001011001011001011010001
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     01110101101101101110110011010000

          - FUNCTION OUTPUT:  01110101101101101110110011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110000010000101110111111111

       - FUNCTION OUTPUT:          01110101101101101110110011010000

       - Left XOR FUNCTION OUTPUT: 11110011101111101011000100101111

       - Next Round Left 32 Bits:  10100111100000100111111001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011101111101011000100101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111100000100111111001111001

       - Right 32 Bits:            11110011101111101011000100101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       11110011101111101011000100101111
          - S-Box Result:     10110001100011001000101011101011   [per every group of 4-bits]
          - Split Into Two:   1011000110001100 [L] 1000101011101011 [R]
          - Swap Halves:      10001010111010111011000110001100
          - Bit Inversion:    01110101000101000100111001110011
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     10011000101010111110101101101111

          - FUNCTION OUTPUT:  10011000101010111110101101101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111100000100111111001111001

       - FUNCTION OUTPUT:          10011000101010111110101101101111

       - Left XOR FUNCTION OUTPUT: 00111111001010011001010100010110

       - Next Round Left 32 Bits:  11110011101111101011000100101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111001010011001010100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011101111101011000100101111

       - Right 32 Bits:            00111111001010011001010100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       00111111001010011001010100010110
          - S-Box Result:     00011011111000110011100110100000   [per every group of 4-bits]
          - Split Into Two:   0001101111100011 [L] 0011100110100000 [R]
          - Swap Halves:      00111001101000000001101111100011
          - Bit Inversion:    11000110010111111110010000011100
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     10101100100111001111111011001000

          - FUNCTION OUTPUT:  10101100100111001111111011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011101111101011000100101111

       - FUNCTION OUTPUT:          10101100100111001111111011001000

       - Left XOR FUNCTION OUTPUT: 01011111001000100100111111100111

       - Next Round Left 32 Bits:  00111111001010011001010100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111001000100100111111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111001010011001010100010110

       - Right 32 Bits:            01011111001000100100111111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       01011111001000100100111111100111
          - S-Box Result:     10011011111011100111101111001101   [per every group of 4-bits]
          - Split Into Two:   1001101111101110 [L] 0111101111001101 [R]
          - Swap Halves:      01111011110011011001101111101110
          - Bit Inversion:    10000100001100100110010000010001
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     01011101100001011101000110110111

          - FUNCTION OUTPUT:  01011101100001011101000110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111001010011001010100010110

       - FUNCTION OUTPUT:          01011101100001011101000110110111

       - Left XOR FUNCTION OUTPUT: 01100010101011000100010010100001

       - Next Round Left 32 Bits:  01011111001000100100111111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010101011000100010010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111001000100100111111100111

       - Right 32 Bits:            01100010101011000100010010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       01100010101011000100010010100001
          - S-Box Result:     00001110010001010111011101001010   [per every group of 4-bits]
          - Split Into Two:   0000111001000101 [L] 0111011101001010 [R]
          - Swap Halves:      01110111010010100000111001000101
          - Bit Inversion:    10001000101101011111000110111010
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     00000100111011001101001111100001

          - FUNCTION OUTPUT:  00000100111011001101001111100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111001000100100111111100111

       - FUNCTION OUTPUT:          00000100111011001101001111100001

       - Left XOR FUNCTION OUTPUT: 01011011110011101001110000000110

       - Next Round Left 32 Bits:  01100010101011000100010010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011110011101001110000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010101011000100010010100001

       - Right 32 Bits:            01011011110011101001110000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       01011011110011101001110000000110
          - S-Box Result:     10011000010111000011010111110000   [per every group of 4-bits]
          - Split Into Two:   1001100001011100 [L] 0011010111110000 [R]
          - Swap Halves:      00110101111100001001100001011100
          - Bit Inversion:    11001010000011110110011110100011
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     01000101011110001000010000000110

          - FUNCTION OUTPUT:  01000101011110001000010000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010101011000100010010100001

       - FUNCTION OUTPUT:          01000101011110001000010000000110

       - Left XOR FUNCTION OUTPUT: 00100111110101001100000010100111

       - Next Round Left 32 Bits:  01011011110011101001110000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111110101001100000010100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011110011101001110000000110

       - Right 32 Bits:            00100111110101001100000010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       00100111110101001100000010100111
          - S-Box Result:     11101101011001110101111101001101   [per every group of 4-bits]
          - Split Into Two:   1110110101100111 [L] 0101111101001101 [R]
          - Swap Halves:      01011111010011011110110101100111
          - Bit Inversion:    10100000101100100001001010011000
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     11010101001010000010001010010010

          - FUNCTION OUTPUT:  11010101001010000010001010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011110011101001110000000110

       - FUNCTION OUTPUT:          11010101001010000010001010010010

       - Left XOR FUNCTION OUTPUT: 10001110111001101011111010010100

       - Next Round Left 32 Bits:  00100111110101001100000010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110111001101011111010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111110101001100000010100111

       - Right 32 Bits:            10001110111001101011111010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       10001110111001101011111010010100
          - S-Box Result:     00101100110000001000110000110111   [per every group of 4-bits]
          - Split Into Two:   0010110011000000 [L] 1000110000110111 [R]
          - Swap Halves:      10001100001101110010110011000000
          - Bit Inversion:    01110011110010001101001100111111
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     11010010001101100111101001011010

          - FUNCTION OUTPUT:  11010010001101100111101001011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111110101001100000010100111

       - FUNCTION OUTPUT:          11010010001101100111101001011010

       - Left XOR FUNCTION OUTPUT: 11110101111000101011101011111101

       - Next Round Left 32 Bits:  10001110111001101011111010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101111000101011101011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110111001101011111010010100

       - Right 32 Bits:            11110101111000101011101011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       11110101111000101011101011111101
          - S-Box Result:     10111001110011101000010010110110   [per every group of 4-bits]
          - Split Into Two:   1011100111001110 [L] 1000010010110110 [R]
          - Swap Halves:      10000100101101101011100111001110
          - Bit Inversion:    01111011010010010100011000110001
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00100001101010100101010001110001

          - FUNCTION OUTPUT:  00100001101010100101010001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110111001101011111010010100

       - FUNCTION OUTPUT:          00100001101010100101010001110001

       - Left XOR FUNCTION OUTPUT: 10101111010011001110101011100101

       - Next Round Left 32 Bits:  11110101111000101011101011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111010011001110101011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101111000101011101011111101

       - Right 32 Bits:            10101111010011001110101011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       10101111010011001110101011100101
          - S-Box Result:     01001011011101011100010011001001   [per every group of 4-bits]
          - Split Into Two:   0100101101110101 [L] 1100010011001001 [R]
          - Swap Halves:      11000100110010010100101101110101
          - Bit Inversion:    00111011001101101011010010001010
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     11011110000111010010000110110110

          - FUNCTION OUTPUT:  11011110000111010010000110110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101111000101011101011111101

       - FUNCTION OUTPUT:          11011110000111010010000110110110

       - Left XOR FUNCTION OUTPUT: 00101011111111111001101101001011

       - Next Round Left 32 Bits:  10101111010011001110101011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011111111111001101101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010101111111111100110110100101110101111010011001110101011100101

 > Decrypted Block:     0010101111111111100110110100101110101111010011001110101011100101


!!!CBC: Previous Ciphertext:                             0111011010100100110010000001111111101110000111101011111010111010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101110101011011010100110101010001000001010100100101010001011111

 > Final Processed Block:                                0101110101011011010100110101010001000001010100100101010001011111



Ciphertext Block 7:                                      1001001100110101010111100101011000101111000101101000001011110100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011001101010101111001010110

       - Right 32 Bits:            00101111000101101000001011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       00101111000101101000001011110100
          - S-Box Result:     11101011101000000010111010110111   [per every group of 4-bits]
          - Split Into Two:   1110101110100000 [L] 0010111010110111 [R]
          - Swap Halves:      00101110101101111110101110100000
          - Bit Inversion:    11010001010010000001010001011111
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10001011101010110000011000011111

          - FUNCTION OUTPUT:  10001011101010110000011000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011001101010101111001010110

       - FUNCTION OUTPUT:          10001011101010110000011000011111

       - Left XOR FUNCTION OUTPUT: 00011000100111100101100001001001

       - Next Round Left 32 Bits:  00101111000101101000001011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000100111100101100001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111000101101000001011110100

       - Right 32 Bits:            00011000100111100101100001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       00011000100111100101100001001001
          - S-Box Result:     10100010001111001001001001110011   [per every group of 4-bits]
          - Split Into Two:   1010001000111100 [L] 1001001001110011 [R]
          - Swap Halves:      10010010011100111010001000111100
          - Bit Inversion:    01101101100011000101110111000011
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10001000101001111100100011111111

          - FUNCTION OUTPUT:  10001000101001111100100011111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111000101101000001011110100

       - FUNCTION OUTPUT:          10001000101001111100100011111111

       - Left XOR FUNCTION OUTPUT: 10100111101100010100101000001011

       - Next Round Left 32 Bits:  00011000100111100101100001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111101100010100101000001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000100111100101100001001001

       - Right 32 Bits:            10100111101100010100101000001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       10100111101100010100101000001011
          - S-Box Result:     01001101100010100111010011111000   [per every group of 4-bits]
          - Split Into Two:   0100110110001010 [L] 0111010011111000 [R]
          - Swap Halves:      01110100111110000100110110001010
          - Bit Inversion:    10001011000001111011001001110101
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     11000001010111101001010000111101

          - FUNCTION OUTPUT:  11000001010111101001010000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000100111100101100001001001

       - FUNCTION OUTPUT:          11000001010111101001010000111101

       - Left XOR FUNCTION OUTPUT: 11011001110000001100110001110100

       - Next Round Left 32 Bits:  10100111101100010100101000001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001110000001100110001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111101100010100101000001011

       - Right 32 Bits:            11011001110000001100110001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       11011001110000001100110001110100
          - S-Box Result:     01100011010111110101010111010111   [per every group of 4-bits]
          - Split Into Two:   0110001101011111 [L] 0101010111010111 [R]
          - Swap Halves:      01010101110101110110001101011111
          - Bit Inversion:    10101010001010001001110010100000
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     01110111100011001110111100000110

          - FUNCTION OUTPUT:  01110111100011001110111100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111101100010100101000001011

       - FUNCTION OUTPUT:          01110111100011001110111100000110

       - Left XOR FUNCTION OUTPUT: 11010000001111011010010100001101

       - Next Round Left 32 Bits:  11011001110000001100110001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000001111011010010100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001110000001100110001110100

       - Right 32 Bits:            11010000001111011010010100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11010000001111011010010100001101
          - S-Box Result:     01101111000101100100100111110110   [per every group of 4-bits]
          - Split Into Two:   0110111100010110 [L] 0100100111110110 [R]
          - Swap Halves:      01001001111101100110111100010110
          - Bit Inversion:    10110110000010011001000011101001
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     10101010010100111110000001100001

          - FUNCTION OUTPUT:  10101010010100111110000001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001110000001100110001110100

       - FUNCTION OUTPUT:          10101010010100111110000001100001

       - Left XOR FUNCTION OUTPUT: 01110011100100110010110000010101

       - Next Round Left 32 Bits:  11010000001111011010010100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011100100110010110000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000001111011010010100001101

       - Right 32 Bits:            01110011100100110010110000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       01110011100100110010110000010101
          - S-Box Result:     11010001001100011110010110101001   [per every group of 4-bits]
          - Split Into Two:   1101000100110001 [L] 1110010110101001 [R]
          - Swap Halves:      11100101101010011101000100110001
          - Bit Inversion:    00011010010101100010111011001110
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     11010101101000111010010010101011

          - FUNCTION OUTPUT:  11010101101000111010010010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000001111011010010100001101

       - FUNCTION OUTPUT:          11010101101000111010010010101011

       - Left XOR FUNCTION OUTPUT: 00000101100111100000000110100110

       - Next Round Left 32 Bits:  01110011100100110010110000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101100111100000000110100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011100100110010110000010101

       - Right 32 Bits:            00000101100111100000000110100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       00000101100111100000000110100110
          - S-Box Result:     11111001001111001111101001000000   [per every group of 4-bits]
          - Split Into Two:   1111100100111100 [L] 1111101001000000 [R]
          - Swap Halves:      11111010010000001111100100111100
          - Bit Inversion:    00000101101111110000011011000011
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     01010011001001010101100011000010

          - FUNCTION OUTPUT:  01010011001001010101100011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011100100110010110000010101

       - FUNCTION OUTPUT:          01010011001001010101100011000010

       - Left XOR FUNCTION OUTPUT: 00100000101101100111010011010111

       - Next Round Left 32 Bits:  00000101100111100000000110100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000101101100111010011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101100111100000000110100110

       - Right 32 Bits:            00100000101101100111010011010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00100000101101100111010011010111
          - S-Box Result:     11101111100000001101011101101101   [per every group of 4-bits]
          - Split Into Two:   1110111110000000 [L] 1101011101101101 [R]
          - Swap Halves:      11010111011011011110111110000000
          - Bit Inversion:    00101000100100100001000001111111
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     11000101001011011011010101100011

          - FUNCTION OUTPUT:  11000101001011011011010101100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101100111100000000110100110

       - FUNCTION OUTPUT:          11000101001011011011010101100011

       - Left XOR FUNCTION OUTPUT: 11000000101100111011010011000101

       - Next Round Left 32 Bits:  00100000101101100111010011010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000101100111011010011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000101101100111010011010111

       - Right 32 Bits:            11000000101100111011010011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       11000000101100111011010011000101
          - S-Box Result:     01011111100000011000011101011001   [per every group of 4-bits]
          - Split Into Two:   0101111110000001 [L] 1000011101011001 [R]
          - Swap Halves:      10000111010110010101111110000001
          - Bit Inversion:    01111000101001101010000001111110
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     00010010011001011011101010101010

          - FUNCTION OUTPUT:  00010010011001011011101010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000101101100111010011010111

       - FUNCTION OUTPUT:          00010010011001011011101010101010

       - Left XOR FUNCTION OUTPUT: 00110010110100111100111001111101

       - Next Round Left 32 Bits:  11000000101100111011010011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010110100111100111001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000101100111011010011000101

       - Right 32 Bits:            00110010110100111100111001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       00110010110100111100111001111101
          - S-Box Result:     00011110011000010101110011010110   [per every group of 4-bits]
          - Split Into Two:   0001111001100001 [L] 0101110011010110 [R]
          - Swap Halves:      01011100110101100001111001100001
          - Bit Inversion:    10100011001010011110000110011110
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     01111010100111100101010000111000

          - FUNCTION OUTPUT:  01111010100111100101010000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000101100111011010011000101

       - FUNCTION OUTPUT:          01111010100111100101010000111000

       - Left XOR FUNCTION OUTPUT: 10111010001011011110000011111101

       - Next Round Left 32 Bits:  00110010110100111100111001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010001011011110000011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010110100111100111001111101

       - Right 32 Bits:            10111010001011011110000011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       10111010001011011110000011111101
          - S-Box Result:     10000100111001101100111110110110   [per every group of 4-bits]
          - Split Into Two:   1000010011100110 [L] 1100111110110110 [R]
          - Swap Halves:      11001111101101101000010011100110
          - Bit Inversion:    00110000010010010111101100011001
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     10111100000100000101100101000010

          - FUNCTION OUTPUT:  10111100000100000101100101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010110100111100111001111101

       - FUNCTION OUTPUT:          10111100000100000101100101000010

       - Left XOR FUNCTION OUTPUT: 10001110110000111001011100111111

       - Next Round Left 32 Bits:  10111010001011011110000011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110110000111001011100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010001011011110000011111101

       - Right 32 Bits:            10001110110000111001011100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       10001110110000111001011100111111
          - S-Box Result:     00101100010100010011110100011011   [per every group of 4-bits]
          - Split Into Two:   0010110001010001 [L] 0011110100011011 [R]
          - Swap Halves:      00111101000110110010110001010001
          - Bit Inversion:    11000010111001001101001110101110
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     01001101100100110011000000001011

          - FUNCTION OUTPUT:  01001101100100110011000000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010001011011110000011111101

       - FUNCTION OUTPUT:          01001101100100110011000000001011

       - Left XOR FUNCTION OUTPUT: 11110111101111101101000011110110

       - Next Round Left 32 Bits:  10001110110000111001011100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111101111101101000011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110110000111001011100111111

       - Right 32 Bits:            11110111101111101101000011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       11110111101111101101000011110110
          - S-Box Result:     10111101100011000110111110110000   [per every group of 4-bits]
          - Split Into Two:   1011110110001100 [L] 0110111110110000 [R]
          - Swap Halves:      01101111101100001011110110001100
          - Bit Inversion:    10010000010011110100001001110011
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     11100101110101010111001001111001

          - FUNCTION OUTPUT:  11100101110101010111001001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110110000111001011100111111

       - FUNCTION OUTPUT:          11100101110101010111001001111001

       - Left XOR FUNCTION OUTPUT: 01101011000101101110010101000110

       - Next Round Left 32 Bits:  11110111101111101101000011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011000101101110010101000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111101111101101000011110110

       - Right 32 Bits:            01101011000101101110010101000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       01101011000101101110010101000110
          - S-Box Result:     00001000101000001100100101110000   [per every group of 4-bits]
          - Split Into Two:   0000100010100000 [L] 1100100101110000 [R]
          - Swap Halves:      11001001011100000000100010100000
          - Bit Inversion:    00110110100011111111011101011111
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     10010111011100010101111000111010

          - FUNCTION OUTPUT:  10010111011100010101111000111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111101111101101000011110110

       - FUNCTION OUTPUT:          10010111011100010101111000111010

       - Left XOR FUNCTION OUTPUT: 01100000110011111000111011001100

       - Next Round Left 32 Bits:  01101011000101101110010101000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000110011111000111011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011000101101110010101000110

       - Right 32 Bits:            01100000110011111000111011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01100000110011111000111011001100
          - S-Box Result:     00001111010110110010110001010101   [per every group of 4-bits]
          - Split Into Two:   0000111101011011 [L] 0010110001010101 [R]
          - Swap Halves:      00101100010101010000111101011011
          - Bit Inversion:    11010011101010101111000010100100
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     10001001010010011110001011100100

          - FUNCTION OUTPUT:  10001001010010011110001011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011000101101110010101000110

       - FUNCTION OUTPUT:          10001001010010011110001011100100

       - Left XOR FUNCTION OUTPUT: 11100010010111110000011110100010

       - Next Round Left 32 Bits:  01100000110011111000111011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010010111110000011110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000110011111000111011001100

       - Right 32 Bits:            11100010010111110000011110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       11100010010111110000011110100010
          - S-Box Result:     11001110100110111111110101001110   [per every group of 4-bits]
          - Split Into Two:   1100111010011011 [L] 1111110101001110 [R]
          - Swap Halves:      11111101010011101100111010011011
          - Bit Inversion:    00000010101100010011000101100100
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     11100111100110101010010001011000

          - FUNCTION OUTPUT:  11100111100110101010010001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000110011111000111011001100

       - FUNCTION OUTPUT:          11100111100110101010010001011000

       - Left XOR FUNCTION OUTPUT: 10000111010101010010101010010100

       - Next Round Left 32 Bits:  11100010010111110000011110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111010101010010101010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000011101010101001010101001010011100010010111110000011110100010

 > Decrypted Block:     1000011101010101001010101001010011100010010111110000011110100010


!!!CBC: Previous Ciphertext:                             1100111000000011011101111111001010010011000011110100010110010100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100101010110010111010110011001110001010100000100001000110110

 > Final Processed Block:                                0100100101010110010111010110011001110001010100000100001000110110



Ciphertext Block 8:                                      0000100001000110000110011111011111000000011101011011011111010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000010001100001100111110111

       - Right 32 Bits:            11000000011101011011011111010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11000000011101011011011111010110
          - S-Box Result:     01011111110110011000110101100000   [per every group of 4-bits]
          - Split Into Two:   0101111111011001 [L] 1000110101100000 [R]
          - Swap Halves:      10001101011000000101111111011001
          - Bit Inversion:    01110010100111111010000000100110
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00101000011111001011001001100110

          - FUNCTION OUTPUT:  00101000011111001011001001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000010001100001100111110111

       - FUNCTION OUTPUT:          00101000011111001011001001100110

       - Left XOR FUNCTION OUTPUT: 00100000001110101010101110010001

       - Next Round Left 32 Bits:  11000000011101011011011111010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000001110101010101110010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000011101011011011111010110

       - Right 32 Bits:            00100000001110101010101110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       00100000001110101010101110010001
          - S-Box Result:     11101111000101000100100000111010   [per every group of 4-bits]
          - Split Into Two:   1110111100010100 [L] 0100100000111010 [R]
          - Swap Halves:      01001000001110101110111100010100
          - Bit Inversion:    10110111110001010001000011101011
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     01010010111011101000010111010111

          - FUNCTION OUTPUT:  01010010111011101000010111010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000011101011011011111010110

       - FUNCTION OUTPUT:          01010010111011101000010111010111

       - Left XOR FUNCTION OUTPUT: 10010010100110110011001000000001

       - Next Round Left 32 Bits:  00100000001110101010101110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010100110110011001000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000001110101010101110010001

       - Right 32 Bits:            10010010100110110011001000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       10010010100110110011001000000001
          - S-Box Result:     00111110001110000001111011111010   [per every group of 4-bits]
          - Split Into Two:   0011111000111000 [L] 0001111011111010 [R]
          - Swap Halves:      00011110111110100011111000111000
          - Bit Inversion:    11100001000001011100000111000111
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     10101011010111001110011110001111

          - FUNCTION OUTPUT:  10101011010111001110011110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000001110101010101110010001

       - FUNCTION OUTPUT:          10101011010111001110011110001111

       - Left XOR FUNCTION OUTPUT: 10001011011001100100110000011110

       - Next Round Left 32 Bits:  10010010100110110011001000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011011001100100110000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010100110110011001000000001

       - Right 32 Bits:            10001011011001100100110000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       10001011011001100100110000011110
          - S-Box Result:     00101000000000000111010110101100   [per every group of 4-bits]
          - Split Into Two:   0010100000000000 [L] 0111010110101100 [R]
          - Swap Halves:      01110101101011000010100000000000
          - Bit Inversion:    10001010010100111101011111111111
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     01010111111101111010010001011001

          - FUNCTION OUTPUT:  01010111111101111010010001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010100110110011001000000001

       - FUNCTION OUTPUT:          01010111111101111010010001011001

       - Left XOR FUNCTION OUTPUT: 11000101011011001001011001011000

       - Next Round Left 32 Bits:  10001011011001100100110000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101011011001001011001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011011001100100110000011110

       - Right 32 Bits:            11000101011011001001011001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11000101011011001001011001011000
          - S-Box Result:     01011001000001010011000010010010   [per every group of 4-bits]
          - Split Into Two:   0101100100000101 [L] 0011000010010010 [R]
          - Swap Halves:      00110000100100100101100100000101
          - Bit Inversion:    11001111011011011010011011111010
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     11010011001101111101011001110010

          - FUNCTION OUTPUT:  11010011001101111101011001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011011001100100110000011110

       - FUNCTION OUTPUT:          11010011001101111101011001110010

       - Left XOR FUNCTION OUTPUT: 01011000010100011001101001101100

       - Next Round Left 32 Bits:  11000101011011001001011001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000010100011001101001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101011011001001011001011000

       - Right 32 Bits:            01011000010100011001101001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       01011000010100011001101001101100
          - S-Box Result:     10010010100110100011010000000101   [per every group of 4-bits]
          - Split Into Two:   1001001010011010 [L] 0011010000000101 [R]
          - Swap Halves:      00110100000001011001001010011010
          - Bit Inversion:    11001011111110100110110101100101
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     00000100000011111110011100000000

          - FUNCTION OUTPUT:  00000100000011111110011100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101011011001001011001011000

       - FUNCTION OUTPUT:          00000100000011111110011100000000

       - Left XOR FUNCTION OUTPUT: 11000001011000110111000101011000

       - Next Round Left 32 Bits:  01011000010100011001101001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001011000110111000101011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000010100011001101001101100

       - Right 32 Bits:            11000001011000110111000101011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       11000001011000110111000101011000
          - S-Box Result:     01011010000000011101101010010010   [per every group of 4-bits]
          - Split Into Two:   0101101000000001 [L] 1101101010010010 [R]
          - Swap Halves:      11011010100100100101101000000001
          - Bit Inversion:    00100101011011011010010111111110
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     01110011111101111111101111111111

          - FUNCTION OUTPUT:  01110011111101111111101111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000010100011001101001101100

       - FUNCTION OUTPUT:          01110011111101111111101111111111

       - Left XOR FUNCTION OUTPUT: 00101011101001100110000110010011

       - Next Round Left 32 Bits:  11000001011000110111000101011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011101001100110000110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001011000110111000101011000

       - Right 32 Bits:            00101011101001100110000110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00101011101001100110000110010011
          - S-Box Result:     11101000010000000000101000110001   [per every group of 4-bits]
          - Split Into Two:   1110100001000000 [L] 0000101000110001 [R]
          - Swap Halves:      00001010001100011110100001000000
          - Bit Inversion:    11110101110011100001011110111111
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     00011000011100011011001010100011

          - FUNCTION OUTPUT:  00011000011100011011001010100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001011000110111000101011000

       - FUNCTION OUTPUT:          00011000011100011011001010100011

       - Left XOR FUNCTION OUTPUT: 11011001000100101100001111111011

       - Next Round Left 32 Bits:  00101011101001100110000110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001000100101100001111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011101001100110000110010011

       - Right 32 Bits:            11011001000100101100001111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       11011001000100101100001111111011
          - S-Box Result:     01100011101011100101000110111000   [per every group of 4-bits]
          - Split Into Two:   0110001110101110 [L] 0101000110111000 [R]
          - Swap Halves:      01010001101110000110001110101110
          - Bit Inversion:    10101110010001111001110001010001
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     11000100100001001000011010000101

          - FUNCTION OUTPUT:  11000100100001001000011010000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011101001100110000110010011

       - FUNCTION OUTPUT:          11000100100001001000011010000101

       - Left XOR FUNCTION OUTPUT: 11101111001000101110011100010110

       - Next Round Left 32 Bits:  11011001000100101100001111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111001000101110011100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001000100101100001111111011

       - Right 32 Bits:            11101111001000101110011100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       11101111001000101110011100010110
          - S-Box Result:     11001011111011101100110110100000   [per every group of 4-bits]
          - Split Into Two:   1100101111101110 [L] 1100110110100000 [R]
          - Swap Halves:      11001101101000001100101111101110
          - Bit Inversion:    00110010010111110011010000010001
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     11101011111010001000000110110111

          - FUNCTION OUTPUT:  11101011111010001000000110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001000100101100001111111011

       - FUNCTION OUTPUT:          11101011111010001000000110110111

       - Left XOR FUNCTION OUTPUT: 00110010111110100100001001001100

       - Next Round Left 32 Bits:  11101111001000101110011100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010111110100100001001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111001000101110011100010110

       - Right 32 Bits:            00110010111110100100001001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       00110010111110100100001001001100
          - S-Box Result:     00011110101101000111111001110101   [per every group of 4-bits]
          - Split Into Two:   0001111010110100 [L] 0111111001110101 [R]
          - Swap Halves:      01111110011101010001111010110100
          - Bit Inversion:    10000001100010101110000101001011
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     00001101110100111100001100010000

          - FUNCTION OUTPUT:  00001101110100111100001100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111001000101110011100010110

       - FUNCTION OUTPUT:          00001101110100111100001100010000

       - Left XOR FUNCTION OUTPUT: 11100010111100010010010000000110

       - Next Round Left 32 Bits:  00110010111110100100001001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111100010010010000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010111110100100001001001100

       - Right 32 Bits:            11100010111100010010010000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       11100010111100010010010000000110
          - S-Box Result:     11001110101110101110011111110000   [per every group of 4-bits]
          - Split Into Two:   1100111010111010 [L] 1110011111110000 [R]
          - Swap Halves:      11100111111100001100111010111010
          - Bit Inversion:    00011000000011110011000101000101
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     10010111011110001101001011100000

          - FUNCTION OUTPUT:  10010111011110001101001011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010111110100100001001001100

       - FUNCTION OUTPUT:          10010111011110001101001011100000

       - Left XOR FUNCTION OUTPUT: 10100101100000101001000010101100

       - Next Round Left 32 Bits:  11100010111100010010010000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101100000101001000010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111100010010010000000110

       - Right 32 Bits:            10100101100000101001000010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       10100101100000101001000010101100
          - S-Box Result:     01001001001011100011111101000101   [per every group of 4-bits]
          - Split Into Two:   0100100100101110 [L] 0011111101000101 [R]
          - Swap Halves:      00111111010001010100100100101110
          - Bit Inversion:    11000000101110101011011011010001
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     10110101001000001000011011011011

          - FUNCTION OUTPUT:  10110101001000001000011011011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111100010010010000000110

       - FUNCTION OUTPUT:          10110101001000001000011011011011

       - Left XOR FUNCTION OUTPUT: 01010111110100011010001011011101

       - Next Round Left 32 Bits:  10100101100000101001000010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111110100011010001011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101100000101001000010101100

       - Right 32 Bits:            01010111110100011010001011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       01010111110100011010001011011101
          - S-Box Result:     10011101011010100100111001100110   [per every group of 4-bits]
          - Split Into Two:   1001110101101010 [L] 0100111001100110 [R]
          - Swap Halves:      01001110011001101001110101101010
          - Bit Inversion:    10110001100110010110001010010101
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     00010000011001111100101111110000

          - FUNCTION OUTPUT:  00010000011001111100101111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101100000101001000010101100

       - FUNCTION OUTPUT:          00010000011001111100101111110000

       - Left XOR FUNCTION OUTPUT: 10110101111001010101101101011100

       - Next Round Left 32 Bits:  01010111110100011010001011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101111001010101101101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111110100011010001011011101

       - Right 32 Bits:            10110101111001010101101101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       10110101111001010101101101011100
          - S-Box Result:     10001001110010011001100010010101   [per every group of 4-bits]
          - Split Into Two:   1000100111001001 [L] 1001100010010101 [R]
          - Swap Halves:      10011000100101011000100111001001
          - Bit Inversion:    01100111011010100111011000110110
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00111101100010010110010001110110

          - FUNCTION OUTPUT:  00111101100010010110010001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111110100011010001011011101

       - FUNCTION OUTPUT:          00111101100010010110010001110110

       - Left XOR FUNCTION OUTPUT: 01101010010110001100011010101011

       - Next Round Left 32 Bits:  10110101111001010101101101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010010110001100011010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101111001010101101101011100

       - Right 32 Bits:            01101010010110001100011010101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       01101010010110001100011010101011
          - S-Box Result:     00000100100100100101000001001000   [per every group of 4-bits]
          - Split Into Two:   0000010010010010 [L] 0101000001001000 [R]
          - Swap Halves:      01010000010010000000010010010010
          - Bit Inversion:    10101111101101111111101101101101
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     01001010100111000110111001010001

          - FUNCTION OUTPUT:  01001010100111000110111001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101111001010101101101011100

       - FUNCTION OUTPUT:          01001010100111000110111001010001

       - Left XOR FUNCTION OUTPUT: 11111111011110010011010100001101

       - Next Round Left 32 Bits:  01101010010110001100011010101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111011110010011010100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111111101111001001101010000110101101010010110001100011010101011

 > Decrypted Block:     1111111101111001001101010000110101101010010110001100011010101011


!!!CBC: Previous Ciphertext:                             1001001100110101010111100101011000101111000101101000001011110100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110110001001100011010110101101101000101010011100100010001011111

 > Final Processed Block:                                0110110001001100011010110101101101000101010011100100010001011111



Ciphertext Block 9:                                      0101001000010011111000010000110111000101000101111111001100001011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010000100111110000100001101

       - Right 32 Bits:            11000101000101111111001100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 16]
          - Input Half:       11000101000101111111001100001011
          - S-Box Result:     01011001101011011011000111111000   [per every group of 4-bits]
          - Split Into Two:   0101100110101101 [L] 1011000111111000 [R]
          - Swap Halves:      10110001111110000101100110101101
          - Bit Inversion:    01001110000001111010011001010010
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     00010100111001001011010000010010

          - FUNCTION OUTPUT:  00010100111001001011010000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010000100111110000100001101

       - FUNCTION OUTPUT:          00010100111001001011010000010010

       - Left XOR FUNCTION OUTPUT: 01000110111101110101010100011111

       - Next Round Left 32 Bits:  11000101000101111111001100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110111101110101010100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101000101111111001100001011

       - Right 32 Bits:            01000110111101110101010100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 15]
          - Input Half:       01000110111101110101010100011111
          - S-Box Result:     01110000101111011001100110101011   [per every group of 4-bits]
          - Split Into Two:   0111000010111101 [L] 1001100110101011 [R]
          - Swap Halves:      10011001101010110111000010111101
          - Bit Inversion:    01100110010101001000111101000010
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     10000011011111110001101001111110

          - FUNCTION OUTPUT:  10000011011111110001101001111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101000101111111001100001011

       - FUNCTION OUTPUT:          10000011011111110001101001111110

       - Left XOR FUNCTION OUTPUT: 01000110011010001110100101110101

       - Next Round Left 32 Bits:  01000110111101110101010100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110011010001110100101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110111101110101010100011111

       - Right 32 Bits:            01000110011010001110100101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110000010101010101011101101000001100100101010001100100   [Subkey: 14]
          - Input Half:       01000110011010001110100101110101
          - S-Box Result:     01110000000000101100001111011001   [per every group of 4-bits]
          - Split Into Two:   0111000000000010 [L] 1100001111011001 [R]
          - Swap Halves:      11000011110110010111000000000010
          - Bit Inversion:    00111100001001101000111111111101
          - Compressed Key:   01001010010110010010011001001000   [done by compression P-Box]
          - XOR with Key:     01110110011111111010100110110101

          - FUNCTION OUTPUT:  01110110011111111010100110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110111101110101010100011111

       - FUNCTION OUTPUT:          01110110011111111010100110110101

       - Left XOR FUNCTION OUTPUT: 00110000100010001111110010101010

       - Next Round Left 32 Bits:  01000110011010001110100101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000100010001111110010101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110011010001110100101110101

       - Right 32 Bits:            00110000100010001111110010101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100111110101010101010001001011111001101101010111001   [Subkey: 13]
          - Input Half:       00110000100010001111110010101010
          - S-Box Result:     00011111001000101011010101000100   [per every group of 4-bits]
          - Split Into Two:   0001111100100010 [L] 1011010101000100 [R]
          - Swap Halves:      10110101010001000001111100100010
          - Bit Inversion:    01001010101110111110000011011101
          - Compressed Key:   11011101101001000111001110100110   [done by compression P-Box]
          - XOR with Key:     10010111000111111001001101111011

          - FUNCTION OUTPUT:  10010111000111111001001101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110011010001110100101110101

       - FUNCTION OUTPUT:          10010111000111111001001101111011

       - Left XOR FUNCTION OUTPUT: 11010001011101110111101000001110

       - Next Round Left 32 Bits:  00110000100010001111110010101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001011101110111101000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000100010001111110010101010

       - Right 32 Bits:            11010001011101110111101000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100001100000101010101010111011010000011001001010100   [Subkey: 12]
          - Input Half:       11010001011101110111101000001110
          - S-Box Result:     01101010110111011101010011111100   [per every group of 4-bits]
          - Split Into Two:   0110101011011101 [L] 1101010011111100 [R]
          - Swap Halves:      11010100111111000110101011011101
          - Bit Inversion:    00101011000000111001010100100010
          - Compressed Key:   00011100010110100111000010001000   [done by compression P-Box]
          - XOR with Key:     00110111010110011110010110101010

          - FUNCTION OUTPUT:  00110111010110011110010110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000100010001111110010101010

       - FUNCTION OUTPUT:          00110111010110011110010110101010

       - Left XOR FUNCTION OUTPUT: 00000111110100010001100100000000

       - Next Round Left 32 Bits:  11010001011101110111101000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111110100010001100100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001011101110111101000001110

       - Right 32 Bits:            00000111110100010001100100000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101111001111101010101010100010010111110011011010   [Subkey: 11]
          - Input Half:       00000111110100010001100100000000
          - S-Box Result:     11111101011010101010001111111111   [per every group of 4-bits]
          - Split Into Two:   1111110101101010 [L] 1010001111111111 [R]
          - Swap Halves:      10100011111111111111110101101010
          - Bit Inversion:    01011100000000000000001010010101
          - Compressed Key:   11001111111101011000101001100101   [done by compression P-Box]
          - XOR with Key:     10010011111101011000100011110000

          - FUNCTION OUTPUT:  10010011111101011000100011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001011101110111101000001110

       - FUNCTION OUTPUT:          10010011111101011000100011110000

       - Left XOR FUNCTION OUTPUT: 01000010100000101111001011111110

       - Next Round Left 32 Bits:  00000111110100010001100100000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010100000101111001011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111110100010001100100000000

       - Right 32 Bits:            01000010100000101111001011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100011001000011000001010101010101110110100000110010   [Subkey: 10]
          - Input Half:       01000010100000101111001011111110
          - S-Box Result:     01111110001011101011111010111100   [per every group of 4-bits]
          - Split Into Two:   0111111000101110 [L] 1011111010111100 [R]
          - Swap Halves:      10111110101111000111111000101110
          - Bit Inversion:    01000001010000111000000111010001
          - Compressed Key:   01010110100110100101111000000001   [done by compression P-Box]
          - XOR with Key:     00010111110110011101111111010000

          - FUNCTION OUTPUT:  00010111110110011101111111010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111110100010001100100000000

       - FUNCTION OUTPUT:          00010111110110011101111111010000

       - Left XOR FUNCTION OUTPUT: 00010000000010001100011011010000

       - Next Round Left 32 Bits:  01000010100000101111001011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000000010001100011011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010100000101111001011111110

       - Right 32 Bits:            00010000000010001100011011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010101110011011110011111010101010101000100101111100   [Subkey: 9]
          - Input Half:       00010000000010001100011011010000
          - S-Box Result:     10101111111100100101000001101111   [per every group of 4-bits]
          - Split Into Two:   1010111111110010 [L] 0101000001101111 [R]
          - Swap Halves:      01010000011011111010111111110010
          - Bit Inversion:    10101111100100000101000000001101
          - Compressed Key:   11101101101111111010010100011100   [done by compression P-Box]
          - XOR with Key:     01000010001011111111010100010001

          - FUNCTION OUTPUT:  01000010001011111111010100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010100000101111001011111110

       - FUNCTION OUTPUT:          01000010001011111111010100010001

       - Left XOR FUNCTION OUTPUT: 00000000101011010000011111101111

       - Next Round Left 32 Bits:  00010000000010001100011011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000101011010000011111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000000010001100011011010000

       - Right 32 Bits:            00000000101011010000011111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010101000110010000110000010101010101011101101000   [Subkey: 8]
          - Input Half:       00000000101011010000011111101111
          - S-Box Result:     11111111010001101111110111001011   [per every group of 4-bits]
          - Split Into Two:   1111111101000110 [L] 1111110111001011 [R]
          - Swap Halves:      11111101110010111111111101000110
          - Bit Inversion:    00000010001101000000000010111001
          - Compressed Key:   01101010110000110001101011010100   [done by compression P-Box]
          - XOR with Key:     01101000111101110001101001101101

          - FUNCTION OUTPUT:  01101000111101110001101001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000000010001100011011010000

       - FUNCTION OUTPUT:          01101000111101110001101001101101

       - Left XOR FUNCTION OUTPUT: 01111000111111111101110010111101

       - Next Round Left 32 Bits:  00000000101011010000011111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000111111111101110010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000101011010000011111101111

       - Right 32 Bits:            01111000111111111101110010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111100110110101011100110111100111110101010101010001001   [Subkey: 7]
          - Input Half:       01111000111111111101110010111101
          - S-Box Result:     11010010101110110110010110000110   [per every group of 4-bits]
          - Split Into Two:   1101001010111011 [L] 0110010110000110 [R]
          - Swap Halves:      01100101100001101101001010111011
          - Bit Inversion:    10011010011110010010110101000100
          - Compressed Key:   11011001101101111011010110100110   [done by compression P-Box]
          - XOR with Key:     01000011110011101001100011100010

          - FUNCTION OUTPUT:  01000011110011101001100011100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000101011010000011111101111

       - FUNCTION OUTPUT:          01000011110011101001100011100010

       - Left XOR FUNCTION OUTPUT: 01000011011000111001111100001101

       - Next Round Left 32 Bits:  01111000111111111101110010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011011000111001111100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000111111111101110010111101

       - Right 32 Bits:            01000011011000111001111100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000001100100101010001100100001100000101010101010111   [Subkey: 6]
          - Input Half:       01000011011000111001111100001101
          - S-Box Result:     01110001000000010011101111110110   [per every group of 4-bits]
          - Split Into Two:   0111000100000001 [L] 0011101111110110 [R]
          - Swap Halves:      00111011111101100111000100000001
          - Bit Inversion:    11000100000010011000111011111110
          - Compressed Key:   10001100010110010010001001011011   [done by compression P-Box]
          - XOR with Key:     01001000010100001010110010100101

          - FUNCTION OUTPUT:  01001000010100001010110010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000111111111101110010111101

       - FUNCTION OUTPUT:          01001000010100001010110010100101

       - Left XOR FUNCTION OUTPUT: 00110000101011110111000000011000

       - Next Round Left 32 Bits:  01000011011000111001111100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000101011110111000000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011011000111001111100001101

       - Right 32 Bits:            00110000101011110111000000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001001011111001101101010111001101111001111101010101010   [Subkey: 5]
          - Input Half:       00110000101011110111000000011000
          - S-Box Result:     00011111010010111101111110100010   [per every group of 4-bits]
          - Split Into Two:   0001111101001011 [L] 1101111110100010 [R]
          - Swap Halves:      11011111101000100001111101001011
          - Bit Inversion:    00100000010111011110000010110100
          - Compressed Key:   10001111011101111110001110100101   [done by compression P-Box]
          - XOR with Key:     10101111001010100000001100010001

          - FUNCTION OUTPUT:  10101111001010100000001100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011011000111001111100001101

       - FUNCTION OUTPUT:          10101111001010100000001100010001

       - Left XOR FUNCTION OUTPUT: 11101100010010011001110000011100

       - Next Round Left 32 Bits:  00110000101011110111000000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100010010011001110000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000101011110111000000011000

       - Right 32 Bits:            11101100010010011001110000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011010000011001001010100011001000011000001010101   [Subkey: 4]
          - Input Half:       11101100010010011001110000011100
          - S-Box Result:     11000101011100110011010110100101   [per every group of 4-bits]
          - Split Into Two:   1100010101110011 [L] 0011010110100101 [R]
          - Swap Halves:      00110101101001011100010101110011
          - Bit Inversion:    11001010010110100011101010001100
          - Compressed Key:   01110101100110100011000000001010   [done by compression P-Box]
          - XOR with Key:     10111111110000000000101010000110

          - FUNCTION OUTPUT:  10111111110000000000101010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000101011110111000000011000

       - FUNCTION OUTPUT:          10111111110000000000101010000110

       - Left XOR FUNCTION OUTPUT: 10001111011011110111101010011110

       - Next Round Left 32 Bits:  11101100010010011001110000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111011011110111101010011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100010010011001110000011100

       - Right 32 Bits:            10001111011011110111101010011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101010100010010111110011011010101110011011110011111010   [Subkey: 3]
          - Input Half:       10001111011011110111101010011110
          - S-Box Result:     00101011000010111101010000111100   [per every group of 4-bits]
          - Split Into Two:   0010101100001011 [L] 1101010000111100 [R]
          - Swap Halves:      11010100001111000010101100001011
          - Bit Inversion:    00101011110000111101010011110100
          - Compressed Key:   10100001111111101010100101100101   [done by compression P-Box]
          - XOR with Key:     10001010001111010111110110010001

          - FUNCTION OUTPUT:  10001010001111010111110110010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100010010011001110000011100

       - FUNCTION OUTPUT:          10001010001111010111110110010001

       - Left XOR FUNCTION OUTPUT: 01100110011101001110000110001101

       - Next Round Left 32 Bits:  10001111011011110111101010011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110011101001110000110001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111011011110111101010011110

       - Right 32 Bits:            01100110011101001110000110001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010101110110100000110010010101000110010000110000   [Subkey: 2]
          - Input Half:       01100110011101001110000110001101
          - S-Box Result:     00000000110101111100101000100110   [per every group of 4-bits]
          - Split Into Two:   0000000011010111 [L] 1100101000100110 [R]
          - Swap Halves:      11001010001001100000000011010111
          - Bit Inversion:    00110101110110011111111100101000
          - Compressed Key:   01011010111000110001001001000000   [done by compression P-Box]
          - XOR with Key:     01101111001110101110110101101000

          - FUNCTION OUTPUT:  01101111001110101110110101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111011011110111101010011110

       - FUNCTION OUTPUT:          01101111001110101110110101101000

       - Left XOR FUNCTION OUTPUT: 11100000010101011001011111110110

       - Next Round Left 32 Bits:  01100110011101001110000110001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000010101011001011111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110011101001110000110001101

       - Right 32 Bits:            11100000010101011001011111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101010101000100101111100110110101011100110111100   [Subkey: 1]
          - Input Half:       11100000010101011001011111110110
          - S-Box Result:     11001111100110010011110110110000   [per every group of 4-bits]
          - Split Into Two:   1100111110011001 [L] 0011110110110000 [R]
          - Swap Halves:      00111101101100001100111110011001
          - Bit Inversion:    11000010010011110011000001100110
          - Compressed Key:   11100101001010111001010100111100   [done by compression P-Box]
          - XOR with Key:     00100111011001001010010101011010

          - FUNCTION OUTPUT:  00100111011001001010010101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110011101001110000110001101

       - FUNCTION OUTPUT:          00100111011001001010010101011010

       - Left XOR FUNCTION OUTPUT: 01000001000100000100010011010111

       - Next Round Left 32 Bits:  11100000010101011001011111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001000100000100010011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100000100010000010001001101011111100000010101011001011111110110

 > Decrypted Block:     0100000100010000010001001101011111100000010101011001011111110110


!!!CBC: Previous Ciphertext:                             0000100001000110000110011111011111000000011101011011011111010110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100101010110010111010010000000100000001000000010000000100000

 > Final Processed Block:                                0100100101010110010111010010000000100000001000000010000000100000




BLOCKS IN ASCII:             [START_KEY]yQeHQPoV28ygJAPTPyAdX[END_KEY][START_IV]fqPB6lLk[END_IV]     

