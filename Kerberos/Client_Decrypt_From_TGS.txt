Triple DES Capture

168-bit key: kyElQnieniLUdzDyGXOZc

3 x 56-bit DES keys: kyElQni, eniLUdz, DyGXOZc

Initialization Vector: TteHJeTI

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: DyGXOZc
In Binary:  01000100011110010100011101011000010011110101101001100011

Subkeys:    Key i = Key (i - 1) [Shifted left by 3 and then inverted]

Subkey 1  : 11011100001101011100010100111101100001010010110011100101
Subkey 2  : 00011110010100011101011000010011110101101001100011010001
Subkey 3  : 00001101011100010100111101100001010010110011100101110111
Subkey 4  : 10010100011101011000010011110101101001100011010001000111
Subkey 5  : 01011100010100111101100001010010110011100101110111000011
Subkey 6  : 00011101011000010011110101101001100011010001000111100101
Subkey 7  : 00010100111101100001010010110011100101110111000011010111
Subkey 8  : 01011000010011110101101001100011010001000111100101000111
Subkey 9  : 00111101100001010010110011100101110111000011010111000101
Subkey 10 : 00010011110101101001100011010001000111100101000111010110
Subkey 11 : 01100001010010110011100101110111000011010111000101001111
Subkey 12 : 11110101101001100011010001000111100101000111010110000100
Subkey 13 : 01010010110011100101110111000011010111000101001111011000
Subkey 14 : 01101001100011010001000111100101000111010110000100111101
Subkey 15 : 10110011100101110111000011010111000101001111011000010100
Subkey 16 : 01100011010001000111100101000111010110000100111101011010

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ??ë?ÝBÞ?<´©þ2Ã¶?g?ò?p¯â8ÐÛúsUîAå,Þ4?Ð??D&?l?ö?w÷Ì²{º Z¥²Õ+§¹lCo¾'G

Data padded with spaces : ??ë?ÝBÞ?<´©þ2Ã¶?g?ò?p¯â8ÐÛúsUîAå,Þ4?Ð??D&?l?ö?w÷Ì²{º Z¥²Õ+§¹lCo¾'G[Padded with '0' spaces]

Data in ASCII           : 152,142,235,151,221,66,222,146,60,180,169,254,50,195,182,159,12,103,4,146,242,128,112,175,226,56,208,219,250,115,12,85,238,65,229,44,222,52,134,5,208,131,141,68,12,38,11,156,108,153,246,144,119,247,204,178,123,186,160,90,165,178,213,43,167,185,108,67,111,190,39,71,

Data in Binary          : 10011000,10001110,11101011,10010111,11011101,01000010,11011110,10010010,00111100,10110100,10101001,11111110,00110010,11000011,10110110,10011111,00001100,01100111,00000100,10010010,11110010,10000000,01110000,10101111,11100010,00111000,11010000,11011011,11111010,01110011,00001100,01010101,11101110,01000001,11100101,00101100,11011110,00110100,10000110,00000101,11010000,10000011,10001101,01000100,00001100,00100110,00001011,10011100,01101100,10011001,11110110,10010000,01110111,11110111,11001100,10110010,01111011,10111010,10100000,01011010,10100101,10110010,11010101,00101011,10100111,10111001,01101100,01000011,01101111,10111110,00100111,01000111,

Data in 64-bit Blocks

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101010001110100011001010100100001001010011001010101010001001001)

Ciphertext Block 1:                                      1001100010001110111010111001011111011101010000101101111010010010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000100011101110101110010111

       - Right 32 Bits:            11011101010000101101111010010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       11011101010000101101111010010010
          - S-Box Result:     01100110011111100110110000111110   [per every group of 4-bits]
          - Split Into Two:   0110011001111110 [L] 0110110000111110 [R]
          - Swap Halves:      01101100001111100110011001111110
          - Bit Inversion:    10010011110000011001100110000001
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     10110001001110011100101101010100

          - FUNCTION OUTPUT:  10110001001110011100101101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000100011101110101110010111

       - FUNCTION OUTPUT:          10110001001110011100101101010100

       - Left XOR FUNCTION OUTPUT: 00101001101101110010000011000011

       - Next Round Left 32 Bits:  11011101010000101101111010010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001101101110010000011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101010000101101111010010010

       - Right 32 Bits:            00101001101101110010000011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       00101001101101110010000011000011
          - S-Box Result:     11100011100011011110111101010001   [per every group of 4-bits]
          - Split Into Two:   1110001110001101 [L] 1110111101010001 [R]
          - Swap Halves:      11101111010100011110001110001101
          - Bit Inversion:    00010000101011100001110001110010
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     01111010011100000101111110111010

          - FUNCTION OUTPUT:  01111010011100000101111110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101010000101101111010010010

       - FUNCTION OUTPUT:          01111010011100000101111110111010

       - Left XOR FUNCTION OUTPUT: 10100111001100101000000100101000

       - Next Round Left 32 Bits:  00101001101101110010000011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111001100101000000100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001101101110010000011000011

       - Right 32 Bits:            10100111001100101000000100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       10100111001100101000000100101000
          - S-Box Result:     01001101000111100010101011100010   [per every group of 4-bits]
          - Split Into Two:   0100110100011110 [L] 0010101011100010 [R]
          - Swap Halves:      00101010111000100100110100011110
          - Bit Inversion:    11010101000111011011001011100001
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     01010110000000001111100011111111

          - FUNCTION OUTPUT:  01010110000000001111100011111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001101101110010000011000011

       - FUNCTION OUTPUT:          01010110000000001111100011111111

       - Left XOR FUNCTION OUTPUT: 01111111101101111101100000111100

       - Next Round Left 32 Bits:  10100111001100101000000100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111101101111101100000111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111001100101000000100101000

       - Right 32 Bits:            01111111101101111101100000111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       01111111101101111101100000111100
          - S-Box Result:     11011011100011010110001000010101   [per every group of 4-bits]
          - Split Into Two:   1101101110001101 [L] 0110001000010101 [R]
          - Swap Halves:      01100010000101011101101110001101
          - Bit Inversion:    10011101111010100010010001110010
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     11111110100101100111011011000110

          - FUNCTION OUTPUT:  11111110100101100111011011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111001100101000000100101000

       - FUNCTION OUTPUT:          11111110100101100111011011000110

       - Left XOR FUNCTION OUTPUT: 01011001101001001111011111101110

       - Next Round Left 32 Bits:  01111111101101111101100000111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001101001001111011111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111101101111101100000111100

       - Right 32 Bits:            01011001101001001111011111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       01011001101001001111011111101110
          - S-Box Result:     10010011010001111011110111001100   [per every group of 4-bits]
          - Split Into Two:   1001001101000111 [L] 1011110111001100 [R]
          - Swap Halves:      10111101110011001001001101000111
          - Bit Inversion:    01000010001100110110110010111000
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     00010100101010111010111011000000

          - FUNCTION OUTPUT:  00010100101010111010111011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111101101111101100000111100

       - FUNCTION OUTPUT:          00010100101010111010111011000000

       - Left XOR FUNCTION OUTPUT: 01101011000111000111011011111100

       - Next Round Left 32 Bits:  01011001101001001111011111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011000111000111011011111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001101001001111011111101110

       - Right 32 Bits:            01101011000111000111011011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       01101011000111000111011011111100
          - S-Box Result:     00001000101001011101000010110101   [per every group of 4-bits]
          - Split Into Two:   0000100010100101 [L] 1101000010110101 [R]
          - Swap Halves:      11010000101101010000100010100101
          - Bit Inversion:    00101111010010101111011101011010
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     00101110111100011011110101000101

          - FUNCTION OUTPUT:  00101110111100011011110101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001101001001111011111101110

       - FUNCTION OUTPUT:          00101110111100011011110101000101

       - Left XOR FUNCTION OUTPUT: 01110111010101010100101010101011

       - Next Round Left 32 Bits:  01101011000111000111011011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111010101010100101010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011000111000111011011111100

       - Right 32 Bits:            01110111010101010100101010101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       01110111010101010100101010101011
          - S-Box Result:     11011101100110010111010001001000   [per every group of 4-bits]
          - Split Into Two:   1101110110011001 [L] 0111010001001000 [R]
          - Swap Halves:      01110100010010001101110110011001
          - Bit Inversion:    10001011101101110010001001100110
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     11100001100010010110010001011111

          - FUNCTION OUTPUT:  11100001100010010110010001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011000111000111011011111100

       - FUNCTION OUTPUT:          11100001100010010110010001011111

       - Left XOR FUNCTION OUTPUT: 10001010100101010001001010100011

       - Next Round Left 32 Bits:  01110111010101010100101010101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010100101010001001010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111010101010100101010101011

       - Right 32 Bits:            10001010100101010001001010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       10001010100101010001001010100011
          - S-Box Result:     00100100001110011010111001000001   [per every group of 4-bits]
          - Split Into Two:   0010010000111001 [L] 1010111001000001 [R]
          - Swap Halves:      10101110010000010010010000111001
          - Bit Inversion:    01010001101111101101101111000110
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     10000011000100110000101110111100

          - FUNCTION OUTPUT:  10000011000100110000101110111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111010101010100101010101011

       - FUNCTION OUTPUT:          10000011000100110000101110111100

       - Left XOR FUNCTION OUTPUT: 11110100010001100100000100010111

       - Next Round Left 32 Bits:  10001010100101010001001010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100010001100100000100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010100101010001001010100011

       - Right 32 Bits:            11110100010001100100000100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       11110100010001100100000100010111
          - S-Box Result:     10110111011100000111101010101101   [per every group of 4-bits]
          - Split Into Two:   1011011101110000 [L] 0111101010101101 [R]
          - Swap Halves:      01111010101011011011011101110000
          - Bit Inversion:    10000101010100100100100010001111
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     01000110001010110001101010010100

          - FUNCTION OUTPUT:  01000110001010110001101010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010100101010001001010100011

       - FUNCTION OUTPUT:          01000110001010110001101010010100

       - Left XOR FUNCTION OUTPUT: 11001100101111100000100000110111

       - Next Round Left 32 Bits:  11110100010001100100000100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100101111100000100000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100010001100100000100010111

       - Right 32 Bits:            11001100101111100000100000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       11001100101111100000100000110111
          - S-Box Result:     01010101100011001111001000011101   [per every group of 4-bits]
          - Split Into Two:   0101010110001100 [L] 1111001000011101 [R]
          - Swap Halves:      11110010000111010101010110001100
          - Bit Inversion:    00001101111000101010101001110011
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     01010011111101010110010001011000

          - FUNCTION OUTPUT:  01010011111101010110010001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100010001100100000100010111

       - FUNCTION OUTPUT:          01010011111101010110010001011000

       - Left XOR FUNCTION OUTPUT: 10100111101100110010010101001111

       - Next Round Left 32 Bits:  11001100101111100000100000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111101100110010010101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100101111100000100000110111

       - Right 32 Bits:            10100111101100110010010101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       10100111101100110010010101001111
          - S-Box Result:     01001101100000011110100101111011   [per every group of 4-bits]
          - Split Into Two:   0100110110000001 [L] 1110100101111011 [R]
          - Swap Halves:      11101001011110110100110110000001
          - Bit Inversion:    00010110100001001011001001111110
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     11000010001111010111101001000100

          - FUNCTION OUTPUT:  11000010001111010111101001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100101111100000100000110111

       - FUNCTION OUTPUT:          11000010001111010111101001000100

       - Left XOR FUNCTION OUTPUT: 00001110100000110111001001110011

       - Next Round Left 32 Bits:  10100111101100110010010101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110100000110111001001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111101100110010010101001111

       - Right 32 Bits:            00001110100000110111001001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       00001110100000110111001001110011
          - S-Box Result:     11111100001000011101111011010001   [per every group of 4-bits]
          - Split Into Two:   1111110000100001 [L] 1101111011010001 [R]
          - Swap Halves:      11011110110100011111110000100001
          - Bit Inversion:    00100001001011100000001111011110
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     11111001010101001001010110101101

          - FUNCTION OUTPUT:  11111001010101001001010110101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111101100110010010101001111

       - FUNCTION OUTPUT:          11111001010101001001010110101101

       - Left XOR FUNCTION OUTPUT: 01011110111001111011000011100010

       - Next Round Left 32 Bits:  00001110100000110111001001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110111001111011000011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110100000110111001001110011

       - Right 32 Bits:            01011110111001111011000011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       01011110111001111011000011100010
          - S-Box Result:     10011100110011011000111111001110   [per every group of 4-bits]
          - Split Into Two:   1001110011001101 [L] 1000111111001110 [R]
          - Swap Halves:      10001111110011101001110011001101
          - Bit Inversion:    01110000001100010110001100110010
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     00101110001111101000011101111001

          - FUNCTION OUTPUT:  00101110001111101000011101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110100000110111001001110011

       - FUNCTION OUTPUT:          00101110001111101000011101111001

       - Left XOR FUNCTION OUTPUT: 00100000101111011111010100001010

       - Next Round Left 32 Bits:  01011110111001111011000011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000101111011111010100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110111001111011000011100010

       - Right 32 Bits:            00100000101111011111010100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       00100000101111011111010100001010
          - S-Box Result:     11101111100001101011100111110100   [per every group of 4-bits]
          - Split Into Two:   1110111110000110 [L] 1011100111110100 [R]
          - Swap Halves:      10111001111101001110111110000110
          - Bit Inversion:    01000110000010110001000001111001
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     11011010011000100100110001100010

          - FUNCTION OUTPUT:  11011010011000100100110001100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110111001111011000011100010

       - FUNCTION OUTPUT:          11011010011000100100110001100010

       - Left XOR FUNCTION OUTPUT: 10000100100001011111110010000000

       - Next Round Left 32 Bits:  00100000101111011111010100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100100001011111110010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000101111011111010100001010

       - Right 32 Bits:            10000100100001011111110010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       10000100100001011111110010000000
          - S-Box Result:     00100111001010011011010100101111   [per every group of 4-bits]
          - Split Into Two:   0010011100101001 [L] 1011010100101111 [R]
          - Swap Halves:      10110101001011110010011100101001
          - Bit Inversion:    01001010110100001101100011010110
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     10110010100000100000110111110100

          - FUNCTION OUTPUT:  10110010100000100000110111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000101111011111010100001010

       - FUNCTION OUTPUT:          10110010100000100000110111110100

       - Left XOR FUNCTION OUTPUT: 10010010001111111111100011111110

       - Next Round Left 32 Bits:  10000100100001011111110010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010001111111111100011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100100001011111110010000000

       - Right 32 Bits:            10010010001111111111100011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       10010010001111111111100011111110
          - S-Box Result:     00111110000110111011001010111100   [per every group of 4-bits]
          - Split Into Two:   0011111000011011 [L] 1011001010111100 [R]
          - Swap Halves:      10110010101111000011111000011011
          - Bit Inversion:    01001101010000111100000111100100
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     10010011000000000000100110001110

          - FUNCTION OUTPUT:  10010011000000000000100110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100100001011111110010000000

       - FUNCTION OUTPUT:          10010011000000000000100110001110

       - Left XOR FUNCTION OUTPUT: 00010111100001011111010100001110

       - Next Round Left 32 Bits:  10010010001111111111100011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111100001011111010100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001011110000101111101010000111010010010001111111111100011111110

 > Decrypted Block:     0001011110000101111101010000111010010010001111111111100011111110


!!!CBC: Previous Ciphertext:                             0101010001110100011001010100100001001010011001010101010001001001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100001111110001100100000100011011011000010110101010110010110111

 > Final Processed Block:                                0100001111110001100100000100011011011000010110101010110010110111



Ciphertext Block 2:                                      0011110010110100101010011111111000110010110000111011011010011111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100101101001010100111111110

       - Right 32 Bits:            00110010110000111011011010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       00110010110000111011011010011111
          - S-Box Result:     00011110010100011000000000111011   [per every group of 4-bits]
          - Split Into Two:   0001111001010001 [L] 1000000000111011 [R]
          - Swap Halves:      10000000001110110001111001010001
          - Bit Inversion:    01111111110001001110000110101110
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     01011101001111001011001101111011

          - FUNCTION OUTPUT:  01011101001111001011001101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100101101001010100111111110

       - FUNCTION OUTPUT:          01011101001111001011001101111011

       - Left XOR FUNCTION OUTPUT: 01100001100010000001101010000101

       - Next Round Left 32 Bits:  00110010110000111011011010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001100010000001101010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010110000111011011010011111

       - Right 32 Bits:            01100001100010000001101010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       01100001100010000001101010000101
          - S-Box Result:     00001010001000101010010000101001   [per every group of 4-bits]
          - Split Into Two:   0000101000100010 [L] 1010010000101001 [R]
          - Swap Halves:      10100100001010010000101000100010
          - Bit Inversion:    01011011110101101111010111011101
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     00110001000010001011011000010101

          - FUNCTION OUTPUT:  00110001000010001011011000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010110000111011011010011111

       - FUNCTION OUTPUT:          00110001000010001011011000010101

       - Left XOR FUNCTION OUTPUT: 00000011110010110000000010001010

       - Next Round Left 32 Bits:  01100001100010000001101010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011110010110000000010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001100010000001101010000101

       - Right 32 Bits:            00000011110010110000000010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       00000011110010110000000010001010
          - S-Box Result:     11110001010110001111111100100100   [per every group of 4-bits]
          - Split Into Two:   1111000101011000 [L] 1111111100100100 [R]
          - Swap Halves:      11111111001001001111000101011000
          - Bit Inversion:    00000000110110110000111010100111
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     10000011110001100100010010111001

          - FUNCTION OUTPUT:  10000011110001100100010010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001100010000001101010000101

       - FUNCTION OUTPUT:          10000011110001100100010010111001

       - Left XOR FUNCTION OUTPUT: 11100010010011100101111000111100

       - Next Round Left 32 Bits:  00000011110010110000000010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010010011100101111000111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011110010110000000010001010

       - Right 32 Bits:            11100010010011100101111000111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       11100010010011100101111000111100
          - S-Box Result:     11001110011111001001110000010101   [per every group of 4-bits]
          - Split Into Two:   1100111001111100 [L] 1001110000010101 [R]
          - Swap Halves:      10011100000101011100111001111100
          - Bit Inversion:    01100011111010100011000110000011
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     00000000100101100110001100110111

          - FUNCTION OUTPUT:  00000000100101100110001100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011110010110000000010001010

       - FUNCTION OUTPUT:          00000000100101100110001100110111

       - Left XOR FUNCTION OUTPUT: 00000011010111010110001110111101

       - Next Round Left 32 Bits:  11100010010011100101111000111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011010111010110001110111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010010011100101111000111100

       - Right 32 Bits:            00000011010111010110001110111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       00000011010111010110001110111101
          - S-Box Result:     11110001100101100000000110000110   [per every group of 4-bits]
          - Split Into Two:   1111000110010110 [L] 0000000110000110 [R]
          - Swap Halves:      00000001100001101111000110010110
          - Bit Inversion:    11111110011110010000111001101001
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     10101000111000011100110000010001

          - FUNCTION OUTPUT:  10101000111000011100110000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010010011100101111000111100

       - FUNCTION OUTPUT:          10101000111000011100110000010001

       - Left XOR FUNCTION OUTPUT: 01001010101011111001001000101101

       - Next Round Left 32 Bits:  00000011010111010110001110111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010101011111001001000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011010111010110001110111101

       - Right 32 Bits:            01001010101011111001001000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       01001010101011111001001000101101
          - S-Box Result:     01110100010010110011111011100110   [per every group of 4-bits]
          - Split Into Two:   0111010001001011 [L] 0011111011100110 [R]
          - Swap Halves:      00111110111001100111010001001011
          - Bit Inversion:    11000001000110011000101110110100
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     11000000101000101100000110101011

          - FUNCTION OUTPUT:  11000000101000101100000110101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011010111010110001110111101

       - FUNCTION OUTPUT:          11000000101000101100000110101011

       - Left XOR FUNCTION OUTPUT: 11000011111111111010001000010110

       - Next Round Left 32 Bits:  01001010101011111001001000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011111111111010001000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010101011111001001000101101

       - Right 32 Bits:            11000011111111111010001000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       11000011111111111010001000010110
          - S-Box Result:     01010001101110110100111010100000   [per every group of 4-bits]
          - Split Into Two:   0101000110111011 [L] 0100111010100000 [R]
          - Swap Halves:      01001110101000000101000110111011
          - Bit Inversion:    10110001010111111010111001000100
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     11011011011000011110100001111101

          - FUNCTION OUTPUT:  11011011011000011110100001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010101011111001001000101101

       - FUNCTION OUTPUT:          11011011011000011110100001111101

       - Left XOR FUNCTION OUTPUT: 10010001110011100111101001010000

       - Next Round Left 32 Bits:  11000011111111111010001000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001110011100111101001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011111111111010001000010110

       - Right 32 Bits:            10010001110011100111101001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       10010001110011100111101001010000
          - S-Box Result:     00111010010111001101010010011111   [per every group of 4-bits]
          - Split Into Two:   0011101001011100 [L] 1101010010011111 [R]
          - Swap Halves:      11010100100111110011101001011100
          - Bit Inversion:    00101011011000001100010110100011
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     11111001110011010001010111011001

          - FUNCTION OUTPUT:  11111001110011010001010111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011111111111010001000010110

       - FUNCTION OUTPUT:          11111001110011010001010111011001

       - Left XOR FUNCTION OUTPUT: 00111010001100101011011111001111

       - Next Round Left 32 Bits:  10010001110011100111101001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010001100101011011111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001110011100111101001010000

       - Right 32 Bits:            00111010001100101011011111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       00111010001100101011011111001111
          - S-Box Result:     00010100000111101000110101011011   [per every group of 4-bits]
          - Split Into Two:   0001010000011110 [L] 1000110101011011 [R]
          - Swap Halves:      10001101010110110001010000011110
          - Bit Inversion:    01110010101001001110101111100001
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     10110001110111011011100111111010

          - FUNCTION OUTPUT:  10110001110111011011100111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001110011100111101001010000

       - FUNCTION OUTPUT:          10110001110111011011100111111010

       - Left XOR FUNCTION OUTPUT: 00100000000100111100001110101010

       - Next Round Left 32 Bits:  00111010001100101011011111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000000100111100001110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010001100101011011111001111

       - Right 32 Bits:            00100000000100111100001110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       00100000000100111100001110101010
          - S-Box Result:     11101111101000010101000101000100   [per every group of 4-bits]
          - Split Into Two:   1110111110100001 [L] 0101000101000100 [R]
          - Swap Halves:      01010001010001001110111110100001
          - Bit Inversion:    10101110101110110001000001011110
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     11110000101011001101111001110101

          - FUNCTION OUTPUT:  11110000101011001101111001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010001100101011011111001111

       - FUNCTION OUTPUT:          11110000101011001101111001110101

       - Left XOR FUNCTION OUTPUT: 11001010100111100110100110111010

       - Next Round Left 32 Bits:  00100000000100111100001110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010100111100110100110111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000000100111100001110101010

       - Right 32 Bits:            11001010100111100110100110111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       11001010100111100110100110111010
          - S-Box Result:     01010100001111000000001110000100   [per every group of 4-bits]
          - Split Into Two:   0101010000111100 [L] 0000001110000100 [R]
          - Swap Halves:      00000011100001000101010000111100
          - Bit Inversion:    11111100011110111010101111000011
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     00101000110000100110001111111001

          - FUNCTION OUTPUT:  00101000110000100110001111111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000000100111100001110101010

       - FUNCTION OUTPUT:          00101000110000100110001111111001

       - Left XOR FUNCTION OUTPUT: 00001000110100011010000001010011

       - Next Round Left 32 Bits:  11001010100111100110100110111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000110100011010000001010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010100111100110100110111010

       - Right 32 Bits:            00001000110100011010000001010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       00001000110100011010000001010011
          - S-Box Result:     11110010011010100100111110010001   [per every group of 4-bits]
          - Split Into Two:   1111001001101010 [L] 0100111110010001 [R]
          - Swap Halves:      01001111100100011111001001101010
          - Bit Inversion:    10110000011011100000110110010101
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     01101000000101001001101111100110

          - FUNCTION OUTPUT:  01101000000101001001101111100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010100111100110100110111010

       - FUNCTION OUTPUT:          01101000000101001001101111100110

       - Left XOR FUNCTION OUTPUT: 10100010100010101111001001011100

       - Next Round Left 32 Bits:  00001000110100011010000001010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010100010101111001001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000110100011010000001010011

       - Right 32 Bits:            10100010100010101111001001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       10100010100010101111001001011100
          - S-Box Result:     01001110001001001011111010010101   [per every group of 4-bits]
          - Split Into Two:   0100111000100100 [L] 1011111010010101 [R]
          - Swap Halves:      10111110100101010100111000100100
          - Bit Inversion:    01000001011010101011000111011011
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     00011111011001010101010110010000

          - FUNCTION OUTPUT:  00011111011001010101010110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000110100011010000001010011

       - FUNCTION OUTPUT:          00011111011001010101010110010000

       - Left XOR FUNCTION OUTPUT: 00010111101101001111010111000011

       - Next Round Left 32 Bits:  10100010100010101111001001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111101101001111010111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010100010101111001001011100

       - Right 32 Bits:            00010111101101001111010111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       00010111101101001111010111000011
          - S-Box Result:     10101101100001111011100101010001   [per every group of 4-bits]
          - Split Into Two:   1010110110000111 [L] 1011100101010001 [R]
          - Swap Halves:      10111001010100011010110110000111
          - Bit Inversion:    01000110101011100101001001111000
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     11011010110001110000111001100011

          - FUNCTION OUTPUT:  11011010110001110000111001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010100010101111001001011100

       - FUNCTION OUTPUT:          11011010110001110000111001100011

       - Left XOR FUNCTION OUTPUT: 01111000010011011111110000111111

       - Next Round Left 32 Bits:  00010111101101001111010111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000010011011111110000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111101101001111010111000011

       - Right 32 Bits:            01111000010011011111110000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       01111000010011011111110000111111
          - S-Box Result:     11010010011101101011010100011011   [per every group of 4-bits]
          - Split Into Two:   1101001001110110 [L] 1011010100011011 [R]
          - Swap Halves:      10110101000110111101001001110110
          - Bit Inversion:    01001010111001000010110110001001
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     10110010101101101111100010101011

          - FUNCTION OUTPUT:  10110010101101101111100010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111101101001111010111000011

       - FUNCTION OUTPUT:          10110010101101101111100010101011

       - Left XOR FUNCTION OUTPUT: 10100101000000100000110101101000

       - Next Round Left 32 Bits:  01111000010011011111110000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101000000100000110101101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000010011011111110000111111

       - Right 32 Bits:            10100101000000100000110101101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       10100101000000100000110101101000
          - S-Box Result:     01001001111111101111011000000010   [per every group of 4-bits]
          - Split Into Two:   0100100111111110 [L] 1111011000000010 [R]
          - Swap Halves:      11110110000000100100100111111110
          - Bit Inversion:    00001001111111011011011000000001
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     11010111101111100111111001101011

          - FUNCTION OUTPUT:  11010111101111100111111001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000010011011111110000111111

       - FUNCTION OUTPUT:          11010111101111100111111001101011

       - Left XOR FUNCTION OUTPUT: 10101111111100111000001001010100

       - Next Round Left 32 Bits:  10100101000000100000110101101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111111100111000001001010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010111111110011100000100101010010100101000000100000110101101000

 > Decrypted Block:     1010111111110011100000100101010010100101000000100000110101101000


!!!CBC: Previous Ciphertext:                             1001100010001110111010111001011111011101010000101101111010010010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011011101111101011010011100001101111000010000001101001111111010

 > Final Processed Block:                                0011011101111101011010011100001101111000010000001101001111111010



Ciphertext Block 3:                                      0000110001100111000001001001001011110010100000000111000010101111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100011001110000010010010010

       - Right 32 Bits:            11110010100000000111000010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       11110010100000000111000010101111
          - S-Box Result:     10111110001011111101111101001011   [per every group of 4-bits]
          - Split Into Two:   1011111000101111 [L] 1101111101001011 [R]
          - Swap Halves:      11011111010010111011111000101111
          - Bit Inversion:    00100000101101000100000111010000
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     00000010010011000001001100000101

          - FUNCTION OUTPUT:  00000010010011000001001100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100011001110000010010010010

       - FUNCTION OUTPUT:          00000010010011000001001100000101

       - Left XOR FUNCTION OUTPUT: 00001110001010110001011110010111

       - Next Round Left 32 Bits:  11110010100000000111000010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110001010110001011110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010100000000111000010101111

       - Right 32 Bits:            00001110001010110001011110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       00001110001010110001011110010111
          - S-Box Result:     11111100111010001010110100111101   [per every group of 4-bits]
          - Split Into Two:   1111110011101000 [L] 1010110100111101 [R]
          - Swap Halves:      10101101001111011111110011101000
          - Bit Inversion:    01010010110000100000001100010111
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     00111000000111000100000011011111

          - FUNCTION OUTPUT:  00111000000111000100000011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010100000000111000010101111

       - FUNCTION OUTPUT:          00111000000111000100000011011111

       - Left XOR FUNCTION OUTPUT: 11001010100111000011000001110000

       - Next Round Left 32 Bits:  00001110001010110001011110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010100111000011000001110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110001010110001011110010111

       - Right 32 Bits:            11001010100111000011000001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       11001010100111000011000001110000
          - S-Box Result:     01010100001101010001111111011111   [per every group of 4-bits]
          - Split Into Two:   0101010000110101 [L] 0001111111011111 [R]
          - Swap Halves:      00011111110111110101010000110101
          - Bit Inversion:    11100000001000001010101111001010
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     01100011001111011110000111010100

          - FUNCTION OUTPUT:  01100011001111011110000111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110001010110001011110010111

       - FUNCTION OUTPUT:          01100011001111011110000111010100

       - Left XOR FUNCTION OUTPUT: 01101101000101101111011001000011

       - Next Round Left 32 Bits:  11001010100111000011000001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101000101101111011001000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010100111000011000001110000

       - Right 32 Bits:            01101101000101101111011001000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       01101101000101101111011001000011
          - S-Box Result:     00000110101000001011000001110001   [per every group of 4-bits]
          - Split Into Two:   0000011010100000 [L] 1011000001110001 [R]
          - Swap Halves:      10110000011100010000011010100000
          - Bit Inversion:    01001111100011101111100101011111
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     00101100111100101010101111101011

          - FUNCTION OUTPUT:  00101100111100101010101111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010100111000011000001110000

       - FUNCTION OUTPUT:          00101100111100101010101111101011

       - Left XOR FUNCTION OUTPUT: 11100110011011101001101110011011

       - Next Round Left 32 Bits:  01101101000101101111011001000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110011011101001101110011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101000101101111011001000011

       - Right 32 Bits:            11100110011011101001101110011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       11100110011011101001101110011011
          - S-Box Result:     11000000000011000011100000111000   [per every group of 4-bits]
          - Split Into Two:   1100000000001100 [L] 0011100000111000 [R]
          - Swap Halves:      00111000001110001100000000001100
          - Bit Inversion:    11000111110001110011111111110011
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     10010001010111111111110110001011

          - FUNCTION OUTPUT:  10010001010111111111110110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101000101101111011001000011

       - FUNCTION OUTPUT:          10010001010111111111110110001011

       - Left XOR FUNCTION OUTPUT: 11111100010010010000101111001000

       - Next Round Left 32 Bits:  11100110011011101001101110011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100010010010000101111001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110011011101001101110011011

       - Right 32 Bits:            11111100010010010000101111001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       11111100010010010000101111001000
          - S-Box Result:     10110101011100111111100001010010   [per every group of 4-bits]
          - Split Into Two:   1011010101110011 [L] 1111100001010010 [R]
          - Swap Halves:      11111000010100101011010101110011
          - Bit Inversion:    00000111101011010100101010001100
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     00000110000101100000000010010011

          - FUNCTION OUTPUT:  00000110000101100000000010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110011011101001101110011011

       - FUNCTION OUTPUT:          00000110000101100000000010010011

       - Left XOR FUNCTION OUTPUT: 11100000011110001001101100001000

       - Next Round Left 32 Bits:  11111100010010010000101111001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000011110001001101100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100010010010000101111001000

       - Right 32 Bits:            11100000011110001001101100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       11100000011110001001101100001000
          - S-Box Result:     11001111110100100011100011110010   [per every group of 4-bits]
          - Split Into Two:   1100111111010010 [L] 0011100011110010 [R]
          - Swap Halves:      00111000111100101100111111010010
          - Bit Inversion:    11000111000011010011000000101101
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     10101101001100110111011000010100

          - FUNCTION OUTPUT:  10101101001100110111011000010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100010010010000101111001000

       - FUNCTION OUTPUT:          10101101001100110111011000010100

       - Left XOR FUNCTION OUTPUT: 01010001011110100111110111011100

       - Next Round Left 32 Bits:  11100000011110001001101100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001011110100111110111011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000011110001001101100001000

       - Right 32 Bits:            01010001011110100111110111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       01010001011110100111110111011100
          - S-Box Result:     10011010110101001101011001100101   [per every group of 4-bits]
          - Split Into Two:   1001101011010100 [L] 1101011001100101 [R]
          - Swap Halves:      11010110011001011001101011010100
          - Bit Inversion:    00101001100110100110010100101011
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     11111011001101111011010101010001

          - FUNCTION OUTPUT:  11111011001101111011010101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000011110001001101100001000

       - FUNCTION OUTPUT:          11111011001101111011010101010001

       - Left XOR FUNCTION OUTPUT: 00011011010011110010111001011001

       - Next Round Left 32 Bits:  01010001011110100111110111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011010011110010111001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001011110100111110111011100

       - Right 32 Bits:            00011011010011110010111001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       00011011010011110010111001011001
          - S-Box Result:     10101000011110111110110010010011   [per every group of 4-bits]
          - Split Into Two:   1010100001111011 [L] 1110110010010011 [R]
          - Swap Halves:      11101100100100111010100001111011
          - Bit Inversion:    00010011011011000101011110000100
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     11010000000101010000010110011111

          - FUNCTION OUTPUT:  11010000000101010000010110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001011110100111110111011100

       - FUNCTION OUTPUT:          11010000000101010000010110011111

       - Left XOR FUNCTION OUTPUT: 10000001011011110111100001000011

       - Next Round Left 32 Bits:  00011011010011110010111001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001011011110111100001000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011010011110010111001011001

       - Right 32 Bits:            10000001011011110111100001000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       10000001011011110111100001000011
          - S-Box Result:     00101010000010111101001001110001   [per every group of 4-bits]
          - Split Into Two:   0010101000001011 [L] 1101001001110001 [R]
          - Swap Halves:      11010010011100010010101000001011
          - Bit Inversion:    00101101100011101101010111110100
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     01110011100110010001101111011111

          - FUNCTION OUTPUT:  01110011100110010001101111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011010011110010111001011001

       - FUNCTION OUTPUT:          01110011100110010001101111011111

       - Left XOR FUNCTION OUTPUT: 01101000110101100011010110000110

       - Next Round Left 32 Bits:  10000001011011110111100001000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000110101100011010110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001011011110111100001000011

       - Right 32 Bits:            01101000110101100011010110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       01101000110101100011010110000110
          - S-Box Result:     00000010011000000001100100100000   [per every group of 4-bits]
          - Split Into Two:   0000001001100000 [L] 0001100100100000 [R]
          - Swap Halves:      00011001001000000000001001100000
          - Bit Inversion:    11100110110111111111110110011111
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     00110010011001100011010110100101

          - FUNCTION OUTPUT:  00110010011001100011010110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001011011110111100001000011

       - FUNCTION OUTPUT:          00110010011001100011010110100101

       - Left XOR FUNCTION OUTPUT: 10110011000010010100110111100110

       - Next Round Left 32 Bits:  01101000110101100011010110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011000010010100110111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000110101100011010110000110

       - Right 32 Bits:            10110011000010010100110111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       10110011000010010100110111100110
          - S-Box Result:     10000001111100110111011011000000   [per every group of 4-bits]
          - Split Into Two:   1000000111110011 [L] 0111011011000000 [R]
          - Swap Halves:      01110110110000001000000111110011
          - Bit Inversion:    10001001001111110111111000001100
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     01010001010001011110100001111111

          - FUNCTION OUTPUT:  01010001010001011110100001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000110101100011010110000110

       - FUNCTION OUTPUT:          01010001010001011110100001111111

       - Left XOR FUNCTION OUTPUT: 00111001100100111101110111111001

       - Next Round Left 32 Bits:  10110011000010010100110111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001100100111101110111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011000010010100110111100110

       - Right 32 Bits:            00111001100100111101110111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       00111001100100111101110111111001
          - S-Box Result:     00010011001100010110011010110011   [per every group of 4-bits]
          - Split Into Two:   0001001100110001 [L] 0110011010110011 [R]
          - Swap Halves:      01100110101100110001001100110001
          - Bit Inversion:    10011001010011001110110011001110
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     11000111010000110000100010000101

          - FUNCTION OUTPUT:  11000111010000110000100010000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011000010010100110111100110

       - FUNCTION OUTPUT:          11000111010000110000100010000101

       - Left XOR FUNCTION OUTPUT: 01110100010010100100010101100011

       - Next Round Left 32 Bits:  00111001100100111101110111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100010010100100010101100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001100100111101110111111001

       - Right 32 Bits:            01110100010010100100010101100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       01110100010010100100010101100011
          - S-Box Result:     11010111011101000111100100000001   [per every group of 4-bits]
          - Split Into Two:   1101011101110100 [L] 0111100100000001 [R]
          - Swap Halves:      01111001000000011101011101110100
          - Bit Inversion:    10000110111111100010100010001011
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     00011010100101110111010010010000

          - FUNCTION OUTPUT:  00011010100101110111010010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001100100111101110111111001

       - FUNCTION OUTPUT:          00011010100101110111010010010000

       - Left XOR FUNCTION OUTPUT: 00100011000001001010100101101001

       - Next Round Left 32 Bits:  01110100010010100100010101100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011000001001010100101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100010010100100010101100011

       - Right 32 Bits:            00100011000001001010100101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       00100011000001001010100101101001
          - S-Box Result:     11100001111101110100001100000011   [per every group of 4-bits]
          - Split Into Two:   1110000111110111 [L] 0100001100000011 [R]
          - Swap Halves:      01000011000000111110000111110111
          - Bit Inversion:    10111100111111000001111000001000
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     01000100101011101100101100101010

          - FUNCTION OUTPUT:  01000100101011101100101100101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100010010100100010101100011

       - FUNCTION OUTPUT:          01000100101011101100101100101010

       - Left XOR FUNCTION OUTPUT: 00110000111001001000111001001001

       - Next Round Left 32 Bits:  00100011000001001010100101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000111001001000111001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011000001001010100101101001

       - Right 32 Bits:            00110000111001001000111001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       00110000111001001000111001001001
          - S-Box Result:     00011111110001110010110001110011   [per every group of 4-bits]
          - Split Into Two:   0001111111000111 [L] 0010110001110011 [R]
          - Swap Halves:      00101100011100110001111111000111
          - Bit Inversion:    11010011100011001110000000111000
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     00001101110011110010100001010010

          - FUNCTION OUTPUT:  00001101110011110010100001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011000001001010100101101001

       - FUNCTION OUTPUT:          00001101110011110010100001010010

       - Left XOR FUNCTION OUTPUT: 00101110110010111000000100111011

       - Next Round Left 32 Bits:  00110000111001001000111001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110110010111000000100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010111011001011100000010011101100110000111001001000111001001001

 > Decrypted Block:     0010111011001011100000010011101100110000111001001000111001001001


!!!CBC: Previous Ciphertext:                             0011110010110100101010011111111000110010110000111011011010011111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0001001001111111001010001100010100000010001001110011100011010110

 > Final Processed Block:                                0001001001111111001010001100010100000010001001110011100011010110



Ciphertext Block 4:                                      1110001000111000110100001101101111111010011100110000110001010101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010001110001101000011011011

       - Right 32 Bits:            11111010011100110000110001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       11111010011100110000110001010101
          - S-Box Result:     10110100110100011111010110011001   [per every group of 4-bits]
          - Split Into Two:   1011010011010001 [L] 1111010110011001 [R]
          - Swap Halves:      11110101100110011011010011010001
          - Bit Inversion:    00001010011001100100101100101110
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     00101000100111100001100111111011

          - FUNCTION OUTPUT:  00101000100111100001100111111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010001110001101000011011011

       - FUNCTION OUTPUT:          00101000100111100001100111111011

       - Left XOR FUNCTION OUTPUT: 11001010101001101100100100100000

       - Next Round Left 32 Bits:  11111010011100110000110001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010101001101100100100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010011100110000110001010101

       - Right 32 Bits:            11001010101001101100100100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       11001010101001101100100100100000
          - S-Box Result:     01010100010000000101001111101111   [per every group of 4-bits]
          - Split Into Two:   0101010001000000 [L] 0101001111101111 [R]
          - Swap Halves:      01010011111011110101010001000000
          - Bit Inversion:    10101100000100001010101110111111
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     11000110110011101110100001110111

          - FUNCTION OUTPUT:  11000110110011101110100001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010011100110000110001010101

       - FUNCTION OUTPUT:          11000110110011101110100001110111

       - Left XOR FUNCTION OUTPUT: 00111100101111011110010000100010

       - Next Round Left 32 Bits:  11001010101001101100100100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100101111011110010000100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010101001101100100100100000

       - Right 32 Bits:            00111100101111011110010000100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       00111100101111011110010000100010
          - S-Box Result:     00010101100001101100011111101110   [per every group of 4-bits]
          - Split Into Two:   0001010110000110 [L] 1100011111101110 [R]
          - Swap Halves:      11000111111011100001010110000110
          - Bit Inversion:    00111000000100011110101001111001
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     10111011000011001010000001100111

          - FUNCTION OUTPUT:  10111011000011001010000001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010101001101100100100100000

       - FUNCTION OUTPUT:          10111011000011001010000001100111

       - Left XOR FUNCTION OUTPUT: 01110001101010100110100101000111

       - Next Round Left 32 Bits:  00111100101111011110010000100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001101010100110100101000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100101111011110010000100010

       - Right 32 Bits:            01110001101010100110100101000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       01110001101010100110100101000111
          - S-Box Result:     11011010010001000000001101111101   [per every group of 4-bits]
          - Split Into Two:   1101101001000100 [L] 0000001101111101 [R]
          - Swap Halves:      00000011011111011101101001000100
          - Bit Inversion:    11111100100000100010010110111011
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     10011111111111100111011100001111

          - FUNCTION OUTPUT:  10011111111111100111011100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100101111011110010000100010

       - FUNCTION OUTPUT:          10011111111111100111011100001111

       - Left XOR FUNCTION OUTPUT: 10100011010000111001001100101101

       - Next Round Left 32 Bits:  01110001101010100110100101000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011010000111001001100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001101010100110100101000111

       - Right 32 Bits:            10100011010000111001001100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       10100011010000111001001100101101
          - S-Box Result:     01000001011100010011000111100110   [per every group of 4-bits]
          - Split Into Two:   0100000101110001 [L] 0011000111100110 [R]
          - Swap Halves:      00110001111001100100000101110001
          - Bit Inversion:    11001110000110011011111010001110
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     10011000100000010111110011110110

          - FUNCTION OUTPUT:  10011000100000010111110011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001101010100110100101000111

       - FUNCTION OUTPUT:          10011000100000010111110011110110

       - Left XOR FUNCTION OUTPUT: 11101001001010110001010110110001

       - Next Round Left 32 Bits:  10100011010000111001001100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001001010110001010110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011010000111001001100101101

       - Right 32 Bits:            11101001001010110001010110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       11101001001010110001010110110001
          - S-Box Result:     11000011111010001010100110001010   [per every group of 4-bits]
          - Split Into Two:   1100001111101000 [L] 1010100110001010 [R]
          - Swap Halves:      10101001100010101100001111101000
          - Bit Inversion:    01010110011101010011110000010111
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     01010111110011100111011000001000

          - FUNCTION OUTPUT:  01010111110011100111011000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011010000111001001100101101

       - FUNCTION OUTPUT:          01010111110011100111011000001000

       - Left XOR FUNCTION OUTPUT: 11110100100011011110010100100101

       - Next Round Left 32 Bits:  11101001001010110001010110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100100011011110010100100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001001010110001010110110001

       - Right 32 Bits:            11110100100011011110010100100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       11110100100011011110010100100101
          - S-Box Result:     10110111001001101100100111101001   [per every group of 4-bits]
          - Split Into Two:   1011011100100110 [L] 1100100111101001 [R]
          - Swap Halves:      11001001111010011011011100100110
          - Bit Inversion:    00110110000101100100100011011001
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     01011100001010000000111011100000

          - FUNCTION OUTPUT:  01011100001010000000111011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001001010110001010110110001

       - FUNCTION OUTPUT:          01011100001010000000111011100000

       - Left XOR FUNCTION OUTPUT: 10110101000000110001101101010001

       - Next Round Left 32 Bits:  11110100100011011110010100100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101000000110001101101010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100100011011110010100100101

       - Right 32 Bits:            10110101000000110001101101010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       10110101000000110001101101010001
          - S-Box Result:     10001001111100011010100010011010   [per every group of 4-bits]
          - Split Into Two:   1000100111110001 [L] 1010100010011010 [R]
          - Swap Halves:      10101000100110101000100111110001
          - Bit Inversion:    01010111011001010111011000001110
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     10000101110010001010011001110100

          - FUNCTION OUTPUT:  10000101110010001010011001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100100011011110010100100101

       - FUNCTION OUTPUT:          10000101110010001010011001110100

       - Left XOR FUNCTION OUTPUT: 01110001010001010100001101010001

       - Next Round Left 32 Bits:  10110101000000110001101101010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001010001010100001101010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101000000110001101101010001

       - Right 32 Bits:            01110001010001010100001101010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       01110001010001010100001101010001
          - S-Box Result:     11011010011110010111000110011010   [per every group of 4-bits]
          - Split Into Two:   1101101001111001 [L] 0111000110011010 [R]
          - Swap Halves:      01110001100110101101101001111001
          - Bit Inversion:    10001110011001010010010110000110
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     01001101000111000111011110011101

          - FUNCTION OUTPUT:  01001101000111000111011110011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101000000110001101101010001

       - FUNCTION OUTPUT:          01001101000111000111011110011101

       - Left XOR FUNCTION OUTPUT: 11111000000111110110110011001100

       - Next Round Left 32 Bits:  01110001010001010100001101010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000000111110110110011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001010001010100001101010001

       - Right 32 Bits:            11111000000111110110110011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       11111000000111110110110011001100
          - S-Box Result:     10110010101010110000010101010101   [per every group of 4-bits]
          - Split Into Two:   1011001010101011 [L] 0000010101010101 [R]
          - Swap Halves:      00000101010101011011001010101011
          - Bit Inversion:    11111010101010100100110101010100
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     10100100101111011000001101111111

          - FUNCTION OUTPUT:  10100100101111011000001101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001010001010100001101010001

       - FUNCTION OUTPUT:          10100100101111011000001101111111

       - Left XOR FUNCTION OUTPUT: 11010101111110001100000000101110

       - Next Round Left 32 Bits:  11111000000111110110110011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101111110001100000000101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000000111110110110011001100

       - Right 32 Bits:            11010101111110001100000000101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       11010101111110001100000000101110
          - S-Box Result:     01101001101100100101111111101100   [per every group of 4-bits]
          - Split Into Two:   0110100110110010 [L] 0101111111101100 [R]
          - Swap Halves:      01011111111011000110100110110010
          - Bit Inversion:    10100000000100111001011001001101
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     01110100101010100101111001110111

          - FUNCTION OUTPUT:  01110100101010100101111001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000000111110110110011001100

       - FUNCTION OUTPUT:          01110100101010100101111001110111

       - Left XOR FUNCTION OUTPUT: 10001100101101010011001010111011

       - Next Round Left 32 Bits:  11010101111110001100000000101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100101101010011001010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101111110001100000000101110

       - Right 32 Bits:            10001100101101010011001010111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       10001100101101010011001010111011
          - S-Box Result:     00100101100010010001111010001000   [per every group of 4-bits]
          - Split Into Two:   0010010110001001 [L] 0001111010001000 [R]
          - Swap Halves:      00011110100010000010010110001001
          - Bit Inversion:    11100001011101111101101001110110
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     00111001000011010100110000000101

          - FUNCTION OUTPUT:  00111001000011010100110000000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101111110001100000000101110

       - FUNCTION OUTPUT:          00111001000011010100110000000101

       - Left XOR FUNCTION OUTPUT: 11101100111101011000110000101011

       - Next Round Left 32 Bits:  10001100101101010011001010111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100111101011000110000101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100101101010011001010111011

       - Right 32 Bits:            11101100111101011000110000101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       11101100111101011000110000101011
          - S-Box Result:     11000101101110010010010111101000   [per every group of 4-bits]
          - Split Into Two:   1100010110111001 [L] 0010010111101000 [R]
          - Swap Halves:      00100101111010001100010110111001
          - Bit Inversion:    11011010000101110011101001000110
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     10000100000110001101111000001101

          - FUNCTION OUTPUT:  10000100000110001101111000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100101101010011001010111011

       - FUNCTION OUTPUT:          10000100000110001101111000001101

       - Left XOR FUNCTION OUTPUT: 00001000101011011110110010110110

       - Next Round Left 32 Bits:  11101100111101011000110000101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000101011011110110010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100111101011000110000101011

       - Right 32 Bits:            00001000101011011110110010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       00001000101011011110110010110110
          - S-Box Result:     11110010010001101100010110000000   [per every group of 4-bits]
          - Split Into Two:   1111001001000110 [L] 1100010110000000 [R]
          - Swap Halves:      11000101100000001111001001000110
          - Bit Inversion:    00111010011111110000110110111001
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     10100110000101100101000110100010

          - FUNCTION OUTPUT:  10100110000101100101000110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100111101011000110000101011

       - FUNCTION OUTPUT:          10100110000101100101000110100010

       - Left XOR FUNCTION OUTPUT: 01001010111000111101110110001001

       - Next Round Left 32 Bits:  00001000101011011110110010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010111000111101110110001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000101011011110110010110110

       - Right 32 Bits:            01001010111000111101110110001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       01001010111000111101110110001001
          - S-Box Result:     01110100110000010110011000100011   [per every group of 4-bits]
          - Split Into Two:   0111010011000001 [L] 0110011000100011 [R]
          - Swap Halves:      01100110001000110111010011000001
          - Bit Inversion:    10011001110111001000101100111110
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     01100001100011100101111000011100

          - FUNCTION OUTPUT:  01100001100011100101111000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000101011011110110010110110

       - FUNCTION OUTPUT:          01100001100011100101111000011100

       - Left XOR FUNCTION OUTPUT: 01101001001000111011001010101010

       - Next Round Left 32 Bits:  01001010111000111101110110001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001001000111011001010101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010111000111101110110001001

       - Right 32 Bits:            01101001001000111011001010101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       01101001001000111011001010101010
          - S-Box Result:     00000011111000011000111001000100   [per every group of 4-bits]
          - Split Into Two:   0000001111100001 [L] 1000111001000100 [R]
          - Swap Halves:      10001110010001000000001111100001
          - Bit Inversion:    01110001101110111111110000011110
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     10101111111110000011010001110100

          - FUNCTION OUTPUT:  10101111111110000011010001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010111000111101110110001001

       - FUNCTION OUTPUT:          10101111111110000011010001110100

       - Left XOR FUNCTION OUTPUT: 11100101000110111110100111111101

       - Next Round Left 32 Bits:  01101001001000111011001010101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101000110111110100111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110010100011011111010011111110101101001001000111011001010101010

 > Decrypted Block:     1110010100011011111010011111110101101001001000111011001010101010


!!!CBC: Previous Ciphertext:                             0000110001100111000001001001001011110010100000000111000010101111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1110100101111100111011010110111110011011101000111100001000000101

 > Final Processed Block:                                1110100101111100111011010110111110011011101000111100001000000101



Ciphertext Block 5:                                      1110111001000001111001010010110011011110001101001000011000000101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110010000011110010100101100

       - Right 32 Bits:            11011110001101001000011000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       11011110001101001000011000000101
          - S-Box Result:     01101100000101110010000011111001   [per every group of 4-bits]
          - Split Into Two:   0110110000010111 [L] 0010000011111001 [R]
          - Swap Halves:      00100000111110010110110000010111
          - Bit Inversion:    11011111000001101001001111101000
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     11111101111111101100000100111101

          - FUNCTION OUTPUT:  11111101111111101100000100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110010000011110010100101100

       - FUNCTION OUTPUT:          11111101111111101100000100111101

       - Left XOR FUNCTION OUTPUT: 00010011101111110010010000010001

       - Next Round Left 32 Bits:  11011110001101001000011000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011101111110010010000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110001101001000011000000101

       - Right 32 Bits:            00010011101111110010010000010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       00010011101111110010010000010001
          - S-Box Result:     10100001100010111110011110101010   [per every group of 4-bits]
          - Split Into Two:   1010000110001011 [L] 1110011110101010 [R]
          - Swap Halves:      11100111101010101010000110001011
          - Bit Inversion:    00011000010101010101111001110100
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     01110010100010110001110110111100

          - FUNCTION OUTPUT:  01110010100010110001110110111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110001101001000011000000101

       - FUNCTION OUTPUT:          01110010100010110001110110111100

       - Left XOR FUNCTION OUTPUT: 10101100101111111001101110111001

       - Next Round Left 32 Bits:  00010011101111110010010000010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100101111111001101110111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011101111110010010000010001

       - Right 32 Bits:            10101100101111111001101110111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       10101100101111111001101110111001
          - S-Box Result:     01000101100010110011100010000011   [per every group of 4-bits]
          - Split Into Two:   0100010110001011 [L] 0011100010000011 [R]
          - Swap Halves:      00111000100000110100010110001011
          - Bit Inversion:    11000111011111001011101001110100
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     01000100011000011111000001101010

          - FUNCTION OUTPUT:  01000100011000011111000001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011101111110010010000010001

       - FUNCTION OUTPUT:          01000100011000011111000001101010

       - Left XOR FUNCTION OUTPUT: 01010111110111101101010001111011

       - Next Round Left 32 Bits:  10101100101111111001101110111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111110111101101010001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100101111111001101110111001

       - Right 32 Bits:            01010111110111101101010001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       01010111110111101101010001111011
          - S-Box Result:     10011101011011000110011111011000   [per every group of 4-bits]
          - Split Into Two:   1001110101101100 [L] 0110011111011000 [R]
          - Swap Halves:      01100111110110001001110101101100
          - Bit Inversion:    10011000001001110110001010010011
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     11111011010110110011000000100111

          - FUNCTION OUTPUT:  11111011010110110011000000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100101111111001101110111001

       - FUNCTION OUTPUT:          11111011010110110011000000100111

       - Left XOR FUNCTION OUTPUT: 01010111111001001010101110011110

       - Next Round Left 32 Bits:  01010111110111101101010001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111111001001010101110011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111110111101101010001111011

       - Right 32 Bits:            01010111111001001010101110011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       01010111111001001010101110011110
          - S-Box Result:     10011101110001110100100000111100   [per every group of 4-bits]
          - Split Into Two:   1001110111000111 [L] 0100100000111100 [R]
          - Swap Halves:      01001000001111001001110111000111
          - Bit Inversion:    10110111110000110110001000111000
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     11100001010110111010000001000000

          - FUNCTION OUTPUT:  11100001010110111010000001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111110111101101010001111011

       - FUNCTION OUTPUT:          11100001010110111010000001000000

       - Left XOR FUNCTION OUTPUT: 10110110100001010111010000111011

       - Next Round Left 32 Bits:  01010111111001001010101110011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110100001010111010000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111111001001010101110011110

       - Right 32 Bits:            10110110100001010111010000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       10110110100001010111010000111011
          - S-Box Result:     10000000001010011101011100011000   [per every group of 4-bits]
          - Split Into Two:   1000000000101001 [L] 1101011100011000 [R]
          - Swap Halves:      11010111000110001000000000101001
          - Bit Inversion:    00101000111001110111111111010110
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     00101001010111000011010111001001

          - FUNCTION OUTPUT:  00101001010111000011010111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111111001001010101110011110

       - FUNCTION OUTPUT:          00101001010111000011010111001001

       - Left XOR FUNCTION OUTPUT: 01111110101110001001111001010111

       - Next Round Left 32 Bits:  10110110100001010111010000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110101110001001111001010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110100001010111010000111011

       - Right 32 Bits:            01111110101110001001111001010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       01111110101110001001111001010111
          - S-Box Result:     11011100100000100011110010011101   [per every group of 4-bits]
          - Split Into Two:   1101110010000010 [L] 0011110010011101 [R]
          - Swap Halves:      00111100100111011101110010000010
          - Bit Inversion:    11000011011000100010001101111101
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     10101001010111000110010101000100

          - FUNCTION OUTPUT:  10101001010111000110010101000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110100001010111010000111011

       - FUNCTION OUTPUT:          10101001010111000110010101000100

       - Left XOR FUNCTION OUTPUT: 00011111110110010001000101111111

       - Next Round Left 32 Bits:  01111110101110001001111001010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111110110010001000101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110101110001001111001010111

       - Right 32 Bits:            00011111110110010001000101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       00011111110110010001000101111111
          - S-Box Result:     10101011011000111010101011011011   [per every group of 4-bits]
          - Split Into Two:   1010101101100011 [L] 1010101011011011 [R]
          - Swap Halves:      10101010110110111010101101100011
          - Bit Inversion:    01010101001001000101010010011100
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     10000111100010011000010011100110

          - FUNCTION OUTPUT:  10000111100010011000010011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110101110001001111001010111

       - FUNCTION OUTPUT:          10000111100010011000010011100110

       - Left XOR FUNCTION OUTPUT: 11111001001100010001101010110001

       - Next Round Left 32 Bits:  00011111110110010001000101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001001100010001101010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111110110010001000101111111

       - Right 32 Bits:            11111001001100010001101010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       11111001001100010001101010110001
          - S-Box Result:     10110011000110101010010010001010   [per every group of 4-bits]
          - Split Into Two:   1011001100011010 [L] 1010010010001010 [R]
          - Swap Halves:      10100100100010101011001100011010
          - Bit Inversion:    01011011011101010100110011100101
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     10011000000011000001111011111110

          - FUNCTION OUTPUT:  10011000000011000001111011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111110110010001000101111111

       - FUNCTION OUTPUT:          10011000000011000001111011111110

       - Left XOR FUNCTION OUTPUT: 10000111110101010000111110000001

       - Next Round Left 32 Bits:  11111001001100010001101010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111110101010000111110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001001100010001101010110001

       - Right 32 Bits:            10000111110101010000111110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       10000111110101010000111110000001
          - S-Box Result:     00101101011010011111101100101010   [per every group of 4-bits]
          - Split Into Two:   0010110101101001 [L] 1111101100101010 [R]
          - Swap Halves:      11111011001010100010110101101001
          - Bit Inversion:    00000100110101011101001010010110
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     01011010110000100001110010111101

          - FUNCTION OUTPUT:  01011010110000100001110010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001001100010001101010110001

       - FUNCTION OUTPUT:          01011010110000100001110010111101

       - Left XOR FUNCTION OUTPUT: 10100011111100110000011000001100

       - Next Round Left 32 Bits:  10000111110101010000111110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011111100110000011000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111110101010000111110000001

       - Right 32 Bits:            10100011111100110000011000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       10100011111100110000011000001100
          - S-Box Result:     01000001101100011111000011110101   [per every group of 4-bits]
          - Split Into Two:   0100000110110001 [L] 1111000011110101 [R]
          - Swap Halves:      11110000111101010100000110110001
          - Bit Inversion:    00001111000010101011111001001110
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     11011011101100110111011001110100

          - FUNCTION OUTPUT:  11011011101100110111011001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111110101010000111110000001

       - FUNCTION OUTPUT:          11011011101100110111011001110100

       - Left XOR FUNCTION OUTPUT: 01011100011001100111100111110101

       - Next Round Left 32 Bits:  10100011111100110000011000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100011001100111100111110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011111100110000011000001100

       - Right 32 Bits:            01011100011001100111100111110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       01011100011001100111100111110101
          - S-Box Result:     10010101000000001101001110111001   [per every group of 4-bits]
          - Split Into Two:   1001010100000000 [L] 1101001110111001 [R]
          - Swap Halves:      11010011101110011001010100000000
          - Bit Inversion:    00101100010001100110101011111111
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     11110100001111001111110010001100

          - FUNCTION OUTPUT:  11110100001111001111110010001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011111100110000011000001100

       - FUNCTION OUTPUT:          11110100001111001111110010001100

       - Left XOR FUNCTION OUTPUT: 01010111110011111111101010000000

       - Next Round Left 32 Bits:  01011100011001100111100111110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111110011111111101010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100011001100111100111110101

       - Right 32 Bits:            01010111110011111111101010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       01010111110011111111101010000000
          - S-Box Result:     10011101010110111011010000101111   [per every group of 4-bits]
          - Split Into Two:   1001110101011011 [L] 1011010000101111 [R]
          - Swap Halves:      10110100001011111001110101011011
          - Bit Inversion:    01001011110100000110001010100100
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     00010101110111111000011011101111

          - FUNCTION OUTPUT:  00010101110111111000011011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100011001100111100111110101

       - FUNCTION OUTPUT:          00010101110111111000011011101111

       - Left XOR FUNCTION OUTPUT: 01001001101110011111111100011010

       - Next Round Left 32 Bits:  01010111110011111111101010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001101110011111111100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111110011111111101010000000

       - Right 32 Bits:            01001001101110011111111100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       01001001101110011111111100011010
          - S-Box Result:     01110011100000111011101110100100   [per every group of 4-bits]
          - Split Into Two:   0111001110000011 [L] 1011101110100100 [R]
          - Swap Halves:      10111011101001000111001110000011
          - Bit Inversion:    01000100010110111000110001111100
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     11011000001100101101000001100111

          - FUNCTION OUTPUT:  11011000001100101101000001100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111110011111111101010000000

       - FUNCTION OUTPUT:          11011000001100101101000001100111

       - Left XOR FUNCTION OUTPUT: 10001111111111010010101011100111

       - Next Round Left 32 Bits:  01001001101110011111111100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111111111010010101011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001101110011111111100011010

       - Right 32 Bits:            10001111111111010010101011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       10001111111111010010101011100111
          - S-Box Result:     00101011101101101110010011001101   [per every group of 4-bits]
          - Split Into Two:   0010101110110110 [L] 1110010011001101 [R]
          - Swap Halves:      11100100110011010010101110110110
          - Bit Inversion:    00011011001100101101010001001001
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     11100011011000000000000101101011

          - FUNCTION OUTPUT:  11100011011000000000000101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001101110011111111100011010

       - FUNCTION OUTPUT:          11100011011000000000000101101011

       - Left XOR FUNCTION OUTPUT: 10101010110110011111111001110001

       - Next Round Left 32 Bits:  10001111111111010010101011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010110110011111111001110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111111111010010101011100111

       - Right 32 Bits:            10101010110110011111111001110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       10101010110110011111111001110001
          - S-Box Result:     01000100011000111011110011011010   [per every group of 4-bits]
          - Split Into Two:   0100010001100011 [L] 1011110011011010 [R]
          - Swap Halves:      10111100110110100100010001100011
          - Bit Inversion:    01000011001001011011101110011100
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     10011101011001100111001111110110

          - FUNCTION OUTPUT:  10011101011001100111001111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111111111010010101011100111

       - FUNCTION OUTPUT:          10011101011001100111001111110110

       - Left XOR FUNCTION OUTPUT: 00010010100110110101100100010001

       - Next Round Left 32 Bits:  10101010110110011111111001110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010100110110101100100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001001010011011010110010001000110101010110110011111111001110001

 > Decrypted Block:     0001001010011011010110010001000110101010110110011111111001110001


!!!CBC: Previous Ciphertext:                             1110001000111000110100001101101111111010011100110000110001010101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1111000010100011100010011100101001010000101010101111001000100100

 > Final Processed Block:                                1111000010100011100010011100101001010000101010101111001000100100



Ciphertext Block 6:                                      1101000010000011100011010100010000001100001001100000101110011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000100000111000110101000100

       - Right 32 Bits:            00001100001001100000101110011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       00001100001001100000101110011100
          - S-Box Result:     11110101111000001111100000110101   [per every group of 4-bits]
          - Split Into Two:   1111010111100000 [L] 1111100000110101 [R]
          - Swap Halves:      11111000001101011111010111100000
          - Bit Inversion:    00000111110010100000101000011111
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     00100101001100100101100011001010

          - FUNCTION OUTPUT:  00100101001100100101100011001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000100000111000110101000100

       - FUNCTION OUTPUT:          00100101001100100101100011001010

       - Left XOR FUNCTION OUTPUT: 11110101101100011101010110001110

       - Next Round Left 32 Bits:  00001100001001100000101110011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101101100011101010110001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100001001100000101110011100

       - Right 32 Bits:            11110101101100011101010110001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       11110101101100011101010110001110
          - S-Box Result:     10111001100010100110100100101100   [per every group of 4-bits]
          - Split Into Two:   1011100110001010 [L] 0110100100101100 [R]
          - Swap Halves:      01101001001011001011100110001010
          - Bit Inversion:    10010110110100110100011001110101
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     11111100000011010000010110111101

          - FUNCTION OUTPUT:  11111100000011010000010110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100001001100000101110011100

       - FUNCTION OUTPUT:          11111100000011010000010110111101

       - Left XOR FUNCTION OUTPUT: 11110000001010110000111000100001

       - Next Round Left 32 Bits:  11110101101100011101010110001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000001010110000111000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101101100011101010110001110

       - Right 32 Bits:            11110000001010110000111000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       11110000001010110000111000100001
          - S-Box Result:     10111111111010001111110011101010   [per every group of 4-bits]
          - Split Into Two:   1011111111101000 [L] 1111110011101010 [R]
          - Swap Halves:      11111100111010101011111111101000
          - Bit Inversion:    00000011000101010100000000010111
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     10000000000010000000101000001001

          - FUNCTION OUTPUT:  10000000000010000000101000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101101100011101010110001110

       - FUNCTION OUTPUT:          10000000000010000000101000001001

       - Left XOR FUNCTION OUTPUT: 01110101101110011101111110000111

       - Next Round Left 32 Bits:  11110000001010110000111000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101101110011101111110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000001010110000111000100001

       - Right 32 Bits:            01110101101110011101111110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       01110101101110011101111110000111
          - S-Box Result:     11011001100000110110101100101101   [per every group of 4-bits]
          - Split Into Two:   1101100110000011 [L] 0110101100101101 [R]
          - Swap Halves:      01101011001011011101100110000011
          - Bit Inversion:    10010100110100100010011001111100
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     11110111101011100111010011001000

          - FUNCTION OUTPUT:  11110111101011100111010011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000001010110000111000100001

       - FUNCTION OUTPUT:          11110111101011100111010011001000

       - Left XOR FUNCTION OUTPUT: 00000111100001010111101011101001

       - Next Round Left 32 Bits:  01110101101110011101111110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111100001010111101011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101101110011101111110000111

       - Right 32 Bits:            00000111100001010111101011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       00000111100001010111101011101001
          - S-Box Result:     11111101001010011101010011000011   [per every group of 4-bits]
          - Split Into Two:   1111110100101001 [L] 1101010011000011 [R]
          - Swap Halves:      11010100110000111111110100101001
          - Bit Inversion:    00101011001111000000001011010110
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     01111101101001001100000010101110

          - FUNCTION OUTPUT:  01111101101001001100000010101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101101110011101111110000111

       - FUNCTION OUTPUT:          01111101101001001100000010101110

       - Left XOR FUNCTION OUTPUT: 00001000000111010001111100101001

       - Next Round Left 32 Bits:  00000111100001010111101011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000111010001111100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111100001010111101011101001

       - Right 32 Bits:            00001000000111010001111100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       00001000000111010001111100101001
          - S-Box Result:     11110010101001101010101111100011   [per every group of 4-bits]
          - Split Into Two:   1111001010100110 [L] 1010101111100011 [R]
          - Swap Halves:      10101011111000111111001010100110
          - Bit Inversion:    01010100000111000000110101011001
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     01010101101001110100011101000110

          - FUNCTION OUTPUT:  01010101101001110100011101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111100001010111101011101001

       - FUNCTION OUTPUT:          01010101101001110100011101000110

       - Left XOR FUNCTION OUTPUT: 01010010001000100011110110101111

       - Next Round Left 32 Bits:  00001000000111010001111100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010001000100011110110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000111010001111100101001

       - Right 32 Bits:            01010010001000100011110110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       01010010001000100011110110101111
          - S-Box Result:     10011110111011100001011001001011   [per every group of 4-bits]
          - Split Into Two:   1001111011101110 [L] 0001011001001011 [R]
          - Swap Halves:      00010110010010111001111011101110
          - Bit Inversion:    11101001101101000110000100010001
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     10000011100010100010011100101000

          - FUNCTION OUTPUT:  10000011100010100010011100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000111010001111100101001

       - FUNCTION OUTPUT:          10000011100010100010011100101000

       - Left XOR FUNCTION OUTPUT: 10001011100101110011100000000001

       - Next Round Left 32 Bits:  01010010001000100011110110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011100101110011100000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010001000100011110110101111

       - Right 32 Bits:            10001011100101110011100000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       10001011100101110011100000000001
          - S-Box Result:     00101000001111010001001011111010   [per every group of 4-bits]
          - Split Into Two:   0010100000111101 [L] 0001001011111010 [R]
          - Swap Halves:      00010010111110100010100000111101
          - Bit Inversion:    11101101000001011101011111000010
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     00111111101010000000011110111000

          - FUNCTION OUTPUT:  00111111101010000000011110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010001000100011110110101111

       - FUNCTION OUTPUT:          00111111101010000000011110111000

       - Left XOR FUNCTION OUTPUT: 01101101100010100011101000010111

       - Next Round Left 32 Bits:  10001011100101110011100000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101100010100011101000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100101110011100000000001

       - Right 32 Bits:            01101101100010100011101000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       01101101100010100011101000010111
          - S-Box Result:     00000110001001000001010010101101   [per every group of 4-bits]
          - Split Into Two:   0000011000100100 [L] 0001010010101101 [R]
          - Swap Halves:      00010100101011010000011000100100
          - Bit Inversion:    11101011010100101111100111011011
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     00101000001010111010101111000000

          - FUNCTION OUTPUT:  00101000001010111010101111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100101110011100000000001

       - FUNCTION OUTPUT:          00101000001010111010101111000000

       - Left XOR FUNCTION OUTPUT: 10100011101111001001001111000001

       - Next Round Left 32 Bits:  01101101100010100011101000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011101111001001001111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101100010100011101000010111

       - Right 32 Bits:            10100011101111001001001111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       10100011101111001001001111000001
          - S-Box Result:     01000001100001010011000101011010   [per every group of 4-bits]
          - Split Into Two:   0100000110000101 [L] 0011000101011010 [R]
          - Swap Halves:      00110001010110100100000110000101
          - Bit Inversion:    11001110101001011011111001111010
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     10010000101100100111000001010001

          - FUNCTION OUTPUT:  10010000101100100111000001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101100010100011101000010111

       - FUNCTION OUTPUT:          10010000101100100111000001010001

       - Left XOR FUNCTION OUTPUT: 11111101001110000100101001000110

       - Next Round Left 32 Bits:  10100011101111001001001111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101001110000100101001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011101111001001001111000001

       - Right 32 Bits:            11111101001110000100101001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       11111101001110000100101001000110
          - S-Box Result:     10110110000100100111010001110000   [per every group of 4-bits]
          - Split Into Two:   1011011000010010 [L] 0111010001110000 [R]
          - Swap Halves:      01110100011100001011011000010010
          - Bit Inversion:    10001011100011110100100111101101
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     01011111001101101000000111010111

          - FUNCTION OUTPUT:  01011111001101101000000111010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011101111001001001111000001

       - FUNCTION OUTPUT:          01011111001101101000000111010111

       - Left XOR FUNCTION OUTPUT: 11111100100010100001001000010110

       - Next Round Left 32 Bits:  11111101001110000100101001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100100010100001001000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101001110000100101001000110

       - Right 32 Bits:            11111100100010100001001000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       11111100100010100001001000010110
          - S-Box Result:     10110101001001001010111010100000   [per every group of 4-bits]
          - Split Into Two:   1011010100100100 [L] 1010111010100000 [R]
          - Swap Halves:      10101110101000001011010100100100
          - Bit Inversion:    01010001010111110100101011011011
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     10001001001001011101110010101000

          - FUNCTION OUTPUT:  10001001001001011101110010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101001110000100101001000110

       - FUNCTION OUTPUT:          10001001001001011101110010101000

       - Left XOR FUNCTION OUTPUT: 01110100000111011001011011101110

       - Next Round Left 32 Bits:  11111100100010100001001000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100000111011001011011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100100010100001001000010110

       - Right 32 Bits:            01110100000111011001011011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       01110100000111011001011011101110
          - S-Box Result:     11010111101001100011000011001100   [per every group of 4-bits]
          - Split Into Two:   1101011110100110 [L] 0011000011001100 [R]
          - Swap Halves:      00110000110011001101011110100110
          - Bit Inversion:    11001111001100110010100001011001
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     10010001001111001100110000010010

          - FUNCTION OUTPUT:  10010001001111001100110000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100100010100001001000010110

       - FUNCTION OUTPUT:          10010001001111001100110000010010

       - Left XOR FUNCTION OUTPUT: 01101101101101101101111000000100

       - Next Round Left 32 Bits:  01110100000111011001011011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101101101101101111000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100000111011001011011101110

       - Right 32 Bits:            01101101101101101101111000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       01101101101101101101111000000100
          - S-Box Result:     00000110100000000110110011110111   [per every group of 4-bits]
          - Split Into Two:   0000011010000000 [L] 0110110011110111 [R]
          - Swap Halves:      01101100111101110000011010000000
          - Bit Inversion:    10010011000010001111100101111111
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     00001111011000011010010101100100

          - FUNCTION OUTPUT:  00001111011000011010010101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100000111011001011011101110

       - FUNCTION OUTPUT:          00001111011000011010010101100100

       - Left XOR FUNCTION OUTPUT: 01111011011111000011001110001010

       - Next Round Left 32 Bits:  01101101101101101101111000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011011111000011001110001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101101101101101111000000100

       - Right 32 Bits:            01111011011111000011001110001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       01111011011111000011001110001010
          - S-Box Result:     11011000110101010001000100100100   [per every group of 4-bits]
          - Split Into Two:   1101100011010101 [L] 0001000100100100 [R]
          - Swap Halves:      00010001001001001101100011010101
          - Bit Inversion:    11101110110110110010011100101010
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     00010110100010011111001000001000

          - FUNCTION OUTPUT:  00010110100010011111001000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101101101101101111000000100

       - FUNCTION OUTPUT:          00010110100010011111001000001000

       - Left XOR FUNCTION OUTPUT: 01111011001111110010110000001100

       - Next Round Left 32 Bits:  01111011011111000011001110001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011001111110010110000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011011111000011001110001010

       - Right 32 Bits:            01111011001111110010110000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       01111011001111110010110000001100
          - S-Box Result:     11011000000110111110010111110101   [per every group of 4-bits]
          - Split Into Two:   1101100000011011 [L] 1110010111110101 [R]
          - Swap Halves:      11100101111101011101100000011011
          - Bit Inversion:    00011010000010100010011111100100
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     11000100010010011110111110001110

          - FUNCTION OUTPUT:  11000100010010011110111110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011011111000011001110001010

       - FUNCTION OUTPUT:          11000100010010011110111110001110

       - Left XOR FUNCTION OUTPUT: 10111111001101011101110000000100

       - Next Round Left 32 Bits:  01111011001111110010110000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111001101011101110000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011111100110101110111000000010001111011001111110010110000001100

 > Decrypted Block:     1011111100110101110111000000010001111011001111110010110000001100


!!!CBC: Previous Ciphertext:                             1110111001000001111001010010110011011110001101001000011000000101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101000101110100001110010010100010100101000010111010101000001001

 > Final Processed Block:                                0101000101110100001110010010100010100101000010111010101000001001



Ciphertext Block 7:                                      0110110010011001111101101001000001110111111101111100110010110010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100100110011111011010010000

       - Right 32 Bits:            01110111111101111100110010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       01110111111101111100110010110010
          - S-Box Result:     11011101101111010101010110001110   [per every group of 4-bits]
          - Split Into Two:   1101110110111101 [L] 0101010110001110 [R]
          - Swap Halves:      01010101100011101101110110111101
          - Bit Inversion:    10101010011100010010001001000010
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     10001000100010010111000010010111

          - FUNCTION OUTPUT:  10001000100010010111000010010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100100110011111011010010000

       - FUNCTION OUTPUT:          10001000100010010111000010010111

       - Left XOR FUNCTION OUTPUT: 11100100000100001000011000000111

       - Next Round Left 32 Bits:  01110111111101111100110010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100000100001000011000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111111101111100110010110010

       - Right 32 Bits:            11100100000100001000011000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       11100100000100001000011000000111
          - S-Box Result:     11000111101011110010000011111101   [per every group of 4-bits]
          - Split Into Two:   1100011110101111 [L] 0010000011111101 [R]
          - Swap Halves:      00100000111111011100011110101111
          - Bit Inversion:    11011111000000100011100001010000
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     10110101110111000111101110011000

          - FUNCTION OUTPUT:  10110101110111000111101110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111111101111100110010110010

       - FUNCTION OUTPUT:          10110101110111000111101110011000

       - Left XOR FUNCTION OUTPUT: 11000010001010111011011100101010

       - Next Round Left 32 Bits:  11100100000100001000011000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010001010111011011100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100000100001000011000000111

       - Right 32 Bits:            11000010001010111011011100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       11000010001010111011011100101010
          - S-Box Result:     01011110111010001000110111100100   [per every group of 4-bits]
          - Split Into Two:   0101111011101000 [L] 1000110111100100 [R]
          - Swap Halves:      10001101111001000101111011101000
          - Bit Inversion:    01110010000110111010000100010111
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     11110001000001101110101100001001

          - FUNCTION OUTPUT:  11110001000001101110101100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100000100001000011000000111

       - FUNCTION OUTPUT:          11110001000001101110101100001001

       - Left XOR FUNCTION OUTPUT: 00010101000101100110110100001110

       - Next Round Left 32 Bits:  11000010001010111011011100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101000101100110110100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010001010111011011100101010

       - Right 32 Bits:            00010101000101100110110100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       00010101000101100110110100001110
          - S-Box Result:     10101001101000000000011011111100   [per every group of 4-bits]
          - Split Into Two:   1010100110100000 [L] 0000011011111100 [R]
          - Swap Halves:      00000110111111001010100110100000
          - Bit Inversion:    11111001000000110101011001011111
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     10011010011111110000010011101011

          - FUNCTION OUTPUT:  10011010011111110000010011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010001010111011011100101010

       - FUNCTION OUTPUT:          10011010011111110000010011101011

       - Left XOR FUNCTION OUTPUT: 01011000010101001011001111000001

       - Next Round Left 32 Bits:  00010101000101100110110100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000010101001011001111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101000101100110110100001110

       - Right 32 Bits:            01011000010101001011001111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       01011000010101001011001111000001
          - S-Box Result:     10010010100101111000000101011010   [per every group of 4-bits]
          - Split Into Two:   1001001010010111 [L] 1000000101011010 [R]
          - Swap Halves:      10000001010110101001001010010111
          - Bit Inversion:    01111110101001010110110101101000
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     00101000001111011010111100010000

          - FUNCTION OUTPUT:  00101000001111011010111100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101000101100110110100001110

       - FUNCTION OUTPUT:          00101000001111011010111100010000

       - Left XOR FUNCTION OUTPUT: 00111101001010111100001000011110

       - Next Round Left 32 Bits:  01011000010101001011001111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101001010111100001000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000010101001011001111000001

       - Right 32 Bits:            00111101001010111100001000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       00111101001010111100001000011110
          - S-Box Result:     00010110111010000101111010101100   [per every group of 4-bits]
          - Split Into Two:   0001011011101000 [L] 0101111010101100 [R]
          - Swap Halves:      01011110101011000001011011101000
          - Bit Inversion:    10100001010100111110100100010111
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     10100000111010001010001100001000

          - FUNCTION OUTPUT:  10100000111010001010001100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000010101001011001111000001

       - FUNCTION OUTPUT:          10100000111010001010001100001000

       - Left XOR FUNCTION OUTPUT: 11111000101111000001000011001001

       - Next Round Left 32 Bits:  00111101001010111100001000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000101111000001000011001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101001010111100001000011110

       - Right 32 Bits:            11111000101111000001000011001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       11111000101111000001000011001001
          - S-Box Result:     10110010100001011010111101010011   [per every group of 4-bits]
          - Split Into Two:   1011001010000101 [L] 1010111101010011 [R]
          - Swap Halves:      10101111010100111011001010000101
          - Bit Inversion:    01010000101011000100110101111010
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     00111010100100100000101101000011

          - FUNCTION OUTPUT:  00111010100100100000101101000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101001010111100001000011110

       - FUNCTION OUTPUT:          00111010100100100000101101000011

       - Left XOR FUNCTION OUTPUT: 00000111101110011100100101011101

       - Next Round Left 32 Bits:  11111000101111000001000011001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111101110011100100101011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000101111000001000011001001

       - Right 32 Bits:            00000111101110011100100101011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       00000111101110011100100101011101
          - S-Box Result:     11111101100000110101001110010110   [per every group of 4-bits]
          - Split Into Two:   1111110110000011 [L] 0101001110010110 [R]
          - Swap Halves:      01010011100101101111110110000011
          - Bit Inversion:    10101100011010010000001001111100
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     01111110110001001101001000000110

          - FUNCTION OUTPUT:  01111110110001001101001000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000101111000001000011001001

       - FUNCTION OUTPUT:          01111110110001001101001000000110

       - Left XOR FUNCTION OUTPUT: 10000110011110001100001011001111

       - Next Round Left 32 Bits:  00000111101110011100100101011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110011110001100001011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111101110011100100101011101

       - Right 32 Bits:            10000110011110001100001011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       10000110011110001100001011001111
          - S-Box Result:     00100000110100100101111001011011   [per every group of 4-bits]
          - Split Into Two:   0010000011010010 [L] 0101111001011011 [R]
          - Swap Halves:      01011110010110110010000011010010
          - Bit Inversion:    10100001101001001101111100101101
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     01100010110111011000110100110110

          - FUNCTION OUTPUT:  01100010110111011000110100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111101110011100100101011101

       - FUNCTION OUTPUT:          01100010110111011000110100110110

       - Left XOR FUNCTION OUTPUT: 01100101011001000100010001101011

       - Next Round Left 32 Bits:  10000110011110001100001011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101011001000100010001101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110011110001100001011001111

       - Right 32 Bits:            01100101011001000100010001101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       01100101011001000100010001101011
          - S-Box Result:     00001001000001110111011100001000   [per every group of 4-bits]
          - Split Into Two:   0000100100000111 [L] 0111011100001000 [R]
          - Swap Halves:      01110111000010000000100100000111
          - Bit Inversion:    10001000111101111111011011111000
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     11010110111000000011100011010011

          - FUNCTION OUTPUT:  11010110111000000011100011010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110011110001100001011001111

       - FUNCTION OUTPUT:          11010110111000000011100011010011

       - Left XOR FUNCTION OUTPUT: 01010000100110001111101000011100

       - Next Round Left 32 Bits:  01100101011001000100010001101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000100110001111101000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101011001000100010001101011

       - Right 32 Bits:            01010000100110001111101000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       01010000100110001111101000011100
          - S-Box Result:     10011111001100101011010010100101   [per every group of 4-bits]
          - Split Into Two:   1001111100110010 [L] 1011010010100101 [R]
          - Swap Halves:      10110100101001011001111100110010
          - Bit Inversion:    01001011010110100110000011001101
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     10011111111000111010100011110111

          - FUNCTION OUTPUT:  10011111111000111010100011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101011001000100010001101011

       - FUNCTION OUTPUT:          10011111111000111010100011110111

       - Left XOR FUNCTION OUTPUT: 11111010100001111110110010011100

       - Next Round Left 32 Bits:  01010000100110001111101000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010100001111110110010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000100110001111101000011100

       - Right 32 Bits:            11111010100001111110110010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       11111010100001111110110010011100
          - S-Box Result:     10110100001011011100010100110101   [per every group of 4-bits]
          - Split Into Two:   1011010000101101 [L] 1100010100110101 [R]
          - Swap Halves:      11000101001101011011010000101101
          - Bit Inversion:    00111010110010100100101111010010
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     11100010101100001101110110100001

          - FUNCTION OUTPUT:  11100010101100001101110110100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000100110001111101000011100

       - FUNCTION OUTPUT:          11100010101100001101110110100001

       - Left XOR FUNCTION OUTPUT: 10110010001010000010011110111101

       - Next Round Left 32 Bits:  11111010100001111110110010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010001010000010011110111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010100001111110110010011100

       - Right 32 Bits:            10110010001010000010011110111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       10110010001010000010011110111101
          - S-Box Result:     10001110111000101110110110000110   [per every group of 4-bits]
          - Split Into Two:   1000111011100010 [L] 1110110110000110 [R]
          - Swap Halves:      11101101100001101000111011100010
          - Bit Inversion:    00010010011110010111000100011101
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     01001100011101101001010101010110

          - FUNCTION OUTPUT:  01001100011101101001010101010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010100001111110110010011100

       - FUNCTION OUTPUT:          01001100011101101001010101010110

       - Left XOR FUNCTION OUTPUT: 10110110111100010111100111001010

       - Next Round Left 32 Bits:  10110010001010000010011110111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110111100010111100111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010001010000010011110111101

       - Right 32 Bits:            10110110111100010111100111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       10110110111100010111100111001010
          - S-Box Result:     10000000101110101101001101010100   [per every group of 4-bits]
          - Split Into Two:   1000000010111010 [L] 1101001101010100 [R]
          - Swap Halves:      11010011010101001000000010111010
          - Bit Inversion:    00101100101010110111111101000101
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     10110000110000100010001101011110

          - FUNCTION OUTPUT:  10110000110000100010001101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010001010000010011110111101

       - FUNCTION OUTPUT:          10110000110000100010001101011110

       - Left XOR FUNCTION OUTPUT: 00000010111010100000010011100011

       - Next Round Left 32 Bits:  10110110111100010111100111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010111010100000010011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110111100010111100111001010

       - Right 32 Bits:            00000010111010100000010011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       00000010111010100000010011100011
          - S-Box Result:     11111110110001001111011111000001   [per every group of 4-bits]
          - Split Into Two:   1111111011000100 [L] 1111011111000001 [R]
          - Swap Halves:      11110111110000011111111011000100
          - Bit Inversion:    00001000001111100000000100111011
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     11110000011011001101010000011001

          - FUNCTION OUTPUT:  11110000011011001101010000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110111100010111100111001010

       - FUNCTION OUTPUT:          11110000011011001101010000011001

       - Left XOR FUNCTION OUTPUT: 01000110100111011010110111010011

       - Next Round Left 32 Bits:  00000010111010100000010011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110100111011010110111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010111010100000010011100011

       - Right 32 Bits:            01000110100111011010110111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       01000110100111011010110111010011
          - S-Box Result:     01110000001101100100011001100001   [per every group of 4-bits]
          - Split Into Two:   0111000000110110 [L] 0100011001100001 [R]
          - Swap Halves:      01000110011000010111000000110110
          - Bit Inversion:    10111001100111101000111111001001
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     01100111110111010100011110100011

          - FUNCTION OUTPUT:  01100111110111010100011110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010111010100000010011100011

       - FUNCTION OUTPUT:          01100111110111010100011110100011

       - Left XOR FUNCTION OUTPUT: 01100101001101110100001101000000

       - Next Round Left 32 Bits:  01000110100111011010110111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101001101110100001101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110010100110111010000110100000001000110100111011010110111010011

 > Decrypted Block:     0110010100110111010000110100000001000110100111011010110111010011


!!!CBC: Previous Ciphertext:                             1101000010000011100011010100010000001100001001100000101110011100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1011010110110100110011100000010001001010101110111010011001001111

 > Final Processed Block:                                1011010110110100110011100000010001001010101110111010011001001111



Ciphertext Block 8:                                      0111101110111010101000000101101010100101101100101101010100101011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011101110101010000001011010

       - Right 32 Bits:            10100101101100101101010100101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       10100101101100101101010100101011
          - S-Box Result:     01001001100011100110100111101000   [per every group of 4-bits]
          - Split Into Two:   0100100110001110 [L] 0110100111101000 [R]
          - Swap Halves:      01101001111010000100100110001110
          - Bit Inversion:    10010110000101111011011001110001
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     10110100111011111110010010100100

          - FUNCTION OUTPUT:  10110100111011111110010010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011101110101010000001011010

       - FUNCTION OUTPUT:          10110100111011111110010010100100

       - Left XOR FUNCTION OUTPUT: 11001111010101010100010011111110

       - Next Round Left 32 Bits:  10100101101100101101010100101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111010101010100010011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101101100101101010100101011

       - Right 32 Bits:            11001111010101010100010011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       11001111010101010100010011111110
          - S-Box Result:     01011011100110010111011110111100   [per every group of 4-bits]
          - Split Into Two:   0101101110011001 [L] 0111011110111100 [R]
          - Swap Halves:      01110111101111000101101110011001
          - Bit Inversion:    10001000010000111010010001100110
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     11100010100111011110011110101110

          - FUNCTION OUTPUT:  11100010100111011110011110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101101100101101010100101011

       - FUNCTION OUTPUT:          11100010100111011110011110101110

       - Left XOR FUNCTION OUTPUT: 01000111001011110011001010000101

       - Next Round Left 32 Bits:  11001111010101010100010011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111001011110011001010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111010101010100010011111110

       - Right 32 Bits:            01000111001011110011001010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       01000111001011110011001010000101
          - S-Box Result:     01111101111010110001111000101001   [per every group of 4-bits]
          - Split Into Two:   0111110111101011 [L] 0001111000101001 [R]
          - Swap Halves:      00011110001010010111110111101011
          - Bit Inversion:    11100001110101101000001000010100
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     01100010110010111100100000001010

          - FUNCTION OUTPUT:  01100010110010111100100000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111010101010100010011111110

       - FUNCTION OUTPUT:          01100010110010111100100000001010

       - Left XOR FUNCTION OUTPUT: 10101101100111101000110011110100

       - Next Round Left 32 Bits:  01000111001011110011001010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101100111101000110011110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111001011110011001010000101

       - Right 32 Bits:            10101101100111101000110011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       10101101100111101000110011110100
          - S-Box Result:     01000110001111000010010110110111   [per every group of 4-bits]
          - Split Into Two:   0100011000111100 [L] 0010010110110111 [R]
          - Swap Halves:      00100101101101110100011000111100
          - Bit Inversion:    11011010010010001011100111000011
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     10111001001101001110101101110111

          - FUNCTION OUTPUT:  10111001001101001110101101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111001011110011001010000101

       - FUNCTION OUTPUT:          10111001001101001110101101110111

       - Left XOR FUNCTION OUTPUT: 11111110000110111101100111110010

       - Next Round Left 32 Bits:  10101101100111101000110011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110000110111101100111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101100111101000110011110100

       - Right 32 Bits:            11111110000110111101100111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       11111110000110111101100111110010
          - S-Box Result:     10111100101010000110001110111110   [per every group of 4-bits]
          - Split Into Two:   1011110010101000 [L] 0110001110111110 [R]
          - Swap Halves:      01100011101111101011110010101000
          - Bit Inversion:    10011100010000010100001101010111
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     11001010110110011000000100101111

          - FUNCTION OUTPUT:  11001010110110011000000100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101100111101000110011110100

       - FUNCTION OUTPUT:          11001010110110011000000100101111

       - Left XOR FUNCTION OUTPUT: 01100111010001110000110111011011

       - Next Round Left 32 Bits:  11111110000110111101100111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111010001110000110111011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110000110111101100111110010

       - Right 32 Bits:            01100111010001110000110111011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       01100111010001110000110111011011
          - S-Box Result:     00001101011111011111011001101000   [per every group of 4-bits]
          - Split Into Two:   0000110101111101 [L] 1111011001101000 [R]
          - Swap Halves:      11110110011010000000110101111101
          - Bit Inversion:    00001001100101111111001010000010
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     00001000001011001011100010011101

          - FUNCTION OUTPUT:  00001000001011001011100010011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110000110111101100111110010

       - FUNCTION OUTPUT:          00001000001011001011100010011101

       - Left XOR FUNCTION OUTPUT: 11110110001101110110000101101111

       - Next Round Left 32 Bits:  01100111010001110000110111011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110001101110110000101101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111010001110000110111011011

       - Right 32 Bits:            11110110001101110110000101101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       11110110001101110110000101101111
          - S-Box Result:     10110000000111010000101000001011   [per every group of 4-bits]
          - Split Into Two:   1011000000011101 [L] 0000101000001011 [R]
          - Swap Halves:      00001010000010111011000000011101
          - Bit Inversion:    11110101111101000100111111100010
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     10011111110010100000100111011011

          - FUNCTION OUTPUT:  10011111110010100000100111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111010001110000110111011011

       - FUNCTION OUTPUT:          10011111110010100000100111011011

       - Left XOR FUNCTION OUTPUT: 11111000100011010000010000000000

       - Next Round Left 32 Bits:  11110110001101110110000101101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000100011010000010000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110001101110110000101101111

       - Right 32 Bits:            11111000100011010000010000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       11111000100011010000010000000000
          - S-Box Result:     10110010001001101111011111111111   [per every group of 4-bits]
          - Split Into Two:   1011001000100110 [L] 1111011111111111 [R]
          - Swap Halves:      11110111111111111011001000100110
          - Bit Inversion:    00001000000000000100110111011001
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     11011010101011011001110110100011

          - FUNCTION OUTPUT:  11011010101011011001110110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110001101110110000101101111

       - FUNCTION OUTPUT:          11011010101011011001110110100011

       - Left XOR FUNCTION OUTPUT: 00101100100110101111110011001100

       - Next Round Left 32 Bits:  11111000100011010000010000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100100110101111110011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000100011010000010000000000

       - Right 32 Bits:            00101100100110101111110011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       00101100100110101111110011001100
          - S-Box Result:     11100101001101001011010101010101   [per every group of 4-bits]
          - Split Into Two:   1110010100110100 [L] 1011010101010101 [R]
          - Swap Halves:      10110101010101011110010100110100
          - Bit Inversion:    01001010101010100001101011001011
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     10001001110100110100100011010000

          - FUNCTION OUTPUT:  10001001110100110100100011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000100011010000010000000000

       - FUNCTION OUTPUT:          10001001110100110100100011010000

       - Left XOR FUNCTION OUTPUT: 01110001010111100100110011010000

       - Next Round Left 32 Bits:  00101100100110101111110011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001010111100100110011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100100110101111110011001100

       - Right 32 Bits:            01110001010111100100110011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       01110001010111100100110011010000
          - S-Box Result:     11011010100111000111010101101111   [per every group of 4-bits]
          - Split Into Two:   1101101010011100 [L] 0111010101101111 [R]
          - Swap Halves:      01110101011011111101101010011100
          - Bit Inversion:    10001010100100000010010101100011
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     11010100100001111110101101001000

          - FUNCTION OUTPUT:  11010100100001111110101101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100100110101111110011001100

       - FUNCTION OUTPUT:          11010100100001111110101101001000

       - Left XOR FUNCTION OUTPUT: 11111000000111010001011110000100

       - Next Round Left 32 Bits:  01110001010111100100110011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000000111010001011110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001010111100100110011010000

       - Right 32 Bits:            11111000000111010001011110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       11111000000111010001011110000100
          - S-Box Result:     10110010101001101010110100100111   [per every group of 4-bits]
          - Split Into Two:   1011001010100110 [L] 1010110100100111 [R]
          - Swap Halves:      10101101001001111011001010100110
          - Bit Inversion:    01010010110110000100110101011001
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     10000110011000011000010101100011

          - FUNCTION OUTPUT:  10000110011000011000010101100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001010111100100110011010000

       - FUNCTION OUTPUT:          10000110011000011000010101100011

       - Left XOR FUNCTION OUTPUT: 11110111001111111100100110110011

       - Next Round Left 32 Bits:  11111000000111010001011110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111001111111100100110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000000111010001011110000100

       - Right 32 Bits:            11110111001111111100100110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       11110111001111111100100110110011
          - S-Box Result:     10111101000110110101001110000001   [per every group of 4-bits]
          - Split Into Two:   1011110100011011 [L] 0101001110000001 [R]
          - Swap Halves:      01010011100000011011110100011011
          - Bit Inversion:    10101100011111100100001011100100
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     01110100000001001101010010010111

          - FUNCTION OUTPUT:  01110100000001001101010010010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000000111010001011110000100

       - FUNCTION OUTPUT:          01110100000001001101010010010111

       - Left XOR FUNCTION OUTPUT: 10001100000110011100001100010011

       - Next Round Left 32 Bits:  11110111001111111100100110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100000110011100001100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111001111111100100110110011

       - Right 32 Bits:            10001100000110011100001100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       10001100000110011100001100010011
          - S-Box Result:     00100101101000110101000110100001   [per every group of 4-bits]
          - Split Into Two:   0010010110100011 [L] 0101000110100001 [R]
          - Swap Halves:      01010001101000010010010110100011
          - Bit Inversion:    10101110010111101101101001011100
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     11110000010100010011111000010111

          - FUNCTION OUTPUT:  11110000010100010011111000010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111001111111100100110110011

       - FUNCTION OUTPUT:          11110000010100010011111000010111

       - Left XOR FUNCTION OUTPUT: 00000111011011101111011110100100

       - Next Round Left 32 Bits:  10001100000110011100001100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111011011101111011110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100000110011100001100010011

       - Right 32 Bits:            00000111011011101111011110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       00000111011011101111011110100100
          - S-Box Result:     11111101000011001011110101000111   [per every group of 4-bits]
          - Split Into Two:   1111110100001100 [L] 1011110101000111 [R]
          - Swap Halves:      10111101010001111111110100001100
          - Bit Inversion:    01000010101110000000001011110011
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     11011110110100010101111011101000

          - FUNCTION OUTPUT:  11011110110100010101111011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100000110011100001100010011

       - FUNCTION OUTPUT:          11011110110100010101111011101000

       - Left XOR FUNCTION OUTPUT: 01010010110010001001110111111011

       - Next Round Left 32 Bits:  00000111011011101111011110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010110010001001110111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111011011101111011110100100

       - Right 32 Bits:            01010010110010001001110111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       01010010110010001001110111111011
          - S-Box Result:     10011110010100100011011010111000   [per every group of 4-bits]
          - Split Into Two:   1001111001010010 [L] 0011011010111000 [R]
          - Swap Halves:      00110110101110001001111001010010
          - Bit Inversion:    11001001010001110110000110101101
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     00110001000101011011010010001111

          - FUNCTION OUTPUT:  00110001000101011011010010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111011011101111011110100100

       - FUNCTION OUTPUT:          00110001000101011011010010001111

       - Left XOR FUNCTION OUTPUT: 00110110011110110100001100101011

       - Next Round Left 32 Bits:  01010010110010001001110111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110011110110100001100101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010110010001001110111111011

       - Right 32 Bits:            00110110011110110100001100101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       00110110011110110100001100101011
          - S-Box Result:     00010000110110000111000111101000   [per every group of 4-bits]
          - Split Into Two:   0001000011011000 [L] 0111000111101000 [R]
          - Swap Halves:      01110001111010000001000011011000
          - Bit Inversion:    10001110000101111110111100100111
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     01010000010101000010011101001101

          - FUNCTION OUTPUT:  01010000010101000010011101001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010110010001001110111111011

       - FUNCTION OUTPUT:          01010000010101000010011101001101

       - Left XOR FUNCTION OUTPUT: 00000010100111001011101010110110

       - Next Round Left 32 Bits:  00110110011110110100001100101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010100111001011101010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000001010011100101110101011011000110110011110110100001100101011

 > Decrypted Block:     0000001010011100101110101011011000110110011110110100001100101011


!!!CBC: Previous Ciphertext:                             0110110010011001111101101001000001110111111101111100110010110010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110111000000101010011000010011001000001100011001000111110011001

 > Final Processed Block:                                0110111000000101010011000010011001000001100011001000111110011001



Ciphertext Block 9:                                      1010011110111001011011000100001101101111101111100010011101000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111101110010110110001000011

       - Right 32 Bits:            01101111101111100010011101000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011010001000111100101000111010110000100111101011010   [Subkey: 16]
          - Input Half:       01101111101111100010011101000111
          - S-Box Result:     00001011100011001110110101111101   [per every group of 4-bits]
          - Split Into Two:   0000101110001100 [L] 1110110101111101 [R]
          - Swap Halves:      11101101011111010000101110001100
          - Bit Inversion:    00010010100000101111010001110011
          - Compressed Key:   00100010111110000101001011010101   [done by compression P-Box]
          - XOR with Key:     00110000011110101010011010100110

          - FUNCTION OUTPUT:  00110000011110101010011010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111101110010110110001000011

       - FUNCTION OUTPUT:          00110000011110101010011010100110

       - Left XOR FUNCTION OUTPUT: 10010111110000111100101011100101

       - Next Round Left 32 Bits:  01101111101111100010011101000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111110000111100101011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111101111100010011101000111

       - Right 32 Bits:            10010111110000111100101011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110011100101110111000011010111000101001111011000010100   [Subkey: 15]
          - Input Half:       10010111110000111100101011100101
          - S-Box Result:     00111101010100010101010011001001   [per every group of 4-bits]
          - Split Into Two:   0011110101010001 [L] 0101010011001001 [R]
          - Swap Halves:      01010100110010010011110101010001
          - Bit Inversion:    10101011001101101100001010101110
          - Compressed Key:   01101010110111100100001111001000   [done by compression P-Box]
          - XOR with Key:     11000001111010001000000101100110

          - FUNCTION OUTPUT:  11000001111010001000000101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111101111100010011101000111

       - FUNCTION OUTPUT:          11000001111010001000000101100110

       - Left XOR FUNCTION OUTPUT: 10101110010101101010011000100001

       - Next Round Left 32 Bits:  10010111110000111100101011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110010101101010011000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111110000111100101011100101

       - Right 32 Bits:            10101110010101101010011000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100011010001000111100101000111010110000100111101   [Subkey: 14]
          - Input Half:       10101110010101101010011000100001
          - S-Box Result:     01001100100100000100000011101010   [per every group of 4-bits]
          - Split Into Two:   0100110010010000 [L] 0100000011101010 [R]
          - Swap Halves:      01000000111010100100110010010000
          - Bit Inversion:    10111111000101011011001101101111
          - Compressed Key:   10000011000111010100101000011110   [done by compression P-Box]
          - XOR with Key:     00111100000010001111100101110001

          - FUNCTION OUTPUT:  00111100000010001111100101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111110000111100101011100101

       - FUNCTION OUTPUT:          00111100000010001111100101110001

       - Left XOR FUNCTION OUTPUT: 10101011110010110011001110010100

       - Next Round Left 32 Bits:  10101110010101101010011000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011110010110011001110010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110010101101010011000100001

       - Right 32 Bits:            10101011110010110011001110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010110011100101110111000011010111000101001111011000   [Subkey: 13]
          - Input Half:       10101011110010110011001110010100
          - S-Box Result:     01001000010110000001000100110111   [per every group of 4-bits]
          - Split Into Two:   0100100001011000 [L] 0001000100110111 [R]
          - Swap Halves:      00010001001101110100100001011000
          - Bit Inversion:    11101110110010001011011110100111
          - Compressed Key:   01100011011111000101001010110100   [done by compression P-Box]
          - XOR with Key:     10001101101101001110010100010011

          - FUNCTION OUTPUT:  10001101101101001110010100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110010101101010011000100001

       - FUNCTION OUTPUT:          10001101101101001110010100010011

       - Left XOR FUNCTION OUTPUT: 00100011111000100100001100110010

       - Next Round Left 32 Bits:  10101011110010110011001110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011111000100100001100110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011110010110011001110010100

       - Right 32 Bits:            00100011111000100100001100110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110101101001100011010001000111100101000111010110000100   [Subkey: 12]
          - Input Half:       00100011111000100100001100110010
          - S-Box Result:     11100001110011100111000100011110   [per every group of 4-bits]
          - Split Into Two:   1110000111001110 [L] 0111000100011110 [R]
          - Swap Halves:      01110001000111101110000111001110
          - Bit Inversion:    10001110111000010001111000110001
          - Compressed Key:   01010110100110001100001001111000   [done by compression P-Box]
          - XOR with Key:     11011000011110011101110001001001

          - FUNCTION OUTPUT:  11011000011110011101110001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011110010110011001110010100

       - FUNCTION OUTPUT:          11011000011110011101110001001001

       - Left XOR FUNCTION OUTPUT: 01110011101100101110111111011101

       - Next Round Left 32 Bits:  00100011111000100100001100110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011101100101110111111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011111000100100001100110010

       - Right 32 Bits:            01110011101100101110111111011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100001010010110011100101110111000011010111000101001111   [Subkey: 11]
          - Input Half:       01110011101100101110111111011101
          - S-Box Result:     11010001100011101100101101100110   [per every group of 4-bits]
          - Split Into Two:   1101000110001110 [L] 1100101101100110 [R]
          - Swap Halves:      11001011011001101101000110001110
          - Bit Inversion:    00110100100110010010111001110001
          - Compressed Key:   00000001101110110100101000011111   [done by compression P-Box]
          - XOR with Key:     00110101001000100110010001101110

          - FUNCTION OUTPUT:  00110101001000100110010001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011111000100100001100110010

       - FUNCTION OUTPUT:          00110101001000100110010001101110

       - Left XOR FUNCTION OUTPUT: 00010110110000000010011101011100

       - Next Round Left 32 Bits:  01110011101100101110111111011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110110000000010011101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011101100101110111111011101

       - Right 32 Bits:            00010110110000000010011101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011110101101001100011010001000111100101000111010110   [Subkey: 10]
          - Input Half:       00010110110000000010011101011100
          - S-Box Result:     10100000010111111110110110010101   [per every group of 4-bits]
          - Split Into Two:   1010000001011111 [L] 1110110110010101 [R]
          - Swap Halves:      11101101100101011010000001011111
          - Bit Inversion:    00010010011010100101111110100000
          - Compressed Key:   01101010001111100100011000111001   [done by compression P-Box]
          - XOR with Key:     01111000010101000001100110011001

          - FUNCTION OUTPUT:  01111000010101000001100110011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011101100101110111111011101

       - FUNCTION OUTPUT:          01111000010101000001100110011001

       - Left XOR FUNCTION OUTPUT: 00001011111001101111011001000100

       - Next Round Left 32 Bits:  00010110110000000010011101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011111001101111011001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110110000000010011101011100

       - Right 32 Bits:            00001011111001101111011001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101100001010010110011100101110111000011010111000101   [Subkey: 9]
          - Input Half:       00001011111001101111011001000100
          - S-Box Result:     11111000110000001011000001110111   [per every group of 4-bits]
          - Split Into Two:   1111100011000000 [L] 1011000001110111 [R]
          - Swap Halves:      10110000011101111111100011000000
          - Bit Inversion:    01001111100010000000011100111111
          - Compressed Key:   11010010101011011101000001111010   [done by compression P-Box]
          - XOR with Key:     10011101001001011101011101000101

          - FUNCTION OUTPUT:  10011101001001011101011101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110110000000010011101011100

       - FUNCTION OUTPUT:          10011101001001011101011101000101

       - Left XOR FUNCTION OUTPUT: 10001011111001011111000000011001

       - Next Round Left 32 Bits:  00001011111001101111011001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011111001011111000000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011111001101111011001000100

       - Right 32 Bits:            10001011111001011111000000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010011110101101001100011010001000111100101000111   [Subkey: 8]
          - Input Half:       10001011111001011111000000011001
          - S-Box Result:     00101000110010011011111110100011   [per every group of 4-bits]
          - Split Into Two:   0010100011001001 [L] 1011111110100011 [R]
          - Swap Halves:      10111111101000110010100011001001
          - Bit Inversion:    01000000010111001101011100110110
          - Compressed Key:   11000011011110010101001000011011   [done by compression P-Box]
          - XOR with Key:     10000011001001011000010100101101

          - FUNCTION OUTPUT:  10000011001001011000010100101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011111001101111011001000100

       - FUNCTION OUTPUT:          10000011001001011000010100101101

       - Left XOR FUNCTION OUTPUT: 10001000110000110111001101101001

       - Next Round Left 32 Bits:  10001011111001011111000000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000110000110111001101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011111001011111000000011001

       - Right 32 Bits:            10001000110000110111001101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100111101100001010010110011100101110111000011010111   [Subkey: 7]
          - Input Half:       10001000110000110111001101101001
          - S-Box Result:     00100010010100011101000100000011   [per every group of 4-bits]
          - Split Into Two:   0010001001010001 [L] 1101000100000011 [R]
          - Swap Halves:      11010001000000110010001001010001
          - Bit Inversion:    00101110111111001101110110101110
          - Compressed Key:   01011110000101111100111000101011   [done by compression P-Box]
          - XOR with Key:     01110000111010110001001110000101

          - FUNCTION OUTPUT:  01110000111010110001001110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011111001011111000000011001

       - FUNCTION OUTPUT:          01110000111010110001001110000101

       - Left XOR FUNCTION OUTPUT: 11111011000011101110001110011100

       - Next Round Left 32 Bits:  10001000110000110111001101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011000011101110001110011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000110000110111001101101001

       - Right 32 Bits:            11111011000011101110001110011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101011000010011110101101001100011010001000111100101   [Subkey: 6]
          - Input Half:       11111011000011101110001110011100
          - S-Box Result:     10111000111111001100000100110101   [per every group of 4-bits]
          - Split Into Two:   1011100011111100 [L] 1100000100110101 [R]
          - Swap Halves:      11000001001101011011100011111100
          - Bit Inversion:    00111110110010100100011100000011
          - Compressed Key:   11010100101110011100100000111010   [done by compression P-Box]
          - XOR with Key:     11101010011100111000111100111001

          - FUNCTION OUTPUT:  11101010011100111000111100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000110000110111001101101001

       - FUNCTION OUTPUT:          11101010011100111000111100111001

       - Left XOR FUNCTION OUTPUT: 01100010101100001111110001010000

       - Next Round Left 32 Bits:  11111011000011101110001110011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010101100001111110001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011000011101110001110011100

       - Right 32 Bits:            01100010101100001111110001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010100111101100001010010110011100101110111000011   [Subkey: 5]
          - Input Half:       01100010101100001111110001010000
          - S-Box Result:     00001110100011111011010110011111   [per every group of 4-bits]
          - Split Into Two:   0000111010001111 [L] 1011010110011111 [R]
          - Swap Halves:      10110101100111110000111010001111
          - Bit Inversion:    01001010011000001111000101110000
          - Compressed Key:   11011000011110101001011001110011   [done by compression P-Box]
          - XOR with Key:     10010010000110100110011100000011

          - FUNCTION OUTPUT:  10010010000110100110011100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011000011101110001110011100

       - FUNCTION OUTPUT:          10010010000110100110011100000011

       - Left XOR FUNCTION OUTPUT: 01101001000101001000010010011111

       - Next Round Left 32 Bits:  01100010101100001111110001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001000101001000010010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010101100001111110001010000

       - Right 32 Bits:            01101001000101001000010010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100011101011000010011110101101001100011010001000111   [Subkey: 4]
          - Input Half:       01101001000101001000010010011111
          - S-Box Result:     00000011101001110010011100111011   [per every group of 4-bits]
          - Split Into Two:   0000001110100111 [L] 0010011100111011 [R]
          - Swap Halves:      00100111001110110000001110100111
          - Bit Inversion:    11011000110001001111110001011000
          - Compressed Key:   01011110000011111110010001001011   [done by compression P-Box]
          - XOR with Key:     10000110110010110001100000010011

          - FUNCTION OUTPUT:  10000110110010110001100000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010101100001111110001010000

       - FUNCTION OUTPUT:          10000110110010110001100000010011

       - Left XOR FUNCTION OUTPUT: 11100100011110111110010001000011

       - Next Round Left 32 Bits:  01101001000101001000010010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100011110111110010001000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001000101001000010010011111

       - Right 32 Bits:            11100100011110111110010001000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011100010100111101100001010010110011100101110111   [Subkey: 3]
          - Input Half:       11100100011110111110010001000011
          - S-Box Result:     11000111110110001100011101110001   [per every group of 4-bits]
          - Split Into Two:   1100011111011000 [L] 1100011101110001 [R]
          - Swap Halves:      11000111011100011100011111011000
          - Bit Inversion:    00111000100011100011100000100111
          - Compressed Key:   10011100011010010101110000011011   [done by compression P-Box]
          - XOR with Key:     10100100111001110110010000111100

          - FUNCTION OUTPUT:  10100100111001110110010000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001000101001000010010011111

       - FUNCTION OUTPUT:          10100100111001110110010000111100

       - Left XOR FUNCTION OUTPUT: 11001101111100111110000010100011

       - Next Round Left 32 Bits:  11100100011110111110010001000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101111100111110000010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100011110111110010001000011

       - Right 32 Bits:            11001101111100111110000010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011110010100011101011000010011110101101001100011010001   [Subkey: 2]
          - Input Half:       11001101111100111110000010100011
          - S-Box Result:     01010110101100011100111101000001   [per every group of 4-bits]
          - Split Into Two:   0101011010110001 [L] 1100111101000001 [R]
          - Swap Halves:      11001111010000010101011010110001
          - Bit Inversion:    00110000101111101010100101001110
          - Compressed Key:   11111000010100101101010100100010   [done by compression P-Box]
          - XOR with Key:     11001000111011000111110001101100

          - FUNCTION OUTPUT:  11001000111011000111110001101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100011110111110010001000011

       - FUNCTION OUTPUT:          11001000111011000111110001101100

       - Left XOR FUNCTION OUTPUT: 00101100100101111001100000101111

       - Next Round Left 32 Bits:  11001101111100111110000010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100100101111001100000101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101111100111110000010100011

       - Right 32 Bits:            00101100100101111001100000101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100001101011100010100111101100001010010110011100101   [Subkey: 1]
          - Input Half:       00101100100101111001100000101111
          - S-Box Result:     11100101001111010011001011101011   [per every group of 4-bits]
          - Split Into Two:   1110010100111101 [L] 0011001011101011 [R]
          - Swap Halves:      00110010111010111110010100111101
          - Bit Inversion:    11001101000101000001101011000010
          - Compressed Key:   11011110010000111100100001101010   [done by compression P-Box]
          - XOR with Key:     00010011010101111101001010101000

          - FUNCTION OUTPUT:  00010011010101111101001010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101111100111110000010100011

       - FUNCTION OUTPUT:          00010011010101111101001010101000

       - Left XOR FUNCTION OUTPUT: 11011110101001000011001000001011

       - Next Round Left 32 Bits:  00101100100101111001100000101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110101001000011001000001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101111010100100001100100000101100101100100101111001100000101111

 > Decrypted Block:     1101111010100100001100100000101100101100100101111001100000101111


!!!CBC: Previous Ciphertext:                             0111101110111010101000000101101010100101101100101101010100101011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1010010100011110100100100101000110001001001001010100110100000100

 > Final Processed Block:                                1010010100011110100100100101000110001001001001010100110100000100


FINAL PROCESSED DATA BLOCKS: 0100001111110001100100000100011011011000010110101010110010110111,0011011101111101011010011100001101111000010000001101001111111010,0001001001111111001010001100010100000010001001110011100011010110,1110100101111100111011010110111110011011101000111100001000000101,1111000010100011100010011100101001010000101010101111001000100100,0101000101110100001110010010100010100101000010111010101000001001,1011010110110100110011100000010001001010101110111010011001001111,0110111000000101010011000010011001000001100011001000111110011001,1010010100011110100100100101000110001001001001010100110100000100,

BLOCKS IN ASCII:             Cñ?FØZ¬·7}iÃx@Óú(Å'8Öé|ío?£Âð£?ÊPªò$Qt9(¥ª	µ´ÎJ»¦OnL&A???¥?Q?%M

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: eniLUdz
In Binary:  01100101011011100110100101001100010101010110010001111010

Subkeys:    Key i = Key (i - 1) [Shifted left by 3 and then inverted]

Subkey 1  : 11010100100011001011010110011101010101001101110000101100
Subkey 2  : 01011011100110100101001100010101010110010001111010011001
Subkey 3  : 00100011001011010110011101010101001101110000101100110101
Subkey 4  : 11100110100101001100010101010110010001111010011001010110
Subkey 5  : 11001011010110011101010101001101110000101100110101001000
Subkey 6  : 10100101001100010101010110010001111010011001010110111001
Subkey 7  : 11010110011101010101001101110000101100110101001000110010
Subkey 8  : 01001100010101010110010001111010011001010110111001101001
Subkey 9  : 10011101010101001101110000101100110101001000110010110101
Subkey 10 : 00010101010110010001111010011001010110111001101001010011
Subkey 11 : 01010101001101110000101100110101001000110010110101100111
Subkey 12 : 01010110010001111010011001010110111001101001010011000101
Subkey 13 : 01001101110000101100110101001000110010110101100111010101
Subkey 14 : 10010001111010011001010110111001101001010011000101010101
Subkey 15 : 01110000101100110101001000110010110101100111010101010011
Subkey 16 : 01111010011001010110111001101001010011000101010101100100

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : Cñ?FØZ¬·7}iÃx@Óú(Å'8Öé|ío?£Âð£?ÊPªò$Qt9(¥ª	µ´ÎJ»¦OnL&A???¥?Q?%M

Data padded with spaces : Cñ?FØZ¬·7}iÃx@Óú(Å'8Öé|ío?£Âð£?ÊPªò$Qt9(¥ª	µ´ÎJ»¦OnL&A???¥?Q?%M[Padded with '0' spaces]

Data in ASCII           : 67,241,144,70,216,90,172,183,55,125,105,195,120,64,211,250,18,127,40,197,2,39,56,214,233,124,237,111,155,163,194,5,240,163,137,202,80,170,242,36,81,116,57,40,165,11,170,9,181,180,206,4,74,187,166,79,110,5,76,38,65,140,143,153,165,30,146,81,137,37,77,4,

Data in Binary          : 01000011,11110001,10010000,01000110,11011000,01011010,10101100,10110111,00110111,01111101,01101001,11000011,01111000,01000000,11010011,11111010,00010010,01111111,00101000,11000101,00000010,00100111,00111000,11010110,11101001,01111100,11101101,01101111,10011011,10100011,11000010,00000101,11110000,10100011,10001001,11001010,01010000,10101010,11110010,00100100,01010001,01110100,00111001,00101000,10100101,00001011,10101010,00001001,10110101,10110100,11001110,00000100,01001010,10111011,10100110,01001111,01101110,00000101,01001100,00100110,01000001,10001100,10001111,10011001,10100101,00011110,10010010,01010001,10001001,00100101,01001101,00000100,

Data in 64-bit Blocks



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101010001110100011001010100100001001010011001010101010001001001)

Plaintext Block: 1:                                      0100001111110001100100000100011011011000010110101010110010110111

!!!CBC: Previous Ciphertext:                             0101010001110100011001010100100001001010011001010101010001001001

!!!CBC: Current Block XOR with Previous Ciphertext:      0001011110000101111101010000111010010010001111111111100011111110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111100001011111010100001110

       - Right 32 Bits:            10010010001111111111100011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       10010010001111111111100011111110
          - S-Box Result:     00111110000110111011001010111100   [per every group of 4-bits]
          - Split Into Two:   0011111000011011 [L] 1011001010111100 [R]
          - Swap Halves:      10110010101111000011111000011011
          - Bit Inversion:    01001101010000111100000111100100
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     00011110110101011001001010101000

          - FUNCTION OUTPUT:  00011110110101011001001010101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111100001011111010100001110

       - FUNCTION OUTPUT:          00011110110101011001001010101000

       - Left XOR FUNCTION OUTPUT: 00001001010100000110011110100110

       - Next Round Left 32 Bits:  10010010001111111111100011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001010100000110011110100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010001111111111100011111110

       - Right 32 Bits:            00001001010100000110011110100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00001001010100000110011110100110
          - S-Box Result:     11110011100111110000110101000000   [per every group of 4-bits]
          - Split Into Two:   1111001110011111 [L] 0000110101000000 [R]
          - Swap Halves:      00001101010000001111001110011111
          - Bit Inversion:    11110010101111110000110001100000
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     00011011111011010101010010000110

          - FUNCTION OUTPUT:  00011011111011010101010010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010001111111111100011111110

       - FUNCTION OUTPUT:          00011011111011010101010010000110

       - Left XOR FUNCTION OUTPUT: 10001001110100101010110001111000

       - Next Round Left 32 Bits:  00001001010100000110011110100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001110100101010110001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001010100000110011110100110

       - Right 32 Bits:            10001001110100101010110001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       10001001110100101010110001111000
          - S-Box Result:     00100011011011100100010111010010   [per every group of 4-bits]
          - Split Into Two:   0010001101101110 [L] 0100010111010010 [R]
          - Swap Halves:      01000101110100100010001101101110
          - Bit Inversion:    10111010001011011101110010010001
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     10011101111001111011000000001011

          - FUNCTION OUTPUT:  10011101111001111011000000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001010100000110011110100110

       - FUNCTION OUTPUT:          10011101111001111011000000001011

       - Left XOR FUNCTION OUTPUT: 10010100101101111101011110101101

       - Next Round Left 32 Bits:  10001001110100101010110001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100101101111101011110101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001110100101010110001111000

       - Right 32 Bits:            10010100101101111101011110101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       10010100101101111101011110101101
          - S-Box Result:     00110111100011010110110101000110   [per every group of 4-bits]
          - Split Into Two:   0011011110001101 [L] 0110110101000110 [R]
          - Swap Halves:      01101101010001100011011110001101
          - Bit Inversion:    10010010101110011100100001110010
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     10101000111100111101010110111011

          - FUNCTION OUTPUT:  10101000111100111101010110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001110100101010110001111000

       - FUNCTION OUTPUT:          10101000111100111101010110111011

       - Left XOR FUNCTION OUTPUT: 00100001001000010111100111000011

       - Next Round Left 32 Bits:  10010100101101111101011110101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001001000010111100111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100101101111101011110101101

       - Right 32 Bits:            00100001001000010111100111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       00100001001000010111100111000011
          - S-Box Result:     11101010111010101101001101010001   [per every group of 4-bits]
          - Split Into Two:   1110101011101010 [L] 1101001101010001 [R]
          - Swap Halves:      11010011010100011110101011101010
          - Bit Inversion:    00101100101011100001010100010101
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     10000101111101101100001001000001

          - FUNCTION OUTPUT:  10000101111101101100001001000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100101101111101011110101101

       - FUNCTION OUTPUT:          10000101111101101100001001000001

       - Left XOR FUNCTION OUTPUT: 00010001010000010001010111101100

       - Next Round Left 32 Bits:  00100001001000010111100111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001010000010001010111101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001001000010111100111000011

       - Right 32 Bits:            00010001010000010001010111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       00010001010000010001010111101100
          - S-Box Result:     10101010011110101010100111000101   [per every group of 4-bits]
          - Split Into Two:   1010101001111010 [L] 1010100111000101 [R]
          - Swap Halves:      10101001110001011010101001111010
          - Bit Inversion:    01010110001110100101010110000101
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     01001010011011001010110011110011

          - FUNCTION OUTPUT:  01001010011011001010110011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001001000010111100111000011

       - FUNCTION OUTPUT:          01001010011011001010110011110011

       - Left XOR FUNCTION OUTPUT: 01101011010011011101010100110000

       - Next Round Left 32 Bits:  00010001010000010001010111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011010011011101010100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001010000010001010111101100

       - Right 32 Bits:            01101011010011011101010100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       01101011010011011101010100110000
          - S-Box Result:     00001000011101100110100100011111   [per every group of 4-bits]
          - Split Into Two:   0000100001110110 [L] 0110100100011111 [R]
          - Swap Halves:      01101001000111110000100001110110
          - Bit Inversion:    10010110111000001111011110001001
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     11101000101110110101100100001000

          - FUNCTION OUTPUT:  11101000101110110101100100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001010000010001010111101100

       - FUNCTION OUTPUT:          11101000101110110101100100001000

       - Left XOR FUNCTION OUTPUT: 11111001111110100100110011100100

       - Next Round Left 32 Bits:  01101011010011011101010100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001111110100100110011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011010011011101010100110000

       - Right 32 Bits:            11111001111110100100110011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       11111001111110100100110011100100
          - S-Box Result:     10110011101101000111010111000111   [per every group of 4-bits]
          - Split Into Two:   1011001110110100 [L] 0111010111000111 [R]
          - Swap Halves:      01110101110001111011001110110100
          - Bit Inversion:    10001010001110000100110001001011
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     00010000111100110111011010001101

          - FUNCTION OUTPUT:  00010000111100110111011010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011010011011101010100110000

       - FUNCTION OUTPUT:          00010000111100110111011010001101

       - Left XOR FUNCTION OUTPUT: 01111011101111101010001110111101

       - Next Round Left 32 Bits:  11111001111110100100110011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011101111101010001110111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001111110100100110011100100

       - Right 32 Bits:            01111011101111101010001110111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       01111011101111101010001110111101
          - S-Box Result:     11011000100011000100000110000110   [per every group of 4-bits]
          - Split Into Two:   1101100010001100 [L] 0100000110000110 [R]
          - Swap Halves:      01000001100001101101100010001100
          - Bit Inversion:    10111110011110010010011101110011
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     01100100000010001011011000011001

          - FUNCTION OUTPUT:  01100100000010001011011000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001111110100100110011100100

       - FUNCTION OUTPUT:          01100100000010001011011000011001

       - Left XOR FUNCTION OUTPUT: 10011101111100101111101011111101

       - Next Round Left 32 Bits:  01111011101111101010001110111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101111100101111101011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011101111101010001110111101

       - Right 32 Bits:            10011101111100101111101011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       10011101111100101111101011111101
          - S-Box Result:     00110110101111101011010010110110   [per every group of 4-bits]
          - Split Into Two:   0011011010111110 [L] 1011010010110110 [R]
          - Swap Halves:      10110100101101100011011010111110
          - Bit Inversion:    01001011010010011100100101000001
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     00010010011111111001010011000010

          - FUNCTION OUTPUT:  00010010011111111001010011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011101111101010001110111101

       - FUNCTION OUTPUT:          00010010011111111001010011000010

       - Left XOR FUNCTION OUTPUT: 01101001110000010011011101111111

       - Next Round Left 32 Bits:  10011101111100101111101011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001110000010011011101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101111100101111101011111101

       - Right 32 Bits:            01101001110000010011011101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       01101001110000010011011101111111
          - S-Box Result:     00000011010110100001110111011011   [per every group of 4-bits]
          - Split Into Two:   0000001101011010 [L] 0001110111011011 [R]
          - Swap Halves:      00011101110110110000001101011010
          - Bit Inversion:    11100010001001001111110010100101
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     10111100000001111001000011111110

          - FUNCTION OUTPUT:  10111100000001111001000011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101111100101111101011111101

       - FUNCTION OUTPUT:          10111100000001111001000011111110

       - Left XOR FUNCTION OUTPUT: 00100001111101010110101000000011

       - Next Round Left 32 Bits:  01101001110000010011011101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001111101010110101000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001110000010011011101111111

       - Right 32 Bits:            00100001111101010110101000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       00100001111101010110101000000011
          - S-Box Result:     11101010101110010000010011110001   [per every group of 4-bits]
          - Split Into Two:   1110101010111001 [L] 0000010011110001 [R]
          - Swap Halves:      00000100111100011110101010111001
          - Bit Inversion:    11111011000011100001010101000110
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     10001001100001001010000000101100

          - FUNCTION OUTPUT:  10001001100001001010000000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001110000010011011101111111

       - FUNCTION OUTPUT:          10001001100001001010000000101100

       - Left XOR FUNCTION OUTPUT: 11100000010001011001011101010011

       - Next Round Left 32 Bits:  00100001111101010110101000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000010001011001011101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001111101010110101000000011

       - Right 32 Bits:            11100000010001011001011101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       11100000010001011001011101010011
          - S-Box Result:     11001111011110010011110110010001   [per every group of 4-bits]
          - Split Into Two:   1100111101111001 [L] 0011110110010001 [R]
          - Swap Halves:      00111101100100011100111101111001
          - Bit Inversion:    11000010011011100011000010000110
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     01010010000001101010111010111100

          - FUNCTION OUTPUT:  01010010000001101010111010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001111101010110101000000011

       - FUNCTION OUTPUT:          01010010000001101010111010111100

       - Left XOR FUNCTION OUTPUT: 01110011111100111100010010111111

       - Next Round Left 32 Bits:  11100000010001011001011101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011111100111100010010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000010001011001011101010011

       - Right 32 Bits:            01110011111100111100010010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       01110011111100111100010010111111
          - S-Box Result:     11010001101100010101011110001011   [per every group of 4-bits]
          - Split Into Two:   1101000110110001 [L] 0101011110001011 [R]
          - Swap Halves:      01010111100010111101000110110001
          - Bit Inversion:    10101000011101000010111001001110
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     11101101011000111100011001010100

          - FUNCTION OUTPUT:  11101101011000111100011001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000010001011001011101010011

       - FUNCTION OUTPUT:          11101101011000111100011001010100

       - Left XOR FUNCTION OUTPUT: 00001101001001100101000100000111

       - Next Round Left 32 Bits:  01110011111100111100010010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101001001100101000100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011111100111100010010111111

       - Right 32 Bits:            00001101001001100101000100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       00001101001001100101000100000111
          - S-Box Result:     11110110111000001001101011111101   [per every group of 4-bits]
          - Split Into Two:   1111011011100000 [L] 1001101011111101 [R]
          - Swap Halves:      10011010111111011111011011100000
          - Bit Inversion:    01100101000000100000100100011111
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     00101001010100011001111101001100

          - FUNCTION OUTPUT:  00101001010100011001111101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011111100111100010010111111

       - FUNCTION OUTPUT:          00101001010100011001111101001100

       - Left XOR FUNCTION OUTPUT: 01011010101000100101101111110011

       - Next Round Left 32 Bits:  00001101001001100101000100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010101000100101101111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101001001100101000100000111

       - Right 32 Bits:            01011010101000100101101111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       01011010101000100101101111110011
          - S-Box Result:     10010100010011101001100010110001   [per every group of 4-bits]
          - Split Into Two:   1001010001001110 [L] 1001100010110001 [R]
          - Swap Halves:      10011000101100011001010001001110
          - Bit Inversion:    01100111010011100110101110110001
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     10000001101001110011100111101001

          - FUNCTION OUTPUT:  10000001101001110011100111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101001001100101000100000111

       - FUNCTION OUTPUT:          10000001101001110011100111101001

       - Left XOR FUNCTION OUTPUT: 10001100100000010110100011101110

       - Next Round Left 32 Bits:  01011010101000100101101111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100100000010110100011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000110010000001011010001110111001011010101000100101101111110011

 > Processed Block:     1000110010000001011010001110111001011010101000100101101111110011



Plaintext Block: 2:                                      0011011101111101011010011100001101111000010000001101001111111010

!!!CBC: Previous Ciphertext:                             1000110010000001011010001110111001011010101000100101101111110011

!!!CBC: Current Block XOR with Previous Ciphertext:      1011101111111100000000010010110100100010111000101000100000001001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011111111000000000100101101

       - Right 32 Bits:            00100010111000101000100000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       00100010111000101000100000001001
          - S-Box Result:     11101110110011100010001011110011   [per every group of 4-bits]
          - Split Into Two:   1110111011001110 [L] 0010001011110011 [R]
          - Swap Halves:      00100010111100111110111011001110
          - Bit Inversion:    11011101000011000001000100110001
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     10001110100110100100001001111101

          - FUNCTION OUTPUT:  10001110100110100100001001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011111111000000000100101101

       - FUNCTION OUTPUT:          10001110100110100100001001111101

       - Left XOR FUNCTION OUTPUT: 00110101011001100100001101010000

       - Next Round Left 32 Bits:  00100010111000101000100000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101011001100100001101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010111000101000100000001001

       - Right 32 Bits:            00110101011001100100001101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00110101011001100100001101010000
          - S-Box Result:     00011001000000000111000110011111   [per every group of 4-bits]
          - Split Into Two:   0001100100000000 [L] 0111000110011111 [R]
          - Swap Halves:      01110001100111110001100100000000
          - Bit Inversion:    10001110011000001110011011111111
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     01100111001100101011111000011001

          - FUNCTION OUTPUT:  01100111001100101011111000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010111000101000100000001001

       - FUNCTION OUTPUT:          01100111001100101011111000011001

       - Left XOR FUNCTION OUTPUT: 01000101110100000011011000010000

       - Next Round Left 32 Bits:  00110101011001100100001101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101110100000011011000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101011001100100001101010000

       - Right 32 Bits:            01000101110100000011011000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       01000101110100000011011000010000
          - S-Box Result:     01111001011011110001000010101111   [per every group of 4-bits]
          - Split Into Two:   0111100101101111 [L] 0001000010101111 [R]
          - Swap Halves:      00010000101011110111100101101111
          - Bit Inversion:    11101111010100001000011010010000
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     11001000100110101110101000001010

          - FUNCTION OUTPUT:  11001000100110101110101000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101011001100100001101010000

       - FUNCTION OUTPUT:          11001000100110101110101000001010

       - Left XOR FUNCTION OUTPUT: 11111101111111001010100101011010

       - Next Round Left 32 Bits:  01000101110100000011011000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101111111001010100101011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101110100000011011000010000

       - Right 32 Bits:            11111101111111001010100101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       11111101111111001010100101011010
          - S-Box Result:     10110110101101010100001110010100   [per every group of 4-bits]
          - Split Into Two:   1011011010110101 [L] 0100001110010100 [R]
          - Swap Halves:      01000011100101001011011010110101
          - Bit Inversion:    10111100011010110100100101001010
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     10000110001000010101010010000011

          - FUNCTION OUTPUT:  10000110001000010101010010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101110100000011011000010000

       - FUNCTION OUTPUT:          10000110001000010101010010000011

       - Left XOR FUNCTION OUTPUT: 11000011111100010110001010010011

       - Next Round Left 32 Bits:  11111101111111001010100101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011111100010110001010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101111111001010100101011010

       - Right 32 Bits:            11000011111100010110001010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       11000011111100010110001010010011
          - S-Box Result:     01010001101110100000111000110001   [per every group of 4-bits]
          - Split Into Two:   0101000110111010 [L] 0000111000110001 [R]
          - Swap Halves:      00001110001100010101000110111010
          - Bit Inversion:    11110001110011101010111001000101
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     01011000100101100111100100010001

          - FUNCTION OUTPUT:  01011000100101100111100100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101111111001010100101011010

       - FUNCTION OUTPUT:          01011000100101100111100100010001

       - Left XOR FUNCTION OUTPUT: 10100101011010101101000001001011

       - Next Round Left 32 Bits:  11000011111100010110001010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101011010101101000001001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011111100010110001010010011

       - Right 32 Bits:            10100101011010101101000001001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       10100101011010101101000001001011
          - S-Box Result:     01001001000001000110111101111000   [per every group of 4-bits]
          - Split Into Two:   0100100100000100 [L] 0110111101111000 [R]
          - Swap Halves:      01101111011110000100100100000100
          - Bit Inversion:    10010000100001111011011011111011
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     10001100110100010100111110001101

          - FUNCTION OUTPUT:  10001100110100010100111110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011111100010110001010010011

       - FUNCTION OUTPUT:          10001100110100010100111110001101

       - Left XOR FUNCTION OUTPUT: 01001111001000000010110100011110

       - Next Round Left 32 Bits:  10100101011010101101000001001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111001000000010110100011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101011010101101000001001011

       - Right 32 Bits:            01001111001000000010110100011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       01001111001000000010110100011110
          - S-Box Result:     01111011111011111110011010101100   [per every group of 4-bits]
          - Split Into Two:   0111101111101111 [L] 1110011010101100 [R]
          - Swap Halves:      11100110101011000111101111101111
          - Bit Inversion:    00011001010100111000010000010000
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     01100111000010000010101010010001

          - FUNCTION OUTPUT:  01100111000010000010101010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101011010101101000001001011

       - FUNCTION OUTPUT:          01100111000010000010101010010001

       - Left XOR FUNCTION OUTPUT: 11000010011000101111101011011010

       - Next Round Left 32 Bits:  01001111001000000010110100011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010011000101111101011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111001000000010110100011110

       - Right 32 Bits:            11000010011000101111101011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       11000010011000101111101011011010
          - S-Box Result:     01011110000011101011010001100100   [per every group of 4-bits]
          - Split Into Two:   0101111000001110 [L] 1011010001100100 [R]
          - Swap Halves:      10110100011001000101111000001110
          - Bit Inversion:    01001011100110111010000111110001
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     11010001010100001001101100110111

          - FUNCTION OUTPUT:  11010001010100001001101100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111001000000010110100011110

       - FUNCTION OUTPUT:          11010001010100001001101100110111

       - Left XOR FUNCTION OUTPUT: 10011110011100001011011000101001

       - Next Round Left 32 Bits:  11000010011000101111101011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110011100001011011000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010011000101111101011011010

       - Right 32 Bits:            10011110011100001011011000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       10011110011100001011011000101001
          - S-Box Result:     00111100110111111000000011100011   [per every group of 4-bits]
          - Split Into Two:   0011110011011111 [L] 1000000011100011 [R]
          - Swap Halves:      10000000111000110011110011011111
          - Bit Inversion:    01111111000111001100001100100000
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     10100101011011010101001001001010

          - FUNCTION OUTPUT:  10100101011011010101001001001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010011000101111101011011010

       - FUNCTION OUTPUT:          10100101011011010101001001001010

       - Left XOR FUNCTION OUTPUT: 01100111000011111010100010010000

       - Next Round Left 32 Bits:  10011110011100001011011000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111000011111010100010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110011100001011011000101001

       - Right 32 Bits:            01100111000011111010100010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       01100111000011111010100010010000
          - S-Box Result:     00001101111110110100001000111111   [per every group of 4-bits]
          - Split Into Two:   0000110111111011 [L] 0100001000111111 [R]
          - Swap Halves:      01000010001111110000110111111011
          - Bit Inversion:    10111101110000001111001000000100
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     11100100111101101010111110000111

          - FUNCTION OUTPUT:  11100100111101101010111110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110011100001011011000101001

       - FUNCTION OUTPUT:          11100100111101101010111110000111

       - Left XOR FUNCTION OUTPUT: 01111010100001100001100110101110

       - Next Round Left 32 Bits:  01100111000011111010100010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010100001100001100110101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111000011111010100010010000

       - Right 32 Bits:            01111010100001100001100110101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       01111010100001100001100110101110
          - S-Box Result:     11010100001000001010001101001100   [per every group of 4-bits]
          - Split Into Two:   1101010000100000 [L] 1010001101001100 [R]
          - Swap Halves:      10100011010011001101010000100000
          - Bit Inversion:    01011100101100110010101111011111
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     00000010100100000100011110000100

          - FUNCTION OUTPUT:  00000010100100000100011110000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111000011111010100010010000

       - FUNCTION OUTPUT:          00000010100100000100011110000100

       - Left XOR FUNCTION OUTPUT: 01100101100111111110111100010100

       - Next Round Left 32 Bits:  01111010100001100001100110101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101100111111110111100010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010100001100001100110101110

       - Right 32 Bits:            01100101100111111110111100010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       01100101100111111110111100010100
          - S-Box Result:     00001001001110111100101110100111   [per every group of 4-bits]
          - Split Into Two:   0000100100111011 [L] 1100101110100111 [R]
          - Swap Halves:      11001011101001110000100100111011
          - Bit Inversion:    00110100010110001111011011000100
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     01000110110100100100001110101110

          - FUNCTION OUTPUT:  01000110110100100100001110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010100001100001100110101110

       - FUNCTION OUTPUT:          01000110110100100100001110101110

       - Left XOR FUNCTION OUTPUT: 00111100010101000101101000000000

       - Next Round Left 32 Bits:  01100101100111111110111100010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100010101000101101000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101100111111110111100010100

       - Right 32 Bits:            00111100010101000101101000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       00111100010101000101101000000000
          - S-Box Result:     00010101100101111001010011111111   [per every group of 4-bits]
          - Split Into Two:   0001010110010111 [L] 1001010011111111 [R]
          - Swap Halves:      10010100111111110001010110010111
          - Bit Inversion:    01101011000000001110101001101000
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     11111011011010000111010001010010

          - FUNCTION OUTPUT:  11111011011010000111010001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101100111111110111100010100

       - FUNCTION OUTPUT:          11111011011010000111010001010010

       - Left XOR FUNCTION OUTPUT: 10011110111101111001101101000110

       - Next Round Left 32 Bits:  00111100010101000101101000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110111101111001101101000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100010101000101101000000000

       - Right 32 Bits:            10011110111101111001101101000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       10011110111101111001101101000110
          - S-Box Result:     00111100101111010011100001110000   [per every group of 4-bits]
          - Split Into Two:   0011110010111101 [L] 0011100001110000 [R]
          - Swap Halves:      00111000011100000011110010111101
          - Bit Inversion:    11000111100011111100001101000010
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     10000010100110000010101101011000

          - FUNCTION OUTPUT:  10000010100110000010101101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100010101000101101000000000

       - FUNCTION OUTPUT:          10000010100110000010101101011000

       - Left XOR FUNCTION OUTPUT: 10111110110011000111000101011000

       - Next Round Left 32 Bits:  10011110111101111001101101000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110110011000111000101011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110111101111001101101000110

       - Right 32 Bits:            10111110110011000111000101011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       10111110110011000111000101011000
          - S-Box Result:     10001100010101011101101010010010   [per every group of 4-bits]
          - Split Into Two:   1000110001010101 [L] 1101101010010010 [R]
          - Swap Halves:      11011010100100101000110001010101
          - Bit Inversion:    00100101011011010111001110101010
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     01101001001111101110010111111001

          - FUNCTION OUTPUT:  01101001001111101110010111111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110111101111001101101000110

       - FUNCTION OUTPUT:          01101001001111101110010111111001

       - Left XOR FUNCTION OUTPUT: 11110111110010010111111010111111

       - Next Round Left 32 Bits:  10111110110011000111000101011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111110010010111111010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110110011000111000101011000

       - Right 32 Bits:            11110111110010010111111010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       11110111110010010111111010111111
          - S-Box Result:     10111101010100111101110010001011   [per every group of 4-bits]
          - Split Into Two:   1011110101010011 [L] 1101110010001011 [R]
          - Swap Halves:      11011100100010111011110101010011
          - Bit Inversion:    00100011011101000100001010101100
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     11000101100111010001000011110100

          - FUNCTION OUTPUT:  11000101100111010001000011110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110110011000111000101011000

       - FUNCTION OUTPUT:          11000101100111010001000011110100

       - Left XOR FUNCTION OUTPUT: 01111011010100010110000110101100

       - Next Round Left 32 Bits:  11110111110010010111111010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011010100010110000110101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111101101010001011000011010110011110111110010010111111010111111

 > Processed Block:     0111101101010001011000011010110011110111110010010111111010111111



Plaintext Block: 3:                                      0001001001111111001010001100010100000010001001110011100011010110

!!!CBC: Previous Ciphertext:                             0111101101010001011000011010110011110111110010010111111010111111

!!!CBC: Current Block XOR with Previous Ciphertext:      0110100100101110010010010110100111110101111011100100011001101001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001001011100100100101101001

       - Right 32 Bits:            11110101111011100100011001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       11110101111011100100011001101001
          - S-Box Result:     10111001110011000111000000000011   [per every group of 4-bits]
          - Split Into Two:   1011100111001100 [L] 0111000000000011 [R]
          - Swap Halves:      01110000000000111011100111001100
          - Bit Inversion:    10001111111111000100011000110011
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     11011100011010100001010101111111

          - FUNCTION OUTPUT:  11011100011010100001010101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001001011100100100101101001

       - FUNCTION OUTPUT:          11011100011010100001010101111111

       - Left XOR FUNCTION OUTPUT: 10110101010001000101110000010110

       - Next Round Left 32 Bits:  11110101111011100100011001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101010001000101110000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101111011100100011001101001

       - Right 32 Bits:            10110101010001000101110000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       10110101010001000101110000010110
          - S-Box Result:     10001001011101111001010110100000   [per every group of 4-bits]
          - Split Into Two:   1000100101110111 [L] 1001010110100000 [R]
          - Swap Halves:      10010101101000001000100101110111
          - Bit Inversion:    01101010010111110111011010001000
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     10000011000011010010111001101110

          - FUNCTION OUTPUT:  10000011000011010010111001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101111011100100011001101001

       - FUNCTION OUTPUT:          10000011000011010010111001101110

       - Left XOR FUNCTION OUTPUT: 01110110111000110110100000000111

       - Next Round Left 32 Bits:  10110101010001000101110000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110111000110110100000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101010001000101110000010110

       - Right 32 Bits:            01110110111000110110100000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       01110110111000110110100000000111
          - S-Box Result:     11010000110000010000001011111101   [per every group of 4-bits]
          - Split Into Two:   1101000011000001 [L] 0000001011111101 [R]
          - Swap Halves:      00000010111111011101000011000001
          - Bit Inversion:    11111101000000100010111100111110
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     11011010110010000100001110100100

          - FUNCTION OUTPUT:  11011010110010000100001110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101010001000101110000010110

       - FUNCTION OUTPUT:          11011010110010000100001110100100

       - Left XOR FUNCTION OUTPUT: 01101111100011000001111110110010

       - Next Round Left 32 Bits:  01110110111000110110100000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111100011000001111110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110111000110110100000000111

       - Right 32 Bits:            01101111100011000001111110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       01101111100011000001111110110010
          - S-Box Result:     00001011001001011010101110001110   [per every group of 4-bits]
          - Split Into Two:   0000101100100101 [L] 1010101110001110 [R]
          - Swap Halves:      10101011100011100000101100100101
          - Bit Inversion:    01010100011100011111010011011010
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     01101110001110111110100100010011

          - FUNCTION OUTPUT:  01101110001110111110100100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110111000110110100000000111

       - FUNCTION OUTPUT:          01101110001110111110100100010011

       - Left XOR FUNCTION OUTPUT: 00011000110110001000000100010100

       - Next Round Left 32 Bits:  01101111100011000001111110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000110110001000000100010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111100011000001111110110010

       - Right 32 Bits:            00011000110110001000000100010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       00011000110110001000000100010100
          - S-Box Result:     10100010011000100010101010100111   [per every group of 4-bits]
          - Split Into Two:   1010001001100010 [L] 0010101010100111 [R]
          - Swap Halves:      00101010101001111010001001100010
          - Bit Inversion:    11010101010110000101110110011101
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     01111100000000001000101011001001

          - FUNCTION OUTPUT:  01111100000000001000101011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111100011000001111110110010

       - FUNCTION OUTPUT:          01111100000000001000101011001001

       - Left XOR FUNCTION OUTPUT: 00010011100011001001010101111011

       - Next Round Left 32 Bits:  00011000110110001000000100010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100011001001010101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000110110001000000100010100

       - Right 32 Bits:            00010011100011001001010101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       00010011100011001001010101111011
          - S-Box Result:     10100001001001010011100111011000   [per every group of 4-bits]
          - Split Into Two:   1010000100100101 [L] 0011100111011000 [R]
          - Swap Halves:      00111001110110001010000100100101
          - Bit Inversion:    11000110001001110101111011011010
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     11011010011100011010011110101100

          - FUNCTION OUTPUT:  11011010011100011010011110101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000110110001000000100010100

       - FUNCTION OUTPUT:          11011010011100011010011110101100

       - Left XOR FUNCTION OUTPUT: 11000010101010010010011010111000

       - Next Round Left 32 Bits:  00010011100011001001010101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010101010010010011010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011100011001001010101111011

       - Right 32 Bits:            11000010101010010010011010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       11000010101010010010011010111000
          - S-Box Result:     01011110010000111110000010000010   [per every group of 4-bits]
          - Split Into Two:   0101111001000011 [L] 1110000010000010 [R]
          - Swap Halves:      11100000100000100101111001000011
          - Bit Inversion:    00011111011111011010000110111100
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     01100001001001100000111100111101

          - FUNCTION OUTPUT:  01100001001001100000111100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011100011001001010101111011

       - FUNCTION OUTPUT:          01100001001001100000111100111101

       - Left XOR FUNCTION OUTPUT: 01110010101010101001101001000110

       - Next Round Left 32 Bits:  11000010101010010010011010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010101010101001101001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010101010010010011010111000

       - Right 32 Bits:            01110010101010101001101001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       01110010101010101001101001000110
          - S-Box Result:     11011110010001000011010001110000   [per every group of 4-bits]
          - Split Into Two:   1101111001000100 [L] 0011010001110000 [R]
          - Swap Halves:      00110100011100001101111001000100
          - Bit Inversion:    11001011100011110010000110111011
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     01010001010001000001101101111101

          - FUNCTION OUTPUT:  01010001010001000001101101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010101010010010011010111000

       - FUNCTION OUTPUT:          01010001010001000001101101111101

       - Left XOR FUNCTION OUTPUT: 10010011111011010011110111000101

       - Next Round Left 32 Bits:  01110010101010101001101001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011111011010011110111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010101010101001101001000110

       - Right 32 Bits:            10010011111011010011110111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       10010011111011010011110111000101
          - S-Box Result:     00110001110001100001011001011001   [per every group of 4-bits]
          - Split Into Two:   0011000111000110 [L] 0001011001011001 [R]
          - Swap Halves:      00010110010110010011000111000110
          - Bit Inversion:    11101001101001101100111000111001
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     00110011110101110101111101010011

          - FUNCTION OUTPUT:  00110011110101110101111101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010101010101001101001000110

       - FUNCTION OUTPUT:          00110011110101110101111101010011

       - Left XOR FUNCTION OUTPUT: 01000001011111011100010100010101

       - Next Round Left 32 Bits:  10010011111011010011110111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001011111011100010100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011111011010011110111000101

       - Right 32 Bits:            01000001011111011100010100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       01000001011111011100010100010101
          - S-Box Result:     01111010110101100101100110101001   [per every group of 4-bits]
          - Split Into Two:   0111101011010110 [L] 0101100110101001 [R]
          - Swap Halves:      01011001101010010111101011010110
          - Bit Inversion:    10100110010101101000010100101001
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     11111111011000001101100010101010

          - FUNCTION OUTPUT:  11111111011000001101100010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011111011010011110111000101

       - FUNCTION OUTPUT:          11111111011000001101100010101010

       - Left XOR FUNCTION OUTPUT: 01101100100011011110010101101111

       - Next Round Left 32 Bits:  01000001011111011100010100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100100011011110010101101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001011111011100010100010101

       - Right 32 Bits:            01101100100011011110010101101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       01101100100011011110010101101111
          - S-Box Result:     00000101001001101100100100001011   [per every group of 4-bits]
          - Split Into Two:   0000010100100110 [L] 1100100100001011 [R]
          - Swap Halves:      11001001000010110000010100100110
          - Bit Inversion:    00110110111101001111101011011001
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     01101000110101111001011010000010

          - FUNCTION OUTPUT:  01101000110101111001011010000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001011111011100010100010101

       - FUNCTION OUTPUT:          01101000110101111001011010000010

       - Left XOR FUNCTION OUTPUT: 00101001101010100101001110010111

       - Next Round Left 32 Bits:  01101100100011011110010101101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001101010100101001110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100100011011110010101101111

       - Right 32 Bits:            00101001101010100101001110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       00101001101010100101001110010111
          - S-Box Result:     11100011010001001001000100111101   [per every group of 4-bits]
          - Split Into Two:   1110001101000100 [L] 1001000100111101 [R]
          - Swap Halves:      10010001001111011110001101000100
          - Bit Inversion:    01101110110000100001110010111011
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     00011100010010001010100111010001

          - FUNCTION OUTPUT:  00011100010010001010100111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100100011011110010101101111

       - FUNCTION OUTPUT:          00011100010010001010100111010001

       - Left XOR FUNCTION OUTPUT: 01110000110001010100110010111110

       - Next Round Left 32 Bits:  00101001101010100101001110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000110001010100110010111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001101010100101001110010111

       - Right 32 Bits:            01110000110001010100110010111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       01110000110001010100110010111110
          - S-Box Result:     11011111010110010111010110001100   [per every group of 4-bits]
          - Split Into Two:   1101111101011001 [L] 0111010110001100 [R]
          - Swap Halves:      01110101100011001101111101011001
          - Bit Inversion:    10001010011100110010000010100110
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     00011010000110111011111010011100

          - FUNCTION OUTPUT:  00011010000110111011111010011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001101010100101001110010111

       - FUNCTION OUTPUT:          00011010000110111011111010011100

       - Left XOR FUNCTION OUTPUT: 00110011101100011110110100001011

       - Next Round Left 32 Bits:  01110000110001010100110010111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011101100011110110100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000110001010100110010111110

       - Right 32 Bits:            00110011101100011110110100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       00110011101100011110110100001011
          - S-Box Result:     00010001100010101100011011111000   [per every group of 4-bits]
          - Split Into Two:   0001000110001010 [L] 1100011011111000 [R]
          - Swap Halves:      11000110111110000001000110001010
          - Bit Inversion:    00111001000001111110111001110101
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     01111100000100000000011001101111

          - FUNCTION OUTPUT:  01111100000100000000011001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000110001010100110010111110

       - FUNCTION OUTPUT:          01111100000100000000011001101111

       - Left XOR FUNCTION OUTPUT: 00001100110101010100101011010001

       - Next Round Left 32 Bits:  00110011101100011110110100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100110101010100101011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011101100011110110100001011

       - Right 32 Bits:            00001100110101010100101011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       00001100110101010100101011010001
          - S-Box Result:     11110101011010010111010001101010   [per every group of 4-bits]
          - Split Into Two:   1111010101101001 [L] 0111010001101010 [R]
          - Swap Halves:      01110100011010101111010101101001
          - Bit Inversion:    10001011100101010000101010010110
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     11000111110001101001110011000101

          - FUNCTION OUTPUT:  11000111110001101001110011000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011101100011110110100001011

       - FUNCTION OUTPUT:          11000111110001101001110011000101

       - Left XOR FUNCTION OUTPUT: 11110100011101110111000111001110

       - Next Round Left 32 Bits:  00001100110101010100101011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100011101110111000111001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100110101010100101011010001

       - Right 32 Bits:            11110100011101110111000111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       11110100011101110111000111001110
          - S-Box Result:     10110111110111011101101001011100   [per every group of 4-bits]
          - Split Into Two:   1011011111011101 [L] 1101101001011100 [R]
          - Swap Halves:      11011010010111001011011111011101
          - Bit Inversion:    00100101101000110100100000100010
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     11000011010010100001101001111010

          - FUNCTION OUTPUT:  11000011010010100001101001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100110101010100101011010001

       - FUNCTION OUTPUT:          11000011010010100001101001111010

       - Left XOR FUNCTION OUTPUT: 11001111100111110101000010101011

       - Next Round Left 32 Bits:  11110100011101110111000111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111100111110101000010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100111110011111010100001010101111110100011101110111000111001110

 > Processed Block:     1100111110011111010100001010101111110100011101110111000111001110



Plaintext Block: 4:                                      1110100101111100111011010110111110011011101000111100001000000101

!!!CBC: Previous Ciphertext:                             1100111110011111010100001010101111110100011101110111000111001110

!!!CBC: Current Block XOR with Previous Ciphertext:      0010011011100011101111011100010001101111110101001011001111001011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110111000111011110111000100

       - Right 32 Bits:            01101111110101001011001111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       01101111110101001011001111001011
          - S-Box Result:     00001011011001111000000101011000   [per every group of 4-bits]
          - Split Into Two:   0000101101100111 [L] 1000000101011000 [R]
          - Swap Halves:      10000001010110000000101101100111
          - Bit Inversion:    01111110101001111111010010011000
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     00101101001100011010011111010100

          - FUNCTION OUTPUT:  00101101001100011010011111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110111000111011110111000100

       - FUNCTION OUTPUT:          00101101001100011010011111010100

       - Left XOR FUNCTION OUTPUT: 00001011110100100001101000010000

       - Next Round Left 32 Bits:  01101111110101001011001111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011110100100001101000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111110101001011001111001011

       - Right 32 Bits:            00001011110100100001101000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00001011110100100001101000010000
          - S-Box Result:     11111000011011101010010010101111   [per every group of 4-bits]
          - Split Into Two:   1111100001101110 [L] 1010010010101111 [R]
          - Swap Halves:      10100100101011111111100001101110
          - Bit Inversion:    01011011010100000000011110010001
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     10110010000000100101111101110111

          - FUNCTION OUTPUT:  10110010000000100101111101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111110101001011001111001011

       - FUNCTION OUTPUT:          10110010000000100101111101110111

       - Left XOR FUNCTION OUTPUT: 11011101110101101110110010111100

       - Next Round Left 32 Bits:  00001011110100100001101000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101110101101110110010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011110100100001101000010000

       - Right 32 Bits:            11011101110101101110110010111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       11011101110101101110110010111100
          - S-Box Result:     01100110011000001100010110000101   [per every group of 4-bits]
          - Split Into Two:   0110011001100000 [L] 1100010110000101 [R]
          - Swap Halves:      11000101100001010110011001100000
          - Bit Inversion:    00111010011110101001100110011111
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     00011101101100001111010100000101

          - FUNCTION OUTPUT:  00011101101100001111010100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011110100100001101000010000

       - FUNCTION OUTPUT:          00011101101100001111010100000101

       - Left XOR FUNCTION OUTPUT: 00010110011000101110111100010101

       - Next Round Left 32 Bits:  11011101110101101110110010111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110011000101110111100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101110101101110110010111100

       - Right 32 Bits:            00010110011000101110111100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       00010110011000101110111100010101
          - S-Box Result:     10100000000011101100101110101001   [per every group of 4-bits]
          - Split Into Two:   1010000000001110 [L] 1100101110101001 [R]
          - Swap Halves:      11001011101010011010000000001110
          - Bit Inversion:    00110100010101100101111111110001
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     00001110000111000100001000111000

          - FUNCTION OUTPUT:  00001110000111000100001000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101110101101110110010111100

       - FUNCTION OUTPUT:          00001110000111000100001000111000

       - Left XOR FUNCTION OUTPUT: 11010011110010101010111010000100

       - Next Round Left 32 Bits:  00010110011000101110111100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011110010101010111010000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110011000101110111100010101

       - Right 32 Bits:            11010011110010101010111010000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       11010011110010101010111010000100
          - S-Box Result:     01100001010101000100110000100111   [per every group of 4-bits]
          - Split Into Two:   0110000101010100 [L] 0100110000100111 [R]
          - Swap Halves:      01001100001001110110000101010100
          - Bit Inversion:    10110011110110001001111010101011
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     00011010100000000100100111111111

          - FUNCTION OUTPUT:  00011010100000000100100111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110011000101110111100010101

       - FUNCTION OUTPUT:          00011010100000000100100111111111

       - Left XOR FUNCTION OUTPUT: 00001100111000101010011011101010

       - Next Round Left 32 Bits:  11010011110010101010111010000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100111000101010011011101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011110010101010111010000100

       - Right 32 Bits:            00001100111000101010011011101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       00001100111000101010011011101010
          - S-Box Result:     11110101110011100100000011000100   [per every group of 4-bits]
          - Split Into Two:   1111010111001110 [L] 0100000011000100 [R]
          - Swap Halves:      01000000110001001111010111001110
          - Bit Inversion:    10111111001110110000101000110001
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     10100011011011011111001101000111

          - FUNCTION OUTPUT:  10100011011011011111001101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011110010101010111010000100

       - FUNCTION OUTPUT:          10100011011011011111001101000111

       - Left XOR FUNCTION OUTPUT: 01110000101001110101110111000011

       - Next Round Left 32 Bits:  00001100111000101010011011101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000101001110101110111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100111000101010011011101010

       - Right 32 Bits:            01110000101001110101110111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       01110000101001110101110111000011
          - S-Box Result:     11011111010011011001011001010001   [per every group of 4-bits]
          - Split Into Two:   1101111101001101 [L] 1001011001010001 [R]
          - Swap Halves:      10010110010100011101111101001101
          - Bit Inversion:    01101001101011100010000010110010
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     00010111111101011000111000110011

          - FUNCTION OUTPUT:  00010111111101011000111000110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100111000101010011011101010

       - FUNCTION OUTPUT:          00010111111101011000111000110011

       - Left XOR FUNCTION OUTPUT: 00011011000101110010100011011001

       - Next Round Left 32 Bits:  01110000101001110101110111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011000101110010100011011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000101001110101110111000011

       - Right 32 Bits:            00011011000101110010100011011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       00011011000101110010100011011001
          - S-Box Result:     10101000101011011110001001100011   [per every group of 4-bits]
          - Split Into Two:   1010100010101101 [L] 1110001001100011 [R]
          - Swap Halves:      11100010011000111010100010101101
          - Bit Inversion:    00011101100111000101011101010010
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     10000111010101110110110110010100

          - FUNCTION OUTPUT:  10000111010101110110110110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000101001110101110111000011

       - FUNCTION OUTPUT:          10000111010101110110110110010100

       - Left XOR FUNCTION OUTPUT: 11110111111100000011000001010111

       - Next Round Left 32 Bits:  00011011000101110010100011011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111111100000011000001010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011000101110010100011011001

       - Right 32 Bits:            11110111111100000011000001010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       11110111111100000011000001010111
          - S-Box Result:     10111101101111110001111110011101   [per every group of 4-bits]
          - Split Into Two:   1011110110111111 [L] 0001111110011101 [R]
          - Swap Halves:      00011111100111011011110110111111
          - Bit Inversion:    11100000011000100100001001000000
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     00111010000100111101001100101010

          - FUNCTION OUTPUT:  00111010000100111101001100101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011000101110010100011011001

       - FUNCTION OUTPUT:          00111010000100111101001100101010

       - Left XOR FUNCTION OUTPUT: 00100001000001001111101111110011

       - Next Round Left 32 Bits:  11110111111100000011000001010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001000001001111101111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111111100000011000001010111

       - Right 32 Bits:            00100001000001001111101111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       00100001000001001111101111110011
          - S-Box Result:     11101010111101111011100010110001   [per every group of 4-bits]
          - Split Into Two:   1110101011110111 [L] 1011100010110001 [R]
          - Swap Halves:      10111000101100011110101011110111
          - Bit Inversion:    01000111010011100001010100001000
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     00011110011110000100100010001011

          - FUNCTION OUTPUT:  00011110011110000100100010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111111100000011000001010111

       - FUNCTION OUTPUT:          00011110011110000100100010001011

       - Left XOR FUNCTION OUTPUT: 11101001100010000111100011011100

       - Next Round Left 32 Bits:  00100001000001001111101111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001100010000111100011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001000001001111101111110011

       - Right 32 Bits:            11101001100010000111100011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       11101001100010000111100011011100
          - S-Box Result:     11000011001000101101001001100101   [per every group of 4-bits]
          - Split Into Two:   1100001100100010 [L] 1101001001100101 [R]
          - Swap Halves:      11010010011001011100001100100010
          - Bit Inversion:    00101101100110100011110011011101
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     01110011101110010101000010000110

          - FUNCTION OUTPUT:  01110011101110010101000010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001000001001111101111110011

       - FUNCTION OUTPUT:          01110011101110010101000010000110

       - Left XOR FUNCTION OUTPUT: 01010010101111011010101101110101

       - Next Round Left 32 Bits:  11101001100010000111100011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010101111011010101101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001100010000111100011011100

       - Right 32 Bits:            01010010101111011010101101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       01010010101111011010101101110101
          - S-Box Result:     10011110100001100100100011011001   [per every group of 4-bits]
          - Split Into Two:   1001111010000110 [L] 0100100011011001 [R]
          - Swap Halves:      01001000110110011001111010000110
          - Bit Inversion:    10110111001001100110000101111001
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     11000101101011001101010000010011

          - FUNCTION OUTPUT:  11000101101011001101010000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001100010000111100011011100

       - FUNCTION OUTPUT:          11000101101011001101010000010011

       - Left XOR FUNCTION OUTPUT: 00101100001001001010110011001111

       - Next Round Left 32 Bits:  01010010101111011010101101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100001001001010110011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010101111011010101101110101

       - Right 32 Bits:            00101100001001001010110011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       00101100001001001010110011001111
          - S-Box Result:     11100101111001110100010101011011   [per every group of 4-bits]
          - Split Into Two:   1110010111100111 [L] 0100010101011011 [R]
          - Swap Halves:      01000101010110111110010111100111
          - Bit Inversion:    10111010101001000001101000011000
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     00101010110011001000010000100010

          - FUNCTION OUTPUT:  00101010110011001000010000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010101111011010101101110101

       - FUNCTION OUTPUT:          00101010110011001000010000100010

       - Left XOR FUNCTION OUTPUT: 01111000011100010010111101010111

       - Next Round Left 32 Bits:  00101100001001001010110011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000011100010010111101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100001001001010110011001111

       - Right 32 Bits:            01111000011100010010111101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       01111000011100010010111101010111
          - S-Box Result:     11010010110110101110101110011101   [per every group of 4-bits]
          - Split Into Two:   1101001011011010 [L] 1110101110011101 [R]
          - Swap Halves:      11101011100111011101001011011010
          - Bit Inversion:    00010100011000100010110100100101
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     01010001011101011100010100111111

          - FUNCTION OUTPUT:  01010001011101011100010100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100001001001010110011001111

       - FUNCTION OUTPUT:          01010001011101011100010100111111

       - Left XOR FUNCTION OUTPUT: 01111101010100010110100111110000

       - Next Round Left 32 Bits:  01111000011100010010111101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101010100010110100111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000011100010010111101010111

       - Right 32 Bits:            01111101010100010110100111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       01111101010100010110100111110000
          - S-Box Result:     11010110100110100000001110111111   [per every group of 4-bits]
          - Split Into Two:   1101011010011010 [L] 0000001110111111 [R]
          - Swap Halves:      00000011101111111101011010011010
          - Bit Inversion:    11111100010000000010100101100101
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     10110000000100111011111100110110

          - FUNCTION OUTPUT:  10110000000100111011111100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000011100010010111101010111

       - FUNCTION OUTPUT:          10110000000100111011111100110110

       - Left XOR FUNCTION OUTPUT: 11001000011000101001000001100001

       - Next Round Left 32 Bits:  01111101010100010110100111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000011000101001000001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101010100010110100111110000

       - Right 32 Bits:            11001000011000101001000001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       11001000011000101001000001100001
          - S-Box Result:     01010010000011100011111100001010   [per every group of 4-bits]
          - Split Into Two:   0101001000001110 [L] 0011111100001010 [R]
          - Swap Halves:      00111111000010100101001000001110
          - Bit Inversion:    11000000111101011010110111110001
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     00100110000111001111111110101001

          - FUNCTION OUTPUT:  00100110000111001111111110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101010100010110100111110000

       - FUNCTION OUTPUT:          00100110000111001111111110101001

       - Left XOR FUNCTION OUTPUT: 01011011010011011001011001011001

       - Next Round Left 32 Bits:  11001000011000101001000001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011010011011001011001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101101101001101100101100101100111001000011000101001000001100001

 > Processed Block:     0101101101001101100101100101100111001000011000101001000001100001



Plaintext Block: 5:                                      1111000010100011100010011100101001010000101010101111001000100100

!!!CBC: Previous Ciphertext:                             0101101101001101100101100101100111001000011000101001000001100001

!!!CBC: Current Block XOR with Previous Ciphertext:      1010101111101110000111111001001110011000110010000110001001000101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011111011100001111110010011

       - Right 32 Bits:            10011000110010000110001001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       10011000110010000110001001000101
          - S-Box Result:     00110010010100100000111001111001   [per every group of 4-bits]
          - Split Into Two:   0011001001010010 [L] 0000111001111001 [R]
          - Swap Halves:      00001110011110010011001001010010
          - Bit Inversion:    11110001100001101100110110101101
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     10100010000100001001111011100001

          - FUNCTION OUTPUT:  10100010000100001001111011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011111011100001111110010011

       - FUNCTION OUTPUT:          10100010000100001001111011100001

       - Left XOR FUNCTION OUTPUT: 00001001111111101000000101110010

       - Next Round Left 32 Bits:  10011000110010000110001001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001111111101000000101110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000110010000110001001000101

       - Right 32 Bits:            00001001111111101000000101110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00001001111111101000000101110010
          - S-Box Result:     11110011101111000010101011011110   [per every group of 4-bits]
          - Split Into Two:   1111001110111100 [L] 0010101011011110 [R]
          - Swap Halves:      00101010110111101111001110111100
          - Bit Inversion:    11010101001000010000110001000011
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     00111100011100110101010010100101

          - FUNCTION OUTPUT:  00111100011100110101010010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000110010000110001001000101

       - FUNCTION OUTPUT:          00111100011100110101010010100101

       - Left XOR FUNCTION OUTPUT: 10100100101110110011011011100000

       - Next Round Left 32 Bits:  00001001111111101000000101110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100101110110011011011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001111111101000000101110010

       - Right 32 Bits:            10100100101110110011011011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       10100100101110110011011011100000
          - S-Box Result:     01000111100010000001000011001111   [per every group of 4-bits]
          - Split Into Two:   0100011110001000 [L] 0001000011001111 [R]
          - Swap Halves:      00010000110011110100011110001000
          - Bit Inversion:    11101111001100001011100001110111
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     11001000111110101101010011101101

          - FUNCTION OUTPUT:  11001000111110101101010011101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001111111101000000101110010

       - FUNCTION OUTPUT:          11001000111110101101010011101101

       - Left XOR FUNCTION OUTPUT: 11000001000001000101010110011111

       - Next Round Left 32 Bits:  10100100101110110011011011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001000001000101010110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100101110110011011011100000

       - Right 32 Bits:            11000001000001000101010110011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       11000001000001000101010110011111
          - S-Box Result:     01011010111101111001100100111011   [per every group of 4-bits]
          - Split Into Two:   0101101011110111 [L] 1001100100111011 [R]
          - Swap Halves:      10011001001110110101101011110111
          - Bit Inversion:    01100110110001001010010100001000
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     01011100100011101011100011000001

          - FUNCTION OUTPUT:  01011100100011101011100011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100101110110011011011100000

       - FUNCTION OUTPUT:          01011100100011101011100011000001

       - Left XOR FUNCTION OUTPUT: 11111000001101011000111000100001

       - Next Round Left 32 Bits:  11000001000001000101010110011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000001101011000111000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001000001000101010110011111

       - Right 32 Bits:            11111000001101011000111000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       11111000001101011000111000100001
          - S-Box Result:     10110010000110010010110011101010   [per every group of 4-bits]
          - Split Into Two:   1011001000011001 [L] 0010110011101010 [R]
          - Swap Halves:      00101100111010101011001000011001
          - Bit Inversion:    11010011000101010100110111100110
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     01111010010011011001101010110010

          - FUNCTION OUTPUT:  01111010010011011001101010110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001000001000101010110011111

       - FUNCTION OUTPUT:          01111010010011011001101010110010

       - Left XOR FUNCTION OUTPUT: 10111011010010011100111100101101

       - Next Round Left 32 Bits:  11111000001101011000111000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011010010011100111100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000001101011000111000100001

       - Right 32 Bits:            10111011010010011100111100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       10111011010010011100111100101101
          - S-Box Result:     10001000011100110101101111100110   [per every group of 4-bits]
          - Split Into Two:   1000100001110011 [L] 0101101111100110 [R]
          - Swap Halves:      01011011111001101000100001110011
          - Bit Inversion:    10100100000110010111011110001100
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     10111000010011111000111011111010

          - FUNCTION OUTPUT:  10111000010011111000111011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000001101011000111000100001

       - FUNCTION OUTPUT:          10111000010011111000111011111010

       - Left XOR FUNCTION OUTPUT: 01000000011110100000000011011011

       - Next Round Left 32 Bits:  10111011010010011100111100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000011110100000000011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011010010011100111100101101

       - Right 32 Bits:            01000000011110100000000011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       01000000011110100000000011011011
          - S-Box Result:     01111111110101001111111101101000   [per every group of 4-bits]
          - Split Into Two:   0111111111010100 [L] 1111111101101000 [R]
          - Swap Halves:      11111111011010000111111111010100
          - Bit Inversion:    00000000100101111000000000101011
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     01111110110011000010111010101010

          - FUNCTION OUTPUT:  01111110110011000010111010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011010010011100111100101101

       - FUNCTION OUTPUT:          01111110110011000010111010101010

       - Left XOR FUNCTION OUTPUT: 11000101100001011110000110000111

       - Next Round Left 32 Bits:  01000000011110100000000011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101100001011110000110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000011110100000000011011011

       - Right 32 Bits:            11000101100001011110000110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       11000101100001011110000110000111
          - S-Box Result:     01011001001010011100101000101101   [per every group of 4-bits]
          - Split Into Two:   0101100100101001 [L] 1100101000101101 [R]
          - Swap Halves:      11001010001011010101100100101001
          - Bit Inversion:    00110101110100101010011011010110
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     10101111000110011001110000010000

          - FUNCTION OUTPUT:  10101111000110011001110000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000011110100000000011011011

       - FUNCTION OUTPUT:          10101111000110011001110000010000

       - Left XOR FUNCTION OUTPUT: 11101111011000111001110011001011

       - Next Round Left 32 Bits:  11000101100001011110000110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111011000111001110011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101100001011110000110000111

       - Right 32 Bits:            11101111011000111001110011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       11101111011000111001110011001011
          - S-Box Result:     11001011000000010011010101011000   [per every group of 4-bits]
          - Split Into Two:   1100101100000001 [L] 0011010101011000 [R]
          - Swap Halves:      00110101010110001100101100000001
          - Bit Inversion:    11001010101001110011010011111110
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     00010000110101101010010110010100

          - FUNCTION OUTPUT:  00010000110101101010010110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101100001011110000110000111

       - FUNCTION OUTPUT:          00010000110101101010010110010100

       - Left XOR FUNCTION OUTPUT: 11010101010100110100010000010011

       - Next Round Left 32 Bits:  11101111011000111001110011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101010100110100010000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111011000111001110011001011

       - Right 32 Bits:            11010101010100110100010000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       11010101010100110100010000010011
          - S-Box Result:     01101001100100010111011110100001   [per every group of 4-bits]
          - Split Into Two:   0110100110010001 [L] 0111011110100001 [R]
          - Swap Halves:      01110111101000010110100110010001
          - Bit Inversion:    10001000010111101001011001101110
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     11010001011010001100101111101101

          - FUNCTION OUTPUT:  11010001011010001100101111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111011000111001110011001011

       - FUNCTION OUTPUT:          11010001011010001100101111101101

       - Left XOR FUNCTION OUTPUT: 00111110000010110101011100100110

       - Next Round Left 32 Bits:  11010101010100110100010000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110000010110101011100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101010100110100010000010011

       - Right 32 Bits:            00111110000010110101011100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       00111110000010110101011100100110
          - S-Box Result:     00011100111110001001110111100000   [per every group of 4-bits]
          - Split Into Two:   0001110011111000 [L] 1001110111100000 [R]
          - Swap Halves:      10011101111000000001110011111000
          - Bit Inversion:    01100010000111111110001100000111
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     00111100001111001000111101011100

          - FUNCTION OUTPUT:  00111100001111001000111101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101010100110100010000010011

       - FUNCTION OUTPUT:          00111100001111001000111101011100

       - Left XOR FUNCTION OUTPUT: 11101001011011111100101101001111

       - Next Round Left 32 Bits:  00111110000010110101011100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001011011111100101101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110000010110101011100100110

       - Right 32 Bits:            11101001011011111100101101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       11101001011011111100101101001111
          - S-Box Result:     11000011000010110101100001111011   [per every group of 4-bits]
          - Split Into Two:   1100001100001011 [L] 0101100001111011 [R]
          - Swap Halves:      01011000011110111100001100001011
          - Bit Inversion:    10100111100001000011110011110100
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     11010101000011101000100110011110

          - FUNCTION OUTPUT:  11010101000011101000100110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110000010110101011100100110

       - FUNCTION OUTPUT:          11010101000011101000100110011110

       - Left XOR FUNCTION OUTPUT: 11101011000001011101111010111000

       - Next Round Left 32 Bits:  11101001011011111100101101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011000001011101111010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001011011111100101101001111

       - Right 32 Bits:            11101011000001011101111010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       11101011000001011101111010111000
          - S-Box Result:     11001000111110010110110010000010   [per every group of 4-bits]
          - Split Into Two:   1100100011111001 [L] 0110110010000010 [R]
          - Swap Halves:      01101100100000101100100011111001
          - Bit Inversion:    10010011011111010011011100000110
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     00000011000101011010100100111100

          - FUNCTION OUTPUT:  00000011000101011010100100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001011011111100101101001111

       - FUNCTION OUTPUT:          00000011000101011010100100111100

       - Left XOR FUNCTION OUTPUT: 11101010011110100110001001110011

       - Next Round Left 32 Bits:  11101011000001011101111010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010011110100110001001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011000001011101111010111000

       - Right 32 Bits:            11101010011110100110001001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       11101010011110100110001001110011
          - S-Box Result:     11000100110101000000111011010001   [per every group of 4-bits]
          - Split Into Two:   1100010011010100 [L] 0000111011010001 [R]
          - Swap Halves:      00001110110100011100010011010100
          - Bit Inversion:    11110001001011100011101100101011
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     10110100001110011101001100110001

          - FUNCTION OUTPUT:  10110100001110011101001100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011000001011101111010111000

       - FUNCTION OUTPUT:          10110100001110011101001100110001

       - Left XOR FUNCTION OUTPUT: 01011111001111000000110110001001

       - Next Round Left 32 Bits:  11101010011110100110001001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111001111000000110110001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010011110100110001001110011

       - Right 32 Bits:            01011111001111000000110110001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       01011111001111000000110110001001
          - S-Box Result:     10011011000101011111011000100011   [per every group of 4-bits]
          - Split Into Two:   1001101100010101 [L] 1111011000100011 [R]
          - Swap Halves:      11110110001000111001101100010101
          - Bit Inversion:    00001001110111000110010011101010
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     01000101100011111111001010111001

          - FUNCTION OUTPUT:  01000101100011111111001010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010011110100110001001110011

       - FUNCTION OUTPUT:          01000101100011111111001010111001

       - Left XOR FUNCTION OUTPUT: 10101111111101011001000011001010

       - Next Round Left 32 Bits:  01011111001111000000110110001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111111101011001000011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111001111000000110110001001

       - Right 32 Bits:            10101111111101011001000011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       10101111111101011001000011001010
          - S-Box Result:     01001011101110010011111101010100   [per every group of 4-bits]
          - Split Into Two:   0100101110111001 [L] 0011111101010100 [R]
          - Swap Halves:      00111111010101000100101110111001
          - Bit Inversion:    11000000101010111011010001000110
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     00100110010000101110011000011110

          - FUNCTION OUTPUT:  00100110010000101110011000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111001111000000110110001001

       - FUNCTION OUTPUT:          00100110010000101110011000011110

       - Left XOR FUNCTION OUTPUT: 01111001011111101110101110010111

       - Next Round Left 32 Bits:  10101111111101011001000011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001011111101110101110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111100101111110111010111001011110101111111101011001000011001010

 > Processed Block:     0111100101111110111010111001011110101111111101011001000011001010



Plaintext Block: 6:                                      0101000101110100001110010010100010100101000010111010101000001001

!!!CBC: Previous Ciphertext:                             0111100101111110111010111001011110101111111101011001000011001010

!!!CBC: Current Block XOR with Previous Ciphertext:      0010100000001010110100101011111100001010111111100011101011000011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000000010101101001010111111

       - Right 32 Bits:            00001010111111100011101011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       00001010111111100011101011000011
          - S-Box Result:     11110100101111000001010001010001   [per every group of 4-bits]
          - Split Into Two:   1111010010111100 [L] 0001010001010001 [R]
          - Swap Halves:      00010100010100011111010010111100
          - Bit Inversion:    11101011101011100000101101000011
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     10111000001110000101100000001111

          - FUNCTION OUTPUT:  10111000001110000101100000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000000010101101001010111111

       - FUNCTION OUTPUT:          10111000001110000101100000001111

       - Left XOR FUNCTION OUTPUT: 10010000001100101000101010110000

       - Next Round Left 32 Bits:  00001010111111100011101011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000001100101000101010110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010111111100011101011000011

       - Right 32 Bits:            10010000001100101000101010110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       10010000001100101000101010110000
          - S-Box Result:     00111111000111100010010010001111   [per every group of 4-bits]
          - Split Into Two:   0011111100011110 [L] 0010010010001111 [R]
          - Swap Halves:      00100100100011110011111100011110
          - Bit Inversion:    11011011011100001100000011100001
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     00110010001000101001100000000111

          - FUNCTION OUTPUT:  00110010001000101001100000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010111111100011101011000011

       - FUNCTION OUTPUT:          00110010001000101001100000000111

       - Left XOR FUNCTION OUTPUT: 00111000110111001010001011000100

       - Next Round Left 32 Bits:  10010000001100101000101010110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000110111001010001011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000001100101000101010110000

       - Right 32 Bits:            00111000110111001010001011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       00111000110111001010001011000100
          - S-Box Result:     00010010011001010100111001010111   [per every group of 4-bits]
          - Split Into Two:   0001001001100101 [L] 0100111001010111 [R]
          - Swap Halves:      01001110010101110001001001100101
          - Bit Inversion:    10110001101010001110110110011010
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     10010110011000101000000100000000

          - FUNCTION OUTPUT:  10010110011000101000000100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000001100101000101010110000

       - FUNCTION OUTPUT:          10010110011000101000000100000000

       - Left XOR FUNCTION OUTPUT: 00000110010100000000101110110000

       - Next Round Left 32 Bits:  00111000110111001010001011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110010100000000101110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000110111001010001011000100

       - Right 32 Bits:            00000110010100000000101110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       00000110010100000000101110110000
          - S-Box Result:     11110000100111111111100010001111   [per every group of 4-bits]
          - Split Into Two:   1111000010011111 [L] 1111100010001111 [R]
          - Swap Halves:      11111000100011111111000010011111
          - Bit Inversion:    00000111011100000000111101100000
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     00111101001110100001001010101001

          - FUNCTION OUTPUT:  00111101001110100001001010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000110111001010001011000100

       - FUNCTION OUTPUT:          00111101001110100001001010101001

       - Left XOR FUNCTION OUTPUT: 00000101111001101011000001101101

       - Next Round Left 32 Bits:  00000110010100000000101110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101111001101011000001101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110010100000000101110110000

       - Right 32 Bits:            00000101111001101011000001101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       00000101111001101011000001101101
          - S-Box Result:     11111001110000001000111100000110   [per every group of 4-bits]
          - Split Into Two:   1111100111000000 [L] 1000111100000110 [R]
          - Swap Halves:      10001111000001101111100111000000
          - Bit Inversion:    01110000111110010000011000111111
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     11011001101000011101000101101011

          - FUNCTION OUTPUT:  11011001101000011101000101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110010100000000101110110000

       - FUNCTION OUTPUT:          11011001101000011101000101101011

       - Left XOR FUNCTION OUTPUT: 11011111111100011101101011011011

       - Next Round Left 32 Bits:  00000101111001101011000001101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111111100011101101011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101111001101011000001101101

       - Right 32 Bits:            11011111111100011101101011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       11011111111100011101101011011011
          - S-Box Result:     01101011101110100110010001101000   [per every group of 4-bits]
          - Split Into Two:   0110101110111010 [L] 0110010001101000 [R]
          - Swap Halves:      01100100011010000110101110111010
          - Bit Inversion:    10011011100101111001010001000101
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     10000111110000010110110100110011

          - FUNCTION OUTPUT:  10000111110000010110110100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101111001101011000001101101

       - FUNCTION OUTPUT:          10000111110000010110110100110011

       - Left XOR FUNCTION OUTPUT: 10000010001001111101110101011110

       - Next Round Left 32 Bits:  11011111111100011101101011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010001001111101110101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111111100011101101011011011

       - Right 32 Bits:            10000010001001111101110101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       10000010001001111101110101011110
          - S-Box Result:     00101110111011010110011010011100   [per every group of 4-bits]
          - Split Into Two:   0010111011101101 [L] 0110011010011100 [R]
          - Swap Halves:      01100110100111000010111011101101
          - Bit Inversion:    10011001011000111101000100010010
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     11100111001110000111111110010011

          - FUNCTION OUTPUT:  11100111001110000111111110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111111100011101101011011011

       - FUNCTION OUTPUT:          11100111001110000111111110010011

       - Left XOR FUNCTION OUTPUT: 00111000110010011010010101001000

       - Next Round Left 32 Bits:  10000010001001111101110101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000110010011010010101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000010001001111101110101011110

       - Right 32 Bits:            00111000110010011010010101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       00111000110010011010010101001000
          - S-Box Result:     00010010010100110100100101110010   [per every group of 4-bits]
          - Split Into Two:   0001001001010011 [L] 0100100101110010 [R]
          - Swap Halves:      01001001011100100001001001010011
          - Bit Inversion:    10110110100011011110110110101100
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     00101100010001101101011101101010

          - FUNCTION OUTPUT:  00101100010001101101011101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000010001001111101110101011110

       - FUNCTION OUTPUT:          00101100010001101101011101101010

       - Left XOR FUNCTION OUTPUT: 10101110011000010000101000110100

       - Next Round Left 32 Bits:  00111000110010011010010101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110011000010000101000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000110010011010010101001000

       - Right 32 Bits:            10101110011000010000101000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       10101110011000010000101000110100
          - S-Box Result:     01001100000010101111010000010111   [per every group of 4-bits]
          - Split Into Two:   0100110000001010 [L] 1111010000010111 [R]
          - Swap Halves:      11110100000101110100110000001010
          - Bit Inversion:    00001011111010001011001111110101
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     11010001100110010010001010011111

          - FUNCTION OUTPUT:  11010001100110010010001010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000110010011010010101001000

       - FUNCTION OUTPUT:          11010001100110010010001010011111

       - Left XOR FUNCTION OUTPUT: 11101001010100001000011111010111

       - Next Round Left 32 Bits:  10101110011000010000101000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001010100001000011111010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110011000010000101000110100

       - Right 32 Bits:            11101001010100001000011111010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       11101001010100001000011111010111
          - S-Box Result:     11000011100111110010110101101101   [per every group of 4-bits]
          - Split Into Two:   1100001110011111 [L] 0010110101101101 [R]
          - Swap Halves:      00101101011011011100001110011111
          - Bit Inversion:    11010010100100100011110001100000
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     10001011101001000110000111100011

          - FUNCTION OUTPUT:  10001011101001000110000111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110011000010000101000110100

       - FUNCTION OUTPUT:          10001011101001000110000111100011

       - Left XOR FUNCTION OUTPUT: 00100101110001010110101111010111

       - Next Round Left 32 Bits:  11101001010100001000011111010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101110001010110101111010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001010100001000011111010111

       - Right 32 Bits:            00100101110001010110101111010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       00100101110001010110101111010111
          - S-Box Result:     11101001010110010000100001101101   [per every group of 4-bits]
          - Split Into Two:   1110100101011001 [L] 0000100001101101 [R]
          - Swap Halves:      00001000011011011110100101011001
          - Bit Inversion:    11110111100100100001011010100110
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     10101001101100010111101011111101

          - FUNCTION OUTPUT:  10101001101100010111101011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001010100001000011111010111

       - FUNCTION OUTPUT:          10101001101100010111101011111101

       - Left XOR FUNCTION OUTPUT: 01000000111000011111110100101010

       - Next Round Left 32 Bits:  00100101110001010110101111010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000111000011111110100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101110001010110101111010111

       - Right 32 Bits:            01000000111000011111110100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       01000000111000011111110100101010
          - S-Box Result:     01111111110010101011011011100100   [per every group of 4-bits]
          - Split Into Two:   0111111111001010 [L] 1011011011100100 [R]
          - Swap Halves:      10110110111001000111111111001010
          - Bit Inversion:    01001001000110111000000000110101
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     00111011100100010011010101011111

          - FUNCTION OUTPUT:  00111011100100010011010101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101110001010110101111010111

       - FUNCTION OUTPUT:          00111011100100010011010101011111

       - Left XOR FUNCTION OUTPUT: 00011110010101000101111010001000

       - Next Round Left 32 Bits:  01000000111000011111110100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110010101000101111010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000111000011111110100101010

       - Right 32 Bits:            00011110010101000101111010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       00011110010101000101111010001000
          - S-Box Result:     10101100100101111001110000100010   [per every group of 4-bits]
          - Split Into Two:   1010110010010111 [L] 1001110000100010 [R]
          - Swap Halves:      10011100001000101010110010010111
          - Bit Inversion:    01100011110111010101001101101000
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     11110011101101011100110101010010

          - FUNCTION OUTPUT:  11110011101101011100110101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000111000011111110100101010

       - FUNCTION OUTPUT:          11110011101101011100110101010010

       - Left XOR FUNCTION OUTPUT: 10110011010101000011000001111000

       - Next Round Left 32 Bits:  00011110010101000101111010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011010101000011000001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110010101000101111010001000

       - Right 32 Bits:            10110011010101000011000001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       10110011010101000011000001111000
          - S-Box Result:     10000001100101110001111111010010   [per every group of 4-bits]
          - Split Into Two:   1000000110010111 [L] 0001111111010010 [R]
          - Swap Halves:      00011111110100101000000110010111
          - Bit Inversion:    11100000001011010111111001101000
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     10100101001110101001011001110010

          - FUNCTION OUTPUT:  10100101001110101001011001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110010101000101111010001000

       - FUNCTION OUTPUT:          10100101001110101001011001110010

       - Left XOR FUNCTION OUTPUT: 10111011011011101100100011111010

       - Next Round Left 32 Bits:  10110011010101000011000001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011011011101100100011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011010101000011000001111000

       - Right 32 Bits:            10111011011011101100100011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       10111011011011101100100011111010
          - S-Box Result:     10001000000011000101001010110100   [per every group of 4-bits]
          - Split Into Two:   1000100000001100 [L] 0101001010110100 [R]
          - Swap Halves:      01010010101101001000100000001100
          - Bit Inversion:    10101101010010110111011111110011
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     11100001000110001110000110100000

          - FUNCTION OUTPUT:  11100001000110001110000110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011010101000011000001111000

       - FUNCTION OUTPUT:          11100001000110001110000110100000

       - Left XOR FUNCTION OUTPUT: 01010010010011001101000111011000

       - Next Round Left 32 Bits:  10111011011011101100100011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010010011001101000111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011011011101100100011111010

       - Right 32 Bits:            01010010010011001101000111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       01010010010011001101000111011000
          - S-Box Result:     10011110011101010110101001100010   [per every group of 4-bits]
          - Split Into Two:   1001111001110101 [L] 0110101001100010 [R]
          - Swap Halves:      01101010011000101001111001110101
          - Bit Inversion:    10010101100111010110000110001010
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     01110011011101000011001111010010

          - FUNCTION OUTPUT:  01110011011101000011001111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011011011101100100011111010

       - FUNCTION OUTPUT:          01110011011101000011001111010010

       - Left XOR FUNCTION OUTPUT: 11001000000110101111101100101000

       - Next Round Left 32 Bits:  01010010010011001101000111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000000110101111101100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100100000011010111110110010100001010010010011001101000111011000

 > Processed Block:     1100100000011010111110110010100001010010010011001101000111011000



Plaintext Block: 7:                                      1011010110110100110011100000010001001010101110111010011001001111

!!!CBC: Previous Ciphertext:                             1100100000011010111110110010100001010010010011001101000111011000

!!!CBC: Current Block XOR with Previous Ciphertext:      0111110110101110001101010010110000011000111101110111011110010111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101101011100011010100101100

       - Right 32 Bits:            00011000111101110111011110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       00011000111101110111011110010111
          - S-Box Result:     10100010101111011101110100111101   [per every group of 4-bits]
          - Split Into Two:   1010001010111101 [L] 1101110100111101 [R]
          - Swap Halves:      11011101001111011010001010111101
          - Bit Inversion:    00100010110000100101110101000010
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     01110001010101000000111000001110

          - FUNCTION OUTPUT:  01110001010101000000111000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101101011100011010100101100

       - FUNCTION OUTPUT:          01110001010101000000111000001110

       - Left XOR FUNCTION OUTPUT: 00001100111110100011101100100010

       - Next Round Left 32 Bits:  00011000111101110111011110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100111110100011101100100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000111101110111011110010111

       - Right 32 Bits:            00001100111110100011101100100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00001100111110100011101100100010
          - S-Box Result:     11110101101101000001100011101110   [per every group of 4-bits]
          - Split Into Two:   1111010110110100 [L] 0001100011101110 [R]
          - Swap Halves:      00011000111011101111010110110100
          - Bit Inversion:    11100111000100010000101001001011
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     00001110010000110101001010101101

          - FUNCTION OUTPUT:  00001110010000110101001010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000111101110111011110010111

       - FUNCTION OUTPUT:          00001110010000110101001010101101

       - Left XOR FUNCTION OUTPUT: 00010110101101000010010100111010

       - Next Round Left 32 Bits:  00001100111110100011101100100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110101101000010010100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100111110100011101100100010

       - Right 32 Bits:            00010110101101000010010100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       00010110101101000010010100111010
          - S-Box Result:     10100000100001111110100100010100   [per every group of 4-bits]
          - Split Into Two:   1010000010000111 [L] 1110100100010100 [R]
          - Swap Halves:      11101001000101001010000010000111
          - Bit Inversion:    00010110111010110101111101111000
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     00110001001000010011001111100010

          - FUNCTION OUTPUT:  00110001001000010011001111100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100111110100011101100100010

       - FUNCTION OUTPUT:          00110001001000010011001111100010

       - Left XOR FUNCTION OUTPUT: 00111101110110110000100011000000

       - Next Round Left 32 Bits:  00010110101101000010010100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101110110110000100011000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110101101000010010100111010

       - Right 32 Bits:            00111101110110110000100011000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       00111101110110110000100011000000
          - S-Box Result:     00010110011010001111001001011111   [per every group of 4-bits]
          - Split Into Two:   0001011001101000 [L] 1111001001011111 [R]
          - Swap Halves:      11110010010111110001011001101000
          - Bit Inversion:    00001101101000001110100110010111
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     00110111111010101111010001011110

          - FUNCTION OUTPUT:  00110111111010101111010001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110101101000010010100111010

       - FUNCTION OUTPUT:          00110111111010101111010001011110

       - Left XOR FUNCTION OUTPUT: 00100001010111101101000101100100

       - Next Round Left 32 Bits:  00111101110110110000100011000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001010111101101000101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101110110110000100011000000

       - Right 32 Bits:            00100001010111101101000101100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       00100001010111101101000101100100
          - S-Box Result:     11101010100111000110101000000111   [per every group of 4-bits]
          - Split Into Two:   1110101010011100 [L] 0110101000000111 [R]
          - Swap Halves:      01101010000001111110101010011100
          - Bit Inversion:    10010101111110000001010101100011
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     00111100101000001100001000110111

          - FUNCTION OUTPUT:  00111100101000001100001000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101110110110000100011000000

       - FUNCTION OUTPUT:          00111100101000001100001000110111

       - Left XOR FUNCTION OUTPUT: 00000001011110111100101011110111

       - Next Round Left 32 Bits:  00100001010111101101000101100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001011110111100101011110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001010111101101000101100100

       - Right 32 Bits:            00000001011110111100101011110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       00000001011110111100101011110111
          - S-Box Result:     11111010110110000101010010111101   [per every group of 4-bits]
          - Split Into Two:   1111101011011000 [L] 0101010010111101 [R]
          - Swap Halves:      01010100101111011111101011011000
          - Bit Inversion:    10101011010000100000010100100111
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     10110111000101001111110001010001

          - FUNCTION OUTPUT:  10110111000101001111110001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001010111101101000101100100

       - FUNCTION OUTPUT:          10110111000101001111110001010001

       - Left XOR FUNCTION OUTPUT: 10010110010010100010110100110101

       - Next Round Left 32 Bits:  00000001011110111100101011110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110010010100010110100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001011110111100101011110111

       - Right 32 Bits:            10010110010010100010110100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       10010110010010100010110100110101
          - S-Box Result:     00110000011101001110011000011001   [per every group of 4-bits]
          - Split Into Two:   0011000001110100 [L] 1110011000011001 [R]
          - Swap Halves:      11100110000110010011000001110100
          - Bit Inversion:    00011001111001101100111110001011
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     01100111101111010110000100001010

          - FUNCTION OUTPUT:  01100111101111010110000100001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001011110111100101011110111

       - FUNCTION OUTPUT:          01100111101111010110000100001010

       - Left XOR FUNCTION OUTPUT: 01100110110001101010101111111101

       - Next Round Left 32 Bits:  10010110010010100010110100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110110001101010101111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110010010100010110100110101

       - Right 32 Bits:            01100110110001101010101111111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       01100110110001101010101111111101
          - S-Box Result:     00000000010100000100100010110110   [per every group of 4-bits]
          - Split Into Two:   0000000001010000 [L] 0100100010110110 [R]
          - Swap Halves:      01001000101101100000000001010000
          - Bit Inversion:    10110111010010011111111110101111
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     00101101100000101100010101101001

          - FUNCTION OUTPUT:  00101101100000101100010101101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110010010100010110100110101

       - FUNCTION OUTPUT:          00101101100000101100010101101001

       - Left XOR FUNCTION OUTPUT: 10111011110010001110100001011100

       - Next Round Left 32 Bits:  01100110110001101010101111111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011110010001110100001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110110001101010101111111101

       - Right 32 Bits:            10111011110010001110100001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       10111011110010001110100001011100
          - S-Box Result:     10001000010100101100001010010101   [per every group of 4-bits]
          - Split Into Two:   1000100001010010 [L] 1100001010010101 [R]
          - Swap Halves:      11000010100101011000100001010010
          - Bit Inversion:    00111101011010100111011110101101
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     11100111000110111110011011000111

          - FUNCTION OUTPUT:  11100111000110111110011011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110110001101010101111111101

       - FUNCTION OUTPUT:          11100111000110111110011011000111

       - Left XOR FUNCTION OUTPUT: 10000001110111010100110100111010

       - Next Round Left 32 Bits:  10111011110010001110100001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001110111010100110100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011110010001110100001011100

       - Right 32 Bits:            10000001110111010100110100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       10000001110111010100110100111010
          - S-Box Result:     00101010011001100111011000010100   [per every group of 4-bits]
          - Split Into Two:   0010101001100110 [L] 0111011000010100 [R]
          - Swap Halves:      01110110000101000010101001100110
          - Bit Inversion:    10001001111010111101010110011001
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     11010000110111011000100000011010

          - FUNCTION OUTPUT:  11010000110111011000100000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011110010001110100001011100

       - FUNCTION OUTPUT:          11010000110111011000100000011010

       - Left XOR FUNCTION OUTPUT: 01101011000101010110000001000110

       - Next Round Left 32 Bits:  10000001110111010100110100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011000101010110000001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001110111010100110100111010

       - Right 32 Bits:            01101011000101010110000001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       01101011000101010110000001000110
          - S-Box Result:     00001000101010010000111101110000   [per every group of 4-bits]
          - Split Into Two:   0000100010101001 [L] 0000111101110000 [R]
          - Swap Halves:      00001111011100000000100010101001
          - Bit Inversion:    11110000100011111111011101010110
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     10101110101011001001101100001101

          - FUNCTION OUTPUT:  10101110101011001001101100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001110111010100110100111010

       - FUNCTION OUTPUT:          10101110101011001001101100001101

       - Left XOR FUNCTION OUTPUT: 00101111011100011101011000110111

       - Next Round Left 32 Bits:  01101011000101010110000001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111011100011101011000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011000101010110000001000110

       - Right 32 Bits:            00101111011100011101011000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       00101111011100011101011000110111
          - S-Box Result:     11101011110110100110000000011101   [per every group of 4-bits]
          - Split Into Two:   1110101111011010 [L] 0110000000011101 [R]
          - Swap Halves:      01100000000111011110101111011010
          - Bit Inversion:    10011111111000100001010000100101
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     11101101011010001010000101001111

          - FUNCTION OUTPUT:  11101101011010001010000101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011000101010110000001000110

       - FUNCTION OUTPUT:          11101101011010001010000101001111

       - Left XOR FUNCTION OUTPUT: 10000110011111011100000100001001

       - Next Round Left 32 Bits:  00101111011100011101011000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110011111011100000100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111011100011101011000110111

       - Right 32 Bits:            10000110011111011100000100001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       10000110011111011100000100001001
          - S-Box Result:     00100000110101100101101011110011   [per every group of 4-bits]
          - Split Into Two:   0010000011010110 [L] 0101101011110011 [R]
          - Swap Halves:      01011010111100110010000011010110
          - Bit Inversion:    10100101000011001101111100101001
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     00110101011001000100000100010011

          - FUNCTION OUTPUT:  00110101011001000100000100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111011100011101011000110111

       - FUNCTION OUTPUT:          00110101011001000100000100010011

       - Left XOR FUNCTION OUTPUT: 00011010000101011001011100100100

       - Next Round Left 32 Bits:  10000110011111011100000100001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010000101011001011100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110011111011100000100001001

       - Right 32 Bits:            00011010000101011001011100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       00011010000101011001011100100100
          - S-Box Result:     10100100101010010011110111100111   [per every group of 4-bits]
          - Split Into Two:   1010010010101001 [L] 0011110111100111 [R]
          - Swap Halves:      00111101111001111010010010101001
          - Bit Inversion:    11000010000110000101101101010110
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     10000111000011111011001101001100

          - FUNCTION OUTPUT:  10000111000011111011001101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110011111011100000100001001

       - FUNCTION OUTPUT:          10000111000011111011001101001100

       - Left XOR FUNCTION OUTPUT: 00000001011100100111001001000101

       - Next Round Left 32 Bits:  00011010000101011001011100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001011100100111001001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010000101011001011100100100

       - Right 32 Bits:            00000001011100100111001001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       00000001011100100111001001000101
          - S-Box Result:     11111010110111101101111001111001   [per every group of 4-bits]
          - Split Into Two:   1111101011011110 [L] 1101111001111001 [R]
          - Swap Halves:      11011110011110011111101011011110
          - Bit Inversion:    00100001100001100000010100100001
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     01101101110101011001001101110010

          - FUNCTION OUTPUT:  01101101110101011001001101110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010000101011001011100100100

       - FUNCTION OUTPUT:          01101101110101011001001101110010

       - Left XOR FUNCTION OUTPUT: 01110111110000000000010001010110

       - Next Round Left 32 Bits:  00000001011100100111001001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111110000000000010001010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001011100100111001001000101

       - Right 32 Bits:            01110111110000000000010001010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       01110111110000000000010001010110
          - S-Box Result:     11011101010111111111011110010000   [per every group of 4-bits]
          - Split Into Two:   1101110101011111 [L] 1111011110010000 [R]
          - Swap Halves:      11110111100100001101110101011111
          - Bit Inversion:    00001000011011110010001010100000
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     11101110100001100111000011111000

          - FUNCTION OUTPUT:  11101110100001100111000011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001011100100111001001000101

       - FUNCTION OUTPUT:          11101110100001100111000011111000

       - Left XOR FUNCTION OUTPUT: 11101111111101000000001010111101

       - Next Round Left 32 Bits:  01110111110000000000010001010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111111101000000001010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110111111110100000000101011110101110111110000000000010001010110

 > Processed Block:     1110111111110100000000101011110101110111110000000000010001010110



Plaintext Block: 8:                                      0110111000000101010011000010011001000001100011001000111110011001

!!!CBC: Previous Ciphertext:                             1110111111110100000000101011110101110111110000000000010001010110

!!!CBC: Current Block XOR with Previous Ciphertext:      1000000111110001010011101001101100110110010011001000101111001111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001111100010100111010011011

       - Right 32 Bits:            00110110010011001000101111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       00110110010011001000101111001111
          - S-Box Result:     00010000011101010010100001011011   [per every group of 4-bits]
          - Split Into Two:   0001000001110101 [L] 0010100001011011 [R]
          - Swap Halves:      00101000010110110001000001110101
          - Bit Inversion:    11010111101001001110111110001010
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     10000100001100101011110011000110

          - FUNCTION OUTPUT:  10000100001100101011110011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001111100010100111010011011

       - FUNCTION OUTPUT:          10000100001100101011110011000110

       - Left XOR FUNCTION OUTPUT: 00000101110000111111001001011101

       - Next Round Left 32 Bits:  00110110010011001000101111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101110000111111001001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110010011001000101111001111

       - Right 32 Bits:            00000101110000111111001001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00000101110000111111001001011101
          - S-Box Result:     11111001010100011011111010010110   [per every group of 4-bits]
          - Split Into Two:   1111100101010001 [L] 1011111010010110 [R]
          - Swap Halves:      10111110100101101111100101010001
          - Bit Inversion:    01000001011010010000011010101110
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     10101000001110110101111001001000

          - FUNCTION OUTPUT:  10101000001110110101111001001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110010011001000101111001111

       - FUNCTION OUTPUT:          10101000001110110101111001001000

       - Left XOR FUNCTION OUTPUT: 10011110011101111101010110000111

       - Next Round Left 32 Bits:  00000101110000111111001001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110011101111101010110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101110000111111001001011101

       - Right 32 Bits:            10011110011101111101010110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       10011110011101111101010110000111
          - S-Box Result:     00111100110111010110100100101101   [per every group of 4-bits]
          - Split Into Two:   0011110011011101 [L] 0110100100101101 [R]
          - Swap Halves:      01101001001011010011110011011101
          - Bit Inversion:    10010110110100101100001100100010
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     10110001000110001010111110111000

          - FUNCTION OUTPUT:  10110001000110001010111110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101110000111111001001011101

       - FUNCTION OUTPUT:          10110001000110001010111110111000

       - Left XOR FUNCTION OUTPUT: 10110100110110110101110111100101

       - Next Round Left 32 Bits:  10011110011101111101010110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100110110110101110111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110011101111101010110000111

       - Right 32 Bits:            10110100110110110101110111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       10110100110110110101110111100101
          - S-Box Result:     10000111011010001001011011001001   [per every group of 4-bits]
          - Split Into Two:   1000011101101000 [L] 1001011011001001 [R]
          - Swap Halves:      10010110110010011000011101101000
          - Bit Inversion:    01101001001101100111100010010111
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     01010011011111000110010101011110

          - FUNCTION OUTPUT:  01010011011111000110010101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110011101111101010110000111

       - FUNCTION OUTPUT:          01010011011111000110010101011110

       - Left XOR FUNCTION OUTPUT: 11001101000010111011000011011001

       - Next Round Left 32 Bits:  10110100110110110101110111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101000010111011000011011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100110110110101110111100101

       - Right 32 Bits:            11001101000010111011000011011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       11001101000010111011000011011001
          - S-Box Result:     01010110111110001000111101100011   [per every group of 4-bits]
          - Split Into Two:   0101011011111000 [L] 1000111101100011 [R]
          - Swap Halves:      10001111011000110101011011111000
          - Bit Inversion:    01110000100111001010100100000111
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     11011001110001000111111001010011

          - FUNCTION OUTPUT:  11011001110001000111111001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100110110110101110111100101

       - FUNCTION OUTPUT:          11011001110001000111111001010011

       - Left XOR FUNCTION OUTPUT: 01101101000111110010001110110110

       - Next Round Left 32 Bits:  11001101000010111011000011011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101000111110010001110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101000010111011000011011001

       - Right 32 Bits:            01101101000111110010001110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       01101101000111110010001110110110
          - S-Box Result:     00000110101010111110000110000000   [per every group of 4-bits]
          - Split Into Two:   0000011010101011 [L] 1110000110000000 [R]
          - Swap Halves:      11100001100000000000011010101011
          - Bit Inversion:    00011110011111111111100101010100
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     00000010001010010000000000100010

          - FUNCTION OUTPUT:  00000010001010010000000000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101000010111011000011011001

       - FUNCTION OUTPUT:          00000010001010010000000000100010

       - Left XOR FUNCTION OUTPUT: 11001111001000101011000011111011

       - Next Round Left 32 Bits:  01101101000111110010001110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111001000101011000011111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101000111110010001110110110

       - Right 32 Bits:            11001111001000101011000011111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       11001111001000101011000011111011
          - S-Box Result:     01011011111011101000111110111000   [per every group of 4-bits]
          - Split Into Two:   0101101111101110 [L] 1000111110111000 [R]
          - Swap Halves:      10001111101110000101101111101110
          - Bit Inversion:    01110000010001111010010000010001
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     00001110000111000000101010010000

          - FUNCTION OUTPUT:  00001110000111000000101010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101000111110010001110110110

       - FUNCTION OUTPUT:          00001110000111000000101010010000

       - Left XOR FUNCTION OUTPUT: 01100011000000110010100100100110

       - Next Round Left 32 Bits:  11001111001000101011000011111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011000000110010100100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111001000101011000011111011

       - Right 32 Bits:            01100011000000110010100100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       01100011000000110010100100100110
          - S-Box Result:     00000001111100011110001111100000   [per every group of 4-bits]
          - Split Into Two:   0000000111110001 [L] 1110001111100000 [R]
          - Swap Halves:      11100011111000000000000111110001
          - Bit Inversion:    00011100000111111111111000001110
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     10000110110101001100010011001000

          - FUNCTION OUTPUT:  10000110110101001100010011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111001000101011000011111011

       - FUNCTION OUTPUT:          10000110110101001100010011001000

       - Left XOR FUNCTION OUTPUT: 01001001111101100111010000110011

       - Next Round Left 32 Bits:  01100011000000110010100100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001111101100111010000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011000000110010100100100110

       - Right 32 Bits:            01001001111101100111010000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       01001001111101100111010000110011
          - S-Box Result:     01110011101100001101011100010001   [per every group of 4-bits]
          - Split Into Two:   0111001110110000 [L] 1101011100010001 [R]
          - Swap Halves:      11010111000100010111001110110000
          - Bit Inversion:    00101000111011101000110001001111
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     11110010100111110001110100100101

          - FUNCTION OUTPUT:  11110010100111110001110100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011000000110010100100100110

       - FUNCTION OUTPUT:          11110010100111110001110100100101

       - Left XOR FUNCTION OUTPUT: 10010001100111000011010000000011

       - Next Round Left 32 Bits:  01001001111101100111010000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001100111000011010000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001111101100111010000110011

       - Right 32 Bits:            10010001100111000011010000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       10010001100111000011010000000011
          - S-Box Result:     00111010001101010001011111110001   [per every group of 4-bits]
          - Split Into Two:   0011101000110101 [L] 0001011111110001 [R]
          - Swap Halves:      00010111111100010011101000110101
          - Bit Inversion:    11101000000011101100010111001010
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     10110001001110001001100001001001

          - FUNCTION OUTPUT:  10110001001110001001100001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001111101100111010000110011

       - FUNCTION OUTPUT:          10110001001110001001100001001001

       - Left XOR FUNCTION OUTPUT: 11111000110011101110110001111010

       - Next Round Left 32 Bits:  10010001100111000011010000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000110011101110110001111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001100111000011010000000011

       - Right 32 Bits:            11111000110011101110110001111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       11111000110011101110110001111010
          - S-Box Result:     10110010010111001100010111010100   [per every group of 4-bits]
          - Split Into Two:   1011001001011100 [L] 1100010111010100 [R]
          - Swap Halves:      11000101110101001011001001011100
          - Bit Inversion:    00111010001010110100110110100011
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     01100100000010000010000111111000

          - FUNCTION OUTPUT:  01100100000010000010000111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001100111000011010000000011

       - FUNCTION OUTPUT:          01100100000010000010000111111000

       - Left XOR FUNCTION OUTPUT: 11110101100101000001010111111011

       - Next Round Left 32 Bits:  11111000110011101110110001111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101100101000001010111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000110011101110110001111010

       - Right 32 Bits:            11110101100101000001010111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       11110101100101000001010111111011
          - S-Box Result:     10111001001101111010100110111000   [per every group of 4-bits]
          - Split Into Two:   1011100100110111 [L] 1010100110111000 [R]
          - Swap Halves:      10101001101110001011100100110111
          - Bit Inversion:    01010110010001110100011011001000
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     00100100110011011111001110100010

          - FUNCTION OUTPUT:  00100100110011011111001110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000110011101110110001111010

       - FUNCTION OUTPUT:          00100100110011011111001110100010

       - Left XOR FUNCTION OUTPUT: 11011100000000110001111111011000

       - Next Round Left 32 Bits:  11110101100101000001010111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100000000110001111111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101100101000001010111111011

       - Right 32 Bits:            11011100000000110001111111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       11011100000000110001111111011000
          - S-Box Result:     01100101111100011010101101100010   [per every group of 4-bits]
          - Split Into Two:   0110010111110001 [L] 1010101101100010 [R]
          - Swap Halves:      10101011011000100110010111110001
          - Bit Inversion:    01010100100111011001101000001110
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     11000100111101010000010000110100

          - FUNCTION OUTPUT:  11000100111101010000010000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101100101000001010111111011

       - FUNCTION OUTPUT:          11000100111101010000010000110100

       - Left XOR FUNCTION OUTPUT: 00110001011000010001000111001111

       - Next Round Left 32 Bits:  11011100000000110001111111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001011000010001000111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100000000110001111111011000

       - Right 32 Bits:            00110001011000010001000111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       00110001011000010001000111001111
          - S-Box Result:     00011010000010101010101001011011   [per every group of 4-bits]
          - Split Into Two:   0001101000001010 [L] 1010101001011011 [R]
          - Swap Halves:      10101010010110110001101000001010
          - Bit Inversion:    01010101101001001110010111110101
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     00010000101100110000110111101111

          - FUNCTION OUTPUT:  00010000101100110000110111101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100000000110001111111011000

       - FUNCTION OUTPUT:          00010000101100110000110111101111

       - Left XOR FUNCTION OUTPUT: 11001100101100000001001000110111

       - Next Round Left 32 Bits:  00110001011000010001000111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100101100000001001000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001011000010001000111001111

       - Right 32 Bits:            11001100101100000001001000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       11001100101100000001001000110111
          - S-Box Result:     01010101100011111010111000011101   [per every group of 4-bits]
          - Split Into Two:   0101010110001111 [L] 1010111000011101 [R]
          - Swap Halves:      10101110000111010101010110001111
          - Bit Inversion:    01010001111000101010101001110000
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     00011101101100010011110000100011

          - FUNCTION OUTPUT:  00011101101100010011110000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001011000010001000111001111

       - FUNCTION OUTPUT:          00011101101100010011110000100011

       - Left XOR FUNCTION OUTPUT: 00101100110100000010110111101100

       - Next Round Left 32 Bits:  11001100101100000001001000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100110100000010110111101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100101100000001001000110111

       - Right 32 Bits:            00101100110100000010110111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       00101100110100000010110111101100
          - S-Box Result:     11100101011011111110011011000101   [per every group of 4-bits]
          - Split Into Two:   1110010101101111 [L] 1110011011000101 [R]
          - Swap Halves:      11100110110001011110010101101111
          - Bit Inversion:    00011001001110100001101010010000
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     11111111110100110100100011001000

          - FUNCTION OUTPUT:  11111111110100110100100011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100101100000001001000110111

       - FUNCTION OUTPUT:          11111111110100110100100011001000

       - Left XOR FUNCTION OUTPUT: 00110011011000110101101011111111

       - Next Round Left 32 Bits:  00101100110100000010110111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011011000110101101011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011001101100011010110101111111100101100110100000010110111101100

 > Processed Block:     0011001101100011010110101111111100101100110100000010110111101100



Plaintext Block: 9:                                      1010010100011110100100100101000110001001001001010100110100000100

!!!CBC: Previous Ciphertext:                             0011001101100011010110101111111100101100110100000010110111101100

!!!CBC: Current Block XOR with Previous Ciphertext:      1001011001111101110010001010111010100101111101010110000011101000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110011111011100100010101110

       - Right 32 Bits:            10100101111101010110000011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011001011010110011101010101001101110000101100   [Subkey: 1]
          - Input Half:       10100101111101010110000011101000
          - S-Box Result:     01001001101110010000111111000010   [per every group of 4-bits]
          - Split Into Two:   0100100110111001 [L] 0000111111000010 [R]
          - Swap Halves:      00001111110000100100100110111001
          - Bit Inversion:    11110000001111011011011001000110
          - Compressed Key:   01010011100101100101001101001100   [done by compression P-Box]
          - XOR with Key:     10100011101010111110010100001010

          - FUNCTION OUTPUT:  10100011101010111110010100001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110011111011100100010101110

       - FUNCTION OUTPUT:          10100011101010111110010100001010

       - Left XOR FUNCTION OUTPUT: 00110101110101100010110110100100

       - Next Round Left 32 Bits:  10100101111101010110000011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101110101100010110110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101111101010110000011101000

       - Right 32 Bits:            00110101110101100010110110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100110100101001100010101010110010001111010011001   [Subkey: 2]
          - Input Half:       00110101110101100010110110100100
          - S-Box Result:     00011001011000001110011001000111   [per every group of 4-bits]
          - Split Into Two:   0001100101100000 [L] 1110011001000111 [R]
          - Swap Halves:      11100110010001110001100101100000
          - Bit Inversion:    00011001101110001110011010011111
          - Compressed Key:   11101001010100100101100011100110   [done by compression P-Box]
          - XOR with Key:     11110000111010101011111001111001

          - FUNCTION OUTPUT:  11110000111010101011111001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101111101010110000011101000

       - FUNCTION OUTPUT:          11110000111010101011111001111001

       - Left XOR FUNCTION OUTPUT: 01010101000111111101111010010001

       - Next Round Left 32 Bits:  00110101110101100010110110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101000111111101111010010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101110101100010110110100100

       - Right 32 Bits:            01010101000111111101111010010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001011010110011101010101001101110000101100110101   [Subkey: 3]
          - Input Half:       01010101000111111101111010010001
          - S-Box Result:     10011001101010110110110000111010   [per every group of 4-bits]
          - Split Into Two:   1001100110101011 [L] 0110110000111010 [R]
          - Swap Halves:      01101100001110101001100110101011
          - Bit Inversion:    10010011110001010110011001010100
          - Compressed Key:   00100111110010100110110010011010   [done by compression P-Box]
          - XOR with Key:     10110100000011110000101011001110

          - FUNCTION OUTPUT:  10110100000011110000101011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101110101100010110110100100

       - FUNCTION OUTPUT:          10110100000011110000101011001110

       - Left XOR FUNCTION OUTPUT: 10000001110110010010011101101010

       - Next Round Left 32 Bits:  01010101000111111101111010010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001110110010010011101101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101000111111101111010010001

       - Right 32 Bits:            10000001110110010010011101101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110100101001100010101010110010001111010011001010110   [Subkey: 4]
          - Input Half:       10000001110110010010011101101010
          - S-Box Result:     00101010011000111110110100000100   [per every group of 4-bits]
          - Split Into Two:   0010101001100011 [L] 1110110100000100 [R]
          - Swap Halves:      11101101000001000010101001100011
          - Bit Inversion:    00010010111110111101010110011100
          - Compressed Key:   00111010010010100001110111001001   [done by compression P-Box]
          - XOR with Key:     00101000101100011100100001010101

          - FUNCTION OUTPUT:  00101000101100011100100001010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101000111111101111010010001

       - FUNCTION OUTPUT:          00101000101100011100100001010101

       - Left XOR FUNCTION OUTPUT: 01111101101011100001011011000100

       - Next Round Left 32 Bits:  10000001110110010010011101101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101101011100001011011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001110110010010011101101010

       - Right 32 Bits:            01111101101011100001011011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001011010110011101010101001101110000101100110101001000   [Subkey: 5]
          - Input Half:       01111101101011100001011011000100
          - S-Box Result:     11010110010011001010000001010111   [per every group of 4-bits]
          - Split Into Two:   1101011001001100 [L] 1010000001010111 [R]
          - Swap Halves:      10100000010101111101011001001100
          - Bit Inversion:    01011111101010000010100110110011
          - Compressed Key:   10101001010110001101011101010100   [done by compression P-Box]
          - XOR with Key:     11110110111100001111111011100111

          - FUNCTION OUTPUT:  11110110111100001111111011100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001110110010010011101101010

       - FUNCTION OUTPUT:          11110110111100001111111011100111

       - Left XOR FUNCTION OUTPUT: 01110111001010011101100110001101

       - Next Round Left 32 Bits:  01111101101011100001011011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111001010011101100110001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101101011100001011011000100

       - Right 32 Bits:            01110111001010011101100110001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101001100010101010110010001111010011001010110111001   [Subkey: 6]
          - Input Half:       01110111001010011101100110001101
          - S-Box Result:     11011101111000110110001100100110   [per every group of 4-bits]
          - Split Into Two:   1101110111100011 [L] 0110001100100110 [R]
          - Swap Halves:      01100011001001101101110111100011
          - Bit Inversion:    10011100110110010010001000011100
          - Compressed Key:   00011100010101101111100101110110   [done by compression P-Box]
          - XOR with Key:     10000000100011111101101101101010

          - FUNCTION OUTPUT:  10000000100011111101101101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101101011100001011011000100

       - FUNCTION OUTPUT:          10000000100011111101101101101010

       - Left XOR FUNCTION OUTPUT: 11111101001000011100110110101110

       - Next Round Left 32 Bits:  01110111001010011101100110001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101001000011100110110101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111001010011101100110001101

       - Right 32 Bits:            11111101001000011100110110101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110011101010101001101110000101100110101001000110010   [Subkey: 7]
          - Input Half:       11111101001000011100110110101110
          - S-Box Result:     10110110111010100101011001001100   [per every group of 4-bits]
          - Split Into Two:   1011011011101010 [L] 0101011001001100 [R]
          - Swap Halves:      01010110010011001011011011101010
          - Bit Inversion:    10101001101100110100100100010101
          - Compressed Key:   01111110010110111010111010000001   [done by compression P-Box]
          - XOR with Key:     11010111111010001110011110010100

          - FUNCTION OUTPUT:  11010111111010001110011110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111001010011101100110001101

       - FUNCTION OUTPUT:          11010111111010001110011110010100

       - Left XOR FUNCTION OUTPUT: 10100000110000010011111000011001

       - Next Round Left 32 Bits:  11111101001000011100110110101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000110000010011111000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101001000011100110110101110

       - Right 32 Bits:            10100000110000010011111000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100010101010110010001111010011001010110111001101001   [Subkey: 8]
          - Input Half:       10100000110000010011111000011001
          - S-Box Result:     01001111010110100001110010100011   [per every group of 4-bits]
          - Split Into Two:   0100111101011010 [L] 0001110010100011 [R]
          - Swap Halves:      00011100101000110100111101011010
          - Bit Inversion:    11100011010111001011000010100101
          - Compressed Key:   10011010110010110011101011000110   [done by compression P-Box]
          - XOR with Key:     01111001100101111000101001100011

          - FUNCTION OUTPUT:  01111001100101111000101001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101001000011100110110101110

       - FUNCTION OUTPUT:          01111001100101111000101001100011

       - Left XOR FUNCTION OUTPUT: 10000100101101100100011111001101

       - Next Round Left 32 Bits:  10100000110000010011111000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100101101100100011111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000110000010011111000011001

       - Right 32 Bits:            10000100101101100100011111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101010101001101110000101100110101001000110010110101   [Subkey: 9]
          - Input Half:       10000100101101100100011111001101
          - S-Box Result:     00100111100000000111110101010110   [per every group of 4-bits]
          - Split Into Two:   0010011110000000 [L] 0111110101010110 [R]
          - Swap Halves:      01111101010101100010011110000000
          - Bit Inversion:    10000010101010011101100001111111
          - Compressed Key:   11011010011100011001000101101010   [done by compression P-Box]
          - XOR with Key:     01011000110110000100100100010101

          - FUNCTION OUTPUT:  01011000110110000100100100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000110000010011111000011001

       - FUNCTION OUTPUT:          01011000110110000100100100010101

       - Left XOR FUNCTION OUTPUT: 11111000000110010111011100001100

       - Next Round Left 32 Bits:  10000100101101100100011111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000000110010111011100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100101101100100011111001101

       - Right 32 Bits:            11111000000110010111011100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101010110010001111010011001010110111001101001010011   [Subkey: 10]
          - Input Half:       11111000000110010111011100001100
          - S-Box Result:     10110010101000111101110111110101   [per every group of 4-bits]
          - Split Into Two:   1011001010100011 [L] 1101110111110101 [R]
          - Swap Halves:      11011101111101011011001010100011
          - Bit Inversion:    00100010000010100100110101011100
          - Compressed Key:   01011001001101100101110110000011   [done by compression P-Box]
          - XOR with Key:     01111011001111000001000011011111

          - FUNCTION OUTPUT:  01111011001111000001000011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100101101100100011111001101

       - FUNCTION OUTPUT:          01111011001111000001000011011111

       - Left XOR FUNCTION OUTPUT: 11111111100010100101011100010010

       - Next Round Left 32 Bits:  11111000000110010111011100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111100010100101011100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000000110010111011100001100

       - Right 32 Bits:            11111111100010100101011100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101001101110000101100110101001000110010110101100111   [Subkey: 11]
          - Input Half:       11111111100010100101011100010010
          - S-Box Result:     10111011001001001001110110101110   [per every group of 4-bits]
          - Split Into Two:   1011101100100100 [L] 1001110110101110 [R]
          - Swap Halves:      10011101101011101011101100100100
          - Bit Inversion:    01100010010100010100010011011011
          - Compressed Key:   01011110001000110110110001011011   [done by compression P-Box]
          - XOR with Key:     00111100011100100010100010000000

          - FUNCTION OUTPUT:  00111100011100100010100010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000000110010111011100001100

       - FUNCTION OUTPUT:          00111100011100100010100010000000

       - Left XOR FUNCTION OUTPUT: 11000100011010110101111110001100

       - Next Round Left 32 Bits:  11111111100010100101011100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100011010110101111110001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111100010100101011100010010

       - Right 32 Bits:            11000100011010110101111110001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010001111010011001010110111001101001010011000101   [Subkey: 12]
          - Input Half:       11000100011010110101111110001100
          - S-Box Result:     01010111000010001001101100100101   [per every group of 4-bits]
          - Split Into Two:   0101011100001000 [L] 1001101100100101 [R]
          - Swap Halves:      10011011001001010101011100001000
          - Bit Inversion:    01100100110110101010100011110111
          - Compressed Key:   01110010100010101011010101101010   [done by compression P-Box]
          - XOR with Key:     00010110010100000001110110011101

          - FUNCTION OUTPUT:  00010110010100000001110110011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111100010100101011100010010

       - FUNCTION OUTPUT:          00010110010100000001110110011101

       - Left XOR FUNCTION OUTPUT: 11101001110110100100101010001111

       - Next Round Left 32 Bits:  11000100011010110101111110001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001110110100100101010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100011010110101111110001100

       - Right 32 Bits:            11101001110110100100101010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101110000101100110101001000110010110101100111010101   [Subkey: 13]
          - Input Half:       11101001110110100100101010001111
          - S-Box Result:     11000011011001000111010000101011   [per every group of 4-bits]
          - Split Into Two:   1100001101100100 [L] 0111010000101011 [R]
          - Swap Halves:      01110100001010111100001101100100
          - Bit Inversion:    10001011110101000011110010011011
          - Compressed Key:   10010000011010001001111000111010   [done by compression P-Box]
          - XOR with Key:     00011011101111001010001010100001

          - FUNCTION OUTPUT:  00011011101111001010001010100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100011010110101111110001100

       - FUNCTION OUTPUT:          00011011101111001010001010100001

       - Left XOR FUNCTION OUTPUT: 11011111110101111111110100101101

       - Next Round Left 32 Bits:  11101001110110100100101010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111110101111111110100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001110110100100101010001111

       - Right 32 Bits:            11011111110101111111110100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010001111010011001010110111001101001010011000101010101   [Subkey: 14]
          - Input Half:       11011111110101111111110100101101
          - S-Box Result:     01101011011011011011011011100110   [per every group of 4-bits]
          - Split Into Two:   0110101101101101 [L] 1011011011100110 [R]
          - Swap Halves:      10110110111001100110101101101101
          - Bit Inversion:    01001001000110011001010010010010
          - Compressed Key:   01000101000101111110100000011010   [done by compression P-Box]
          - XOR with Key:     00001100000011100111110010001000

          - FUNCTION OUTPUT:  00001100000011100111110010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001110110100100101010001111

       - FUNCTION OUTPUT:          00001100000011100111110010001000

       - Left XOR FUNCTION OUTPUT: 11100101110101000011011000000111

       - Next Round Left 32 Bits:  11011111110101111111110100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101110101000011011000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111110101111111110100101101

       - Right 32 Bits:            11100101110101000011011000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000101100110101001000110010110101100111010101010011   [Subkey: 15]
          - Input Half:       11100101110101000011011000000111
          - S-Box Result:     11001001011001110001000011111101   [per every group of 4-bits]
          - Split Into Two:   1100100101100111 [L] 0001000011111101 [R]
          - Swap Halves:      00010000111111011100100101100111
          - Bit Inversion:    11101111000000100011011010011000
          - Compressed Key:   01001100010100111001011001010011   [done by compression P-Box]
          - XOR with Key:     10100011010100011010000011001011

          - FUNCTION OUTPUT:  10100011010100011010000011001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111110101111111110100101101

       - FUNCTION OUTPUT:          10100011010100011010000011001011

       - Left XOR FUNCTION OUTPUT: 01111100100001100101110111100110

       - Next Round Left 32 Bits:  11100101110101000011011000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100100001100101110111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101110101000011011000000111

       - Right 32 Bits:            01111100100001100101110111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010011001010110111001101001010011000101010101100100   [Subkey: 16]
          - Input Half:       01111100100001100101110111100110
          - S-Box Result:     11010101001000001001011011000000   [per every group of 4-bits]
          - Split Into Two:   1101010100100000 [L] 1001011011000000 [R]
          - Swap Halves:      10010110110000001101010100100000
          - Bit Inversion:    01101001001111110010101011011111
          - Compressed Key:   11100110111010010101001001011000   [done by compression P-Box]
          - XOR with Key:     10001111110101100111100010000111

          - FUNCTION OUTPUT:  10001111110101100111100010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101110101000011011000000111

       - FUNCTION OUTPUT:          10001111110101100111100010000111

       - Left XOR FUNCTION OUTPUT: 01101010000000100100111010000000

       - Next Round Left 32 Bits:  01111100100001100101110111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010000000100100111010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110101000000010010011101000000001111100100001100101110111100110

 > Processed Block:     0110101000000010010011101000000001111100100001100101110111100110




BLOCKS IN ASCII:             ??hîZ¢[ó{Qa¬÷É~¿Ï?P«ôwqÎ[M?YÈb?ay~ë?¯õ?ÊÈû(RLÑØïô½wÀV3cZÿ,Ð-ìjN?|?]æ

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: kyElQni
In Binary:  01101011011110010100010101101100010100010110111001101001

Subkeys:    Key i = Key (i - 1) [Shifted left by 3 and then inverted]

Subkey 1  : 10100100001101011101010010011101011101001000110010110100
Subkey 2  : 11011110010100010101101100010100010110111001101001011010
Subkey 3  : 00001101011101010010011101011101001000110010110100101001
Subkey 4  : 10010100010101101100010100010110111001101001011010110111
Subkey 5  : 01011101010010011101011101001000110010110100101001000011
Subkey 6  : 00010101101100010100010110111001101001011010110111100101
Subkey 7  : 01010010011101011101001000110010110100101001000011010111
Subkey 8  : 01101100010100010110111001101001011010110111100101000101
Subkey 9  : 10011101011101001000110010110100101001000011010111010100
Subkey 10 : 00010100010110111001101001011010110111100101000101011011
Subkey 11 : 01011101001000110010110100101001000011010111010100100111
Subkey 12 : 00010110111001101001011010110111100101000101011011000101
Subkey 13 : 01001000110010110100101001000011010111010100100111010111
Subkey 14 : 10111001101001011010110111100101000101011011000101000101
Subkey 15 : 00110010110100101001000011010111010100100111010111010010
Subkey 16 : 01101001011010110111100101000101011011000101000101101110

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ??hîZ¢[ó{Qa¬÷É~¿Ï?P«ôwqÎ[M?YÈb?ay~ë?¯õ?ÊÈû(RLÑØïô½wÀV3cZÿ,Ð-ìjN?|?]æ

Data padded with spaces : ??hîZ¢[ó{Qa¬÷É~¿Ï?P«ôwqÎ[M?YÈb?ay~ë?¯õ?ÊÈû(RLÑØïô½wÀV3cZÿ,Ð-ìjN?|?]æ[Padded with '0' spaces]

Data in ASCII           : 140,129,104,238,90,162,91,243,123,81,97,172,247,201,126,191,207,159,80,171,244,119,113,206,91,77,150,89,200,98,144,97,121,126,235,151,175,245,144,202,200,26,251,40,82,76,209,216,239,244,2,189,119,192,4,86,51,99,90,255,44,208,45,236,106,2,78,128,124,134,93,230,

Data in Binary          : 10001100,10000001,01101000,11101110,01011010,10100010,01011011,11110011,01111011,01010001,01100001,10101100,11110111,11001001,01111110,10111111,11001111,10011111,01010000,10101011,11110100,01110111,01110001,11001110,01011011,01001101,10010110,01011001,11001000,01100010,10010000,01100001,01111001,01111110,11101011,10010111,10101111,11110101,10010000,11001010,11001000,00011010,11111011,00101000,01010010,01001100,11010001,11011000,11101111,11110100,00000010,10111101,01110111,11000000,00000100,01010110,00110011,01100011,01011010,11111111,00101100,11010000,00101101,11101100,01101010,00000010,01001110,10000000,01111100,10000110,01011101,11100110,

Data in 64-bit Blocks   : 1000110010000001011010001110111001011010101000100101101111110011,0111101101010001011000011010110011110111110010010111111010111111,1100111110011111010100001010101111110100011101110111000111001110,0101101101001101100101100101100111001000011000101001000001100001,0111100101111110111010111001011110101111111101011001000011001010,1100100000011010111110110010100001010010010011001101000111011000,1110111111110100000000101011110101110111110000000000010001010110,0011001101100011010110101111111100101100110100000010110111101100,0110101000000010010011101000000001111100100001100101110111100110,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101010001110100011001010100100001001010011001010101010001001001)

Ciphertext Block 1:                                      1000110010000001011010001110111001011010101000100101101111110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100100000010110100011101110

       - Right 32 Bits:            01011010101000100101101111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       01011010101000100101101111110011
          - S-Box Result:     10010100010011101001100010110001   [per every group of 4-bits]
          - Split Into Two:   1001010001001110 [L] 1001100010110001 [R]
          - Swap Halves:      10011000101100011001010001001110
          - Bit Inversion:    01100111010011100110101110110001
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     11100010101101100001100110101100

          - FUNCTION OUTPUT:  11100010101101100001100110101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100100000010110100011101110

       - FUNCTION OUTPUT:          11100010101101100001100110101100

       - Left XOR FUNCTION OUTPUT: 01101110001101110111000101000010

       - Next Round Left 32 Bits:  01011010101000100101101111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110001101110111000101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010101000100101101111110011

       - Right 32 Bits:            01101110001101110111000101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       01101110001101110111000101000010
          - S-Box Result:     00001100000111011101101001111110   [per every group of 4-bits]
          - Split Into Two:   0000110000011101 [L] 1101101001111110 [R]
          - Swap Halves:      11011010011111100000110000011101
          - Bit Inversion:    00100101100000011111001111100010
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     01001101100111111010010110010011

          - FUNCTION OUTPUT:  01001101100111111010010110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010101000100101101111110011

       - FUNCTION OUTPUT:          01001101100111111010010110010011

       - Left XOR FUNCTION OUTPUT: 00010111001111011111111001100000

       - Next Round Left 32 Bits:  01101110001101110111000101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111001111011111111001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110001101110111000101000010

       - Right 32 Bits:            00010111001111011111111001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       00010111001111011111111001100000
          - S-Box Result:     10101101000101101011110000001111   [per every group of 4-bits]
          - Split Into Two:   1010110100010110 [L] 1011110000001111 [R]
          - Swap Halves:      10111100000011111010110100010110
          - Bit Inversion:    01000011111100000101001011101001
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     10000101010111010001101111110011

          - FUNCTION OUTPUT:  10000101010111010001101111110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110001101110111000101000010

       - FUNCTION OUTPUT:          10000101010111010001101111110011

       - Left XOR FUNCTION OUTPUT: 11101011011010100110101010110001

       - Next Round Left 32 Bits:  00010111001111011111111001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011011010100110101010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111001111011111111001100000

       - Right 32 Bits:            11101011011010100110101010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       11101011011010100110101010110001
          - S-Box Result:     11001000000001000000010010001010   [per every group of 4-bits]
          - Split Into Two:   1100100000000100 [L] 0000010010001010 [R]
          - Swap Halves:      00000100100010101100100000000100
          - Bit Inversion:    11111011011101010011011111111011
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     01111010000111010110110111000000

          - FUNCTION OUTPUT:  01111010000111010110110111000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111001111011111111001100000

       - FUNCTION OUTPUT:          01111010000111010110110111000000

       - Left XOR FUNCTION OUTPUT: 01101101001000001001001110100000

       - Next Round Left 32 Bits:  11101011011010100110101010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101001000001001001110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011011010100110101010110001

       - Right 32 Bits:            01101101001000001001001110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       01101101001000001001001110100000
          - S-Box Result:     00000110111011110011000101001111   [per every group of 4-bits]
          - Split Into Two:   0000011011101111 [L] 0011000101001111 [R]
          - Swap Halves:      00110001010011110000011011101111
          - Bit Inversion:    11001110101100001111100100010000
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     10111000101001110011101111111010

          - FUNCTION OUTPUT:  10111000101001110011101111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011011010100110101010110001

       - FUNCTION OUTPUT:          10111000101001110011101111111010

       - Left XOR FUNCTION OUTPUT: 01010011110011010101000101001011

       - Next Round Left 32 Bits:  01101101001000001001001110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011110011010101000101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101001000001001001110100000

       - Right 32 Bits:            01010011110011010101000101001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       01010011110011010101000101001011
          - S-Box Result:     10010001010101101001101001111000   [per every group of 4-bits]
          - Split Into Two:   1001000101010110 [L] 1001101001111000 [R]
          - Swap Halves:      10011010011110001001000101010110
          - Bit Inversion:    01100101100001110110111010101001
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     10110001001001100010010011110010

          - FUNCTION OUTPUT:  10110001001001100010010011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101001000001001001110100000

       - FUNCTION OUTPUT:          10110001001001100010010011110010

       - Left XOR FUNCTION OUTPUT: 11011100000001101011011101010010

       - Next Round Left 32 Bits:  01010011110011010101000101001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100000001101011011101010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011110011010101000101001011

       - Right 32 Bits:            11011100000001101011011101010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       11011100000001101011011101010010
          - S-Box Result:     01100101111100001000110110011110   [per every group of 4-bits]
          - Split Into Two:   0110010111110000 [L] 1000110110011110 [R]
          - Swap Halves:      10001101100111100110010111110000
          - Bit Inversion:    01110010011000011001101000001111
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     00101011010110110000110000011000

          - FUNCTION OUTPUT:  00101011010110110000110000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011110011010101000101001011

       - FUNCTION OUTPUT:          00101011010110110000110000011000

       - Left XOR FUNCTION OUTPUT: 01111000100101100101110101010011

       - Next Round Left 32 Bits:  11011100000001101011011101010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000100101100101110101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100000001101011011101010010

       - Right 32 Bits:            01111000100101100101110101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       01111000100101100101110101010011
          - S-Box Result:     11010010001100001001011010010001   [per every group of 4-bits]
          - Split Into Two:   1101001000110000 [L] 1001011010010001 [R]
          - Swap Halves:      10010110100100011101001000110000
          - Bit Inversion:    01101001011011100010110111001111
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     10110111010010011000110110110111

          - FUNCTION OUTPUT:  10110111010010011000110110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100000001101011011101010010

       - FUNCTION OUTPUT:          10110111010010011000110110110111

       - Left XOR FUNCTION OUTPUT: 01101011010011110011101011100101

       - Next Round Left 32 Bits:  01111000100101100101110101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011010011110011101011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000100101100101110101010011

       - Right 32 Bits:            01101011010011110011101011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       01101011010011110011101011100101
          - S-Box Result:     00001000011110110001010011001001   [per every group of 4-bits]
          - Split Into Two:   0000100001111011 [L] 0001010011001001 [R]
          - Swap Halves:      00010100110010010000100001111011
          - Bit Inversion:    11101011001101101111011110000100
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     01110011110111111000100110011110

          - FUNCTION OUTPUT:  01110011110111111000100110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000100101100101110101010011

       - FUNCTION OUTPUT:          01110011110111111000100110011110

       - Left XOR FUNCTION OUTPUT: 00001011010010011101010011001101

       - Next Round Left 32 Bits:  01101011010011110011101011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011010010011101010011001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011010011110011101011100101

       - Right 32 Bits:            00001011010010011101010011001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       00001011010010011101010011001101
          - S-Box Result:     11111000011100110110011101010110   [per every group of 4-bits]
          - Split Into Two:   1111100001110011 [L] 0110011101010110 [R]
          - Swap Halves:      01100111010101101111100001110011
          - Bit Inversion:    10011000101010010000011110001100
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     11110110111110101001001010100111

          - FUNCTION OUTPUT:  11110110111110101001001010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011010011110011101011100101

       - FUNCTION OUTPUT:          11110110111110101001001010100111

       - Left XOR FUNCTION OUTPUT: 10011101101101011010100001000010

       - Next Round Left 32 Bits:  00001011010010011101010011001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101101101011010100001000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011010010011101010011001101

       - Right 32 Bits:            10011101101101011010100001000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       10011101101101011010100001000010
          - S-Box Result:     00110110100010010100001001111110   [per every group of 4-bits]
          - Split Into Two:   0011011010001001 [L] 0100001001111110 [R]
          - Swap Halves:      01000010011111100011011010001001
          - Bit Inversion:    10111101100000011100100101110110
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     11100001110001100010000000001100

          - FUNCTION OUTPUT:  11100001110001100010000000001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011010010011101010011001101

       - FUNCTION OUTPUT:          11100001110001100010000000001100

       - Left XOR FUNCTION OUTPUT: 11101010100011111111010011000001

       - Next Round Left 32 Bits:  10011101101101011010100001000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010100011111111010011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101101101011010100001000010

       - Right 32 Bits:            11101010100011111111010011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       11101010100011111111010011000001
          - S-Box Result:     11000100001010111011011101011010   [per every group of 4-bits]
          - Split Into Two:   1100010000101011 [L] 1011011101011010 [R]
          - Swap Halves:      10110111010110101100010000101011
          - Bit Inversion:    01001000101001010011101111010100
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     10011001111111011010010101010111

          - FUNCTION OUTPUT:  10011001111111011010010101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101101101011010100001000010

       - FUNCTION OUTPUT:          10011001111111011010010101010111

       - Left XOR FUNCTION OUTPUT: 00000100010010000000110100010101

       - Next Round Left 32 Bits:  11101010100011111111010011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100010010000000110100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010100011111111010011000001

       - Right 32 Bits:            00000100010010000000110100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       00000100010010000000110100010101
          - S-Box Result:     11110111011100101111011010101001   [per every group of 4-bits]
          - Split Into Two:   1111011101110010 [L] 1111011010101001 [R]
          - Swap Halves:      11110110101010011111011101110010
          - Bit Inversion:    00001001010101100000100010001101
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     01010011000101001011110101100110

          - FUNCTION OUTPUT:  01010011000101001011110101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010100011111111010011000001

       - FUNCTION OUTPUT:          01010011000101001011110101100110

       - Left XOR FUNCTION OUTPUT: 10111001100110110100100110100111

       - Next Round Left 32 Bits:  00000100010010000000110100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001100110110100100110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100010010000000110100010101

       - Right 32 Bits:            10111001100110110100100110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       10111001100110110100100110100111
          - S-Box Result:     10000011001110000111001101001101   [per every group of 4-bits]
          - Split Into Two:   1000001100111000 [L] 0111001101001101 [R]
          - Swap Halves:      01110011010011011000001100111000
          - Bit Inversion:    10001100101100100111110011000111
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     00010010001110000001000010010001

          - FUNCTION OUTPUT:  00010010001110000001000010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100010010000000110100010101

       - FUNCTION OUTPUT:          00010010001110000001000010010001

       - Left XOR FUNCTION OUTPUT: 00010110011100000001110110000100

       - Next Round Left 32 Bits:  10111001100110110100100110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110011100000001110110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001100110110100100110100111

       - Right 32 Bits:            00010110011100000001110110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       00010110011100000001110110000100
          - S-Box Result:     10100000110111111010011000100111   [per every group of 4-bits]
          - Split Into Two:   1010000011011111 [L] 1010011000100111 [R]
          - Swap Halves:      10100110001001111010000011011111
          - Bit Inversion:    01011001110110000101111100100000
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     10100001101010100100001010100101

          - FUNCTION OUTPUT:  10100001101010100100001010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001100110110100100110100111

       - FUNCTION OUTPUT:          10100001101010100100001010100101

       - Left XOR FUNCTION OUTPUT: 00011000001100010000101100000010

       - Next Round Left 32 Bits:  00010110011100000001110110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000001100010000101100000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110011100000001110110000100

       - Right 32 Bits:            00011000001100010000101100000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       00011000001100010000101100000010
          - S-Box Result:     10100010000110101111100011111110   [per every group of 4-bits]
          - Split Into Two:   1010001000011010 [L] 1111100011111110 [R]
          - Swap Halves:      11111000111111101010001000011010
          - Bit Inversion:    00000111000000010101110111100101
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     00011001010101110010110010001101

          - FUNCTION OUTPUT:  00011001010101110010110010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110011100000001110110000100

       - FUNCTION OUTPUT:          00011001010101110010110010001101

       - Left XOR FUNCTION OUTPUT: 00001111001001110011000100001001

       - Next Round Left 32 Bits:  00011000001100010000101100000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111001001110011000100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000111100100111001100010000100100011000001100010000101100000010

 > Decrypted Block:     0000111100100111001100010000100100011000001100010000101100000010


!!!CBC: Previous Ciphertext:                             0101010001110100011001010100100001001010011001010101010001001001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101101010011010101000100000101010010010101000101111101001011

 > Final Processed Block:                                0101101101010011010101000100000101010010010101000101111101001011



Ciphertext Block 2:                                      0111101101010001011000011010110011110111110010010111111010111111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011010100010110000110101100

       - Right 32 Bits:            11110111110010010111111010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       11110111110010010111111010111111
          - S-Box Result:     10111101010100111101110010001011   [per every group of 4-bits]
          - Split Into Two:   1011110101010011 [L] 1101110010001011 [R]
          - Swap Halves:      11011100100010111011110101010011
          - Bit Inversion:    00100011011101000100001010101100
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     10100110100011000011000010110001

          - FUNCTION OUTPUT:  10100110100011000011000010110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011010100010110000110101100

       - FUNCTION OUTPUT:          10100110100011000011000010110001

       - Left XOR FUNCTION OUTPUT: 11011101110111010101000100011101

       - Next Round Left 32 Bits:  11110111110010010111111010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101110111010101000100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111110010010111111010111111

       - Right 32 Bits:            11011101110111010101000100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       11011101110111010101000100011101
          - S-Box Result:     01100110011001101001101010100110   [per every group of 4-bits]
          - Split Into Two:   0110011001100110 [L] 1001101010100110 [R]
          - Swap Halves:      10011010101001100110011001100110
          - Bit Inversion:    01100101010110011001100110011001
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     00001101010001111100111111101000

          - FUNCTION OUTPUT:  00001101010001111100111111101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111110010010111111010111111

       - FUNCTION OUTPUT:          00001101010001111100111111101000

       - Left XOR FUNCTION OUTPUT: 11111010100011101011000101010111

       - Next Round Left 32 Bits:  11011101110111010101000100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010100011101011000101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101110111010101000100011101

       - Right 32 Bits:            11111010100011101011000101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       11111010100011101011000101010111
          - S-Box Result:     10110100001011001000101010011101   [per every group of 4-bits]
          - Split Into Two:   1011010000101100 [L] 1000101010011101 [R]
          - Swap Halves:      10001010100111011011010000101100
          - Bit Inversion:    01110101011000100100101111010011
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     10110011110011110000001011001001

          - FUNCTION OUTPUT:  10110011110011110000001011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101110111010101000100011101

       - FUNCTION OUTPUT:          10110011110011110000001011001001

       - Left XOR FUNCTION OUTPUT: 01101110000100100101001111010100

       - Next Round Left 32 Bits:  11111010100011101011000101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110000100100101001111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010100011101011000101010111

       - Right 32 Bits:            01101110000100100101001111010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       01101110000100100101001111010100
          - S-Box Result:     00001100101011101001000101100111   [per every group of 4-bits]
          - Split Into Two:   0000110010101110 [L] 1001000101100111 [R]
          - Swap Halves:      10010001011001110000110010101110
          - Bit Inversion:    01101110100110001111001101010001
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     11101111111100001010100101101010

          - FUNCTION OUTPUT:  11101111111100001010100101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010100011101011000101010111

       - FUNCTION OUTPUT:          11101111111100001010100101101010

       - Left XOR FUNCTION OUTPUT: 00010101011111100001100000111101

       - Next Round Left 32 Bits:  01101110000100100101001111010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101011111100001100000111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110000100100101001111010100

       - Right 32 Bits:            00010101011111100001100000111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       00010101011111100001100000111101
          - S-Box Result:     10101001110111001010001000010110   [per every group of 4-bits]
          - Split Into Two:   1010100111011100 [L] 1010001000010110 [R]
          - Swap Halves:      10100010000101101010100111011100
          - Bit Inversion:    01011101111010010101011000100011
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     00101011111111101001010011001001

          - FUNCTION OUTPUT:  00101011111111101001010011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110000100100101001111010100

       - FUNCTION OUTPUT:          00101011111111101001010011001001

       - Left XOR FUNCTION OUTPUT: 01000101111011001100011100011101

       - Next Round Left 32 Bits:  00010101011111100001100000111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101111011001100011100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101011111100001100000111101

       - Right 32 Bits:            01000101111011001100011100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       01000101111011001100011100011101
          - S-Box Result:     01111001110001010101110110100110   [per every group of 4-bits]
          - Split Into Two:   0111100111000101 [L] 0101110110100110 [R]
          - Swap Halves:      01011101101001100111100111000101
          - Bit Inversion:    10100010010110011000011000111010
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     01110110111110001100110001100001

          - FUNCTION OUTPUT:  01110110111110001100110001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101011111100001100000111101

       - FUNCTION OUTPUT:          01110110111110001100110001100001

       - Left XOR FUNCTION OUTPUT: 01100011100001101101010001011100

       - Next Round Left 32 Bits:  01000101111011001100011100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011100001101101010001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101111011001100011100011101

       - Right 32 Bits:            01100011100001101101010001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       01100011100001101101010001011100
          - S-Box Result:     00000001001000000110011110010101   [per every group of 4-bits]
          - Split Into Two:   0000000100100000 [L] 0110011110010101 [R]
          - Swap Halves:      01100111100101010000000100100000
          - Bit Inversion:    10011000011010101111111011011111
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     11000001010100000110100011001000

          - FUNCTION OUTPUT:  11000001010100000110100011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101111011001100011100011101

       - FUNCTION OUTPUT:          11000001010100000110100011001000

       - Left XOR FUNCTION OUTPUT: 10000100101111001010111111010101

       - Next Round Left 32 Bits:  01100011100001101101010001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100101111001010111111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011100001101101010001011100

       - Right 32 Bits:            10000100101111001010111111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       10000100101111001010111111010101
          - S-Box Result:     00100111100001010100101101101001   [per every group of 4-bits]
          - Split Into Two:   0010011110000101 [L] 0100101101101001 [R]
          - Swap Halves:      01001011011010010010011110000101
          - Bit Inversion:    10110100100101101101100001111010
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     01101010101100010111100000000010

          - FUNCTION OUTPUT:  01101010101100010111100000000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011100001101101010001011100

       - FUNCTION OUTPUT:          01101010101100010111100000000010

       - Left XOR FUNCTION OUTPUT: 00001001001101111010110001011110

       - Next Round Left 32 Bits:  10000100101111001010111111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001001101111010110001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100101111001010111111010101

       - Right 32 Bits:            00001001001101111010110001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       00001001001101111010110001011110
          - S-Box Result:     11110011000111010100010110011100   [per every group of 4-bits]
          - Split Into Two:   1111001100011101 [L] 0100010110011100 [R]
          - Swap Halves:      01000101100111001111001100011101
          - Bit Inversion:    10111010011000110000110011100010
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     00100010100010100111001011111000

          - FUNCTION OUTPUT:  00100010100010100111001011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100101111001010111111010101

       - FUNCTION OUTPUT:          00100010100010100111001011111000

       - Left XOR FUNCTION OUTPUT: 10100110001101101101110100101101

       - Next Round Left 32 Bits:  00001001001101111010110001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110001101101101110100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001001101111010110001011110

       - Right 32 Bits:            10100110001101101101110100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       10100110001101101101110100101101
          - S-Box Result:     01000000000100000110011011100110   [per every group of 4-bits]
          - Split Into Two:   0100000000010000 [L] 0110011011100110 [R]
          - Swap Halves:      01100110111001100100000000010000
          - Bit Inversion:    10011001000110011011111111101111
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     11110111010010100010101011000100

          - FUNCTION OUTPUT:  11110111010010100010101011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001001101111010110001011110

       - FUNCTION OUTPUT:          11110111010010100010101011000100

       - Left XOR FUNCTION OUTPUT: 11111110011111011000011010011010

       - Next Round Left 32 Bits:  10100110001101101101110100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110011111011000011010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110001101101101110100101101

       - Right 32 Bits:            11111110011111011000011010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       11111110011111011000011010011010
          - S-Box Result:     10111100110101100010000000110100   [per every group of 4-bits]
          - Split Into Two:   1011110011010110 [L] 0010000000110100 [R]
          - Swap Halves:      00100000001101001011110011010110
          - Bit Inversion:    11011111110010110100001100101001
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     10000011100011001010101001010011

          - FUNCTION OUTPUT:  10000011100011001010101001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110001101101101110100101101

       - FUNCTION OUTPUT:          10000011100011001010101001010011

       - Left XOR FUNCTION OUTPUT: 00100101101110100111011101111110

       - Next Round Left 32 Bits:  11111110011111011000011010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101101110100111011101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110011111011000011010011010

       - Right 32 Bits:            00100101101110100111011101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       00100101101110100111011101111110
          - S-Box Result:     11101001100001001101110111011100   [per every group of 4-bits]
          - Split Into Two:   1110100110000100 [L] 1101110111011100 [R]
          - Swap Halves:      11011101110111001110100110000100
          - Bit Inversion:    00100010001000110001011001111011
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     11110011011110111000100011111000

          - FUNCTION OUTPUT:  11110011011110111000100011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110011111011000011010011010

       - FUNCTION OUTPUT:          11110011011110111000100011111000

       - Left XOR FUNCTION OUTPUT: 00001101000001100000111001100010

       - Next Round Left 32 Bits:  00100101101110100111011101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101000001100000111001100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101101110100111011101111110

       - Right 32 Bits:            00001101000001100000111001100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       00001101000001100000111001100010
          - S-Box Result:     11110110111100001111110000001110   [per every group of 4-bits]
          - Split Into Two:   1111011011110000 [L] 1111110000001110 [R]
          - Swap Halves:      11111100000011101111011011110000
          - Bit Inversion:    00000011111100010000100100001111
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     01011001101100111011110011100100

          - FUNCTION OUTPUT:  01011001101100111011110011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101101110100111011101111110

       - FUNCTION OUTPUT:          01011001101100111011110011100100

       - Left XOR FUNCTION OUTPUT: 01111100000010011100101110011010

       - Next Round Left 32 Bits:  00001101000001100000111001100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100000010011100101110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101000001100000111001100010

       - Right 32 Bits:            01111100000010011100101110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       01111100000010011100101110011010
          - S-Box Result:     11010101111100110101100000110100   [per every group of 4-bits]
          - Split Into Two:   1101010111110011 [L] 0101100000110100 [R]
          - Swap Halves:      01011000001101001101010111110011
          - Bit Inversion:    10100111110010110010101000001100
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     00111001010000010100011001011010

          - FUNCTION OUTPUT:  00111001010000010100011001011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101000001100000111001100010

       - FUNCTION OUTPUT:          00111001010000010100011001011010

       - Left XOR FUNCTION OUTPUT: 00110100010001110100100000111000

       - Next Round Left 32 Bits:  01111100000010011100101110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100010001110100100000111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100000010011100101110011010

       - Right 32 Bits:            00110100010001110100100000111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       00110100010001110100100000111000
          - S-Box Result:     00010111011111010111001000010010   [per every group of 4-bits]
          - Split Into Two:   0001011101111101 [L] 0111001000010010 [R]
          - Swap Halves:      01110010000100100001011101111101
          - Bit Inversion:    10001101111011011110100010000010
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     01110101100111111111010100000111

          - FUNCTION OUTPUT:  01110101100111111111010100000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100000010011100101110011010

       - FUNCTION OUTPUT:          01110101100111111111010100000111

       - Left XOR FUNCTION OUTPUT: 00001001100101100011111010011101

       - Next Round Left 32 Bits:  00110100010001110100100000111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001100101100011111010011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100010001110100100000111000

       - Right 32 Bits:            00001001100101100011111010011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       00001001100101100011111010011101
          - S-Box Result:     11110011001100000001110000110110   [per every group of 4-bits]
          - Split Into Two:   1111001100110000 [L] 0001110000110110 [R]
          - Swap Halves:      00011100001101101111001100110000
          - Bit Inversion:    11100011110010010000110011001111
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     11111101100111110111110110100111

          - FUNCTION OUTPUT:  11111101100111110111110110100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100010001110100100000111000

       - FUNCTION OUTPUT:          11111101100111110111110110100111

       - Left XOR FUNCTION OUTPUT: 11001001110110000011010110011111

       - Next Round Left 32 Bits:  00001001100101100011111010011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001110110000011010110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100100111011000001101011001111100001001100101100011111010011101

 > Decrypted Block:     1100100111011000001101011001111100001001100101100011111010011101


!!!CBC: Previous Ciphertext:                             1000110010000001011010001110111001011010101000100101101111110011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100010101011001010111010111000101010011001101000110010101101110

 > Final Processed Block:                                0100010101011001010111010111000101010011001101000110010101101110



Ciphertext Block 3:                                      1100111110011111010100001010101111110100011101110111000111001110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111100111110101000010101011

       - Right 32 Bits:            11110100011101110111000111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       11110100011101110111000111001110
          - S-Box Result:     10110111110111011101101001011100   [per every group of 4-bits]
          - Split Into Two:   1011011111011101 [L] 1101101001011100 [R]
          - Swap Halves:      11011010010111001011011111011101
          - Bit Inversion:    00100101101000110100100000100010
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     10100000010110110011101000111111

          - FUNCTION OUTPUT:  10100000010110110011101000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111100111110101000010101011

       - FUNCTION OUTPUT:          10100000010110110011101000111111

       - Left XOR FUNCTION OUTPUT: 01101111110001000110101010010100

       - Next Round Left 32 Bits:  11110100011101110111000111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111110001000110101010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100011101110111000111001110

       - Right 32 Bits:            01101111110001000110101010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       01101111110001000110101010010100
          - S-Box Result:     00001011010101110000010000110111   [per every group of 4-bits]
          - Split Into Two:   0000101101010111 [L] 0000010000110111 [R]
          - Swap Halves:      00000100001101110000101101010111
          - Bit Inversion:    11111011110010001111010010101000
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     10010011110101101010001011011001

          - FUNCTION OUTPUT:  10010011110101101010001011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100011101110111000111001110

       - FUNCTION OUTPUT:          10010011110101101010001011011001

       - Left XOR FUNCTION OUTPUT: 01100111101000011101001100010111

       - Next Round Left 32 Bits:  01101111110001000110101010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111101000011101001100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111110001000110101010010100

       - Right 32 Bits:            01100111101000011101001100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       01100111101000011101001100010111
          - S-Box Result:     00001101010010100110000110101101   [per every group of 4-bits]
          - Split Into Two:   0000110101001010 [L] 0110000110101101 [R]
          - Swap Halves:      01100001101011010000110101001010
          - Bit Inversion:    10011110010100101111001010110101
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     01011000111111111011101110101111

          - FUNCTION OUTPUT:  01011000111111111011101110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111110001000110101010010100

       - FUNCTION OUTPUT:          01011000111111111011101110101111

       - Left XOR FUNCTION OUTPUT: 00110111001110111101000100111011

       - Next Round Left 32 Bits:  01100111101000011101001100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111001110111101000100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111101000011101001100010111

       - Right 32 Bits:            00110111001110111101000100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       00110111001110111101000100111011
          - S-Box Result:     00011101000110000110101000011000   [per every group of 4-bits]
          - Split Into Two:   0001110100011000 [L] 0110101000011000 [R]
          - Swap Halves:      01101010000110000001110100011000
          - Bit Inversion:    10010101111001111110001011100111
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     00010100100011111011100011011100

          - FUNCTION OUTPUT:  00010100100011111011100011011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111101000011101001100010111

       - FUNCTION OUTPUT:          00010100100011111011100011011100

       - Left XOR FUNCTION OUTPUT: 01110011001011100110101111001011

       - Next Round Left 32 Bits:  00110111001110111101000100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011001011100110101111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111001110111101000100111011

       - Right 32 Bits:            01110011001011100110101111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       01110011001011100110101111001011
          - S-Box Result:     11010001111011000000100001011000   [per every group of 4-bits]
          - Split Into Two:   1101000111101100 [L] 0000100001011000 [R]
          - Swap Halves:      00001000010110001101000111101100
          - Bit Inversion:    11110111101001110010111000010011
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     10000001101100001110110011111001

          - FUNCTION OUTPUT:  10000001101100001110110011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111001110111101000100111011

       - FUNCTION OUTPUT:          10000001101100001110110011111001

       - Left XOR FUNCTION OUTPUT: 10110110100010110011110111000010

       - Next Round Left 32 Bits:  01110011001011100110101111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110100010110011110111000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011001011100110101111001011

       - Right 32 Bits:            10110110100010110011110111000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       10110110100010110011110111000010
          - S-Box Result:     10000000001010000001011001011110   [per every group of 4-bits]
          - Split Into Two:   1000000000101000 [L] 0001011001011110 [R]
          - Swap Halves:      00010110010111101000000000101000
          - Bit Inversion:    11101001101000010111111111010111
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     00111101000000000011010110001100

          - FUNCTION OUTPUT:  00111101000000000011010110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011001011100110101111001011

       - FUNCTION OUTPUT:          00111101000000000011010110001100

       - Left XOR FUNCTION OUTPUT: 01001110001011100101111001000111

       - Next Round Left 32 Bits:  10110110100010110011110111000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110001011100101111001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110100010110011110111000010

       - Right 32 Bits:            01001110001011100101111001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       01001110001011100101111001000111
          - S-Box Result:     01111100111011001001110001111101   [per every group of 4-bits]
          - Split Into Two:   0111110011101100 [L] 1001110001111101 [R]
          - Swap Halves:      10011100011111010111110011101100
          - Bit Inversion:    01100011100000101000001100010011
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     00111010101110000001010100000100

          - FUNCTION OUTPUT:  00111010101110000001010100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110100010110011110111000010

       - FUNCTION OUTPUT:          00111010101110000001010100000100

       - Left XOR FUNCTION OUTPUT: 10001100001100110010100011000110

       - Next Round Left 32 Bits:  01001110001011100101111001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100001100110010100011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110001011100101111001000111

       - Right 32 Bits:            10001100001100110010100011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       10001100001100110010100011000110
          - S-Box Result:     00100101000100011110001001010000   [per every group of 4-bits]
          - Split Into Two:   0010010100010001 [L] 1110001001010000 [R]
          - Swap Halves:      11100010010100000010010100010001
          - Bit Inversion:    00011101101011111101101011101110
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     11000011100010000111101010010110

          - FUNCTION OUTPUT:  11000011100010000111101010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110001011100101111001000111

       - FUNCTION OUTPUT:          11000011100010000111101010010110

       - Left XOR FUNCTION OUTPUT: 10001101101001100010010011010001

       - Next Round Left 32 Bits:  10001100001100110010100011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101101001100010010011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100001100110010100011000110

       - Right 32 Bits:            10001101101001100010010011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       10001101101001100010010011010001
          - S-Box Result:     00100110010000001110011101101010   [per every group of 4-bits]
          - Split Into Two:   0010011001000000 [L] 1110011101101010 [R]
          - Swap Halves:      11100111011010100010011001000000
          - Bit Inversion:    00011000100101011101100110111111
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     10000000011111001010011110100101

          - FUNCTION OUTPUT:  10000000011111001010011110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100001100110010100011000110

       - FUNCTION OUTPUT:          10000000011111001010011110100101

       - Left XOR FUNCTION OUTPUT: 00001100010011111000111101100011

       - Next Round Left 32 Bits:  10001101101001100010010011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100010011111000111101100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101101001100010010011010001

       - Right 32 Bits:            00001100010011111000111101100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       00001100010011111000111101100011
          - S-Box Result:     11110101011110110010101100000001   [per every group of 4-bits]
          - Split Into Two:   1111010101111011 [L] 0010101100000001 [R]
          - Swap Halves:      00101011000000011111010101111011
          - Bit Inversion:    11010100111111100000101010000100
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     10111010101011011001111110101111

          - FUNCTION OUTPUT:  10111010101011011001111110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101101001100010010011010001

       - FUNCTION OUTPUT:          10111010101011011001111110101111

       - Left XOR FUNCTION OUTPUT: 00110111000010111011101101111110

       - Next Round Left 32 Bits:  00001100010011111000111101100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111000010111011101101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100010011111000111101100011

       - Right 32 Bits:            00110111000010111011101101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       00110111000010111011101101111110
          - S-Box Result:     00011101111110001000100011011100   [per every group of 4-bits]
          - Split Into Two:   0001110111111000 [L] 1000100011011100 [R]
          - Swap Halves:      10001000110111000001110111111000
          - Bit Inversion:    01110111001000111110001000000111
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     00101011011001000000101101111101

          - FUNCTION OUTPUT:  00101011011001000000101101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100010011111000111101100011

       - FUNCTION OUTPUT:          00101011011001000000101101111101

       - Left XOR FUNCTION OUTPUT: 00100111001010111000010000011110

       - Next Round Left 32 Bits:  00110111000010111011101101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111001010111000010000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111000010111011101101111110

       - Right 32 Bits:            00100111001010111000010000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       00100111001010111000010000011110
          - S-Box Result:     11101101111010000010011110101100   [per every group of 4-bits]
          - Split Into Two:   1110110111101000 [L] 0010011110101100 [R]
          - Swap Halves:      00100111101011001110110111101000
          - Bit Inversion:    11011000010100110001001000010111
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     00001001000010111000110010010100

          - FUNCTION OUTPUT:  00001001000010111000110010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111000010111011101101111110

       - FUNCTION OUTPUT:          00001001000010111000110010010100

       - Left XOR FUNCTION OUTPUT: 00111110000000000011011111101010

       - Next Round Left 32 Bits:  00100111001010111000010000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110000000000011011111101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111001010111000010000011110

       - Right 32 Bits:            00111110000000000011011111101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       00111110000000000011011111101010
          - S-Box Result:     00011100111111110001110111000100   [per every group of 4-bits]
          - Split Into Two:   0001110011111111 [L] 0001110111000100 [R]
          - Swap Halves:      00011101110001000001110011111111
          - Bit Inversion:    11100010001110111110001100000000
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     10111000011110010101011011101011

          - FUNCTION OUTPUT:  10111000011110010101011011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111001010111000010000011110

       - FUNCTION OUTPUT:          10111000011110010101011011101011

       - Left XOR FUNCTION OUTPUT: 10011111010100101101001011110101

       - Next Round Left 32 Bits:  00111110000000000011011111101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111010100101101001011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110000000000011011111101010

       - Right 32 Bits:            10011111010100101101001011110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       10011111010100101101001011110101
          - S-Box Result:     00111011100111100110111010111001   [per every group of 4-bits]
          - Split Into Two:   0011101110011110 [L] 0110111010111001 [R]
          - Swap Halves:      01101110101110010011101110011110
          - Bit Inversion:    10010001010001101100010001100001
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     00001111110011001010100000110111

          - FUNCTION OUTPUT:  00001111110011001010100000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110000000000011011111101010

       - FUNCTION OUTPUT:          00001111110011001010100000110111

       - Left XOR FUNCTION OUTPUT: 00110001110011001001111111011101

       - Next Round Left 32 Bits:  10011111010100101101001011110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001110011001001111111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111010100101101001011110101

       - Right 32 Bits:            00110001110011001001111111011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       00110001110011001001111111011101
          - S-Box Result:     00011010010101010011101101100110   [per every group of 4-bits]
          - Split Into Two:   0001101001010101 [L] 0011101101100110 [R]
          - Swap Halves:      00111011011001100001101001010101
          - Bit Inversion:    11000100100110011110010110101010
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     00111100111010111111100000101111

          - FUNCTION OUTPUT:  00111100111010111111100000101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111010100101101001011110101

       - FUNCTION OUTPUT:          00111100111010111111100000101111

       - Left XOR FUNCTION OUTPUT: 10100011101110010010101011011010

       - Next Round Left 32 Bits:  00110001110011001001111111011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011101110010010101011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001110011001001111111011101

       - Right 32 Bits:            10100011101110010010101011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       10100011101110010010101011011010
          - S-Box Result:     01000001100000111110010001100100   [per every group of 4-bits]
          - Split Into Two:   0100000110000011 [L] 1110010001100100 [R]
          - Swap Halves:      11100100011001000100000110000011
          - Bit Inversion:    00011011100110111011111001111100
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     00000101110011011100111100010100

          - FUNCTION OUTPUT:  00000101110011011100111100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001110011001001111111011101

       - FUNCTION OUTPUT:          00000101110011011100111100010100

       - Left XOR FUNCTION OUTPUT: 00110100000000010101000011001001

       - Next Round Left 32 Bits:  10100011101110010010101011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100000000010101000011001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011010000000001010100001100100110100011101110010010101011011010

 > Decrypted Block:     0011010000000001010100001100100110100011101110010010101011011010


!!!CBC: Previous Ciphertext:                             0111101101010001011000011010110011110111110010010111111010111111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100111101010000001100010110010101010100011100000101010001100101

 > Final Processed Block:                                0100111101010000001100010110010101010100011100000101010001100101



Ciphertext Block 4:                                      0101101101001101100101100101100111001000011000101001000001100001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011010011011001011001011001

       - Right 32 Bits:            11001000011000101001000001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       11001000011000101001000001100001
          - S-Box Result:     01010010000011100011111100001010   [per every group of 4-bits]
          - Split Into Two:   0101001000001110 [L] 0011111100001010 [R]
          - Swap Halves:      00111111000010100101001000001110
          - Bit Inversion:    11000000111101011010110111110001
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     01000101000011011101111111101100

          - FUNCTION OUTPUT:  01000101000011011101111111101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011010011011001011001011001

       - FUNCTION OUTPUT:          01000101000011011101111111101100

       - Left XOR FUNCTION OUTPUT: 00011110010000000100100110110101

       - Next Round Left 32 Bits:  11001000011000101001000001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110010000000100100110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000011000101001000001100001

       - Right 32 Bits:            00011110010000000100100110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       00011110010000000100100110110101
          - S-Box Result:     10101100011111110111001110001001   [per every group of 4-bits]
          - Split Into Two:   1010110001111111 [L] 0111001110001001 [R]
          - Swap Halves:      01110011100010011010110001111111
          - Bit Inversion:    10001100011101100101001110000000
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     11100100011010000000010111110001

          - FUNCTION OUTPUT:  11100100011010000000010111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000011000101001000001100001

       - FUNCTION OUTPUT:          11100100011010000000010111110001

       - Left XOR FUNCTION OUTPUT: 00101100000010101001010110010000

       - Next Round Left 32 Bits:  00011110010000000100100110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100000010101001010110010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110010000000100100110110101

       - Right 32 Bits:            00101100000010101001010110010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       00101100000010101001010110010000
          - S-Box Result:     11100101111101000011100100111111   [per every group of 4-bits]
          - Split Into Two:   1110010111110100 [L] 0011100100111111 [R]
          - Swap Halves:      00111001001111111110010111110100
          - Bit Inversion:    11000110110000000001101000001011
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     00000000011011010101001100010001

          - FUNCTION OUTPUT:  00000000011011010101001100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110010000000100100110110101

       - FUNCTION OUTPUT:          00000000011011010101001100010001

       - Left XOR FUNCTION OUTPUT: 00011110001011010001101010100100

       - Next Round Left 32 Bits:  00101100000010101001010110010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110001011010001101010100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100000010101001010110010000

       - Right 32 Bits:            00011110001011010001101010100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       00011110001011010001101010100100
          - S-Box Result:     10101100111001101010010001000111   [per every group of 4-bits]
          - Split Into Two:   1010110011100110 [L] 1010010001000111 [R]
          - Swap Halves:      10100100010001111010110011100110
          - Bit Inversion:    01011011101110000101001100011001
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     11011010110100000000100100100010

          - FUNCTION OUTPUT:  11011010110100000000100100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100000010101001010110010000

       - FUNCTION OUTPUT:          11011010110100000000100100100010

       - Left XOR FUNCTION OUTPUT: 11110110110110101001110010110010

       - Next Round Left 32 Bits:  00011110001011010001101010100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110110110101001110010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110001011010001101010100100

       - Right 32 Bits:            11110110110110101001110010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       11110110110110101001110010110010
          - S-Box Result:     10110000011001000011010110001110   [per every group of 4-bits]
          - Split Into Two:   1011000001100100 [L] 0011010110001110 [R]
          - Swap Halves:      00110101100011101011000001100100
          - Bit Inversion:    11001010011100010100111110011011
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     10111100011001101000110101110001

          - FUNCTION OUTPUT:  10111100011001101000110101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110001011010001101010100100

       - FUNCTION OUTPUT:          10111100011001101000110101110001

       - Left XOR FUNCTION OUTPUT: 10100010010010111001011111010101

       - Next Round Left 32 Bits:  11110110110110101001110010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010010010111001011111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110110110101001110010110010

       - Right 32 Bits:            10100010010010111001011111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       10100010010010111001011111010101
          - S-Box Result:     01001110011110000011110101101001   [per every group of 4-bits]
          - Split Into Two:   0100111001111000 [L] 0011110101101001 [R]
          - Swap Halves:      00111101011010010100111001111000
          - Bit Inversion:    11000010100101101011000110000111
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     00010110001101111111101111011100

          - FUNCTION OUTPUT:  00010110001101111111101111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110110110101001110010110010

       - FUNCTION OUTPUT:          00010110001101111111101111011100

       - Left XOR FUNCTION OUTPUT: 11100000111011010110011101101110

       - Next Round Left 32 Bits:  10100010010010111001011111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000111011010110011101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010010010111001011111010101

       - Right 32 Bits:            11100000111011010110011101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       11100000111011010110011101101110
          - S-Box Result:     11001111110001100000110100001100   [per every group of 4-bits]
          - Split Into Two:   1100111111000110 [L] 0000110100001100 [R]
          - Swap Halves:      00001101000011001100111111000110
          - Bit Inversion:    11110010111100110011000000111001
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     10101011110010011010011000101110

          - FUNCTION OUTPUT:  10101011110010011010011000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010010010111001011111010101

       - FUNCTION OUTPUT:          10101011110010011010011000101110

       - Left XOR FUNCTION OUTPUT: 00001001100000100011000111111011

       - Next Round Left 32 Bits:  11100000111011010110011101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001100000100011000111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000111011010110011101101110

       - Right 32 Bits:            00001001100000100011000111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       00001001100000100011000111111011
          - S-Box Result:     11110011001011100001101010111000   [per every group of 4-bits]
          - Split Into Two:   1111001100101110 [L] 0001101010111000 [R]
          - Swap Halves:      00011010101110001111001100101110
          - Bit Inversion:    11100101010001110000110011010001
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     00111011011000001010110010101001

          - FUNCTION OUTPUT:  00111011011000001010110010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000111011010110011101101110

       - FUNCTION OUTPUT:          00111011011000001010110010101001

       - Left XOR FUNCTION OUTPUT: 11011011100011011100101111000111

       - Next Round Left 32 Bits:  00001001100000100011000111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011100011011100101111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001100000100011000111111011

       - Right 32 Bits:            11011011100011011100101111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       11011011100011011100101111000111
          - S-Box Result:     01101000001001100101100001011101   [per every group of 4-bits]
          - Split Into Two:   0110100000100110 [L] 0101100001011101 [R]
          - Swap Halves:      01011000010111010110100000100110
          - Bit Inversion:    10100111101000101001011111011001
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     00111111010010111110100111000011

          - FUNCTION OUTPUT:  00111111010010111110100111000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001100000100011000111111011

       - FUNCTION OUTPUT:          00111111010010111110100111000011

       - Left XOR FUNCTION OUTPUT: 00110110110010011101100000111000

       - Next Round Left 32 Bits:  11011011100011011100101111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110110010011101100000111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011100011011100101111000111

       - Right 32 Bits:            00110110110010011101100000111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       00110110110010011101100000111000
          - S-Box Result:     00010000010100110110001000010010   [per every group of 4-bits]
          - Split Into Two:   0001000001010011 [L] 0110001000010010 [R]
          - Swap Halves:      01100010000100100001000001010011
          - Bit Inversion:    10011101111011011110111110101100
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     11110011101111100111101010000111

          - FUNCTION OUTPUT:  11110011101111100111101010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011100011011100101111000111

       - FUNCTION OUTPUT:          11110011101111100111101010000111

       - Left XOR FUNCTION OUTPUT: 00101000001100111011000101000000

       - Next Round Left 32 Bits:  00110110110010011101100000111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000001100111011000101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110110010011101100000111000

       - Right 32 Bits:            00101000001100111011000101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       00101000001100111011000101000000
          - S-Box Result:     11100010000100011000101001111111   [per every group of 4-bits]
          - Split Into Two:   1110001000010001 [L] 1000101001111111 [R]
          - Swap Halves:      10001010011111111110001000010001
          - Bit Inversion:    01110101100000000001110111101110
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     00101001110001111111010010010100

          - FUNCTION OUTPUT:  00101001110001111111010010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110110010011101100000111000

       - FUNCTION OUTPUT:          00101001110001111111010010010100

       - Left XOR FUNCTION OUTPUT: 00011111000011100010110010101100

       - Next Round Left 32 Bits:  00101000001100111011000101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111000011100010110010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000001100111011000101000000

       - Right 32 Bits:            00011111000011100010110010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       00011111000011100010110010101100
          - S-Box Result:     10101011111111001110010101000101   [per every group of 4-bits]
          - Split Into Two:   1010101111111100 [L] 1110010101000101 [R]
          - Swap Halves:      11100101010001011010101111111100
          - Bit Inversion:    00011010101110100101010000000011
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     11001011111000101100101010000000

          - FUNCTION OUTPUT:  11001011111000101100101010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000001100111011000101000000

       - FUNCTION OUTPUT:          11001011111000101100101010000000

       - Left XOR FUNCTION OUTPUT: 11100011110100010111101111000000

       - Next Round Left 32 Bits:  00011111000011100010110010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011110100010111101111000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111000011100010110010101100

       - Right 32 Bits:            11100011110100010111101111000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       11100011110100010111101111000000
          - S-Box Result:     11000001011010101101100001011111   [per every group of 4-bits]
          - Split Into Two:   1100000101101010 [L] 1101100001011111 [R]
          - Swap Halves:      11011000010111111100000101101010
          - Bit Inversion:    00100111101000000011111010010101
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     01111101111000101000101101111110

          - FUNCTION OUTPUT:  01111101111000101000101101111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111000011100010110010101100

       - FUNCTION OUTPUT:          01111101111000101000101101111110

       - Left XOR FUNCTION OUTPUT: 01100010111011001010011111010010

       - Next Round Left 32 Bits:  11100011110100010111101111000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010111011001010011111010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011110100010111101111000000

       - Right 32 Bits:            01100010111011001010011111010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       01100010111011001010011111010010
          - S-Box Result:     00001110110001010100110101101110   [per every group of 4-bits]
          - Split Into Two:   0000111011000101 [L] 0100110101101110 [R]
          - Swap Halves:      01001101011011100000111011000101
          - Bit Inversion:    10110010100100011111000100111010
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     00101100000110111001110101101100

          - FUNCTION OUTPUT:  00101100000110111001110101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011110100010111101111000000

       - FUNCTION OUTPUT:          00101100000110111001110101101100

       - Left XOR FUNCTION OUTPUT: 11001111110010101110011010101100

       - Next Round Left 32 Bits:  01100010111011001010011111010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111110010101110011010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010111011001010011111010010

       - Right 32 Bits:            11001111110010101110011010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       11001111110010101110011010101100
          - S-Box Result:     01011011010101001100000001000101   [per every group of 4-bits]
          - Split Into Two:   0101101101010100 [L] 1100000001000101 [R]
          - Swap Halves:      11000000010001010101101101010100
          - Bit Inversion:    00111111101110101010010010101011
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     11000111110010001011100100101110

          - FUNCTION OUTPUT:  11000111110010001011100100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010111011001010011111010010

       - FUNCTION OUTPUT:          11000111110010001011100100101110

       - Left XOR FUNCTION OUTPUT: 10100101001001000001111011111100

       - Next Round Left 32 Bits:  11001111110010101110011010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101001001000001111011111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111110010101110011010101100

       - Right 32 Bits:            10100101001001000001111011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       10100101001001000001111011111100
          - S-Box Result:     01001001111001111010110010110101   [per every group of 4-bits]
          - Split Into Two:   0100100111100111 [L] 1010110010110101 [R]
          - Swap Halves:      10101100101101010100100111100111
          - Bit Inversion:    01010011010010101011011000011000
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     01001101000111001100011101110000

          - FUNCTION OUTPUT:  01001101000111001100011101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111110010101110011010101100

       - FUNCTION OUTPUT:          01001101000111001100011101110000

       - Left XOR FUNCTION OUTPUT: 10000010110101100010000111011100

       - Next Round Left 32 Bits:  10100101001001000001111011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000010110101100010000111011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000001011010110001000011101110010100101001001000001111011111100

 > Decrypted Block:     1000001011010110001000011101110010100101001001000001111011111100


!!!CBC: Previous Ciphertext:                             1100111110011111010100001010101111110100011101110111000111001110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100110101001001011100010111011101010001010100110110111100110010

 > Final Processed Block:                                0100110101001001011100010111011101010001010100110110111100110010



Ciphertext Block 5:                                      0111100101111110111010111001011110101111111101011001000011001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001011111101110101110010111

       - Right 32 Bits:            10101111111101011001000011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       10101111111101011001000011001010
          - S-Box Result:     01001011101110010011111101010100   [per every group of 4-bits]
          - Split Into Two:   0100101110111001 [L] 0011111101010100 [R]
          - Swap Halves:      00111111010101000100101110111001
          - Bit Inversion:    11000000101010111011010001000110
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     01000101010100111100011001011011

          - FUNCTION OUTPUT:  01000101010100111100011001011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001011111101110101110010111

       - FUNCTION OUTPUT:          01000101010100111100011001011011

       - Left XOR FUNCTION OUTPUT: 00111100001011010010110111001100

       - Next Round Left 32 Bits:  10101111111101011001000011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100001011010010110111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111111101011001000011001010

       - Right 32 Bits:            00111100001011010010110111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       00111100001011010010110111001100
          - S-Box Result:     00010101111001101110011001010101   [per every group of 4-bits]
          - Split Into Two:   0001010111100110 [L] 1110011001010101 [R]
          - Swap Halves:      11100110010101010001010111100110
          - Bit Inversion:    00011001101010101110101000011001
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     01110001101101001011110001101000

          - FUNCTION OUTPUT:  01110001101101001011110001101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111111101011001000011001010

       - FUNCTION OUTPUT:          01110001101101001011110001101000

       - Left XOR FUNCTION OUTPUT: 11011110010000010010110010100010

       - Next Round Left 32 Bits:  00111100001011010010110111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110010000010010110010100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100001011010010110111001100

       - Right 32 Bits:            11011110010000010010110010100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       11011110010000010010110010100010
          - S-Box Result:     01101100011110101110010101001110   [per every group of 4-bits]
          - Split Into Two:   0110110001111010 [L] 1110010101001110 [R]
          - Swap Halves:      11100101010011100110110001111010
          - Bit Inversion:    00011010101100011001001110000101
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     11011100000111001101101010011111

          - FUNCTION OUTPUT:  11011100000111001101101010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100001011010010110111001100

       - FUNCTION OUTPUT:          11011100000111001101101010011111

       - Left XOR FUNCTION OUTPUT: 11100000001100011111011101010011

       - Next Round Left 32 Bits:  11011110010000010010110010100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000001100011111011101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110010000010010110010100010

       - Right 32 Bits:            11100000001100011111011101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       11100000001100011111011101010011
          - S-Box Result:     11001111000110101011110110010001   [per every group of 4-bits]
          - Split Into Two:   1100111100011010 [L] 1011110110010001 [R]
          - Swap Halves:      10111101100100011100111100011010
          - Bit Inversion:    01000010011011100011000011100101
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     11000011000001100110101011011110

          - FUNCTION OUTPUT:  11000011000001100110101011011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110010000010010110010100010

       - FUNCTION OUTPUT:          11000011000001100110101011011110

       - Left XOR FUNCTION OUTPUT: 00011101010001110100011001111100

       - Next Round Left 32 Bits:  11100000001100011111011101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101010001110100011001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000001100011111011101010011

       - Right 32 Bits:            00011101010001110100011001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       00011101010001110100011001111100
          - S-Box Result:     10100110011111010111000011010101   [per every group of 4-bits]
          - Split Into Two:   1010011001111101 [L] 0111000011010101 [R]
          - Swap Halves:      01110000110101011010011001111101
          - Bit Inversion:    10001111001010100101100110000010
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     11111001001111011001101101101000

          - FUNCTION OUTPUT:  11111001001111011001101101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000001100011111011101010011

       - FUNCTION OUTPUT:          11111001001111011001101101101000

       - Left XOR FUNCTION OUTPUT: 00011001000011000110110000111011

       - Next Round Left 32 Bits:  00011101010001110100011001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001000011000110110000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101010001110100011001111100

       - Right 32 Bits:            00011001000011000110110000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       00011001000011000110110000111011
          - S-Box Result:     10100011111101010000010100011000   [per every group of 4-bits]
          - Split Into Two:   1010001111110101 [L] 0000010100011000 [R]
          - Swap Halves:      00000101000110001010001111110101
          - Bit Inversion:    11111010111001110101110000001010
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     00101110010001100001011001010001

          - FUNCTION OUTPUT:  00101110010001100001011001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101010001110100011001111100

       - FUNCTION OUTPUT:          00101110010001100001011001010001

       - Left XOR FUNCTION OUTPUT: 00110011000000010101000000101101

       - Next Round Left 32 Bits:  00011001000011000110110000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011000000010101000000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001000011000110110000111011

       - Right 32 Bits:            00110011000000010101000000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       00110011000000010101000000101101
          - S-Box Result:     00010001111110101001111111100110   [per every group of 4-bits]
          - Split Into Two:   0001000111111010 [L] 1001111111100110 [R]
          - Swap Halves:      10011111111001100001000111111010
          - Bit Inversion:    01100000000110011110111000000101
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     00111001001000110111100000010010

          - FUNCTION OUTPUT:  00111001001000110111100000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001000011000110110000111011

       - FUNCTION OUTPUT:          00111001001000110111100000010010

       - Left XOR FUNCTION OUTPUT: 00100000001011110001010000101001

       - Next Round Left 32 Bits:  00110011000000010101000000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000001011110001010000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011000000010101000000101101

       - Right 32 Bits:            00100000001011110001010000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       00100000001011110001010000101001
          - S-Box Result:     11101111111010111010011111100011   [per every group of 4-bits]
          - Split Into Two:   1110111111101011 [L] 1010011111100011 [R]
          - Swap Halves:      10100111111000111110111111101011
          - Bit Inversion:    01011000000111000001000000010100
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     10000110001110111011000001101100

          - FUNCTION OUTPUT:  10000110001110111011000001101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011000000010101000000101101

       - FUNCTION OUTPUT:          10000110001110111011000001101100

       - Left XOR FUNCTION OUTPUT: 10110101001110101110000001000001

       - Next Round Left 32 Bits:  00100000001011110001010000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101001110101110000001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000001011110001010000101001

       - Right 32 Bits:            10110101001110101110000001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       10110101001110101110000001000001
          - S-Box Result:     10001001000101001100111101111010   [per every group of 4-bits]
          - Split Into Two:   1000100100010100 [L] 1100111101111010 [R]
          - Swap Halves:      11001111011110101000100100010100
          - Bit Inversion:    00110000100001010111011011101011
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     10101000011011000000100011110001

          - FUNCTION OUTPUT:  10101000011011000000100011110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000001011110001010000101001

       - FUNCTION OUTPUT:          10101000011011000000100011110001

       - Left XOR FUNCTION OUTPUT: 10001000010000110001110011011000

       - Next Round Left 32 Bits:  10110101001110101110000001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000010000110001110011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101001110101110000001000001

       - Right 32 Bits:            10001000010000110001110011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       10001000010000110001110011011000
          - S-Box Result:     00100010011100011010010101100010   [per every group of 4-bits]
          - Split Into Two:   0010001001110001 [L] 1010010101100010 [R]
          - Swap Halves:      10100101011000100010001001110001
          - Bit Inversion:    01011010100111011101110110001110
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     00110100110011100100100010100101

          - FUNCTION OUTPUT:  00110100110011100100100010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101001110101110000001000001

       - FUNCTION OUTPUT:          00110100110011100100100010100101

       - Left XOR FUNCTION OUTPUT: 10000001111101001010100011100100

       - Next Round Left 32 Bits:  10001000010000110001110011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001111101001010100011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000010000110001110011011000

       - Right 32 Bits:            10000001111101001010100011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       10000001111101001010100011100100
          - S-Box Result:     00101010101101110100001011000111   [per every group of 4-bits]
          - Split Into Two:   0010101010110111 [L] 0100001011000111 [R]
          - Swap Halves:      01000010110001110010101010110111
          - Bit Inversion:    10111101001110001101010101001000
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     11100001011111110011110000110010

          - FUNCTION OUTPUT:  11100001011111110011110000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000010000110001110011011000

       - FUNCTION OUTPUT:          11100001011111110011110000110010

       - Left XOR FUNCTION OUTPUT: 01101001001111000010000011101010

       - Next Round Left 32 Bits:  10000001111101001010100011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001001111000010000011101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001111101001010100011100100

       - Right 32 Bits:            01101001001111000010000011101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       01101001001111000010000011101010
          - S-Box Result:     00000011000101011110111111000100   [per every group of 4-bits]
          - Split Into Two:   0000001100010101 [L] 1110111111000100 [R]
          - Swap Halves:      11101111110001000000001100010101
          - Bit Inversion:    00010000001110111111110011101010
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     11000001011000110110001001101001

          - FUNCTION OUTPUT:  11000001011000110110001001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001111101001010100011100100

       - FUNCTION OUTPUT:          11000001011000110110001001101001

       - Left XOR FUNCTION OUTPUT: 01000000100101111100101010001101

       - Next Round Left 32 Bits:  01101001001111000010000011101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000100101111100101010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001001111000010000011101010

       - Right 32 Bits:            01000000100101111100101010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       01000000100101111100101010001101
          - S-Box Result:     01111111001111010101010000100110   [per every group of 4-bits]
          - Split Into Two:   0111111100111101 [L] 0101010000100110 [R]
          - Swap Halves:      01010100001001100111111100111101
          - Bit Inversion:    10101011110110011000000011000010
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     11110001100110110011010100101001

          - FUNCTION OUTPUT:  11110001100110110011010100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001001111000010000011101010

       - FUNCTION OUTPUT:          11110001100110110011010100101001

       - Left XOR FUNCTION OUTPUT: 10011000101001110001010111000011

       - Next Round Left 32 Bits:  01000000100101111100101010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000101001110001010111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000100101111100101010001101

       - Right 32 Bits:            10011000101001110001010111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       10011000101001110001010111000011
          - S-Box Result:     00110010010011011010100101010001   [per every group of 4-bits]
          - Split Into Two:   0011001001001101 [L] 1010100101010001 [R]
          - Swap Halves:      10101001010100010011001001001101
          - Bit Inversion:    01010110101011101100110110110010
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     11001000001001001010000111100100

          - FUNCTION OUTPUT:  11001000001001001010000111100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000100101111100101010001101

       - FUNCTION OUTPUT:          11001000001001001010000111100100

       - Left XOR FUNCTION OUTPUT: 10001000101100110110101101101001

       - Next Round Left 32 Bits:  10011000101001110001010111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000101100110110101101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000101001110001010111000011

       - Right 32 Bits:            10001000101100110110101101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       10001000101100110110101101101001
          - S-Box Result:     00100010100000010000100000000011   [per every group of 4-bits]
          - Split Into Two:   0010001010000001 [L] 0000100000000011 [R]
          - Swap Halves:      00001000000000110010001010000001
          - Bit Inversion:    11110111111111001101110101111110
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     00001111100011101100000011111011

          - FUNCTION OUTPUT:  00001111100011101100000011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000101001110001010111000011

       - FUNCTION OUTPUT:          00001111100011101100000011111011

       - Left XOR FUNCTION OUTPUT: 10010111001010011101010100111000

       - Next Round Left 32 Bits:  10001000101100110110101101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111001010011101010100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000101100110110101101101001

       - Right 32 Bits:            10010111001010011101010100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       10010111001010011101010100111000
          - S-Box Result:     00111101111000110110100100010010   [per every group of 4-bits]
          - Split Into Two:   0011110111100011 [L] 0110100100010010 [R]
          - Swap Halves:      01101001000100100011110111100011
          - Bit Inversion:    10010110111011011100001000011100
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     10001000101110111011001101110100

          - FUNCTION OUTPUT:  10001000101110111011001101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000101100110110101101101001

       - FUNCTION OUTPUT:          10001000101110111011001101110100

       - Left XOR FUNCTION OUTPUT: 00000000000010001101100000011101

       - Next Round Left 32 Bits:  10010111001010011101010100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000000010001101100000011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000000000001000110110000001110110010111001010011101010100111000

 > Decrypted Block:     0000000000001000110110000001110110010111001010011101010100111000


!!!CBC: Previous Ciphertext:                             0101101101001101100101100101100111001000011000101001000001100001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101101000101010011100100010001011111010010110100010101011001

 > Final Processed Block:                                0101101101000101010011100100010001011111010010110100010101011001



Ciphertext Block 6:                                      1100100000011010111110110010100001010010010011001101000111011000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000000110101111101100101000

       - Right 32 Bits:            01010010010011001101000111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       01010010010011001101000111011000
          - S-Box Result:     10011110011101010110101001100010   [per every group of 4-bits]
          - Split Into Two:   1001111001110101 [L] 0110101001100010 [R]
          - Swap Halves:      01101010011000101001111001110101
          - Bit Inversion:    10010101100111010110000110001010
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     00010000011001010001001110010111

          - FUNCTION OUTPUT:  00010000011001010001001110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000000110101111101100101000

       - FUNCTION OUTPUT:          00010000011001010001001110010111

       - Left XOR FUNCTION OUTPUT: 11011000011111111110100010111111

       - Next Round Left 32 Bits:  01010010010011001101000111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000011111111110100010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010010011001101000111011000

       - Right 32 Bits:            11011000011111111110100010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       11011000011111111110100010111111
          - S-Box Result:     01100010110110111100001010001011   [per every group of 4-bits]
          - Split Into Two:   0110001011011011 [L] 1100001010001011 [R]
          - Swap Halves:      11000010100010110110001011011011
          - Bit Inversion:    00111101011101001001110100100100
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     01010101011010101100101101010101

          - FUNCTION OUTPUT:  01010101011010101100101101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010010011001101000111011000

       - FUNCTION OUTPUT:          01010101011010101100101101010101

       - Left XOR FUNCTION OUTPUT: 00000111001001100001101010001101

       - Next Round Left 32 Bits:  11011000011111111110100010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001001100001101010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000011111111110100010111111

       - Right 32 Bits:            00000111001001100001101010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       00000111001001100001101010001101
          - S-Box Result:     11111101111000001010010000100110   [per every group of 4-bits]
          - Split Into Two:   1111110111100000 [L] 1010010000100110 [R]
          - Swap Halves:      10100100001001101111110111100000
          - Bit Inversion:    01011011110110010000001000011111
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     10011101011101000100101100000101

          - FUNCTION OUTPUT:  10011101011101000100101100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000011111111110100010111111

       - FUNCTION OUTPUT:          10011101011101000100101100000101

       - Left XOR FUNCTION OUTPUT: 01000101000010111010001110111010

       - Next Round Left 32 Bits:  00000111001001100001101010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101000010111010001110111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001001100001101010001101

       - Right 32 Bits:            01000101000010111010001110111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       01000101000010111010001110111010
          - S-Box Result:     01111001111110000100000110000100   [per every group of 4-bits]
          - Split Into Two:   0111100111111000 [L] 0100000110000100 [R]
          - Swap Halves:      01000001100001000111100111111000
          - Bit Inversion:    10111110011110111000011000000111
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     00111111000100111101110000111100

          - FUNCTION OUTPUT:  00111111000100111101110000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001001100001101010001101

       - FUNCTION OUTPUT:          00111111000100111101110000111100

       - Left XOR FUNCTION OUTPUT: 00111000001101011100011010110001

       - Next Round Left 32 Bits:  01000101000010111010001110111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000001101011100011010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101000010111010001110111010

       - Right 32 Bits:            00111000001101011100011010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       00111000001101011100011010110001
          - S-Box Result:     00010010000110010101000010001010   [per every group of 4-bits]
          - Split Into Two:   0001001000011001 [L] 0101000010001010 [R]
          - Swap Halves:      01010000100010100001001000011001
          - Bit Inversion:    10101111011101011110110111100110
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     11011001011000100010111100001100

          - FUNCTION OUTPUT:  11011001011000100010111100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101000010111010001110111010

       - FUNCTION OUTPUT:          11011001011000100010111100001100

       - Left XOR FUNCTION OUTPUT: 10011100011010011000110010110110

       - Next Round Left 32 Bits:  00111000001101011100011010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100011010011000110010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000001101011100011010110001

       - Right 32 Bits:            10011100011010011000110010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       10011100011010011000110010110110
          - S-Box Result:     00110101000000110010010110000000   [per every group of 4-bits]
          - Split Into Two:   0011010100000011 [L] 0010010110000000 [R]
          - Swap Halves:      00100101100000000011010100000011
          - Bit Inversion:    11011010011111111100101011111100
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     00001110110111101000000010100111

          - FUNCTION OUTPUT:  00001110110111101000000010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000001101011100011010110001

       - FUNCTION OUTPUT:          00001110110111101000000010100111

       - Left XOR FUNCTION OUTPUT: 00110110111010110100011000010110

       - Next Round Left 32 Bits:  10011100011010011000110010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110111010110100011000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100011010011000110010110110

       - Right 32 Bits:            00110110111010110100011000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       00110110111010110100011000010110
          - S-Box Result:     00010000110010000111000010100000   [per every group of 4-bits]
          - Split Into Two:   0001000011001000 [L] 0111000010100000 [R]
          - Swap Halves:      01110000101000000001000011001000
          - Bit Inversion:    10001111010111111110111100110111
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     11010110011001010111100100100000

          - FUNCTION OUTPUT:  11010110011001010111100100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100011010011000110010110110

       - FUNCTION OUTPUT:          11010110011001010111100100100000

       - Left XOR FUNCTION OUTPUT: 01001010000011001111010110010110

       - Next Round Left 32 Bits:  00110110111010110100011000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010000011001111010110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110111010110100011000010110

       - Right 32 Bits:            01001010000011001111010110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       01001010000011001111010110010110
          - S-Box Result:     01110100111101011011100100110000   [per every group of 4-bits]
          - Split Into Two:   0111010011110101 [L] 1011100100110000 [R]
          - Swap Halves:      10111001001100000111010011110101
          - Bit Inversion:    01000110110011111000101100001010
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     10011000111010000010101101110010

          - FUNCTION OUTPUT:  10011000111010000010101101110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110111010110100011000010110

       - FUNCTION OUTPUT:          10011000111010000010101101110010

       - Left XOR FUNCTION OUTPUT: 10101110000000110110110101100100

       - Next Round Left 32 Bits:  01001010000011001111010110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110000000110110110101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010000011001111010110010110

       - Right 32 Bits:            10101110000000110110110101100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       10101110000000110110110101100100
          - S-Box Result:     01001100111100010000011000000111   [per every group of 4-bits]
          - Split Into Two:   0100110011110001 [L] 0000011000000111 [R]
          - Swap Halves:      00000110000001110100110011110001
          - Bit Inversion:    11111001111110001011001100001110
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     01100001000100011100110100010100

          - FUNCTION OUTPUT:  01100001000100011100110100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010000011001111010110010110

       - FUNCTION OUTPUT:          01100001000100011100110100010100

       - Left XOR FUNCTION OUTPUT: 00101011000111010011100010000010

       - Next Round Left 32 Bits:  10101110000000110110110101100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011000111010011100010000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110000000110110110101100100

       - Right 32 Bits:            00101011000111010011100010000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       00101011000111010011100010000010
          - S-Box Result:     11101000101001100001001000101110   [per every group of 4-bits]
          - Split Into Two:   1110100010100110 [L] 0001001000101110 [R]
          - Swap Halves:      00010010001011101110100010100110
          - Bit Inversion:    11101101110100010001011101011001
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     10000011100000101000001001110010

          - FUNCTION OUTPUT:  10000011100000101000001001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110000000110110110101100100

       - FUNCTION OUTPUT:          10000011100000101000001001110010

       - Left XOR FUNCTION OUTPUT: 00101101100000011110111100010110

       - Next Round Left 32 Bits:  00101011000111010011100010000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101100000011110111100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011000111010011100010000010

       - Right 32 Bits:            00101101100000011110111100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       00101101100000011110111100010110
          - S-Box Result:     11100110001010101100101110100000   [per every group of 4-bits]
          - Split Into Two:   1110011000101010 [L] 1100101110100000 [R]
          - Swap Halves:      11001011101000001110011000101010
          - Bit Inversion:    00110100010111110001100111010101
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     01101000000110001111000010101111

          - FUNCTION OUTPUT:  01101000000110001111000010101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011000111010011100010000010

       - FUNCTION OUTPUT:          01101000000110001111000010101111

       - Left XOR FUNCTION OUTPUT: 01000011000001011100100000101101

       - Next Round Left 32 Bits:  00101101100000011110111100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011000001011100100000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101100000011110111100010110

       - Right 32 Bits:            01000011000001011100100000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       01000011000001011100100000101101
          - S-Box Result:     01110001111110010101001011100110   [per every group of 4-bits]
          - Split Into Two:   0111000111111001 [L] 0101001011100110 [R]
          - Swap Halves:      01010010111001100111000111111001
          - Bit Inversion:    10101101000110011000111000000110
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     01111100010000010001000010000101

          - FUNCTION OUTPUT:  01111100010000010001000010000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101100000011110111100010110

       - FUNCTION OUTPUT:          01111100010000010001000010000101

       - Left XOR FUNCTION OUTPUT: 01010001110000001111111110010011

       - Next Round Left 32 Bits:  01000011000001011100100000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001110000001111111110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011000001011100100000101101

       - Right 32 Bits:            01010001110000001111111110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       01010001110000001111111110010011
          - S-Box Result:     10011010010111111011101100110001   [per every group of 4-bits]
          - Split Into Two:   1001101001011111 [L] 1011101100110001 [R]
          - Swap Halves:      10111011001100011001101001011111
          - Bit Inversion:    01000100110011100110010110100000
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     00011110100011001101000001001011

          - FUNCTION OUTPUT:  00011110100011001101000001001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011000001011100100000101101

       - FUNCTION OUTPUT:          00011110100011001101000001001011

       - Left XOR FUNCTION OUTPUT: 01011101100010010001100001100110

       - Next Round Left 32 Bits:  01010001110000001111111110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101100010010001100001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001110000001111111110010011

       - Right 32 Bits:            01011101100010010001100001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       01011101100010010001100001100110
          - S-Box Result:     10010110001000111010001000000000   [per every group of 4-bits]
          - Split Into Two:   1001011000100011 [L] 1010001000000000 [R]
          - Swap Halves:      10100010000000001001011000100011
          - Bit Inversion:    01011101111111110110100111011100
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     11000011011101010000010110001010

          - FUNCTION OUTPUT:  11000011011101010000010110001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001110000001111111110010011

       - FUNCTION OUTPUT:          11000011011101010000010110001010

       - Left XOR FUNCTION OUTPUT: 10010010101101011111101000011001

       - Next Round Left 32 Bits:  01011101100010010001100001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010101101011111101000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101100010010001100001100110

       - Right 32 Bits:            10010010101101011111101000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       10010010101101011111101000011001
          - S-Box Result:     00111110100010011011010010100011   [per every group of 4-bits]
          - Split Into Two:   0011111010001001 [L] 1011010010100011 [R]
          - Swap Halves:      10110100101000110011111010001001
          - Bit Inversion:    01001011010111001100000101110110
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     10110011001011101101110011110011

          - FUNCTION OUTPUT:  10110011001011101101110011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101100010010001100001100110

       - FUNCTION OUTPUT:          10110011001011101101110011110011

       - Left XOR FUNCTION OUTPUT: 11101110101001111100010010010101

       - Next Round Left 32 Bits:  10010010101101011111101000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110101001111100010010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010101101011111101000011001

       - Right 32 Bits:            11101110101001111100010010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       11101110101001111100010010010101
          - S-Box Result:     11001100010011010101011100111001   [per every group of 4-bits]
          - Split Into Two:   1100110001001101 [L] 0101011100111001 [R]
          - Swap Halves:      01010111001110011100110001001101
          - Bit Inversion:    10101000110001100011001110110010
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     10110110100100000100001011011010

          - FUNCTION OUTPUT:  10110110100100000100001011011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010101101011111101000011001

       - FUNCTION OUTPUT:          10110110100100000100001011011010

       - Left XOR FUNCTION OUTPUT: 00100100001001011011100011000011

       - Next Round Left 32 Bits:  11101110101001111100010010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100001001011011100011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010010000100101101110001100001111101110101001111100010010010101

 > Decrypted Block:     0010010000100101101110001100001111101110101001111100010010010101


!!!CBC: Previous Ciphertext:                             0111100101111110111010111001011110101111111101011001000011001010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101110101011011010100110101010001000001010100100101010001011111

 > Final Processed Block:                                0101110101011011010100110101010001000001010100100101010001011111



Ciphertext Block 7:                                      1110111111110100000000101011110101110111110000000000010001010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111111101000000001010111101

       - Right 32 Bits:            01110111110000000000010001010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       01110111110000000000010001010110
          - S-Box Result:     11011101010111111111011110010000   [per every group of 4-bits]
          - Split Into Two:   1101110101011111 [L] 1111011110010000 [R]
          - Swap Halves:      11110111100100001101110101011111
          - Bit Inversion:    00001000011011110010001010100000
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     10001101100101110101000010111101

          - FUNCTION OUTPUT:  10001101100101110101000010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111111101000000001010111101

       - FUNCTION OUTPUT:          10001101100101110101000010111101

       - Left XOR FUNCTION OUTPUT: 01100010011000110101001000000000

       - Next Round Left 32 Bits:  01110111110000000000010001010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010011000110101001000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111110000000000010001010110

       - Right 32 Bits:            01100010011000110101001000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       01100010011000110101001000000000
          - S-Box Result:     00001110000000011001111011111111   [per every group of 4-bits]
          - Split Into Two:   0000111000000001 [L] 1001111011111111 [R]
          - Swap Halves:      10011110111111110000111000000001
          - Bit Inversion:    01100001000000001111000111111110
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     00001001000111101010011110001111

          - FUNCTION OUTPUT:  00001001000111101010011110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111110000000000010001010110

       - FUNCTION OUTPUT:          00001001000111101010011110001111

       - Left XOR FUNCTION OUTPUT: 01111110110111101010001111011001

       - Next Round Left 32 Bits:  01100010011000110101001000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110110111101010001111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010011000110101001000000000

       - Right 32 Bits:            01111110110111101010001111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       01111110110111101010001111011001
          - S-Box Result:     11011100011011000100000101100011   [per every group of 4-bits]
          - Split Into Two:   1101110001101100 [L] 0100000101100011 [R]
          - Swap Halves:      01000001011000111101110001101100
          - Bit Inversion:    10111110100111000010001110010011
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     01111000001100010110101010001001

          - FUNCTION OUTPUT:  01111000001100010110101010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010011000110101001000000000

       - FUNCTION OUTPUT:          01111000001100010110101010001001

       - Left XOR FUNCTION OUTPUT: 00011010010100100011100010001001

       - Next Round Left 32 Bits:  01111110110111101010001111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010010100100011100010001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110110111101010001111011001

       - Right 32 Bits:            00011010010100100011100010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       00011010010100100011100010001001
          - S-Box Result:     10100100100111100001001000100011   [per every group of 4-bits]
          - Split Into Two:   1010010010011110 [L] 0001001000100011 [R]
          - Swap Halves:      00010010001000111010010010011110
          - Bit Inversion:    11101101110111000101101101100001
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     01101100101101000000000101011010

          - FUNCTION OUTPUT:  01101100101101000000000101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110110111101010001111011001

       - FUNCTION OUTPUT:          01101100101101000000000101011010

       - Left XOR FUNCTION OUTPUT: 00010010011010101010001010000011

       - Next Round Left 32 Bits:  00011010010100100011100010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010011010101010001010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010010100100011100010001001

       - Right 32 Bits:            00010010011010101010001010000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       00010010011010101010001010000011
          - S-Box Result:     10101110000001000100111000100001   [per every group of 4-bits]
          - Split Into Two:   1010111000000100 [L] 0100111000100001 [R]
          - Swap Halves:      01001110001000011010111000000100
          - Bit Inversion:    10110001110111100101000111111011
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     11000111110010011001001100010001

          - FUNCTION OUTPUT:  11000111110010011001001100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010010100100011100010001001

       - FUNCTION OUTPUT:          11000111110010011001001100010001

       - Left XOR FUNCTION OUTPUT: 11011101100110111010101110011000

       - Next Round Left 32 Bits:  00010010011010101010001010000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101100110111010101110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010011010101010001010000011

       - Right 32 Bits:            11011101100110111010101110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       11011101100110111010101110011000
          - S-Box Result:     01100110001110000100100000110010   [per every group of 4-bits]
          - Split Into Two:   0110011000111000 [L] 0100100000110010 [R]
          - Swap Halves:      01001000001100100110011000111000
          - Bit Inversion:    10110111110011011001100111000111
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     01100011011011001101001110011100

          - FUNCTION OUTPUT:  01100011011011001101001110011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010011010101010001010000011

       - FUNCTION OUTPUT:          01100011011011001101001110011100

       - Left XOR FUNCTION OUTPUT: 01110001000001100111000100011111

       - Next Round Left 32 Bits:  11011101100110111010101110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001000001100111000100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101100110111010101110011000

       - Right 32 Bits:            01110001000001100111000100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       01110001000001100111000100011111
          - S-Box Result:     11011010111100001101101010101011   [per every group of 4-bits]
          - Split Into Two:   1101101011110000 [L] 1101101010101011 [R]
          - Swap Halves:      11011010101010111101101011110000
          - Bit Inversion:    00100101010101000010010100001111
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     01111100011011101011001100011000

          - FUNCTION OUTPUT:  01111100011011101011001100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101100110111010101110011000

       - FUNCTION OUTPUT:          01111100011011101011001100011000

       - Left XOR FUNCTION OUTPUT: 10100001111101010001100010000000

       - Next Round Left 32 Bits:  01110001000001100111000100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001111101010001100010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001000001100111000100011111

       - Right 32 Bits:            10100001111101010001100010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       10100001111101010001100010000000
          - S-Box Result:     01001010101110011010001000101111   [per every group of 4-bits]
          - Split Into Two:   0100101010111001 [L] 1010001000101111 [R]
          - Swap Halves:      10100010001011110100101010111001
          - Bit Inversion:    01011101110100001011010101000110
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     10000011111101110001010100111110

          - FUNCTION OUTPUT:  10000011111101110001010100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001000001100111000100011111

       - FUNCTION OUTPUT:          10000011111101110001010100111110

       - Left XOR FUNCTION OUTPUT: 11110010111100010110010000100001

       - Next Round Left 32 Bits:  10100001111101010001100010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010111100010110010000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001111101010001100010000000

       - Right 32 Bits:            11110010111100010110010000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       11110010111100010110010000100001
          - S-Box Result:     10111110101110100000011111101010   [per every group of 4-bits]
          - Split Into Two:   1011111010111010 [L] 0000011111101010 [R]
          - Swap Halves:      00000111111010101011111010111010
          - Bit Inversion:    11111000000101010100000101000101
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     01100000111111000011111101011111

          - FUNCTION OUTPUT:  01100000111111000011111101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001111101010001100010000000

       - FUNCTION OUTPUT:          01100000111111000011111101011111

       - Left XOR FUNCTION OUTPUT: 11000001000010010010011111011111

       - Next Round Left 32 Bits:  11110010111100010110010000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001000010010010011111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010111100010110010000100001

       - Right 32 Bits:            11000001000010010010011111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       11000001000010010010011111011111
          - S-Box Result:     01011010111100111110110101101011   [per every group of 4-bits]
          - Split Into Two:   0101101011110011 [L] 1110110101101011 [R]
          - Swap Halves:      11101101011010110101101011110011
          - Bit Inversion:    00010010100101001010010100001100
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     01111100110001110011000000100111

          - FUNCTION OUTPUT:  01111100110001110011000000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010111100010110010000100001

       - FUNCTION OUTPUT:          01111100110001110011000000100111

       - Left XOR FUNCTION OUTPUT: 10001110001101100101010000000110

       - Next Round Left 32 Bits:  11000001000010010010011111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110001101100101010000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001000010010010011111011111

       - Right 32 Bits:            10001110001101100101010000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       10001110001101100101010000000110
          - S-Box Result:     00101100000100001001011111110000   [per every group of 4-bits]
          - Split Into Two:   0010110000010000 [L] 1001011111110000 [R]
          - Swap Halves:      10010111111100000010110000010000
          - Bit Inversion:    01101000000011111101001111101111
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     00110100010010000011101010010101

          - FUNCTION OUTPUT:  00110100010010000011101010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001000010010010011111011111

       - FUNCTION OUTPUT:          00110100010010000011101010010101

       - Left XOR FUNCTION OUTPUT: 11110101010000010001110101001010

       - Next Round Left 32 Bits:  10001110001101100101010000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101010000010001110101001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110001101100101010000000110

       - Right 32 Bits:            11110101010000010001110101001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       11110101010000010001110101001010
          - S-Box Result:     10111001011110101010011001110100   [per every group of 4-bits]
          - Split Into Two:   1011100101111010 [L] 1010011001110100 [R]
          - Swap Halves:      10100110011101001011100101111010
          - Bit Inversion:    01011001100010110100011010000101
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     10001000110100111101100000000110

          - FUNCTION OUTPUT:  10001000110100111101100000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110001101100101010000000110

       - FUNCTION OUTPUT:          10001000110100111101100000000110

       - Left XOR FUNCTION OUTPUT: 00000110111001011000110000000000

       - Next Round Left 32 Bits:  11110101010000010001110101001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110111001011000110000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101010000010001110101001010

       - Right 32 Bits:            00000110111001011000110000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       00000110111001011000110000000000
          - S-Box Result:     11110000110010010010010111111111   [per every group of 4-bits]
          - Split Into Two:   1111000011001001 [L] 0010010111111111 [R]
          - Swap Halves:      00100101111111111111000011001001
          - Bit Inversion:    11011010000000000000111100110110
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     10000000010000101011101011011101

          - FUNCTION OUTPUT:  10000000010000101011101011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101010000010001110101001010

       - FUNCTION OUTPUT:          10000000010000101011101011011101

       - Left XOR FUNCTION OUTPUT: 01110101000000111010011110010111

       - Next Round Left 32 Bits:  00000110111001011000110000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101000000111010011110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110111001011000110000000000

       - Right 32 Bits:            01110101000000111010011110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       01110101000000111010011110010111
          - S-Box Result:     11011001111100010100110100111101   [per every group of 4-bits]
          - Split Into Two:   1101100111110001 [L] 0100110100111101 [R]
          - Swap Halves:      01001101001111011101100111110001
          - Bit Inversion:    10110010110000100010011000001110
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     00101100010010000100101001011000

          - FUNCTION OUTPUT:  00101100010010000100101001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110111001011000110000000000

       - FUNCTION OUTPUT:          00101100010010000100101001011000

       - Left XOR FUNCTION OUTPUT: 00101010101011011100011001011000

       - Next Round Left 32 Bits:  01110101000000111010011110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010101011011100011001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101000000111010011110010111

       - Right 32 Bits:            00101010101011011100011001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       00101010101011011100011001011000
          - S-Box Result:     11100100010001100101000010010010   [per every group of 4-bits]
          - Split Into Two:   1110010001000110 [L] 0101000010010010 [R]
          - Swap Halves:      01010000100100101110010001000110
          - Bit Inversion:    10101111011011010001101110111001
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     01010111000111110000011000111100

          - FUNCTION OUTPUT:  01010111000111110000011000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101000000111010011110010111

       - FUNCTION OUTPUT:          01010111000111110000011000111100

       - Left XOR FUNCTION OUTPUT: 00100010000111001010000110101011

       - Next Round Left 32 Bits:  00101010101011011100011001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010000111001010000110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010101011011100011001011000

       - Right 32 Bits:            00100010000111001010000110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       00100010000111001010000110101011
          - S-Box Result:     11101110101001010100101001001000   [per every group of 4-bits]
          - Split Into Two:   1110111010100101 [L] 0100101001001000 [R]
          - Swap Halves:      01001010010010001110111010100101
          - Bit Inversion:    10110101101101110001000101011010
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     10101011111000010110000000110010

          - FUNCTION OUTPUT:  10101011111000010110000000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010101011011100011001011000

       - FUNCTION OUTPUT:          10101011111000010110000000110010

       - Left XOR FUNCTION OUTPUT: 10000001010011001010011001101010

       - Next Round Left 32 Bits:  00100010000111001010000110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001010011001010011001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000000101001100101001100110101000100010000111001010000110101011

 > Decrypted Block:     1000000101001100101001100110101000100010000111001010000110101011


!!!CBC: Previous Ciphertext:                             1100100000011010111110110010100001010010010011001101000111011000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100101010110010111010100001001110000010100000111000001110011

 > Final Processed Block:                                0100100101010110010111010100001001110000010100000111000001110011



Ciphertext Block 8:                                      0011001101100011010110101111111100101100110100000010110111101100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011011000110101101011111111

       - Right 32 Bits:            00101100110100000010110111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       00101100110100000010110111101100
          - S-Box Result:     11100101011011111110011011000101   [per every group of 4-bits]
          - Split Into Two:   1110010101101111 [L] 1110011011000101 [R]
          - Swap Halves:      11100110110001011110010101101111
          - Bit Inversion:    00011001001110100001101010010000
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     10011100110000100110100010001101

          - FUNCTION OUTPUT:  10011100110000100110100010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011011000110101101011111111

       - FUNCTION OUTPUT:          10011100110000100110100010001101

       - Left XOR FUNCTION OUTPUT: 10101111101000010011001001110010

       - Next Round Left 32 Bits:  00101100110100000010110111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111101000010011001001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100110100000010110111101100

       - Right 32 Bits:            10101111101000010011001001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       10101111101000010011001001110010
          - S-Box Result:     01001011010010100001111011011110   [per every group of 4-bits]
          - Split Into Two:   0100101101001010 [L] 0001111011011110 [R]
          - Swap Halves:      00011110110111100100101101001010
          - Bit Inversion:    11100001001000011011010010110101
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     10001001001111111110001011000100

          - FUNCTION OUTPUT:  10001001001111111110001011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100110100000010110111101100

       - FUNCTION OUTPUT:          10001001001111111110001011000100

       - Left XOR FUNCTION OUTPUT: 10100101111011111100111100101000

       - Next Round Left 32 Bits:  10101111101000010011001001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101111011111100111100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111101000010011001001110010

       - Right 32 Bits:            10100101111011111100111100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       10100101111011111100111100101000
          - S-Box Result:     01001001110010110101101111100010   [per every group of 4-bits]
          - Split Into Two:   0100100111001011 [L] 0101101111100010 [R]
          - Swap Halves:      01011011111000100100100111001011
          - Bit Inversion:    10100100000111011011011000110100
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     01100010101100001111111100101110

          - FUNCTION OUTPUT:  01100010101100001111111100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111101000010011001001110010

       - FUNCTION OUTPUT:          01100010101100001111111100101110

       - Left XOR FUNCTION OUTPUT: 11001101000100011100110101011100

       - Next Round Left 32 Bits:  10100101111011111100111100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101000100011100110101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101111011111100111100101000

       - Right 32 Bits:            11001101000100011100110101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       11001101000100011100110101011100
          - S-Box Result:     01010110101010100101011010010101   [per every group of 4-bits]
          - Split Into Two:   0101011010101010 [L] 0101011010010101 [R]
          - Swap Halves:      01010110100101010101011010101010
          - Bit Inversion:    10101001011010101010100101010101
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     00101000000000101111001101101110

          - FUNCTION OUTPUT:  00101000000000101111001101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101111011111100111100101000

       - FUNCTION OUTPUT:          00101000000000101111001101101110

       - Left XOR FUNCTION OUTPUT: 10001101111011010011110001000110

       - Next Round Left 32 Bits:  11001101000100011100110101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101111011010011110001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101000100011100110101011100

       - Right 32 Bits:            10001101111011010011110001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       10001101111011010011110001000110
          - S-Box Result:     00100110110001100001010101110000   [per every group of 4-bits]
          - Split Into Two:   0010011011000110 [L] 0001010101110000 [R]
          - Swap Halves:      00010101011100000010011011000110
          - Bit Inversion:    11101010100011111101100100111001
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     10011100100110000001101111010011

          - FUNCTION OUTPUT:  10011100100110000001101111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101000100011100110101011100

       - FUNCTION OUTPUT:          10011100100110000001101111010011

       - Left XOR FUNCTION OUTPUT: 01010001100010011101011010001111

       - Next Round Left 32 Bits:  10001101111011010011110001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001100010011101011010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101111011010011110001000110

       - Right 32 Bits:            01010001100010011101011010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       01010001100010011101011010001111
          - S-Box Result:     10011010001000110110000000101011   [per every group of 4-bits]
          - Split Into Two:   1001101000100011 [L] 0110000000101011 [R]
          - Swap Halves:      01100000001010111001101000100011
          - Bit Inversion:    10011111110101000110010111011100
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     01001011011101010010111110000111

          - FUNCTION OUTPUT:  01001011011101010010111110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101111011010011110001000110

       - FUNCTION OUTPUT:          01001011011101010010111110000111

       - Left XOR FUNCTION OUTPUT: 11000110100110000001001111000001

       - Next Round Left 32 Bits:  01010001100010011101011010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110100110000001001111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001100010011101011010001111

       - Right 32 Bits:            11000110100110000001001111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       11000110100110000001001111000001
          - S-Box Result:     01010000001100101010000101011010   [per every group of 4-bits]
          - Split Into Two:   0101000000110010 [L] 1010000101011010 [R]
          - Swap Halves:      10100001010110100101000000110010
          - Bit Inversion:    01011110101001011010111111001101
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     00000111100111110011100111011010

          - FUNCTION OUTPUT:  00000111100111110011100111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001100010011101011010001111

       - FUNCTION OUTPUT:          00000111100111110011100111011010

       - Left XOR FUNCTION OUTPUT: 01010110000101101110111101010101

       - Next Round Left 32 Bits:  11000110100110000001001111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110000101101110111101010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110100110000001001111000001

       - Right 32 Bits:            01010110000101101110111101010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       01010110000101101110111101010101
          - S-Box Result:     10010000101000001100101110011001   [per every group of 4-bits]
          - Split Into Two:   1001000010100000 [L] 1100101110011001 [R]
          - Swap Halves:      11001011100110011001000010100000
          - Bit Inversion:    00110100011001100110111101011111
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     11101010010000011100111100100111

          - FUNCTION OUTPUT:  11101010010000011100111100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110100110000001001111000001

       - FUNCTION OUTPUT:          11101010010000011100111100100111

       - Left XOR FUNCTION OUTPUT: 00101100110110011101110011100110

       - Next Round Left 32 Bits:  01010110000101101110111101010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100110110011101110011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110000101101110111101010101

       - Right 32 Bits:            00101100110110011101110011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       00101100110110011101110011100110
          - S-Box Result:     11100101011000110110010111000000   [per every group of 4-bits]
          - Split Into Two:   1110010101100011 [L] 0110010111000000 [R]
          - Swap Halves:      01100101110000001110010101100011
          - Bit Inversion:    10011010001111110001101010011100
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     00000010110101100110010010000110

          - FUNCTION OUTPUT:  00000010110101100110010010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110000101101110111101010101

       - FUNCTION OUTPUT:          00000010110101100110010010000110

       - Left XOR FUNCTION OUTPUT: 01010100110000001000101111010011

       - Next Round Left 32 Bits:  00101100110110011101110011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100110000001000101111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100110110011101110011100110

       - Right 32 Bits:            01010100110000001000101111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       01010100110000001000101111010011
          - S-Box Result:     10010111010111110010100001100001   [per every group of 4-bits]
          - Split Into Two:   1001011101011111 [L] 0010100001100001 [R]
          - Swap Halves:      00101000011000011001011101011111
          - Bit Inversion:    11010111100111100110100010100000
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     10111001110011011111110110001011

          - FUNCTION OUTPUT:  10111001110011011111110110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100110110011101110011100110

       - FUNCTION OUTPUT:          10111001110011011111110110001011

       - Left XOR FUNCTION OUTPUT: 10010101000101000010000101101101

       - Next Round Left 32 Bits:  01010100110000001000101111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101000101000010000101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100110000001000101111010011

       - Right 32 Bits:            10010101000101000010000101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       10010101000101000010000101101101
          - S-Box Result:     00111001101001111110101000000110   [per every group of 4-bits]
          - Split Into Two:   0011100110100111 [L] 1110101000000110 [R]
          - Swap Halves:      11101010000001100011100110100111
          - Bit Inversion:    00010101111110011100011001011000
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     01001001101111100010111100100010

          - FUNCTION OUTPUT:  01001001101111100010111100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100110000001000101111010011

       - FUNCTION OUTPUT:          01001001101111100010111100100010

       - Left XOR FUNCTION OUTPUT: 00011101011111101010010011110001

       - Next Round Left 32 Bits:  10010101000101000010000101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101011111101010010011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101000101000010000101101101

       - Right 32 Bits:            00011101011111101010010011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       00011101011111101010010011110001
          - S-Box Result:     10100110110111000100011110111010   [per every group of 4-bits]
          - Split Into Two:   1010011011011100 [L] 0100011110111010 [R]
          - Swap Halves:      01000111101110101010011011011100
          - Bit Inversion:    10111000010001010101100100100011
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     01101001000111011100011110100000

          - FUNCTION OUTPUT:  01101001000111011100011110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101000101000010000101101101

       - FUNCTION OUTPUT:          01101001000111011100011110100000

       - Left XOR FUNCTION OUTPUT: 11111100000010011110011011001101

       - Next Round Left 32 Bits:  00011101011111101010010011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100000010011110011011001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101011111101010010011110001

       - Right 32 Bits:            11111100000010011110011011001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       11111100000010011110011011001101
          - S-Box Result:     10110101111100111100000001010110   [per every group of 4-bits]
          - Split Into Two:   1011010111110011 [L] 1100000001010110 [R]
          - Swap Halves:      11000000010101101011010111110011
          - Bit Inversion:    00111111101010010100101000001100
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     01100101111010111111111111100111

          - FUNCTION OUTPUT:  01100101111010111111111111100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101011111101010010011110001

       - FUNCTION OUTPUT:          01100101111010111111111111100111

       - Left XOR FUNCTION OUTPUT: 01111000100101010101101100010110

       - Next Round Left 32 Bits:  11111100000010011110011011001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000100101010101101100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100000010011110011011001101

       - Right 32 Bits:            01111000100101010101101100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       01111000100101010101101100010110
          - S-Box Result:     11010010001110011001100010100000   [per every group of 4-bits]
          - Split Into Two:   1101001000111001 [L] 1001100010100000 [R]
          - Swap Halves:      10011000101000001101001000111001
          - Bit Inversion:    01100111010111110010110111000110
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     11111001110101010100000110010000

          - FUNCTION OUTPUT:  11111001110101010100000110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100000010011110011011001101

       - FUNCTION OUTPUT:          11111001110101010100000110010000

       - Left XOR FUNCTION OUTPUT: 00000101110111001010011101011101

       - Next Round Left 32 Bits:  01111000100101010101101100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101110111001010011101011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000100101010101101100010110

       - Right 32 Bits:            00000101110111001010011101011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       00000101110111001010011101011101
          - S-Box Result:     11111001011001010100110110010110   [per every group of 4-bits]
          - Split Into Two:   1111100101100101 [L] 0100110110010110 [R]
          - Swap Halves:      01001101100101101111100101100101
          - Bit Inversion:    10110010011010010000011010011010
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     01001010000110110001101100011111

          - FUNCTION OUTPUT:  01001010000110110001101100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000100101010101101100010110

       - FUNCTION OUTPUT:          01001010000110110001101100011111

       - Left XOR FUNCTION OUTPUT: 00110010100011100100000000001001

       - Next Round Left 32 Bits:  00000101110111001010011101011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010100011100100000000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101110111001010011101011101

       - Right 32 Bits:            00110010100011100100000000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       00110010100011100100000000001001
          - S-Box Result:     00011110001011000111111111110011   [per every group of 4-bits]
          - Split Into Two:   0001111000101100 [L] 0111111111110011 [R]
          - Swap Halves:      01111111111100110001111000101100
          - Bit Inversion:    10000000000011001110000111010011
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     10011110010110101001000010111011

          - FUNCTION OUTPUT:  10011110010110101001000010111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101110111001010011101011101

       - FUNCTION OUTPUT:          10011110010110101001000010111011

       - Left XOR FUNCTION OUTPUT: 10011011100001100011011111100110

       - Next Round Left 32 Bits:  00110010100011100100000000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011100001100011011111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001101110000110001101111110011000110010100011100100000000001001

 > Decrypted Block:     1001101110000110001101111110011000110010100011100100000000001001


!!!CBC: Previous Ciphertext:                             1110111111110100000000101011110101110111110000000000010001010110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111010001110010001101010101101101000101010011100100010001011111

 > Final Processed Block:                                0111010001110010001101010101101101000101010011100100010001011111



Ciphertext Block 9:                                      0110101000000010010011101000000001111100100001100101110111100110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010000000100100111010000000

       - Right 32 Bits:            01111100100001100101110111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011010110111100101000101011011000101000101101110   [Subkey: 16]
          - Input Half:       01111100100001100101110111100110
          - S-Box Result:     11010101001000001001011011000000   [per every group of 4-bits]
          - Split Into Two:   1101010100100000 [L] 1001011011000000 [R]
          - Swap Halves:      10010110110000001101010100100000
          - Bit Inversion:    01101001001111110010101011011111
          - Compressed Key:   10000101111110000111001000011101   [done by compression P-Box]
          - XOR with Key:     11101100110001110101100011000010

          - FUNCTION OUTPUT:  11101100110001110101100011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010000000100100111010000000

       - FUNCTION OUTPUT:          11101100110001110101100011000010

       - Left XOR FUNCTION OUTPUT: 10000110110001010001011001000010

       - Next Round Left 32 Bits:  01111100100001100101110111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110110001010001011001000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100100001100101110111100110

       - Right 32 Bits:            10000110110001010001011001000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010110100101001000011010111010100100111010111010010   [Subkey: 15]
          - Input Half:       10000110110001010001011001000010
          - S-Box Result:     00100000010110011010000001111110   [per every group of 4-bits]
          - Split Into Two:   0010000001011001 [L] 1010000001111110 [R]
          - Swap Halves:      10100000011111100010000001011001
          - Bit Inversion:    01011111100000011101111110100110
          - Compressed Key:   01101000000111100101011001110001   [done by compression P-Box]
          - XOR with Key:     00110111100111111000100111010111

          - FUNCTION OUTPUT:  00110111100111111000100111010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100100001100101110111100110

       - FUNCTION OUTPUT:          00110111100111111000100111010111

       - Left XOR FUNCTION OUTPUT: 01001011000110011101010000110001

       - Next Round Left 32 Bits:  10000110110001010001011001000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011000110011101010000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110110001010001011001000010

       - Right 32 Bits:            01001011000110011101010000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001101001011010110111100101000101011011000101000101   [Subkey: 14]
          - Input Half:       01001011000110011101010000110001
          - S-Box Result:     01111000101000110110011100011010   [per every group of 4-bits]
          - Split Into Two:   0111100010100011 [L] 0110011100011010 [R]
          - Swap Halves:      01100111000110100111100010100011
          - Bit Inversion:    10011000111001011000011101011100
          - Compressed Key:   11000110101011010100100100011010   [done by compression P-Box]
          - XOR with Key:     01011110010010001100111001000110

          - FUNCTION OUTPUT:  01011110010010001100111001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110110001010001011001000010

       - FUNCTION OUTPUT:          01011110010010001100111001000110

       - Left XOR FUNCTION OUTPUT: 11011000100011011101100000000100

       - Next Round Left 32 Bits:  01001011000110011101010000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000100011011101100000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011000110011101010000110001

       - Right 32 Bits:            11011000100011011101100000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000110010110100101001000011010111010100100111010111   [Subkey: 13]
          - Input Half:       11011000100011011101100000000100
          - S-Box Result:     01100010001001100110001011110111   [per every group of 4-bits]
          - Split Into Two:   0110001000100110 [L] 0110001011110111 [R]
          - Swap Halves:      01100010111101110110001000100110
          - Bit Inversion:    10011101000010001001110111011001
          - Compressed Key:   10000001011010000101101000111011   [done by compression P-Box]
          - XOR with Key:     00011100011000001100011111100010

          - FUNCTION OUTPUT:  00011100011000001100011111100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011000110011101010000110001

       - FUNCTION OUTPUT:          00011100011000001100011111100010

       - Left XOR FUNCTION OUTPUT: 01010111011110010001001111010011

       - Next Round Left 32 Bits:  11011000100011011101100000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111011110010001001111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000100011011101100000000100

       - Right 32 Bits:            01010111011110010001001111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010110111001101001011010110111100101000101011011000101   [Subkey: 12]
          - Input Half:       01010111011110010001001111010011
          - S-Box Result:     10011101110100111010000101100001   [per every group of 4-bits]
          - Split Into Two:   1001110111010011 [L] 1010000101100001 [R]
          - Swap Halves:      10100001011000011001110111010011
          - Bit Inversion:    01011110100111100110001000101100
          - Compressed Key:   01110110000101111100001011101010   [done by compression P-Box]
          - XOR with Key:     00101000100010011010000011000110

          - FUNCTION OUTPUT:  00101000100010011010000011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000100011011101100000000100

       - FUNCTION OUTPUT:          00101000100010011010000011000110

       - Left XOR FUNCTION OUTPUT: 11110000000001000111100011000010

       - Next Round Left 32 Bits:  01010111011110010001001111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000000001000111100011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111011110010001001111010011

       - Right 32 Bits:            11110000000001000111100011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101001000110010110100101001000011010111010100100111   [Subkey: 11]
          - Input Half:       11110000000001000111100011000010
          - S-Box Result:     10111111111101111101001001011110   [per every group of 4-bits]
          - Split Into Two:   1011111111110111 [L] 1101001001011110 [R]
          - Swap Halves:      11010010010111101011111111110111
          - Bit Inversion:    00101101101000010100000000001000
          - Compressed Key:   11010100101000010100101001011011   [done by compression P-Box]
          - XOR with Key:     11111001000000000000101001010011

          - FUNCTION OUTPUT:  11111001000000000000101001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111011110010001001111010011

       - FUNCTION OUTPUT:          11111001000000000000101001010011

       - Left XOR FUNCTION OUTPUT: 10101110011110010001100110000000

       - Next Round Left 32 Bits:  11110000000001000111100011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110011110010001100110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000000001000111100011000010

       - Right 32 Bits:            10101110011110010001100110000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100010110111001101001011010110111100101000101011011   [Subkey: 10]
          - Input Half:       10101110011110010001100110000000
          - S-Box Result:     01001100110100111010001100101111   [per every group of 4-bits]
          - Split Into Two:   0100110011010011 [L] 1010001100101111 [R]
          - Swap Halves:      10100011001011110100110011010011
          - Bit Inversion:    01011100110100001011001100101100
          - Compressed Key:   01011001001110101001011000010111   [done by compression P-Box]
          - XOR with Key:     00000101111010100010010100111011

          - FUNCTION OUTPUT:  00000101111010100010010100111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000000001000111100011000010

       - FUNCTION OUTPUT:          00000101111010100010010100111011

       - Left XOR FUNCTION OUTPUT: 11110101111011100101110111111001

       - Next Round Left 32 Bits:  10101110011110010001100110000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101111011100101110111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110011110010001100110000000

       - Right 32 Bits:            11110101111011100101110111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101011101001000110010110100101001000011010111010100   [Subkey: 9]
          - Input Half:       11110101111011100101110111111001
          - S-Box Result:     10111001110011001001011010110011   [per every group of 4-bits]
          - Split Into Two:   1011100111001100 [L] 1001011010110011 [R]
          - Swap Halves:      10010110101100111011100111001100
          - Bit Inversion:    01101001010011000100011000110011
          - Compressed Key:   11011110001001111010000001111000   [done by compression P-Box]
          - XOR with Key:     10110111011010111110011001001011

          - FUNCTION OUTPUT:  10110111011010111110011001001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110011110010001100110000000

       - FUNCTION OUTPUT:          10110111011010111110011001001011

       - Left XOR FUNCTION OUTPUT: 00011001000100101111111111001011

       - Next Round Left 32 Bits:  11110101111011100101110111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011001000100101111111111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101111011100101110111111001

       - Right 32 Bits:            00011001000100101111111111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100010100010110111001101001011010110111100101000101   [Subkey: 8]
          - Input Half:       00011001000100101111111111001011
          - S-Box Result:     10100011101011101011101101011000   [per every group of 4-bits]
          - Split Into Two:   1010001110101110 [L] 1011101101011000 [R]
          - Swap Halves:      10111011010110001010001110101110
          - Bit Inversion:    01000100101001110101110001010001
          - Compressed Key:   10011000111010010111111000011010   [done by compression P-Box]
          - XOR with Key:     11011100010011100010001001001011

          - FUNCTION OUTPUT:  11011100010011100010001001001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101111011100101110111111001

       - FUNCTION OUTPUT:          11011100010011100010001001001011

       - Left XOR FUNCTION OUTPUT: 00101001101000000111111110110010

       - Next Round Left 32 Bits:  00011001000100101111111111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001101000000111111110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011001000100101111111111001011

       - Right 32 Bits:            00101001101000000111111110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010011101011101001000110010110100101001000011010111   [Subkey: 7]
          - Input Half:       00101001101000000111111110110010
          - S-Box Result:     11100011010011111101101110001110   [per every group of 4-bits]
          - Split Into Two:   1110001101001111 [L] 1101101110001110 [R]
          - Swap Halves:      11011011100011101110001101001111
          - Bit Inversion:    00100100011100010001110010110000
          - Compressed Key:   01101110010100111001010100101011   [done by compression P-Box]
          - XOR with Key:     01001010001000101000100110011011

          - FUNCTION OUTPUT:  01001010001000101000100110011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011001000100101111111111001011

       - FUNCTION OUTPUT:          01001010001000101000100110011011

       - Left XOR FUNCTION OUTPUT: 01010011001100000111011001010000

       - Next Round Left 32 Bits:  00101001101000000111111110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011001100000111011001010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001101000000111111110110010

       - Right 32 Bits:            01010011001100000111011001010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101101100010100010110111001101001011010110111100101   [Subkey: 6]
          - Input Half:       01010011001100000111011001010000
          - S-Box Result:     10010001000111111101000010011111   [per every group of 4-bits]
          - Split Into Two:   1001000100011111 [L] 1101000010011111 [R]
          - Swap Halves:      11010000100111111001000100011111
          - Bit Inversion:    00101111011000000110111011100000
          - Compressed Key:   01011100010001111110100101111010   [done by compression P-Box]
          - XOR with Key:     01110011001001111000011110011010

          - FUNCTION OUTPUT:  01110011001001111000011110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001101000000111111110110010

       - FUNCTION OUTPUT:          01110011001001111000011110011010

       - Left XOR FUNCTION OUTPUT: 01011010100001111111100000101000

       - Next Round Left 32 Bits:  01010011001100000111011001010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010100001111111100000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011001100000111011001010000

       - Right 32 Bits:            01011010100001111111100000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101010010011101011101001000110010110100101001000011   [Subkey: 5]
          - Input Half:       01011010100001111111100000101000
          - S-Box Result:     10010100001011011011001011100010   [per every group of 4-bits]
          - Split Into Two:   1001010000101101 [L] 1011001011100010 [R]
          - Swap Halves:      10110010111000101001010000101101
          - Bit Inversion:    01001101000111010110101111010010
          - Compressed Key:   11010001010110001001111010000011   [done by compression P-Box]
          - XOR with Key:     10011100010001011111010101010001

          - FUNCTION OUTPUT:  10011100010001011111010101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011001100000111011001010000

       - FUNCTION OUTPUT:          10011100010001011111010101010001

       - Left XOR FUNCTION OUTPUT: 11001111011101011000001100000001

       - Next Round Left 32 Bits:  01011010100001111111100000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111011101011000001100000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010100001111111100000101000

       - Right 32 Bits:            11001111011101011000001100000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010100010101101100010100010110111001101001011010110111   [Subkey: 4]
          - Input Half:       11001111011101011000001100000001
          - S-Box Result:     01011011110110010010000111111010   [per every group of 4-bits]
          - Split Into Two:   0101101111011001 [L] 0010000111111010 [R]
          - Swap Halves:      00100001111110100101101111011001
          - Bit Inversion:    11011110000001011010010000100110
          - Compressed Key:   01011010010000101011010111101011   [done by compression P-Box]
          - XOR with Key:     10000100010001110001000111001101

          - FUNCTION OUTPUT:  10000100010001110001000111001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010100001111111100000101000

       - FUNCTION OUTPUT:          10000100010001110001000111001101

       - Left XOR FUNCTION OUTPUT: 11011110110000001110100111100101

       - Next Round Left 32 Bits:  11001111011101011000001100000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110110000001110100111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111011101011000001100000001

       - Right 32 Bits:            11011110110000001110100111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001101011101010010011101011101001000110010110100101001   [Subkey: 3]
          - Input Half:       11011110110000001110100111100101
          - S-Box Result:     01101100010111111100001111001001   [per every group of 4-bits]
          - Split Into Two:   0110110001011111 [L] 1100001111001001 [R]
          - Swap Halves:      11000011110010010110110001011111
          - Bit Inversion:    00111100001101101001001110100000
          - Compressed Key:   10011110100010100110110001010110   [done by compression P-Box]
          - XOR with Key:     10100010101111001111111111110110

          - FUNCTION OUTPUT:  10100010101111001111111111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111011101011000001100000001

       - FUNCTION OUTPUT:          10100010101111001111111111110110

       - Left XOR FUNCTION OUTPUT: 01101101110010010111110011110111

       - Next Round Left 32 Bits:  11011110110000001110100111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101110010010111110011110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110110000001110100111100101

       - Right 32 Bits:            01101101110010010111110011110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011110010100010101101100010100010110111001101001011010   [Subkey: 2]
          - Input Half:       01101101110010010111110011110111
          - S-Box Result:     00000110010100111101010110111101   [per every group of 4-bits]
          - Split Into Two:   0000011001010011 [L] 1101010110111101 [R]
          - Swap Halves:      11010101101111010000011001010011
          - Bit Inversion:    00101010010000101111100110101100
          - Compressed Key:   11111000011100100001110110000101   [done by compression P-Box]
          - XOR with Key:     11010010001100001110010000101001

          - FUNCTION OUTPUT:  11010010001100001110010000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110110000001110100111100101

       - FUNCTION OUTPUT:          11010010001100001110010000101001

       - Left XOR FUNCTION OUTPUT: 00001100111100000000110111001100

       - Next Round Left 32 Bits:  01101101110010010111110011110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100111100000000110111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101110010010111110011110111

       - Right 32 Bits:            00001100111100000000110111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100001101011101010010011101011101001000110010110100   [Subkey: 1]
          - Input Half:       00001100111100000000110111001100
          - S-Box Result:     11110101101111111111011001010101   [per every group of 4-bits]
          - Split Into Two:   1111010110111111 [L] 1111011001010101 [R]
          - Swap Halves:      11110110010101011111010110111111
          - Bit Inversion:    00001001101010100000101001000000
          - Compressed Key:   00011110010101100111000101101000   [done by compression P-Box]
          - XOR with Key:     00010111111111000111101100101000

          - FUNCTION OUTPUT:  00010111111111000111101100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101110010010111110011110111

       - FUNCTION OUTPUT:          00010111111111000111101100101000

       - Left XOR FUNCTION OUTPUT: 01111010001101010000011111011111

       - Next Round Left 32 Bits:  00001100111100000000110111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010001101010000011111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111101000110101000001111101111100001100111100000000110111001100

 > Decrypted Block:     0111101000110101000001111101111100001100111100000000110111001100


!!!CBC: Previous Ciphertext:                             0011001101100011010110101111111100101100110100000010110111101100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100101010110010111010010000000100000001000000010000000100000

 > Final Processed Block:                                0100100101010110010111010010000000100000001000000010000000100000




BLOCKS IN ASCII:             [START_KEY]qS4enOP1eTpTeMIqwQSo2[END_KEY][START_IV]BpPpstr5[END_IV]     

