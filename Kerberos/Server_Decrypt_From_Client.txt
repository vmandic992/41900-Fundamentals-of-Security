Triple DES Capture

168-bit key: yQeHQPoV28ygJAPTPyAdX

3 x 56-bit DES keys: yQeHQPo, V28ygJA, PTPyAdX

Initialization Vector: fqPB6lLk

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: PTPyAdX
In Binary:  01010000010101000101000001111001010000010110010001011000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 11111010101110101111100001101011111010011011101001111010
Subkey 2  : 01010100010100000111100101000001011001000101100001010000
Subkey 3  : 10111010111110000110101111101001101110100111101011111010
Subkey 4  : 01010000011110010100000101100100010110000101000001010100
Subkey 5  : 11111000011010111110100110111010011110101111101010111010
Subkey 6  : 01111001010000010110010001011000010100000101010001010000
Subkey 7  : 01101011111010011011101001111010111110101011101011111000
Subkey 8  : 01000001011001000101100001010000010101000101000001111001
Subkey 9  : 11101001101110100111101011111010101110101111100001101011
Subkey 10 : 01100100010110000101000001010100010100000111100101000001
Subkey 11 : 10111010011110101111101010111010111110000110101111101001
Subkey 12 : 01011000010100000101010001010000011110010100000101100100
Subkey 13 : 01111010111110101011101011111000011010111110100110111010
Subkey 14 : 01010000010101000101000001111001010000010110010001011000
Subkey 15 : 11111010101110101111100001101011111010011011101001111010
Subkey 16 : 01010100010100000111100101000001011001000101100001010000

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ≥ÃÂd?Xr±Hr“‡2N§1	lÊ¨6(D.=?†?∂&ÆÙS!◊?¿‚ÁÕ.—

Data padded with spaces : ≥ÃÂd?Xr±Hr“‡2N§1	lÊ¨6(D.=?†?∂&ÆÙS!◊?¿‚ÁÕ.—[Padded with '0' spaces]

Data in ASCII           : 179,204,229,100,144,88,114,22,177,72,114,210,224,50,78,164,49,9,108,230,172,54,28,40,68,46,61,152,160,152,182,3,38,174,127,244,83,33,215,145,192,226,231,22,205,5,46,209,

Data in Binary          : 10110011,11001100,11100101,01100100,10010000,01011000,01110010,00010110,10110001,01001000,01110010,11010010,11100000,00110010,01001110,10100100,00110001,00001001,01101100,11100110,10101100,00110110,00011100,00101000,01000100,00101110,00111101,10011000,10100000,10011000,10110110,00000011,00100110,10101110,01111111,11110100,01010011,00100001,11010111,10010001,11000000,11100010,11100111,00010110,11001101,00000101,00101110,11010001,

Data in 64-bit Blocks   : 1011001111001100111001010110010010010000010110000111001000010110,1011000101001000011100101101001011100000001100100100111010100100,0011000100001001011011001110011010101100001101100001110000101000,0100010000101110001111011001100010100000100110001011011000000011,0010011010101110011111111111010001010011001000011101011110010001,1100000011100010111001110001011011001101000001010010111011010001,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0110011001110001010100000100001000110110011011000100110001101011)

Ciphertext Block 1:                                      1011001111001100111001010110010010010000010110000111001000010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011110011001110010101100100

       - Right 32 Bits:            10010000010110000111001000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 16]
          - Input Half:       10010000010110000111001000010110
          - S-Box Result:     00111111100100101101111010100000   [per every group of 4-bits]
          - Split Into Two:   0011111110010010 [L] 1101111010100000 [R]
          - Swap Halves:      11011110101000000011111110010010
          - Bit Inversion:    00100001010111111100000001101101
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     01111001101001111011001001101101

          - FUNCTION OUTPUT:  01111001101001111011001001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011110011001110010101100100

       - FUNCTION OUTPUT:          01111001101001111011001001101101

       - Left XOR FUNCTION OUTPUT: 11001010011010110101011100001001

       - Next Round Left 32 Bits:  10010000010110000111001000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010011010110101011100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000010110000111001000010110

       - Right 32 Bits:            11001010011010110101011100001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 15]
          - Input Half:       11001010011010110101011100001001
          - S-Box Result:     01010100000010001001110111110011   [per every group of 4-bits]
          - Split Into Two:   0101010000001000 [L] 1001110111110011 [R]
          - Swap Halves:      10011101111100110101010000001000
          - Bit Inversion:    01100010000011001010101111110111
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     10001111111101010101001001110010

          - FUNCTION OUTPUT:  10001111111101010101001001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000010110000111001000010110

       - FUNCTION OUTPUT:          10001111111101010101001001110010

       - Left XOR FUNCTION OUTPUT: 00011111101011010010000001100100

       - Next Round Left 32 Bits:  11001010011010110101011100001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111101011010010000001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010011010110101011100001001

       - Right 32 Bits:            00011111101011010010000001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010101000101000001111001010000010110010001011000   [Subkey: 14]
          - Input Half:       00011111101011010010000001100100
          - S-Box Result:     10101011010001101110111100000111   [per every group of 4-bits]
          - Split Into Two:   1010101101000110 [L] 1110111100000111 [R]
          - Swap Halves:      11101111000001111010101101000110
          - Bit Inversion:    00010000111110000101010010111001
          - Compressed Key:   01001010010110110101101001000100   [done by compression P-Box]
          - XOR with Key:     01011010101000110000111011111101

          - FUNCTION OUTPUT:  01011010101000110000111011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010011010110101011100001001

       - FUNCTION OUTPUT:          01011010101000110000111011111101

       - Left XOR FUNCTION OUTPUT: 10010000110010000101100111110100

       - Next Round Left 32 Bits:  00011111101011010010000001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000110010000101100111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111101011010010000001100100

       - Right 32 Bits:            10010000110010000101100111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111110101011101011111000011010111110100110111010   [Subkey: 13]
          - Input Half:       10010000110010000101100111110100
          - S-Box Result:     00111111010100101001001110110111   [per every group of 4-bits]
          - Split Into Two:   0011111101010010 [L] 1001001110110111 [R]
          - Swap Halves:      10010011101101110011111101010010
          - Bit Inversion:    01101100010010001100000010101101
          - Compressed Key:   11101101101111110011111100110101   [done by compression P-Box]
          - XOR with Key:     10000001111101111111111110011000

          - FUNCTION OUTPUT:  10000001111101111111111110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111101011010010000001100100

       - FUNCTION OUTPUT:          10000001111101111111111110011000

       - Left XOR FUNCTION OUTPUT: 10011110010110101101111111111100

       - Next Round Left 32 Bits:  10010000110010000101100111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110010110101101111111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000110010000101100111110100

       - Right 32 Bits:            10011110010110101101111111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010100000101010001010000011110010100000101100100   [Subkey: 12]
          - Input Half:       10011110010110101101111111111100
          - S-Box Result:     00111100100101000110101110110101   [per every group of 4-bits]
          - Split Into Two:   0011110010010100 [L] 0110101110110101 [R]
          - Swap Halves:      01101011101101010011110010010100
          - Bit Inversion:    10010100010010101100001101101011
          - Compressed Key:   11001000010110100011101000011000   [done by compression P-Box]
          - XOR with Key:     01011100000100001111100101110011

          - FUNCTION OUTPUT:  01011100000100001111100101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000110010000101100111110100

       - FUNCTION OUTPUT:          01011100000100001111100101110011

       - Left XOR FUNCTION OUTPUT: 11001100110110001010000010000111

       - Next Round Left 32 Bits:  10011110010110101101111111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100110110001010000010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110010110101101111111111100

       - Right 32 Bits:            11001100110110001010000010000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010011110101111101010111010111110000110101111101001   [Subkey: 11]
          - Input Half:       11001100110110001010000010000111
          - S-Box Result:     01010101011000100100111100101101   [per every group of 4-bits]
          - Split Into Two:   0101010101100010 [L] 0100111100101101 [R]
          - Swap Halves:      01001111001011010101010101100010
          - Bit Inversion:    10110000110100101010101010011101
          - Compressed Key:   11101101111101111011001010110110   [done by compression P-Box]
          - XOR with Key:     01011101001001010001100000101011

          - FUNCTION OUTPUT:  01011101001001010001100000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110010110101101111111111100

       - FUNCTION OUTPUT:          01011101001001010001100000101011

       - Left XOR FUNCTION OUTPUT: 11000011011111111100011111010111

       - Next Round Left 32 Bits:  11001100110110001010000010000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011011111111100011111010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100110110001010000010000111

       - Right 32 Bits:            11000011011111111100011111010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010110000101000001010100010100000111100101000001   [Subkey: 10]
          - Input Half:       11000011011111111100011111010111
          - S-Box Result:     01010001110110110101110101101101   [per every group of 4-bits]
          - Split Into Two:   0101000111011011 [L] 0101110101101101 [R]
          - Swap Halves:      01011101011011010101000111011011
          - Bit Inversion:    10100010100100101010111000100100
          - Compressed Key:   00011001010110100001001000010010   [done by compression P-Box]
          - XOR with Key:     10111011110010001011110000110110

          - FUNCTION OUTPUT:  10111011110010001011110000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100110110001010000010000111

       - FUNCTION OUTPUT:          10111011110010001011110000110110

       - Left XOR FUNCTION OUTPUT: 01110111000100000001110010110001

       - Next Round Left 32 Bits:  11000011011111111100011111010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111000100000001110010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011011111111100011111010111

       - Right 32 Bits:            01110111000100000001110010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101110100111101011111010101110101111100001101011   [Subkey: 9]
          - Input Half:       01110111000100000001110010110001
          - S-Box Result:     11011101101011111010010110001010   [per every group of 4-bits]
          - Split Into Two:   1101110110101111 [L] 1010010110001010 [R]
          - Swap Halves:      10100101100010101101110110101111
          - Bit Inversion:    01011010011101010010001001010000
          - Compressed Key:   10001101111111111010011100000111   [done by compression P-Box]
          - XOR with Key:     11010111100010101000010101010111

          - FUNCTION OUTPUT:  11010111100010101000010101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011011111111100011111010111

       - FUNCTION OUTPUT:          11010111100010101000010101010111

       - Left XOR FUNCTION OUTPUT: 00010100111101010100001010000000

       - Next Round Left 32 Bits:  01110111000100000001110010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100111101010100001010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111000100000001110010110001

       - Right 32 Bits:            00010100111101010100001010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011001000101100001010000010101000101000001111001   [Subkey: 8]
          - Input Half:       00010100111101010100001010000000
          - S-Box Result:     10100111101110010111111000101111   [per every group of 4-bits]
          - Split Into Two:   1010011110111001 [L] 0111111000101111 [R]
          - Swap Halves:      01111110001011111010011110111001
          - Bit Inversion:    10000001110100000101100001000110
          - Compressed Key:   00000110011110100001001000000110   [done by compression P-Box]
          - XOR with Key:     10000111101010100100101001000000

          - FUNCTION OUTPUT:  10000111101010100100101001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111000100000001110010110001

       - FUNCTION OUTPUT:          10000111101010100100101001000000

       - Left XOR FUNCTION OUTPUT: 11110000101110100101011011110001

       - Next Round Left 32 Bits:  00010100111101010100001010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000101110100101011011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100111101010100001010000000

       - Right 32 Bits:            11110000101110100101011011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011111010011011101001111010111110101011101011111000   [Subkey: 7]
          - Input Half:       11110000101110100101011011110001
          - S-Box Result:     10111111100001001001000010111010   [per every group of 4-bits]
          - Split Into Two:   1011111110000100 [L] 1001000010111010 [R]
          - Swap Halves:      10010000101110101011111110000100
          - Bit Inversion:    01101111010001010100000001111011
          - Compressed Key:   10100101101110111011010110100100   [done by compression P-Box]
          - XOR with Key:     11001010111111101111010111011111

          - FUNCTION OUTPUT:  11001010111111101111010111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100111101010100001010000000

       - FUNCTION OUTPUT:          11001010111111101111010111011111

       - Left XOR FUNCTION OUTPUT: 11011110000010111011011101011111

       - Next Round Left 32 Bits:  11110000101110100101011011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110000010111011011101011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000101110100101011011110001

       - Right 32 Bits:            11011110000010111011011101011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010110010001011000010100000101010001010000   [Subkey: 6]
          - Input Half:       11011110000010111011011101011111
          - S-Box Result:     01101100111110001000110110011011   [per every group of 4-bits]
          - Split Into Two:   0110110011111000 [L] 1000110110011011 [R]
          - Swap Halves:      10001101100110110110110011111000
          - Bit Inversion:    01110010011001001001001100000111
          - Compressed Key:   11000000110010100001001001000000   [done by compression P-Box]
          - XOR with Key:     10110010101011101000000101000111

          - FUNCTION OUTPUT:  10110010101011101000000101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000101110100101011011110001

       - FUNCTION OUTPUT:          10110010101011101000000101000111

       - Left XOR FUNCTION OUTPUT: 01000010000101001101011110110110

       - Next Round Left 32 Bits:  11011110000010111011011101011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010000101001101011110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110000010111011011101011111

       - Right 32 Bits:            01000010000101001101011110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111000011010111110100110111010011110101111101010111010   [Subkey: 5]
          - Input Half:       01000010000101001101011110110110
          - S-Box Result:     01111110101001110110110110000000   [per every group of 4-bits]
          - Split Into Two:   0111111010100111 [L] 0110110110000000 [R]
          - Swap Halves:      01101101100000000111111010100111
          - Bit Inversion:    10010010011111111000000101011000
          - Compressed Key:   11000101111001110011011110100101   [done by compression P-Box]
          - XOR with Key:     01010111100110001011011011111101

          - FUNCTION OUTPUT:  01010111100110001011011011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110000010111011011101011111

       - FUNCTION OUTPUT:          01010111100110001011011011111101

       - Left XOR FUNCTION OUTPUT: 10001001100100110000000110100010

       - Next Round Left 32 Bits:  01000010000101001101011110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001100100110000000110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010000101001101011110110110

       - Right 32 Bits:            10001001100100110000000110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011110010100000101100100010110000101000001010100   [Subkey: 4]
          - Input Half:       10001001100100110000000110100010
          - S-Box Result:     00100011001100011111101001001110   [per every group of 4-bits]
          - Split Into Two:   0010001100110001 [L] 1111101001001110 [R]
          - Swap Halves:      11111010010011100010001100110001
          - Bit Inversion:    00000101101100011101110011001110
          - Compressed Key:   01001101010010010001001000001000   [done by compression P-Box]
          - XOR with Key:     01001000111110001100111011000110

          - FUNCTION OUTPUT:  01001000111110001100111011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010000101001101011110110110

       - FUNCTION OUTPUT:          01001000111110001100111011000110

       - Left XOR FUNCTION OUTPUT: 00001010111011000001100101110000

       - Next Round Left 32 Bits:  10001001100100110000000110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010111011000001100101110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001100100110000000110100010

       - Right 32 Bits:            00001010111011000001100101110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010111110000110101111101001101110100111101011111010   [Subkey: 3]
          - Input Half:       00001010111011000001100101110000
          - S-Box Result:     11110100110001011010001111011111   [per every group of 4-bits]
          - Split Into Two:   1111010011000101 [L] 1010001111011111 [R]
          - Swap Halves:      10100011110111111111010011000101
          - Bit Inversion:    01011100001000000000101100111010
          - Compressed Key:   11101101111011011110011010100101   [done by compression P-Box]
          - XOR with Key:     10110001110011011110110110011111

          - FUNCTION OUTPUT:  10110001110011011110110110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001100100110000000110100010

       - FUNCTION OUTPUT:          10110001110011011110110110011111

       - Left XOR FUNCTION OUTPUT: 00111000010111101110110000111101

       - Next Round Left 32 Bits:  00001010111011000001100101110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000010111101110110000111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010111011000001100101110000

       - Right 32 Bits:            00111000010111101110110000111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 2]
          - Input Half:       00111000010111101110110000111101
          - S-Box Result:     00010010100111001100010100010110   [per every group of 4-bits]
          - Split Into Two:   0001001010011100 [L] 1100010100010110 [R]
          - Swap Halves:      11000101000101100001001010011100
          - Bit Inversion:    00111010111010011110110101100011
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     01100010000100011001111101100011

          - FUNCTION OUTPUT:  01100010000100011001111101100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010111011000001100101110000

       - FUNCTION OUTPUT:          01100010000100011001111101100011

       - Left XOR FUNCTION OUTPUT: 01101000111111011000011000010011

       - Next Round Left 32 Bits:  00111000010111101110110000111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000111111011000011000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000010111101110110000111101

       - Right 32 Bits:            01101000111111011000011000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 1]
          - Input Half:       01101000111111011000011000010011
          - S-Box Result:     00000010101101100010000010100001   [per every group of 4-bits]
          - Split Into Two:   0000001010110110 [L] 0010000010100001 [R]
          - Swap Halves:      00100000101000010000001010110110
          - Bit Inversion:    11011111010111101111110101001001
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     00110010101001110000010011001100

          - FUNCTION OUTPUT:  00110010101001110000010011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000010111101110110000111101

       - FUNCTION OUTPUT:          00110010101001110000010011001100

       - Left XOR FUNCTION OUTPUT: 00001010111110011110100011110001

       - Next Round Left 32 Bits:  01101000111111011000011000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010111110011110100011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000101011111001111010001111000101101000111111011000011000010011

 > Decrypted Block:     0000101011111001111010001111000101101000111111011000011000010011


!!!CBC: Previous Ciphertext:                             0110011001110001010100000100001000110110011011000100110001101011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110110010001000101110001011001101011110100100011100101001111000

 > Final Processed Block:                                0110110010001000101110001011001101011110100100011100101001111000



Ciphertext Block 2:                                      1011000101001000011100101101001011100000001100100100111010100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001010010000111001011010010

       - Right 32 Bits:            11100000001100100100111010100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 16]
          - Input Half:       11100000001100100100111010100100
          - S-Box Result:     11001111000111100111110001000111   [per every group of 4-bits]
          - Split Into Two:   1100111100011110 [L] 0111110001000111 [R]
          - Swap Halves:      01111100010001111100111100011110
          - Bit Inversion:    10000011101110000011000011100001
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     11011011010000000100001011100001

          - FUNCTION OUTPUT:  11011011010000000100001011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001010010000111001011010010

       - FUNCTION OUTPUT:          11011011010000000100001011100001

       - Left XOR FUNCTION OUTPUT: 01101010000010000011000000110011

       - Next Round Left 32 Bits:  11100000001100100100111010100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010000010000011000000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000001100100100111010100100

       - Right 32 Bits:            01101010000010000011000000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 15]
          - Input Half:       01101010000010000011000000110011
          - S-Box Result:     00000100111100100001111100010001   [per every group of 4-bits]
          - Split Into Two:   0000010011110010 [L] 0001111100010001 [R]
          - Swap Halves:      00011111000100010000010011110010
          - Bit Inversion:    11100000111011101111101100001101
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     00001101000101110000001010001000

          - FUNCTION OUTPUT:  00001101000101110000001010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000001100100100111010100100

       - FUNCTION OUTPUT:          00001101000101110000001010001000

       - Left XOR FUNCTION OUTPUT: 11101101001001010100110000101100

       - Next Round Left 32 Bits:  01101010000010000011000000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101001001010100110000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010000010000011000000110011

       - Right 32 Bits:            11101101001001010100110000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010101000101000001111001010000010110010001011000   [Subkey: 14]
          - Input Half:       11101101001001010100110000101100
          - S-Box Result:     11000110111010010111010111100101   [per every group of 4-bits]
          - Split Into Two:   1100011011101001 [L] 0111010111100101 [R]
          - Swap Halves:      01110101111001011100011011101001
          - Bit Inversion:    10001010000110100011100100010110
          - Compressed Key:   01001010010110110101101001000100   [done by compression P-Box]
          - XOR with Key:     11000000010000010110001101010010

          - FUNCTION OUTPUT:  11000000010000010110001101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010000010000011000000110011

       - FUNCTION OUTPUT:          11000000010000010110001101010010

       - Left XOR FUNCTION OUTPUT: 10101010010010010101001101100001

       - Next Round Left 32 Bits:  11101101001001010100110000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010010010010101001101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101001001010100110000101100

       - Right 32 Bits:            10101010010010010101001101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111110101011101011111000011010111110100110111010   [Subkey: 13]
          - Input Half:       10101010010010010101001101100001
          - S-Box Result:     01000100011100111001000100001010   [per every group of 4-bits]
          - Split Into Two:   0100010001110011 [L] 1001000100001010 [R]
          - Swap Halves:      10010001000010100100010001110011
          - Bit Inversion:    01101110111101011011101110001100
          - Compressed Key:   11101101101111110011111100110101   [done by compression P-Box]
          - XOR with Key:     10000011010010101000010010111001

          - FUNCTION OUTPUT:  10000011010010101000010010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101001001010100110000101100

       - FUNCTION OUTPUT:          10000011010010101000010010111001

       - Left XOR FUNCTION OUTPUT: 01101110011011111100100010010101

       - Next Round Left 32 Bits:  10101010010010010101001101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110011011111100100010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010010010010101001101100001

       - Right 32 Bits:            01101110011011111100100010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010100000101010001010000011110010100000101100100   [Subkey: 12]
          - Input Half:       01101110011011111100100010010101
          - S-Box Result:     00001100000010110101001000111001   [per every group of 4-bits]
          - Split Into Two:   0000110000001011 [L] 0101001000111001 [R]
          - Swap Halves:      01010010001110010000110000001011
          - Bit Inversion:    10101101110001101111001111110100
          - Compressed Key:   11001000010110100011101000011000   [done by compression P-Box]
          - XOR with Key:     01100101100111001100100111101100

          - FUNCTION OUTPUT:  01100101100111001100100111101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010010010010101001101100001

       - FUNCTION OUTPUT:          01100101100111001100100111101100

       - Left XOR FUNCTION OUTPUT: 11001111110101011001101010001101

       - Next Round Left 32 Bits:  01101110011011111100100010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111110101011001101010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110011011111100100010010101

       - Right 32 Bits:            11001111110101011001101010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010011110101111101010111010111110000110101111101001   [Subkey: 11]
          - Input Half:       11001111110101011001101010001101
          - S-Box Result:     01011011011010010011010000100110   [per every group of 4-bits]
          - Split Into Two:   0101101101101001 [L] 0011010000100110 [R]
          - Swap Halves:      00110100001001100101101101101001
          - Bit Inversion:    11001011110110011010010010010110
          - Compressed Key:   11101101111101111011001010110110   [done by compression P-Box]
          - XOR with Key:     00100110001011100001011000100000

          - FUNCTION OUTPUT:  00100110001011100001011000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110011011111100100010010101

       - FUNCTION OUTPUT:          00100110001011100001011000100000

       - Left XOR FUNCTION OUTPUT: 01001000010000011101111010110101

       - Next Round Left 32 Bits:  11001111110101011001101010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000010000011101111010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111110101011001101010001101

       - Right 32 Bits:            01001000010000011101111010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010110000101000001010100010100000111100101000001   [Subkey: 10]
          - Input Half:       01001000010000011101111010110101
          - S-Box Result:     01110010011110100110110010001001   [per every group of 4-bits]
          - Split Into Two:   0111001001111010 [L] 0110110010001001 [R]
          - Swap Halves:      01101100100010010111001001111010
          - Bit Inversion:    10010011011101101000110110000101
          - Compressed Key:   00011001010110100001001000010010   [done by compression P-Box]
          - XOR with Key:     10001010001011001001111110010111

          - FUNCTION OUTPUT:  10001010001011001001111110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111110101011001101010001101

       - FUNCTION OUTPUT:          10001010001011001001111110010111

       - Left XOR FUNCTION OUTPUT: 01000101111110010000010100011010

       - Next Round Left 32 Bits:  01001000010000011101111010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101111110010000010100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000010000011101111010110101

       - Right 32 Bits:            01000101111110010000010100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101110100111101011111010101110101111100001101011   [Subkey: 9]
          - Input Half:       01000101111110010000010100011010
          - S-Box Result:     01111001101100111111100110100100   [per every group of 4-bits]
          - Split Into Two:   0111100110110011 [L] 1111100110100100 [R]
          - Swap Halves:      11111001101001000111100110110011
          - Bit Inversion:    00000110010110111000011001001100
          - Compressed Key:   10001101111111111010011100000111   [done by compression P-Box]
          - XOR with Key:     10001011101001000010000101001011

          - FUNCTION OUTPUT:  10001011101001000010000101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000010000011101111010110101

       - FUNCTION OUTPUT:          10001011101001000010000101001011

       - Left XOR FUNCTION OUTPUT: 11000011111001011111111111111110

       - Next Round Left 32 Bits:  01000101111110010000010100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011111001011111111111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101111110010000010100011010

       - Right 32 Bits:            11000011111001011111111111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011001000101100001010000010101000101000001111001   [Subkey: 8]
          - Input Half:       11000011111001011111111111111110
          - S-Box Result:     01010001110010011011101110111100   [per every group of 4-bits]
          - Split Into Two:   0101000111001001 [L] 1011101110111100 [R]
          - Swap Halves:      10111011101111000101000111001001
          - Bit Inversion:    01000100010000111010111000110110
          - Compressed Key:   00000110011110100001001000000110   [done by compression P-Box]
          - XOR with Key:     01000010001110011011110000110000

          - FUNCTION OUTPUT:  01000010001110011011110000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101111110010000010100011010

       - FUNCTION OUTPUT:          01000010001110011011110000110000

       - Left XOR FUNCTION OUTPUT: 00000111110000001011100100101010

       - Next Round Left 32 Bits:  11000011111001011111111111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111110000001011100100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011111001011111111111111110

       - Right 32 Bits:            00000111110000001011100100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011111010011011101001111010111110101011101011111000   [Subkey: 7]
          - Input Half:       00000111110000001011100100101010
          - S-Box Result:     11111101010111111000001111100100   [per every group of 4-bits]
          - Split Into Two:   1111110101011111 [L] 1000001111100100 [R]
          - Swap Halves:      10000011111001001111110101011111
          - Bit Inversion:    01111100000110110000001010100000
          - Compressed Key:   10100101101110111011010110100100   [done by compression P-Box]
          - XOR with Key:     11011001101000001011011100000100

          - FUNCTION OUTPUT:  11011001101000001011011100000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011111001011111111111111110

       - FUNCTION OUTPUT:          11011001101000001011011100000100

       - Left XOR FUNCTION OUTPUT: 00011010010001010100100011111010

       - Next Round Left 32 Bits:  00000111110000001011100100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010010001010100100011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111110000001011100100101010

       - Right 32 Bits:            00011010010001010100100011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010110010001011000010100000101010001010000   [Subkey: 6]
          - Input Half:       00011010010001010100100011111010
          - S-Box Result:     10100100011110010111001010110100   [per every group of 4-bits]
          - Split Into Two:   1010010001111001 [L] 0111001010110100 [R]
          - Swap Halves:      01110010101101001010010001111001
          - Bit Inversion:    10001101010010110101101110000110
          - Compressed Key:   11000000110010100001001001000000   [done by compression P-Box]
          - XOR with Key:     01001101100000010100100111000110

          - FUNCTION OUTPUT:  01001101100000010100100111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111110000001011100100101010

       - FUNCTION OUTPUT:          01001101100000010100100111000110

       - Left XOR FUNCTION OUTPUT: 01001010010000011111000011101100

       - Next Round Left 32 Bits:  00011010010001010100100011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010010000011111000011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010010001010100100011111010

       - Right 32 Bits:            01001010010000011111000011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111000011010111110100110111010011110101111101010111010   [Subkey: 5]
          - Input Half:       01001010010000011111000011101100
          - S-Box Result:     01110100011110101011111111000101   [per every group of 4-bits]
          - Split Into Two:   0111010001111010 [L] 1011111111000101 [R]
          - Swap Halves:      10111111110001010111010001111010
          - Bit Inversion:    01000000001110101000101110000101
          - Compressed Key:   11000101111001110011011110100101   [done by compression P-Box]
          - XOR with Key:     10000101110111011011110000100000

          - FUNCTION OUTPUT:  10000101110111011011110000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010010001010100100011111010

       - FUNCTION OUTPUT:          10000101110111011011110000100000

       - Left XOR FUNCTION OUTPUT: 10011111100110001111010011011010

       - Next Round Left 32 Bits:  01001010010000011111000011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111100110001111010011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010010000011111000011101100

       - Right 32 Bits:            10011111100110001111010011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011110010100000101100100010110000101000001010100   [Subkey: 4]
          - Input Half:       10011111100110001111010011011010
          - S-Box Result:     00111011001100101011011101100100   [per every group of 4-bits]
          - Split Into Two:   0011101100110010 [L] 1011011101100100 [R]
          - Swap Halves:      10110111011001000011101100110010
          - Bit Inversion:    01001000100110111100010011001101
          - Compressed Key:   01001101010010010001001000001000   [done by compression P-Box]
          - XOR with Key:     00000101110100101101011011000101

          - FUNCTION OUTPUT:  00000101110100101101011011000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010010000011111000011101100

       - FUNCTION OUTPUT:          00000101110100101101011011000101

       - Left XOR FUNCTION OUTPUT: 01001111100100110010011000101001

       - Next Round Left 32 Bits:  10011111100110001111010011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111100100110010011000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111100110001111010011011010

       - Right 32 Bits:            01001111100100110010011000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010111110000110101111101001101110100111101011111010   [Subkey: 3]
          - Input Half:       01001111100100110010011000101001
          - S-Box Result:     01111011001100011110000011100011   [per every group of 4-bits]
          - Split Into Two:   0111101100110001 [L] 1110000011100011 [R]
          - Swap Halves:      11100000111000110111101100110001
          - Bit Inversion:    00011111000111001000010011001110
          - Compressed Key:   11101101111011011110011010100101   [done by compression P-Box]
          - XOR with Key:     11110010111100010110001001101011

          - FUNCTION OUTPUT:  11110010111100010110001001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111100110001111010011011010

       - FUNCTION OUTPUT:          11110010111100010110001001101011

       - Left XOR FUNCTION OUTPUT: 01101101011010011001011010110001

       - Next Round Left 32 Bits:  01001111100100110010011000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101011010011001011010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111100100110010011000101001

       - Right 32 Bits:            01101101011010011001011010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 2]
          - Input Half:       01101101011010011001011010110001
          - S-Box Result:     00000110000000110011000010001010   [per every group of 4-bits]
          - Split Into Two:   0000011000000011 [L] 0011000010001010 [R]
          - Swap Halves:      00110000100010100000011000000011
          - Bit Inversion:    11001111011101011111100111111100
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     10010111100011011000101111111100

          - FUNCTION OUTPUT:  10010111100011011000101111111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111100100110010011000101001

       - FUNCTION OUTPUT:          10010111100011011000101111111100

       - Left XOR FUNCTION OUTPUT: 11011000000111101010110111010101

       - Next Round Left 32 Bits:  01101101011010011001011010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000000111101010110111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101011010011001011010110001

       - Right 32 Bits:            11011000000111101010110111010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 1]
          - Input Half:       11011000000111101010110111010101
          - S-Box Result:     01100010101011000100011001101001   [per every group of 4-bits]
          - Split Into Two:   0110001010101100 [L] 0100011001101001 [R]
          - Swap Halves:      01000110011010010110001010101100
          - Bit Inversion:    10111001100101101001110101010011
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     01010100011011110110010011010110

          - FUNCTION OUTPUT:  01010100011011110110010011010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101011010011001011010110001

       - FUNCTION OUTPUT:          01010100011011110110010011010110

       - Left XOR FUNCTION OUTPUT: 00111001000001101111001001100111

       - Next Round Left 32 Bits:  11011000000111101010110111010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001000001101111001001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011100100000110111100100110011111011000000111101010110111010101

 > Decrypted Block:     0011100100000110111100100110011111011000000111101010110111010101


!!!CBC: Previous Ciphertext:                             1011001111001100111001010110010010010000010110000111001000010110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1000101011001010000101110000001101001000010001101101111111000011

 > Final Processed Block:                                1000101011001010000101110000001101001000010001101101111111000011



Ciphertext Block 3:                                      0011000100001001011011001110011010101100001101100001110000101000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001000010010110110011100110

       - Right 32 Bits:            10101100001101100001110000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 16]
          - Input Half:       10101100001101100001110000101000
          - S-Box Result:     01000101000100001010010111100010   [per every group of 4-bits]
          - Split Into Two:   0100010100010000 [L] 1010010111100010 [R]
          - Swap Halves:      10100101111000100100010100010000
          - Bit Inversion:    01011010000111011011101011101111
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     00000010111001011100100011101111

          - FUNCTION OUTPUT:  00000010111001011100100011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001000010010110110011100110

       - FUNCTION OUTPUT:          00000010111001011100100011101111

       - Left XOR FUNCTION OUTPUT: 00110011111011001010010000001001

       - Next Round Left 32 Bits:  10101100001101100001110000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011111011001010010000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100001101100001110000101000

       - Right 32 Bits:            00110011111011001010010000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 15]
          - Input Half:       00110011111011001010010000001001
          - S-Box Result:     00010001110001010100011111110011   [per every group of 4-bits]
          - Split Into Two:   0001000111000101 [L] 0100011111110011 [R]
          - Swap Halves:      01000111111100110001000111000101
          - Bit Inversion:    10111000000011001110111000111010
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     01010101111101010001011110111111

          - FUNCTION OUTPUT:  01010101111101010001011110111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100001101100001110000101000

       - FUNCTION OUTPUT:          01010101111101010001011110111111

       - Left XOR FUNCTION OUTPUT: 11111001110000110000101110010111

       - Next Round Left 32 Bits:  00110011111011001010010000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001110000110000101110010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011111011001010010000001001

       - Right 32 Bits:            11111001110000110000101110010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010101000101000001111001010000010110010001011000   [Subkey: 14]
          - Input Half:       11111001110000110000101110010111
          - S-Box Result:     10110011010100011111100000111101   [per every group of 4-bits]
          - Split Into Two:   1011001101010001 [L] 1111100000111101 [R]
          - Swap Halves:      11111000001111011011001101010001
          - Bit Inversion:    00000111110000100100110010101110
          - Compressed Key:   01001010010110110101101001000100   [done by compression P-Box]
          - XOR with Key:     01001101100110010001011011101010

          - FUNCTION OUTPUT:  01001101100110010001011011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011111011001010010000001001

       - FUNCTION OUTPUT:          01001101100110010001011011101010

       - Left XOR FUNCTION OUTPUT: 01111110011101011011001011100011

       - Next Round Left 32 Bits:  11111001110000110000101110010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110011101011011001011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001110000110000101110010111

       - Right 32 Bits:            01111110011101011011001011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111110101011101011111000011010111110100110111010   [Subkey: 13]
          - Input Half:       01111110011101011011001011100011
          - S-Box Result:     11011100110110011000111011000001   [per every group of 4-bits]
          - Split Into Two:   1101110011011001 [L] 1000111011000001 [R]
          - Swap Halves:      10001110110000011101110011011001
          - Bit Inversion:    01110001001111100010001100100110
          - Compressed Key:   11101101101111110011111100110101   [done by compression P-Box]
          - XOR with Key:     10011100100000010001110000010011

          - FUNCTION OUTPUT:  10011100100000010001110000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001110000110000101110010111

       - FUNCTION OUTPUT:          10011100100000010001110000010011

       - Left XOR FUNCTION OUTPUT: 01100101010000100001011110000100

       - Next Round Left 32 Bits:  01111110011101011011001011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101010000100001011110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110011101011011001011100011

       - Right 32 Bits:            01100101010000100001011110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010100000101010001010000011110010100000101100100   [Subkey: 12]
          - Input Half:       01100101010000100001011110000100
          - S-Box Result:     00001001011111101010110100100111   [per every group of 4-bits]
          - Split Into Two:   0000100101111110 [L] 1010110100100111 [R]
          - Swap Halves:      10101101001001110000100101111110
          - Bit Inversion:    01010010110110001111011010000001
          - Compressed Key:   11001000010110100011101000011000   [done by compression P-Box]
          - XOR with Key:     10011010100000101100110010011001

          - FUNCTION OUTPUT:  10011010100000101100110010011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110011101011011001011100011

       - FUNCTION OUTPUT:          10011010100000101100110010011001

       - Left XOR FUNCTION OUTPUT: 11100100111101110111111001111010

       - Next Round Left 32 Bits:  01100101010000100001011110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100111101110111111001111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101010000100001011110000100

       - Right 32 Bits:            11100100111101110111111001111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010011110101111101010111010111110000110101111101001   [Subkey: 11]
          - Input Half:       11100100111101110111111001111010
          - S-Box Result:     11000111101111011101110011010100   [per every group of 4-bits]
          - Split Into Two:   1100011110111101 [L] 1101110011010100 [R]
          - Swap Halves:      11011100110101001100011110111101
          - Bit Inversion:    00100011001010110011100001000010
          - Compressed Key:   11101101111101111011001010110110   [done by compression P-Box]
          - XOR with Key:     11001110110111001000101011110100

          - FUNCTION OUTPUT:  11001110110111001000101011110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101010000100001011110000100

       - FUNCTION OUTPUT:          11001110110111001000101011110100

       - Left XOR FUNCTION OUTPUT: 10101011100111101001110101110000

       - Next Round Left 32 Bits:  11100100111101110111111001111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011100111101001110101110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100111101110111111001111010

       - Right 32 Bits:            10101011100111101001110101110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010110000101000001010100010100000111100101000001   [Subkey: 10]
          - Input Half:       10101011100111101001110101110000
          - S-Box Result:     01001000001111000011011011011111   [per every group of 4-bits]
          - Split Into Two:   0100100000111100 [L] 0011011011011111 [R]
          - Swap Halves:      00110110110111110100100000111100
          - Bit Inversion:    11001001001000001011011111000011
          - Compressed Key:   00011001010110100001001000010010   [done by compression P-Box]
          - XOR with Key:     11010000011110101010010111010001

          - FUNCTION OUTPUT:  11010000011110101010010111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100111101110111111001111010

       - FUNCTION OUTPUT:          11010000011110101010010111010001

       - Left XOR FUNCTION OUTPUT: 00110100100011011101101110101011

       - Next Round Left 32 Bits:  10101011100111101001110101110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100100011011101101110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011100111101001110101110000

       - Right 32 Bits:            00110100100011011101101110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101110100111101011111010101110101111100001101011   [Subkey: 9]
          - Input Half:       00110100100011011101101110101011
          - S-Box Result:     00010111001001100110100001001000   [per every group of 4-bits]
          - Split Into Two:   0001011100100110 [L] 0110100001001000 [R]
          - Swap Halves:      01101000010010000001011100100110
          - Bit Inversion:    10010111101101111110100011011001
          - Compressed Key:   10001101111111111010011100000111   [done by compression P-Box]
          - XOR with Key:     00011010010010000100111111011110

          - FUNCTION OUTPUT:  00011010010010000100111111011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011100111101001110101110000

       - FUNCTION OUTPUT:          00011010010010000100111111011110

       - Left XOR FUNCTION OUTPUT: 10110001110101101101001010101110

       - Next Round Left 32 Bits:  00110100100011011101101110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001110101101101001010101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100100011011101101110101011

       - Right 32 Bits:            10110001110101101101001010101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011001000101100001010000010101000101000001111001   [Subkey: 8]
          - Input Half:       10110001110101101101001010101110
          - S-Box Result:     10001010011000000110111001001100   [per every group of 4-bits]
          - Split Into Two:   1000101001100000 [L] 0110111001001100 [R]
          - Swap Halves:      01101110010011001000101001100000
          - Bit Inversion:    10010001101100110111010110011111
          - Compressed Key:   00000110011110100001001000000110   [done by compression P-Box]
          - XOR with Key:     10010111110010010110011110011001

          - FUNCTION OUTPUT:  10010111110010010110011110011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100100011011101101110101011

       - FUNCTION OUTPUT:          10010111110010010110011110011001

       - Left XOR FUNCTION OUTPUT: 10100011010001001011110000110010

       - Next Round Left 32 Bits:  10110001110101101101001010101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011010001001011110000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001110101101101001010101110

       - Right 32 Bits:            10100011010001001011110000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011111010011011101001111010111110101011101011111000   [Subkey: 7]
          - Input Half:       10100011010001001011110000110010
          - S-Box Result:     01000001011101111000010100011110   [per every group of 4-bits]
          - Split Into Two:   0100000101110111 [L] 1000010100011110 [R]
          - Swap Halves:      10000101000111100100000101110111
          - Bit Inversion:    01111010111000011011111010001000
          - Compressed Key:   10100101101110111011010110100100   [done by compression P-Box]
          - XOR with Key:     11011111010110100000101100101100

          - FUNCTION OUTPUT:  11011111010110100000101100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001110101101101001010101110

       - FUNCTION OUTPUT:          11011111010110100000101100101100

       - Left XOR FUNCTION OUTPUT: 01101110100011001101100110000010

       - Next Round Left 32 Bits:  10100011010001001011110000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110100011001101100110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011010001001011110000110010

       - Right 32 Bits:            01101110100011001101100110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010110010001011000010100000101010001010000   [Subkey: 6]
          - Input Half:       01101110100011001101100110000010
          - S-Box Result:     00001100001001010110001100101110   [per every group of 4-bits]
          - Split Into Two:   0000110000100101 [L] 0110001100101110 [R]
          - Swap Halves:      01100011001011100000110000100101
          - Bit Inversion:    10011100110100011111001111011010
          - Compressed Key:   11000000110010100001001001000000   [done by compression P-Box]
          - XOR with Key:     01011100000110111110000110011010

          - FUNCTION OUTPUT:  01011100000110111110000110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011010001001011110000110010

       - FUNCTION OUTPUT:          01011100000110111110000110011010

       - Left XOR FUNCTION OUTPUT: 11111111010111110101110110101000

       - Next Round Left 32 Bits:  01101110100011001101100110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111010111110101110110101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110100011001101100110000010

       - Right 32 Bits:            11111111010111110101110110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111000011010111110100110111010011110101111101010111010   [Subkey: 5]
          - Input Half:       11111111010111110101110110101000
          - S-Box Result:     10111011100110111001011001000010   [per every group of 4-bits]
          - Split Into Two:   1011101110011011 [L] 1001011001000010 [R]
          - Swap Halves:      10010110010000101011101110011011
          - Bit Inversion:    01101001101111010100010001100100
          - Compressed Key:   11000101111001110011011110100101   [done by compression P-Box]
          - XOR with Key:     10101100010110100111001111000001

          - FUNCTION OUTPUT:  10101100010110100111001111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110100011001101100110000010

       - FUNCTION OUTPUT:          10101100010110100111001111000001

       - Left XOR FUNCTION OUTPUT: 11000010110101101010101001000011

       - Next Round Left 32 Bits:  11111111010111110101110110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010110101101010101001000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111010111110101110110101000

       - Right 32 Bits:            11000010110101101010101001000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011110010100000101100100010110000101000001010100   [Subkey: 4]
          - Input Half:       11000010110101101010101001000011
          - S-Box Result:     01011110011000000100010001110001   [per every group of 4-bits]
          - Split Into Two:   0101111001100000 [L] 0100010001110001 [R]
          - Swap Halves:      01000100011100010101111001100000
          - Bit Inversion:    10111011100011101010000110011111
          - Compressed Key:   01001101010010010001001000001000   [done by compression P-Box]
          - XOR with Key:     11110110110001111011001110010111

          - FUNCTION OUTPUT:  11110110110001111011001110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111010111110101110110101000

       - FUNCTION OUTPUT:          11110110110001111011001110010111

       - Left XOR FUNCTION OUTPUT: 00001001100110001110111000111111

       - Next Round Left 32 Bits:  11000010110101101010101001000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001100110001110111000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010110101101010101001000011

       - Right 32 Bits:            00001001100110001110111000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010111110000110101111101001101110100111101011111010   [Subkey: 3]
          - Input Half:       00001001100110001110111000111111
          - S-Box Result:     11110011001100101100110000011011   [per every group of 4-bits]
          - Split Into Two:   1111001100110010 [L] 1100110000011011 [R]
          - Swap Halves:      11001100000110111111001100110010
          - Bit Inversion:    00110011111001000000110011001101
          - Compressed Key:   11101101111011011110011010100101   [done by compression P-Box]
          - XOR with Key:     11011110000010011110101001101000

          - FUNCTION OUTPUT:  11011110000010011110101001101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010110101101010101001000011

       - FUNCTION OUTPUT:          11011110000010011110101001101000

       - Left XOR FUNCTION OUTPUT: 00011100110111110100000000101011

       - Next Round Left 32 Bits:  00001001100110001110111000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100110111110100000000101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001100110001110111000111111

       - Right 32 Bits:            00011100110111110100000000101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 2]
          - Input Half:       00011100110111110100000000101011
          - S-Box Result:     10100101011010110111111111101000   [per every group of 4-bits]
          - Split Into Two:   1010010101101011 [L] 0111111111101000 [R]
          - Swap Halves:      01111111111010001010010101101011
          - Bit Inversion:    10000000000101110101101010010100
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     11011000111011110010100010010100

          - FUNCTION OUTPUT:  11011000111011110010100010010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001100110001110111000111111

       - FUNCTION OUTPUT:          11011000111011110010100010010100

       - Left XOR FUNCTION OUTPUT: 11010001011101111100011010101011

       - Next Round Left 32 Bits:  00011100110111110100000000101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001011101111100011010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100110111110100000000101011

       - Right 32 Bits:            11010001011101111100011010101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 1]
          - Input Half:       11010001011101111100011010101011
          - S-Box Result:     01101010110111010101000001001000   [per every group of 4-bits]
          - Split Into Two:   0110101011011101 [L] 0101000001001000 [R]
          - Swap Halves:      01010000010010000110101011011101
          - Bit Inversion:    10101111101101111001010100100010
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     01000010010011100110110010100111

          - FUNCTION OUTPUT:  01000010010011100110110010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100110111110100000000101011

       - FUNCTION OUTPUT:          01000010010011100110110010100111

       - Left XOR FUNCTION OUTPUT: 01011110100100010010110010001100

       - Next Round Left 32 Bits:  11010001011101111100011010101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100100010010110010001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101111010010001001011001000110011010001011101111100011010101011

 > Decrypted Block:     0101111010010001001011001000110011010001011101111100011010101011


!!!CBC: Previous Ciphertext:                             1011000101001000011100101101001011100000001100100100111010100100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1110111111011001010111100101111000110001010001011000100000001111

 > Final Processed Block:                                1110111111011001010111100101111000110001010001011000100000001111



Ciphertext Block 4:                                      0100010000101110001111011001100010100000100110001011011000000011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100001011100011110110011000

       - Right 32 Bits:            10100000100110001011011000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 16]
          - Input Half:       10100000100110001011011000000011
          - S-Box Result:     01001111001100101000000011110001   [per every group of 4-bits]
          - Split Into Two:   0100111100110010 [L] 1000000011110001 [R]
          - Swap Halves:      10000000111100010100111100110010
          - Bit Inversion:    01111111000011101011000011001101
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     00100111111101101100001011001101

          - FUNCTION OUTPUT:  00100111111101101100001011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100001011100011110110011000

       - FUNCTION OUTPUT:          00100111111101101100001011001101

       - Left XOR FUNCTION OUTPUT: 01100011110110001111111101010101

       - Next Round Left 32 Bits:  10100000100110001011011000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011110110001111111101010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000100110001011011000000011

       - Right 32 Bits:            01100011110110001111111101010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 15]
          - Input Half:       01100011110110001111111101010101
          - S-Box Result:     00000001011000101011101110011001   [per every group of 4-bits]
          - Split Into Two:   0000000101100010 [L] 1011101110011001 [R]
          - Swap Halves:      10111011100110010000000101100010
          - Bit Inversion:    01000100011001101111111010011101
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     10101001100111110000011100011000

          - FUNCTION OUTPUT:  10101001100111110000011100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000100110001011011000000011

       - FUNCTION OUTPUT:          10101001100111110000011100011000

       - Left XOR FUNCTION OUTPUT: 00001001000001111011000100011011

       - Next Round Left 32 Bits:  01100011110110001111111101010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001000001111011000100011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011110110001111111101010101

       - Right 32 Bits:            00001001000001111011000100011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010101000101000001111001010000010110010001011000   [Subkey: 14]
          - Input Half:       00001001000001111011000100011011
          - S-Box Result:     11110011111111011000101010101000   [per every group of 4-bits]
          - Split Into Two:   1111001111111101 [L] 1000101010101000 [R]
          - Swap Halves:      10001010101010001111001111111101
          - Bit Inversion:    01110101010101110000110000000010
          - Compressed Key:   01001010010110110101101001000100   [done by compression P-Box]
          - XOR with Key:     00111111000011000101011001000110

          - FUNCTION OUTPUT:  00111111000011000101011001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011110110001111111101010101

       - FUNCTION OUTPUT:          00111111000011000101011001000110

       - Left XOR FUNCTION OUTPUT: 01011100110101001010100100010011

       - Next Round Left 32 Bits:  00001001000001111011000100011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100110101001010100100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001000001111011000100011011

       - Right 32 Bits:            01011100110101001010100100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111110101011101011111000011010111110100110111010   [Subkey: 13]
          - Input Half:       01011100110101001010100100010011
          - S-Box Result:     10010101011001110100001110100001   [per every group of 4-bits]
          - Split Into Two:   1001010101100111 [L] 0100001110100001 [R]
          - Swap Halves:      01000011101000011001010101100111
          - Bit Inversion:    10111100010111100110101010011000
          - Compressed Key:   11101101101111110011111100110101   [done by compression P-Box]
          - XOR with Key:     01010001111000010101010110101101

          - FUNCTION OUTPUT:  01010001111000010101010110101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001000001111011000100011011

       - FUNCTION OUTPUT:          01010001111000010101010110101101

       - Left XOR FUNCTION OUTPUT: 01011000111001101110010010110110

       - Next Round Left 32 Bits:  01011100110101001010100100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000111001101110010010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100110101001010100100010011

       - Right 32 Bits:            01011000111001101110010010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010100000101010001010000011110010100000101100100   [Subkey: 12]
          - Input Half:       01011000111001101110010010110110
          - S-Box Result:     10010010110000001100011110000000   [per every group of 4-bits]
          - Split Into Two:   1001001011000000 [L] 1100011110000000 [R]
          - Swap Halves:      11000111100000001001001011000000
          - Bit Inversion:    00111000011111110110110100111111
          - Compressed Key:   11001000010110100011101000011000   [done by compression P-Box]
          - XOR with Key:     11110000001001010101011100100111

          - FUNCTION OUTPUT:  11110000001001010101011100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100110101001010100100010011

       - FUNCTION OUTPUT:          11110000001001010101011100100111

       - Left XOR FUNCTION OUTPUT: 10101100111100011111111000110100

       - Next Round Left 32 Bits:  01011000111001101110010010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100111100011111111000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000111001101110010010110110

       - Right 32 Bits:            10101100111100011111111000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010011110101111101010111010111110000110101111101001   [Subkey: 11]
          - Input Half:       10101100111100011111111000110100
          - S-Box Result:     01000101101110101011110000010111   [per every group of 4-bits]
          - Split Into Two:   0100010110111010 [L] 1011110000010111 [R]
          - Swap Halves:      10111100000101110100010110111010
          - Bit Inversion:    01000011111010001011101001000101
          - Compressed Key:   11101101111101111011001010110110   [done by compression P-Box]
          - XOR with Key:     10101110000111110000100011110011

          - FUNCTION OUTPUT:  10101110000111110000100011110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000111001101110010010110110

       - FUNCTION OUTPUT:          10101110000111110000100011110011

       - Left XOR FUNCTION OUTPUT: 11110110111110011110110001000101

       - Next Round Left 32 Bits:  10101100111100011111111000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110111110011110110001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100111100011111111000110100

       - Right 32 Bits:            11110110111110011110110001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010110000101000001010100010100000111100101000001   [Subkey: 10]
          - Input Half:       11110110111110011110110001000101
          - S-Box Result:     10110000101100111100010101111001   [per every group of 4-bits]
          - Split Into Two:   1011000010110011 [L] 1100010101111001 [R]
          - Swap Halves:      11000101011110011011000010110011
          - Bit Inversion:    00111010100001100100111101001100
          - Compressed Key:   00011001010110100001001000010010   [done by compression P-Box]
          - XOR with Key:     00100011110111000101110101011110

          - FUNCTION OUTPUT:  00100011110111000101110101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100111100011111111000110100

       - FUNCTION OUTPUT:          00100011110111000101110101011110

       - Left XOR FUNCTION OUTPUT: 10001111001011011010001101101010

       - Next Round Left 32 Bits:  11110110111110011110110001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111001011011010001101101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110111110011110110001000101

       - Right 32 Bits:            10001111001011011010001101101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101110100111101011111010101110101111100001101011   [Subkey: 9]
          - Input Half:       10001111001011011010001101101010
          - S-Box Result:     00101011111001100100000100000100   [per every group of 4-bits]
          - Split Into Two:   0010101111100110 [L] 0100000100000100 [R]
          - Swap Halves:      01000001000001000010101111100110
          - Bit Inversion:    10111110111110111101010000011001
          - Compressed Key:   10001101111111111010011100000111   [done by compression P-Box]
          - XOR with Key:     00110011000001000111001100011110

          - FUNCTION OUTPUT:  00110011000001000111001100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110111110011110110001000101

       - FUNCTION OUTPUT:          00110011000001000111001100011110

       - Left XOR FUNCTION OUTPUT: 11000101111111011001111101011011

       - Next Round Left 32 Bits:  10001111001011011010001101101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101111111011001111101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111001011011010001101101010

       - Right 32 Bits:            11000101111111011001111101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011001000101100001010000010101000101000001111001   [Subkey: 8]
          - Input Half:       11000101111111011001111101011011
          - S-Box Result:     01011001101101100011101110011000   [per every group of 4-bits]
          - Split Into Two:   0101100110110110 [L] 0011101110011000 [R]
          - Swap Halves:      00111011100110000101100110110110
          - Bit Inversion:    11000100011001111010011001001001
          - Compressed Key:   00000110011110100001001000000110   [done by compression P-Box]
          - XOR with Key:     11000010000111011011010001001111

          - FUNCTION OUTPUT:  11000010000111011011010001001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111001011011010001101101010

       - FUNCTION OUTPUT:          11000010000111011011010001001111

       - Left XOR FUNCTION OUTPUT: 01001101001100000001011100100101

       - Next Round Left 32 Bits:  11000101111111011001111101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101001100000001011100100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101111111011001111101011011

       - Right 32 Bits:            01001101001100000001011100100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011111010011011101001111010111110101011101011111000   [Subkey: 7]
          - Input Half:       01001101001100000001011100100101
          - S-Box Result:     01110110000111111010110111101001   [per every group of 4-bits]
          - Split Into Two:   0111011000011111 [L] 1010110111101001 [R]
          - Swap Halves:      10101101111010010111011000011111
          - Bit Inversion:    01010010000101101000100111100000
          - Compressed Key:   10100101101110111011010110100100   [done by compression P-Box]
          - XOR with Key:     11110111101011010011110001000100

          - FUNCTION OUTPUT:  11110111101011010011110001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101111111011001111101011011

       - FUNCTION OUTPUT:          11110111101011010011110001000100

       - Left XOR FUNCTION OUTPUT: 00110010010100001010001100011111

       - Next Round Left 32 Bits:  01001101001100000001011100100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110010010100001010001100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101001100000001011100100101

       - Right 32 Bits:            00110010010100001010001100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010110010001011000010100000101010001010000   [Subkey: 6]
          - Input Half:       00110010010100001010001100011111
          - S-Box Result:     00011110100111110100000110101011   [per every group of 4-bits]
          - Split Into Two:   0001111010011111 [L] 0100000110101011 [R]
          - Swap Halves:      01000001101010110001111010011111
          - Bit Inversion:    10111110010101001110000101100000
          - Compressed Key:   11000000110010100001001001000000   [done by compression P-Box]
          - XOR with Key:     01111110100111101111001100100000

          - FUNCTION OUTPUT:  01111110100111101111001100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101001100000001011100100101

       - FUNCTION OUTPUT:          01111110100111101111001100100000

       - Left XOR FUNCTION OUTPUT: 00110011101011101110010000000101

       - Next Round Left 32 Bits:  00110010010100001010001100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011101011101110010000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110010010100001010001100011111

       - Right 32 Bits:            00110011101011101110010000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111000011010111110100110111010011110101111101010111010   [Subkey: 5]
          - Input Half:       00110011101011101110010000000101
          - S-Box Result:     00010001010011001100011111111001   [per every group of 4-bits]
          - Split Into Two:   0001000101001100 [L] 1100011111111001 [R]
          - Swap Halves:      11000111111110010001000101001100
          - Bit Inversion:    00111000000001101110111010110011
          - Compressed Key:   11000101111001110011011110100101   [done by compression P-Box]
          - XOR with Key:     11111101111000011101100100010110

          - FUNCTION OUTPUT:  11111101111000011101100100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110010010100001010001100011111

       - FUNCTION OUTPUT:          11111101111000011101100100010110

       - Left XOR FUNCTION OUTPUT: 11001111101100010111101000001001

       - Next Round Left 32 Bits:  00110011101011101110010000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111101100010111101000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011101011101110010000000101

       - Right 32 Bits:            11001111101100010111101000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011110010100000101100100010110000101000001010100   [Subkey: 4]
          - Input Half:       11001111101100010111101000001001
          - S-Box Result:     01011011100010101101010011110011   [per every group of 4-bits]
          - Split Into Two:   0101101110001010 [L] 1101010011110011 [R]
          - Swap Halves:      11010100111100110101101110001010
          - Bit Inversion:    00101011000011001010010001110101
          - Compressed Key:   01001101010010010001001000001000   [done by compression P-Box]
          - XOR with Key:     01100110010001011011011001111101

          - FUNCTION OUTPUT:  01100110010001011011011001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011101011101110010000000101

       - FUNCTION OUTPUT:          01100110010001011011011001111101

       - Left XOR FUNCTION OUTPUT: 01010101111010110101001001111000

       - Next Round Left 32 Bits:  11001111101100010111101000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101111010110101001001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111101100010111101000001001

       - Right 32 Bits:            01010101111010110101001001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010111110000110101111101001101110100111101011111010   [Subkey: 3]
          - Input Half:       01010101111010110101001001111000
          - S-Box Result:     10011001110010001001111011010010   [per every group of 4-bits]
          - Split Into Two:   1001100111001000 [L] 1001111011010010 [R]
          - Swap Halves:      10011110110100101001100111001000
          - Bit Inversion:    01100001001011010110011000110111
          - Compressed Key:   11101101111011011110011010100101   [done by compression P-Box]
          - XOR with Key:     10001100110000001000000010010010

          - FUNCTION OUTPUT:  10001100110000001000000010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111101100010111101000001001

       - FUNCTION OUTPUT:          10001100110000001000000010010010

       - Left XOR FUNCTION OUTPUT: 01000011011100011111101010011011

       - Next Round Left 32 Bits:  01010101111010110101001001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011011100011111101010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101111010110101001001111000

       - Right 32 Bits:            01000011011100011111101010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 2]
          - Input Half:       01000011011100011111101010011011
          - S-Box Result:     01110001110110101011010000111000   [per every group of 4-bits]
          - Split Into Two:   0111000111011010 [L] 1011010000111000 [R]
          - Swap Halves:      10110100001110000111000111011010
          - Bit Inversion:    01001011110001111000111000100101
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     00010011001111111111110000100101

          - FUNCTION OUTPUT:  00010011001111111111110000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101111010110101001001111000

       - FUNCTION OUTPUT:          00010011001111111111110000100101

       - Left XOR FUNCTION OUTPUT: 01000110110101001010111001011101

       - Next Round Left 32 Bits:  01000011011100011111101010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110110101001010111001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011011100011111101010011011

       - Right 32 Bits:            01000110110101001010111001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 1]
          - Input Half:       01000110110101001010111001011101
          - S-Box Result:     01110000011001110100110010010110   [per every group of 4-bits]
          - Split Into Two:   0111000001100111 [L] 0100110010010110 [R]
          - Swap Halves:      01001100100101100111000001100111
          - Bit Inversion:    10110011011010011000111110011000
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     01011110100100000111011000011101

          - FUNCTION OUTPUT:  01011110100100000111011000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011011100011111101010011011

       - FUNCTION OUTPUT:          01011110100100000111011000011101

       - Left XOR FUNCTION OUTPUT: 00011101111000011000110010000110

       - Next Round Left 32 Bits:  01000110110101001010111001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101111000011000110010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001110111100001100011001000011001000110110101001010111001011101

 > Decrypted Block:     0001110111100001100011001000011001000110110101001010111001011101


!!!CBC: Previous Ciphertext:                             0011000100001001011011001110011010101100001101100001110000101000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010110011101000111000000110000011101010111000101011001001110101

 > Final Processed Block:                                0010110011101000111000000110000011101010111000101011001001110101



Ciphertext Block 5:                                      0010011010101110011111111111010001010011001000011101011110010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110101011100111111111110100

       - Right 32 Bits:            01010011001000011101011110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 16]
          - Input Half:       01010011001000011101011110010001
          - S-Box Result:     10010001111010100110110100111010   [per every group of 4-bits]
          - Split Into Two:   1001000111101010 [L] 0110110100111010 [R]
          - Swap Halves:      01101101001110101001000111101010
          - Bit Inversion:    10010010110001010110111000010101
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     11001010001111010001110000010101

          - FUNCTION OUTPUT:  11001010001111010001110000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110101011100111111111110100

       - FUNCTION OUTPUT:          11001010001111010001110000010101

       - Left XOR FUNCTION OUTPUT: 11101100100100110110001111100001

       - Next Round Left 32 Bits:  01010011001000011101011110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100100100110110001111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011001000011101011110010001

       - Right 32 Bits:            11101100100100110110001111100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 15]
          - Input Half:       11101100100100110110001111100001
          - S-Box Result:     11000101001100010000000111001010   [per every group of 4-bits]
          - Split Into Two:   1100010100110001 [L] 0000000111001010 [R]
          - Swap Halves:      00000001110010101100010100110001
          - Bit Inversion:    11111110001101010011101011001110
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     00010011110011001100001101001011

          - FUNCTION OUTPUT:  00010011110011001100001101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011001000011101011110010001

       - FUNCTION OUTPUT:          00010011110011001100001101001011

       - Left XOR FUNCTION OUTPUT: 01000000111011010001010011011010

       - Next Round Left 32 Bits:  11101100100100110110001111100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000111011010001010011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100100100110110001111100001

       - Right 32 Bits:            01000000111011010001010011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010101000101000001111001010000010110010001011000   [Subkey: 14]
          - Input Half:       01000000111011010001010011011010
          - S-Box Result:     01111111110001101010011101100100   [per every group of 4-bits]
          - Split Into Two:   0111111111000110 [L] 1010011101100100 [R]
          - Swap Halves:      10100111011001000111111111000110
          - Bit Inversion:    01011000100110111000000000111001
          - Compressed Key:   01001010010110110101101001000100   [done by compression P-Box]
          - XOR with Key:     00010010110000001101101001111101

          - FUNCTION OUTPUT:  00010010110000001101101001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100100100110110001111100001

       - FUNCTION OUTPUT:          00010010110000001101101001111101

       - Left XOR FUNCTION OUTPUT: 11111110010100111011100110011100

       - Next Round Left 32 Bits:  01000000111011010001010011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110010100111011100110011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000111011010001010011011010

       - Right 32 Bits:            11111110010100111011100110011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111110101011101011111000011010111110100110111010   [Subkey: 13]
          - Input Half:       11111110010100111011100110011100
          - S-Box Result:     10111100100100011000001100110101   [per every group of 4-bits]
          - Split Into Two:   1011110010010001 [L] 1000001100110101 [R]
          - Swap Halves:      10000011001101011011110010010001
          - Bit Inversion:    01111100110010100100001101101110
          - Compressed Key:   11101101101111110011111100110101   [done by compression P-Box]
          - XOR with Key:     10010001011101010111110001011011

          - FUNCTION OUTPUT:  10010001011101010111110001011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000111011010001010011011010

       - FUNCTION OUTPUT:          10010001011101010111110001011011

       - Left XOR FUNCTION OUTPUT: 11010001100110000110100010000001

       - Next Round Left 32 Bits:  11111110010100111011100110011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001100110000110100010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110010100111011100110011100

       - Right 32 Bits:            11010001100110000110100010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010100000101010001010000011110010100000101100100   [Subkey: 12]
          - Input Half:       11010001100110000110100010000001
          - S-Box Result:     01101010001100100000001000101010   [per every group of 4-bits]
          - Split Into Two:   0110101000110010 [L] 0000001000101010 [R]
          - Swap Halves:      00000010001010100110101000110010
          - Bit Inversion:    11111101110101011001010111001101
          - Compressed Key:   11001000010110100011101000011000   [done by compression P-Box]
          - XOR with Key:     00110101100011111010111111010101

          - FUNCTION OUTPUT:  00110101100011111010111111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110010100111011100110011100

       - FUNCTION OUTPUT:          00110101100011111010111111010101

       - Left XOR FUNCTION OUTPUT: 11001011110111000001011001001001

       - Next Round Left 32 Bits:  11010001100110000110100010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011110111000001011001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001100110000110100010000001

       - Right 32 Bits:            11001011110111000001011001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010011110101111101010111010111110000110101111101001   [Subkey: 11]
          - Input Half:       11001011110111000001011001001001
          - S-Box Result:     01011000011001011010000001110011   [per every group of 4-bits]
          - Split Into Two:   0101100001100101 [L] 1010000001110011 [R]
          - Swap Halves:      10100000011100110101100001100101
          - Bit Inversion:    01011111100011001010011110011010
          - Compressed Key:   11101101111101111011001010110110   [done by compression P-Box]
          - XOR with Key:     10110010011110110001010100101100

          - FUNCTION OUTPUT:  10110010011110110001010100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001100110000110100010000001

       - FUNCTION OUTPUT:          10110010011110110001010100101100

       - Left XOR FUNCTION OUTPUT: 01100011111000110111110110101101

       - Next Round Left 32 Bits:  11001011110111000001011001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011111000110111110110101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011110111000001011001001001

       - Right 32 Bits:            01100011111000110111110110101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010110000101000001010100010100000111100101000001   [Subkey: 10]
          - Input Half:       01100011111000110111110110101101
          - S-Box Result:     00000001110000011101011001000110   [per every group of 4-bits]
          - Split Into Two:   0000000111000001 [L] 1101011001000110 [R]
          - Swap Halves:      11010110010001100000000111000001
          - Bit Inversion:    00101001101110011111111000111110
          - Compressed Key:   00011001010110100001001000010010   [done by compression P-Box]
          - XOR with Key:     00110000111000111110110000101100

          - FUNCTION OUTPUT:  00110000111000111110110000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011110111000001011001001001

       - FUNCTION OUTPUT:          00110000111000111110110000101100

       - Left XOR FUNCTION OUTPUT: 11111011001111111111101001100101

       - Next Round Left 32 Bits:  01100011111000110111110110101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011001111111111101001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011111000110111110110101101

       - Right 32 Bits:            11111011001111111111101001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101110100111101011111010101110101111100001101011   [Subkey: 9]
          - Input Half:       11111011001111111111101001100101
          - S-Box Result:     10111000000110111011010000001001   [per every group of 4-bits]
          - Split Into Two:   1011100000011011 [L] 1011010000001001 [R]
          - Swap Halves:      10110100000010011011100000011011
          - Bit Inversion:    01001011111101100100011111100100
          - Compressed Key:   10001101111111111010011100000111   [done by compression P-Box]
          - XOR with Key:     11000110000010011110000011100011

          - FUNCTION OUTPUT:  11000110000010011110000011100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011111000110111110110101101

       - FUNCTION OUTPUT:          11000110000010011110000011100011

       - Left XOR FUNCTION OUTPUT: 10100101111010101001110101001110

       - Next Round Left 32 Bits:  11111011001111111111101001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101111010101001110101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011001111111111101001100101

       - Right 32 Bits:            10100101111010101001110101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011001000101100001010000010101000101000001111001   [Subkey: 8]
          - Input Half:       10100101111010101001110101001110
          - S-Box Result:     01001001110001000011011001111100   [per every group of 4-bits]
          - Split Into Two:   0100100111000100 [L] 0011011001111100 [R]
          - Swap Halves:      00110110011111000100100111000100
          - Bit Inversion:    11001001100000111011011000111011
          - Compressed Key:   00000110011110100001001000000110   [done by compression P-Box]
          - XOR with Key:     11001111111110011010010000111101

          - FUNCTION OUTPUT:  11001111111110011010010000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011001111111111101001100101

       - FUNCTION OUTPUT:          11001111111110011010010000111101

       - Left XOR FUNCTION OUTPUT: 00110100110001100101111001011000

       - Next Round Left 32 Bits:  10100101111010101001110101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100110001100101111001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101111010101001110101001110

       - Right 32 Bits:            00110100110001100101111001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011111010011011101001111010111110101011101011111000   [Subkey: 7]
          - Input Half:       00110100110001100101111001011000
          - S-Box Result:     00010111010100001001110010010010   [per every group of 4-bits]
          - Split Into Two:   0001011101010000 [L] 1001110010010010 [R]
          - Swap Halves:      10011100100100100001011101010000
          - Bit Inversion:    01100011011011011110100010101111
          - Compressed Key:   10100101101110111011010110100100   [done by compression P-Box]
          - XOR with Key:     11000110110101100101110100001011

          - FUNCTION OUTPUT:  11000110110101100101110100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101111010101001110101001110

       - FUNCTION OUTPUT:          11000110110101100101110100001011

       - Left XOR FUNCTION OUTPUT: 01100011001111001100000001000101

       - Next Round Left 32 Bits:  00110100110001100101111001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011001111001100000001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100110001100101111001011000

       - Right 32 Bits:            01100011001111001100000001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010110010001011000010100000101010001010000   [Subkey: 6]
          - Input Half:       01100011001111001100000001000101
          - S-Box Result:     00000001000101010101111101111001   [per every group of 4-bits]
          - Split Into Two:   0000000100010101 [L] 0101111101111001 [R]
          - Swap Halves:      01011111011110010000000100010101
          - Bit Inversion:    10100000100001101111111011101010
          - Compressed Key:   11000000110010100001001001000000   [done by compression P-Box]
          - XOR with Key:     01100000010011001110110010101010

          - FUNCTION OUTPUT:  01100000010011001110110010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100110001100101111001011000

       - FUNCTION OUTPUT:          01100000010011001110110010101010

       - Left XOR FUNCTION OUTPUT: 01010100100010101011001011110010

       - Next Round Left 32 Bits:  01100011001111001100000001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100100010101011001011110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011001111001100000001000101

       - Right 32 Bits:            01010100100010101011001011110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111000011010111110100110111010011110101111101010111010   [Subkey: 5]
          - Input Half:       01010100100010101011001011110010
          - S-Box Result:     10010111001001001000111010111110   [per every group of 4-bits]
          - Split Into Two:   1001011100100100 [L] 1000111010111110 [R]
          - Swap Halves:      10001110101111101001011100100100
          - Bit Inversion:    01110001010000010110100011011011
          - Compressed Key:   11000101111001110011011110100101   [done by compression P-Box]
          - XOR with Key:     10110100101001100101111101111110

          - FUNCTION OUTPUT:  10110100101001100101111101111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011001111001100000001000101

       - FUNCTION OUTPUT:          10110100101001100101111101111110

       - Left XOR FUNCTION OUTPUT: 11010111100110101001111100111011

       - Next Round Left 32 Bits:  01010100100010101011001011110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111100110101001111100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100100010101011001011110010

       - Right 32 Bits:            11010111100110101001111100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011110010100000101100100010110000101000001010100   [Subkey: 4]
          - Input Half:       11010111100110101001111100111011
          - S-Box Result:     01101101001101000011101100011000   [per every group of 4-bits]
          - Split Into Two:   0110110100110100 [L] 0011101100011000 [R]
          - Swap Halves:      00111011000110000110110100110100
          - Bit Inversion:    11000100111001111001001011001011
          - Compressed Key:   01001101010010010001001000001000   [done by compression P-Box]
          - XOR with Key:     10001001101011101000000011000011

          - FUNCTION OUTPUT:  10001001101011101000000011000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100100010101011001011110010

       - FUNCTION OUTPUT:          10001001101011101000000011000011

       - Left XOR FUNCTION OUTPUT: 11011101001001000011001000110001

       - Next Round Left 32 Bits:  11010111100110101001111100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101001001000011001000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111100110101001111100111011

       - Right 32 Bits:            11011101001001000011001000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010111110000110101111101001101110100111101011111010   [Subkey: 3]
          - Input Half:       11011101001001000011001000110001
          - S-Box Result:     01100110111001110001111000011010   [per every group of 4-bits]
          - Split Into Two:   0110011011100111 [L] 0001111000011010 [R]
          - Swap Halves:      00011110000110100110011011100111
          - Bit Inversion:    11100001111001011001100100011000
          - Compressed Key:   11101101111011011110011010100101   [done by compression P-Box]
          - XOR with Key:     00001100000010000111111110111101

          - FUNCTION OUTPUT:  00001100000010000111111110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111100110101001111100111011

       - FUNCTION OUTPUT:          00001100000010000111111110111101

       - Left XOR FUNCTION OUTPUT: 11011011100100101110000010000110

       - Next Round Left 32 Bits:  11011101001001000011001000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011100100101110000010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101001001000011001000110001

       - Right 32 Bits:            11011011100100101110000010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 2]
          - Input Half:       11011011100100101110000010000110
          - S-Box Result:     01101000001111101100111100100000   [per every group of 4-bits]
          - Split Into Two:   0110100000111110 [L] 1100111100100000 [R]
          - Swap Halves:      11001111001000000110100000111110
          - Bit Inversion:    00110000110111111001011111000001
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     01101000001001111110010111000001

          - FUNCTION OUTPUT:  01101000001001111110010111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101001001000011001000110001

       - FUNCTION OUTPUT:          01101000001001111110010111000001

       - Left XOR FUNCTION OUTPUT: 10110101000000111101011111110000

       - Next Round Left 32 Bits:  11011011100100101110000010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101000000111101011111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011100100101110000010000110

       - Right 32 Bits:            10110101000000111101011111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 1]
          - Input Half:       10110101000000111101011111110000
          - S-Box Result:     10001001111100010110110110111111   [per every group of 4-bits]
          - Split Into Two:   1000100111110001 [L] 0110110110111111 [R]
          - Swap Halves:      01101101101111111000100111110001
          - Bit Inversion:    10010010010000000111011000001110
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     01111111101110011000111110001011

          - FUNCTION OUTPUT:  01111111101110011000111110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011100100101110000010000110

       - FUNCTION OUTPUT:          01111111101110011000111110001011

       - Left XOR FUNCTION OUTPUT: 10100100001010110110111100001101

       - Next Round Left 32 Bits:  10110101000000111101011111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100001010110110111100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010010000101011011011110000110110110101000000111101011111110000

 > Decrypted Block:     1010010000101011011011110000110110110101000000111101011111110000


!!!CBC: Previous Ciphertext:                             0100010000101110001111011001100010100000100110001011011000000011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1110000000000101010100101001010100010101100110110110000111110011

 > Final Processed Block:                                1110000000000101010100101001010100010101100110110110000111110011



Ciphertext Block 6:                                      1100000011100010111001110001011011001101000001010010111011010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000111000101110011100010110

       - Right 32 Bits:            11001101000001010010111011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 16]
          - Input Half:       11001101000001010010111011010001
          - S-Box Result:     01010110111110011110110001101010   [per every group of 4-bits]
          - Split Into Two:   0101011011111001 [L] 1110110001101010 [R]
          - Swap Halves:      11101100011010100101011011111001
          - Bit Inversion:    00010011100101011010100100000110
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     01001011011011011101101100000110

          - FUNCTION OUTPUT:  01001011011011011101101100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000111000101110011100010110

       - FUNCTION OUTPUT:          01001011011011011101101100000110

       - Left XOR FUNCTION OUTPUT: 10001011100011110011110000010000

       - Next Round Left 32 Bits:  11001101000001010010111011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011100011110011110000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101000001010010111011010001

       - Right 32 Bits:            10001011100011110011110000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 15]
          - Input Half:       10001011100011110011110000010000
          - S-Box Result:     00101000001010110001010110101111   [per every group of 4-bits]
          - Split Into Two:   0010100000101011 [L] 0001010110101111 [R]
          - Swap Halves:      00010101101011110010100000101011
          - Bit Inversion:    11101010010100001101011111010100
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     00000111101010010010111001010001

          - FUNCTION OUTPUT:  00000111101010010010111001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101000001010010111011010001

       - FUNCTION OUTPUT:          00000111101010010010111001010001

       - Left XOR FUNCTION OUTPUT: 11001010101011000000000010000000

       - Next Round Left 32 Bits:  10001011100011110011110000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010101011000000000010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100011110011110000010000

       - Right 32 Bits:            11001010101011000000000010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000010101000101000001111001010000010110010001011000   [Subkey: 14]
          - Input Half:       11001010101011000000000010000000
          - S-Box Result:     01010100010001011111111100101111   [per every group of 4-bits]
          - Split Into Two:   0101010001000101 [L] 1111111100101111 [R]
          - Swap Halves:      11111111001011110101010001000101
          - Bit Inversion:    00000000110100001010101110111010
          - Compressed Key:   01001010010110110101101001000100   [done by compression P-Box]
          - XOR with Key:     01001010100010111111000111111110

          - FUNCTION OUTPUT:  01001010100010111111000111111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100011110011110000010000

       - FUNCTION OUTPUT:          01001010100010111111000111111110

       - Left XOR FUNCTION OUTPUT: 11000001000001001100110111101110

       - Next Round Left 32 Bits:  11001010101011000000000010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001000001001100110111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010101011000000000010000000

       - Right 32 Bits:            11000001000001001100110111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111110101011101011111000011010111110100110111010   [Subkey: 13]
          - Input Half:       11000001000001001100110111101110
          - S-Box Result:     01011010111101110101011011001100   [per every group of 4-bits]
          - Split Into Two:   0101101011110111 [L] 0101011011001100 [R]
          - Swap Halves:      01010110110011000101101011110111
          - Bit Inversion:    10101001001100111010010100001000
          - Compressed Key:   11101101101111110011111100110101   [done by compression P-Box]
          - XOR with Key:     01000100100011001001101000111101

          - FUNCTION OUTPUT:  01000100100011001001101000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010101011000000000010000000

       - FUNCTION OUTPUT:          01000100100011001001101000111101

       - Left XOR FUNCTION OUTPUT: 10001110001000001001101010111101

       - Next Round Left 32 Bits:  11000001000001001100110111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110001000001001101010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001000001001100110111101110

       - Right 32 Bits:            10001110001000001001101010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011000010100000101010001010000011110010100000101100100   [Subkey: 12]
          - Input Half:       10001110001000001001101010111101
          - S-Box Result:     00101100111011110011010010000110   [per every group of 4-bits]
          - Split Into Two:   0010110011101111 [L] 0011010010000110 [R]
          - Swap Halves:      00110100100001100010110011101111
          - Bit Inversion:    11001011011110011101001100010000
          - Compressed Key:   11001000010110100011101000011000   [done by compression P-Box]
          - XOR with Key:     00000011001000111110100100001000

          - FUNCTION OUTPUT:  00000011001000111110100100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001000001001100110111101110

       - FUNCTION OUTPUT:          00000011001000111110100100001000

       - Left XOR FUNCTION OUTPUT: 11000010001001110010010011100110

       - Next Round Left 32 Bits:  10001110001000001001101010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010001001110010010011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110001000001001101010111101

       - Right 32 Bits:            11000010001001110010010011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010011110101111101010111010111110000110101111101001   [Subkey: 11]
          - Input Half:       11000010001001110010010011100110
          - S-Box Result:     01011110111011011110011111000000   [per every group of 4-bits]
          - Split Into Two:   0101111011101101 [L] 1110011111000000 [R]
          - Swap Halves:      11100111110000000101111011101101
          - Bit Inversion:    00011000001111111010000100010010
          - Compressed Key:   11101101111101111011001010110110   [done by compression P-Box]
          - XOR with Key:     11110101110010000001001110100100

          - FUNCTION OUTPUT:  11110101110010000001001110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110001000001001101010111101

       - FUNCTION OUTPUT:          11110101110010000001001110100100

       - Left XOR FUNCTION OUTPUT: 01111011111010001000100100011001

       - Next Round Left 32 Bits:  11000010001001110010010011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011111010001000100100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010001001110010010011100110

       - Right 32 Bits:            01111011111010001000100100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100100010110000101000001010100010100000111100101000001   [Subkey: 10]
          - Input Half:       01111011111010001000100100011001
          - S-Box Result:     11011000110000100010001110100011   [per every group of 4-bits]
          - Split Into Two:   1101100011000010 [L] 0010001110100011 [R]
          - Swap Halves:      00100011101000111101100011000010
          - Bit Inversion:    11011100010111000010011100111101
          - Compressed Key:   00011001010110100001001000010010   [done by compression P-Box]
          - XOR with Key:     11000101000001100011010100101111

          - FUNCTION OUTPUT:  11000101000001100011010100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010001001110010010011100110

       - FUNCTION OUTPUT:          11000101000001100011010100101111

       - Left XOR FUNCTION OUTPUT: 00000111001000010001000111001001

       - Next Round Left 32 Bits:  01111011111010001000100100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001000010001000111001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011111010001000100100011001

       - Right 32 Bits:            00000111001000010001000111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101110100111101011111010101110101111100001101011   [Subkey: 9]
          - Input Half:       00000111001000010001000111001001
          - S-Box Result:     11111101111010101010101001010011   [per every group of 4-bits]
          - Split Into Two:   1111110111101010 [L] 1010101001010011 [R]
          - Swap Halves:      10101010010100111111110111101010
          - Bit Inversion:    01010101101011000000001000010101
          - Compressed Key:   10001101111111111010011100000111   [done by compression P-Box]
          - XOR with Key:     11011000010100111010010100010010

          - FUNCTION OUTPUT:  11011000010100111010010100010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011111010001000100100011001

       - FUNCTION OUTPUT:          11011000010100111010010100010010

       - Left XOR FUNCTION OUTPUT: 10100011101110110010110000001011

       - Next Round Left 32 Bits:  00000111001000010001000111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011101110110010110000001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001000010001000111001001

       - Right 32 Bits:            10100011101110110010110000001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001011001000101100001010000010101000101000001111001   [Subkey: 8]
          - Input Half:       10100011101110110010110000001011
          - S-Box Result:     01000001100010001110010111111000   [per every group of 4-bits]
          - Split Into Two:   0100000110001000 [L] 1110010111111000 [R]
          - Swap Halves:      11100101111110000100000110001000
          - Bit Inversion:    00011010000001111011111001110111
          - Compressed Key:   00000110011110100001001000000110   [done by compression P-Box]
          - XOR with Key:     00011100011111011010110001110001

          - FUNCTION OUTPUT:  00011100011111011010110001110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001000010001000111001001

       - FUNCTION OUTPUT:          00011100011111011010110001110001

       - Left XOR FUNCTION OUTPUT: 00011011010111001011110110111000

       - Next Round Left 32 Bits:  10100011101110110010110000001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011010111001011110110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011101110110010110000001011

       - Right 32 Bits:            00011011010111001011110110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011111010011011101001111010111110101011101011111000   [Subkey: 7]
          - Input Half:       00011011010111001011110110111000
          - S-Box Result:     10101000100101011000011010000010   [per every group of 4-bits]
          - Split Into Two:   1010100010010101 [L] 1000011010000010 [R]
          - Swap Halves:      10000110100000101010100010010101
          - Bit Inversion:    01111001011111010101011101101010
          - Compressed Key:   10100101101110111011010110100100   [done by compression P-Box]
          - XOR with Key:     11011100110001101110001011001110

          - FUNCTION OUTPUT:  11011100110001101110001011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011101110110010110000001011

       - FUNCTION OUTPUT:          11011100110001101110001011001110

       - Left XOR FUNCTION OUTPUT: 01111111011111011100111011000101

       - Next Round Left 32 Bits:  00011011010111001011110110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111011111011100111011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011010111001011110110111000

       - Right 32 Bits:            01111111011111011100111011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010000010110010001011000010100000101010001010000   [Subkey: 6]
          - Input Half:       01111111011111011100111011000101
          - S-Box Result:     11011011110101100101110001011001   [per every group of 4-bits]
          - Split Into Two:   1101101111010110 [L] 0101110001011001 [R]
          - Swap Halves:      01011100010110011101101111010110
          - Bit Inversion:    10100011101001100010010000101001
          - Compressed Key:   11000000110010100001001001000000   [done by compression P-Box]
          - XOR with Key:     01100011011011000011011001101001

          - FUNCTION OUTPUT:  01100011011011000011011001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011010111001011110110111000

       - FUNCTION OUTPUT:          01100011011011000011011001101001

       - Left XOR FUNCTION OUTPUT: 01111000001100001000101111010001

       - Next Round Left 32 Bits:  01111111011111011100111011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000001100001000101111010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111011111011100111011000101

       - Right 32 Bits:            01111000001100001000101111010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111000011010111110100110111010011110101111101010111010   [Subkey: 5]
          - Input Half:       01111000001100001000101111010001
          - S-Box Result:     11010010000111110010100001101010   [per every group of 4-bits]
          - Split Into Two:   1101001000011111 [L] 0010100001101010 [R]
          - Swap Halves:      00101000011010101101001000011111
          - Bit Inversion:    11010111100101010010110111100000
          - Compressed Key:   11000101111001110011011110100101   [done by compression P-Box]
          - XOR with Key:     00010010011100100001101001000101

          - FUNCTION OUTPUT:  00010010011100100001101001000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111011111011100111011000101

       - FUNCTION OUTPUT:          00010010011100100001101001000101

       - Left XOR FUNCTION OUTPUT: 01101101000011111101010010000000

       - Next Round Left 32 Bits:  01111000001100001000101111010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101000011111101010010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000001100001000101111010001

       - Right 32 Bits:            01101101000011111101010010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011110010100000101100100010110000101000001010100   [Subkey: 4]
          - Input Half:       01101101000011111101010010000000
          - S-Box Result:     00000110111110110110011100101111   [per every group of 4-bits]
          - Split Into Two:   0000011011111011 [L] 0110011100101111 [R]
          - Swap Halves:      01100111001011110000011011111011
          - Bit Inversion:    10011000110100001111100100000100
          - Compressed Key:   01001101010010010001001000001000   [done by compression P-Box]
          - XOR with Key:     11010101100110011110101100001100

          - FUNCTION OUTPUT:  11010101100110011110101100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000001100001000101111010001

       - FUNCTION OUTPUT:          11010101100110011110101100001100

       - Left XOR FUNCTION OUTPUT: 10101101101010010110000011011101

       - Next Round Left 32 Bits:  01101101000011111101010010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101101010010110000011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101000011111101010010000000

       - Right 32 Bits:            10101101101010010110000011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010111110000110101111101001101110100111101011111010   [Subkey: 3]
          - Input Half:       10101101101010010110000011011101
          - S-Box Result:     01000110010000110000111101100110   [per every group of 4-bits]
          - Split Into Two:   0100011001000011 [L] 0000111101100110 [R]
          - Swap Halves:      00001111011001100100011001000011
          - Bit Inversion:    11110000100110011011100110111100
          - Compressed Key:   11101101111011011110011010100101   [done by compression P-Box]
          - XOR with Key:     00011101011101000101111100011001

          - FUNCTION OUTPUT:  00011101011101000101111100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101000011111101010010000000

       - FUNCTION OUTPUT:          00011101011101000101111100011001

       - Left XOR FUNCTION OUTPUT: 01110000011110111000101110011001

       - Next Round Left 32 Bits:  10101101101010010110000011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000011110111000101110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101101010010110000011011101

       - Right 32 Bits:            01110000011110111000101110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100010100000111100101000001011001000101100001010000   [Subkey: 2]
          - Input Half:       01110000011110111000101110011001
          - S-Box Result:     11011111110110000010100000110011   [per every group of 4-bits]
          - Split Into Two:   1101111111011000 [L] 0010100000110011 [R]
          - Swap Halves:      00101000001100111101111111011000
          - Bit Inversion:    11010111110011000010000000100111
          - Compressed Key:   01011000111110000111001000000000   [done by compression P-Box]
          - XOR with Key:     10001111001101000101001000100111

          - FUNCTION OUTPUT:  10001111001101000101001000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101101010010110000011011101

       - FUNCTION OUTPUT:          10001111001101000101001000100111

       - Left XOR FUNCTION OUTPUT: 00100010100111010011001011111010

       - Next Round Left 32 Bits:  01110000011110111000101110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010100111010011001011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000011110111000101110011001

       - Right 32 Bits:            00100010100111010011001011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111010101110101111100001101011111010011011101001111010   [Subkey: 1]
          - Input Half:       00100010100111010011001011111010
          - S-Box Result:     11101110001101100001111010110100   [per every group of 4-bits]
          - Split Into Two:   1110111000110110 [L] 0001111010110100 [R]
          - Swap Halves:      00011110101101001110111000110110
          - Bit Inversion:    11100001010010110001000111001001
          - Compressed Key:   11101101111110011111100110000101   [done by compression P-Box]
          - XOR with Key:     00001100101100101110100001001100

          - FUNCTION OUTPUT:  00001100101100101110100001001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000011110111000101110011001

       - FUNCTION OUTPUT:          00001100101100101110100001001100

       - Left XOR FUNCTION OUTPUT: 01111100110010010110001111010101

       - Next Round Left 32 Bits:  00100010100111010011001011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100110010010110001111010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111110011001001011000111101010100100010100111010011001011111010

 > Decrypted Block:     0111110011001001011000111101010100100010100111010011001011111010


!!!CBC: Previous Ciphertext:                             0010011010101110011111111111010001010011001000011101011110010001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0101101001100111000111000010000101110001101111001110010101101011

 > Final Processed Block:                                0101101001100111000111000010000101110001101111001110010101101011


FINAL PROCESSED DATA BLOCKS: 0110110010001000101110001011001101011110100100011100101001111000,1000101011001010000101110000001101001000010001101101111111000011,1110111111011001010111100101111000110001010001011000100000001111,0010110011101000111000000110000011101010111000101011001001110101,1110000000000101010100101001010100010101100110110110000111110011,0101101001100111000111000010000101110001101111001110010101101011,

BLOCKS IN ASCII:             l?∏≥^? x? HFﬂ√ÔŸ^^1E?,Ë‡`Í‚≤u‡R??aÛZg!qºÂk

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: V28ygJA
In Binary:  01010110001100100011100001111001011001110100101001000001

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 10011100110111000111100001101001100010110101101111101010
Subkey 2  : 00110010001110000111100101100111010010100100000101010110
Subkey 3  : 11011100011110000110100110001011010110111110101010011100
Subkey 4  : 00111000011110010110011101001010010000010101011000110010
Subkey 5  : 01111000011010011000101101011011111010101001110011011100
Subkey 6  : 01111001011001110100101001000001010101100011001000111000
Subkey 7  : 01101001100010110101101111101010100111001101110001111000
Subkey 8  : 01100111010010100100000101010110001100100011100001111001
Subkey 9  : 10001011010110111110101010011100110111000111100001101001
Subkey 10 : 01001010010000010101011000110010001110000111100101100111
Subkey 11 : 01011011111010101001110011011100011110000110100110001011
Subkey 12 : 01000001010101100011001000111000011110010110011101001010
Subkey 13 : 11101010100111001101110001111000011010011000101101011011
Subkey 14 : 01010110001100100011100001111001011001110100101001000001
Subkey 15 : 10011100110111000111100001101001100010110101101111101010
Subkey 16 : 00110010001110000111100101100111010010100100000101010110

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : l?∏≥^? x? HFﬂ√ÔŸ^^1E?,Ë‡`Í‚≤u‡R??aÛZg!qºÂk

Data padded with spaces : l?∏≥^? x? HFﬂ√ÔŸ^^1E?,Ë‡`Í‚≤u‡R??aÛZg!qºÂk[Padded with '0' spaces]

Data in ASCII           : 108,136,184,179,94,145,202,120,138,202,23,3,72,70,223,195,239,217,94,94,49,69,136,15,44,232,224,96,234,226,178,117,224,5,82,149,21,155,97,243,90,103,28,33,113,188,229,107,

Data in Binary          : 01101100,10001000,10111000,10110011,01011110,10010001,11001010,01111000,10001010,11001010,00010111,00000011,01001000,01000110,11011111,11000011,11101111,11011001,01011110,01011110,00110001,01000101,10001000,00001111,00101100,11101000,11100000,01100000,11101010,11100010,10110010,01110101,11100000,00000101,01010010,10010101,00010101,10011011,01100001,11110011,01011010,01100111,00011100,00100001,01110001,10111100,11100101,01101011,

Data in 64-bit Blocks   : 0110110010001000101110001011001101011110100100011100101001111000,1000101011001010000101110000001101001000010001101101111111000011,1110111111011001010111100101111000110001010001011000100000001111,0010110011101000111000000110000011101010111000101011001001110101,1110000000000101010100101001010100010101100110110110000111110011,0101101001100111000111000010000101110001101111001110010101101011,



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0110011001110001010100000100001000110110011011000100110001101011)

Plaintext Block: 1:                                      0110110010001000101110001011001101011110100100011100101001111000

!!!CBC: Previous Ciphertext:                             0110011001110001010100000100001000110110011011000100110001101011

!!!CBC: Current Block XOR with Previous Ciphertext:      0000101011111001111010001111000101101000111111011000011000010011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010111110011110100011110001

       - Right 32 Bits:            01101000111111011000011000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 1]
          - Input Half:       01101000111111011000011000010011
          - S-Box Result:     00000010101101100010000010100001   [per every group of 4-bits]
          - Split Into Two:   0000001010110110 [L] 0010000010100001 [R]
          - Swap Halves:      00100000101000010000001010110110
          - Bit Inversion:    11011111010111101111110101001001
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     00000100101001110011001111111100

          - FUNCTION OUTPUT:  00000100101001110011001111111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010111110011110100011110001

       - FUNCTION OUTPUT:          00000100101001110011001111111100

       - Left XOR FUNCTION OUTPUT: 00001110010111101101101100001101

       - Next Round Left 32 Bits:  01101000111111011000011000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110010111101101101100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000111111011000011000010011

       - Right 32 Bits:            00001110010111101101101100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 2]
          - Input Half:       00001110010111101101101100001101
          - S-Box Result:     11111100100111000110100011110110   [per every group of 4-bits]
          - Split Into Two:   1111110010011100 [L] 0110100011110110 [R]
          - Swap Halves:      01101000111101101111110010011100
          - Bit Inversion:    10010111000010010000001101100011
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     11111010111100000101010101111010

          - FUNCTION OUTPUT:  11111010111100000101010101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000111111011000011000010011

       - FUNCTION OUTPUT:          11111010111100000101010101111010

       - Left XOR FUNCTION OUTPUT: 10010010000011011101001101101001

       - Next Round Left 32 Bits:  00001110010111101101101100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010000011011101001101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110010111101101101100001101

       - Right 32 Bits:            10010010000011011101001101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100011110000110100110001011010110111110101010011100   [Subkey: 3]
          - Input Half:       10010010000011011101001101101001
          - S-Box Result:     00111110111101100110000100000011   [per every group of 4-bits]
          - Split Into Two:   0011111011110110 [L] 0110000100000011 [R]
          - Swap Halves:      01100001000000110011111011110110
          - Bit Inversion:    10011110111111001100000100001001
          - Compressed Key:   11011101111001000101111110101100   [done by compression P-Box]
          - XOR with Key:     01000011000110001001111010100101

          - FUNCTION OUTPUT:  01000011000110001001111010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110010111101101101100001101

       - FUNCTION OUTPUT:          01000011000110001001111010100101

       - Left XOR FUNCTION OUTPUT: 01001101010001100100010110101000

       - Next Round Left 32 Bits:  10010010000011011101001101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101010001100100010110101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010000011011101001101101001

       - Right 32 Bits:            01001101010001100100010110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111000011110010110011101001010010000010101011000110010   [Subkey: 4]
          - Input Half:       01001101010001100100010110101000
          - S-Box Result:     01110110011100000111100101000010   [per every group of 4-bits]
          - Split Into Two:   0111011001110000 [L] 0111100101000010 [R]
          - Swap Halves:      01111001010000100111011001110000
          - Bit Inversion:    10000110101111011000100110001111
          - Compressed Key:   11001101110010000001101011000001   [done by compression P-Box]
          - XOR with Key:     01001011011101011001001101001110

          - FUNCTION OUTPUT:  01001011011101011001001101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010000011011101001101101001

       - FUNCTION OUTPUT:          01001011011101011001001101001110

       - Left XOR FUNCTION OUTPUT: 11011001011110000100000000100111

       - Next Round Left 32 Bits:  01001101010001100100010110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001011110000100000000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101010001100100010110101000

       - Right 32 Bits:            11011001011110000100000000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000011010011000101101011011111010101001110011011100   [Subkey: 5]
          - Input Half:       11011001011110000100000000100111
          - S-Box Result:     01100011110100100111111111101101   [per every group of 4-bits]
          - Split Into Two:   0110001111010010 [L] 0111111111101101 [R]
          - Swap Halves:      01111111111011010110001111010010
          - Bit Inversion:    10000000000100101001110000101101
          - Compressed Key:   11000101001010101111010101101100   [done by compression P-Box]
          - XOR with Key:     01000101001110000110100101000001

          - FUNCTION OUTPUT:  01000101001110000110100101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101010001100100010110101000

       - FUNCTION OUTPUT:          01000101001110000110100101000001

       - Left XOR FUNCTION OUTPUT: 00001000011111100010110011101001

       - Next Round Left 32 Bits:  11011001011110000100000000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000011111100010110011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001011110000100000000100111

       - Right 32 Bits:            00001000011111100010110011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001011001110100101001000001010101100011001000111000   [Subkey: 6]
          - Input Half:       00001000011111100010110011101001
          - S-Box Result:     11110010110111001110010111000011   [per every group of 4-bits]
          - Split Into Two:   1111001011011100 [L] 1110010111000011 [R]
          - Swap Halves:      11100101110000111111001011011100
          - Bit Inversion:    00011010001111000000110100100011
          - Compressed Key:   11000110011010000101010010000100   [done by compression P-Box]
          - XOR with Key:     11011100010101000101100110100111

          - FUNCTION OUTPUT:  11011100010101000101100110100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001011110000100000000100111

       - FUNCTION OUTPUT:          11011100010101000101100110100111

       - Left XOR FUNCTION OUTPUT: 00000101001011000001100110000000

       - Next Round Left 32 Bits:  00001000011111100010110011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101001011000001100110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000011111100010110011101001

       - Right 32 Bits:            00000101001011000001100110000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100010110101101111101010100111001101110001111000   [Subkey: 7]
          - Input Half:       00000101001011000001100110000000
          - S-Box Result:     11111001111001011010001100101111   [per every group of 4-bits]
          - Split Into Two:   1111100111100101 [L] 1010001100101111 [R]
          - Swap Halves:      10100011001011111111100111100101
          - Bit Inversion:    01011100110100000000011000011010
          - Compressed Key:   10000001011111011000001101000100   [done by compression P-Box]
          - XOR with Key:     11011101101011011000010101011110

          - FUNCTION OUTPUT:  11011101101011011000010101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000011111100010110011101001

       - FUNCTION OUTPUT:          11011101101011011000010101011110

       - Left XOR FUNCTION OUTPUT: 11010101110100111010100110110111

       - Next Round Left 32 Bits:  00000101001011000001100110000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101110100111010100110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101001011000001100110000000

       - Right 32 Bits:            11010101110100111010100110110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111010010100100000101010110001100100011100001111001   [Subkey: 8]
          - Input Half:       11010101110100111010100110110111
          - S-Box Result:     01101001011000010100001110001101   [per every group of 4-bits]
          - Split Into Two:   0110100101100001 [L] 0100001110001101 [R]
          - Swap Halves:      01000011100011010110100101100001
          - Bit Inversion:    10111100011100101001011010011110
          - Compressed Key:   00110001010010100010010000000110   [done by compression P-Box]
          - XOR with Key:     10001101001110001011001010011000

          - FUNCTION OUTPUT:  10001101001110001011001010011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101001011000001100110000000

       - FUNCTION OUTPUT:          10001101001110001011001010011000

       - Left XOR FUNCTION OUTPUT: 10001000000101001010101100011000

       - Next Round Left 32 Bits:  11010101110100111010100110110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000000101001010101100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101110100111010100110110111

       - Right 32 Bits:            10001000000101001010101100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011010110111110101010011100110111000111100001101001   [Subkey: 9]
          - Input Half:       10001000000101001010101100011000
          - S-Box Result:     00100010101001110100100010100010   [per every group of 4-bits]
          - Split Into Two:   0010001010100111 [L] 0100100010100010 [R]
          - Swap Halves:      01001000101000100010001010100111
          - Bit Inversion:    10110111010111011101110101011000
          - Compressed Key:   10101001111001101001001000000110   [done by compression P-Box]
          - XOR with Key:     00011110101110110100111101011110

          - FUNCTION OUTPUT:  00011110101110110100111101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101110100111010100110110111

       - FUNCTION OUTPUT:          00011110101110110100111101011110

       - Left XOR FUNCTION OUTPUT: 11001011011010001110011011101001

       - Next Round Left 32 Bits:  10001000000101001010101100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011011010001110011011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000000101001010101100011000

       - Right 32 Bits:            11001011011010001110011011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010000010101011000110010001110000111100101100111   [Subkey: 10]
          - Input Half:       11001011011010001110011011101001
          - S-Box Result:     01011000000000101100000011000011   [per every group of 4-bits]
          - Split Into Two:   0101100000000010 [L] 1100000011000011 [R]
          - Swap Halves:      11000000110000110101100000000010
          - Bit Inversion:    00111111001111001010011111111101
          - Compressed Key:   10100000010100110010001000011011   [done by compression P-Box]
          - XOR with Key:     10011111011011111000010111100110

          - FUNCTION OUTPUT:  10011111011011111000010111100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000000101001010101100011000

       - FUNCTION OUTPUT:          10011111011011111000010111100110

       - Left XOR FUNCTION OUTPUT: 00010111011110110010111011111110

       - Next Round Left 32 Bits:  11001011011010001110011011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111011110110010111011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011011010001110011011101001

       - Right 32 Bits:            00010111011110110010111011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011111010101001110011011100011110000110100110001011   [Subkey: 11]
          - Input Half:       00010111011110110010111011111110
          - S-Box Result:     10101101110110001110110010111100   [per every group of 4-bits]
          - Split Into Two:   1010110111011000 [L] 1110110010111100 [R]
          - Swap Halves:      11101100101111001010110111011000
          - Bit Inversion:    00010011010000110101001000100111
          - Compressed Key:   11100101001111100011001000110111   [done by compression P-Box]
          - XOR with Key:     11110110011111010110000000010000

          - FUNCTION OUTPUT:  11110110011111010110000000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011011010001110011011101001

       - FUNCTION OUTPUT:          11110110011111010110000000010000

       - Left XOR FUNCTION OUTPUT: 00111101000101011000011011111001

       - Next Round Left 32 Bits:  00010111011110110010111011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101000101011000011011111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111011110110010111011111110

       - Right 32 Bits:            00111101000101011000011011111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001010101100011001000111000011110010110011101001010   [Subkey: 12]
          - Input Half:       00111101000101011000011011111001
          - S-Box Result:     00010110101010010010000010110011   [per every group of 4-bits]
          - Split Into Two:   0001011010101001 [L] 0010000010110011 [R]
          - Swap Halves:      00100000101100110001011010101001
          - Bit Inversion:    11011111010011001110100101010110
          - Compressed Key:   00001010100100110011101011010101   [done by compression P-Box]
          - XOR with Key:     11010101110111111101001110000011

          - FUNCTION OUTPUT:  11010101110111111101001110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111011110110010111011111110

       - FUNCTION OUTPUT:          11010101110111111101001110000011

       - Left XOR FUNCTION OUTPUT: 11000010101001001111110101111101

       - Next Round Left 32 Bits:  00111101000101011000011011111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010101001001111110101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101000101011000011011111001

       - Right 32 Bits:            11000010101001001111110101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010100111001101110001111000011010011000101101011011   [Subkey: 13]
          - Input Half:       11000010101001001111110101111101
          - S-Box Result:     01011110010001111011011011010110   [per every group of 4-bits]
          - Split Into Two:   0101111001000111 [L] 1011011011010110 [R]
          - Swap Halves:      10110110110101100101111001000111
          - Bit Inversion:    01001001001010011010000110111000
          - Compressed Key:   10101011011110110011100110010111   [done by compression P-Box]
          - XOR with Key:     11100010010100101001100000101111

          - FUNCTION OUTPUT:  11100010010100101001100000101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101000101011000011011111001

       - FUNCTION OUTPUT:          11100010010100101001100000101111

       - Left XOR FUNCTION OUTPUT: 11011111010001110001111011010110

       - Next Round Left 32 Bits:  11000010101001001111110101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111010001110001111011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010101001001111110101111101

       - Right 32 Bits:            11011111010001110001111011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100100011100001111001011001110100101001000001   [Subkey: 14]
          - Input Half:       11011111010001110001111011010110
          - S-Box Result:     01101011011111011010110001100000   [per every group of 4-bits]
          - Split Into Two:   0110101101111101 [L] 1010110001100000 [R]
          - Swap Halves:      10101100011000000110101101111101
          - Bit Inversion:    01010011100111111001010010000010
          - Compressed Key:   01111100101110110111111010000010   [done by compression P-Box]
          - XOR with Key:     00101111001001001110101000000000

          - FUNCTION OUTPUT:  00101111001001001110101000000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010101001001111110101111101

       - FUNCTION OUTPUT:          00101111001001001110101000000000

       - Left XOR FUNCTION OUTPUT: 11101101100000000001011101111101

       - Next Round Left 32 Bits:  11011111010001110001111011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101100000000001011101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111010001110001111011010110

       - Right 32 Bits:            11101101100000000001011101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 15]
          - Input Half:       11101101100000000001011101111101
          - S-Box Result:     11000110001011111010110111010110   [per every group of 4-bits]
          - Split Into Two:   1100011000101111 [L] 1010110111010110 [R]
          - Swap Halves:      10101101110101101100011000101111
          - Bit Inversion:    01010010001010010011100111010000
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     10001001110100001111011101100101

          - FUNCTION OUTPUT:  10001001110100001111011101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111010001110001111011010110

       - FUNCTION OUTPUT:          10001001110100001111011101100101

       - Left XOR FUNCTION OUTPUT: 01010110100101111110100110110011

       - Next Round Left 32 Bits:  11101101100000000001011101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110100101111110100110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101100000000001011101111101

       - Right 32 Bits:            01010110100101111110100110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 16]
          - Input Half:       01010110100101111110100110110011
          - S-Box Result:     10010000001111011100001110000001   [per every group of 4-bits]
          - Split Into Two:   1001000000111101 [L] 1100001110000001 [R]
          - Swap Halves:      11000011100000011001000000111101
          - Bit Inversion:    00111100011111100110111111000010
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     01010001100001110011100111011011

          - FUNCTION OUTPUT:  01010001100001110011100111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101100000000001011101111101

       - FUNCTION OUTPUT:          01010001100001110011100111011011

       - Left XOR FUNCTION OUTPUT: 10111100000001110010111010100110

       - Next Round Left 32 Bits:  01010110100101111110100110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100000001110010111010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011110000000111001011101010011001010110100101111110100110110011

 > Processed Block:     1011110000000111001011101010011001010110100101111110100110110011



Plaintext Block: 2:                                      1000101011001010000101110000001101001000010001101101111111000011

!!!CBC: Previous Ciphertext:                             1011110000000111001011101010011001010110100101111110100110110011

!!!CBC: Current Block XOR with Previous Ciphertext:      0011011011001101001110011010010100011110110100010011011001110000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110110011010011100110100101

       - Right 32 Bits:            00011110110100010011011001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 1]
          - Input Half:       00011110110100010011011001110000
          - S-Box Result:     10101100011010100001000011011111   [per every group of 4-bits]
          - Split Into Two:   1010110001101010 [L] 0001000011011111 [R]
          - Swap Halves:      00010000110111111010110001101010
          - Bit Inversion:    11101111001000000101001110010101
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     00110100110110011001110100100000

          - FUNCTION OUTPUT:  00110100110110011001110100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110110011010011100110100101

       - FUNCTION OUTPUT:          00110100110110011001110100100000

       - Left XOR FUNCTION OUTPUT: 00000010000101001010010010000101

       - Next Round Left 32 Bits:  00011110110100010011011001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010000101001010010010000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110110100010011011001110000

       - Right 32 Bits:            00000010000101001010010010000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 2]
          - Input Half:       00000010000101001010010010000101
          - S-Box Result:     11111110101001110100011100101001   [per every group of 4-bits]
          - Split Into Two:   1111111010100111 [L] 0100011100101001 [R]
          - Swap Halves:      01000111001010011111111010100111
          - Bit Inversion:    10111000110101100000000101011000
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     11010101001011110101011101000001

          - FUNCTION OUTPUT:  11010101001011110101011101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110110100010011011001110000

       - FUNCTION OUTPUT:          11010101001011110101011101000001

       - Left XOR FUNCTION OUTPUT: 11001011111111100110000100110001

       - Next Round Left 32 Bits:  00000010000101001010010010000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011111111100110000100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010000101001010010010000101

       - Right 32 Bits:            11001011111111100110000100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100011110000110100110001011010110111110101010011100   [Subkey: 3]
          - Input Half:       11001011111111100110000100110001
          - S-Box Result:     01011000101111000000101000011010   [per every group of 4-bits]
          - Split Into Two:   0101100010111100 [L] 0000101000011010 [R]
          - Swap Halves:      00001010000110100101100010111100
          - Bit Inversion:    11110101111001011010011101000011
          - Compressed Key:   11011101111001000101111110101100   [done by compression P-Box]
          - XOR with Key:     00101000000000011111100011101111

          - FUNCTION OUTPUT:  00101000000000011111100011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010000101001010010010000101

       - FUNCTION OUTPUT:          00101000000000011111100011101111

       - Left XOR FUNCTION OUTPUT: 00101010000101010101110001101010

       - Next Round Left 32 Bits:  11001011111111100110000100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010000101010101110001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011111111100110000100110001

       - Right 32 Bits:            00101010000101010101110001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111000011110010110011101001010010000010101011000110010   [Subkey: 4]
          - Input Half:       00101010000101010101110001101010
          - S-Box Result:     11100100101010011001010100000100   [per every group of 4-bits]
          - Split Into Two:   1110010010101001 [L] 1001010100000100 [R]
          - Swap Halves:      10010101000001001110010010101001
          - Bit Inversion:    01101010111110110001101101010110
          - Compressed Key:   11001101110010000001101011000001   [done by compression P-Box]
          - XOR with Key:     10100111001100110000000110010111

          - FUNCTION OUTPUT:  10100111001100110000000110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011111111100110000100110001

       - FUNCTION OUTPUT:          10100111001100110000000110010111

       - Left XOR FUNCTION OUTPUT: 01101100110011010110000010100110

       - Next Round Left 32 Bits:  00101010000101010101110001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100110011010110000010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010000101010101110001101010

       - Right 32 Bits:            01101100110011010110000010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000011010011000101101011011111010101001110011011100   [Subkey: 5]
          - Input Half:       01101100110011010110000010100110
          - S-Box Result:     00000101010101100000111101000000   [per every group of 4-bits]
          - Split Into Two:   0000010101010110 [L] 0000111101000000 [R]
          - Swap Halves:      00001111010000000000010101010110
          - Bit Inversion:    11110000101111111111101010101001
          - Compressed Key:   11000101001010101111010101101100   [done by compression P-Box]
          - XOR with Key:     00110101100101010000111111000101

          - FUNCTION OUTPUT:  00110101100101010000111111000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010000101010101110001101010

       - FUNCTION OUTPUT:          00110101100101010000111111000101

       - Left XOR FUNCTION OUTPUT: 00011111100000000101001110101111

       - Next Round Left 32 Bits:  01101100110011010110000010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111100000000101001110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100110011010110000010100110

       - Right 32 Bits:            00011111100000000101001110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001011001110100101001000001010101100011001000111000   [Subkey: 6]
          - Input Half:       00011111100000000101001110101111
          - S-Box Result:     10101011001011111001000101001011   [per every group of 4-bits]
          - Split Into Two:   1010101100101111 [L] 1001000101001011 [R]
          - Swap Halves:      10010001010010111010101100101111
          - Bit Inversion:    01101110101101000101010011010000
          - Compressed Key:   11000110011010000101010010000100   [done by compression P-Box]
          - XOR with Key:     10101000110111000000000001010100

          - FUNCTION OUTPUT:  10101000110111000000000001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100110011010110000010100110

       - FUNCTION OUTPUT:          10101000110111000000000001010100

       - Left XOR FUNCTION OUTPUT: 11000100000100010110000011110010

       - Next Round Left 32 Bits:  00011111100000000101001110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100000100010110000011110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111100000000101001110101111

       - Right 32 Bits:            11000100000100010110000011110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100010110101101111101010100111001101110001111000   [Subkey: 7]
          - Input Half:       11000100000100010110000011110010
          - S-Box Result:     01010111101010100000111110111110   [per every group of 4-bits]
          - Split Into Two:   0101011110101010 [L] 0000111110111110 [R]
          - Swap Halves:      00001111101111100101011110101010
          - Bit Inversion:    11110000010000011010100001010101
          - Compressed Key:   10000001011111011000001101000100   [done by compression P-Box]
          - XOR with Key:     01110001001111000010101100010001

          - FUNCTION OUTPUT:  01110001001111000010101100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111100000000101001110101111

       - FUNCTION OUTPUT:          01110001001111000010101100010001

       - Left XOR FUNCTION OUTPUT: 01101110101111000111100010111110

       - Next Round Left 32 Bits:  11000100000100010110000011110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110101111000111100010111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100000100010110000011110010

       - Right 32 Bits:            01101110101111000111100010111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111010010100100000101010110001100100011100001111001   [Subkey: 8]
          - Input Half:       01101110101111000111100010111110
          - S-Box Result:     00001100100001011101001010001100   [per every group of 4-bits]
          - Split Into Two:   0000110010000101 [L] 1101001010001100 [R]
          - Swap Halves:      11010010100011000000110010000101
          - Bit Inversion:    00101101011100111111001101111010
          - Compressed Key:   00110001010010100010010000000110   [done by compression P-Box]
          - XOR with Key:     00011100001110011101011101111100

          - FUNCTION OUTPUT:  00011100001110011101011101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100000100010110000011110010

       - FUNCTION OUTPUT:          00011100001110011101011101111100

       - Left XOR FUNCTION OUTPUT: 11011000001010001011011110001110

       - Next Round Left 32 Bits:  01101110101111000111100010111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000001010001011011110001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110101111000111100010111110

       - Right 32 Bits:            11011000001010001011011110001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011010110111110101010011100110111000111100001101001   [Subkey: 9]
          - Input Half:       11011000001010001011011110001110
          - S-Box Result:     01100010111000101000110100101100   [per every group of 4-bits]
          - Split Into Two:   0110001011100010 [L] 1000110100101100 [R]
          - Swap Halves:      10001101001011000110001011100010
          - Bit Inversion:    01110010110100111001110100011101
          - Compressed Key:   10101001111001101001001000000110   [done by compression P-Box]
          - XOR with Key:     11011011001101010000111100011011

          - FUNCTION OUTPUT:  11011011001101010000111100011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110101111000111100010111110

       - FUNCTION OUTPUT:          11011011001101010000111100011011

       - Left XOR FUNCTION OUTPUT: 10110101100010010111011110100101

       - Next Round Left 32 Bits:  11011000001010001011011110001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101100010010111011110100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000001010001011011110001110

       - Right 32 Bits:            10110101100010010111011110100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010000010101011000110010001110000111100101100111   [Subkey: 10]
          - Input Half:       10110101100010010111011110100101
          - S-Box Result:     10001001001000111101110101001001   [per every group of 4-bits]
          - Split Into Two:   1000100100100011 [L] 1101110101001001 [R]
          - Swap Halves:      11011101010010011000100100100011
          - Bit Inversion:    00100010101101100111011011011100
          - Compressed Key:   10100000010100110010001000011011   [done by compression P-Box]
          - XOR with Key:     10000010111001010101010011000111

          - FUNCTION OUTPUT:  10000010111001010101010011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000001010001011011110001110

       - FUNCTION OUTPUT:          10000010111001010101010011000111

       - Left XOR FUNCTION OUTPUT: 01011010110011011110001101001001

       - Next Round Left 32 Bits:  10110101100010010111011110100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010110011011110001101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101100010010111011110100101

       - Right 32 Bits:            01011010110011011110001101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011111010101001110011011100011110000110100110001011   [Subkey: 11]
          - Input Half:       01011010110011011110001101001001
          - S-Box Result:     10010100010101101100000101110011   [per every group of 4-bits]
          - Split Into Two:   1001010001010110 [L] 1100000101110011 [R]
          - Swap Halves:      11000001011100111001010001010110
          - Bit Inversion:    00111110100011000110101110101001
          - Compressed Key:   11100101001111100011001000110111   [done by compression P-Box]
          - XOR with Key:     11011011101100100101100110011110

          - FUNCTION OUTPUT:  11011011101100100101100110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101100010010111011110100101

       - FUNCTION OUTPUT:          11011011101100100101100110011110

       - Left XOR FUNCTION OUTPUT: 01101110001110110010111000111011

       - Next Round Left 32 Bits:  01011010110011011110001101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110001110110010111000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010110011011110001101001001

       - Right 32 Bits:            01101110001110110010111000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001010101100011001000111000011110010110011101001010   [Subkey: 12]
          - Input Half:       01101110001110110010111000111011
          - S-Box Result:     00001100000110001110110000011000   [per every group of 4-bits]
          - Split Into Two:   0000110000011000 [L] 1110110000011000 [R]
          - Swap Halves:      11101100000110000000110000011000
          - Bit Inversion:    00010011111001111111001111100111
          - Compressed Key:   00001010100100110011101011010101   [done by compression P-Box]
          - XOR with Key:     00011001011101001100100100110010

          - FUNCTION OUTPUT:  00011001011101001100100100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010110011011110001101001001

       - FUNCTION OUTPUT:          00011001011101001100100100110010

       - Left XOR FUNCTION OUTPUT: 01000011101110010010101001111011

       - Next Round Left 32 Bits:  01101110001110110010111000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011101110010010101001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110001110110010111000111011

       - Right 32 Bits:            01000011101110010010101001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010100111001101110001111000011010011000101101011011   [Subkey: 13]
          - Input Half:       01000011101110010010101001111011
          - S-Box Result:     01110001100000111110010011011000   [per every group of 4-bits]
          - Split Into Two:   0111000110000011 [L] 1110010011011000 [R]
          - Swap Halves:      11100100110110000111000110000011
          - Bit Inversion:    00011011001001111000111001111100
          - Compressed Key:   10101011011110110011100110010111   [done by compression P-Box]
          - XOR with Key:     10110000010111001011011111101011

          - FUNCTION OUTPUT:  10110000010111001011011111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110001110110010111000111011

       - FUNCTION OUTPUT:          10110000010111001011011111101011

       - Left XOR FUNCTION OUTPUT: 11011110011001111001100111010000

       - Next Round Left 32 Bits:  01000011101110010010101001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110011001111001100111010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011101110010010101001111011

       - Right 32 Bits:            11011110011001111001100111010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100100011100001111001011001110100101001000001   [Subkey: 14]
          - Input Half:       11011110011001111001100111010000
          - S-Box Result:     01101100000011010011001101101111   [per every group of 4-bits]
          - Split Into Two:   0110110000001101 [L] 0011001101101111 [R]
          - Swap Halves:      00110011011011110110110000001101
          - Bit Inversion:    11001100100100001001001111110010
          - Compressed Key:   01111100101110110111111010000010   [done by compression P-Box]
          - XOR with Key:     10110000001010111110110101110000

          - FUNCTION OUTPUT:  10110000001010111110110101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011101110010010101001111011

       - FUNCTION OUTPUT:          10110000001010111110110101110000

       - Left XOR FUNCTION OUTPUT: 11110011100100101100011100001011

       - Next Round Left 32 Bits:  11011110011001111001100111010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011100100101100011100001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110011001111001100111010000

       - Right 32 Bits:            11110011100100101100011100001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 15]
          - Input Half:       11110011100100101100011100001011
          - S-Box Result:     10110001001111100101110111111000   [per every group of 4-bits]
          - Split Into Two:   1011000100111110 [L] 0101110111111000 [R]
          - Swap Halves:      01011101111110001011000100111110
          - Bit Inversion:    10100010000001110100111011000001
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     01111001111111101000000001110100

          - FUNCTION OUTPUT:  01111001111111101000000001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110011001111001100111010000

       - FUNCTION OUTPUT:          01111001111111101000000001110100

       - Left XOR FUNCTION OUTPUT: 10100111100110010001100110100100

       - Next Round Left 32 Bits:  11110011100100101100011100001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111100110010001100110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011100100101100011100001011

       - Right 32 Bits:            10100111100110010001100110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 16]
          - Input Half:       10100111100110010001100110100100
          - S-Box Result:     01001101001100111010001101000111   [per every group of 4-bits]
          - Split Into Two:   0100110100110011 [L] 1010001101000111 [R]
          - Swap Halves:      10100011010001110100110100110011
          - Bit Inversion:    01011100101110001011001011001100
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     00110001010000011110010011010101

          - FUNCTION OUTPUT:  00110001010000011110010011010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011100100101100011100001011

       - FUNCTION OUTPUT:          00110001010000011110010011010101

       - Left XOR FUNCTION OUTPUT: 11000010110100110010001111011110

       - Next Round Left 32 Bits:  10100111100110010001100110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010110100110010001111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100001011010011001000111101111010100111100110010001100110100100

 > Processed Block:     1100001011010011001000111101111010100111100110010001100110100100



Plaintext Block: 3:                                      1110111111011001010111100101111000110001010001011000100000001111

!!!CBC: Previous Ciphertext:                             1100001011010011001000111101111010100111100110010001100110100100

!!!CBC: Current Block XOR with Previous Ciphertext:      0010110100001010011111011000000010010110110111001001000110101011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101000010100111110110000000

       - Right 32 Bits:            10010110110111001001000110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 1]
          - Input Half:       10010110110111001001000110101011
          - S-Box Result:     00110000011001010011101001001000   [per every group of 4-bits]
          - Split Into Two:   0011000001100101 [L] 0011101001001000 [R]
          - Swap Halves:      00111010010010000011000001100101
          - Bit Inversion:    11000101101101111100111110011010
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     00011110010011100000000100101111

          - FUNCTION OUTPUT:  00011110010011100000000100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101000010100111110110000000

       - FUNCTION OUTPUT:          00011110010011100000000100101111

       - Left XOR FUNCTION OUTPUT: 00110011010001000111110010101111

       - Next Round Left 32 Bits:  10010110110111001001000110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011010001000111110010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110110111001001000110101011

       - Right 32 Bits:            00110011010001000111110010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 2]
          - Input Half:       00110011010001000111110010101111
          - S-Box Result:     00010001011101111101010101001011   [per every group of 4-bits]
          - Split Into Two:   0001000101110111 [L] 1101010101001011 [R]
          - Swap Halves:      11010101010010110001000101110111
          - Bit Inversion:    00101010101101001110111010001000
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     01000111010011011011100010010001

          - FUNCTION OUTPUT:  01000111010011011011100010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110110111001001000110101011

       - FUNCTION OUTPUT:          01000111010011011011100010010001

       - Left XOR FUNCTION OUTPUT: 11010001100100010010100100111010

       - Next Round Left 32 Bits:  00110011010001000111110010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001100100010010100100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011010001000111110010101111

       - Right 32 Bits:            11010001100100010010100100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100011110000110100110001011010110111110101010011100   [Subkey: 3]
          - Input Half:       11010001100100010010100100111010
          - S-Box Result:     01101010001110101110001100010100   [per every group of 4-bits]
          - Split Into Two:   0110101000111010 [L] 1110001100010100 [R]
          - Swap Halves:      11100011000101000110101000111010
          - Bit Inversion:    00011100111010111001010111000101
          - Compressed Key:   11011101111001000101111110101100   [done by compression P-Box]
          - XOR with Key:     11000001000011111100101001101001

          - FUNCTION OUTPUT:  11000001000011111100101001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011010001000111110010101111

       - FUNCTION OUTPUT:          11000001000011111100101001101001

       - Left XOR FUNCTION OUTPUT: 11110010010010111011011011000110

       - Next Round Left 32 Bits:  11010001100100010010100100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010010010111011011011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001100100010010100100111010

       - Right 32 Bits:            11110010010010111011011011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111000011110010110011101001010010000010101011000110010   [Subkey: 4]
          - Input Half:       11110010010010111011011011000110
          - S-Box Result:     10111110011110001000000001010000   [per every group of 4-bits]
          - Split Into Two:   1011111001111000 [L] 1000000001010000 [R]
          - Swap Halves:      10000000010100001011111001111000
          - Bit Inversion:    01111111101011110100000110000111
          - Compressed Key:   11001101110010000001101011000001   [done by compression P-Box]
          - XOR with Key:     10110010011001110101101101000110

          - FUNCTION OUTPUT:  10110010011001110101101101000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001100100010010100100111010

       - FUNCTION OUTPUT:          10110010011001110101101101000110

       - Left XOR FUNCTION OUTPUT: 01100011111101100111001001111100

       - Next Round Left 32 Bits:  11110010010010111011011011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011111101100111001001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010010010111011011011000110

       - Right 32 Bits:            01100011111101100111001001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000011010011000101101011011111010101001110011011100   [Subkey: 5]
          - Input Half:       01100011111101100111001001111100
          - S-Box Result:     00000001101100001101111011010101   [per every group of 4-bits]
          - Split Into Two:   0000000110110000 [L] 1101111011010101 [R]
          - Swap Halves:      11011110110101010000000110110000
          - Bit Inversion:    00100001001010101111111001001111
          - Compressed Key:   11000101001010101111010101101100   [done by compression P-Box]
          - XOR with Key:     11100100000000000000101100100011

          - FUNCTION OUTPUT:  11100100000000000000101100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010010010111011011011000110

       - FUNCTION OUTPUT:          11100100000000000000101100100011

       - Left XOR FUNCTION OUTPUT: 00010110010010111011110111100101

       - Next Round Left 32 Bits:  01100011111101100111001001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110010010111011110111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011111101100111001001111100

       - Right 32 Bits:            00010110010010111011110111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001011001110100101001000001010101100011001000111000   [Subkey: 6]
          - Input Half:       00010110010010111011110111100101
          - S-Box Result:     10100000011110001000011011001001   [per every group of 4-bits]
          - Split Into Two:   1010000001111000 [L] 1000011011001001 [R]
          - Swap Halves:      10000110110010011010000001111000
          - Bit Inversion:    01111001001101100101111110000111
          - Compressed Key:   11000110011010000101010010000100   [done by compression P-Box]
          - XOR with Key:     10111111010111100000101100000011

          - FUNCTION OUTPUT:  10111111010111100000101100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011111101100111001001111100

       - FUNCTION OUTPUT:          10111111010111100000101100000011

       - Left XOR FUNCTION OUTPUT: 11011100101010000111100101111111

       - Next Round Left 32 Bits:  00010110010010111011110111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100101010000111100101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110010010111011110111100101

       - Right 32 Bits:            11011100101010000111100101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100010110101101111101010100111001101110001111000   [Subkey: 7]
          - Input Half:       11011100101010000111100101111111
          - S-Box Result:     01100101010000101101001111011011   [per every group of 4-bits]
          - Split Into Two:   0110010101000010 [L] 1101001111011011 [R]
          - Swap Halves:      11010011110110110110010101000010
          - Bit Inversion:    00101100001001001001101010111101
          - Compressed Key:   10000001011111011000001101000100   [done by compression P-Box]
          - XOR with Key:     10101101010110010001100111111001

          - FUNCTION OUTPUT:  10101101010110010001100111111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110010010111011110111100101

       - FUNCTION OUTPUT:          10101101010110010001100111111001

       - Left XOR FUNCTION OUTPUT: 10111011000100101010010000011100

       - Next Round Left 32 Bits:  11011100101010000111100101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000100101010010000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100101010000111100101111111

       - Right 32 Bits:            10111011000100101010010000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111010010100100000101010110001100100011100001111001   [Subkey: 8]
          - Input Half:       10111011000100101010010000011100
          - S-Box Result:     10001000101011100100011110100101   [per every group of 4-bits]
          - Split Into Two:   1000100010101110 [L] 0100011110100101 [R]
          - Swap Halves:      01000111101001011000100010101110
          - Bit Inversion:    10111000010110100111011101010001
          - Compressed Key:   00110001010010100010010000000110   [done by compression P-Box]
          - XOR with Key:     10001001000100000101001101010111

          - FUNCTION OUTPUT:  10001001000100000101001101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100101010000111100101111111

       - FUNCTION OUTPUT:          10001001000100000101001101010111

       - Left XOR FUNCTION OUTPUT: 01010101101110000010101000101000

       - Next Round Left 32 Bits:  10111011000100101010010000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101101110000010101000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000100101010010000011100

       - Right 32 Bits:            01010101101110000010101000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011010110111110101010011100110111000111100001101001   [Subkey: 9]
          - Input Half:       01010101101110000010101000101000
          - S-Box Result:     10011001100000101110010011100010   [per every group of 4-bits]
          - Split Into Two:   1001100110000010 [L] 1110010011100010 [R]
          - Swap Halves:      11100100111000101001100110000010
          - Bit Inversion:    00011011000111010110011001111101
          - Compressed Key:   10101001111001101001001000000110   [done by compression P-Box]
          - XOR with Key:     10110010111110111111010001111011

          - FUNCTION OUTPUT:  10110010111110111111010001111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000100101010010000011100

       - FUNCTION OUTPUT:          10110010111110111111010001111011

       - Left XOR FUNCTION OUTPUT: 00001001111010010101000001100111

       - Next Round Left 32 Bits:  01010101101110000010101000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001111010010101000001100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101101110000010101000101000

       - Right 32 Bits:            00001001111010010101000001100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010000010101011000110010001110000111100101100111   [Subkey: 10]
          - Input Half:       00001001111010010101000001100111
          - S-Box Result:     11110011110000111001111100001101   [per every group of 4-bits]
          - Split Into Two:   1111001111000011 [L] 1001111100001101 [R]
          - Swap Halves:      10011111000011011111001111000011
          - Bit Inversion:    01100000111100100000110000111100
          - Compressed Key:   10100000010100110010001000011011   [done by compression P-Box]
          - XOR with Key:     11000000101000010010111000100111

          - FUNCTION OUTPUT:  11000000101000010010111000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101101110000010101000101000

       - FUNCTION OUTPUT:          11000000101000010010111000100111

       - Left XOR FUNCTION OUTPUT: 10010101000110010000010000001111

       - Next Round Left 32 Bits:  00001001111010010101000001100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101000110010000010000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001111010010101000001100111

       - Right 32 Bits:            10010101000110010000010000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011111010101001110011011100011110000110100110001011   [Subkey: 11]
          - Input Half:       10010101000110010000010000001111
          - S-Box Result:     00111001101000111111011111111011   [per every group of 4-bits]
          - Split Into Two:   0011100110100011 [L] 1111011111111011 [R]
          - Swap Halves:      11110111111110110011100110100011
          - Bit Inversion:    00001000000001001100011001011100
          - Compressed Key:   11100101001111100011001000110111   [done by compression P-Box]
          - XOR with Key:     11101101001110101111010001101011

          - FUNCTION OUTPUT:  11101101001110101111010001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001111010010101000001100111

       - FUNCTION OUTPUT:          11101101001110101111010001101011

       - Left XOR FUNCTION OUTPUT: 11100100110100111010010000001100

       - Next Round Left 32 Bits:  10010101000110010000010000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100110100111010010000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101000110010000010000001111

       - Right 32 Bits:            11100100110100111010010000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001010101100011001000111000011110010110011101001010   [Subkey: 12]
          - Input Half:       11100100110100111010010000001100
          - S-Box Result:     11000111011000010100011111110101   [per every group of 4-bits]
          - Split Into Two:   1100011101100001 [L] 0100011111110101 [R]
          - Swap Halves:      01000111111101011100011101100001
          - Bit Inversion:    10111000000010100011100010011110
          - Compressed Key:   00001010100100110011101011010101   [done by compression P-Box]
          - XOR with Key:     10110010100110010000001001001011

          - FUNCTION OUTPUT:  10110010100110010000001001001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101000110010000010000001111

       - FUNCTION OUTPUT:          10110010100110010000001001001011

       - Left XOR FUNCTION OUTPUT: 00100111100000000000011001000100

       - Next Round Left 32 Bits:  11100100110100111010010000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111100000000000011001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100110100111010010000001100

       - Right 32 Bits:            00100111100000000000011001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010100111001101110001111000011010011000101101011011   [Subkey: 13]
          - Input Half:       00100111100000000000011001000100
          - S-Box Result:     11101101001011111111000001110111   [per every group of 4-bits]
          - Split Into Two:   1110110100101111 [L] 1111000001110111 [R]
          - Swap Halves:      11110000011101111110110100101111
          - Bit Inversion:    00001111100010000001001011010000
          - Compressed Key:   10101011011110110011100110010111   [done by compression P-Box]
          - XOR with Key:     10100100111100110010101101000111

          - FUNCTION OUTPUT:  10100100111100110010101101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100110100111010010000001100

       - FUNCTION OUTPUT:          10100100111100110010101101000111

       - Left XOR FUNCTION OUTPUT: 01000000001000001000111101001011

       - Next Round Left 32 Bits:  00100111100000000000011001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000001000001000111101001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111100000000000011001000100

       - Right 32 Bits:            01000000001000001000111101001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100100011100001111001011001110100101001000001   [Subkey: 14]
          - Input Half:       01000000001000001000111101001011
          - S-Box Result:     01111111111011110010101101111000   [per every group of 4-bits]
          - Split Into Two:   0111111111101111 [L] 0010101101111000 [R]
          - Swap Halves:      00101011011110000111111111101111
          - Bit Inversion:    11010100100001111000000000010000
          - Compressed Key:   01111100101110110111111010000010   [done by compression P-Box]
          - XOR with Key:     10101000001111001111111010010010

          - FUNCTION OUTPUT:  10101000001111001111111010010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111100000000000011001000100

       - FUNCTION OUTPUT:          10101000001111001111111010010010

       - Left XOR FUNCTION OUTPUT: 10001111101111001111100011010110

       - Next Round Left 32 Bits:  01000000001000001000111101001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111101111001111100011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000001000001000111101001011

       - Right 32 Bits:            10001111101111001111100011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 15]
          - Input Half:       10001111101111001111100011010110
          - S-Box Result:     00101011100001011011001001100000   [per every group of 4-bits]
          - Split Into Two:   0010101110000101 [L] 1011001001100000 [R]
          - Swap Halves:      10110010011000000010101110000101
          - Bit Inversion:    01001101100111111101010001111010
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     10010110011001100001101011001111

          - FUNCTION OUTPUT:  10010110011001100001101011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000001000001000111101001011

       - FUNCTION OUTPUT:          10010110011001100001101011001111

       - Left XOR FUNCTION OUTPUT: 11010110010001101001010110000100

       - Next Round Left 32 Bits:  10001111101111001111100011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110010001101001010110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111101111001111100011010110

       - Right 32 Bits:            11010110010001101001010110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 16]
          - Input Half:       11010110010001101001010110000100
          - S-Box Result:     01100000011100000011100100100111   [per every group of 4-bits]
          - Split Into Two:   0110000001110000 [L] 0011100100100111 [R]
          - Swap Halves:      00111001001001110110000001110000
          - Bit Inversion:    11000110110110001001111110001111
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     10101011001000011100100110010110

          - FUNCTION OUTPUT:  10101011001000011100100110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111101111001111100011010110

       - FUNCTION OUTPUT:          10101011001000011100100110010110

       - Left XOR FUNCTION OUTPUT: 00100100100111010011000101000000

       - Next Round Left 32 Bits:  11010110010001101001010110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100100111010011000101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010010010011101001100010100000011010110010001101001010110000100

 > Processed Block:     0010010010011101001100010100000011010110010001101001010110000100



Plaintext Block: 4:                                      0010110011101000111000000110000011101010111000101011001001110101

!!!CBC: Previous Ciphertext:                             0010010010011101001100010100000011010110010001101001010110000100

!!!CBC: Current Block XOR with Previous Ciphertext:      0000100001110101110100010010000000111100101001000010011111110001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000011101011101000100100000

       - Right 32 Bits:            00111100101001000010011111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 1]
          - Input Half:       00111100101001000010011111110001
          - S-Box Result:     00010101010001111110110110111010   [per every group of 4-bits]
          - Split Into Two:   0001010101000111 [L] 1110110110111010 [R]
          - Swap Halves:      11101101101110100001010101000111
          - Bit Inversion:    00010010010001011110101010111000
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     11001001101111000010010000001101

          - FUNCTION OUTPUT:  11001001101111000010010000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000011101011101000100100000

       - FUNCTION OUTPUT:          11001001101111000010010000001101

       - Left XOR FUNCTION OUTPUT: 11000001110010011111010100101101

       - Next Round Left 32 Bits:  00111100101001000010011111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110010011111010100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100101001000010011111110001

       - Right 32 Bits:            11000001110010011111010100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 2]
          - Input Half:       11000001110010011111010100101101
          - S-Box Result:     01011010010100111011100111100110   [per every group of 4-bits]
          - Split Into Two:   0101101001010011 [L] 1011100111100110 [R]
          - Swap Halves:      10111001111001100101101001010011
          - Bit Inversion:    01000110000110011010010110101100
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     00101011111000001111001110110101

          - FUNCTION OUTPUT:  00101011111000001111001110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100101001000010011111110001

       - FUNCTION OUTPUT:          00101011111000001111001110110101

       - Left XOR FUNCTION OUTPUT: 00010111010001001101010001000100

       - Next Round Left 32 Bits:  11000001110010011111010100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111010001001101010001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001110010011111010100101101

       - Right 32 Bits:            00010111010001001101010001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100011110000110100110001011010110111110101010011100   [Subkey: 3]
          - Input Half:       00010111010001001101010001000100
          - S-Box Result:     10101101011101110110011101110111   [per every group of 4-bits]
          - Split Into Two:   1010110101110111 [L] 0110011101110111 [R]
          - Swap Halves:      01100111011101111010110101110111
          - Bit Inversion:    10011000100010000101001010001000
          - Compressed Key:   11011101111001000101111110101100   [done by compression P-Box]
          - XOR with Key:     01000101011011000000110100100100

          - FUNCTION OUTPUT:  01000101011011000000110100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001110010011111010100101101

       - FUNCTION OUTPUT:          01000101011011000000110100100100

       - Left XOR FUNCTION OUTPUT: 10000100101001011111100000001001

       - Next Round Left 32 Bits:  00010111010001001101010001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100101001011111100000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111010001001101010001000100

       - Right 32 Bits:            10000100101001011111100000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111000011110010110011101001010010000010101011000110010   [Subkey: 4]
          - Input Half:       10000100101001011111100000001001
          - S-Box Result:     00100111010010011011001011110011   [per every group of 4-bits]
          - Split Into Two:   0010011101001001 [L] 1011001011110011 [R]
          - Swap Halves:      10110010111100110010011101001001
          - Bit Inversion:    01001101000011001101100010110110
          - Compressed Key:   11001101110010000001101011000001   [done by compression P-Box]
          - XOR with Key:     10000000110001001100001001110111

          - FUNCTION OUTPUT:  10000000110001001100001001110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111010001001101010001000100

       - FUNCTION OUTPUT:          10000000110001001100001001110111

       - Left XOR FUNCTION OUTPUT: 10010111100000000001011000110011

       - Next Round Left 32 Bits:  10000100101001011111100000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111100000000001011000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100101001011111100000001001

       - Right 32 Bits:            10010111100000000001011000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000011010011000101101011011111010101001110011011100   [Subkey: 5]
          - Input Half:       10010111100000000001011000110011
          - S-Box Result:     00111101001011111010000000010001   [per every group of 4-bits]
          - Split Into Two:   0011110100101111 [L] 1010000000010001 [R]
          - Swap Halves:      10100000000100010011110100101111
          - Bit Inversion:    01011111111011101100001011010000
          - Compressed Key:   11000101001010101111010101101100   [done by compression P-Box]
          - XOR with Key:     10011010110001000011011110111100

          - FUNCTION OUTPUT:  10011010110001000011011110111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100101001011111100000001001

       - FUNCTION OUTPUT:          10011010110001000011011110111100

       - Left XOR FUNCTION OUTPUT: 00011110011000011100111110110101

       - Next Round Left 32 Bits:  10010111100000000001011000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110011000011100111110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111100000000001011000110011

       - Right 32 Bits:            00011110011000011100111110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001011001110100101001000001010101100011001000111000   [Subkey: 6]
          - Input Half:       00011110011000011100111110110101
          - S-Box Result:     10101100000010100101101110001001   [per every group of 4-bits]
          - Split Into Two:   1010110000001010 [L] 0101101110001001 [R]
          - Swap Halves:      01011011100010011010110000001010
          - Bit Inversion:    10100100011101100101001111110101
          - Compressed Key:   11000110011010000101010010000100   [done by compression P-Box]
          - XOR with Key:     01100010000111100000011101110001

          - FUNCTION OUTPUT:  01100010000111100000011101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111100000000001011000110011

       - FUNCTION OUTPUT:          01100010000111100000011101110001

       - Left XOR FUNCTION OUTPUT: 11110101100111100001000101000010

       - Next Round Left 32 Bits:  00011110011000011100111110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101100111100001000101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110011000011100111110110101

       - Right 32 Bits:            11110101100111100001000101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100010110101101111101010100111001101110001111000   [Subkey: 7]
          - Input Half:       11110101100111100001000101000010
          - S-Box Result:     10111001001111001010101001111110   [per every group of 4-bits]
          - Split Into Two:   1011100100111100 [L] 1010101001111110 [R]
          - Swap Halves:      10101010011111101011100100111100
          - Bit Inversion:    01010101100000010100011011000011
          - Compressed Key:   10000001011111011000001101000100   [done by compression P-Box]
          - XOR with Key:     11010100111111001100010110000111

          - FUNCTION OUTPUT:  11010100111111001100010110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110011000011100111110110101

       - FUNCTION OUTPUT:          11010100111111001100010110000111

       - Left XOR FUNCTION OUTPUT: 11001010100111010000101000110010

       - Next Round Left 32 Bits:  11110101100111100001000101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010100111010000101000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101100111100001000101000010

       - Right 32 Bits:            11001010100111010000101000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111010010100100000101010110001100100011100001111001   [Subkey: 8]
          - Input Half:       11001010100111010000101000110010
          - S-Box Result:     01010100001101101111010000011110   [per every group of 4-bits]
          - Split Into Two:   0101010000110110 [L] 1111010000011110 [R]
          - Swap Halves:      11110100000111100101010000110110
          - Bit Inversion:    00001011111000011010101111001001
          - Compressed Key:   00110001010010100010010000000110   [done by compression P-Box]
          - XOR with Key:     00111010101010111000111111001111

          - FUNCTION OUTPUT:  00111010101010111000111111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101100111100001000101000010

       - FUNCTION OUTPUT:          00111010101010111000111111001111

       - Left XOR FUNCTION OUTPUT: 11001111001101011001111010001101

       - Next Round Left 32 Bits:  11001010100111010000101000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111001101011001111010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010100111010000101000110010

       - Right 32 Bits:            11001111001101011001111010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011010110111110101010011100110111000111100001101001   [Subkey: 9]
          - Input Half:       11001111001101011001111010001101
          - S-Box Result:     01011011000110010011110000100110   [per every group of 4-bits]
          - Split Into Two:   0101101100011001 [L] 0011110000100110 [R]
          - Swap Halves:      00111100001001100101101100011001
          - Bit Inversion:    11000011110110011010010011100110
          - Compressed Key:   10101001111001101001001000000110   [done by compression P-Box]
          - XOR with Key:     01101010001111110011011011100000

          - FUNCTION OUTPUT:  01101010001111110011011011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010100111010000101000110010

       - FUNCTION OUTPUT:          01101010001111110011011011100000

       - Left XOR FUNCTION OUTPUT: 10100000101000100011110011010010

       - Next Round Left 32 Bits:  11001111001101011001111010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000101000100011110011010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111001101011001111010001101

       - Right 32 Bits:            10100000101000100011110011010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010000010101011000110010001110000111100101100111   [Subkey: 10]
          - Input Half:       10100000101000100011110011010010
          - S-Box Result:     01001111010011100001010101101110   [per every group of 4-bits]
          - Split Into Two:   0100111101001110 [L] 0001010101101110 [R]
          - Swap Halves:      00010101011011100100111101001110
          - Bit Inversion:    11101010100100011011000010110001
          - Compressed Key:   10100000010100110010001000011011   [done by compression P-Box]
          - XOR with Key:     01001010110000101001001010101010

          - FUNCTION OUTPUT:  01001010110000101001001010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111001101011001111010001101

       - FUNCTION OUTPUT:          01001010110000101001001010101010

       - Left XOR FUNCTION OUTPUT: 10000101111101110000110000100111

       - Next Round Left 32 Bits:  10100000101000100011110011010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101111101110000110000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000101000100011110011010010

       - Right 32 Bits:            10000101111101110000110000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011111010101001110011011100011110000110100110001011   [Subkey: 11]
          - Input Half:       10000101111101110000110000100111
          - S-Box Result:     00101001101111011111010111101101   [per every group of 4-bits]
          - Split Into Two:   0010100110111101 [L] 1111010111101101 [R]
          - Swap Halves:      11110101111011010010100110111101
          - Bit Inversion:    00001010000100101101011001000010
          - Compressed Key:   11100101001111100011001000110111   [done by compression P-Box]
          - XOR with Key:     11101111001011001110010001110101

          - FUNCTION OUTPUT:  11101111001011001110010001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000101000100011110011010010

       - FUNCTION OUTPUT:          11101111001011001110010001110101

       - Left XOR FUNCTION OUTPUT: 01001111100011101101100010100111

       - Next Round Left 32 Bits:  10000101111101110000110000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111100011101101100010100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101111101110000110000100111

       - Right 32 Bits:            01001111100011101101100010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001010101100011001000111000011110010110011101001010   [Subkey: 12]
          - Input Half:       01001111100011101101100010100111
          - S-Box Result:     01111011001011000110001001001101   [per every group of 4-bits]
          - Split Into Two:   0111101100101100 [L] 0110001001001101 [R]
          - Swap Halves:      01100010010011010111101100101100
          - Bit Inversion:    10011101101100101000010011010011
          - Compressed Key:   00001010100100110011101011010101   [done by compression P-Box]
          - XOR with Key:     10010111001000011011111000000110

          - FUNCTION OUTPUT:  10010111001000011011111000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101111101110000110000100111

       - FUNCTION OUTPUT:          10010111001000011011111000000110

       - Left XOR FUNCTION OUTPUT: 00010010110101101011001000100001

       - Next Round Left 32 Bits:  01001111100011101101100010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010110101101011001000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111100011101101100010100111

       - Right 32 Bits:            00010010110101101011001000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010100111001101110001111000011010011000101101011011   [Subkey: 13]
          - Input Half:       00010010110101101011001000100001
          - S-Box Result:     10101110011000001000111011101010   [per every group of 4-bits]
          - Split Into Two:   1010111001100000 [L] 1000111011101010 [R]
          - Swap Halves:      10001110111010101010111001100000
          - Bit Inversion:    01110001000101010101000110011111
          - Compressed Key:   10101011011110110011100110010111   [done by compression P-Box]
          - XOR with Key:     11011010011011100110100000001000

          - FUNCTION OUTPUT:  11011010011011100110100000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111100011101101100010100111

       - FUNCTION OUTPUT:          11011010011011100110100000001000

       - Left XOR FUNCTION OUTPUT: 10010101111000001011000010101111

       - Next Round Left 32 Bits:  00010010110101101011001000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101111000001011000010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010110101101011001000100001

       - Right 32 Bits:            10010101111000001011000010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100100011100001111001011001110100101001000001   [Subkey: 14]
          - Input Half:       10010101111000001011000010101111
          - S-Box Result:     00111001110011111000111101001011   [per every group of 4-bits]
          - Split Into Two:   0011100111001111 [L] 1000111101001011 [R]
          - Swap Halves:      10001111010010110011100111001111
          - Bit Inversion:    01110000101101001100011000110000
          - Compressed Key:   01111100101110110111111010000010   [done by compression P-Box]
          - XOR with Key:     00001100000011111011100010110010

          - FUNCTION OUTPUT:  00001100000011111011100010110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010110101101011001000100001

       - FUNCTION OUTPUT:          00001100000011111011100010110010

       - Left XOR FUNCTION OUTPUT: 00011110110110010000101010010011

       - Next Round Left 32 Bits:  10010101111000001011000010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110110110010000101010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101111000001011000010101111

       - Right 32 Bits:            00011110110110010000101010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 15]
          - Input Half:       00011110110110010000101010010011
          - S-Box Result:     10101100011000111111010000110001   [per every group of 4-bits]
          - Split Into Two:   1010110001100011 [L] 1111010000110001 [R]
          - Swap Halves:      11110100001100011010110001100011
          - Bit Inversion:    00001011110011100101001110011100
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     11010000001101111001110100101001

          - FUNCTION OUTPUT:  11010000001101111001110100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101111000001011000010101111

       - FUNCTION OUTPUT:          11010000001101111001110100101001

       - Left XOR FUNCTION OUTPUT: 01000101110101110010110110000110

       - Next Round Left 32 Bits:  00011110110110010000101010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101110101110010110110000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110110110010000101010010011

       - Right 32 Bits:            01000101110101110010110110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 16]
          - Input Half:       01000101110101110010110110000110
          - S-Box Result:     01111001011011011110011000100000   [per every group of 4-bits]
          - Split Into Two:   0111100101101101 [L] 1110011000100000 [R]
          - Swap Halves:      11100110001000000111100101101101
          - Bit Inversion:    00011001110111111000011010010010
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     01110100001001101101000010001011

          - FUNCTION OUTPUT:  01110100001001101101000010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110110110010000101010010011

       - FUNCTION OUTPUT:          01110100001001101101000010001011

       - Left XOR FUNCTION OUTPUT: 01101010111111111101101000011000

       - Next Round Left 32 Bits:  01000101110101110010110110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010111111111101101000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110101011111111110110100001100001000101110101110010110110000110

 > Processed Block:     0110101011111111110110100001100001000101110101110010110110000110



Plaintext Block: 5:                                      1110000000000101010100101001010100010101100110110110000111110011

!!!CBC: Previous Ciphertext:                             0110101011111111110110100001100001000101110101110010110110000110

!!!CBC: Current Block XOR with Previous Ciphertext:      1000101011111010100010001000110101010000010011000100110001110101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010111110101000100010001101

       - Right 32 Bits:            01010000010011000100110001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 1]
          - Input Half:       01010000010011000100110001110101
          - S-Box Result:     10011111011101010111010111011001   [per every group of 4-bits]
          - Split Into Two:   1001111101110101 [L] 0111010111011001 [R]
          - Swap Halves:      01110101110110011001111101110101
          - Bit Inversion:    10001010001001100110000010001010
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     01010001110111111010111000111111

          - FUNCTION OUTPUT:  01010001110111111010111000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010111110101000100010001101

       - FUNCTION OUTPUT:          01010001110111111010111000111111

       - Left XOR FUNCTION OUTPUT: 11011011001001010010011010110010

       - Next Round Left 32 Bits:  01010000010011000100110001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011001001010010011010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000010011000100110001110101

       - Right 32 Bits:            11011011001001010010011010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 2]
          - Input Half:       11011011001001010010011010110010
          - S-Box Result:     01101000111010011110000010001110   [per every group of 4-bits]
          - Split Into Two:   0110100011101001 [L] 1110000010001110 [R]
          - Swap Halves:      11100000100011100110100011101001
          - Bit Inversion:    00011111011100011001011100010110
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     01110010100010001100000100001111

          - FUNCTION OUTPUT:  01110010100010001100000100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000010011000100110001110101

       - FUNCTION OUTPUT:          01110010100010001100000100001111

       - Left XOR FUNCTION OUTPUT: 00100010110001001000110101111010

       - Next Round Left 32 Bits:  11011011001001010010011010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010110001001000110101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011001001010010011010110010

       - Right 32 Bits:            00100010110001001000110101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100011110000110100110001011010110111110101010011100   [Subkey: 3]
          - Input Half:       00100010110001001000110101111010
          - S-Box Result:     11101110010101110010011011010100   [per every group of 4-bits]
          - Split Into Two:   1110111001010111 [L] 0010011011010100 [R]
          - Swap Halves:      00100110110101001110111001010111
          - Bit Inversion:    11011001001010110001000110101000
          - Compressed Key:   11011101111001000101111110101100   [done by compression P-Box]
          - XOR with Key:     00000100110011110100111000000100

          - FUNCTION OUTPUT:  00000100110011110100111000000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011001001010010011010110010

       - FUNCTION OUTPUT:          00000100110011110100111000000100

       - Left XOR FUNCTION OUTPUT: 11011111111010100110100010110110

       - Next Round Left 32 Bits:  00100010110001001000110101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111111010100110100010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010110001001000110101111010

       - Right 32 Bits:            11011111111010100110100010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111000011110010110011101001010010000010101011000110010   [Subkey: 4]
          - Input Half:       11011111111010100110100010110110
          - S-Box Result:     01101011110001000000001010000000   [per every group of 4-bits]
          - Split Into Two:   0110101111000100 [L] 0000001010000000 [R]
          - Swap Halves:      00000010100000000110101111000100
          - Bit Inversion:    11111101011111111001010000111011
          - Compressed Key:   11001101110010000001101011000001   [done by compression P-Box]
          - XOR with Key:     00110000101101111000111011111010

          - FUNCTION OUTPUT:  00110000101101111000111011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010110001001000110101111010

       - FUNCTION OUTPUT:          00110000101101111000111011111010

       - Left XOR FUNCTION OUTPUT: 00010010011100110000001110000000

       - Next Round Left 32 Bits:  11011111111010100110100010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010011100110000001110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111111010100110100010110110

       - Right 32 Bits:            00010010011100110000001110000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000011010011000101101011011111010101001110011011100   [Subkey: 5]
          - Input Half:       00010010011100110000001110000000
          - S-Box Result:     10101110110100011111000100101111   [per every group of 4-bits]
          - Split Into Two:   1010111011010001 [L] 1111000100101111 [R]
          - Swap Halves:      11110001001011111010111011010001
          - Bit Inversion:    00001110110100000101000100101110
          - Compressed Key:   11000101001010101111010101101100   [done by compression P-Box]
          - XOR with Key:     11001011111110101010010001000010

          - FUNCTION OUTPUT:  11001011111110101010010001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111111010100110100010110110

       - FUNCTION OUTPUT:          11001011111110101010010001000010

       - Left XOR FUNCTION OUTPUT: 00010100000100001100110011110100

       - Next Round Left 32 Bits:  00010010011100110000001110000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100000100001100110011110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010011100110000001110000000

       - Right 32 Bits:            00010100000100001100110011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001011001110100101001000001010101100011001000111000   [Subkey: 6]
          - Input Half:       00010100000100001100110011110100
          - S-Box Result:     10100111101011110101010110110111   [per every group of 4-bits]
          - Split Into Two:   1010011110101111 [L] 0101010110110111 [R]
          - Swap Halves:      01010101101101111010011110101111
          - Bit Inversion:    10101010010010000101100001010000
          - Compressed Key:   11000110011010000101010010000100   [done by compression P-Box]
          - XOR with Key:     01101100001000000000110011010100

          - FUNCTION OUTPUT:  01101100001000000000110011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010011100110000001110000000

       - FUNCTION OUTPUT:          01101100001000000000110011010100

       - Left XOR FUNCTION OUTPUT: 01111110010100110000111101010100

       - Next Round Left 32 Bits:  00010100000100001100110011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110010100110000111101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100000100001100110011110100

       - Right 32 Bits:            01111110010100110000111101010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100010110101101111101010100111001101110001111000   [Subkey: 7]
          - Input Half:       01111110010100110000111101010100
          - S-Box Result:     11011100100100011111101110010111   [per every group of 4-bits]
          - Split Into Two:   1101110010010001 [L] 1111101110010111 [R]
          - Swap Halves:      11111011100101111101110010010001
          - Bit Inversion:    00000100011010000010001101101110
          - Compressed Key:   10000001011111011000001101000100   [done by compression P-Box]
          - XOR with Key:     10000101000101011010000000101010

          - FUNCTION OUTPUT:  10000101000101011010000000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100000100001100110011110100

       - FUNCTION OUTPUT:          10000101000101011010000000101010

       - Left XOR FUNCTION OUTPUT: 10010001000001010110110011011110

       - Next Round Left 32 Bits:  01111110010100110000111101010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001000001010110110011011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110010100110000111101010100

       - Right 32 Bits:            10010001000001010110110011011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111010010100100000101010110001100100011100001111001   [Subkey: 8]
          - Input Half:       10010001000001010110110011011110
          - S-Box Result:     00111010111110010000010101101100   [per every group of 4-bits]
          - Split Into Two:   0011101011111001 [L] 0000010101101100 [R]
          - Swap Halves:      00000101011011000011101011111001
          - Bit Inversion:    11111010100100111100010100000110
          - Compressed Key:   00110001010010100010010000000110   [done by compression P-Box]
          - XOR with Key:     11001011110110011110000100000000

          - FUNCTION OUTPUT:  11001011110110011110000100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110010100110000111101010100

       - FUNCTION OUTPUT:          11001011110110011110000100000000

       - Left XOR FUNCTION OUTPUT: 10110101100010101110111001010100

       - Next Round Left 32 Bits:  10010001000001010110110011011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101100010101110111001010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001000001010110110011011110

       - Right 32 Bits:            10110101100010101110111001010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011010110111110101010011100110111000111100001101001   [Subkey: 9]
          - Input Half:       10110101100010101110111001010100
          - S-Box Result:     10001001001001001100110010010111   [per every group of 4-bits]
          - Split Into Two:   1000100100100100 [L] 1100110010010111 [R]
          - Swap Halves:      11001100100101111000100100100100
          - Bit Inversion:    00110011011010000111011011011011
          - Compressed Key:   10101001111001101001001000000110   [done by compression P-Box]
          - XOR with Key:     10011010100011101110010011011101

          - FUNCTION OUTPUT:  10011010100011101110010011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001000001010110110011011110

       - FUNCTION OUTPUT:          10011010100011101110010011011101

       - Left XOR FUNCTION OUTPUT: 00001011100010111000100000000011

       - Next Round Left 32 Bits:  10110101100010101110111001010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001011100010111000100000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101100010101110111001010100

       - Right 32 Bits:            00001011100010111000100000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010000010101011000110010001110000111100101100111   [Subkey: 10]
          - Input Half:       00001011100010111000100000000011
          - S-Box Result:     11111000001010000010001011110001   [per every group of 4-bits]
          - Split Into Two:   1111100000101000 [L] 0010001011110001 [R]
          - Swap Halves:      00100010111100011111100000101000
          - Bit Inversion:    11011101000011100000011111010111
          - Compressed Key:   10100000010100110010001000011011   [done by compression P-Box]
          - XOR with Key:     01111101010111010010010111001100

          - FUNCTION OUTPUT:  01111101010111010010010111001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101100010101110111001010100

       - FUNCTION OUTPUT:          01111101010111010010010111001100

       - Left XOR FUNCTION OUTPUT: 11001000110101111100101110011000

       - Next Round Left 32 Bits:  00001011100010111000100000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000110101111100101110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001011100010111000100000000011

       - Right 32 Bits:            11001000110101111100101110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011111010101001110011011100011110000110100110001011   [Subkey: 11]
          - Input Half:       11001000110101111100101110011000
          - S-Box Result:     01010010011011010101100000110010   [per every group of 4-bits]
          - Split Into Two:   0101001001101101 [L] 0101100000110010 [R]
          - Swap Halves:      01011000001100100101001001101101
          - Bit Inversion:    10100111110011011010110110010010
          - Compressed Key:   11100101001111100011001000110111   [done by compression P-Box]
          - XOR with Key:     01000010111100111001111110100101

          - FUNCTION OUTPUT:  01000010111100111001111110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001011100010111000100000000011

       - FUNCTION OUTPUT:          01000010111100111001111110100101

       - Left XOR FUNCTION OUTPUT: 01001001011110000001011110100110

       - Next Round Left 32 Bits:  11001000110101111100101110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001011110000001011110100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000110101111100101110011000

       - Right 32 Bits:            01001001011110000001011110100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001010101100011001000111000011110010110011101001010   [Subkey: 12]
          - Input Half:       01001001011110000001011110100110
          - S-Box Result:     01110011110100101010110101000000   [per every group of 4-bits]
          - Split Into Two:   0111001111010010 [L] 1010110101000000 [R]
          - Swap Halves:      10101101010000000111001111010010
          - Bit Inversion:    01010010101111111000110000101101
          - Compressed Key:   00001010100100110011101011010101   [done by compression P-Box]
          - XOR with Key:     01011000001011001011011011111000

          - FUNCTION OUTPUT:  01011000001011001011011011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000110101111100101110011000

       - FUNCTION OUTPUT:          01011000001011001011011011111000

       - Left XOR FUNCTION OUTPUT: 10010000111110110111110101100000

       - Next Round Left 32 Bits:  01001001011110000001011110100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000111110110111110101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001011110000001011110100110

       - Right 32 Bits:            10010000111110110111110101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010100111001101110001111000011010011000101101011011   [Subkey: 13]
          - Input Half:       10010000111110110111110101100000
          - S-Box Result:     00111111101110001101011000001111   [per every group of 4-bits]
          - Split Into Two:   0011111110111000 [L] 1101011000001111 [R]
          - Swap Halves:      11010110000011110011111110111000
          - Bit Inversion:    00101001111100001100000001000111
          - Compressed Key:   10101011011110110011100110010111   [done by compression P-Box]
          - XOR with Key:     10000010100010111111100111010000

          - FUNCTION OUTPUT:  10000010100010111111100111010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001011110000001011110100110

       - FUNCTION OUTPUT:          10000010100010111111100111010000

       - Left XOR FUNCTION OUTPUT: 11001011111100111110111001110110

       - Next Round Left 32 Bits:  10010000111110110111110101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011111100111110111001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000111110110111110101100000

       - Right 32 Bits:            11001011111100111110111001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100100011100001111001011001110100101001000001   [Subkey: 14]
          - Input Half:       11001011111100111110111001110110
          - S-Box Result:     01011000101100011100110011010000   [per every group of 4-bits]
          - Split Into Two:   0101100010110001 [L] 1100110011010000 [R]
          - Swap Halves:      11001100110100000101100010110001
          - Bit Inversion:    00110011001011111010011101001110
          - Compressed Key:   01111100101110110111111010000010   [done by compression P-Box]
          - XOR with Key:     01001111100101001101100111001100

          - FUNCTION OUTPUT:  01001111100101001101100111001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000111110110111110101100000

       - FUNCTION OUTPUT:          01001111100101001101100111001100

       - Left XOR FUNCTION OUTPUT: 11011111011011111010010010101100

       - Next Round Left 32 Bits:  11001011111100111110111001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111011011111010010010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011111100111110111001110110

       - Right 32 Bits:            11011111011011111010010010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 15]
          - Input Half:       11011111011011111010010010101100
          - S-Box Result:     01101011000010110100011101000101   [per every group of 4-bits]
          - Split Into Two:   0110101100001011 [L] 0100011101000101 [R]
          - Swap Halves:      01000111010001010110101100001011
          - Bit Inversion:    10111000101110101001010011110100
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     01100011010000110101101001000001

          - FUNCTION OUTPUT:  01100011010000110101101001000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011111100111110111001110110

       - FUNCTION OUTPUT:          01100011010000110101101001000001

       - Left XOR FUNCTION OUTPUT: 10101000101100001011010000110111

       - Next Round Left 32 Bits:  11011111011011111010010010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000101100001011010000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111011011111010010010101100

       - Right 32 Bits:            10101000101100001011010000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 16]
          - Input Half:       10101000101100001011010000110111
          - S-Box Result:     01000010100011111000011100011101   [per every group of 4-bits]
          - Split Into Two:   0100001010001111 [L] 1000011100011101 [R]
          - Swap Halves:      10000111000111010100001010001111
          - Bit Inversion:    01111000111000101011110101110000
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     00010101000110111110101101101001

          - FUNCTION OUTPUT:  00010101000110111110101101101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111011011111010010010101100

       - FUNCTION OUTPUT:          00010101000110111110101101101001

       - Left XOR FUNCTION OUTPUT: 11001010011101000100111111000101

       - Next Round Left 32 Bits:  10101000101100001011010000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010011101000100111111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100101001110100010011111100010110101000101100001011010000110111

 > Processed Block:     1100101001110100010011111100010110101000101100001011010000110111



Plaintext Block: 6:                                      0101101001100111000111000010000101110001101111001110010101101011

!!!CBC: Previous Ciphertext:                             1100101001110100010011111100010110101000101100001011010000110111

!!!CBC: Current Block XOR with Previous Ciphertext:      1001000000010011010100111110010011011001000011000101000101011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000000100110101001111100100

       - Right 32 Bits:            11011001000011000101000101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 1]
          - Input Half:       11011001000011000101000101011100
          - S-Box Result:     01100011111101011001101010010101   [per every group of 4-bits]
          - Split Into Two:   0110001111110101 [L] 1001101010010101 [R]
          - Swap Halves:      10011010100101010110001111110101
          - Bit Inversion:    01100101011010101001110000001010
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     10111110100100110101001010111111

          - FUNCTION OUTPUT:  10111110100100110101001010111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000000100110101001111100100

       - FUNCTION OUTPUT:          10111110100100110101001010111111

       - Left XOR FUNCTION OUTPUT: 00101110100000000000000101011011

       - Next Round Left 32 Bits:  11011001000011000101000101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110100000000000000101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001000011000101000101011100

       - Right 32 Bits:            00101110100000000000000101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 2]
          - Input Half:       00101110100000000000000101011011
          - S-Box Result:     11101100001011111111101010011000   [per every group of 4-bits]
          - Split Into Two:   1110110000101111 [L] 1111101010011000 [R]
          - Swap Halves:      11111010100110001110110000101111
          - Bit Inversion:    00000101011001110001001111010000
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     01101000100111100100010111001001

          - FUNCTION OUTPUT:  01101000100111100100010111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001000011000101000101011100

       - FUNCTION OUTPUT:          01101000100111100100010111001001

       - Left XOR FUNCTION OUTPUT: 10110001100100100001010010010101

       - Next Round Left 32 Bits:  00101110100000000000000101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001100100100001010010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110100000000000000101011011

       - Right 32 Bits:            10110001100100100001010010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011100011110000110100110001011010110111110101010011100   [Subkey: 3]
          - Input Half:       10110001100100100001010010010101
          - S-Box Result:     10001010001111101010011100111001   [per every group of 4-bits]
          - Split Into Two:   1000101000111110 [L] 1010011100111001 [R]
          - Swap Halves:      10100111001110011000101000111110
          - Bit Inversion:    01011000110001100111010111000001
          - Compressed Key:   11011101111001000101111110101100   [done by compression P-Box]
          - XOR with Key:     10000101001000100010101001101101

          - FUNCTION OUTPUT:  10000101001000100010101001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110100000000000000101011011

       - FUNCTION OUTPUT:          10000101001000100010101001101101

       - Left XOR FUNCTION OUTPUT: 10101011101000100010101100110110

       - Next Round Left 32 Bits:  10110001100100100001010010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011101000100010101100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001100100100001010010010101

       - Right 32 Bits:            10101011101000100010101100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111000011110010110011101001010010000010101011000110010   [Subkey: 4]
          - Input Half:       10101011101000100010101100110110
          - S-Box Result:     01001000010011101110100000010000   [per every group of 4-bits]
          - Split Into Two:   0100100001001110 [L] 1110100000010000 [R]
          - Swap Halves:      11101000000100000100100001001110
          - Bit Inversion:    00010111111011111011011110110001
          - Compressed Key:   11001101110010000001101011000001   [done by compression P-Box]
          - XOR with Key:     11011010001001111010110101110000

          - FUNCTION OUTPUT:  11011010001001111010110101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001100100100001010010010101

       - FUNCTION OUTPUT:          11011010001001111010110101110000

       - Left XOR FUNCTION OUTPUT: 01101011101101011011100111100101

       - Next Round Left 32 Bits:  10101011101000100010101100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011101101011011100111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011101000100010101100110110

       - Right 32 Bits:            01101011101101011011100111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111000011010011000101101011011111010101001110011011100   [Subkey: 5]
          - Input Half:       01101011101101011011100111100101
          - S-Box Result:     00001000100010011000001111001001   [per every group of 4-bits]
          - Split Into Two:   0000100010001001 [L] 1000001111001001 [R]
          - Swap Halves:      10000011110010010000100010001001
          - Bit Inversion:    01111100001101101111011101110110
          - Compressed Key:   11000101001010101111010101101100   [done by compression P-Box]
          - XOR with Key:     10111001000111000000001000011010

          - FUNCTION OUTPUT:  10111001000111000000001000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011101000100010101100110110

       - FUNCTION OUTPUT:          10111001000111000000001000011010

       - Left XOR FUNCTION OUTPUT: 00010010101111100010100100101100

       - Next Round Left 32 Bits:  01101011101101011011100111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010101111100010100100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011101101011011100111100101

       - Right 32 Bits:            00010010101111100010100100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001011001110100101001000001010101100011001000111000   [Subkey: 6]
          - Input Half:       00010010101111100010100100101100
          - S-Box Result:     10101110100011001110001111100101   [per every group of 4-bits]
          - Split Into Two:   1010111010001100 [L] 1110001111100101 [R]
          - Swap Halves:      11100011111001011010111010001100
          - Bit Inversion:    00011100000110100101000101110011
          - Compressed Key:   11000110011010000101010010000100   [done by compression P-Box]
          - XOR with Key:     11011010011100100000010111110111

          - FUNCTION OUTPUT:  11011010011100100000010111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011101101011011100111100101

       - FUNCTION OUTPUT:          11011010011100100000010111110111

       - Left XOR FUNCTION OUTPUT: 10110001110001111011110000010010

       - Next Round Left 32 Bits:  00010010101111100010100100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001110001111011110000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101111100010100100101100

       - Right 32 Bits:            10110001110001111011110000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001100010110101101111101010100111001101110001111000   [Subkey: 7]
          - Input Half:       10110001110001111011110000010010
          - S-Box Result:     10001010010111011000010110101110   [per every group of 4-bits]
          - Split Into Two:   1000101001011101 [L] 1000010110101110 [R]
          - Swap Halves:      10000101101011101000101001011101
          - Bit Inversion:    01111010010100010111010110100010
          - Compressed Key:   10000001011111011000001101000100   [done by compression P-Box]
          - XOR with Key:     11111011001011001111011011100110

          - FUNCTION OUTPUT:  11111011001011001111011011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101111100010100100101100

       - FUNCTION OUTPUT:          11111011001011001111011011100110

       - Left XOR FUNCTION OUTPUT: 11101001100100101101111111001010

       - Next Round Left 32 Bits:  10110001110001111011110000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001100100101101111111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001110001111011110000010010

       - Right 32 Bits:            11101001100100101101111111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111010010100100000101010110001100100011100001111001   [Subkey: 8]
          - Input Half:       11101001100100101101111111001010
          - S-Box Result:     11000011001111100110101101010100   [per every group of 4-bits]
          - Split Into Two:   1100001100111110 [L] 0110101101010100 [R]
          - Swap Halves:      01101011010101001100001100111110
          - Bit Inversion:    10010100101010110011110011000001
          - Compressed Key:   00110001010010100010010000000110   [done by compression P-Box]
          - XOR with Key:     10100101111000010001100011000111

          - FUNCTION OUTPUT:  10100101111000010001100011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001110001111011110000010010

       - FUNCTION OUTPUT:          10100101111000010001100011000111

       - Left XOR FUNCTION OUTPUT: 00010100001001101010010011010101

       - Next Round Left 32 Bits:  11101001100100101101111111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100001001101010010011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001100100101101111111001010

       - Right 32 Bits:            00010100001001101010010011010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001011010110111110101010011100110111000111100001101001   [Subkey: 9]
          - Input Half:       00010100001001101010010011010101
          - S-Box Result:     10100111111000000100011101101001   [per every group of 4-bits]
          - Split Into Two:   1010011111100000 [L] 0100011101101001 [R]
          - Swap Halves:      01000111011010011010011111100000
          - Bit Inversion:    10111000100101100101100000011111
          - Compressed Key:   10101001111001101001001000000110   [done by compression P-Box]
          - XOR with Key:     00010001011100001100101000011001

          - FUNCTION OUTPUT:  00010001011100001100101000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001100100101101111111001010

       - FUNCTION OUTPUT:          00010001011100001100101000011001

       - Left XOR FUNCTION OUTPUT: 11111000111000100001010111010011

       - Next Round Left 32 Bits:  00010100001001101010010011010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000111000100001010111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100001001101010010011010101

       - Right 32 Bits:            11111000111000100001010111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001010010000010101011000110010001110000111100101100111   [Subkey: 10]
          - Input Half:       11111000111000100001010111010011
          - S-Box Result:     10110010110011101010100101100001   [per every group of 4-bits]
          - Split Into Two:   1011001011001110 [L] 1010100101100001 [R]
          - Swap Halves:      10101001011000011011001011001110
          - Bit Inversion:    01010110100111100100110100110001
          - Compressed Key:   10100000010100110010001000011011   [done by compression P-Box]
          - XOR with Key:     11110110110011010110111100101010

          - FUNCTION OUTPUT:  11110110110011010110111100101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100001001101010010011010101

       - FUNCTION OUTPUT:          11110110110011010110111100101010

       - Left XOR FUNCTION OUTPUT: 11100010111010111100101111111111

       - Next Round Left 32 Bits:  11111000111000100001010111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111010111100101111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000111000100001010111010011

       - Right 32 Bits:            11100010111010111100101111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011111010101001110011011100011110000110100110001011   [Subkey: 11]
          - Input Half:       11100010111010111100101111111111
          - S-Box Result:     11001110110010000101100010111011   [per every group of 4-bits]
          - Split Into Two:   1100111011001000 [L] 0101100010111011 [R]
          - Swap Halves:      01011000101110111100111011001000
          - Bit Inversion:    10100111010001000011000100110111
          - Compressed Key:   11100101001111100011001000110111   [done by compression P-Box]
          - XOR with Key:     01000010011110100000001100000000

          - FUNCTION OUTPUT:  01000010011110100000001100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000111000100001010111010011

       - FUNCTION OUTPUT:          01000010011110100000001100000000

       - Left XOR FUNCTION OUTPUT: 10111010100110000001011011010011

       - Next Round Left 32 Bits:  11100010111010111100101111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010100110000001011011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111010111100101111111111

       - Right 32 Bits:            10111010100110000001011011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000001010101100011001000111000011110010110011101001010   [Subkey: 12]
          - Input Half:       10111010100110000001011011010011
          - S-Box Result:     10000100001100101010000001100001   [per every group of 4-bits]
          - Split Into Two:   1000010000110010 [L] 1010000001100001 [R]
          - Swap Halves:      10100000011000011000010000110010
          - Bit Inversion:    01011111100111100111101111001101
          - Compressed Key:   00001010100100110011101011010101   [done by compression P-Box]
          - XOR with Key:     01010101000011010100000100011000

          - FUNCTION OUTPUT:  01010101000011010100000100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111010111100101111111111

       - FUNCTION OUTPUT:          01010101000011010100000100011000

       - Left XOR FUNCTION OUTPUT: 10110111111001101000101011100111

       - Next Round Left 32 Bits:  10111010100110000001011011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111111001101000101011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010100110000001011011010011

       - Right 32 Bits:            10110111111001101000101011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010100111001101110001111000011010011000101101011011   [Subkey: 13]
          - Input Half:       10110111111001101000101011100111
          - S-Box Result:     10001101110000000010010011001101   [per every group of 4-bits]
          - Split Into Two:   1000110111000000 [L] 0010010011001101 [R]
          - Swap Halves:      00100100110011011000110111000000
          - Bit Inversion:    11011011001100100111001000111111
          - Compressed Key:   10101011011110110011100110010111   [done by compression P-Box]
          - XOR with Key:     01110000010010010100101110101000

          - FUNCTION OUTPUT:  01110000010010010100101110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010100110000001011011010011

       - FUNCTION OUTPUT:          01110000010010010100101110101000

       - Left XOR FUNCTION OUTPUT: 11001010110100010101110101111011

       - Next Round Left 32 Bits:  10110111111001101000101011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010110100010101110101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111111001101000101011100111

       - Right 32 Bits:            11001010110100010101110101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100100011100001111001011001110100101001000001   [Subkey: 14]
          - Input Half:       11001010110100010101110101111011
          - S-Box Result:     01010100011010101001011011011000   [per every group of 4-bits]
          - Split Into Two:   0101010001101010 [L] 1001011011011000 [R]
          - Swap Halves:      10010110110110000101010001101010
          - Bit Inversion:    01101001001001111010101110010101
          - Compressed Key:   01111100101110110111111010000010   [done by compression P-Box]
          - XOR with Key:     00010101100111001101010100010111

          - FUNCTION OUTPUT:  00010101100111001101010100010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111111001101000101011100111

       - FUNCTION OUTPUT:          00010101100111001101010100010111

       - Left XOR FUNCTION OUTPUT: 10100010011110100101111111110000

       - Next Round Left 32 Bits:  11001010110100010101110101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010011110100101111111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010110100010101110101111011

       - Right 32 Bits:            10100010011110100101111111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011100110111000111100001101001100010110101101111101010   [Subkey: 15]
          - Input Half:       10100010011110100101111111110000
          - S-Box Result:     01001110110101001001101110111111   [per every group of 4-bits]
          - Split Into Two:   0100111011010100 [L] 1001101110111111 [R]
          - Swap Halves:      10011011101111110100111011010100
          - Bit Inversion:    01100100010000001011000100101011
          - Compressed Key:   11011011111110011100111010110101   [done by compression P-Box]
          - XOR with Key:     10111111101110010111111110011110

          - FUNCTION OUTPUT:  10111111101110010111111110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010110100010101110101111011

       - FUNCTION OUTPUT:          10111111101110010111111110011110

       - Left XOR FUNCTION OUTPUT: 01110101011010000010001011100101

       - Next Round Left 32 Bits:  10100010011110100101111111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101011010000010001011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010011110100101111111110000

       - Right 32 Bits:            01110101011010000010001011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010001110000111100101100111010010100100000101010110   [Subkey: 16]
          - Input Half:       01110101011010000010001011100101
          - S-Box Result:     11011001000000101110111011001001   [per every group of 4-bits]
          - Split Into Two:   1101100100000010 [L] 1110111011001001 [R]
          - Swap Halves:      11101110110010011101100100000010
          - Bit Inversion:    00010001001101100010011011111101
          - Compressed Key:   01101101111110010101011000011001   [done by compression P-Box]
          - XOR with Key:     01111100110011110111000011100100

          - FUNCTION OUTPUT:  01111100110011110111000011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010011110100101111111110000

       - FUNCTION OUTPUT:          01111100110011110111000011100100

       - Left XOR FUNCTION OUTPUT: 11011110101101010010111100010100

       - Next Round Left 32 Bits:  01110101011010000010001011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011110101101010010111100010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101111010110101001011110001010001110101011010000010001011100101

 > Processed Block:     1101111010110101001011110001010001110101011010000010001011100101


FINAL PROCESSED DATA BLOCKS: 1011110000000111001011101010011001010110100101111110100110110011,1100001011010011001000111101111010100111100110010001100110100100,0010010010011101001100010100000011010110010001101001010110000100,0110101011111111110110100001100001000101110101110010110110000110,1100101001110100010011111100010110101000101100001011010000110111,1101111010110101001011110001010001110101011010000010001011100101,

BLOCKS IN ASCII:             º.¶V?È≥¬”#ﬁß?§$?1@÷F??jˇ⁄E◊-? tO≈®∞¥7ﬁµ/uh"Â

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: yQeHQPo
In Binary:  01111001010100010110010101001000010100010101000001101111

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01101010111010011010101101111010111010101111100100001000
Subkey 2  : 01010001011001010100100001010001010100000110111101111001
Subkey 3  : 11101001101010110111101011101010111110010000100001101010
Subkey 4  : 01100101010010000101000101010000011011110111100101010001
Subkey 5  : 10101011011110101110101011111001000010000110101011101001
Subkey 6  : 01001000010100010101000001101111011110010101000101100101
Subkey 7  : 01111010111010101111100100001000011010101110100110101011
Subkey 8  : 01010001010100000110111101111001010100010110010101001000
Subkey 9  : 11101010111110010000100001101010111010011010101101111010
Subkey 10 : 01010000011011110111100101010001011001010100100001010001
Subkey 11 : 11111001000010000110101011101001101010110111101011101010
Subkey 12 : 01101111011110010101000101100101010010000101000101010000
Subkey 13 : 00001000011010101110100110101011011110101110101011111001
Subkey 14 : 01111001010100010110010101001000010100010101000001101111
Subkey 15 : 01101010111010011010101101111010111010101111100100001000
Subkey 16 : 01010001011001010100100001010001010100000110111101111001

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : º.¶V?È≥¬”#ﬁß?§$?1@÷F??jˇ⁄E◊-? tO≈®∞¥7ﬁµ/uh"Â

Data padded with spaces : º.¶V?È≥¬”#ﬁß?§$?1@÷F??jˇ⁄E◊-? tO≈®∞¥7ﬁµ/uh"Â[Padded with '0' spaces]

Data in ASCII           : 188,7,46,166,86,151,233,179,194,211,35,222,167,153,25,164,36,157,49,64,214,70,149,132,106,255,218,24,69,215,45,134,202,116,79,197,168,176,180,55,222,181,47,20,117,104,34,229,

Data in Binary          : 10111100,00000111,00101110,10100110,01010110,10010111,11101001,10110011,11000010,11010011,00100011,11011110,10100111,10011001,00011001,10100100,00100100,10011101,00110001,01000000,11010110,01000110,10010101,10000100,01101010,11111111,11011010,00011000,01000101,11010111,00101101,10000110,11001010,01110100,01001111,11000101,10101000,10110000,10110100,00110111,11011110,10110101,00101111,00010100,01110101,01101000,00100010,11100101,

Data in 64-bit Blocks   : 1011110000000111001011101010011001010110100101111110100110110011,1100001011010011001000111101111010100111100110010001100110100100,0010010010011101001100010100000011010110010001101001010110000100,0110101011111111110110100001100001000101110101110010110110000110,1100101001110100010011111100010110101000101100001011010000110111,1101111010110101001011110001010001110101011010000010001011100101,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0110011001110001010100000100001000110110011011000100110001101011)

Ciphertext Block 1:                                      1011110000000111001011101010011001010110100101111110100110110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100000001110010111010100110

       - Right 32 Bits:            01010110100101111110100110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 16]
          - Input Half:       01010110100101111110100110110011
          - S-Box Result:     10010000001111011100001110000001   [per every group of 4-bits]
          - Split Into Two:   1001000000111101 [L] 1100001110000001 [R]
          - Swap Halves:      11000011100000011001000000111101
          - Bit Inversion:    00111100011111100110111111000010
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     01111010000101000011110100010100

          - FUNCTION OUTPUT:  01111010000101000011110100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100000001110010111010100110

       - FUNCTION OUTPUT:          01111010000101000011110100010100

       - Left XOR FUNCTION OUTPUT: 11000110000100110001001110110010

       - Next Round Left 32 Bits:  01010110100101111110100110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110000100110001001110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110100101111110100110110011

       - Right 32 Bits:            11000110000100110001001110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 15]
          - Input Half:       11000110000100110001001110110010
          - S-Box Result:     01010000101000011010000110001110   [per every group of 4-bits]
          - Split Into Two:   0101000010100001 [L] 1010000110001110 [R]
          - Swap Halves:      10100001100011100101000010100001
          - Bit Inversion:    01011110011100011010111101011110
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     11111011110110100001100001001010

          - FUNCTION OUTPUT:  11111011110110100001100001001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110100101111110100110110011

       - FUNCTION OUTPUT:          11111011110110100001100001001010

       - Left XOR FUNCTION OUTPUT: 10101101010011011111000111111001

       - Next Round Left 32 Bits:  11000110000100110001001110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101010011011111000111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110000100110001001110110010

       - Right 32 Bits:            10101101010011011111000111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010100010110010101001000010100010101000001101111   [Subkey: 14]
          - Input Half:       10101101010011011111000111111001
          - S-Box Result:     01000110011101101011101010110011   [per every group of 4-bits]
          - Split Into Two:   0100011001110110 [L] 1011101010110011 [R]
          - Swap Halves:      10111010101100110100011001110110
          - Bit Inversion:    01000101010011001011100110001001
          - Compressed Key:   11001000110010000001101000001111   [done by compression P-Box]
          - XOR with Key:     10001101100001001010001110000110

          - FUNCTION OUTPUT:  10001101100001001010001110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110000100110001001110110010

       - FUNCTION OUTPUT:          10001101100001001010001110000110

       - Left XOR FUNCTION OUTPUT: 01001011100101111011000000110100

       - Next Round Left 32 Bits:  10101101010011011111000111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011100101111011000000110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101010011011111000111111001

       - Right 32 Bits:            01001011100101111011000000110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001000011010101110100110101011011110101110101011111001   [Subkey: 13]
          - Input Half:       01001011100101111011000000110100
          - S-Box Result:     01111000001111011000111100010111   [per every group of 4-bits]
          - Split Into Two:   0111100000111101 [L] 1000111100010111 [R]
          - Swap Halves:      10001111000101110111100000111101
          - Bit Inversion:    01110000111010001000011111000010
          - Compressed Key:   10000101111001010111011110100110   [done by compression P-Box]
          - XOR with Key:     11110101000011011111000001100100

          - FUNCTION OUTPUT:  11110101000011011111000001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101010011011111000111111001

       - FUNCTION OUTPUT:          11110101000011011111000001100100

       - Left XOR FUNCTION OUTPUT: 01011000010000000000000110011101

       - Next Round Left 32 Bits:  01001011100101111011000000110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000010000000000000110011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011100101111011000000110100

       - Right 32 Bits:            01011000010000000000000110011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011110010101000101100101010010000101000101010000   [Subkey: 12]
          - Input Half:       01011000010000000000000110011101
          - S-Box Result:     10010010011111111111101000110110   [per every group of 4-bits]
          - Split Into Two:   1001001001111111 [L] 1111101000110110 [R]
          - Swap Halves:      11111010001101101001001001111111
          - Bit Inversion:    00000101110010010110110110000000
          - Compressed Key:   10111101010110010101001000010000   [done by compression P-Box]
          - XOR with Key:     10111000100100000011111110010000

          - FUNCTION OUTPUT:  10111000100100000011111110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011100101111011000000110100

       - FUNCTION OUTPUT:          10111000100100000011111110010000

       - Left XOR FUNCTION OUTPUT: 11110011000001111000111110100100

       - Next Round Left 32 Bits:  01011000010000000000000110011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011000001111000111110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000010000000000000110011101

       - Right 32 Bits:            11110011000001111000111110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111001000010000110101011101001101010110111101011101010   [Subkey: 11]
          - Input Half:       11110011000001111000111110100100
          - S-Box Result:     10110001111111010010101101000111   [per every group of 4-bits]
          - Split Into Two:   1011000111111101 [L] 0010101101000111 [R]
          - Swap Halves:      00101011010001111011000111111101
          - Bit Inversion:    11010100101110000100111000000010
          - Compressed Key:   11000001111011011110111010100101   [done by compression P-Box]
          - XOR with Key:     00010101010101011010000010100111

          - FUNCTION OUTPUT:  00010101010101011010000010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000010000000000000110011101

       - FUNCTION OUTPUT:          00010101010101011010000010100111

       - Left XOR FUNCTION OUTPUT: 01001101000101011010000100111010

       - Next Round Left 32 Bits:  11110011000001111000111110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101000101011010000100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011000001111000111110100100

       - Right 32 Bits:            01001101000101011010000100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011011110111100101010001011001010100100001010001   [Subkey: 10]
          - Input Half:       01001101000101011010000100111010
          - S-Box Result:     01110110101010010100101000010100   [per every group of 4-bits]
          - Split Into Two:   0111011010101001 [L] 0100101000010100 [R]
          - Swap Halves:      01001010000101000111011010101001
          - Bit Inversion:    10110101111010111000100101010110
          - Compressed Key:   01000111111110100111101000000010   [done by compression P-Box]
          - XOR with Key:     11110010000100011111001101010100

          - FUNCTION OUTPUT:  11110010000100011111001101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011000001111000111110100100

       - FUNCTION OUTPUT:          11110010000100011111001101010100

       - Left XOR FUNCTION OUTPUT: 00000001000101100111110011110000

       - Next Round Left 32 Bits:  01001101000101011010000100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001000101100111110011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101000101011010000100111010

       - Right 32 Bits:            00000001000101100111110011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010111110010000100001101010111010011010101101111010   [Subkey: 9]
          - Input Half:       00000001000101100111110011110000
          - S-Box Result:     11111010101000001101010110111111   [per every group of 4-bits]
          - Split Into Two:   1111101010100000 [L] 1101010110111111 [R]
          - Swap Halves:      11010101101111111111101010100000
          - Bit Inversion:    00101010010000000000010101011111
          - Compressed Key:   10101101001010011011100110010101   [done by compression P-Box]
          - XOR with Key:     10000111011010011011110011001010

          - FUNCTION OUTPUT:  10000111011010011011110011001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101000101011010000100111010

       - FUNCTION OUTPUT:          10000111011010011011110011001010

       - Left XOR FUNCTION OUTPUT: 11001010011111000001110111110000

       - Next Round Left 32 Bits:  00000001000101100111110011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010011111000001110111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001000101100111110011110000

       - Right 32 Bits:            11001010011111000001110111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100000110111101111001010100010110010101001000   [Subkey: 8]
          - Input Half:       11001010011111000001110111110000
          - S-Box Result:     01010100110101011010011010111111   [per every group of 4-bits]
          - Split Into Two:   0101010011010101 [L] 1010011010111111 [R]
          - Swap Halves:      10100110101111110101010011010101
          - Bit Inversion:    01011001010000001010101100101010
          - Compressed Key:   01001000111010110101101001010100   [done by compression P-Box]
          - XOR with Key:     00010001101010111111000101111110

          - FUNCTION OUTPUT:  00010001101010111111000101111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001000101100111110011110000

       - FUNCTION OUTPUT:          00010001101010111111000101111110

       - Left XOR FUNCTION OUTPUT: 00010000101111011000110110001110

       - Next Round Left 32 Bits:  11001010011111000001110111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000101111011000110110001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010011111000001110111110000

       - Right 32 Bits:            00010000101111011000110110001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111010101111100100001000011010101110100110101011   [Subkey: 7]
          - Input Half:       00010000101111011000110110001110
          - S-Box Result:     10101111100001100010011000101100   [per every group of 4-bits]
          - Split Into Two:   1010111110000110 [L] 0010011000101100 [R]
          - Swap Halves:      00100110001011001010111110000110
          - Bit Inversion:    11011001110100110101000001111001
          - Compressed Key:   11100101111100000011011100110111   [done by compression P-Box]
          - XOR with Key:     00111100001000110110011101001110

          - FUNCTION OUTPUT:  00111100001000110110011101001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010011111000001110111110000

       - FUNCTION OUTPUT:          00111100001000110110011101001110

       - Left XOR FUNCTION OUTPUT: 11110110010111110111101010111110

       - Next Round Left 32 Bits:  00010000101111011000110110001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110010111110111101010111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000101111011000110110001110

       - Right 32 Bits:            11110110010111110111101010111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000010100010101000001101111011110010101000101100101   [Subkey: 6]
          - Input Half:       11110110010111110111101010111110
          - S-Box Result:     10110000100110111101010010001100   [per every group of 4-bits]
          - Split Into Two:   1011000010011011 [L] 1101010010001100 [R]
          - Swap Halves:      11010100100011001011000010011011
          - Bit Inversion:    00101011011100110100111101100100
          - Compressed Key:   10001000010110010111101000011010   [done by compression P-Box]
          - XOR with Key:     10100011001010100011010101111110

          - FUNCTION OUTPUT:  10100011001010100011010101111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000101111011000110110001110

       - FUNCTION OUTPUT:          10100011001010100011010101111110

       - Left XOR FUNCTION OUTPUT: 10110011100101111011100011110000

       - Next Round Left 32 Bits:  11110110010111110111101010111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011100101111011100011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110110010111110111101010111110

       - Right 32 Bits:            10110011100101111011100011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101011011110101110101011111001000010000110101011101001   [Subkey: 5]
          - Input Half:       10110011100101111011100011110000
          - S-Box Result:     10000001001111011000001010111111   [per every group of 4-bits]
          - Split Into Two:   1000000100111101 [L] 1000001010111111 [R]
          - Swap Halves:      10000010101111111000000100111101
          - Bit Inversion:    01111101010000000111111011000010
          - Compressed Key:   10101101111011110100001010100110   [done by compression P-Box]
          - XOR with Key:     11010000101011110011110001100100

          - FUNCTION OUTPUT:  11010000101011110011110001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110110010111110111101010111110

       - FUNCTION OUTPUT:          11010000101011110011110001100100

       - Left XOR FUNCTION OUTPUT: 00100110111100000100011011011010

       - Next Round Left 32 Bits:  10110011100101111011100011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110111100000100011011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011100101111011100011110000

       - Right 32 Bits:            00100110111100000100011011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010010000101000101010000011011110111100101010001   [Subkey: 4]
          - Input Half:       00100110111100000100011011011010
          - S-Box Result:     11100000101111110111000001100100   [per every group of 4-bits]
          - Split Into Two:   1110000010111111 [L] 0111000001100100 [R]
          - Swap Halves:      01110000011001001110000010111111
          - Bit Inversion:    10001111100110110001111101000000
          - Compressed Key:   00010001010110100011111000010010   [done by compression P-Box]
          - XOR with Key:     10011110110000010010000101010010

          - FUNCTION OUTPUT:  10011110110000010010000101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011100101111011100011110000

       - FUNCTION OUTPUT:          10011110110000010010000101010010

       - Left XOR FUNCTION OUTPUT: 00101101010101101001100110100010

       - Next Round Left 32 Bits:  00100110111100000100011011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101010101101001100110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110111100000100011011011010

       - Right 32 Bits:            00101101010101101001100110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101010110111101011101010111110010000100001101010   [Subkey: 3]
          - Input Half:       00101101010101101001100110100010
          - S-Box Result:     11100110100100000011001101001110   [per every group of 4-bits]
          - Split Into Two:   1110011010010000 [L] 0011001101001110 [R]
          - Swap Halves:      00110011010011101110011010010000
          - Bit Inversion:    11001100101100010001100101101111
          - Compressed Key:   10000101111111011011100000000101   [done by compression P-Box]
          - XOR with Key:     01001001010011001010000101101010

          - FUNCTION OUTPUT:  01001001010011001010000101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110111100000100011011011010

       - FUNCTION OUTPUT:          01001001010011001010000101101010

       - Left XOR FUNCTION OUTPUT: 01101111101111001110011110110000

       - Next Round Left 32 Bits:  00101101010101101001100110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111101111001110011110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101010101101001100110100010

       - Right 32 Bits:            01101111101111001110011110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 2]
          - Input Half:       01101111101111001110011110110000
          - S-Box Result:     00001011100001011100110110001111   [per every group of 4-bits]
          - Split Into Two:   0000101110000101 [L] 1100110110001111 [R]
          - Swap Halves:      11001101100011110000101110000101
          - Bit Inversion:    00110010011100001111010001111010
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     01110100000110101010011010101100

          - FUNCTION OUTPUT:  01110100000110101010011010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101010101101001100110100010

       - FUNCTION OUTPUT:          01110100000110101010011010101100

       - Left XOR FUNCTION OUTPUT: 01011001010011000011111100001110

       - Next Round Left 32 Bits:  01101111101111001110011110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001010011000011111100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111101111001110011110110000

       - Right 32 Bits:            01011001010011000011111100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 1]
          - Input Half:       01011001010011000011111100001110
          - S-Box Result:     10010011011101010001101111111100   [per every group of 4-bits]
          - Split Into Two:   1001001101110101 [L] 0001101111111100 [R]
          - Swap Halves:      00011011111111001001001101110101
          - Bit Inversion:    11100100000000110110110010001010
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     01000001101010001101101110011110

          - FUNCTION OUTPUT:  01000001101010001101101110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111101111001110011110110000

       - FUNCTION OUTPUT:          01000001101010001101101110011110

       - Left XOR FUNCTION OUTPUT: 00101110000101000011110000101110

       - Next Round Left 32 Bits:  01011001010011000011111100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110000101000011110000101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010111000010100001111000010111001011001010011000011111100001110

 > Decrypted Block:     0010111000010100001111000010111001011001010011000011111100001110


!!!CBC: Previous Ciphertext:                             0110011001110001010100000100001000110110011011000100110001101011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100001100101011011000110110001101111001000000111001101100101

 > Final Processed Block:                                0100100001100101011011000110110001101111001000000111001101100101



Ciphertext Block 2:                                      1100001011010011001000111101111010100111100110010001100110100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010110100110010001111011110

       - Right 32 Bits:            10100111100110010001100110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 16]
          - Input Half:       10100111100110010001100110100100
          - S-Box Result:     01001101001100111010001101000111   [per every group of 4-bits]
          - Split Into Two:   0100110100110011 [L] 1010001101000111 [R]
          - Swap Halves:      10100011010001110100110100110011
          - Bit Inversion:    01011100101110001011001011001100
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     00011010110100101110000000011010

          - FUNCTION OUTPUT:  00011010110100101110000000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010110100110010001111011110

       - FUNCTION OUTPUT:          00011010110100101110000000011010

       - Left XOR FUNCTION OUTPUT: 11011000000000011100001111000100

       - Next Round Left 32 Bits:  10100111100110010001100110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000000000011100001111000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111100110010001100110100100

       - Right 32 Bits:            11011000000000011100001111000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 15]
          - Input Half:       11011000000000011100001111000100
          - S-Box Result:     01100010111110100101000101010111   [per every group of 4-bits]
          - Split Into Two:   0110001011111010 [L] 0101000101010111 [R]
          - Swap Halves:      01010001010101110110001011111010
          - Bit Inversion:    10101110101010001001110100000101
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     00001011000000110010101000010001

          - FUNCTION OUTPUT:  00001011000000110010101000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111100110010001100110100100

       - FUNCTION OUTPUT:          00001011000000110010101000010001

       - Left XOR FUNCTION OUTPUT: 10101100100110100011001110110101

       - Next Round Left 32 Bits:  11011000000000011100001111000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100100110100011001110110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000000000011100001111000100

       - Right 32 Bits:            10101100100110100011001110110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010100010110010101001000010100010101000001101111   [Subkey: 14]
          - Input Half:       10101100100110100011001110110101
          - S-Box Result:     01000101001101000001000110001001   [per every group of 4-bits]
          - Split Into Two:   0100010100110100 [L] 0001000110001001 [R]
          - Swap Halves:      00010001100010010100010100110100
          - Bit Inversion:    11101110011101101011101011001011
          - Compressed Key:   11001000110010000001101000001111   [done by compression P-Box]
          - XOR with Key:     00100110101111101010000011000100

          - FUNCTION OUTPUT:  00100110101111101010000011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000000000011100001111000100

       - FUNCTION OUTPUT:          00100110101111101010000011000100

       - Left XOR FUNCTION OUTPUT: 11111110101111110110001100000000

       - Next Round Left 32 Bits:  10101100100110100011001110110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110101111110110001100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100100110100011001110110101

       - Right 32 Bits:            11111110101111110110001100000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001000011010101110100110101011011110101110101011111001   [Subkey: 13]
          - Input Half:       11111110101111110110001100000000
          - S-Box Result:     10111100100010110000000111111111   [per every group of 4-bits]
          - Split Into Two:   1011110010001011 [L] 0000000111111111 [R]
          - Swap Halves:      00000001111111111011110010001011
          - Bit Inversion:    11111110000000000100001101110100
          - Compressed Key:   10000101111001010111011110100110   [done by compression P-Box]
          - XOR with Key:     01111011111001010011010011010010

          - FUNCTION OUTPUT:  01111011111001010011010011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100100110100011001110110101

       - FUNCTION OUTPUT:          01111011111001010011010011010010

       - Left XOR FUNCTION OUTPUT: 11010111011111110000011101100111

       - Next Round Left 32 Bits:  11111110101111110110001100000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111011111110000011101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110101111110110001100000000

       - Right 32 Bits:            11010111011111110000011101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011110010101000101100101010010000101000101010000   [Subkey: 12]
          - Input Half:       11010111011111110000011101100111
          - S-Box Result:     01101101110110111111110100001101   [per every group of 4-bits]
          - Split Into Two:   0110110111011011 [L] 1111110100001101 [R]
          - Swap Halves:      11111101000011010110110111011011
          - Bit Inversion:    00000010111100101001001000100100
          - Compressed Key:   10111101010110010101001000010000   [done by compression P-Box]
          - XOR with Key:     10111111101010111100000000110100

          - FUNCTION OUTPUT:  10111111101010111100000000110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110101111110110001100000000

       - FUNCTION OUTPUT:          10111111101010111100000000110100

       - Left XOR FUNCTION OUTPUT: 01000001000101001010001100110100

       - Next Round Left 32 Bits:  11010111011111110000011101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001000101001010001100110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111011111110000011101100111

       - Right 32 Bits:            01000001000101001010001100110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111001000010000110101011101001101010110111101011101010   [Subkey: 11]
          - Input Half:       01000001000101001010001100110100
          - S-Box Result:     01111010101001110100000100010111   [per every group of 4-bits]
          - Split Into Two:   0111101010100111 [L] 0100000100010111 [R]
          - Swap Halves:      01000001000101110111101010100111
          - Bit Inversion:    10111110111010001000010101011000
          - Compressed Key:   11000001111011011110111010100101   [done by compression P-Box]
          - XOR with Key:     01111111000001010110101111111101

          - FUNCTION OUTPUT:  01111111000001010110101111111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111011111110000011101100111

       - FUNCTION OUTPUT:          01111111000001010110101111111101

       - Left XOR FUNCTION OUTPUT: 10101000011110100110110010011010

       - Next Round Left 32 Bits:  01000001000101001010001100110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000011110100110110010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001000101001010001100110100

       - Right 32 Bits:            10101000011110100110110010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011011110111100101010001011001010100100001010001   [Subkey: 10]
          - Input Half:       10101000011110100110110010011010
          - S-Box Result:     01000010110101000000010100110100   [per every group of 4-bits]
          - Split Into Two:   0100001011010100 [L] 0000010100110100 [R]
          - Swap Halves:      00000101001101000100001011010100
          - Bit Inversion:    11111010110010111011110100101011
          - Compressed Key:   01000111111110100111101000000010   [done by compression P-Box]
          - XOR with Key:     10111101001100011100011100101001

          - FUNCTION OUTPUT:  10111101001100011100011100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001000101001010001100110100

       - FUNCTION OUTPUT:          10111101001100011100011100101001

       - Left XOR FUNCTION OUTPUT: 11111100001001010110010000011101

       - Next Round Left 32 Bits:  10101000011110100110110010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100001001010110010000011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000011110100110110010011010

       - Right 32 Bits:            11111100001001010110010000011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010111110010000100001101010111010011010101101111010   [Subkey: 9]
          - Input Half:       11111100001001010110010000011101
          - S-Box Result:     10110101111010010000011110100110   [per every group of 4-bits]
          - Split Into Two:   1011010111101001 [L] 0000011110100110 [R]
          - Swap Halves:      00000111101001101011010111101001
          - Bit Inversion:    11111000010110010100101000010110
          - Compressed Key:   10101101001010011011100110010101   [done by compression P-Box]
          - XOR with Key:     01010101011100001111001110000011

          - FUNCTION OUTPUT:  01010101011100001111001110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000011110100110110010011010

       - FUNCTION OUTPUT:          01010101011100001111001110000011

       - Left XOR FUNCTION OUTPUT: 11111101000010101001111100011001

       - Next Round Left 32 Bits:  11111100001001010110010000011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101000010101001111100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100001001010110010000011101

       - Right 32 Bits:            11111101000010101001111100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100000110111101111001010100010110010101001000   [Subkey: 8]
          - Input Half:       11111101000010101001111100011001
          - S-Box Result:     10110110111101000011101110100011   [per every group of 4-bits]
          - Split Into Two:   1011011011110100 [L] 0011101110100011 [R]
          - Swap Halves:      00111011101000111011011011110100
          - Bit Inversion:    11000100010111000100100100001011
          - Compressed Key:   01001000111010110101101001010100   [done by compression P-Box]
          - XOR with Key:     10001100101101110001001101011111

          - FUNCTION OUTPUT:  10001100101101110001001101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100001001010110010000011101

       - FUNCTION OUTPUT:          10001100101101110001001101011111

       - Left XOR FUNCTION OUTPUT: 01110000100100100111011101000010

       - Next Round Left 32 Bits:  11111101000010101001111100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000100100100111011101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101000010101001111100011001

       - Right 32 Bits:            01110000100100100111011101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111010101111100100001000011010101110100110101011   [Subkey: 7]
          - Input Half:       01110000100100100111011101000010
          - S-Box Result:     11011111001111101101110101111110   [per every group of 4-bits]
          - Split Into Two:   1101111100111110 [L] 1101110101111110 [R]
          - Swap Halves:      11011101011111101101111100111110
          - Bit Inversion:    00100010100000010010000011000001
          - Compressed Key:   11100101111100000011011100110111   [done by compression P-Box]
          - XOR with Key:     11000111011100010001011111110110

          - FUNCTION OUTPUT:  11000111011100010001011111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101000010101001111100011001

       - FUNCTION OUTPUT:          11000111011100010001011111110110

       - Left XOR FUNCTION OUTPUT: 00111010011110111000100011101111

       - Next Round Left 32 Bits:  01110000100100100111011101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010011110111000100011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000100100100111011101000010

       - Right 32 Bits:            00111010011110111000100011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000010100010101000001101111011110010101000101100101   [Subkey: 6]
          - Input Half:       00111010011110111000100011101111
          - S-Box Result:     00010100110110000010001011001011   [per every group of 4-bits]
          - Split Into Two:   0001010011011000 [L] 0010001011001011 [R]
          - Swap Halves:      00100010110010110001010011011000
          - Bit Inversion:    11011101001101001110101100100111
          - Compressed Key:   10001000010110010111101000011010   [done by compression P-Box]
          - XOR with Key:     01010101011011011001000100111101

          - FUNCTION OUTPUT:  01010101011011011001000100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000100100100111011101000010

       - FUNCTION OUTPUT:          01010101011011011001000100111101

       - Left XOR FUNCTION OUTPUT: 00100101111111111110011001111111

       - Next Round Left 32 Bits:  00111010011110111000100011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101111111111110011001111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010011110111000100011101111

       - Right 32 Bits:            00100101111111111110011001111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101011011110101110101011111001000010000110101011101001   [Subkey: 5]
          - Input Half:       00100101111111111110011001111111
          - S-Box Result:     11101001101110111100000011011011   [per every group of 4-bits]
          - Split Into Two:   1110100110111011 [L] 1100000011011011 [R]
          - Swap Halves:      11000000110110111110100110111011
          - Bit Inversion:    00111111001001000001011001000100
          - Compressed Key:   10101101111011110100001010100110   [done by compression P-Box]
          - XOR with Key:     10010010110010110101010011100010

          - FUNCTION OUTPUT:  10010010110010110101010011100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010011110111000100011101111

       - FUNCTION OUTPUT:          10010010110010110101010011100010

       - Left XOR FUNCTION OUTPUT: 10101000101100001101110000001101

       - Next Round Left 32 Bits:  00100101111111111110011001111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000101100001101110000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101111111111110011001111111

       - Right 32 Bits:            10101000101100001101110000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010010000101000101010000011011110111100101010001   [Subkey: 4]
          - Input Half:       10101000101100001101110000001101
          - S-Box Result:     01000010100011110110010111110110   [per every group of 4-bits]
          - Split Into Two:   0100001010001111 [L] 0110010111110110 [R]
          - Swap Halves:      01100101111101100100001010001111
          - Bit Inversion:    10011010000010011011110101110000
          - Compressed Key:   00010001010110100011111000010010   [done by compression P-Box]
          - XOR with Key:     10001011010100111000001101100010

          - FUNCTION OUTPUT:  10001011010100111000001101100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101111111111110011001111111

       - FUNCTION OUTPUT:          10001011010100111000001101100010

       - Left XOR FUNCTION OUTPUT: 10101110101011000110010100011101

       - Next Round Left 32 Bits:  10101000101100001101110000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110101011000110010100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000101100001101110000001101

       - Right 32 Bits:            10101110101011000110010100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101010110111101011101010111110010000100001101010   [Subkey: 3]
          - Input Half:       10101110101011000110010100011101
          - S-Box Result:     01001100010001010000100110100110   [per every group of 4-bits]
          - Split Into Two:   0100110001000101 [L] 0000100110100110 [R]
          - Swap Halves:      00001001101001100100110001000101
          - Bit Inversion:    11110110010110011011001110111010
          - Compressed Key:   10000101111111011011100000000101   [done by compression P-Box]
          - XOR with Key:     01110011101001000000101110111111

          - FUNCTION OUTPUT:  01110011101001000000101110111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000101100001101110000001101

       - FUNCTION OUTPUT:          01110011101001000000101110111111

       - Left XOR FUNCTION OUTPUT: 11011011000101001101011110110010

       - Next Round Left 32 Bits:  10101110101011000110010100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011000101001101011110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110101011000110010100011101

       - Right 32 Bits:            11011011000101001101011110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 2]
          - Input Half:       11011011000101001101011110110010
          - S-Box Result:     01101000101001110110110110001110   [per every group of 4-bits]
          - Split Into Two:   0110100010100111 [L] 0110110110001110 [R]
          - Swap Halves:      01101101100011100110100010100111
          - Bit Inversion:    10010010011100011001011101011000
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     11010100000110111100010110001110

          - FUNCTION OUTPUT:  11010100000110111100010110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110101011000110010100011101

       - FUNCTION OUTPUT:          11010100000110111100010110001110

       - Left XOR FUNCTION OUTPUT: 01111010101101111010000010010011

       - Next Round Left 32 Bits:  11011011000101001101011110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010101101111010000010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011000101001101011110110010

       - Right 32 Bits:            01111010101101111010000010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 1]
          - Input Half:       01111010101101111010000010010011
          - S-Box Result:     11010100100011010100111100110001   [per every group of 4-bits]
          - Split Into Two:   1101010010001101 [L] 0100111100110001 [R]
          - Swap Halves:      01001111001100011101010010001101
          - Bit Inversion:    10110000110011100010101101110010
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     00010101011001011001110001100110

          - FUNCTION OUTPUT:  00010101011001011001110001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011000101001101011110110010

       - FUNCTION OUTPUT:          00010101011001011001110001100110

       - Left XOR FUNCTION OUTPUT: 11001110011100010100101111010100

       - Next Round Left 32 Bits:  01111010101101111010000010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110011100010100101111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100111001110001010010111101010001111010101101111010000010010011

 > Decrypted Block:     1100111001110001010010111101010001111010101101111010000010010011


!!!CBC: Previous Ciphertext:                             1011110000000111001011101010011001010110100101111110100110110011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111001001110110011001010111001000101100001000000100100100100000

 > Final Processed Block:                                0111001001110110011001010111001000101100001000000100100100100000



Ciphertext Block 3:                                      0010010010011101001100010100000011010110010001101001010110000100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100100111010011000101000000

       - Right 32 Bits:            11010110010001101001010110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 16]
          - Input Half:       11010110010001101001010110000100
          - S-Box Result:     01100000011100000011100100100111   [per every group of 4-bits]
          - Split Into Two:   0110000001110000 [L] 0011100100100111 [R]
          - Swap Halves:      00111001001001110110000001110000
          - Bit Inversion:    11000110110110001001111110001111
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     10000000101100101100110101011001

          - FUNCTION OUTPUT:  10000000101100101100110101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100100111010011000101000000

       - FUNCTION OUTPUT:          10000000101100101100110101011001

       - Left XOR FUNCTION OUTPUT: 10100100001011111111110000011001

       - Next Round Left 32 Bits:  11010110010001101001010110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100001011111111110000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110010001101001010110000100

       - Right 32 Bits:            10100100001011111111110000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 15]
          - Input Half:       10100100001011111111110000011001
          - S-Box Result:     01000111111010111011010110100011   [per every group of 4-bits]
          - Split Into Two:   0100011111101011 [L] 1011010110100011 [R]
          - Swap Halves:      10110101101000110100011111101011
          - Bit Inversion:    01001010010111001011100000010100
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     11101111111101110000111100000000

          - FUNCTION OUTPUT:  11101111111101110000111100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110010001101001010110000100

       - FUNCTION OUTPUT:          11101111111101110000111100000000

       - Left XOR FUNCTION OUTPUT: 00111001101100011001101010000100

       - Next Round Left 32 Bits:  10100100001011111111110000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001101100011001101010000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100001011111111110000011001

       - Right 32 Bits:            00111001101100011001101010000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010100010110010101001000010100010101000001101111   [Subkey: 14]
          - Input Half:       00111001101100011001101010000100
          - S-Box Result:     00010011100010100011010000100111   [per every group of 4-bits]
          - Split Into Two:   0001001110001010 [L] 0011010000100111 [R]
          - Swap Halves:      00110100001001110001001110001010
          - Bit Inversion:    11001011110110001110110001110101
          - Compressed Key:   11001000110010000001101000001111   [done by compression P-Box]
          - XOR with Key:     00000011000100001111011001111010

          - FUNCTION OUTPUT:  00000011000100001111011001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100001011111111110000011001

       - FUNCTION OUTPUT:          00000011000100001111011001111010

       - Left XOR FUNCTION OUTPUT: 10100111001111110000101001100011

       - Next Round Left 32 Bits:  00111001101100011001101010000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111001111110000101001100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001101100011001101010000100

       - Right 32 Bits:            10100111001111110000101001100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001000011010101110100110101011011110101110101011111001   [Subkey: 13]
          - Input Half:       10100111001111110000101001100011
          - S-Box Result:     01001101000110111111010000000001   [per every group of 4-bits]
          - Split Into Two:   0100110100011011 [L] 1111010000000001 [R]
          - Swap Halves:      11110100000000010100110100011011
          - Bit Inversion:    00001011111111101011001011100100
          - Compressed Key:   10000101111001010111011110100110   [done by compression P-Box]
          - XOR with Key:     10001110000110111100010101000010

          - FUNCTION OUTPUT:  10001110000110111100010101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001101100011001101010000100

       - FUNCTION OUTPUT:          10001110000110111100010101000010

       - Left XOR FUNCTION OUTPUT: 10110111101010100101111111000110

       - Next Round Left 32 Bits:  10100111001111110000101001100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111101010100101111111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111001111110000101001100011

       - Right 32 Bits:            10110111101010100101111111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011110010101000101100101010010000101000101010000   [Subkey: 12]
          - Input Half:       10110111101010100101111111000110
          - S-Box Result:     10001101010001001001101101010000   [per every group of 4-bits]
          - Split Into Two:   1000110101000100 [L] 1001101101010000 [R]
          - Swap Halves:      10011011010100001000110101000100
          - Bit Inversion:    01100100101011110111001010111011
          - Compressed Key:   10111101010110010101001000010000   [done by compression P-Box]
          - XOR with Key:     11011001111101100010000010101011

          - FUNCTION OUTPUT:  11011001111101100010000010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111001111110000101001100011

       - FUNCTION OUTPUT:          11011001111101100010000010101011

       - Left XOR FUNCTION OUTPUT: 01111110110010010010101011001000

       - Next Round Left 32 Bits:  10110111101010100101111111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110110010010010101011001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111101010100101111111000110

       - Right 32 Bits:            01111110110010010010101011001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111001000010000110101011101001101010110111101011101010   [Subkey: 11]
          - Input Half:       01111110110010010010101011001000
          - S-Box Result:     11011100010100111110010001010010   [per every group of 4-bits]
          - Split Into Two:   1101110001010011 [L] 1110010001010010 [R]
          - Swap Halves:      11100100010100101101110001010011
          - Bit Inversion:    00011011101011010010001110101100
          - Compressed Key:   11000001111011011110111010100101   [done by compression P-Box]
          - XOR with Key:     11011010010000001100110100001001

          - FUNCTION OUTPUT:  11011010010000001100110100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111101010100101111111000110

       - FUNCTION OUTPUT:          11011010010000001100110100001001

       - Left XOR FUNCTION OUTPUT: 01101101111010101001001011001111

       - Next Round Left 32 Bits:  01111110110010010010101011001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101111010101001001011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110110010010010101011001000

       - Right 32 Bits:            01101101111010101001001011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011011110111100101010001011001010100100001010001   [Subkey: 10]
          - Input Half:       01101101111010101001001011001111
          - S-Box Result:     00000110110001000011111001011011   [per every group of 4-bits]
          - Split Into Two:   0000011011000100 [L] 0011111001011011 [R]
          - Swap Halves:      00111110010110110000011011000100
          - Bit Inversion:    11000001101001001111100100111011
          - Compressed Key:   01000111111110100111101000000010   [done by compression P-Box]
          - XOR with Key:     10000110010111101000001100111001

          - FUNCTION OUTPUT:  10000110010111101000001100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110110010010010101011001000

       - FUNCTION OUTPUT:          10000110010111101000001100111001

       - Left XOR FUNCTION OUTPUT: 11111000100101111010100111110001

       - Next Round Left 32 Bits:  01101101111010101001001011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000100101111010100111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101111010101001001011001111

       - Right 32 Bits:            11111000100101111010100111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010111110010000100001101010111010011010101101111010   [Subkey: 9]
          - Input Half:       11111000100101111010100111110001
          - S-Box Result:     10110010001111010100001110111010   [per every group of 4-bits]
          - Split Into Two:   1011001000111101 [L] 0100001110111010 [R]
          - Swap Halves:      01000011101110101011001000111101
          - Bit Inversion:    10111100010001010100110111000010
          - Compressed Key:   10101101001010011011100110010101   [done by compression P-Box]
          - XOR with Key:     00010001011011001111010001010111

          - FUNCTION OUTPUT:  00010001011011001111010001010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101111010101001001011001111

       - FUNCTION OUTPUT:          00010001011011001111010001010111

       - Left XOR FUNCTION OUTPUT: 01111100100001100110011010011000

       - Next Round Left 32 Bits:  11111000100101111010100111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100100001100110011010011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000100101111010100111110001

       - Right 32 Bits:            01111100100001100110011010011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100000110111101111001010100010110010101001000   [Subkey: 8]
          - Input Half:       01111100100001100110011010011000
          - S-Box Result:     11010101001000000000000000110010   [per every group of 4-bits]
          - Split Into Two:   1101010100100000 [L] 0000000000110010 [R]
          - Swap Halves:      00000000001100101101010100100000
          - Bit Inversion:    11111111110011010010101011011111
          - Compressed Key:   01001000111010110101101001010100   [done by compression P-Box]
          - XOR with Key:     10110111001001100111000010001011

          - FUNCTION OUTPUT:  10110111001001100111000010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000100101111010100111110001

       - FUNCTION OUTPUT:          10110111001001100111000010001011

       - Left XOR FUNCTION OUTPUT: 01001111101100011101100101111010

       - Next Round Left 32 Bits:  01111100100001100110011010011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111101100011101100101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100100001100110011010011000

       - Right 32 Bits:            01001111101100011101100101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111010101111100100001000011010101110100110101011   [Subkey: 7]
          - Input Half:       01001111101100011101100101111010
          - S-Box Result:     01111011100010100110001111010100   [per every group of 4-bits]
          - Split Into Two:   0111101110001010 [L] 0110001111010100 [R]
          - Swap Halves:      01100011110101000111101110001010
          - Bit Inversion:    10011100001010111000010001110101
          - Compressed Key:   11100101111100000011011100110111   [done by compression P-Box]
          - XOR with Key:     01111001110110111011001101000010

          - FUNCTION OUTPUT:  01111001110110111011001101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100100001100110011010011000

       - FUNCTION OUTPUT:          01111001110110111011001101000010

       - Left XOR FUNCTION OUTPUT: 00000101010111011101010111011010

       - Next Round Left 32 Bits:  01001111101100011101100101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101010111011101010111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111101100011101100101111010

       - Right 32 Bits:            00000101010111011101010111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000010100010101000001101111011110010101000101100101   [Subkey: 6]
          - Input Half:       00000101010111011101010111011010
          - S-Box Result:     11111001100101100110100101100100   [per every group of 4-bits]
          - Split Into Two:   1111100110010110 [L] 0110100101100100 [R]
          - Swap Halves:      01101001011001001111100110010110
          - Bit Inversion:    10010110100110110000011001101001
          - Compressed Key:   10001000010110010111101000011010   [done by compression P-Box]
          - XOR with Key:     00011110110000100111110001110011

          - FUNCTION OUTPUT:  00011110110000100111110001110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111101100011101100101111010

       - FUNCTION OUTPUT:          00011110110000100111110001110011

       - Left XOR FUNCTION OUTPUT: 01010001011100111010010100001001

       - Next Round Left 32 Bits:  00000101010111011101010111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001011100111010010100001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101010111011101010111011010

       - Right 32 Bits:            01010001011100111010010100001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101011011110101110101011111001000010000110101011101001   [Subkey: 5]
          - Input Half:       01010001011100111010010100001001
          - S-Box Result:     10011010110100010100100111110011   [per every group of 4-bits]
          - Split Into Two:   1001101011010001 [L] 0100100111110011 [R]
          - Swap Halves:      01001001111100111001101011010001
          - Bit Inversion:    10110110000011000110010100101110
          - Compressed Key:   10101101111011110100001010100110   [done by compression P-Box]
          - XOR with Key:     00011011111000110010011110001000

          - FUNCTION OUTPUT:  00011011111000110010011110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101010111011101010111011010

       - FUNCTION OUTPUT:          00011011111000110010011110001000

       - Left XOR FUNCTION OUTPUT: 00011110101111101111001001010010

       - Next Round Left 32 Bits:  01010001011100111010010100001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110101111101111001001010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001011100111010010100001001

       - Right 32 Bits:            00011110101111101111001001010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010010000101000101010000011011110111100101010001   [Subkey: 4]
          - Input Half:       00011110101111101111001001010010
          - S-Box Result:     10101100100011001011111010011110   [per every group of 4-bits]
          - Split Into Two:   1010110010001100 [L] 1011111010011110 [R]
          - Swap Halves:      10111110100111101010110010001100
          - Bit Inversion:    01000001011000010101001101110011
          - Compressed Key:   00010001010110100011111000010010   [done by compression P-Box]
          - XOR with Key:     01010000001110110110110101100001

          - FUNCTION OUTPUT:  01010000001110110110110101100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001011100111010010100001001

       - FUNCTION OUTPUT:          01010000001110110110110101100001

       - Left XOR FUNCTION OUTPUT: 00000001010010001100100001101000

       - Next Round Left 32 Bits:  00011110101111101111001001010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001010010001100100001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110101111101111001001010010

       - Right 32 Bits:            00000001010010001100100001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101010110111101011101010111110010000100001101010   [Subkey: 3]
          - Input Half:       00000001010010001100100001101000
          - S-Box Result:     11111010011100100101001000000010   [per every group of 4-bits]
          - Split Into Two:   1111101001110010 [L] 0101001000000010 [R]
          - Swap Halves:      01010010000000101111101001110010
          - Bit Inversion:    10101101111111010000010110001101
          - Compressed Key:   10000101111111011011100000000101   [done by compression P-Box]
          - XOR with Key:     00101000000000001011110110001000

          - FUNCTION OUTPUT:  00101000000000001011110110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110101111101111001001010010

       - FUNCTION OUTPUT:          00101000000000001011110110001000

       - Left XOR FUNCTION OUTPUT: 00110110101111100100111111011010

       - Next Round Left 32 Bits:  00000001010010001100100001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110101111100100111111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001010010001100100001101000

       - Right 32 Bits:            00110110101111100100111111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 2]
          - Input Half:       00110110101111100100111111011010
          - S-Box Result:     00010000100011000111101101100100   [per every group of 4-bits]
          - Split Into Two:   0001000010001100 [L] 0111101101100100 [R]
          - Swap Halves:      01111011011001000001000010001100
          - Bit Inversion:    10000100100110111110111101110011
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     11000010111100011011110110100101

          - FUNCTION OUTPUT:  11000010111100011011110110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001010010001100100001101000

       - FUNCTION OUTPUT:          11000010111100011011110110100101

       - Left XOR FUNCTION OUTPUT: 11000011101110010111010111001101

       - Next Round Left 32 Bits:  00110110101111100100111111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011101110010111010111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110101111100100111111011010

       - Right 32 Bits:            11000011101110010111010111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 1]
          - Input Half:       11000011101110010111010111001101
          - S-Box Result:     01010001100000111101100101010110   [per every group of 4-bits]
          - Split Into Two:   0101000110000011 [L] 1101100101010110 [R]
          - Swap Halves:      11011001010101100101000110000011
          - Bit Inversion:    00100110101010011010111001111100
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     10000011000000100001100101101000

          - FUNCTION OUTPUT:  10000011000000100001100101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110101111100100111111011010

       - FUNCTION OUTPUT:          10000011000000100001100101101000

       - Left XOR FUNCTION OUTPUT: 10110101101111000101011010110010

       - Next Round Left 32 Bits:  11000011101110010111010111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101101111000101011010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011010110111100010101101011001011000011101110010111010111001101

 > Decrypted Block:     1011010110111100010101101011001011000011101110010111010111001101


!!!CBC: Previous Ciphertext:                             1100001011010011001000111101111010100111100110010001100110100100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111011101101111011101010110110001100100001000000110110001101001

 > Final Processed Block:                                0111011101101111011101010110110001100100001000000110110001101001



Ciphertext Block 4:                                      0110101011111111110110100001100001000101110101110010110110000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010111111111101101000011000

       - Right 32 Bits:            01000101110101110010110110000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 16]
          - Input Half:       01000101110101110010110110000110
          - S-Box Result:     01111001011011011110011000100000   [per every group of 4-bits]
          - Split Into Two:   0111100101101101 [L] 1110011000100000 [R]
          - Swap Halves:      11100110001000000111100101101101
          - Bit Inversion:    00011001110111111000011010010010
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     01011111101101011101010001000100

          - FUNCTION OUTPUT:  01011111101101011101010001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010111111111101101000011000

       - FUNCTION OUTPUT:          01011111101101011101010001000100

       - Left XOR FUNCTION OUTPUT: 00110101010010100000111001011100

       - Next Round Left 32 Bits:  01000101110101110010110110000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101010010100000111001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101110101110010110110000110

       - Right 32 Bits:            00110101010010100000111001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 15]
          - Input Half:       00110101010010100000111001011100
          - S-Box Result:     00011001011101001111110010010101   [per every group of 4-bits]
          - Split Into Two:   0001100101110100 [L] 1111110010010101 [R]
          - Swap Halves:      11111100100101010001100101110100
          - Bit Inversion:    00000011011010101110011010001011
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     10100110110000010101000110011111

          - FUNCTION OUTPUT:  10100110110000010101000110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101110101110010110110000110

       - FUNCTION OUTPUT:          10100110110000010101000110011111

       - Left XOR FUNCTION OUTPUT: 11100011000101100111110000011001

       - Next Round Left 32 Bits:  00110101010010100000111001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011000101100111110000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101010010100000111001011100

       - Right 32 Bits:            11100011000101100111110000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010100010110010101001000010100010101000001101111   [Subkey: 14]
          - Input Half:       11100011000101100111110000011001
          - S-Box Result:     11000001101000001101010110100011   [per every group of 4-bits]
          - Split Into Two:   1100000110100000 [L] 1101010110100011 [R]
          - Swap Halves:      11010101101000111100000110100000
          - Bit Inversion:    00101010010111000011111001011111
          - Compressed Key:   11001000110010000001101000001111   [done by compression P-Box]
          - XOR with Key:     11100010100101000010010001010000

          - FUNCTION OUTPUT:  11100010100101000010010001010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101010010100000111001011100

       - FUNCTION OUTPUT:          11100010100101000010010001010000

       - Left XOR FUNCTION OUTPUT: 11010111110111100010101000001100

       - Next Round Left 32 Bits:  11100011000101100111110000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111110111100010101000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011000101100111110000011001

       - Right 32 Bits:            11010111110111100010101000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001000011010101110100110101011011110101110101011111001   [Subkey: 13]
          - Input Half:       11010111110111100010101000001100
          - S-Box Result:     01101101011011001110010011110101   [per every group of 4-bits]
          - Split Into Two:   0110110101101100 [L] 1110010011110101 [R]
          - Swap Halves:      11100100111101010110110101101100
          - Bit Inversion:    00011011000010101001001010010011
          - Compressed Key:   10000101111001010111011110100110   [done by compression P-Box]
          - XOR with Key:     10011110111011111110010100110101

          - FUNCTION OUTPUT:  10011110111011111110010100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011000101100111110000011001

       - FUNCTION OUTPUT:          10011110111011111110010100110101

       - Left XOR FUNCTION OUTPUT: 01111101111110011001100100101100

       - Next Round Left 32 Bits:  11010111110111100010101000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101111110011001100100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111110111100010101000001100

       - Right 32 Bits:            01111101111110011001100100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011110010101000101100101010010000101000101010000   [Subkey: 12]
          - Input Half:       01111101111110011001100100101100
          - S-Box Result:     11010110101100110011001111100101   [per every group of 4-bits]
          - Split Into Two:   1101011010110011 [L] 0011001111100101 [R]
          - Swap Halves:      00110011111001011101011010110011
          - Bit Inversion:    11001100000110100010100101001100
          - Compressed Key:   10111101010110010101001000010000   [done by compression P-Box]
          - XOR with Key:     01110001010000110111101101011100

          - FUNCTION OUTPUT:  01110001010000110111101101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111110111100010101000001100

       - FUNCTION OUTPUT:          01110001010000110111101101011100

       - Left XOR FUNCTION OUTPUT: 10100110100111010101000101010000

       - Next Round Left 32 Bits:  01111101111110011001100100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110100111010101000101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101111110011001100100101100

       - Right 32 Bits:            10100110100111010101000101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111001000010000110101011101001101010110111101011101010   [Subkey: 11]
          - Input Half:       10100110100111010101000101010000
          - S-Box Result:     01000000001101101001101010011111   [per every group of 4-bits]
          - Split Into Two:   0100000000110110 [L] 1001101010011111 [R]
          - Swap Halves:      10011010100111110100000000110110
          - Bit Inversion:    01100101011000001011111111001001
          - Compressed Key:   11000001111011011110111010100101   [done by compression P-Box]
          - XOR with Key:     10100100100011010101000101101100

          - FUNCTION OUTPUT:  10100100100011010101000101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101111110011001100100101100

       - FUNCTION OUTPUT:          10100100100011010101000101101100

       - Left XOR FUNCTION OUTPUT: 11011001011101001100100001000000

       - Next Round Left 32 Bits:  10100110100111010101000101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001011101001100100001000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110100111010101000101010000

       - Right 32 Bits:            11011001011101001100100001000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011011110111100101010001011001010100100001010001   [Subkey: 10]
          - Input Half:       11011001011101001100100001000000
          - S-Box Result:     01100011110101110101001001111111   [per every group of 4-bits]
          - Split Into Two:   0110001111010111 [L] 0101001001111111 [R]
          - Swap Halves:      01010010011111110110001111010111
          - Bit Inversion:    10101101100000001001110000101000
          - Compressed Key:   01000111111110100111101000000010   [done by compression P-Box]
          - XOR with Key:     11101010011110101110011000101010

          - FUNCTION OUTPUT:  11101010011110101110011000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110100111010101000101010000

       - FUNCTION OUTPUT:          11101010011110101110011000101010

       - Left XOR FUNCTION OUTPUT: 01001100111001111011011101111010

       - Next Round Left 32 Bits:  11011001011101001100100001000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100111001111011011101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001011101001100100001000000

       - Right 32 Bits:            01001100111001111011011101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010111110010000100001101010111010011010101101111010   [Subkey: 9]
          - Input Half:       01001100111001111011011101111010
          - S-Box Result:     01110101110011011000110111010100   [per every group of 4-bits]
          - Split Into Two:   0111010111001101 [L] 1000110111010100 [R]
          - Swap Halves:      10001101110101000111010111001101
          - Bit Inversion:    01110010001010111000101000110010
          - Compressed Key:   10101101001010011011100110010101   [done by compression P-Box]
          - XOR with Key:     11011111000000100011001110100111

          - FUNCTION OUTPUT:  11011111000000100011001110100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001011101001100100001000000

       - FUNCTION OUTPUT:          11011111000000100011001110100111

       - Left XOR FUNCTION OUTPUT: 00000110011101101111101111100111

       - Next Round Left 32 Bits:  01001100111001111011011101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110011101101111101111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100111001111011011101111010

       - Right 32 Bits:            00000110011101101111101111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100000110111101111001010100010110010101001000   [Subkey: 8]
          - Input Half:       00000110011101101111101111100111
          - S-Box Result:     11110000110100001011100011001101   [per every group of 4-bits]
          - Split Into Two:   1111000011010000 [L] 1011100011001101 [R]
          - Swap Halves:      10111000110011011111000011010000
          - Bit Inversion:    01000111001100100000111100101111
          - Compressed Key:   01001000111010110101101001010100   [done by compression P-Box]
          - XOR with Key:     00001111110110010101010101111011

          - FUNCTION OUTPUT:  00001111110110010101010101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100111001111011011101111010

       - FUNCTION OUTPUT:          00001111110110010101010101111011

       - Left XOR FUNCTION OUTPUT: 01000011001111101110001000000001

       - Next Round Left 32 Bits:  00000110011101101111101111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000011001111101110001000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110011101101111101111100111

       - Right 32 Bits:            01000011001111101110001000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111010101111100100001000011010101110100110101011   [Subkey: 7]
          - Input Half:       01000011001111101110001000000001
          - S-Box Result:     01110001000111001100111011111010   [per every group of 4-bits]
          - Split Into Two:   0111000100011100 [L] 1100111011111010 [R]
          - Swap Halves:      11001110111110100111000100011100
          - Bit Inversion:    00110001000001011000111011100011
          - Compressed Key:   11100101111100000011011100110111   [done by compression P-Box]
          - XOR with Key:     11010100111101011011100111010100

          - FUNCTION OUTPUT:  11010100111101011011100111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110011101101111101111100111

       - FUNCTION OUTPUT:          11010100111101011011100111010100

       - Left XOR FUNCTION OUTPUT: 11010010100000110100001000110011

       - Next Round Left 32 Bits:  01000011001111101110001000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010100000110100001000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011001111101110001000000001

       - Right 32 Bits:            11010010100000110100001000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000010100010101000001101111011110010101000101100101   [Subkey: 6]
          - Input Half:       11010010100000110100001000110011
          - S-Box Result:     01101110001000010111111000010001   [per every group of 4-bits]
          - Split Into Two:   0110111000100001 [L] 0111111000010001 [R]
          - Swap Halves:      01111110000100010110111000100001
          - Bit Inversion:    10000001111011101001000111011110
          - Compressed Key:   10001000010110010111101000011010   [done by compression P-Box]
          - XOR with Key:     00001001101101111110101111000100

          - FUNCTION OUTPUT:  00001001101101111110101111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011001111101110001000000001

       - FUNCTION OUTPUT:          00001001101101111110101111000100

       - Left XOR FUNCTION OUTPUT: 01001010100010010000100111000101

       - Next Round Left 32 Bits:  11010010100000110100001000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010100010010000100111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010100000110100001000110011

       - Right 32 Bits:            01001010100010010000100111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101011011110101110101011111001000010000110101011101001   [Subkey: 5]
          - Input Half:       01001010100010010000100111000101
          - S-Box Result:     01110100001000111111001101011001   [per every group of 4-bits]
          - Split Into Two:   0111010000100011 [L] 1111001101011001 [R]
          - Swap Halves:      11110011010110010111010000100011
          - Bit Inversion:    00001100101001101000101111011100
          - Compressed Key:   10101101111011110100001010100110   [done by compression P-Box]
          - XOR with Key:     10100001010010011100100101111010

          - FUNCTION OUTPUT:  10100001010010011100100101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010100000110100001000110011

       - FUNCTION OUTPUT:          10100001010010011100100101111010

       - Left XOR FUNCTION OUTPUT: 01110011110010101000101101001001

       - Next Round Left 32 Bits:  01001010100010010000100111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011110010101000101101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010100010010000100111000101

       - Right 32 Bits:            01110011110010101000101101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010010000101000101010000011011110111100101010001   [Subkey: 4]
          - Input Half:       01110011110010101000101101001001
          - S-Box Result:     11010001010101000010100001110011   [per every group of 4-bits]
          - Split Into Two:   1101000101010100 [L] 0010100001110011 [R]
          - Swap Halves:      00101000011100111101000101010100
          - Bit Inversion:    11010111100011000010111010101011
          - Compressed Key:   00010001010110100011111000010010   [done by compression P-Box]
          - XOR with Key:     11000110110101100001000010111001

          - FUNCTION OUTPUT:  11000110110101100001000010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010100010010000100111000101

       - FUNCTION OUTPUT:          11000110110101100001000010111001

       - Left XOR FUNCTION OUTPUT: 10001100010111110001100101111100

       - Next Round Left 32 Bits:  01110011110010101000101101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100010111110001100101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011110010101000101101001001

       - Right 32 Bits:            10001100010111110001100101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101010110111101011101010111110010000100001101010   [Subkey: 3]
          - Input Half:       10001100010111110001100101111100
          - S-Box Result:     00100101100110111010001111010101   [per every group of 4-bits]
          - Split Into Two:   0010010110011011 [L] 1010001111010101 [R]
          - Swap Halves:      10100011110101010010010110011011
          - Bit Inversion:    01011100001010101101101001100100
          - Compressed Key:   10000101111111011011100000000101   [done by compression P-Box]
          - XOR with Key:     11011001110101110110001001100001

          - FUNCTION OUTPUT:  11011001110101110110001001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011110010101000101101001001

       - FUNCTION OUTPUT:          11011001110101110110001001100001

       - Left XOR FUNCTION OUTPUT: 10101010000111011110100100101000

       - Next Round Left 32 Bits:  10001100010111110001100101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010000111011110100100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100010111110001100101111100

       - Right 32 Bits:            10101010000111011110100100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 2]
          - Input Half:       10101010000111011110100100101000
          - S-Box Result:     01000100101001101100001111100010   [per every group of 4-bits]
          - Split Into Two:   0100010010100110 [L] 1100001111100010 [R]
          - Swap Halves:      11000011111000100100010010100110
          - Bit Inversion:    00111100000111011011101101011001
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     01111010011101111110100110001111

          - FUNCTION OUTPUT:  01111010011101111110100110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100010111110001100101111100

       - FUNCTION OUTPUT:          01111010011101111110100110001111

       - Left XOR FUNCTION OUTPUT: 11110110001010001111000011110011

       - Next Round Left 32 Bits:  10101010000111011110100100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110001010001111000011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010000111011110100100101000

       - Right 32 Bits:            11110110001010001111000011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 1]
          - Input Half:       11110110001010001111000011110011
          - S-Box Result:     10110000111000101011111110110001   [per every group of 4-bits]
          - Split Into Two:   1011000011100010 [L] 1011111110110001 [R]
          - Swap Halves:      10111111101100011011000011100010
          - Bit Inversion:    01000000010011100100111100011101
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     11100101111001011111100000001001

          - FUNCTION OUTPUT:  11100101111001011111100000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010000111011110100100101000

       - FUNCTION OUTPUT:          11100101111001011111100000001001

       - Left XOR FUNCTION OUTPUT: 01001111111110000001000100100001

       - Next Round Left 32 Bits:  11110110001010001111000011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111111110000001000100100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100111111111000000100010010000111110110001010001111000011110011

 > Decrypted Block:     0100111111111000000100010010000111110110001010001111000011110011


!!!CBC: Previous Ciphertext:                             0010010010011101001100010100000011010110010001101001010110000100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110101101100101001000000110000100100000011011100110010101110111

 > Final Processed Block:                                0110101101100101001000000110000100100000011011100110010101110111



Ciphertext Block 5:                                      1100101001110100010011111100010110101000101100001011010000110111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010011101000100111111000101

       - Right 32 Bits:            10101000101100001011010000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 16]
          - Input Half:       10101000101100001011010000110111
          - S-Box Result:     01000010100011111000011100011101   [per every group of 4-bits]
          - Split Into Two:   0100001010001111 [L] 1000011100011101 [R]
          - Swap Halves:      10000111000111010100001010001111
          - Bit Inversion:    01111000111000101011110101110000
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     00111110100010001110111110100110

          - FUNCTION OUTPUT:  00111110100010001110111110100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010011101000100111111000101

       - FUNCTION OUTPUT:          00111110100010001110111110100110

       - Left XOR FUNCTION OUTPUT: 11110100111111001010000001100011

       - Next Round Left 32 Bits:  10101000101100001011010000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100111111001010000001100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000101100001011010000110111

       - Right 32 Bits:            11110100111111001010000001100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 15]
          - Input Half:       11110100111111001010000001100011
          - S-Box Result:     10110111101101010100111100000001   [per every group of 4-bits]
          - Split Into Two:   1011011110110101 [L] 0100111100000001 [R]
          - Swap Halves:      01001111000000011011011110110101
          - Bit Inversion:    10110000111111100100100001001010
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     00010101010101011111111101011110

          - FUNCTION OUTPUT:  00010101010101011111111101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000101100001011010000110111

       - FUNCTION OUTPUT:          00010101010101011111111101011110

       - Left XOR FUNCTION OUTPUT: 10111101111001010100101101101001

       - Next Round Left 32 Bits:  11110100111111001010000001100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101111001010100101101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100111111001010000001100011

       - Right 32 Bits:            10111101111001010100101101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010100010110010101001000010100010101000001101111   [Subkey: 14]
          - Input Half:       10111101111001010100101101101001
          - S-Box Result:     10000110110010010111100000000011   [per every group of 4-bits]
          - Split Into Two:   1000011011001001 [L] 0111100000000011 [R]
          - Swap Halves:      01111000000000111000011011001001
          - Bit Inversion:    10000111111111000111100100110110
          - Compressed Key:   11001000110010000001101000001111   [done by compression P-Box]
          - XOR with Key:     01001111001101000110001100111001

          - FUNCTION OUTPUT:  01001111001101000110001100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100111111001010000001100011

       - FUNCTION OUTPUT:          01001111001101000110001100111001

       - Left XOR FUNCTION OUTPUT: 10111011110010001100001101011010

       - Next Round Left 32 Bits:  10111101111001010100101101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011110010001100001101011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101111001010100101101101001

       - Right 32 Bits:            10111011110010001100001101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001000011010101110100110101011011110101110101011111001   [Subkey: 13]
          - Input Half:       10111011110010001100001101011010
          - S-Box Result:     10001000010100100101000110010100   [per every group of 4-bits]
          - Split Into Two:   1000100001010010 [L] 0101000110010100 [R]
          - Swap Halves:      01010001100101001000100001010010
          - Bit Inversion:    10101110011010110111011110101101
          - Compressed Key:   10000101111001010111011110100110   [done by compression P-Box]
          - XOR with Key:     00101011100011100000000000001011

          - FUNCTION OUTPUT:  00101011100011100000000000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101111001010100101101101001

       - FUNCTION OUTPUT:          00101011100011100000000000001011

       - Left XOR FUNCTION OUTPUT: 10010110011010110100101101100010

       - Next Round Left 32 Bits:  10111011110010001100001101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110011010110100101101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011110010001100001101011010

       - Right 32 Bits:            10010110011010110100101101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011110010101000101100101010010000101000101010000   [Subkey: 12]
          - Input Half:       10010110011010110100101101100010
          - S-Box Result:     00110000000010000111100000001110   [per every group of 4-bits]
          - Split Into Two:   0011000000001000 [L] 0111100000001110 [R]
          - Swap Halves:      01111000000011100011000000001000
          - Bit Inversion:    10000111111100011100111111110111
          - Compressed Key:   10111101010110010101001000010000   [done by compression P-Box]
          - XOR with Key:     00111010101010001001110111100111

          - FUNCTION OUTPUT:  00111010101010001001110111100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011110010001100001101011010

       - FUNCTION OUTPUT:          00111010101010001001110111100111

       - Left XOR FUNCTION OUTPUT: 10000001011000000101111010111101

       - Next Round Left 32 Bits:  10010110011010110100101101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001011000000101111010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110011010110100101101100010

       - Right 32 Bits:            10000001011000000101111010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111001000010000110101011101001101010110111101011101010   [Subkey: 11]
          - Input Half:       10000001011000000101111010111101
          - S-Box Result:     00101010000011111001110010000110   [per every group of 4-bits]
          - Split Into Two:   0010101000001111 [L] 1001110010000110 [R]
          - Swap Halves:      10011100100001100010101000001111
          - Bit Inversion:    01100011011110011101010111110000
          - Compressed Key:   11000001111011011110111010100101   [done by compression P-Box]
          - XOR with Key:     10100010100101000011101101010101

          - FUNCTION OUTPUT:  10100010100101000011101101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110011010110100101101100010

       - FUNCTION OUTPUT:          10100010100101000011101101010101

       - Left XOR FUNCTION OUTPUT: 00110100111111110111000000110111

       - Next Round Left 32 Bits:  10000001011000000101111010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100111111110111000000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001011000000101111010111101

       - Right 32 Bits:            00110100111111110111000000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011011110111100101010001011001010100100001010001   [Subkey: 10]
          - Input Half:       00110100111111110111000000110111
          - S-Box Result:     00010111101110111101111100011101   [per every group of 4-bits]
          - Split Into Two:   0001011110111011 [L] 1101111100011101 [R]
          - Swap Halves:      11011111000111010001011110111011
          - Bit Inversion:    00100000111000101110100001000100
          - Compressed Key:   01000111111110100111101000000010   [done by compression P-Box]
          - XOR with Key:     01100111000110001001001001000110

          - FUNCTION OUTPUT:  01100111000110001001001001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001011000000101111010111101

       - FUNCTION OUTPUT:          01100111000110001001001001000110

       - Left XOR FUNCTION OUTPUT: 11100110011110001100110011111011

       - Next Round Left 32 Bits:  00110100111111110111000000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110011110001100110011111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100111111110111000000110111

       - Right 32 Bits:            11100110011110001100110011111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010111110010000100001101010111010011010101101111010   [Subkey: 9]
          - Input Half:       11100110011110001100110011111011
          - S-Box Result:     11000000110100100101010110111000   [per every group of 4-bits]
          - Split Into Two:   1100000011010010 [L] 0101010110111000 [R]
          - Swap Halves:      01010101101110001100000011010010
          - Bit Inversion:    10101010010001110011111100101101
          - Compressed Key:   10101101001010011011100110010101   [done by compression P-Box]
          - XOR with Key:     00000111011011101000011010111000

          - FUNCTION OUTPUT:  00000111011011101000011010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100111111110111000000110111

       - FUNCTION OUTPUT:          00000111011011101000011010111000

       - Left XOR FUNCTION OUTPUT: 00110011100100011111011010001111

       - Next Round Left 32 Bits:  11100110011110001100110011111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011100100011111011010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110011110001100110011111011

       - Right 32 Bits:            00110011100100011111011010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100000110111101111001010100010110010101001000   [Subkey: 8]
          - Input Half:       00110011100100011111011010001111
          - S-Box Result:     00010001001110101011000000101011   [per every group of 4-bits]
          - Split Into Two:   0001000100111010 [L] 1011000000101011 [R]
          - Swap Halves:      10110000001010110001000100111010
          - Bit Inversion:    01001111110101001110111011000101
          - Compressed Key:   01001000111010110101101001010100   [done by compression P-Box]
          - XOR with Key:     00000111001111111011010010010001

          - FUNCTION OUTPUT:  00000111001111111011010010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110011110001100110011111011

       - FUNCTION OUTPUT:          00000111001111111011010010010001

       - Left XOR FUNCTION OUTPUT: 11100001010001110111100001101010

       - Next Round Left 32 Bits:  00110011100100011111011010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001010001110111100001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011100100011111011010001111

       - Right 32 Bits:            11100001010001110111100001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111010101111100100001000011010101110100110101011   [Subkey: 7]
          - Input Half:       11100001010001110111100001101010
          - S-Box Result:     11001010011111011101001000000100   [per every group of 4-bits]
          - Split Into Two:   1100101001111101 [L] 1101001000000100 [R]
          - Swap Halves:      11010010000001001100101001111101
          - Bit Inversion:    00101101111110110011010110000010
          - Compressed Key:   11100101111100000011011100110111   [done by compression P-Box]
          - XOR with Key:     11001000000010110000001010110101

          - FUNCTION OUTPUT:  11001000000010110000001010110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011100100011111011010001111

       - FUNCTION OUTPUT:          11001000000010110000001010110101

       - Left XOR FUNCTION OUTPUT: 11111011100110101111010000111010

       - Next Round Left 32 Bits:  11100001010001110111100001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011100110101111010000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001010001110111100001101010

       - Right 32 Bits:            11111011100110101111010000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000010100010101000001101111011110010101000101100101   [Subkey: 6]
          - Input Half:       11111011100110101111010000111010
          - S-Box Result:     10111000001101001011011100010100   [per every group of 4-bits]
          - Split Into Two:   1011100000110100 [L] 1011011100010100 [R]
          - Swap Halves:      10110111000101001011100000110100
          - Bit Inversion:    01001000111010110100011111001011
          - Compressed Key:   10001000010110010111101000011010   [done by compression P-Box]
          - XOR with Key:     11000000101100100011110111010001

          - FUNCTION OUTPUT:  11000000101100100011110111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001010001110111100001101010

       - FUNCTION OUTPUT:          11000000101100100011110111010001

       - Left XOR FUNCTION OUTPUT: 00100001111101010100010110111011

       - Next Round Left 32 Bits:  11111011100110101111010000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001111101010100010110111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011100110101111010000111010

       - Right 32 Bits:            00100001111101010100010110111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101011011110101110101011111001000010000110101011101001   [Subkey: 5]
          - Input Half:       00100001111101010100010110111011
          - S-Box Result:     11101010101110010111100110001000   [per every group of 4-bits]
          - Split Into Two:   1110101010111001 [L] 0111100110001000 [R]
          - Swap Halves:      01111001100010001110101010111001
          - Bit Inversion:    10000110011101110001010101000110
          - Compressed Key:   10101101111011110100001010100110   [done by compression P-Box]
          - XOR with Key:     00101011100110000101011111100000

          - FUNCTION OUTPUT:  00101011100110000101011111100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011100110101111010000111010

       - FUNCTION OUTPUT:          00101011100110000101011111100000

       - Left XOR FUNCTION OUTPUT: 11010000000000101010001111011010

       - Next Round Left 32 Bits:  00100001111101010100010110111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000000000101010001111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001111101010100010110111011

       - Right 32 Bits:            11010000000000101010001111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010010000101000101010000011011110111100101010001   [Subkey: 4]
          - Input Half:       11010000000000101010001111011010
          - S-Box Result:     01101111111111100100000101100100   [per every group of 4-bits]
          - Split Into Two:   0110111111111110 [L] 0100000101100100 [R]
          - Swap Halves:      01000001011001000110111111111110
          - Bit Inversion:    10111110100110111001000000000001
          - Compressed Key:   00010001010110100011111000010010   [done by compression P-Box]
          - XOR with Key:     10101111110000011010111000010011

          - FUNCTION OUTPUT:  10101111110000011010111000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001111101010100010110111011

       - FUNCTION OUTPUT:          10101111110000011010111000010011

       - Left XOR FUNCTION OUTPUT: 10001110001101001110101110101000

       - Next Round Left 32 Bits:  11010000000000101010001111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110001101001110101110101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000000000101010001111011010

       - Right 32 Bits:            10001110001101001110101110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101010110111101011101010111110010000100001101010   [Subkey: 3]
          - Input Half:       10001110001101001110101110101000
          - S-Box Result:     00101100000101111100100001000010   [per every group of 4-bits]
          - Split Into Two:   0010110000010111 [L] 1100100001000010 [R]
          - Swap Halves:      11001000010000100010110000010111
          - Bit Inversion:    00110111101111011101001111101000
          - Compressed Key:   10000101111111011011100000000101   [done by compression P-Box]
          - XOR with Key:     10110010010000000110101111101101

          - FUNCTION OUTPUT:  10110010010000000110101111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000000000101010001111011010

       - FUNCTION OUTPUT:          10110010010000000110101111101101

       - Left XOR FUNCTION OUTPUT: 01100010010000101100100000110111

       - Next Round Left 32 Bits:  10001110001101001110101110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010010000101100100000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110001101001110101110101000

       - Right 32 Bits:            01100010010000101100100000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 2]
          - Input Half:       01100010010000101100100000110111
          - S-Box Result:     00001110011111100101001000011101   [per every group of 4-bits]
          - Split Into Two:   0000111001111110 [L] 0101001000011101 [R]
          - Swap Halves:      01010010000111010000111001111110
          - Bit Inversion:    10101101111000101111000110000001
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     11101011100010001010001101010111

          - FUNCTION OUTPUT:  11101011100010001010001101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110001101001110101110101000

       - FUNCTION OUTPUT:          11101011100010001010001101010111

       - Left XOR FUNCTION OUTPUT: 01100101101111000100100011111111

       - Next Round Left 32 Bits:  01100010010000101100100000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101101111000100100011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010010000101100100000110111

       - Right 32 Bits:            01100101101111000100100011111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 1]
          - Input Half:       01100101101111000100100011111111
          - S-Box Result:     00001001100001010111001010111011   [per every group of 4-bits]
          - Split Into Two:   0000100110000101 [L] 0111001010111011 [R]
          - Swap Halves:      01110010101110110000100110000101
          - Bit Inversion:    10001101010001001111011001111010
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     00101000111011110100000101101110

          - FUNCTION OUTPUT:  00101000111011110100000101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010010000101100100000110111

       - FUNCTION OUTPUT:          00101000111011110100000101101110

       - Left XOR FUNCTION OUTPUT: 01001010101011011000100101011001

       - Next Round Left 32 Bits:  01100101101111000100100011111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010101011011000100101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100101010101101100010010101100101100101101111000100100011111111

 > Decrypted Block:     0100101010101101100010010101100101100101101111000100100011111111


!!!CBC: Previous Ciphertext:                             0110101011111111110110100001100001000101110101110010110110000110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001010010010100110100000100100000011010110110010101111001

 > Final Processed Block:                                0010000001010010010100110100000100100000011010110110010101111001



Ciphertext Block 6:                                      1101111010110101001011110001010001110101011010000010001011100101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011110101101010010111100010100

       - Right 32 Bits:            01110101011010000010001011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 16]
          - Input Half:       01110101011010000010001011100101
          - S-Box Result:     11011001000000101110111011001001   [per every group of 4-bits]
          - Split Into Two:   1101100100000010 [L] 1110111011001001 [R]
          - Swap Halves:      11101110110010011101100100000010
          - Bit Inversion:    00010001001101100010011011111101
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     01010111010111000111010000101011

          - FUNCTION OUTPUT:  01010111010111000111010000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011110101101010010111100010100

       - FUNCTION OUTPUT:          01010111010111000111010000101011

       - Left XOR FUNCTION OUTPUT: 10001001111010010101101100111111

       - Next Round Left 32 Bits:  01110101011010000010001011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001111010010101101100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101011010000010001011100101

       - Right 32 Bits:            10001001111010010101101100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 15]
          - Input Half:       10001001111010010101101100111111
          - S-Box Result:     00100011110000111001100000011011   [per every group of 4-bits]
          - Split Into Two:   0010001111000011 [L] 1001100000011011 [R]
          - Swap Halves:      10011000000110110010001111000011
          - Bit Inversion:    01100111111001001101110000111100
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     11000010010011110110101100101000

          - FUNCTION OUTPUT:  11000010010011110110101100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101011010000010001011100101

       - FUNCTION OUTPUT:          11000010010011110110101100101000

       - Left XOR FUNCTION OUTPUT: 10110111001001110100100111001101

       - Next Round Left 32 Bits:  10001001111010010101101100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111001001110100100111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001111010010101101100111111

       - Right 32 Bits:            10110111001001110100100111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111001010100010110010101001000010100010101000001101111   [Subkey: 14]
          - Input Half:       10110111001001110100100111001101
          - S-Box Result:     10001101111011010111001101010110   [per every group of 4-bits]
          - Split Into Two:   1000110111101101 [L] 0111001101010110 [R]
          - Swap Halves:      01110011010101101000110111101101
          - Bit Inversion:    10001100101010010111001000010010
          - Compressed Key:   11001000110010000001101000001111   [done by compression P-Box]
          - XOR with Key:     01000100011000010110100000011101

          - FUNCTION OUTPUT:  01000100011000010110100000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001111010010101101100111111

       - FUNCTION OUTPUT:          01000100011000010110100000011101

       - Left XOR FUNCTION OUTPUT: 11001101100010000011001100100010

       - Next Round Left 32 Bits:  10110111001001110100100111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101100010000011001100100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111001001110100100111001101

       - Right 32 Bits:            11001101100010000011001100100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00001000011010101110100110101011011110101110101011111001   [Subkey: 13]
          - Input Half:       11001101100010000011001100100010
          - S-Box Result:     01010110001000100001000111101110   [per every group of 4-bits]
          - Split Into Two:   0101011000100010 [L] 0001000111101110 [R]
          - Swap Halves:      00010001111011100101011000100010
          - Bit Inversion:    11101110000100011010100111011101
          - Compressed Key:   10000101111001010111011110100110   [done by compression P-Box]
          - XOR with Key:     01101011111101001101111001111011

          - FUNCTION OUTPUT:  01101011111101001101111001111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111001001110100100111001101

       - FUNCTION OUTPUT:          01101011111101001101111001111011

       - Left XOR FUNCTION OUTPUT: 11011100110100111001011110110110

       - Next Round Left 32 Bits:  11001101100010000011001100100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100110100111001011110110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101100010000011001100100010

       - Right 32 Bits:            11011100110100111001011110110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011110010101000101100101010010000101000101010000   [Subkey: 12]
          - Input Half:       11011100110100111001011110110110
          - S-Box Result:     01100101011000010011110110000000   [per every group of 4-bits]
          - Split Into Two:   0110010101100001 [L] 0011110110000000 [R]
          - Swap Halves:      00111101100000000110010101100001
          - Bit Inversion:    11000010011111111001101010011110
          - Compressed Key:   10111101010110010101001000010000   [done by compression P-Box]
          - XOR with Key:     01111111001001101100100010001110

          - FUNCTION OUTPUT:  01111111001001101100100010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101100010000011001100100010

       - FUNCTION OUTPUT:          01111111001001101100100010001110

       - Left XOR FUNCTION OUTPUT: 10110010101011101111101110101100

       - Next Round Left 32 Bits:  11011100110100111001011110110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010101011101111101110101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100110100111001011110110110

       - Right 32 Bits:            10110010101011101111101110101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11111001000010000110101011101001101010110111101011101010   [Subkey: 11]
          - Input Half:       10110010101011101111101110101100
          - S-Box Result:     10001110010011001011100001000101   [per every group of 4-bits]
          - Split Into Two:   1000111001001100 [L] 1011100001000101 [R]
          - Swap Halves:      10111000010001011000111001001100
          - Bit Inversion:    01000111101110100111000110110011
          - Compressed Key:   11000001111011011110111010100101   [done by compression P-Box]
          - XOR with Key:     10000110010101111001111100010110

          - FUNCTION OUTPUT:  10000110010101111001111100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100110100111001011110110110

       - FUNCTION OUTPUT:          10000110010101111001111100010110

       - Left XOR FUNCTION OUTPUT: 01011010100001000000100010100000

       - Next Round Left 32 Bits:  10110010101011101111101110101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010100001000000100010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010101011101111101110101100

       - Right 32 Bits:            01011010100001000000100010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011011110111100101010001011001010100100001010001   [Subkey: 10]
          - Input Half:       01011010100001000000100010100000
          - S-Box Result:     10010100001001111111001001001111   [per every group of 4-bits]
          - Split Into Two:   1001010000100111 [L] 1111001001001111 [R]
          - Swap Halves:      11110010010011111001010000100111
          - Bit Inversion:    00001101101100000110101111011000
          - Compressed Key:   01000111111110100111101000000010   [done by compression P-Box]
          - XOR with Key:     01001010010010100001000111011010

          - FUNCTION OUTPUT:  01001010010010100001000111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010101011101111101110101100

       - FUNCTION OUTPUT:          01001010010010100001000111011010

       - Left XOR FUNCTION OUTPUT: 11111000111001001110101001110110

       - Next Round Left 32 Bits:  01011010100001000000100010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000111001001110101001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010100001000000100010100000

       - Right 32 Bits:            11111000111001001110101001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101010111110010000100001101010111010011010101101111010   [Subkey: 9]
          - Input Half:       11111000111001001110101001110110
          - S-Box Result:     10110010110001111100010011010000   [per every group of 4-bits]
          - Split Into Two:   1011001011000111 [L] 1100010011010000 [R]
          - Swap Halves:      11000100110100001011001011000111
          - Bit Inversion:    00111011001011110100110100111000
          - Compressed Key:   10101101001010011011100110010101   [done by compression P-Box]
          - XOR with Key:     10010110000001101111010010101101

          - FUNCTION OUTPUT:  10010110000001101111010010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010100001000000100010100000

       - FUNCTION OUTPUT:          10010110000001101111010010101101

       - Left XOR FUNCTION OUTPUT: 11001100100000101111110000001101

       - Next Round Left 32 Bits:  11111000111001001110101001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100100000101111110000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000111001001110101001110110

       - Right 32 Bits:            11001100100000101111110000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100000110111101111001010100010110010101001000   [Subkey: 8]
          - Input Half:       11001100100000101111110000001101
          - S-Box Result:     01010101001011101011010111110110   [per every group of 4-bits]
          - Split Into Two:   0101010100101110 [L] 1011010111110110 [R]
          - Swap Halves:      10110101111101100101010100101110
          - Bit Inversion:    01001010000010011010101011010001
          - Compressed Key:   01001000111010110101101001010100   [done by compression P-Box]
          - XOR with Key:     00000010111000101111000010000101

          - FUNCTION OUTPUT:  00000010111000101111000010000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000111001001110101001110110

       - FUNCTION OUTPUT:          00000010111000101111000010000101

       - Left XOR FUNCTION OUTPUT: 11111010000001100001101011110011

       - Next Round Left 32 Bits:  11001100100000101111110000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010000001100001101011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100100000101111110000001101

       - Right 32 Bits:            11111010000001100001101011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111010111010101111100100001000011010101110100110101011   [Subkey: 7]
          - Input Half:       11111010000001100001101011110011
          - S-Box Result:     10110100111100001010010010110001   [per every group of 4-bits]
          - Split Into Two:   1011010011110000 [L] 1010010010110001 [R]
          - Swap Halves:      10100100101100011011010011110000
          - Bit Inversion:    01011011010011100100101100001111
          - Compressed Key:   11100101111100000011011100110111   [done by compression P-Box]
          - XOR with Key:     10111110101111100111110000111000

          - FUNCTION OUTPUT:  10111110101111100111110000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100100000101111110000001101

       - FUNCTION OUTPUT:          10111110101111100111110000111000

       - Left XOR FUNCTION OUTPUT: 01110010001111001000000000110101

       - Next Round Left 32 Bits:  11111010000001100001101011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010001111001000000000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010000001100001101011110011

       - Right 32 Bits:            01110010001111001000000000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000010100010101000001101111011110010101000101100101   [Subkey: 6]
          - Input Half:       01110010001111001000000000110101
          - S-Box Result:     11011110000101010010111100011001   [per every group of 4-bits]
          - Split Into Two:   1101111000010101 [L] 0010111100011001 [R]
          - Swap Halves:      00101111000110011101111000010101
          - Bit Inversion:    11010000111001100010000111101010
          - Compressed Key:   10001000010110010111101000011010   [done by compression P-Box]
          - XOR with Key:     01011000101111110101101111110000

          - FUNCTION OUTPUT:  01011000101111110101101111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010000001100001101011110011

       - FUNCTION OUTPUT:          01011000101111110101101111110000

       - Left XOR FUNCTION OUTPUT: 10100010101110010100000100000011

       - Next Round Left 32 Bits:  01110010001111001000000000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010101110010100000100000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010001111001000000000110101

       - Right 32 Bits:            10100010101110010100000100000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101011011110101110101011111001000010000110101011101001   [Subkey: 5]
          - Input Half:       10100010101110010100000100000011
          - S-Box Result:     01001110100000110111101011110001   [per every group of 4-bits]
          - Split Into Two:   0100111010000011 [L] 0111101011110001 [R]
          - Swap Halves:      01111010111100010100111010000011
          - Bit Inversion:    10000101000011101011000101111100
          - Compressed Key:   10101101111011110100001010100110   [done by compression P-Box]
          - XOR with Key:     00101000111000011111001111011010

          - FUNCTION OUTPUT:  00101000111000011111001111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010001111001000000000110101

       - FUNCTION OUTPUT:          00101000111000011111001111011010

       - Left XOR FUNCTION OUTPUT: 01011010110111010111001111101111

       - Next Round Left 32 Bits:  10100010101110010100000100000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010110111010111001111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010101110010100000100000011

       - Right 32 Bits:            01011010110111010111001111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101010010000101000101010000011011110111100101010001   [Subkey: 4]
          - Input Half:       01011010110111010111001111101111
          - S-Box Result:     10010100011001101101000111001011   [per every group of 4-bits]
          - Split Into Two:   1001010001100110 [L] 1101000111001011 [R]
          - Swap Halves:      11010001110010111001010001100110
          - Bit Inversion:    00101110001101000110101110011001
          - Compressed Key:   00010001010110100011111000010010   [done by compression P-Box]
          - XOR with Key:     00111111011011100101010110001011

          - FUNCTION OUTPUT:  00111111011011100101010110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010101110010100000100000011

       - FUNCTION OUTPUT:          00111111011011100101010110001011

       - Left XOR FUNCTION OUTPUT: 10011101110101110001010010001000

       - Next Round Left 32 Bits:  01011010110111010111001111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101110101110001010010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010110111010111001111101111

       - Right 32 Bits:            10011101110101110001010010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101001101010110111101011101010111110010000100001101010   [Subkey: 3]
          - Input Half:       10011101110101110001010010001000
          - S-Box Result:     00110110011011011010011100100010   [per every group of 4-bits]
          - Split Into Two:   0011011001101101 [L] 1010011100100010 [R]
          - Swap Halves:      10100111001000100011011001101101
          - Bit Inversion:    01011000110111011100100110010010
          - Compressed Key:   10000101111111011011100000000101   [done by compression P-Box]
          - XOR with Key:     11011101001000000111000110010111

          - FUNCTION OUTPUT:  11011101001000000111000110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010110111010111001111101111

       - FUNCTION OUTPUT:          11011101001000000111000110010111

       - Left XOR FUNCTION OUTPUT: 10000111111111010000001001111000

       - Next Round Left 32 Bits:  10011101110101110001010010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111111111010000001001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101110101110001010010001000

       - Right 32 Bits:            10000111111111010000001001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001011001010100100001010001010100000110111101111001   [Subkey: 2]
          - Input Half:       10000111111111010000001001111000
          - S-Box Result:     00101101101101101111111011010010   [per every group of 4-bits]
          - Split Into Two:   0010110110110110 [L] 1111111011010010 [R]
          - Swap Halves:      11111110110100100010110110110110
          - Bit Inversion:    00000001001011011101001001001001
          - Compressed Key:   01000110011010100101001011010110   [done by compression P-Box]
          - XOR with Key:     01000111010001111000000010011111

          - FUNCTION OUTPUT:  01000111010001111000000010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101110101110001010010001000

       - FUNCTION OUTPUT:          01000111010001111000000010011111

       - Left XOR FUNCTION OUTPUT: 11011010100100001001010000010111

       - Next Round Left 32 Bits:  10000111111111010000001001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010100100001001010000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111111111010000001001111000

       - Right 32 Bits:            11011010100100001001010000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101010111010011010101101111010111010101111100100001000   [Subkey: 1]
          - Input Half:       11011010100100001001010000010111
          - S-Box Result:     01100100001111110011011110101101   [per every group of 4-bits]
          - Split Into Two:   0110010000111111 [L] 0011011110101101 [R]
          - Swap Halves:      00110111101011010110010000111111
          - Bit Inversion:    11001000010100101001101111000000
          - Compressed Key:   10100101101010111011011100010100   [done by compression P-Box]
          - XOR with Key:     01101101111110010010110011010100

          - FUNCTION OUTPUT:  01101101111110010010110011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111111111010000001001111000

       - FUNCTION OUTPUT:          01101101111110010010110011010100

       - Left XOR FUNCTION OUTPUT: 11101010000001000010111010101100

       - Next Round Left 32 Bits:  11011010100100001001010000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010000001000010111010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110101000000100001011101010110011011010100100001001010000010111

 > Decrypted Block:     1110101000000100001011101010110011011010100100001001010000010111


!!!CBC: Previous Ciphertext:                             1100101001110100010011111100010110101000101100001011010000110111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001110000011000010110100101110010001000000010000000100000

 > Final Processed Block:                                0010000001110000011000010110100101110010001000000010000000100000


FINAL PROCESSED DATA BLOCKS: 0100100001100101011011000110110001101111001000000111001101100101,0111001001110110011001010111001000101100001000000100100100100000,0111011101101111011101010110110001100100001000000110110001101001,0110101101100101001000000110000100100000011011100110010101110111,0010000001010010010100110100000100100000011010110110010101111001,0010000001110000011000010110100101110010001000000010000000100000,

BLOCKS IN ASCII:             Hello server, I would like a new RSA key pair   

