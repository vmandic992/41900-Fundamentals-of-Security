Triple DES Capture

168-bit key: HNbGwrNnKGmtHxRoegmHP

3 x 56-bit DES keys: HNbGwrN, nKGmtHx, RoegmHP

Initialization Vector: N/A (Using ECB)

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: RoegmHP
In Binary:  01010010011011110110010101100111011011010100100001010000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01011011001000010011010100110001001001010110111101011111
Subkey 2  : 01001001101111011001010110011101101101010010000101000001
Subkey 3  : 01101100100001001101010011000100100101011011110101111101
Subkey 4  : 00100110111101100101011001110110110101001000010100000101
Subkey 5  : 10110010000100110101001100010010010101101111010111110101
Subkey 6  : 10011011110110010101100111011011010100100001010000010100
Subkey 7  : 11001000010011010100110001001001010110111101011111010110
Subkey 8  : 01101111011001010110011101101101010010000101000001010010
Subkey 9  : 00100001001101010011000100100101011011110101111101011011
Subkey 10 : 10111101100101011001110110110101001000010100000101001001
Subkey 11 : 10000100110101001100010010010101101111010111110101101100
Subkey 12 : 11110110010101100111011011010100100001010000010100100110
Subkey 13 : 00010011010100110001001001010110111101011111010110110010
Subkey 14 : 11011001010110011101101101010010000101000001010010011011
Subkey 15 : 01001101010011000100100101011011110101111101011011001000
Subkey 16 : 01100101011001110110110101001000010100000101001001101111

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ??/åDÏ»1êUÒa[	?Äý??é?É	13_bò\§
[êÕàï??Èný?9

Data padded with spaces : ??/åDÏ»1êUÒa[	?Äý??é?É	13_bò\§
[êÕàï??Èný?9[Padded with '0' spaces]

Data in ASCII           : 139,150,47,229,68,207,187,49,234,85,210,97,91,9,153,196,253,150,150,233,137,201,9,49,51,95,98,242,20,92,167,10,3,12,91,234,1,213,224,239,156,150,200,110,253,1,134,57,

Data in Binary          : 10001011,10010110,00101111,11100101,01000100,11001111,10111011,00110001,11101010,01010101,11010010,01100001,01011011,00001001,10011001,11000100,11111101,10010110,10010110,11101001,10001001,11001001,00001001,00110001,00110011,01011111,01100010,11110010,00010100,01011100,10100111,00001010,00000011,00001100,01011011,11101010,00000001,11010101,11100000,11101111,10011100,10010110,11001000,01101110,11111101,00000001,10000110,00111001,

Data in 64-bit Blocks   : 1000101110010110001011111110010101000100110011111011101100110001,1110101001010101110100100110000101011011000010011001100111000100,1111110110010110100101101110100110001001110010010000100100110001,0011001101011111011000101111001000010100010111001010011100001010,0000001100001100010110111110101000000001110101011110000011101111,1001110010010110110010000110111011111101000000011000011000111001,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 1000101110010110001011111110010101000100110011111011101100110001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100101100010111111100101

       - Right 32 Bits:            01000100110011111011101100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011001110110110101001000010100000101001001101111   [Subkey: 16]
          - Input Half:       01000100110011111011101100110001
          - S-Box Result:     01110111010110111000100000011010   [per every group of 4-bits]
          - Split Into Two:   0111011101011011 [L] 1000100000011010 [R]
          - Swap Halves:      10001000000110100111011101011011
          - Bit Inversion:    01110111111001011000100010100100
          - Compressed Key:   00010110111010000001001010001111   [done by compression P-Box]
          - XOR with Key:     01100001000011011001101000101011

          - FUNCTION OUTPUT:  01100001000011011001101000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100101100010111111100101

       - FUNCTION OUTPUT:          01100001000011011001101000101011

       - Left XOR FUNCTION OUTPUT: 11101010100110111011010111001110

       - Next Round Left 32 Bits:  01000100110011111011101100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010100110111011010111001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100110011111011101100110001

       - Right 32 Bits:            11101010100110111011010111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010011000100100101011011110101111101011011001000   [Subkey: 15]
          - Input Half:       11101010100110111011010111001110
          - S-Box Result:     11000100001110001000100101011100   [per every group of 4-bits]
          - Split Into Two:   1100010000111000 [L] 1000100101011100 [R]
          - Swap Halves:      10001001010111001100010000111000
          - Bit Inversion:    01110110101000110011101111000111
          - Compressed Key:   10010011011010101101111111100100   [done by compression P-Box]
          - XOR with Key:     11100101110010011110010000100011

          - FUNCTION OUTPUT:  11100101110010011110010000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100110011111011101100110001

       - FUNCTION OUTPUT:          11100101110010011110010000100011

       - Left XOR FUNCTION OUTPUT: 10100001000001100101111100010010

       - Next Round Left 32 Bits:  11101010100110111011010111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001000001100101111100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010100110111011010111001110

       - Right 32 Bits:            10100001000001100101111100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010110011101101101010010000101000001010010011011   [Subkey: 14]
          - Input Half:       10100001000001100101111100010010
          - S-Box Result:     01001010111100001001101110101110   [per every group of 4-bits]
          - Split Into Two:   0100101011110000 [L] 1001101110101110 [R]
          - Swap Halves:      10011011101011100100101011110000
          - Bit Inversion:    01100100010100011011010100001111
          - Compressed Key:   11001001011110100000000001100111   [done by compression P-Box]
          - XOR with Key:     10101101001010111011010101101000

          - FUNCTION OUTPUT:  10101101001010111011010101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010100110111011010111001110

       - FUNCTION OUTPUT:          10101101001010111011010101101000

       - Left XOR FUNCTION OUTPUT: 01000111101100000000000010100110

       - Next Round Left 32 Bits:  10100001000001100101111100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111101100000000000010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001000001100101111100010010

       - Right 32 Bits:            01000111101100000000000010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011010100110001001001010110111101011111010110110010   [Subkey: 13]
          - Input Half:       01000111101100000000000010100110
          - S-Box Result:     01111101100011111111111101000000   [per every group of 4-bits]
          - Split Into Two:   0111110110001111 [L] 1111111101000000 [R]
          - Swap Halves:      11111111010000000111110110001111
          - Bit Inversion:    00000000101111111000001001110000
          - Compressed Key:   01101000000110101011101101110001   [done by compression P-Box]
          - XOR with Key:     01101000101001010011100100000001

          - FUNCTION OUTPUT:  01101000101001010011100100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001000001100101111100010010

       - FUNCTION OUTPUT:          01101000101001010011100100000001

       - Left XOR FUNCTION OUTPUT: 11001001101000110110011000010011

       - Next Round Left 32 Bits:  01000111101100000000000010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001101000110110011000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111101100000000000010100110

       - Right 32 Bits:            11001001101000110110011000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110010101100111011011010100100001010000010100100110   [Subkey: 12]
          - Input Half:       11001001101000110110011000010011
          - S-Box Result:     01010011010000010000000010100001   [per every group of 4-bits]
          - Split Into Two:   0101001101000001 [L] 0000000010100001 [R]
          - Swap Halves:      00000000101000010101001101000001
          - Bit Inversion:    11111111010111101010110010111110
          - Compressed Key:   01111010110111101000100001011001   [done by compression P-Box]
          - XOR with Key:     10000101100000000010010011100111

          - FUNCTION OUTPUT:  10000101100000000010010011100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111101100000000000010100110

       - FUNCTION OUTPUT:          10000101100000000010010011100111

       - Left XOR FUNCTION OUTPUT: 11000010001100000010010001000001

       - Next Round Left 32 Bits:  11001001101000110110011000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010001100000010010001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001101000110110011000010011

       - Right 32 Bits:            11000010001100000010010001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100110101001100010010010101101111010111110101101100   [Subkey: 11]
          - Input Half:       11000010001100000010010001000001
          - S-Box Result:     01011110000111111110011101111010   [per every group of 4-bits]
          - Split Into Two:   0101111000011111 [L] 1110011101111010 [R]
          - Swap Halves:      11100111011110100101111000011111
          - Bit Inversion:    00011000100001011010000111100000
          - Compressed Key:   00011010010001101110101001011100   [done by compression P-Box]
          - XOR with Key:     00000010110000110100101110111100

          - FUNCTION OUTPUT:  00000010110000110100101110111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001101000110110011000010011

       - FUNCTION OUTPUT:          00000010110000110100101110111100

       - Left XOR FUNCTION OUTPUT: 11001011011000000010110110101111

       - Next Round Left 32 Bits:  11000010001100000010010001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011011000000010110110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010001100000010010001000001

       - Right 32 Bits:            11001011011000000010110110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100101011001110110110101001000010100000101001001   [Subkey: 10]
          - Input Half:       11001011011000000010110110101111
          - S-Box Result:     01011000000011111110011001001011   [per every group of 4-bits]
          - Split Into Two:   0101100000001111 [L] 1110011001001011 [R]
          - Swap Halves:      11100110010010110101100000001111
          - Bit Inversion:    00011001101101001010011111110000
          - Compressed Key:   11011010001101110110101000010110   [done by compression P-Box]
          - XOR with Key:     11000011100000111100110111100110

          - FUNCTION OUTPUT:  11000011100000111100110111100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010001100000010010001000001

       - FUNCTION OUTPUT:          11000011100000111100110111100110

       - Left XOR FUNCTION OUTPUT: 00000001101100111110100110100111

       - Next Round Left 32 Bits:  11001011011000000010110110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001101100111110100110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011011000000010110110101111

       - Right 32 Bits:            00000001101100111110100110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001101010011000100100101011011110101111101011011   [Subkey: 9]
          - Input Half:       00000001101100111110100110100111
          - S-Box Result:     11111010100000011100001101001101   [per every group of 4-bits]
          - Split Into Two:   1111101010000001 [L] 1100001101001101 [R]
          - Swap Halves:      11000011010011011111101010000001
          - Bit Inversion:    00111100101100100000010101111110
          - Compressed Key:   00001110100100010111111011010111   [done by compression P-Box]
          - XOR with Key:     00110010001000110111101110101001

          - FUNCTION OUTPUT:  00110010001000110111101110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011011000000010110110101111

       - FUNCTION OUTPUT:          00110010001000110111101110101001

       - Left XOR FUNCTION OUTPUT: 11111001010000110101011000000110

       - Next Round Left 32 Bits:  00000001101100111110100110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001010000110101011000000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001101100111110100110100111

       - Right 32 Bits:            11111001010000110101011000000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011001010110011101101101010010000101000001010010   [Subkey: 8]
          - Input Half:       11111001010000110101011000000110
          - S-Box Result:     10110011011100011001000011110000   [per every group of 4-bits]
          - Split Into Two:   1011001101110001 [L] 1001000011110000 [R]
          - Swap Halves:      10010000111100001011001101110001
          - Bit Inversion:    01101111000011110100110010001110
          - Compressed Key:   10110110110010010101001000000001   [done by compression P-Box]
          - XOR with Key:     11011001110001100001111010001111

          - FUNCTION OUTPUT:  11011001110001100001111010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001101100111110100110100111

       - FUNCTION OUTPUT:          11011001110001100001111010001111

       - Left XOR FUNCTION OUTPUT: 11011000011101011111011100101000

       - Next Round Left 32 Bits:  11111001010000110101011000000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000011101011111011100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001010000110101011000000110

       - Right 32 Bits:            11011000011101011111011100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000010011010100110001001001010110111101011111010110   [Subkey: 7]
          - Input Half:       11011000011101011111011100101000
          - S-Box Result:     01100010110110011011110111100010   [per every group of 4-bits]
          - Split Into Two:   0110001011011001 [L] 1011110111100010 [R]
          - Swap Halves:      10111101111000100110001011011001
          - Bit Inversion:    01000010000111011001110100100110
          - Compressed Key:   10000011011010000101111111111001   [done by compression P-Box]
          - XOR with Key:     11000001011101011100001011011111

          - FUNCTION OUTPUT:  11000001011101011100001011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001010000110101011000000110

       - FUNCTION OUTPUT:          11000001011101011100001011011111

       - Left XOR FUNCTION OUTPUT: 00111000001101101001010011011001

       - Next Round Left 32 Bits:  11011000011101011111011100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000001101101001010011011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000011101011111011100101000

       - Right 32 Bits:            00111000001101101001010011011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011110110010101100111011011010100100001010000010100   [Subkey: 6]
          - Input Half:       00111000001101101001010011011001
          - S-Box Result:     00010010000100000011011101100011   [per every group of 4-bits]
          - Split Into Two:   0001001000010000 [L] 0011011101100011 [R]
          - Swap Halves:      00110111011000110001001000010000
          - Bit Inversion:    11001000100111001110110111101111
          - Compressed Key:   11101001011111100101010001001000   [done by compression P-Box]
          - XOR with Key:     00100001111000101011100110100111

          - FUNCTION OUTPUT:  00100001111000101011100110100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000011101011111011100101000

       - FUNCTION OUTPUT:          00100001111000101011100110100111

       - Left XOR FUNCTION OUTPUT: 11111001100101110100111010001111

       - Next Round Left 32 Bits:  00111000001101101001010011011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001100101110100111010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000001101101001010011011001

       - Right 32 Bits:            11111001100101110100111010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110010000100110101001100010010010101101111010111110101   [Subkey: 5]
          - Input Half:       11111001100101110100111010001111
          - S-Box Result:     10110011001111010111110000101011   [per every group of 4-bits]
          - Split Into Two:   1011001100111101 [L] 0111110000101011 [R]
          - Swap Halves:      01111100001010111011001100111101
          - Bit Inversion:    10000011110101000100110011000010
          - Compressed Key:   01101000010100100001011101111010   [done by compression P-Box]
          - XOR with Key:     11101011100001100101101110111000

          - FUNCTION OUTPUT:  11101011100001100101101110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000001101101001010011011001

       - FUNCTION OUTPUT:          11101011100001100101101110111000

       - Left XOR FUNCTION OUTPUT: 11010011101100001100111101100001

       - Next Round Left 32 Bits:  11111001100101110100111010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011101100001100111101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001100101110100111010001111

       - Right 32 Bits:            11010011101100001100111101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100110111101100101011001110110110101001000010100000101   [Subkey: 4]
          - Input Half:       11010011101100001100111101100001
          - S-Box Result:     01100001100011110101101100001010   [per every group of 4-bits]
          - Split Into Two:   0110000110001111 [L] 0101101100001010 [R]
          - Swap Halves:      01011011000010100110000110001111
          - Bit Inversion:    10100100111101011001111001110000
          - Compressed Key:   00111110010110111001000101011010   [done by compression P-Box]
          - XOR with Key:     10011010101011100000111100101010

          - FUNCTION OUTPUT:  10011010101011100000111100101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001100101110100111010001111

       - FUNCTION OUTPUT:          10011010101011100000111100101010

       - Left XOR FUNCTION OUTPUT: 01100011001110010100000110100101

       - Next Round Left 32 Bits:  11010011101100001100111101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011001110010100000110100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011101100001100111101100001

       - Right 32 Bits:            01100011001110010100000110100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100100001001101010011000100100101011011110101111101   [Subkey: 3]
          - Input Half:       01100011001110010100000110100101
          - S-Box Result:     00000001000100110111101001001001   [per every group of 4-bits]
          - Split Into Two:   0000000100010011 [L] 0111101001001001 [R]
          - Swap Halves:      01111010010010010000000100010011
          - Bit Inversion:    10000101101101101111111011101100
          - Compressed Key:   10010010010111001000100101011110   [done by compression P-Box]
          - XOR with Key:     00010111111010100111011110110010

          - FUNCTION OUTPUT:  00010111111010100111011110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011101100001100111101100001

       - FUNCTION OUTPUT:          00010111111010100111011110110010

       - Left XOR FUNCTION OUTPUT: 11000100010110101011100011010011

       - Next Round Left 32 Bits:  01100011001110010100000110100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100010110101011100011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011001110010100000110100101

       - Right 32 Bits:            11000100010110101011100011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001101111011001010110011101101101010010000101000001   [Subkey: 2]
          - Input Half:       11000100010110101011100011010011
          - S-Box Result:     01010111100101001000001001100001   [per every group of 4-bits]
          - Split Into Two:   0101011110010100 [L] 1000001001100001 [R]
          - Swap Halves:      10000010011000010101011110010100
          - Bit Inversion:    01111101100111101010100001101011
          - Compressed Key:   10001111000101101110100000010010   [done by compression P-Box]
          - XOR with Key:     11110010100010000100000001111001

          - FUNCTION OUTPUT:  11110010100010000100000001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011001110010100000110100101

       - FUNCTION OUTPUT:          11110010100010000100000001111001

       - Left XOR FUNCTION OUTPUT: 10010001101100010000000111011100

       - Next Round Left 32 Bits:  11000100010110101011100011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001101100010000000111011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100010110101011100011010011

       - Right 32 Bits:            10010001101100010000000111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011001000010011010100110001001001010110111101011111   [Subkey: 1]
          - Input Half:       10010001101100010000000111011100
          - S-Box Result:     00111010100010101111101001100101   [per every group of 4-bits]
          - Split Into Two:   0011101010001010 [L] 1111101001100101 [R]
          - Swap Halves:      11111010011001010011101010001010
          - Bit Inversion:    00000101100110101100010101110101
          - Compressed Key:   11100100100100110110101011011111   [done by compression P-Box]
          - XOR with Key:     11100001000010011010111110101010

          - FUNCTION OUTPUT:  11100001000010011010111110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100010110101011100011010011

       - FUNCTION OUTPUT:          11100001000010011010111110101010

       - Left XOR FUNCTION OUTPUT: 00100101010100110001011101111001

       - Next Round Left 32 Bits:  10010001101100010000000111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101010100110001011101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010010101010011000101110111100110010001101100010000000111011100

 > Processed Block:     0010010101010011000101110111100110010001101100010000000111011100


Ciphertext Block 2: 1110101001010101110100100110000101011011000010011001100111000100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010010101011101001001100001

       - Right 32 Bits:            01011011000010011001100111000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011001110110110101001000010100000101001001101111   [Subkey: 16]
          - Input Half:       01011011000010011001100111000100
          - S-Box Result:     10011000111100110011001101010111   [per every group of 4-bits]
          - Split Into Two:   1001100011110011 [L] 0011001101010111 [R]
          - Swap Halves:      00110011010101111001100011110011
          - Bit Inversion:    11001100101010000110011100001100
          - Compressed Key:   00010110111010000001001010001111   [done by compression P-Box]
          - XOR with Key:     11011010010000000111010110000011

          - FUNCTION OUTPUT:  11011010010000000111010110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010010101011101001001100001

       - FUNCTION OUTPUT:          11011010010000000111010110000011

       - Left XOR FUNCTION OUTPUT: 00110000000101011010011111100010

       - Next Round Left 32 Bits:  01011011000010011001100111000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000000101011010011111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011000010011001100111000100

       - Right 32 Bits:            00110000000101011010011111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010011000100100101011011110101111101011011001000   [Subkey: 15]
          - Input Half:       00110000000101011010011111100010
          - S-Box Result:     00011111101010010100110111001110   [per every group of 4-bits]
          - Split Into Two:   0001111110101001 [L] 0100110111001110 [R]
          - Swap Halves:      01001101110011100001111110101001
          - Bit Inversion:    10110010001100011110000001010110
          - Compressed Key:   10010011011010101101111111100100   [done by compression P-Box]
          - XOR with Key:     00100001010110110011111110110010

          - FUNCTION OUTPUT:  00100001010110110011111110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011000010011001100111000100

       - FUNCTION OUTPUT:          00100001010110110011111110110010

       - Left XOR FUNCTION OUTPUT: 01111010010100101010011001110110

       - Next Round Left 32 Bits:  00110000000101011010011111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010010100101010011001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000000101011010011111100010

       - Right 32 Bits:            01111010010100101010011001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010110011101101101010010000101000001010010011011   [Subkey: 14]
          - Input Half:       01111010010100101010011001110110
          - S-Box Result:     11010100100111100100000011010000   [per every group of 4-bits]
          - Split Into Two:   1101010010011110 [L] 0100000011010000 [R]
          - Swap Halves:      01000000110100001101010010011110
          - Bit Inversion:    10111111001011110010101101100001
          - Compressed Key:   11001001011110100000000001100111   [done by compression P-Box]
          - XOR with Key:     01110110010101010010101100000110

          - FUNCTION OUTPUT:  01110110010101010010101100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000000101011010011111100010

       - FUNCTION OUTPUT:          01110110010101010010101100000110

       - Left XOR FUNCTION OUTPUT: 01000110010000001000110011100100

       - Next Round Left 32 Bits:  01111010010100101010011001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110010000001000110011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010010100101010011001110110

       - Right 32 Bits:            01000110010000001000110011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011010100110001001001010110111101011111010110110010   [Subkey: 13]
          - Input Half:       01000110010000001000110011100100
          - S-Box Result:     01110000011111110010010111000111   [per every group of 4-bits]
          - Split Into Two:   0111000001111111 [L] 0010010111000111 [R]
          - Swap Halves:      00100101110001110111000001111111
          - Bit Inversion:    11011010001110001000111110000000
          - Compressed Key:   01101000000110101011101101110001   [done by compression P-Box]
          - XOR with Key:     10110010001000100011010011110001

          - FUNCTION OUTPUT:  10110010001000100011010011110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010010100101010011001110110

       - FUNCTION OUTPUT:          10110010001000100011010011110001

       - Left XOR FUNCTION OUTPUT: 11001000011100001001001010000111

       - Next Round Left 32 Bits:  01000110010000001000110011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000011100001001001010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110010000001000110011100100

       - Right 32 Bits:            11001000011100001001001010000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110010101100111011011010100100001010000010100100110   [Subkey: 12]
          - Input Half:       11001000011100001001001010000111
          - S-Box Result:     01010010110111110011111000101101   [per every group of 4-bits]
          - Split Into Two:   0101001011011111 [L] 0011111000101101 [R]
          - Swap Halves:      00111110001011010101001011011111
          - Bit Inversion:    11000001110100101010110100100000
          - Compressed Key:   01111010110111101000100001011001   [done by compression P-Box]
          - XOR with Key:     10111011000011000010010101111001

          - FUNCTION OUTPUT:  10111011000011000010010101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110010000001000110011100100

       - FUNCTION OUTPUT:          10111011000011000010010101111001

       - Left XOR FUNCTION OUTPUT: 11111101010011001010100110011101

       - Next Round Left 32 Bits:  11001000011100001001001010000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101010011001010100110011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000011100001001001010000111

       - Right 32 Bits:            11111101010011001010100110011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100110101001100010010010101101111010111110101101100   [Subkey: 11]
          - Input Half:       11111101010011001010100110011101
          - S-Box Result:     10110110011101010100001100110110   [per every group of 4-bits]
          - Split Into Two:   1011011001110101 [L] 0100001100110110 [R]
          - Swap Halves:      01000011001101101011011001110101
          - Bit Inversion:    10111100110010010100100110001010
          - Compressed Key:   00011010010001101110101001011100   [done by compression P-Box]
          - XOR with Key:     10100110100011111010001111010110

          - FUNCTION OUTPUT:  10100110100011111010001111010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000011100001001001010000111

       - FUNCTION OUTPUT:          10100110100011111010001111010110

       - Left XOR FUNCTION OUTPUT: 01101110111111110011000101010001

       - Next Round Left 32 Bits:  11111101010011001010100110011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110111111110011000101010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101010011001010100110011101

       - Right 32 Bits:            01101110111111110011000101010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100101011001110110110101001000010100000101001001   [Subkey: 10]
          - Input Half:       01101110111111110011000101010001
          - S-Box Result:     00001100101110110001101010011010   [per every group of 4-bits]
          - Split Into Two:   0000110010111011 [L] 0001101010011010 [R]
          - Swap Halves:      00011010100110100000110010111011
          - Bit Inversion:    11100101011001011111001101000100
          - Compressed Key:   11011010001101110110101000010110   [done by compression P-Box]
          - XOR with Key:     00111111010100101001100101010010

          - FUNCTION OUTPUT:  00111111010100101001100101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101010011001010100110011101

       - FUNCTION OUTPUT:          00111111010100101001100101010010

       - Left XOR FUNCTION OUTPUT: 11000010000111100011000011001111

       - Next Round Left 32 Bits:  01101110111111110011000101010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010000111100011000011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110111111110011000101010001

       - Right 32 Bits:            11000010000111100011000011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001101010011000100100101011011110101111101011011   [Subkey: 9]
          - Input Half:       11000010000111100011000011001111
          - S-Box Result:     01011110101011000001111101011011   [per every group of 4-bits]
          - Split Into Two:   0101111010101100 [L] 0001111101011011 [R]
          - Swap Halves:      00011111010110110101111010101100
          - Bit Inversion:    11100000101001001010000101010011
          - Compressed Key:   00001110100100010111111011010111   [done by compression P-Box]
          - XOR with Key:     11101110001101011101111110000100

          - FUNCTION OUTPUT:  11101110001101011101111110000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110111111110011000101010001

       - FUNCTION OUTPUT:          11101110001101011101111110000100

       - Left XOR FUNCTION OUTPUT: 10000000110010101110111011010101

       - Next Round Left 32 Bits:  11000010000111100011000011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000110010101110111011010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010000111100011000011001111

       - Right 32 Bits:            10000000110010101110111011010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011001010110011101101101010010000101000001010010   [Subkey: 8]
          - Input Half:       10000000110010101110111011010101
          - S-Box Result:     00101111010101001100110001101001   [per every group of 4-bits]
          - Split Into Two:   0010111101010100 [L] 1100110001101001 [R]
          - Swap Halves:      11001100011010010010111101010100
          - Bit Inversion:    00110011100101101101000010101011
          - Compressed Key:   10110110110010010101001000000001   [done by compression P-Box]
          - XOR with Key:     10000101010111111000001010101010

          - FUNCTION OUTPUT:  10000101010111111000001010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010000111100011000011001111

       - FUNCTION OUTPUT:          10000101010111111000001010101010

       - Left XOR FUNCTION OUTPUT: 01000111010000011011001001100101

       - Next Round Left 32 Bits:  10000000110010101110111011010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111010000011011001001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000110010101110111011010101

       - Right 32 Bits:            01000111010000011011001001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000010011010100110001001001010110111101011111010110   [Subkey: 7]
          - Input Half:       01000111010000011011001001100101
          - S-Box Result:     01111101011110101000111000001001   [per every group of 4-bits]
          - Split Into Two:   0111110101111010 [L] 1000111000001001 [R]
          - Swap Halves:      10001110000010010111110101111010
          - Bit Inversion:    01110001111101101000001010000101
          - Compressed Key:   10000011011010000101111111111001   [done by compression P-Box]
          - XOR with Key:     11110010100111101101110101111100

          - FUNCTION OUTPUT:  11110010100111101101110101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000110010101110111011010101

       - FUNCTION OUTPUT:          11110010100111101101110101111100

       - Left XOR FUNCTION OUTPUT: 01110010010101000011001110101001

       - Next Round Left 32 Bits:  01000111010000011011001001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010010101000011001110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111010000011011001001100101

       - Right 32 Bits:            01110010010101000011001110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011110110010101100111011011010100100001010000010100   [Subkey: 6]
          - Input Half:       01110010010101000011001110101001
          - S-Box Result:     11011110100101110001000101000011   [per every group of 4-bits]
          - Split Into Two:   1101111010010111 [L] 0001000101000011 [R]
          - Swap Halves:      00010001010000111101111010010111
          - Bit Inversion:    11101110101111000010000101101000
          - Compressed Key:   11101001011111100101010001001000   [done by compression P-Box]
          - XOR with Key:     00000111110000100111010100100000

          - FUNCTION OUTPUT:  00000111110000100111010100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111010000011011001001100101

       - FUNCTION OUTPUT:          00000111110000100111010100100000

       - Left XOR FUNCTION OUTPUT: 01000000100000111100011101000101

       - Next Round Left 32 Bits:  01110010010101000011001110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000100000111100011101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010010101000011001110101001

       - Right 32 Bits:            01000000100000111100011101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110010000100110101001100010010010101101111010111110101   [Subkey: 5]
          - Input Half:       01000000100000111100011101000101
          - S-Box Result:     01111111001000010101110101111001   [per every group of 4-bits]
          - Split Into Two:   0111111100100001 [L] 0101110101111001 [R]
          - Swap Halves:      01011101011110010111111100100001
          - Bit Inversion:    10100010100001101000000011011110
          - Compressed Key:   01101000010100100001011101111010   [done by compression P-Box]
          - XOR with Key:     11001010110101001001011110100100

          - FUNCTION OUTPUT:  11001010110101001001011110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010010101000011001110101001

       - FUNCTION OUTPUT:          11001010110101001001011110100100

       - Left XOR FUNCTION OUTPUT: 10111000100000001010010000001101

       - Next Round Left 32 Bits:  01000000100000111100011101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000100000001010010000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000100000111100011101000101

       - Right 32 Bits:            10111000100000001010010000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100110111101100101011001110110110101001000010100000101   [Subkey: 4]
          - Input Half:       10111000100000001010010000001101
          - S-Box Result:     10000010001011110100011111110110   [per every group of 4-bits]
          - Split Into Two:   1000001000101111 [L] 0100011111110110 [R]
          - Swap Halves:      01000111111101101000001000101111
          - Bit Inversion:    10111000000010010111110111010000
          - Compressed Key:   00111110010110111001000101011010   [done by compression P-Box]
          - XOR with Key:     10000110010100101110110010001010

          - FUNCTION OUTPUT:  10000110010100101110110010001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000100000111100011101000101

       - FUNCTION OUTPUT:          10000110010100101110110010001010

       - Left XOR FUNCTION OUTPUT: 11000110110100010010101111001111

       - Next Round Left 32 Bits:  10111000100000001010010000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110110100010010101111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000100000001010010000001101

       - Right 32 Bits:            11000110110100010010101111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100100001001101010011000100100101011011110101111101   [Subkey: 3]
          - Input Half:       11000110110100010010101111001111
          - S-Box Result:     01010000011010101110100001011011   [per every group of 4-bits]
          - Split Into Two:   0101000001101010 [L] 1110100001011011 [R]
          - Swap Halves:      11101000010110110101000001101010
          - Bit Inversion:    00010111101001001010111110010101
          - Compressed Key:   10010010010111001000100101011110   [done by compression P-Box]
          - XOR with Key:     10000101111110000010011011001011

          - FUNCTION OUTPUT:  10000101111110000010011011001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000100000001010010000001101

       - FUNCTION OUTPUT:          10000101111110000010011011001011

       - Left XOR FUNCTION OUTPUT: 00111101011110001000001011000110

       - Next Round Left 32 Bits:  11000110110100010010101111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101011110001000001011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110110100010010101111001111

       - Right 32 Bits:            00111101011110001000001011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001101111011001010110011101101101010010000101000001   [Subkey: 2]
          - Input Half:       00111101011110001000001011000110
          - S-Box Result:     00010110110100100010111001010000   [per every group of 4-bits]
          - Split Into Two:   0001011011010010 [L] 0010111001010000 [R]
          - Swap Halves:      00101110010100000001011011010010
          - Bit Inversion:    11010001101011111110100100101101
          - Compressed Key:   10001111000101101110100000010010   [done by compression P-Box]
          - XOR with Key:     01011110101110010000000100111111

          - FUNCTION OUTPUT:  01011110101110010000000100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110110100010010101111001111

       - FUNCTION OUTPUT:          01011110101110010000000100111111

       - Left XOR FUNCTION OUTPUT: 10011000011010000010101011110000

       - Next Round Left 32 Bits:  00111101011110001000001011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000011010000010101011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101011110001000001011000110

       - Right 32 Bits:            10011000011010000010101011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011001000010011010100110001001001010110111101011111   [Subkey: 1]
          - Input Half:       10011000011010000010101011110000
          - S-Box Result:     00110010000000101110010010111111   [per every group of 4-bits]
          - Split Into Two:   0011001000000010 [L] 1110010010111111 [R]
          - Swap Halves:      11100100101111110011001000000010
          - Bit Inversion:    00011011010000001100110111111101
          - Compressed Key:   11100100100100110110101011011111   [done by compression P-Box]
          - XOR with Key:     11111111110100111010011100100010

          - FUNCTION OUTPUT:  11111111110100111010011100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101011110001000001011000110

       - FUNCTION OUTPUT:          11111111110100111010011100100010

       - Left XOR FUNCTION OUTPUT: 11000010101010110010010111100100

       - Next Round Left 32 Bits:  10011000011010000010101011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010101010110010010111100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100001010101011001001011110010010011000011010000010101011110000

 > Processed Block:     1100001010101011001001011110010010011000011010000010101011110000


Ciphertext Block 3: 1111110110010110100101101110100110001001110010010000100100110001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101100101101001011011101001

       - Right 32 Bits:            10001001110010010000100100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011001110110110101001000010100000101001001101111   [Subkey: 16]
          - Input Half:       10001001110010010000100100110001
          - S-Box Result:     00100011010100111111001100011010   [per every group of 4-bits]
          - Split Into Two:   0010001101010011 [L] 1111001100011010 [R]
          - Swap Halves:      11110011000110100010001101010011
          - Bit Inversion:    00001100111001011101110010101100
          - Compressed Key:   00010110111010000001001010001111   [done by compression P-Box]
          - XOR with Key:     00011010000011011100111000100011

          - FUNCTION OUTPUT:  00011010000011011100111000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101100101101001011011101001

       - FUNCTION OUTPUT:          00011010000011011100111000100011

       - Left XOR FUNCTION OUTPUT: 11100111100110110101100011001010

       - Next Round Left 32 Bits:  10001001110010010000100100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111100110110101100011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001110010010000100100110001

       - Right 32 Bits:            11100111100110110101100011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010011000100100101011011110101111101011011001000   [Subkey: 15]
          - Input Half:       11100111100110110101100011001010
          - S-Box Result:     11001101001110001001001001010100   [per every group of 4-bits]
          - Split Into Two:   1100110100111000 [L] 1001001001010100 [R]
          - Swap Halves:      10010010010101001100110100111000
          - Bit Inversion:    01101101101010110011001011000111
          - Compressed Key:   10010011011010101101111111100100   [done by compression P-Box]
          - XOR with Key:     11111110110000011110110100100011

          - FUNCTION OUTPUT:  11111110110000011110110100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001110010010000100100110001

       - FUNCTION OUTPUT:          11111110110000011110110100100011

       - Left XOR FUNCTION OUTPUT: 01110111000010001110010000010010

       - Next Round Left 32 Bits:  11100111100110110101100011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111000010001110010000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111100110110101100011001010

       - Right 32 Bits:            01110111000010001110010000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010110011101101101010010000101000001010010011011   [Subkey: 14]
          - Input Half:       01110111000010001110010000010010
          - S-Box Result:     11011101111100101100011110101110   [per every group of 4-bits]
          - Split Into Two:   1101110111110010 [L] 1100011110101110 [R]
          - Swap Halves:      11000111101011101101110111110010
          - Bit Inversion:    00111000010100010010001000001101
          - Compressed Key:   11001001011110100000000001100111   [done by compression P-Box]
          - XOR with Key:     11110001001010110010001001101010

          - FUNCTION OUTPUT:  11110001001010110010001001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111100110110101100011001010

       - FUNCTION OUTPUT:          11110001001010110010001001101010

       - Left XOR FUNCTION OUTPUT: 00010110101100000111101010100000

       - Next Round Left 32 Bits:  01110111000010001110010000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110101100000111101010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111000010001110010000010010

       - Right 32 Bits:            00010110101100000111101010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011010100110001001001010110111101011111010110110010   [Subkey: 13]
          - Input Half:       00010110101100000111101010100000
          - S-Box Result:     10100000100011111101010001001111   [per every group of 4-bits]
          - Split Into Two:   1010000010001111 [L] 1101010001001111 [R]
          - Swap Halves:      11010100010011111010000010001111
          - Bit Inversion:    00101011101100000101111101110000
          - Compressed Key:   01101000000110101011101101110001   [done by compression P-Box]
          - XOR with Key:     01000011101010101110010000000001

          - FUNCTION OUTPUT:  01000011101010101110010000000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111000010001110010000010010

       - FUNCTION OUTPUT:          01000011101010101110010000000001

       - Left XOR FUNCTION OUTPUT: 00110100101000100000000000010011

       - Next Round Left 32 Bits:  00010110101100000111101010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100101000100000000000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110101100000111101010100000

       - Right 32 Bits:            00110100101000100000000000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110010101100111011011010100100001010000010100100110   [Subkey: 12]
          - Input Half:       00110100101000100000000000010011
          - S-Box Result:     00010111010011101111111110100001   [per every group of 4-bits]
          - Split Into Two:   0001011101001110 [L] 1111111110100001 [R]
          - Swap Halves:      11111111101000010001011101001110
          - Bit Inversion:    00000000010111101110100010110001
          - Compressed Key:   01111010110111101000100001011001   [done by compression P-Box]
          - XOR with Key:     01111010100000000110000011101000

          - FUNCTION OUTPUT:  01111010100000000110000011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110101100000111101010100000

       - FUNCTION OUTPUT:          01111010100000000110000011101000

       - Left XOR FUNCTION OUTPUT: 01101100001100000001101001001000

       - Next Round Left 32 Bits:  00110100101000100000000000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100001100000001101001001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100101000100000000000010011

       - Right 32 Bits:            01101100001100000001101001001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100110101001100010010010101101111010111110101101100   [Subkey: 11]
          - Input Half:       01101100001100000001101001001000
          - S-Box Result:     00000101000111111010010001110010   [per every group of 4-bits]
          - Split Into Two:   0000010100011111 [L] 1010010001110010 [R]
          - Swap Halves:      10100100011100100000010100011111
          - Bit Inversion:    01011011100011011111101011100000
          - Compressed Key:   00011010010001101110101001011100   [done by compression P-Box]
          - XOR with Key:     01000001110010110001000010111100

          - FUNCTION OUTPUT:  01000001110010110001000010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100101000100000000000010011

       - FUNCTION OUTPUT:          01000001110010110001000010111100

       - Left XOR FUNCTION OUTPUT: 01110101011010010001000010101111

       - Next Round Left 32 Bits:  01101100001100000001101001001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101011010010001000010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100001100000001101001001000

       - Right 32 Bits:            01110101011010010001000010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100101011001110110110101001000010100000101001001   [Subkey: 10]
          - Input Half:       01110101011010010001000010101111
          - S-Box Result:     11011001000000111010111101001011   [per every group of 4-bits]
          - Split Into Two:   1101100100000011 [L] 1010111101001011 [R]
          - Swap Halves:      10101111010010111101100100000011
          - Bit Inversion:    01010000101101000010011011111100
          - Compressed Key:   11011010001101110110101000010110   [done by compression P-Box]
          - XOR with Key:     10001010100000110100110011101010

          - FUNCTION OUTPUT:  10001010100000110100110011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100001100000001101001001000

       - FUNCTION OUTPUT:          10001010100000110100110011101010

       - Left XOR FUNCTION OUTPUT: 11100110101100110101011010100010

       - Next Round Left 32 Bits:  01110101011010010001000010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110101100110101011010100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101011010010001000010101111

       - Right 32 Bits:            11100110101100110101011010100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001101010011000100100101011011110101111101011011   [Subkey: 9]
          - Input Half:       11100110101100110101011010100010
          - S-Box Result:     11000000100000011001000001001110   [per every group of 4-bits]
          - Split Into Two:   1100000010000001 [L] 1001000001001110 [R]
          - Swap Halves:      10010000010011101100000010000001
          - Bit Inversion:    01101111101100010011111101111110
          - Compressed Key:   00001110100100010111111011010111   [done by compression P-Box]
          - XOR with Key:     01100001001000000100000110101001

          - FUNCTION OUTPUT:  01100001001000000100000110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101011010010001000010101111

       - FUNCTION OUTPUT:          01100001001000000100000110101001

       - Left XOR FUNCTION OUTPUT: 00010100010010010101000100000110

       - Next Round Left 32 Bits:  11100110101100110101011010100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100010010010101000100000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110101100110101011010100010

       - Right 32 Bits:            00010100010010010101000100000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011001010110011101101101010010000101000001010010   [Subkey: 8]
          - Input Half:       00010100010010010101000100000110
          - S-Box Result:     10100111011100111001101011110000   [per every group of 4-bits]
          - Split Into Two:   1010011101110011 [L] 1001101011110000 [R]
          - Swap Halves:      10011010111100001010011101110011
          - Bit Inversion:    01100101000011110101100010001100
          - Compressed Key:   10110110110010010101001000000001   [done by compression P-Box]
          - XOR with Key:     11010011110001100000101010001101

          - FUNCTION OUTPUT:  11010011110001100000101010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110101100110101011010100010

       - FUNCTION OUTPUT:          11010011110001100000101010001101

       - Left XOR FUNCTION OUTPUT: 00110101011101010101110000101111

       - Next Round Left 32 Bits:  00010100010010010101000100000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101011101010101110000101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100010010010101000100000110

       - Right 32 Bits:            00110101011101010101110000101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000010011010100110001001001010110111101011111010110   [Subkey: 7]
          - Input Half:       00110101011101010101110000101111
          - S-Box Result:     00011001110110011001010111101011   [per every group of 4-bits]
          - Split Into Two:   0001100111011001 [L] 1001010111101011 [R]
          - Swap Halves:      10010101111010110001100111011001
          - Bit Inversion:    01101010000101001110011000100110
          - Compressed Key:   10000011011010000101111111111001   [done by compression P-Box]
          - XOR with Key:     11101001011111001011100111011111

          - FUNCTION OUTPUT:  11101001011111001011100111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100010010010101000100000110

       - FUNCTION OUTPUT:          11101001011111001011100111011111

       - Left XOR FUNCTION OUTPUT: 11111101001101011110100011011001

       - Next Round Left 32 Bits:  00110101011101010101110000101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101001101011110100011011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101011101010101110000101111

       - Right 32 Bits:            11111101001101011110100011011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011110110010101100111011011010100100001010000010100   [Subkey: 6]
          - Input Half:       11111101001101011110100011011001
          - S-Box Result:     10110110000110011100001001100011   [per every group of 4-bits]
          - Split Into Two:   1011011000011001 [L] 1100001001100011 [R]
          - Swap Halves:      11000010011000111011011000011001
          - Bit Inversion:    00111101100111000100100111100110
          - Compressed Key:   11101001011111100101010001001000   [done by compression P-Box]
          - XOR with Key:     11010100111000100001110110101110

          - FUNCTION OUTPUT:  11010100111000100001110110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101011101010101110000101111

       - FUNCTION OUTPUT:          11010100111000100001110110101110

       - Left XOR FUNCTION OUTPUT: 11100001100101110100000110000001

       - Next Round Left 32 Bits:  11111101001101011110100011011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001100101110100000110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101001101011110100011011001

       - Right 32 Bits:            11100001100101110100000110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110010000100110101001100010010010101101111010111110101   [Subkey: 5]
          - Input Half:       11100001100101110100000110000001
          - S-Box Result:     11001010001111010111101000101010   [per every group of 4-bits]
          - Split Into Two:   1100101000111101 [L] 0111101000101010 [R]
          - Swap Halves:      01111010001010101100101000111101
          - Bit Inversion:    10000101110101010011010111000010
          - Compressed Key:   01101000010100100001011101111010   [done by compression P-Box]
          - XOR with Key:     11101101100001110010001010111000

          - FUNCTION OUTPUT:  11101101100001110010001010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101001101011110100011011001

       - FUNCTION OUTPUT:          11101101100001110010001010111000

       - Left XOR FUNCTION OUTPUT: 00010000101100101100101001100001

       - Next Round Left 32 Bits:  11100001100101110100000110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000101100101100101001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001100101110100000110000001

       - Right 32 Bits:            00010000101100101100101001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100110111101100101011001110110110101001000010100000101   [Subkey: 4]
          - Input Half:       00010000101100101100101001100001
          - S-Box Result:     10101111100011100101010000001010   [per every group of 4-bits]
          - Split Into Two:   1010111110001110 [L] 0101010000001010 [R]
          - Swap Halves:      01010100000010101010111110001110
          - Bit Inversion:    10101011111101010101000001110001
          - Compressed Key:   00111110010110111001000101011010   [done by compression P-Box]
          - XOR with Key:     10010101101011101100000100101011

          - FUNCTION OUTPUT:  10010101101011101100000100101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001100101110100000110000001

       - FUNCTION OUTPUT:          10010101101011101100000100101011

       - Left XOR FUNCTION OUTPUT: 01110100001110011000000010101010

       - Next Round Left 32 Bits:  00010000101100101100101001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100001110011000000010101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000101100101100101001100001

       - Right 32 Bits:            01110100001110011000000010101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100100001001101010011000100100101011011110101111101   [Subkey: 3]
          - Input Half:       01110100001110011000000010101010
          - S-Box Result:     11010111000100110010111101000100   [per every group of 4-bits]
          - Split Into Two:   1101011100010011 [L] 0010111101000100 [R]
          - Swap Halves:      00101111010001001101011100010011
          - Bit Inversion:    11010000101110110010100011101100
          - Compressed Key:   10010010010111001000100101011110   [done by compression P-Box]
          - XOR with Key:     01000010111001111010000110110010

          - FUNCTION OUTPUT:  01000010111001111010000110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000101100101100101001100001

       - FUNCTION OUTPUT:          01000010111001111010000110110010

       - Left XOR FUNCTION OUTPUT: 01010010010101010110101111010011

       - Next Round Left 32 Bits:  01110100001110011000000010101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010010101010110101111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100001110011000000010101010

       - Right 32 Bits:            01010010010101010110101111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001101111011001010110011101101101010010000101000001   [Subkey: 2]
          - Input Half:       01010010010101010110101111010011
          - S-Box Result:     10011110100110010000100001100001   [per every group of 4-bits]
          - Split Into Two:   1001111010011001 [L] 0000100001100001 [R]
          - Swap Halves:      00001000011000011001111010011001
          - Bit Inversion:    11110111100111100110000101100110
          - Compressed Key:   10001111000101101110100000010010   [done by compression P-Box]
          - XOR with Key:     01111000100010001000100101110100

          - FUNCTION OUTPUT:  01111000100010001000100101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100001110011000000010101010

       - FUNCTION OUTPUT:          01111000100010001000100101110100

       - Left XOR FUNCTION OUTPUT: 00001100101100010000100111011110

       - Next Round Left 32 Bits:  01010010010101010110101111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100101100010000100111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010010101010110101111010011

       - Right 32 Bits:            00001100101100010000100111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011001000010011010100110001001001010110111101011111   [Subkey: 1]
          - Input Half:       00001100101100010000100111011110
          - S-Box Result:     11110101100010101111001101101100   [per every group of 4-bits]
          - Split Into Two:   1111010110001010 [L] 1111001101101100 [R]
          - Swap Halves:      11110011011011001111010110001010
          - Bit Inversion:    00001100100100110000101001110101
          - Compressed Key:   11100100100100110110101011011111   [done by compression P-Box]
          - XOR with Key:     11101000000000000110000010101010

          - FUNCTION OUTPUT:  11101000000000000110000010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010010101010110101111010011

       - FUNCTION OUTPUT:          11101000000000000110000010101010

       - Left XOR FUNCTION OUTPUT: 10111010010101010000101101111001

       - Next Round Left 32 Bits:  00001100101100010000100111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010010101010000101101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011101001010101000010110111100100001100101100010000100111011110

 > Processed Block:     1011101001010101000010110111100100001100101100010000100111011110


Ciphertext Block 4: 0011001101011111011000101111001000010100010111001010011100001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011010111110110001011110010

       - Right 32 Bits:            00010100010111001010011100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011001110110110101001000010100000101001001101111   [Subkey: 16]
          - Input Half:       00010100010111001010011100001010
          - S-Box Result:     10100111100101010100110111110100   [per every group of 4-bits]
          - Split Into Two:   1010011110010101 [L] 0100110111110100 [R]
          - Swap Halves:      01001101111101001010011110010101
          - Bit Inversion:    10110010000010110101100001101010
          - Compressed Key:   00010110111010000001001010001111   [done by compression P-Box]
          - XOR with Key:     10100100111000110100101011100101

          - FUNCTION OUTPUT:  10100100111000110100101011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011010111110110001011110010

       - FUNCTION OUTPUT:          10100100111000110100101011100101

       - Left XOR FUNCTION OUTPUT: 10010111101111000010100000010111

       - Next Round Left 32 Bits:  00010100010111001010011100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111101111000010100000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100010111001010011100001010

       - Right 32 Bits:            10010111101111000010100000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010011000100100101011011110101111101011011001000   [Subkey: 15]
          - Input Half:       10010111101111000010100000010111
          - S-Box Result:     00111101100001011110001010101101   [per every group of 4-bits]
          - Split Into Two:   0011110110000101 [L] 1110001010101101 [R]
          - Swap Halves:      11100010101011010011110110000101
          - Bit Inversion:    00011101010100101100001001111010
          - Compressed Key:   10010011011010101101111111100100   [done by compression P-Box]
          - XOR with Key:     10001110001110000001110110011110

          - FUNCTION OUTPUT:  10001110001110000001110110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100010111001010011100001010

       - FUNCTION OUTPUT:          10001110001110000001110110011110

       - Left XOR FUNCTION OUTPUT: 10011010011001001011101010010100

       - Next Round Left 32 Bits:  10010111101111000010100000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011010011001001011101010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111101111000010100000010111

       - Right 32 Bits:            10011010011001001011101010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010110011101101101010010000101000001010010011011   [Subkey: 14]
          - Input Half:       10011010011001001011101010010100
          - S-Box Result:     00110100000001111000010000110111   [per every group of 4-bits]
          - Split Into Two:   0011010000000111 [L] 1000010000110111 [R]
          - Swap Halves:      10000100001101110011010000000111
          - Bit Inversion:    01111011110010001100101111111000
          - Compressed Key:   11001001011110100000000001100111   [done by compression P-Box]
          - XOR with Key:     10110010101100101100101110011111

          - FUNCTION OUTPUT:  10110010101100101100101110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111101111000010100000010111

       - FUNCTION OUTPUT:          10110010101100101100101110011111

       - Left XOR FUNCTION OUTPUT: 00100101000011101110001110001000

       - Next Round Left 32 Bits:  10011010011001001011101010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101000011101110001110001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011010011001001011101010010100

       - Right 32 Bits:            00100101000011101110001110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011010100110001001001010110111101011111010110110010   [Subkey: 13]
          - Input Half:       00100101000011101110001110001000
          - S-Box Result:     11101001111111001100000100100010   [per every group of 4-bits]
          - Split Into Two:   1110100111111100 [L] 1100000100100010 [R]
          - Swap Halves:      11000001001000101110100111111100
          - Bit Inversion:    00111110110111010001011000000011
          - Compressed Key:   01101000000110101011101101110001   [done by compression P-Box]
          - XOR with Key:     01010110110001111010110101110010

          - FUNCTION OUTPUT:  01010110110001111010110101110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011010011001001011101010010100

       - FUNCTION OUTPUT:          01010110110001111010110101110010

       - Left XOR FUNCTION OUTPUT: 11001100101000110001011111100110

       - Next Round Left 32 Bits:  00100101000011101110001110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100101000110001011111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101000011101110001110001000

       - Right 32 Bits:            11001100101000110001011111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110010101100111011011010100100001010000010100100110   [Subkey: 12]
          - Input Half:       11001100101000110001011111100110
          - S-Box Result:     01010101010000011010110111000000   [per every group of 4-bits]
          - Split Into Two:   0101010101000001 [L] 1010110111000000 [R]
          - Swap Halves:      10101101110000000101010101000001
          - Bit Inversion:    01010010001111111010101010111110
          - Compressed Key:   01111010110111101000100001011001   [done by compression P-Box]
          - XOR with Key:     00101000111000010010001011100111

          - FUNCTION OUTPUT:  00101000111000010010001011100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101000011101110001110001000

       - FUNCTION OUTPUT:          00101000111000010010001011100111

       - Left XOR FUNCTION OUTPUT: 00001101111011111100000101101111

       - Next Round Left 32 Bits:  11001100101000110001011111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101111011111100000101101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100101000110001011111100110

       - Right 32 Bits:            00001101111011111100000101101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100110101001100010010010101101111010111110101101100   [Subkey: 11]
          - Input Half:       00001101111011111100000101101111
          - S-Box Result:     11110110110010110101101000001011   [per every group of 4-bits]
          - Split Into Two:   1111011011001011 [L] 0101101000001011 [R]
          - Swap Halves:      01011010000010111111011011001011
          - Bit Inversion:    10100101111101000000100100110100
          - Compressed Key:   00011010010001101110101001011100   [done by compression P-Box]
          - XOR with Key:     10111111101100101110001101101000

          - FUNCTION OUTPUT:  10111111101100101110001101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100101000110001011111100110

       - FUNCTION OUTPUT:          10111111101100101110001101101000

       - Left XOR FUNCTION OUTPUT: 01110011000100011111010010001110

       - Next Round Left 32 Bits:  00001101111011111100000101101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011000100011111010010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101111011111100000101101111

       - Right 32 Bits:            01110011000100011111010010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100101011001110110110101001000010100000101001001   [Subkey: 10]
          - Input Half:       01110011000100011111010010001110
          - S-Box Result:     11010001101010101011011100101100   [per every group of 4-bits]
          - Split Into Two:   1101000110101010 [L] 1011011100101100 [R]
          - Swap Halves:      10110111001011001101000110101010
          - Bit Inversion:    01001000110100110010111001010101
          - Compressed Key:   11011010001101110110101000010110   [done by compression P-Box]
          - XOR with Key:     10010010111001000100010001000011

          - FUNCTION OUTPUT:  10010010111001000100010001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101111011111100000101101111

       - FUNCTION OUTPUT:          10010010111001000100010001000011

       - Left XOR FUNCTION OUTPUT: 10011111000010111000010100101100

       - Next Round Left 32 Bits:  01110011000100011111010010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111000010111000010100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011000100011111010010001110

       - Right 32 Bits:            10011111000010111000010100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001101010011000100100101011011110101111101011011   [Subkey: 9]
          - Input Half:       10011111000010111000010100101100
          - S-Box Result:     00111011111110000010100111100101   [per every group of 4-bits]
          - Split Into Two:   0011101111111000 [L] 0010100111100101 [R]
          - Swap Halves:      00101001111001010011101111111000
          - Bit Inversion:    11010110000110101100010000000111
          - Compressed Key:   00001110100100010111111011010111   [done by compression P-Box]
          - XOR with Key:     11011000100010111011101011010000

          - FUNCTION OUTPUT:  11011000100010111011101011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011000100011111010010001110

       - FUNCTION OUTPUT:          11011000100010111011101011010000

       - Left XOR FUNCTION OUTPUT: 10101011100110100100111001011110

       - Next Round Left 32 Bits:  10011111000010111000010100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011100110100100111001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111000010111000010100101100

       - Right 32 Bits:            10101011100110100100111001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011001010110011101101101010010000101000001010010   [Subkey: 8]
          - Input Half:       10101011100110100100111001011110
          - S-Box Result:     01001000001101000111110010011100   [per every group of 4-bits]
          - Split Into Two:   0100100000110100 [L] 0111110010011100 [R]
          - Swap Halves:      01111100100111000100100000110100
          - Bit Inversion:    10000011011000111011011111001011
          - Compressed Key:   10110110110010010101001000000001   [done by compression P-Box]
          - XOR with Key:     00110101101010101110010111001010

          - FUNCTION OUTPUT:  00110101101010101110010111001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111000010111000010100101100

       - FUNCTION OUTPUT:          00110101101010101110010111001010

       - Left XOR FUNCTION OUTPUT: 10101010101000010110000011100110

       - Next Round Left 32 Bits:  10101011100110100100111001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010101000010110000011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011100110100100111001011110

       - Right 32 Bits:            10101010101000010110000011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000010011010100110001001001010110111101011111010110   [Subkey: 7]
          - Input Half:       10101010101000010110000011100110
          - S-Box Result:     01000100010010100000111111000000   [per every group of 4-bits]
          - Split Into Two:   0100010001001010 [L] 0000111111000000 [R]
          - Swap Halves:      00001111110000000100010001001010
          - Bit Inversion:    11110000001111111011101110110101
          - Compressed Key:   10000011011010000101111111111001   [done by compression P-Box]
          - XOR with Key:     01110011010101111110010001001100

          - FUNCTION OUTPUT:  01110011010101111110010001001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011100110100100111001011110

       - FUNCTION OUTPUT:          01110011010101111110010001001100

       - Left XOR FUNCTION OUTPUT: 11011000110011011010101000010010

       - Next Round Left 32 Bits:  10101010101000010110000011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000110011011010101000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010101000010110000011100110

       - Right 32 Bits:            11011000110011011010101000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011110110010101100111011011010100100001010000010100   [Subkey: 6]
          - Input Half:       11011000110011011010101000010010
          - S-Box Result:     01100010010101100100010010101110   [per every group of 4-bits]
          - Split Into Two:   0110001001010110 [L] 0100010010101110 [R]
          - Swap Halves:      01000100101011100110001001010110
          - Bit Inversion:    10111011010100011001110110101001
          - Compressed Key:   11101001011111100101010001001000   [done by compression P-Box]
          - XOR with Key:     01010010001011111100100111100001

          - FUNCTION OUTPUT:  01010010001011111100100111100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010101000010110000011100110

       - FUNCTION OUTPUT:          01010010001011111100100111100001

       - Left XOR FUNCTION OUTPUT: 11111000100011101010100100000111

       - Next Round Left 32 Bits:  11011000110011011010101000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000100011101010100100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000110011011010101000010010

       - Right 32 Bits:            11111000100011101010100100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110010000100110101001100010010010101101111010111110101   [Subkey: 5]
          - Input Half:       11111000100011101010100100000111
          - S-Box Result:     10110010001011000100001111111101   [per every group of 4-bits]
          - Split Into Two:   1011001000101100 [L] 0100001111111101 [R]
          - Swap Halves:      01000011111111011011001000101100
          - Bit Inversion:    10111100000000100100110111010011
          - Compressed Key:   01101000010100100001011101111010   [done by compression P-Box]
          - XOR with Key:     11010100010100000101101010101001

          - FUNCTION OUTPUT:  11010100010100000101101010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000110011011010101000010010

       - FUNCTION OUTPUT:          11010100010100000101101010101001

       - Left XOR FUNCTION OUTPUT: 00001100100111011111000010111011

       - Next Round Left 32 Bits:  11111000100011101010100100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100100111011111000010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000100011101010100100000111

       - Right 32 Bits:            00001100100111011111000010111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100110111101100101011001110110110101001000010100000101   [Subkey: 4]
          - Input Half:       00001100100111011111000010111011
          - S-Box Result:     11110101001101101011111110001000   [per every group of 4-bits]
          - Split Into Two:   1111010100110110 [L] 1011111110001000 [R]
          - Swap Halves:      10111111100010001111010100110110
          - Bit Inversion:    01000000011101110000101011001001
          - Compressed Key:   00111110010110111001000101011010   [done by compression P-Box]
          - XOR with Key:     01111110001011001001101110010011

          - FUNCTION OUTPUT:  01111110001011001001101110010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000100011101010100100000111

       - FUNCTION OUTPUT:          01111110001011001001101110010011

       - Left XOR FUNCTION OUTPUT: 10000110101000100011001010010100

       - Next Round Left 32 Bits:  00001100100111011111000010111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110101000100011001010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100100111011111000010111011

       - Right 32 Bits:            10000110101000100011001010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100100001001101010011000100100101011011110101111101   [Subkey: 3]
          - Input Half:       10000110101000100011001010010100
          - S-Box Result:     00100000010011100001111000110111   [per every group of 4-bits]
          - Split Into Two:   0010000001001110 [L] 0001111000110111 [R]
          - Swap Halves:      00011110001101110010000001001110
          - Bit Inversion:    11100001110010001101111110110001
          - Compressed Key:   10010010010111001000100101011110   [done by compression P-Box]
          - XOR with Key:     01110011100101000101011011101111

          - FUNCTION OUTPUT:  01110011100101000101011011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100100111011111000010111011

       - FUNCTION OUTPUT:          01110011100101000101011011101111

       - Left XOR FUNCTION OUTPUT: 01111111000010011010011001010100

       - Next Round Left 32 Bits:  10000110101000100011001010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111000010011010011001010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110101000100011001010010100

       - Right 32 Bits:            01111111000010011010011001010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001101111011001010110011101101101010010000101000001   [Subkey: 2]
          - Input Half:       01111111000010011010011001010100
          - S-Box Result:     11011011111100110100000010010111   [per every group of 4-bits]
          - Split Into Two:   1101101111110011 [L] 0100000010010111 [R]
          - Swap Halves:      01000000100101111101101111110011
          - Bit Inversion:    10111111011010000010010000001100
          - Compressed Key:   10001111000101101110100000010010   [done by compression P-Box]
          - XOR with Key:     00110000011111101100110000011110

          - FUNCTION OUTPUT:  00110000011111101100110000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110101000100011001010010100

       - FUNCTION OUTPUT:          00110000011111101100110000011110

       - Left XOR FUNCTION OUTPUT: 10110110110111001111111010001010

       - Next Round Left 32 Bits:  01111111000010011010011001010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110110111001111111010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111000010011010011001010100

       - Right 32 Bits:            10110110110111001111111010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011001000010011010100110001001001010110111101011111   [Subkey: 1]
          - Input Half:       10110110110111001111111010001010
          - S-Box Result:     10000000011001011011110000100100   [per every group of 4-bits]
          - Split Into Two:   1000000001100101 [L] 1011110000100100 [R]
          - Swap Halves:      10111100001001001000000001100101
          - Bit Inversion:    01000011110110110111111110011010
          - Compressed Key:   11100100100100110110101011011111   [done by compression P-Box]
          - XOR with Key:     10100111010010000001010101000101

          - FUNCTION OUTPUT:  10100111010010000001010101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111000010011010011001010100

       - FUNCTION OUTPUT:          10100111010010000001010101000101

       - Left XOR FUNCTION OUTPUT: 11011000010000011011001100010001

       - Next Round Left 32 Bits:  10110110110111001111111010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000010000011011001100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101100001000001101100110001000110110110110111001111111010001010

 > Processed Block:     1101100001000001101100110001000110110110110111001111111010001010


Ciphertext Block 5: 0000001100001100010110111110101000000001110101011110000011101111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011000011000101101111101010

       - Right 32 Bits:            00000001110101011110000011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011001110110110101001000010100000101001001101111   [Subkey: 16]
          - Input Half:       00000001110101011110000011101111
          - S-Box Result:     11111010011010011100111111001011   [per every group of 4-bits]
          - Split Into Two:   1111101001101001 [L] 1100111111001011 [R]
          - Swap Halves:      11001111110010111111101001101001
          - Bit Inversion:    00110000001101000000010110010110
          - Compressed Key:   00010110111010000001001010001111   [done by compression P-Box]
          - XOR with Key:     00100110110111000001011100011001

          - FUNCTION OUTPUT:  00100110110111000001011100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011000011000101101111101010

       - FUNCTION OUTPUT:          00100110110111000001011100011001

       - Left XOR FUNCTION OUTPUT: 00100101110100000100110011110011

       - Next Round Left 32 Bits:  00000001110101011110000011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101110100000100110011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001110101011110000011101111

       - Right 32 Bits:            00100101110100000100110011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010011000100100101011011110101111101011011001000   [Subkey: 15]
          - Input Half:       00100101110100000100110011110011
          - S-Box Result:     11101001011011110111010110110001   [per every group of 4-bits]
          - Split Into Two:   1110100101101111 [L] 0111010110110001 [R]
          - Swap Halves:      01110101101100011110100101101111
          - Bit Inversion:    10001010010011100001011010010000
          - Compressed Key:   10010011011010101101111111100100   [done by compression P-Box]
          - XOR with Key:     00011001001001001100100101110100

          - FUNCTION OUTPUT:  00011001001001001100100101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001110101011110000011101111

       - FUNCTION OUTPUT:          00011001001001001100100101110100

       - Left XOR FUNCTION OUTPUT: 00011000111100010010100110011011

       - Next Round Left 32 Bits:  00100101110100000100110011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000111100010010100110011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101110100000100110011110011

       - Right 32 Bits:            00011000111100010010100110011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010110011101101101010010000101000001010010011011   [Subkey: 14]
          - Input Half:       00011000111100010010100110011011
          - S-Box Result:     10100010101110101110001100111000   [per every group of 4-bits]
          - Split Into Two:   1010001010111010 [L] 1110001100111000 [R]
          - Swap Halves:      11100011001110001010001010111010
          - Bit Inversion:    00011100110001110101110101000101
          - Compressed Key:   11001001011110100000000001100111   [done by compression P-Box]
          - XOR with Key:     11010101101111010101110100100010

          - FUNCTION OUTPUT:  11010101101111010101110100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101110100000100110011110011

       - FUNCTION OUTPUT:          11010101101111010101110100100010

       - Left XOR FUNCTION OUTPUT: 11110000011011010001000111010001

       - Next Round Left 32 Bits:  00011000111100010010100110011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000011011010001000111010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000111100010010100110011011

       - Right 32 Bits:            11110000011011010001000111010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011010100110001001001010110111101011111010110110010   [Subkey: 13]
          - Input Half:       11110000011011010001000111010001
          - S-Box Result:     10111111000001101010101001101010   [per every group of 4-bits]
          - Split Into Two:   1011111100000110 [L] 1010101001101010 [R]
          - Swap Halves:      10101010011010101011111100000110
          - Bit Inversion:    01010101100101010100000011111001
          - Compressed Key:   01101000000110101011101101110001   [done by compression P-Box]
          - XOR with Key:     00111101100011111111101110001000

          - FUNCTION OUTPUT:  00111101100011111111101110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000111100010010100110011011

       - FUNCTION OUTPUT:          00111101100011111111101110001000

       - Left XOR FUNCTION OUTPUT: 00100101011111101101001000010011

       - Next Round Left 32 Bits:  11110000011011010001000111010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101011111101101001000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000011011010001000111010001

       - Right 32 Bits:            00100101011111101101001000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110010101100111011011010100100001010000010100100110   [Subkey: 12]
          - Input Half:       00100101011111101101001000010011
          - S-Box Result:     11101001110111000110111010100001   [per every group of 4-bits]
          - Split Into Two:   1110100111011100 [L] 0110111010100001 [R]
          - Swap Halves:      01101110101000011110100111011100
          - Bit Inversion:    10010001010111100001011000100011
          - Compressed Key:   01111010110111101000100001011001   [done by compression P-Box]
          - XOR with Key:     11101011100000001001111001111010

          - FUNCTION OUTPUT:  11101011100000001001111001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000011011010001000111010001

       - FUNCTION OUTPUT:          11101011100000001001111001111010

       - Left XOR FUNCTION OUTPUT: 00011011111011011000111110101011

       - Next Round Left 32 Bits:  00100101011111101101001000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011111011011000111110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101011111101101001000010011

       - Right 32 Bits:            00011011111011011000111110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100110101001100010010010101101111010111110101101100   [Subkey: 11]
          - Input Half:       00011011111011011000111110101011
          - S-Box Result:     10101000110001100010101101001000   [per every group of 4-bits]
          - Split Into Two:   1010100011000110 [L] 0010101101001000 [R]
          - Swap Halves:      00101011010010001010100011000110
          - Bit Inversion:    11010100101101110101011100111001
          - Compressed Key:   00011010010001101110101001011100   [done by compression P-Box]
          - XOR with Key:     11001110111100011011110101100101

          - FUNCTION OUTPUT:  11001110111100011011110101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101011111101101001000010011

       - FUNCTION OUTPUT:          11001110111100011011110101100101

       - Left XOR FUNCTION OUTPUT: 11101011100011110110111101110110

       - Next Round Left 32 Bits:  00011011111011011000111110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011100011110110111101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011111011011000111110101011

       - Right 32 Bits:            11101011100011110110111101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100101011001110110110101001000010100000101001001   [Subkey: 10]
          - Input Half:       11101011100011110110111101110110
          - S-Box Result:     11001000001010110000101111010000   [per every group of 4-bits]
          - Split Into Two:   1100100000101011 [L] 0000101111010000 [R]
          - Swap Halves:      00001011110100001100100000101011
          - Bit Inversion:    11110100001011110011011111010100
          - Compressed Key:   11011010001101110110101000010110   [done by compression P-Box]
          - XOR with Key:     00101110000110000101110111000010

          - FUNCTION OUTPUT:  00101110000110000101110111000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011111011011000111110101011

       - FUNCTION OUTPUT:          00101110000110000101110111000010

       - Left XOR FUNCTION OUTPUT: 00110101111101011101001001101001

       - Next Round Left 32 Bits:  11101011100011110110111101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101111101011101001001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011100011110110111101110110

       - Right 32 Bits:            00110101111101011101001001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001101010011000100100101011011110101111101011011   [Subkey: 9]
          - Input Half:       00110101111101011101001001101001
          - S-Box Result:     00011001101110010110111000000011   [per every group of 4-bits]
          - Split Into Two:   0001100110111001 [L] 0110111000000011 [R]
          - Swap Halves:      01101110000000110001100110111001
          - Bit Inversion:    10010001111111001110011001000110
          - Compressed Key:   00001110100100010111111011010111   [done by compression P-Box]
          - XOR with Key:     10011111011011011001100010010001

          - FUNCTION OUTPUT:  10011111011011011001100010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011100011110110111101110110

       - FUNCTION OUTPUT:          10011111011011011001100010010001

       - Left XOR FUNCTION OUTPUT: 01110100111000101111011111100111

       - Next Round Left 32 Bits:  00110101111101011101001001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100111000101111011111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101111101011101001001101001

       - Right 32 Bits:            01110100111000101111011111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011001010110011101101101010010000101000001010010   [Subkey: 8]
          - Input Half:       01110100111000101111011111100111
          - S-Box Result:     11010111110011101011110111001101   [per every group of 4-bits]
          - Split Into Two:   1101011111001110 [L] 1011110111001101 [R]
          - Swap Halves:      10111101110011011101011111001110
          - Bit Inversion:    01000010001100100010100000110001
          - Compressed Key:   10110110110010010101001000000001   [done by compression P-Box]
          - XOR with Key:     11110100111110110111101000110000

          - FUNCTION OUTPUT:  11110100111110110111101000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101111101011101001001101001

       - FUNCTION OUTPUT:          11110100111110110111101000110000

       - Left XOR FUNCTION OUTPUT: 11000001000011101010100001011001

       - Next Round Left 32 Bits:  01110100111000101111011111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001000011101010100001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100111000101111011111100111

       - Right 32 Bits:            11000001000011101010100001011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000010011010100110001001001010110111101011111010110   [Subkey: 7]
          - Input Half:       11000001000011101010100001011001
          - S-Box Result:     01011010111111000100001010010011   [per every group of 4-bits]
          - Split Into Two:   0101101011111100 [L] 0100001010010011 [R]
          - Swap Halves:      01000010100100110101101011111100
          - Bit Inversion:    10111101011011001010010100000011
          - Compressed Key:   10000011011010000101111111111001   [done by compression P-Box]
          - XOR with Key:     00111110000001001111101011111010

          - FUNCTION OUTPUT:  00111110000001001111101011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100111000101111011111100111

       - FUNCTION OUTPUT:          00111110000001001111101011111010

       - Left XOR FUNCTION OUTPUT: 01001010111001100000110100011101

       - Next Round Left 32 Bits:  11000001000011101010100001011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010111001100000110100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001000011101010100001011001

       - Right 32 Bits:            01001010111001100000110100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011110110010101100111011011010100100001010000010100   [Subkey: 6]
          - Input Half:       01001010111001100000110100011101
          - S-Box Result:     01110100110000001111011010100110   [per every group of 4-bits]
          - Split Into Two:   0111010011000000 [L] 1111011010100110 [R]
          - Swap Halves:      11110110101001100111010011000000
          - Bit Inversion:    00001001010110011000101100111111
          - Compressed Key:   11101001011111100101010001001000   [done by compression P-Box]
          - XOR with Key:     11100000001001111101111101110111

          - FUNCTION OUTPUT:  11100000001001111101111101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001000011101010100001011001

       - FUNCTION OUTPUT:          11100000001001111101111101110111

       - Left XOR FUNCTION OUTPUT: 00100001001010010111011100101110

       - Next Round Left 32 Bits:  01001010111001100000110100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001001010010111011100101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010111001100000110100011101

       - Right 32 Bits:            00100001001010010111011100101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110010000100110101001100010010010101101111010111110101   [Subkey: 5]
          - Input Half:       00100001001010010111011100101110
          - S-Box Result:     11101010111000111101110111101100   [per every group of 4-bits]
          - Split Into Two:   1110101011100011 [L] 1101110111101100 [R]
          - Swap Halves:      11011101111011001110101011100011
          - Bit Inversion:    00100010000100110001010100011100
          - Compressed Key:   01101000010100100001011101111010   [done by compression P-Box]
          - XOR with Key:     01001010010000010000001001100110

          - FUNCTION OUTPUT:  01001010010000010000001001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010111001100000110100011101

       - FUNCTION OUTPUT:          01001010010000010000001001100110

       - Left XOR FUNCTION OUTPUT: 00000000101001110000111101111011

       - Next Round Left 32 Bits:  00100001001010010111011100101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000101001110000111101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001001010010111011100101110

       - Right 32 Bits:            00000000101001110000111101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100110111101100101011001110110110101001000010100000101   [Subkey: 4]
          - Input Half:       00000000101001110000111101111011
          - S-Box Result:     11111111010011011111101111011000   [per every group of 4-bits]
          - Split Into Two:   1111111101001101 [L] 1111101111011000 [R]
          - Swap Halves:      11111011110110001111111101001101
          - Bit Inversion:    00000100001001110000000010110010
          - Compressed Key:   00111110010110111001000101011010   [done by compression P-Box]
          - XOR with Key:     00111010011111001001000111101000

          - FUNCTION OUTPUT:  00111010011111001001000111101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001001010010111011100101110

       - FUNCTION OUTPUT:          00111010011111001001000111101000

       - Left XOR FUNCTION OUTPUT: 00011011010101011110011011000110

       - Next Round Left 32 Bits:  00000000101001110000111101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011010101011110011011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000101001110000111101111011

       - Right 32 Bits:            00011011010101011110011011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100100001001101010011000100100101011011110101111101   [Subkey: 3]
          - Input Half:       00011011010101011110011011000110
          - S-Box Result:     10101000100110011100000001010000   [per every group of 4-bits]
          - Split Into Two:   1010100010011001 [L] 1100000001010000 [R]
          - Swap Halves:      11000000010100001010100010011001
          - Bit Inversion:    00111111101011110101011101100110
          - Compressed Key:   10010010010111001000100101011110   [done by compression P-Box]
          - XOR with Key:     10101101111100111101111000111000

          - FUNCTION OUTPUT:  10101101111100111101111000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000101001110000111101111011

       - FUNCTION OUTPUT:          10101101111100111101111000111000

       - Left XOR FUNCTION OUTPUT: 10101101010101001101000101000011

       - Next Round Left 32 Bits:  00011011010101011110011011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101010101001101000101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011010101011110011011000110

       - Right 32 Bits:            10101101010101001101000101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001101111011001010110011101101101010010000101000001   [Subkey: 2]
          - Input Half:       10101101010101001101000101000011
          - S-Box Result:     01000110100101110110101001110001   [per every group of 4-bits]
          - Split Into Two:   0100011010010111 [L] 0110101001110001 [R]
          - Swap Halves:      01101010011100010100011010010111
          - Bit Inversion:    10010101100011101011100101101000
          - Compressed Key:   10001111000101101110100000010010   [done by compression P-Box]
          - XOR with Key:     00011010100110000101000101111010

          - FUNCTION OUTPUT:  00011010100110000101000101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011010101011110011011000110

       - FUNCTION OUTPUT:          00011010100110000101000101111010

       - Left XOR FUNCTION OUTPUT: 00000001110011011011011110111100

       - Next Round Left 32 Bits:  10101101010101001101000101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001110011011011011110111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101101010101001101000101000011

       - Right 32 Bits:            00000001110011011011011110111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011001000010011010100110001001001010110111101011111   [Subkey: 1]
          - Input Half:       00000001110011011011011110111100
          - S-Box Result:     11111010010101101000110110000101   [per every group of 4-bits]
          - Split Into Two:   1111101001010110 [L] 1000110110000101 [R]
          - Swap Halves:      10001101100001011111101001010110
          - Bit Inversion:    01110010011110100000010110101001
          - Compressed Key:   11100100100100110110101011011111   [done by compression P-Box]
          - XOR with Key:     10010110111010010110111101110110

          - FUNCTION OUTPUT:  10010110111010010110111101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101101010101001101000101000011

       - FUNCTION OUTPUT:          10010110111010010110111101110110

       - Left XOR FUNCTION OUTPUT: 00111011101111011011111000110101

       - Next Round Left 32 Bits:  00000001110011011011011110111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011101111011011111000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011101110111101101111100011010100000001110011011011011110111100

 > Processed Block:     0011101110111101101111100011010100000001110011011011011110111100


Ciphertext Block 6: 1001110010010110110010000110111011111101000000011000011000111001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100100101101100100001101110

       - Right 32 Bits:            11111101000000011000011000111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011001110110110101001000010100000101001001101111   [Subkey: 16]
          - Input Half:       11111101000000011000011000111001
          - S-Box Result:     10110110111110100010000000010011   [per every group of 4-bits]
          - Split Into Two:   1011011011111010 [L] 0010000000010011 [R]
          - Swap Halves:      00100000000100111011011011111010
          - Bit Inversion:    11011111111011000100100100000101
          - Compressed Key:   00010110111010000001001010001111   [done by compression P-Box]
          - XOR with Key:     11001001000001000101101110001010

          - FUNCTION OUTPUT:  11001001000001000101101110001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100100101101100100001101110

       - FUNCTION OUTPUT:          11001001000001000101101110001010

       - Left XOR FUNCTION OUTPUT: 01010101100100101001001111100100

       - Next Round Left 32 Bits:  11111101000000011000011000111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101100100101001001111100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101000000011000011000111001

       - Right 32 Bits:            01010101100100101001001111100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010011000100100101011011110101111101011011001000   [Subkey: 15]
          - Input Half:       01010101100100101001001111100100
          - S-Box Result:     10011001001111100011000111000111   [per every group of 4-bits]
          - Split Into Two:   1001100100111110 [L] 0011000111000111 [R]
          - Swap Halves:      00110001110001111001100100111110
          - Bit Inversion:    11001110001110000110011011000001
          - Compressed Key:   10010011011010101101111111100100   [done by compression P-Box]
          - XOR with Key:     01011101010100101011100100100101

          - FUNCTION OUTPUT:  01011101010100101011100100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101000000011000011000111001

       - FUNCTION OUTPUT:          01011101010100101011100100100101

       - Left XOR FUNCTION OUTPUT: 10100000010100110011111100011100

       - Next Round Left 32 Bits:  01010101100100101001001111100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000010100110011111100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101100100101001001111100100

       - Right 32 Bits:            10100000010100110011111100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010110011101101101010010000101000001010010011011   [Subkey: 14]
          - Input Half:       10100000010100110011111100011100
          - S-Box Result:     01001111100100010001101110100101   [per every group of 4-bits]
          - Split Into Two:   0100111110010001 [L] 0001101110100101 [R]
          - Swap Halves:      00011011101001010100111110010001
          - Bit Inversion:    11100100010110101011000001101110
          - Compressed Key:   11001001011110100000000001100111   [done by compression P-Box]
          - XOR with Key:     00101101001000001011000000001001

          - FUNCTION OUTPUT:  00101101001000001011000000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101100100101001001111100100

       - FUNCTION OUTPUT:          00101101001000001011000000001001

       - Left XOR FUNCTION OUTPUT: 01111000101100100010001111101101

       - Next Round Left 32 Bits:  10100000010100110011111100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000101100100010001111101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000010100110011111100011100

       - Right 32 Bits:            01111000101100100010001111101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011010100110001001001010110111101011111010110110010   [Subkey: 13]
          - Input Half:       01111000101100100010001111101101
          - S-Box Result:     11010010100011101110000111000110   [per every group of 4-bits]
          - Split Into Two:   1101001010001110 [L] 1110000111000110 [R]
          - Swap Halves:      11100001110001101101001010001110
          - Bit Inversion:    00011110001110010010110101110001
          - Compressed Key:   01101000000110101011101101110001   [done by compression P-Box]
          - XOR with Key:     01110110001000111001011000000000

          - FUNCTION OUTPUT:  01110110001000111001011000000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000010100110011111100011100

       - FUNCTION OUTPUT:          01110110001000111001011000000000

       - Left XOR FUNCTION OUTPUT: 11010110011100001010100100011100

       - Next Round Left 32 Bits:  01111000101100100010001111101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110011100001010100100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000101100100010001111101101

       - Right 32 Bits:            11010110011100001010100100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110010101100111011011010100100001010000010100100110   [Subkey: 12]
          - Input Half:       11010110011100001010100100011100
          - S-Box Result:     01100000110111110100001110100101   [per every group of 4-bits]
          - Split Into Two:   0110000011011111 [L] 0100001110100101 [R]
          - Swap Halves:      01000011101001010110000011011111
          - Bit Inversion:    10111100010110101001111100100000
          - Compressed Key:   01111010110111101000100001011001   [done by compression P-Box]
          - XOR with Key:     11000110100001000001011101111001

          - FUNCTION OUTPUT:  11000110100001000001011101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000101100100010001111101101

       - FUNCTION OUTPUT:          11000110100001000001011101111001

       - Left XOR FUNCTION OUTPUT: 10111110001101100011010010010100

       - Next Round Left 32 Bits:  11010110011100001010100100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110001101100011010010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110011100001010100100011100

       - Right 32 Bits:            10111110001101100011010010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100110101001100010010010101101111010111110101101100   [Subkey: 11]
          - Input Half:       10111110001101100011010010010100
          - S-Box Result:     10001100000100000001011100110111   [per every group of 4-bits]
          - Split Into Two:   1000110000010000 [L] 0001011100110111 [R]
          - Swap Halves:      00010111001101111000110000010000
          - Bit Inversion:    11101000110010000111001111101111
          - Compressed Key:   00011010010001101110101001011100   [done by compression P-Box]
          - XOR with Key:     11110010100011101001100110110011

          - FUNCTION OUTPUT:  11110010100011101001100110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110011100001010100100011100

       - FUNCTION OUTPUT:          11110010100011101001100110110011

       - Left XOR FUNCTION OUTPUT: 00100100111111100011000010101111

       - Next Round Left 32 Bits:  10111110001101100011010010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100111111100011000010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110001101100011010010010100

       - Right 32 Bits:            00100100111111100011000010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100101011001110110110101001000010100000101001001   [Subkey: 10]
          - Input Half:       00100100111111100011000010101111
          - S-Box Result:     11100111101111000001111101001011   [per every group of 4-bits]
          - Split Into Two:   1110011110111100 [L] 0001111101001011 [R]
          - Swap Halves:      00011111010010111110011110111100
          - Bit Inversion:    11100000101101000001100001000011
          - Compressed Key:   11011010001101110110101000010110   [done by compression P-Box]
          - XOR with Key:     00111010100000110111001001010101

          - FUNCTION OUTPUT:  00111010100000110111001001010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110001101100011010010010100

       - FUNCTION OUTPUT:          00111010100000110111001001010101

       - Left XOR FUNCTION OUTPUT: 10000100101101010100011011000001

       - Next Round Left 32 Bits:  00100100111111100011000010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100101101010100011011000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100111111100011000010101111

       - Right 32 Bits:            10000100101101010100011011000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001101010011000100100101011011110101111101011011   [Subkey: 9]
          - Input Half:       10000100101101010100011011000001
          - S-Box Result:     00100111100010010111000001011010   [per every group of 4-bits]
          - Split Into Two:   0010011110001001 [L] 0111000001011010 [R]
          - Swap Halves:      01110000010110100010011110001001
          - Bit Inversion:    10001111101001011101100001110110
          - Compressed Key:   00001110100100010111111011010111   [done by compression P-Box]
          - XOR with Key:     10000001001101001010011010100001

          - FUNCTION OUTPUT:  10000001001101001010011010100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100111111100011000010101111

       - FUNCTION OUTPUT:          10000001001101001010011010100001

       - Left XOR FUNCTION OUTPUT: 10100101110010101001011000001110

       - Next Round Left 32 Bits:  10000100101101010100011011000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101110010101001011000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100101101010100011011000001

       - Right 32 Bits:            10100101110010101001011000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011001010110011101101101010010000101000001010010   [Subkey: 8]
          - Input Half:       10100101110010101001011000001110
          - S-Box Result:     01001001010101000011000011111100   [per every group of 4-bits]
          - Split Into Two:   0100100101010100 [L] 0011000011111100 [R]
          - Swap Halves:      00110000111111000100100101010100
          - Bit Inversion:    11001111000000111011011010101011
          - Compressed Key:   10110110110010010101001000000001   [done by compression P-Box]
          - XOR with Key:     01111001110010101110010010101010

          - FUNCTION OUTPUT:  01111001110010101110010010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100101101010100011011000001

       - FUNCTION OUTPUT:          01111001110010101110010010101010

       - Left XOR FUNCTION OUTPUT: 11111101011111111010001001101011

       - Next Round Left 32 Bits:  10100101110010101001011000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101011111111010001001101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101110010101001011000001110

       - Right 32 Bits:            11111101011111111010001001101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001000010011010100110001001001010110111101011111010110   [Subkey: 7]
          - Input Half:       11111101011111111010001001101011
          - S-Box Result:     10110110110110110100111000001000   [per every group of 4-bits]
          - Split Into Two:   1011011011011011 [L] 0100111000001000 [R]
          - Swap Halves:      01001110000010001011011011011011
          - Bit Inversion:    10110001111101110100100100100100
          - Compressed Key:   10000011011010000101111111111001   [done by compression P-Box]
          - XOR with Key:     00110010100111110001011011011101

          - FUNCTION OUTPUT:  00110010100111110001011011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101110010101001011000001110

       - FUNCTION OUTPUT:          00110010100111110001011011011101

       - Left XOR FUNCTION OUTPUT: 10010111010101011000000011010011

       - Next Round Left 32 Bits:  11111101011111111010001001101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111010101011000000011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101011111111010001001101011

       - Right 32 Bits:            10010111010101011000000011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011011110110010101100111011011010100100001010000010100   [Subkey: 6]
          - Input Half:       10010111010101011000000011010011
          - S-Box Result:     00111101100110010010111101100001   [per every group of 4-bits]
          - Split Into Two:   0011110110011001 [L] 0010111101100001 [R]
          - Swap Halves:      00101111011000010011110110011001
          - Bit Inversion:    11010000100111101100001001100110
          - Compressed Key:   11101001011111100101010001001000   [done by compression P-Box]
          - XOR with Key:     00111001111000001001011000101110

          - FUNCTION OUTPUT:  00111001111000001001011000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101011111111010001001101011

       - FUNCTION OUTPUT:          00111001111000001001011000101110

       - Left XOR FUNCTION OUTPUT: 11000100100111110011010001000101

       - Next Round Left 32 Bits:  10010111010101011000000011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100100111110011010001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111010101011000000011010011

       - Right 32 Bits:            11000100100111110011010001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110010000100110101001100010010010101101111010111110101   [Subkey: 5]
          - Input Half:       11000100100111110011010001000101
          - S-Box Result:     01010111001110110001011101111001   [per every group of 4-bits]
          - Split Into Two:   0101011100111011 [L] 0001011101111001 [R]
          - Swap Halves:      00010111011110010101011100111011
          - Bit Inversion:    11101000100001101010100011000100
          - Compressed Key:   01101000010100100001011101111010   [done by compression P-Box]
          - XOR with Key:     10000000110101001011111110111110

          - FUNCTION OUTPUT:  10000000110101001011111110111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111010101011000000011010011

       - FUNCTION OUTPUT:          10000000110101001011111110111110

       - Left XOR FUNCTION OUTPUT: 00010111100000010011111101101101

       - Next Round Left 32 Bits:  11000100100111110011010001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111100000010011111101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100100111110011010001000101

       - Right 32 Bits:            00010111100000010011111101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100110111101100101011001110110110101001000010100000101   [Subkey: 4]
          - Input Half:       00010111100000010011111101101101
          - S-Box Result:     10101101001010100001101100000110   [per every group of 4-bits]
          - Split Into Two:   1010110100101010 [L] 0001101100000110 [R]
          - Swap Halves:      00011011000001101010110100101010
          - Bit Inversion:    11100100111110010101001011010101
          - Compressed Key:   00111110010110111001000101011010   [done by compression P-Box]
          - XOR with Key:     11011010101000101100001110001111

          - FUNCTION OUTPUT:  11011010101000101100001110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100100111110011010001000101

       - FUNCTION OUTPUT:          11011010101000101100001110001111

       - Left XOR FUNCTION OUTPUT: 00011110001111011111011111001010

       - Next Round Left 32 Bits:  00010111100000010011111101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110001111011111011111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111100000010011111101101101

       - Right 32 Bits:            00011110001111011111011111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101100100001001101010011000100100101011011110101111101   [Subkey: 3]
          - Input Half:       00011110001111011111011111001010
          - S-Box Result:     10101100000101101011110101010100   [per every group of 4-bits]
          - Split Into Two:   1010110000010110 [L] 1011110101010100 [R]
          - Swap Halves:      10111101010101001010110000010110
          - Bit Inversion:    01000010101010110101001111101001
          - Compressed Key:   10010010010111001000100101011110   [done by compression P-Box]
          - XOR with Key:     11010000111101111101101010110111

          - FUNCTION OUTPUT:  11010000111101111101101010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111100000010011111101101101

       - FUNCTION OUTPUT:          11010000111101111101101010110111

       - Left XOR FUNCTION OUTPUT: 11000111011101101110010111011010

       - Next Round Left 32 Bits:  00011110001111011111011111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111011101101110010111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110001111011111011111001010

       - Right 32 Bits:            11000111011101101110010111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001001101111011001010110011101101101010010000101000001   [Subkey: 2]
          - Input Half:       11000111011101101110010111011010
          - S-Box Result:     01011101110100001100100101100100   [per every group of 4-bits]
          - Split Into Two:   0101110111010000 [L] 1100100101100100 [R]
          - Swap Halves:      11001001011001000101110111010000
          - Bit Inversion:    00110110100110111010001000101111
          - Compressed Key:   10001111000101101110100000010010   [done by compression P-Box]
          - XOR with Key:     10111001100011010100101000111101

          - FUNCTION OUTPUT:  10111001100011010100101000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110001111011111011111001010

       - FUNCTION OUTPUT:          10111001100011010100101000111101

       - Left XOR FUNCTION OUTPUT: 10100111101100001011110111110111

       - Next Round Left 32 Bits:  11000111011101101110010111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111101100001011110111110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111011101101110010111011010

       - Right 32 Bits:            10100111101100001011110111110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011001000010011010100110001001001010110111101011111   [Subkey: 1]
          - Input Half:       10100111101100001011110111110111
          - S-Box Result:     01001101100011111000011010111101   [per every group of 4-bits]
          - Split Into Two:   0100110110001111 [L] 1000011010111101 [R]
          - Swap Halves:      10000110101111010100110110001111
          - Bit Inversion:    01111001010000101011001001110000
          - Compressed Key:   11100100100100110110101011011111   [done by compression P-Box]
          - XOR with Key:     10011101110100011101100010101111

          - FUNCTION OUTPUT:  10011101110100011101100010101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111011101101110010111011010

       - FUNCTION OUTPUT:          10011101110100011101100010101111

       - Left XOR FUNCTION OUTPUT: 01011010101001110011110101110101

       - Next Round Left 32 Bits:  10100111101100001011110111110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010101001110011110101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101101010100111001111010111010110100111101100001011110111110111

 > Processed Block:     0101101010100111001111010111010110100111101100001011110111110111


FINAL PROCESSED DATA BLOCKS: 0010010101010011000101110111100110010001101100010000000111011100,1100001010101011001001011110010010011000011010000010101011110000,1011101001010101000010110111100100001100101100010000100111011110,1101100001000001101100110001000110110110110111001111111010001010,0011101110111101101111100011010100000001110011011011011110111100,0101101010100111001111010111010110100111101100001011110111110111,

BLOCKS IN ASCII:             %Sy?±ÜÂ«%ä?h*ðºUy±	ÞØA³¶Üþ?;½¾5Í·¼Z§=u§°½÷

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: nKGmtHx
In Binary:  01101110010010110100011101101101011101000100100001111000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00100011011010010111000100100101000101110110111100001111
Subkey 2  : 10111001001011010001110110110101110100010010000111100001
Subkey 3  : 10001101101001011100010010010100010111011011110000111100
Subkey 4  : 11100100101101000111011011010111010001001000011110000110
Subkey 5  : 00110110100101110001001001010001011101101111000011110010
Subkey 6  : 10010010110100011101101101011101000100100001111000011011
Subkey 7  : 11011010010111000100100101000101110110111100001111001000
Subkey 8  : 01001011010001110110110101110100010010000111100001101110
Subkey 9  : 01101001011100010010010100010111011011110000111100100011
Subkey 10 : 00101101000111011011010111010001001000011110000110111001
Subkey 11 : 10100101110001001001010001011101101111000011110010001101
Subkey 12 : 10110100011101101101011101000100100001111000011011100100
Subkey 13 : 10010111000100100101000101110110111100001111001000110110
Subkey 14 : 11010001110110110101110100010010000111100001101110010010
Subkey 15 : 01011100010010010100010111011011110000111100100011011010
Subkey 16 : 01000111011011010111010001001000011110000110111001001011

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : %Sy?±ÜÂ«%ä?h*ðºUy±	ÞØA³¶Üþ?;½¾5Í·¼Z§=u§°½÷

Data padded with spaces : %Sy?±ÜÂ«%ä?h*ðºUy±	ÞØA³¶Üþ?;½¾5Í·¼Z§=u§°½÷[Padded with '0' spaces]

Data in ASCII           : 37,83,23,121,145,177,1,220,194,171,37,228,152,104,42,240,186,85,11,121,12,177,9,222,216,65,179,17,182,220,254,138,59,189,190,53,1,205,183,188,90,167,61,117,167,176,189,247,

Data in Binary          : 00100101,01010011,00010111,01111001,10010001,10110001,00000001,11011100,11000010,10101011,00100101,11100100,10011000,01101000,00101010,11110000,10111010,01010101,00001011,01111001,00001100,10110001,00001001,11011110,11011000,01000001,10110011,00010001,10110110,11011100,11111110,10001010,00111011,10111101,10111110,00110101,00000001,11001101,10110111,10111100,01011010,10100111,00111101,01110101,10100111,10110000,10111101,11110111,

Data in 64-bit Blocks   : 0010010101010011000101110111100110010001101100010000000111011100,1100001010101011001001011110010010011000011010000010101011110000,1011101001010101000010110111100100001100101100010000100111011110,1101100001000001101100110001000110110110110111001111111010001010,0011101110111101101111100011010100000001110011011011011110111100,0101101010100111001111010111010110100111101100001011110111110111,



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>



Plaintext Block 1: 0010010101010011000101110111100110010001101100010000000111011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101010100110001011101111001

       - Right 32 Bits:            10010001101100010000000111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011010010111000100100101000101110110111100001111   [Subkey: 1]
          - Input Half:       10010001101100010000000111011100
          - S-Box Result:     00111010100010101111101001100101   [per every group of 4-bits]
          - Split Into Two:   0011101010001010 [L] 1111101001100101 [R]
          - Swap Halves:      11111010011001010011101010001010
          - Bit Inversion:    00000101100110101100010101110101
          - Compressed Key:   00100101110100010100111011011111   [done by compression P-Box]
          - XOR with Key:     00100000010010111000101110101010

          - FUNCTION OUTPUT:  00100000010010111000101110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101010100110001011101111001

       - FUNCTION OUTPUT:          00100000010010111000101110101010

       - Left XOR FUNCTION OUTPUT: 00000101000110001001110011010011

       - Next Round Left 32 Bits:  10010001101100010000000111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101000110001001110011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001101100010000000111011100

       - Right 32 Bits:            00000101000110001001110011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001001011010001110110110101110100010010000111100001   [Subkey: 2]
          - Input Half:       00000101000110001001110011010011
          - S-Box Result:     11111001101000100011010101100001   [per every group of 4-bits]
          - Split Into Two:   1111100110100010 [L] 0011010101100001 [R]
          - Swap Halves:      00110101011000011111100110100010
          - Bit Inversion:    11001010100111100000011001011101
          - Compressed Key:   11000111001101111101100000110010   [done by compression P-Box]
          - XOR with Key:     00001101101010011101111001101111

          - FUNCTION OUTPUT:  00001101101010011101111001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001101100010000000111011100

       - FUNCTION OUTPUT:          00001101101010011101111001101111

       - Left XOR FUNCTION OUTPUT: 10011100000110001101111110110011

       - Next Round Left 32 Bits:  00000101000110001001110011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100000110001101111110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101000110001001110011010011

       - Right 32 Bits:            10011100000110001101111110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001101101001011100010010010100010111011011110000111100   [Subkey: 3]
          - Input Half:       10011100000110001101111110110011
          - S-Box Result:     00110101101000100110101110000001   [per every group of 4-bits]
          - Split Into Two:   0011010110100010 [L] 0110101110000001 [R]
          - Swap Halves:      01101011100000010011010110100010
          - Bit Inversion:    10010100011111101100101001011101
          - Compressed Key:   10010110010001100001100101001100   [done by compression P-Box]
          - XOR with Key:     00000010001110001101001100010001

          - FUNCTION OUTPUT:  00000010001110001101001100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101000110001001110011010011

       - FUNCTION OUTPUT:          00000010001110001101001100010001

       - Left XOR FUNCTION OUTPUT: 00000111001000000100111111000010

       - Next Round Left 32 Bits:  10011100000110001101111110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001000000100111111000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100000110001101111110110011

       - Right 32 Bits:            00000111001000000100111111000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100101101000111011011010111010001001000011110000110   [Subkey: 4]
          - Input Half:       00000111001000000100111111000010
          - S-Box Result:     11111101111011110111101101011110   [per every group of 4-bits]
          - Split Into Two:   1111110111101111 [L] 0111101101011110 [R]
          - Swap Halves:      01111011010111101111110111101111
          - Bit Inversion:    10000100101000010000001000010000
          - Compressed Key:   00011110110111100101000111111001   [done by compression P-Box]
          - XOR with Key:     10011010011111110101001111101001

          - FUNCTION OUTPUT:  10011010011111110101001111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100000110001101111110110011

       - FUNCTION OUTPUT:          10011010011111110101001111101001

       - Left XOR FUNCTION OUTPUT: 00000110011001111000110001011010

       - Next Round Left 32 Bits:  00000111001000000100111111000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110011001111000110001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001000000100111111000010

       - Right 32 Bits:            00000110011001111000110001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110100101110001001001010001011101101111000011110010   [Subkey: 5]
          - Input Half:       00000110011001111000110001011010
          - S-Box Result:     11110000000011010010010110010100   [per every group of 4-bits]
          - Split Into Two:   1111000000001101 [L] 0010010110010100 [R]
          - Swap Halves:      00100101100101001111000000001101
          - Bit Inversion:    11011010011010110000111111110010
          - Compressed Key:   01111010000110100111011100100001   [done by compression P-Box]
          - XOR with Key:     10100000011100010111100011010011

          - FUNCTION OUTPUT:  10100000011100010111100011010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001000000100111111000010

       - FUNCTION OUTPUT:          10100000011100010111100011010011

       - Left XOR FUNCTION OUTPUT: 10100111010100010011011100010001

       - Next Round Left 32 Bits:  00000110011001111000110001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111010100010011011100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110011001111000110001011010

       - Right 32 Bits:            10100111010100010011011100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110100011101101101011101000100100001111000011011   [Subkey: 6]
          - Input Half:       10100111010100010011011100010001
          - S-Box Result:     01001101100110100001110110101010   [per every group of 4-bits]
          - Split Into Two:   0100110110011010 [L] 0001110110101010 [R]
          - Swap Halves:      00011101101010100100110110011010
          - Bit Inversion:    11100010010101011011001001100101
          - Compressed Key:   01101000011110100100010011000111   [done by compression P-Box]
          - XOR with Key:     10001010001011111111011010100010

          - FUNCTION OUTPUT:  10001010001011111111011010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110011001111000110001011010

       - FUNCTION OUTPUT:          10001010001011111111011010100010

       - Left XOR FUNCTION OUTPUT: 10001100010010000111101011111000

       - Next Round Left 32 Bits:  10100111010100010011011100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100010010000111101011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111010100010011011100010001

       - Right 32 Bits:            10001100010010000111101011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010111000100100101000101110110111100001111001000   [Subkey: 7]
          - Input Half:       10001100010010000111101011111000
          - S-Box Result:     00100101011100101101010010110010   [per every group of 4-bits]
          - Split Into Two:   0010010101110010 [L] 1101010010110010 [R]
          - Swap Halves:      11010100101100100010010101110010
          - Bit Inversion:    00101011010011011101101010001101
          - Compressed Key:   11101011011010001101111110110100   [done by compression P-Box]
          - XOR with Key:     11000000001001010000010100111001

          - FUNCTION OUTPUT:  11000000001001010000010100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111010100010011011100010001

       - FUNCTION OUTPUT:          11000000001001010000010100111001

       - Left XOR FUNCTION OUTPUT: 01100111011101000011001000101000

       - Next Round Left 32 Bits:  10001100010010000111101011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111011101000011001000101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100010010000111101011111000

       - Right 32 Bits:            01100111011101000011001000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010001110110110101110100010010000111100001101110   [Subkey: 8]
          - Input Half:       01100111011101000011001000101000
          - S-Box Result:     00001101110101110001111011100010   [per every group of 4-bits]
          - Split Into Two:   0000110111010111 [L] 0001111011100010 [R]
          - Swap Halves:      00011110111000100000110111010111
          - Bit Inversion:    11100001000111011111001000101000
          - Compressed Key:   10100010111010110001001000001101   [done by compression P-Box]
          - XOR with Key:     01000011111101101110000000100101

          - FUNCTION OUTPUT:  01000011111101101110000000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100010010000111101011111000

       - FUNCTION OUTPUT:          01000011111101101110000000100101

       - Left XOR FUNCTION OUTPUT: 11001111101111101001101011011101

       - Next Round Left 32 Bits:  01100111011101000011001000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111101111101001101011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111011101000011001000101000

       - Right 32 Bits:            11001111101111101001101011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011100010010010100010111011011110000111100100011   [Subkey: 9]
          - Input Half:       11001111101111101001101011011101
          - S-Box Result:     01011011100011000011010001100110   [per every group of 4-bits]
          - Split Into Two:   0101101110001100 [L] 0011010001100110 [R]
          - Swap Halves:      00110100011001100101101110001100
          - Bit Inversion:    11001011100110011010010001110011
          - Compressed Key:   10001100100000100111110011010011   [done by compression P-Box]
          - XOR with Key:     01000111000110111101100010100000

          - FUNCTION OUTPUT:  01000111000110111101100010100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111011101000011001000101000

       - FUNCTION OUTPUT:          01000111000110111101100010100000

       - Left XOR FUNCTION OUTPUT: 00100000011011111110101010001000

       - Next Round Left 32 Bits:  11001111101111101001101011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000011011111110101010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111101111101001101011011101

       - Right 32 Bits:            00100000011011111110101010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101000111011011010111010001001000011110000110111001   [Subkey: 10]
          - Input Half:       00100000011011111110101010001000
          - S-Box Result:     11101111000010111100010000100010   [per every group of 4-bits]
          - Split Into Two:   1110111100001011 [L] 1100010000100010 [R]
          - Swap Halves:      11000100001000101110111100001011
          - Bit Inversion:    00111011110111010001000011110100
          - Compressed Key:   10011011100111100110101100110110   [done by compression P-Box]
          - XOR with Key:     10100000010000110111101111000010

          - FUNCTION OUTPUT:  10100000010000110111101111000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111101111101001101011011101

       - FUNCTION OUTPUT:          10100000010000110111101111000010

       - Left XOR FUNCTION OUTPUT: 01101111111111011110000100011111

       - Next Round Left 32 Bits:  00100000011011111110101010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111111111011110000100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000011011111110101010001000

       - Right 32 Bits:            01101111111111011110000100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101110001001001010001011101101111000011110010001101   [Subkey: 11]
          - Input Half:       01101111111111011110000100011111
          - S-Box Result:     00001011101101101100101010101011   [per every group of 4-bits]
          - Split Into Two:   0000101110110110 [L] 1100101010101011 [R]
          - Swap Halves:      11001010101010110000101110110110
          - Bit Inversion:    00110101010101001111010001001001
          - Compressed Key:   00010010000110101110000001101110   [done by compression P-Box]
          - XOR with Key:     00100111010011100001010000100111

          - FUNCTION OUTPUT:  00100111010011100001010000100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000011011111110101010001000

       - FUNCTION OUTPUT:          00100111010011100001010000100111

       - Left XOR FUNCTION OUTPUT: 00000111001000011111111010101111

       - Next Round Left 32 Bits:  01101111111111011110000100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001000011111111010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111111111011110000100011111

       - Right 32 Bits:            00000111001000011111111010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101101101011101000100100001111000011011100100   [Subkey: 12]
          - Input Half:       00000111001000011111111010101111
          - S-Box Result:     11111101111010101011110001001011   [per every group of 4-bits]
          - Split Into Two:   1111110111101010 [L] 1011110001001011 [R]
          - Swap Halves:      10111100010010111111110111101010
          - Bit Inversion:    01000011101101000000001000010101
          - Compressed Key:   01011110010110001000110111101000   [done by compression P-Box]
          - XOR with Key:     00011101111011001000111111111101

          - FUNCTION OUTPUT:  00011101111011001000111111111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111111111011110000100011111

       - FUNCTION OUTPUT:          00011101111011001000111111111101

       - Left XOR FUNCTION OUTPUT: 01110010000100010110111011100010

       - Next Round Left 32 Bits:  00000111001000011111111010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010000100010110111011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001000011111111010101111

       - Right 32 Bits:            01110010000100010110111011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111000100100101000101110110111100001111001000110110   [Subkey: 13]
          - Input Half:       01110010000100010110111011100010
          - S-Box Result:     11011110101010100000110011001110   [per every group of 4-bits]
          - Split Into Two:   1101111010101010 [L] 0000110011001110 [R]
          - Swap Halves:      00001100110011101101111010101010
          - Bit Inversion:    11110011001100010010000101010101
          - Compressed Key:   01111000010110111011001110001001   [done by compression P-Box]
          - XOR with Key:     10001011011010101001001011011100

          - FUNCTION OUTPUT:  10001011011010101001001011011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001000011111111010101111

       - FUNCTION OUTPUT:          10001011011010101001001011011100

       - Left XOR FUNCTION OUTPUT: 10001100010010110110110001110011

       - Next Round Left 32 Bits:  01110010000100010110111011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100010010110110110001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010000100010110111011100010

       - Right 32 Bits:            10001100010010110110110001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001110110110101110100010010000111100001101110010010   [Subkey: 14]
          - Input Half:       10001100010010110110110001110011
          - S-Box Result:     00100101011110000000010111010001   [per every group of 4-bits]
          - Split Into Two:   0010010101111000 [L] 0000010111010001 [R]
          - Swap Halves:      00000101110100010010010101111000
          - Bit Inversion:    11111010001011101101101010000111
          - Compressed Key:   01001001011100100000010010110001   [done by compression P-Box]
          - XOR with Key:     10110011010111001101111000110110

          - FUNCTION OUTPUT:  10110011010111001101111000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010000100010110111011100010

       - FUNCTION OUTPUT:          10110011010111001101111000110110

       - Left XOR FUNCTION OUTPUT: 11000001010011011011000011010100

       - Next Round Left 32 Bits:  10001100010010110110110001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001010011011011000011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100010010110110110001110011

       - Right 32 Bits:            11000001010011011011000011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010010010100010111011011110000111100100011011010   [Subkey: 15]
          - Input Half:       11000001010011011011000011010100
          - S-Box Result:     01011010011101101000111101100111   [per every group of 4-bits]
          - Split Into Two:   0101101001110110 [L] 1000111101100111 [R]
          - Swap Halves:      10001111011001110101101001110110
          - Bit Inversion:    01110000100110001010010110001001
          - Compressed Key:   11010001010011101101111100100101   [done by compression P-Box]
          - XOR with Key:     10100001110101100111101010101100

          - FUNCTION OUTPUT:  10100001110101100111101010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100010010110110110001110011

       - FUNCTION OUTPUT:          10100001110101100111101010101100

       - Left XOR FUNCTION OUTPUT: 00101101100111010001011011011111

       - Next Round Left 32 Bits:  11000001010011011011000011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101101100111010001011011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001010011011011000011010100

       - Right 32 Bits:            00101101100111010001011011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111011011010111010001001000011110000110111001001011   [Subkey: 16]
          - Input Half:       00101101100111010001011011011111
          - S-Box Result:     11100110001101101010000001101011   [per every group of 4-bits]
          - Split Into Two:   1110011000110110 [L] 1010000001101011 [R]
          - Swap Halves:      10100000011010111110011000110110
          - Bit Inversion:    01011111100101000001100111001001
          - Compressed Key:   00110111110110000011001011000111   [done by compression P-Box]
          - XOR with Key:     01101000010011000010101100001110

          - FUNCTION OUTPUT:  01101000010011000010101100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001010011011011000011010100

       - FUNCTION OUTPUT:          01101000010011000010101100001110

       - Left XOR FUNCTION OUTPUT: 10101001000000011001101111011010

       - Next Round Left 32 Bits:  00101101100111010001011011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001000000011001101111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010100100000001100110111101101000101101100111010001011011011111

 > Processed Block:     1010100100000001100110111101101000101101100111010001011011011111



Plaintext Block 2: 1100001010101011001001011110010010011000011010000010101011110000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010101010110010010111100100

       - Right 32 Bits:            10011000011010000010101011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011010010111000100100101000101110110111100001111   [Subkey: 1]
          - Input Half:       10011000011010000010101011110000
          - S-Box Result:     00110010000000101110010010111111   [per every group of 4-bits]
          - Split Into Two:   0011001000000010 [L] 1110010010111111 [R]
          - Swap Halves:      11100100101111110011001000000010
          - Bit Inversion:    00011011010000001100110111111101
          - Compressed Key:   00100101110100010100111011011111   [done by compression P-Box]
          - XOR with Key:     00111110100100011000001100100010

          - FUNCTION OUTPUT:  00111110100100011000001100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010101010110010010111100100

       - FUNCTION OUTPUT:          00111110100100011000001100100010

       - Left XOR FUNCTION OUTPUT: 11111100001110101010011011000110

       - Next Round Left 32 Bits:  10011000011010000010101011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100001110101010011011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000011010000010101011110000

       - Right 32 Bits:            11111100001110101010011011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001001011010001110110110101110100010010000111100001   [Subkey: 2]
          - Input Half:       11111100001110101010011011000110
          - S-Box Result:     10110101000101000100000001010000   [per every group of 4-bits]
          - Split Into Two:   1011010100010100 [L] 0100000001010000 [R]
          - Swap Halves:      01000000010100001011010100010100
          - Bit Inversion:    10111111101011110100101011101011
          - Compressed Key:   11000111001101111101100000110010   [done by compression P-Box]
          - XOR with Key:     01111000100110001001001011011001

          - FUNCTION OUTPUT:  01111000100110001001001011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000011010000010101011110000

       - FUNCTION OUTPUT:          01111000100110001001001011011001

       - Left XOR FUNCTION OUTPUT: 11100000111100001011100000101001

       - Next Round Left 32 Bits:  11111100001110101010011011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000111100001011100000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100001110101010011011000110

       - Right 32 Bits:            11100000111100001011100000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001101101001011100010010010100010111011011110000111100   [Subkey: 3]
          - Input Half:       11100000111100001011100000101001
          - S-Box Result:     11001111101111111000001011100011   [per every group of 4-bits]
          - Split Into Two:   1100111110111111 [L] 1000001011100011 [R]
          - Swap Halves:      10000010111000111100111110111111
          - Bit Inversion:    01111101000111000011000001000000
          - Compressed Key:   10010110010001100001100101001100   [done by compression P-Box]
          - XOR with Key:     11101011010110100010100100001100

          - FUNCTION OUTPUT:  11101011010110100010100100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100001110101010011011000110

       - FUNCTION OUTPUT:          11101011010110100010100100001100

       - Left XOR FUNCTION OUTPUT: 00010111011000001000111111001010

       - Next Round Left 32 Bits:  11100000111100001011100000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111011000001000111111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000111100001011100000101001

       - Right 32 Bits:            00010111011000001000111111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100101101000111011011010111010001001000011110000110   [Subkey: 4]
          - Input Half:       00010111011000001000111111001010
          - S-Box Result:     10101101000011110010101101010100   [per every group of 4-bits]
          - Split Into Two:   1010110100001111 [L] 0010101101010100 [R]
          - Swap Halves:      00101011010101001010110100001111
          - Bit Inversion:    11010100101010110101001011110000
          - Compressed Key:   00011110110111100101000111111001   [done by compression P-Box]
          - XOR with Key:     11001010011101010000001100001001

          - FUNCTION OUTPUT:  11001010011101010000001100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000111100001011100000101001

       - FUNCTION OUTPUT:          11001010011101010000001100001001

       - Left XOR FUNCTION OUTPUT: 00101010100001011011101100100000

       - Next Round Left 32 Bits:  00010111011000001000111111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010100001011011101100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111011000001000111111001010

       - Right 32 Bits:            00101010100001011011101100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110100101110001001001010001011101101111000011110010   [Subkey: 5]
          - Input Half:       00101010100001011011101100100000
          - S-Box Result:     11100100001010011000100011101111   [per every group of 4-bits]
          - Split Into Two:   1110010000101001 [L] 1000100011101111 [R]
          - Swap Halves:      10001000111011111110010000101001
          - Bit Inversion:    01110111000100000001101111010110
          - Compressed Key:   01111010000110100111011100100001   [done by compression P-Box]
          - XOR with Key:     00001101000010100110110011110111

          - FUNCTION OUTPUT:  00001101000010100110110011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111011000001000111111001010

       - FUNCTION OUTPUT:          00001101000010100110110011110111

       - Left XOR FUNCTION OUTPUT: 00011010011010101110001100111101

       - Next Round Left 32 Bits:  00101010100001011011101100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010011010101110001100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010100001011011101100100000

       - Right 32 Bits:            00011010011010101110001100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110100011101101101011101000100100001111000011011   [Subkey: 6]
          - Input Half:       00011010011010101110001100111101
          - S-Box Result:     10100100000001001100000100010110   [per every group of 4-bits]
          - Split Into Two:   1010010000000100 [L] 1100000100010110 [R]
          - Swap Halves:      11000001000101101010010000000100
          - Bit Inversion:    00111110111010010101101111111011
          - Compressed Key:   01101000011110100100010011000111   [done by compression P-Box]
          - XOR with Key:     01010110100100110001111100111100

          - FUNCTION OUTPUT:  01010110100100110001111100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010100001011011101100100000

       - FUNCTION OUTPUT:          01010110100100110001111100111100

       - Left XOR FUNCTION OUTPUT: 01111100000101101010010000011100

       - Next Round Left 32 Bits:  00011010011010101110001100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100000101101010010000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010011010101110001100111101

       - Right 32 Bits:            01111100000101101010010000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010111000100100101000101110110111100001111001000   [Subkey: 7]
          - Input Half:       01111100000101101010010000011100
          - S-Box Result:     11010101101000000100011110100101   [per every group of 4-bits]
          - Split Into Two:   1101010110100000 [L] 0100011110100101 [R]
          - Swap Halves:      01000111101001011101010110100000
          - Bit Inversion:    10111000010110100010101001011111
          - Compressed Key:   11101011011010001101111110110100   [done by compression P-Box]
          - XOR with Key:     01010011001100101111010111101011

          - FUNCTION OUTPUT:  01010011001100101111010111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010011010101110001100111101

       - FUNCTION OUTPUT:          01010011001100101111010111101011

       - Left XOR FUNCTION OUTPUT: 01001001010110000001011011010110

       - Next Round Left 32 Bits:  01111100000101101010010000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001010110000001011011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100000101101010010000011100

       - Right 32 Bits:            01001001010110000001011011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010001110110110101110100010010000111100001101110   [Subkey: 8]
          - Input Half:       01001001010110000001011011010110
          - S-Box Result:     01110011100100101010000001100000   [per every group of 4-bits]
          - Split Into Two:   0111001110010010 [L] 1010000001100000 [R]
          - Swap Halves:      10100000011000000111001110010010
          - Bit Inversion:    01011111100111111000110001101101
          - Compressed Key:   10100010111010110001001000001101   [done by compression P-Box]
          - XOR with Key:     11111101011101001001111001100000

          - FUNCTION OUTPUT:  11111101011101001001111001100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100000101101010010000011100

       - FUNCTION OUTPUT:          11111101011101001001111001100000

       - Left XOR FUNCTION OUTPUT: 10000001011000100011101001111100

       - Next Round Left 32 Bits:  01001001010110000001011011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001011000100011101001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001010110000001011011010110

       - Right 32 Bits:            10000001011000100011101001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011100010010010100010111011011110000111100100011   [Subkey: 9]
          - Input Half:       10000001011000100011101001111100
          - S-Box Result:     00101010000011100001010011010101   [per every group of 4-bits]
          - Split Into Two:   0010101000001110 [L] 0001010011010101 [R]
          - Swap Halves:      00010100110101010010101000001110
          - Bit Inversion:    11101011001010101101010111110001
          - Compressed Key:   10001100100000100111110011010011   [done by compression P-Box]
          - XOR with Key:     01100111101010001010100100100010

          - FUNCTION OUTPUT:  01100111101010001010100100100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001010110000001011011010110

       - FUNCTION OUTPUT:          01100111101010001010100100100010

       - Left XOR FUNCTION OUTPUT: 00101110111100001011111111110100

       - Next Round Left 32 Bits:  10000001011000100011101001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110111100001011111111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001011000100011101001111100

       - Right 32 Bits:            00101110111100001011111111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101000111011011010111010001001000011110000110111001   [Subkey: 10]
          - Input Half:       00101110111100001011111111110100
          - S-Box Result:     11101100101111111000101110110111   [per every group of 4-bits]
          - Split Into Two:   1110110010111111 [L] 1000101110110111 [R]
          - Swap Halves:      10001011101101111110110010111111
          - Bit Inversion:    01110100010010000001001101000000
          - Compressed Key:   10011011100111100110101100110110   [done by compression P-Box]
          - XOR with Key:     11101111110101100111100001110110

          - FUNCTION OUTPUT:  11101111110101100111100001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001011000100011101001111100

       - FUNCTION OUTPUT:          11101111110101100111100001110110

       - Left XOR FUNCTION OUTPUT: 01101110101101000100001000001010

       - Next Round Left 32 Bits:  00101110111100001011111111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110101101000100001000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110111100001011111111110100

       - Right 32 Bits:            01101110101101000100001000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101110001001001010001011101101111000011110010001101   [Subkey: 11]
          - Input Half:       01101110101101000100001000001010
          - S-Box Result:     00001100100001110111111011110100   [per every group of 4-bits]
          - Split Into Two:   0000110010000111 [L] 0111111011110100 [R]
          - Swap Halves:      01111110111101000000110010000111
          - Bit Inversion:    10000001000010111111001101111000
          - Compressed Key:   00010010000110101110000001101110   [done by compression P-Box]
          - XOR with Key:     10010011000100010001001100010110

          - FUNCTION OUTPUT:  10010011000100010001001100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110111100001011111111110100

       - FUNCTION OUTPUT:          10010011000100010001001100010110

       - Left XOR FUNCTION OUTPUT: 10111101111000011010110011100010

       - Next Round Left 32 Bits:  01101110101101000100001000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101111000011010110011100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110101101000100001000001010

       - Right 32 Bits:            10111101111000011010110011100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101101101011101000100100001111000011011100100   [Subkey: 12]
          - Input Half:       10111101111000011010110011100010
          - S-Box Result:     10000110110010100100010111001110   [per every group of 4-bits]
          - Split Into Two:   1000011011001010 [L] 0100010111001110 [R]
          - Swap Halves:      01000101110011101000011011001010
          - Bit Inversion:    10111010001100010111100100110101
          - Compressed Key:   01011110010110001000110111101000   [done by compression P-Box]
          - XOR with Key:     11100100011010011111010011011101

          - FUNCTION OUTPUT:  11100100011010011111010011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110101101000100001000001010

       - FUNCTION OUTPUT:          11100100011010011111010011011101

       - Left XOR FUNCTION OUTPUT: 10001010110111011011011011010111

       - Next Round Left 32 Bits:  10111101111000011010110011100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010110111011011011011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101111000011010110011100010

       - Right 32 Bits:            10001010110111011011011011010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111000100100101000101110110111100001111001000110110   [Subkey: 13]
          - Input Half:       10001010110111011011011011010111
          - S-Box Result:     00100100011001101000000001101101   [per every group of 4-bits]
          - Split Into Two:   0010010001100110 [L] 1000000001101101 [R]
          - Swap Halves:      10000000011011010010010001100110
          - Bit Inversion:    01111111100100101101101110011001
          - Compressed Key:   01111000010110111011001110001001   [done by compression P-Box]
          - XOR with Key:     00000111110010010110100000010000

          - FUNCTION OUTPUT:  00000111110010010110100000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101111000011010110011100010

       - FUNCTION OUTPUT:          00000111110010010110100000010000

       - Left XOR FUNCTION OUTPUT: 10111010001010001100010011110010

       - Next Round Left 32 Bits:  10001010110111011011011011010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010001010001100010011110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010110111011011011011010111

       - Right 32 Bits:            10111010001010001100010011110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001110110110101110100010010000111100001101110010010   [Subkey: 14]
          - Input Half:       10111010001010001100010011110010
          - S-Box Result:     10000100111000100101011110111110   [per every group of 4-bits]
          - Split Into Two:   1000010011100010 [L] 0101011110111110 [R]
          - Swap Halves:      01010111101111101000010011100010
          - Bit Inversion:    10101000010000010111101100011101
          - Compressed Key:   01001001011100100000010010110001   [done by compression P-Box]
          - XOR with Key:     11100001001100110111111110101100

          - FUNCTION OUTPUT:  11100001001100110111111110101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010110111011011011011010111

       - FUNCTION OUTPUT:          11100001001100110111111110101100

       - Left XOR FUNCTION OUTPUT: 01101011111011101100100101111011

       - Next Round Left 32 Bits:  10111010001010001100010011110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011111011101100100101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010001010001100010011110010

       - Right 32 Bits:            01101011111011101100100101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010010010100010111011011110000111100100011011010   [Subkey: 15]
          - Input Half:       01101011111011101100100101111011
          - S-Box Result:     00001000110011000101001111011000   [per every group of 4-bits]
          - Split Into Two:   0000100011001100 [L] 0101001111011000 [R]
          - Swap Halves:      01010011110110000000100011001100
          - Bit Inversion:    10101100001001111111011100110011
          - Compressed Key:   11010001010011101101111100100101   [done by compression P-Box]
          - XOR with Key:     01111101011010010010100000010110

          - FUNCTION OUTPUT:  01111101011010010010100000010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010001010001100010011110010

       - FUNCTION OUTPUT:          01111101011010010010100000010110

       - Left XOR FUNCTION OUTPUT: 11000111010000011110110011100100

       - Next Round Left 32 Bits:  01101011111011101100100101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111010000011110110011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011111011101100100101111011

       - Right 32 Bits:            11000111010000011110110011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111011011010111010001001000011110000110111001001011   [Subkey: 16]
          - Input Half:       11000111010000011110110011100100
          - S-Box Result:     01011101011110101100010111000111   [per every group of 4-bits]
          - Split Into Two:   0101110101111010 [L] 1100010111000111 [R]
          - Swap Halves:      11000101110001110101110101111010
          - Bit Inversion:    00111010001110001010001010000101
          - Compressed Key:   00110111110110000011001011000111   [done by compression P-Box]
          - XOR with Key:     00001101111000001001000001000010

          - FUNCTION OUTPUT:  00001101111000001001000001000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011111011101100100101111011

       - FUNCTION OUTPUT:          00001101111000001001000001000010

       - Left XOR FUNCTION OUTPUT: 01100110000011100101100100111001

       - Next Round Left 32 Bits:  11000111010000011110110011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110000011100101100100111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110011000001110010110010011100111000111010000011110110011100100

 > Processed Block:     0110011000001110010110010011100111000111010000011110110011100100



Plaintext Block 3: 1011101001010101000010110111100100001100101100010000100111011110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010010101010000101101111001

       - Right 32 Bits:            00001100101100010000100111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011010010111000100100101000101110110111100001111   [Subkey: 1]
          - Input Half:       00001100101100010000100111011110
          - S-Box Result:     11110101100010101111001101101100   [per every group of 4-bits]
          - Split Into Two:   1111010110001010 [L] 1111001101101100 [R]
          - Swap Halves:      11110011011011001111010110001010
          - Bit Inversion:    00001100100100110000101001110101
          - Compressed Key:   00100101110100010100111011011111   [done by compression P-Box]
          - XOR with Key:     00101001010000100100010010101010

          - FUNCTION OUTPUT:  00101001010000100100010010101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010010101010000101101111001

       - FUNCTION OUTPUT:          00101001010000100100010010101010

       - Left XOR FUNCTION OUTPUT: 10010011000101110100111111010011

       - Next Round Left 32 Bits:  00001100101100010000100111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011000101110100111111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100101100010000100111011110

       - Right 32 Bits:            10010011000101110100111111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001001011010001110110110101110100010010000111100001   [Subkey: 2]
          - Input Half:       10010011000101110100111111010011
          - S-Box Result:     00110001101011010111101101100001   [per every group of 4-bits]
          - Split Into Two:   0011000110101101 [L] 0111101101100001 [R]
          - Swap Halves:      01111011011000010011000110101101
          - Bit Inversion:    10000100100111101100111001010010
          - Compressed Key:   11000111001101111101100000110010   [done by compression P-Box]
          - XOR with Key:     01000011101010010001011001100000

          - FUNCTION OUTPUT:  01000011101010010001011001100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100101100010000100111011110

       - FUNCTION OUTPUT:          01000011101010010001011001100000

       - Left XOR FUNCTION OUTPUT: 01001111000110000001111110111110

       - Next Round Left 32 Bits:  10010011000101110100111111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111000110000001111110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011000101110100111111010011

       - Right 32 Bits:            01001111000110000001111110111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001101101001011100010010010100010111011011110000111100   [Subkey: 3]
          - Input Half:       01001111000110000001111110111110
          - S-Box Result:     01111011101000101010101110001100   [per every group of 4-bits]
          - Split Into Two:   0111101110100010 [L] 1010101110001100 [R]
          - Swap Halves:      10101011100011000111101110100010
          - Bit Inversion:    01010100011100111000010001011101
          - Compressed Key:   10010110010001100001100101001100   [done by compression P-Box]
          - XOR with Key:     11000010001101011001110100010001

          - FUNCTION OUTPUT:  11000010001101011001110100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011000101110100111111010011

       - FUNCTION OUTPUT:          11000010001101011001110100010001

       - Left XOR FUNCTION OUTPUT: 01010001001000101101001011000010

       - Next Round Left 32 Bits:  01001111000110000001111110111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001001000101101001011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111000110000001111110111110

       - Right 32 Bits:            01010001001000101101001011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100101101000111011011010111010001001000011110000110   [Subkey: 4]
          - Input Half:       01010001001000101101001011000010
          - S-Box Result:     10011010111011100110111001011110   [per every group of 4-bits]
          - Split Into Two:   1001101011101110 [L] 0110111001011110 [R]
          - Swap Halves:      01101110010111101001101011101110
          - Bit Inversion:    10010001101000010110010100010001
          - Compressed Key:   00011110110111100101000111111001   [done by compression P-Box]
          - XOR with Key:     10001111011111110011010011101000

          - FUNCTION OUTPUT:  10001111011111110011010011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111000110000001111110111110

       - FUNCTION OUTPUT:          10001111011111110011010011101000

       - Left XOR FUNCTION OUTPUT: 11000000011001110010101101010110

       - Next Round Left 32 Bits:  01010001001000101101001011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000011001110010101101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001001000101101001011000010

       - Right 32 Bits:            11000000011001110010101101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110100101110001001001010001011101101111000011110010   [Subkey: 5]
          - Input Half:       11000000011001110010101101010110
          - S-Box Result:     01011111000011011110100010010000   [per every group of 4-bits]
          - Split Into Two:   0101111100001101 [L] 1110100010010000 [R]
          - Swap Halves:      11101000100100000101111100001101
          - Bit Inversion:    00010111011011111010000011110010
          - Compressed Key:   01111010000110100111011100100001   [done by compression P-Box]
          - XOR with Key:     01101101011101011101011111010011

          - FUNCTION OUTPUT:  01101101011101011101011111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001001000101101001011000010

       - FUNCTION OUTPUT:          01101101011101011101011111010011

       - Left XOR FUNCTION OUTPUT: 00111100010101110000010100010001

       - Next Round Left 32 Bits:  11000000011001110010101101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100010101110000010100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000011001110010101101010110

       - Right 32 Bits:            00111100010101110000010100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110100011101101101011101000100100001111000011011   [Subkey: 6]
          - Input Half:       00111100010101110000010100010001
          - S-Box Result:     00010101100111011111100110101010   [per every group of 4-bits]
          - Split Into Two:   0001010110011101 [L] 1111100110101010 [R]
          - Swap Halves:      11111001101010100001010110011101
          - Bit Inversion:    00000110010101011110101001100010
          - Compressed Key:   01101000011110100100010011000111   [done by compression P-Box]
          - XOR with Key:     01101110001011111010111010100101

          - FUNCTION OUTPUT:  01101110001011111010111010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000011001110010101101010110

       - FUNCTION OUTPUT:          01101110001011111010111010100101

       - Left XOR FUNCTION OUTPUT: 10101110010010001000010111110011

       - Next Round Left 32 Bits:  00111100010101110000010100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110010010001000010111110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100010101110000010100010001

       - Right 32 Bits:            10101110010010001000010111110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010111000100100101000101110110111100001111001000   [Subkey: 7]
          - Input Half:       10101110010010001000010111110011
          - S-Box Result:     01001100011100100010100110110001   [per every group of 4-bits]
          - Split Into Two:   0100110001110010 [L] 0010100110110001 [R]
          - Swap Halves:      00101001101100010100110001110010
          - Bit Inversion:    11010110010011101011001110001101
          - Compressed Key:   11101011011010001101111110110100   [done by compression P-Box]
          - XOR with Key:     00111101001001100110110000111001

          - FUNCTION OUTPUT:  00111101001001100110110000111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100010101110000010100010001

       - FUNCTION OUTPUT:          00111101001001100110110000111001

       - Left XOR FUNCTION OUTPUT: 00000001011100010110100100101000

       - Next Round Left 32 Bits:  10101110010010001000010111110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001011100010110100100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110010010001000010111110011

       - Right 32 Bits:            00000001011100010110100100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010001110110110101110100010010000111100001101110   [Subkey: 8]
          - Input Half:       00000001011100010110100100101000
          - S-Box Result:     11111010110110100000001111100010   [per every group of 4-bits]
          - Split Into Two:   1111101011011010 [L] 0000001111100010 [R]
          - Swap Halves:      00000011111000101111101011011010
          - Bit Inversion:    11111100000111010000010100100101
          - Compressed Key:   10100010111010110001001000001101   [done by compression P-Box]
          - XOR with Key:     01011110111101100001011100101000

          - FUNCTION OUTPUT:  01011110111101100001011100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110010010001000010111110011

       - FUNCTION OUTPUT:          01011110111101100001011100101000

       - Left XOR FUNCTION OUTPUT: 11110000101111101001001011011011

       - Next Round Left 32 Bits:  00000001011100010110100100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000101111101001001011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001011100010110100100101000

       - Right 32 Bits:            11110000101111101001001011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011100010010010100010111011011110000111100100011   [Subkey: 9]
          - Input Half:       11110000101111101001001011011011
          - S-Box Result:     10111111100011000011111001101000   [per every group of 4-bits]
          - Split Into Two:   1011111110001100 [L] 0011111001101000 [R]
          - Swap Halves:      00111110011010001011111110001100
          - Bit Inversion:    11000001100101110100000001110011
          - Compressed Key:   10001100100000100111110011010011   [done by compression P-Box]
          - XOR with Key:     01001101000101010011110010100000

          - FUNCTION OUTPUT:  01001101000101010011110010100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001011100010110100100101000

       - FUNCTION OUTPUT:          01001101000101010011110010100000

       - Left XOR FUNCTION OUTPUT: 01001100011001000101010110001000

       - Next Round Left 32 Bits:  11110000101111101001001011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100011001000101010110001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000101111101001001011011011

       - Right 32 Bits:            01001100011001000101010110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101000111011011010111010001001000011110000110111001   [Subkey: 10]
          - Input Half:       01001100011001000101010110001000
          - S-Box Result:     01110101000001111001100100100010   [per every group of 4-bits]
          - Split Into Two:   0111010100000111 [L] 1001100100100010 [R]
          - Swap Halves:      10011001001000100111010100000111
          - Bit Inversion:    01100110110111011000101011111000
          - Compressed Key:   10011011100111100110101100110110   [done by compression P-Box]
          - XOR with Key:     11111101010000111110000111001110

          - FUNCTION OUTPUT:  11111101010000111110000111001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000101111101001001011011011

       - FUNCTION OUTPUT:          11111101010000111110000111001110

       - Left XOR FUNCTION OUTPUT: 00001101111111010111001100010101

       - Next Round Left 32 Bits:  01001100011001000101010110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101111111010111001100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100011001000101010110001000

       - Right 32 Bits:            00001101111111010111001100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101110001001001010001011101101111000011110010001101   [Subkey: 11]
          - Input Half:       00001101111111010111001100010101
          - S-Box Result:     11110110101101101101000110101001   [per every group of 4-bits]
          - Split Into Two:   1111011010110110 [L] 1101000110101001 [R]
          - Swap Halves:      11010001101010011111011010110110
          - Bit Inversion:    00101110010101100000100101001001
          - Compressed Key:   00010010000110101110000001101110   [done by compression P-Box]
          - XOR with Key:     00111100010011001110100100100111

          - FUNCTION OUTPUT:  00111100010011001110100100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100011001000101010110001000

       - FUNCTION OUTPUT:          00111100010011001110100100100111

       - Left XOR FUNCTION OUTPUT: 01110000001010001011110010101111

       - Next Round Left 32 Bits:  00001101111111010111001100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000001010001011110010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101111111010111001100010101

       - Right 32 Bits:            01110000001010001011110010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101101101011101000100100001111000011011100100   [Subkey: 12]
          - Input Half:       01110000001010001011110010101111
          - S-Box Result:     11011111111000101000010101001011   [per every group of 4-bits]
          - Split Into Two:   1101111111100010 [L] 1000010101001011 [R]
          - Swap Halves:      10000101010010111101111111100010
          - Bit Inversion:    01111010101101000010000000011101
          - Compressed Key:   01011110010110001000110111101000   [done by compression P-Box]
          - XOR with Key:     00100100111011001010110111110101

          - FUNCTION OUTPUT:  00100100111011001010110111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101111111010111001100010101

       - FUNCTION OUTPUT:          00100100111011001010110111110101

       - Left XOR FUNCTION OUTPUT: 00101001000100011101111011100000

       - Next Round Left 32 Bits:  01110000001010001011110010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001000100011101111011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000001010001011110010101111

       - Right 32 Bits:            00101001000100011101111011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111000100100101000101110110111100001111001000110110   [Subkey: 13]
          - Input Half:       00101001000100011101111011100000
          - S-Box Result:     11100011101010100110110011001111   [per every group of 4-bits]
          - Split Into Two:   1110001110101010 [L] 0110110011001111 [R]
          - Swap Halves:      01101100110011111110001110101010
          - Bit Inversion:    10010011001100000001110001010101
          - Compressed Key:   01111000010110111011001110001001   [done by compression P-Box]
          - XOR with Key:     11101011011010111010111111011100

          - FUNCTION OUTPUT:  11101011011010111010111111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000001010001011110010101111

       - FUNCTION OUTPUT:          11101011011010111010111111011100

       - Left XOR FUNCTION OUTPUT: 10011011010000110001001101110011

       - Next Round Left 32 Bits:  00101001000100011101111011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011011010000110001001101110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001000100011101111011100000

       - Right 32 Bits:            10011011010000110001001101110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001110110110101110100010010000111100001101110010010   [Subkey: 14]
          - Input Half:       10011011010000110001001101110011
          - S-Box Result:     00111000011100011010000111010001   [per every group of 4-bits]
          - Split Into Two:   0011100001110001 [L] 1010000111010001 [R]
          - Swap Halves:      10100001110100010011100001110001
          - Bit Inversion:    01011110001011101100011110001110
          - Compressed Key:   01001001011100100000010010110001   [done by compression P-Box]
          - XOR with Key:     00010111010111001100001100111111

          - FUNCTION OUTPUT:  00010111010111001100001100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001000100011101111011100000

       - FUNCTION OUTPUT:          00010111010111001100001100111111

       - Left XOR FUNCTION OUTPUT: 00111110010011010001110111011111

       - Next Round Left 32 Bits:  10011011010000110001001101110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110010011010001110111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011011010000110001001101110011

       - Right 32 Bits:            00111110010011010001110111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010010010100010111011011110000111100100011011010   [Subkey: 15]
          - Input Half:       00111110010011010001110111011111
          - S-Box Result:     00011100011101101010011001101011   [per every group of 4-bits]
          - Split Into Two:   0001110001110110 [L] 1010011001101011 [R]
          - Swap Halves:      10100110011010110001110001110110
          - Bit Inversion:    01011001100101001110001110001001
          - Compressed Key:   11010001010011101101111100100101   [done by compression P-Box]
          - XOR with Key:     10001000110110100011110010101100

          - FUNCTION OUTPUT:  10001000110110100011110010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011011010000110001001101110011

       - FUNCTION OUTPUT:          10001000110110100011110010101100

       - Left XOR FUNCTION OUTPUT: 00010011100110010010111111011111

       - Next Round Left 32 Bits:  00111110010011010001110111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100110010010111111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110010011010001110111011111

       - Right 32 Bits:            00010011100110010010111111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111011011010111010001001000011110000110111001001011   [Subkey: 16]
          - Input Half:       00010011100110010010111111011111
          - S-Box Result:     10100001001100111110101101101011   [per every group of 4-bits]
          - Split Into Two:   1010000100110011 [L] 1110101101101011 [R]
          - Swap Halves:      11101011011010111010000100110011
          - Bit Inversion:    00010100100101000101111011001100
          - Compressed Key:   00110111110110000011001011000111   [done by compression P-Box]
          - XOR with Key:     00100011010011000110110000001011

          - FUNCTION OUTPUT:  00100011010011000110110000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110010011010001110111011111

       - FUNCTION OUTPUT:          00100011010011000110110000001011

       - Left XOR FUNCTION OUTPUT: 00011101000000010111000111010100

       - Next Round Left 32 Bits:  00010011100110010010111111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101000000010111000111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001110100000001011100011101010000010011100110010010111111011111

 > Processed Block:     0001110100000001011100011101010000010011100110010010111111011111



Plaintext Block 4: 1101100001000001101100110001000110110110110111001111111010001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000010000011011001100010001

       - Right 32 Bits:            10110110110111001111111010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011010010111000100100101000101110110111100001111   [Subkey: 1]
          - Input Half:       10110110110111001111111010001010
          - S-Box Result:     10000000011001011011110000100100   [per every group of 4-bits]
          - Split Into Two:   1000000001100101 [L] 1011110000100100 [R]
          - Swap Halves:      10111100001001001000000001100101
          - Bit Inversion:    01000011110110110111111110011010
          - Compressed Key:   00100101110100010100111011011111   [done by compression P-Box]
          - XOR with Key:     01100110000010100011000101000101

          - FUNCTION OUTPUT:  01100110000010100011000101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000010000011011001100010001

       - FUNCTION OUTPUT:          01100110000010100011000101000101

       - Left XOR FUNCTION OUTPUT: 10111110010010111000001001010100

       - Next Round Left 32 Bits:  10110110110111001111111010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110010010111000001001010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110110111001111111010001010

       - Right 32 Bits:            10111110010010111000001001010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001001011010001110110110101110100010010000111100001   [Subkey: 2]
          - Input Half:       10111110010010111000001001010100
          - S-Box Result:     10001100011110000010111010010111   [per every group of 4-bits]
          - Split Into Two:   1000110001111000 [L] 0010111010010111 [R]
          - Swap Halves:      00101110100101111000110001111000
          - Bit Inversion:    11010001011010000111001110000111
          - Compressed Key:   11000111001101111101100000110010   [done by compression P-Box]
          - XOR with Key:     00010110010111111010101110110101

          - FUNCTION OUTPUT:  00010110010111111010101110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110110111001111111010001010

       - FUNCTION OUTPUT:          00010110010111111010101110110101

       - Left XOR FUNCTION OUTPUT: 10100000100000110101010100111111

       - Next Round Left 32 Bits:  10111110010010111000001001010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000100000110101010100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110010010111000001001010100

       - Right 32 Bits:            10100000100000110101010100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001101101001011100010010010100010111011011110000111100   [Subkey: 3]
          - Input Half:       10100000100000110101010100111111
          - S-Box Result:     01001111001000011001100100011011   [per every group of 4-bits]
          - Split Into Two:   0100111100100001 [L] 1001100100011011 [R]
          - Swap Halves:      10011001000110110100111100100001
          - Bit Inversion:    01100110111001001011000011011110
          - Compressed Key:   10010110010001100001100101001100   [done by compression P-Box]
          - XOR with Key:     11110000101000101010100110010010

          - FUNCTION OUTPUT:  11110000101000101010100110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110010010111000001001010100

       - FUNCTION OUTPUT:          11110000101000101010100110010010

       - Left XOR FUNCTION OUTPUT: 01001110111010010010101111000110

       - Next Round Left 32 Bits:  10100000100000110101010100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110111010010010101111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000100000110101010100111111

       - Right 32 Bits:            01001110111010010010101111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100101101000111011011010111010001001000011110000110   [Subkey: 4]
          - Input Half:       01001110111010010010101111000110
          - S-Box Result:     01111100110000111110100001010000   [per every group of 4-bits]
          - Split Into Two:   0111110011000011 [L] 1110100001010000 [R]
          - Swap Halves:      11101000010100000111110011000011
          - Bit Inversion:    00010111101011111000001100111100
          - Compressed Key:   00011110110111100101000111111001   [done by compression P-Box]
          - XOR with Key:     00001001011100011101001011000101

          - FUNCTION OUTPUT:  00001001011100011101001011000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000100000110101010100111111

       - FUNCTION OUTPUT:          00001001011100011101001011000101

       - Left XOR FUNCTION OUTPUT: 10101001111100101000011111111010

       - Next Round Left 32 Bits:  01001110111010010010101111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001111100101000011111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110111010010010101111000110

       - Right 32 Bits:            10101001111100101000011111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110100101110001001001010001011101101111000011110010   [Subkey: 5]
          - Input Half:       10101001111100101000011111111010
          - S-Box Result:     01000011101111100010110110110100   [per every group of 4-bits]
          - Split Into Two:   0100001110111110 [L] 0010110110110100 [R]
          - Swap Halves:      00101101101101000100001110111110
          - Bit Inversion:    11010010010010111011110001000001
          - Compressed Key:   01111010000110100111011100100001   [done by compression P-Box]
          - XOR with Key:     10101000010100011100101101100000

          - FUNCTION OUTPUT:  10101000010100011100101101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110111010010010101111000110

       - FUNCTION OUTPUT:          10101000010100011100101101100000

       - Left XOR FUNCTION OUTPUT: 11100110101110001110000010100110

       - Next Round Left 32 Bits:  10101001111100101000011111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110101110001110000010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001111100101000011111111010

       - Right 32 Bits:            11100110101110001110000010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110100011101101101011101000100100001111000011011   [Subkey: 6]
          - Input Half:       11100110101110001110000010100110
          - S-Box Result:     11000000100000101100111101000000   [per every group of 4-bits]
          - Split Into Two:   1100000010000010 [L] 1100111101000000 [R]
          - Swap Halves:      11001111010000001100000010000010
          - Bit Inversion:    00110000101111110011111101111101
          - Compressed Key:   01101000011110100100010011000111   [done by compression P-Box]
          - XOR with Key:     01011000110001010111101110111010

          - FUNCTION OUTPUT:  01011000110001010111101110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001111100101000011111111010

       - FUNCTION OUTPUT:          01011000110001010111101110111010

       - Left XOR FUNCTION OUTPUT: 11110001001101111111110001000000

       - Next Round Left 32 Bits:  11100110101110001110000010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001001101111111110001000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110101110001110000010100110

       - Right 32 Bits:            11110001001101111111110001000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010111000100100101000101110110111100001111001000   [Subkey: 7]
          - Input Half:       11110001001101111111110001000000
          - S-Box Result:     10111010000111011011010101111111   [per every group of 4-bits]
          - Split Into Two:   1011101000011101 [L] 1011010101111111 [R]
          - Swap Halves:      10110101011111111011101000011101
          - Bit Inversion:    01001010100000000100010111100010
          - Compressed Key:   11101011011010001101111110110100   [done by compression P-Box]
          - XOR with Key:     10100001111010001001101001010110

          - FUNCTION OUTPUT:  10100001111010001001101001010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110101110001110000010100110

       - FUNCTION OUTPUT:          10100001111010001001101001010110

       - Left XOR FUNCTION OUTPUT: 01000111010100000111101011110000

       - Next Round Left 32 Bits:  11110001001101111111110001000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111010100000111101011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110001001101111111110001000000

       - Right 32 Bits:            01000111010100000111101011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010001110110110101110100010010000111100001101110   [Subkey: 8]
          - Input Half:       01000111010100000111101011110000
          - S-Box Result:     01111101100111111101010010111111   [per every group of 4-bits]
          - Split Into Two:   0111110110011111 [L] 1101010010111111 [R]
          - Swap Halves:      11010100101111110111110110011111
          - Bit Inversion:    00101011010000001000001001100000
          - Compressed Key:   10100010111010110001001000001101   [done by compression P-Box]
          - XOR with Key:     10001001101010111001000001101101

          - FUNCTION OUTPUT:  10001001101010111001000001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110001001101111111110001000000

       - FUNCTION OUTPUT:          10001001101010111001000001101101

       - Left XOR FUNCTION OUTPUT: 01111000100111000110110000101101

       - Next Round Left 32 Bits:  01000111010100000111101011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000100111000110110000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111010100000111101011110000

       - Right 32 Bits:            01111000100111000110110000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011100010010010100010111011011110000111100100011   [Subkey: 9]
          - Input Half:       01111000100111000110110000101101
          - S-Box Result:     11010010001101010000010111100110   [per every group of 4-bits]
          - Split Into Two:   1101001000110101 [L] 0000010111100110 [R]
          - Swap Halves:      00000101111001101101001000110101
          - Bit Inversion:    11111010000110010010110111001010
          - Compressed Key:   10001100100000100111110011010011   [done by compression P-Box]
          - XOR with Key:     01110110100110110101000100011001

          - FUNCTION OUTPUT:  01110110100110110101000100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111010100000111101011110000

       - FUNCTION OUTPUT:          01110110100110110101000100011001

       - Left XOR FUNCTION OUTPUT: 00110001110010110010101111101001

       - Next Round Left 32 Bits:  01111000100111000110110000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001110010110010101111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000100111000110110000101101

       - Right 32 Bits:            00110001110010110010101111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101000111011011010111010001001000011110000110111001   [Subkey: 10]
          - Input Half:       00110001110010110010101111101001
          - S-Box Result:     00011010010110001110100011000011   [per every group of 4-bits]
          - Split Into Two:   0001101001011000 [L] 1110100011000011 [R]
          - Swap Halves:      11101000110000110001101001011000
          - Bit Inversion:    00010111001111001110010110100111
          - Compressed Key:   10011011100111100110101100110110   [done by compression P-Box]
          - XOR with Key:     10001100101000101000111010010001

          - FUNCTION OUTPUT:  10001100101000101000111010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000100111000110110000101101

       - FUNCTION OUTPUT:          10001100101000101000111010010001

       - Left XOR FUNCTION OUTPUT: 11110100001111101110001010111100

       - Next Round Left 32 Bits:  00110001110010110010101111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100001111101110001010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001110010110010101111101001

       - Right 32 Bits:            11110100001111101110001010111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101110001001001010001011101101111000011110010001101   [Subkey: 11]
          - Input Half:       11110100001111101110001010111100
          - S-Box Result:     10110111000111001100111010000101   [per every group of 4-bits]
          - Split Into Two:   1011011100011100 [L] 1100111010000101 [R]
          - Swap Halves:      11001110100001011011011100011100
          - Bit Inversion:    00110001011110100100100011100011
          - Compressed Key:   00010010000110101110000001101110   [done by compression P-Box]
          - XOR with Key:     00100011011000001010100010001101

          - FUNCTION OUTPUT:  00100011011000001010100010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001110010110010101111101001

       - FUNCTION OUTPUT:          00100011011000001010100010001101

       - Left XOR FUNCTION OUTPUT: 00010010101010111000001101100100

       - Next Round Left 32 Bits:  11110100001111101110001010111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010101010111000001101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100001111101110001010111100

       - Right 32 Bits:            00010010101010111000001101100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101101101011101000100100001111000011011100100   [Subkey: 12]
          - Input Half:       00010010101010111000001101100100
          - S-Box Result:     10101110010010000010000100000111   [per every group of 4-bits]
          - Split Into Two:   1010111001001000 [L] 0010000100000111 [R]
          - Swap Halves:      00100001000001111010111001001000
          - Bit Inversion:    11011110111110000101000110110111
          - Compressed Key:   01011110010110001000110111101000   [done by compression P-Box]
          - XOR with Key:     10000000101000001101110001011111

          - FUNCTION OUTPUT:  10000000101000001101110001011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100001111101110001010111100

       - FUNCTION OUTPUT:          10000000101000001101110001011111

       - Left XOR FUNCTION OUTPUT: 01110100100111100011111011100011

       - Next Round Left 32 Bits:  00010010101010111000001101100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100100111100011111011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101010111000001101100100

       - Right 32 Bits:            01110100100111100011111011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111000100100101000101110110111100001111001000110110   [Subkey: 13]
          - Input Half:       01110100100111100011111011100011
          - S-Box Result:     11010111001111000001110011000001   [per every group of 4-bits]
          - Split Into Two:   1101011100111100 [L] 0001110011000001 [R]
          - Swap Halves:      00011100110000011101011100111100
          - Bit Inversion:    11100011001111100010100011000011
          - Compressed Key:   01111000010110111011001110001001   [done by compression P-Box]
          - XOR with Key:     10011011011001011001101101001010

          - FUNCTION OUTPUT:  10011011011001011001101101001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101010111000001101100100

       - FUNCTION OUTPUT:          10011011011001011001101101001010

       - Left XOR FUNCTION OUTPUT: 10001001110011100001100000101110

       - Next Round Left 32 Bits:  01110100100111100011111011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001110011100001100000101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100100111100011111011100011

       - Right 32 Bits:            10001001110011100001100000101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001110110110101110100010010000111100001101110010010   [Subkey: 14]
          - Input Half:       10001001110011100001100000101110
          - S-Box Result:     00100011010111001010001011101100   [per every group of 4-bits]
          - Split Into Two:   0010001101011100 [L] 1010001011101100 [R]
          - Swap Halves:      10100010111011000010001101011100
          - Bit Inversion:    01011101000100111101110010100011
          - Compressed Key:   01001001011100100000010010110001   [done by compression P-Box]
          - XOR with Key:     00010100011000011101100000010010

          - FUNCTION OUTPUT:  00010100011000011101100000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100100111100011111011100011

       - FUNCTION OUTPUT:          00010100011000011101100000010010

       - Left XOR FUNCTION OUTPUT: 01100000111111111110011011110001

       - Next Round Left 32 Bits:  10001001110011100001100000101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000111111111110011011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001110011100001100000101110

       - Right 32 Bits:            01100000111111111110011011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010010010100010111011011110000111100100011011010   [Subkey: 15]
          - Input Half:       01100000111111111110011011110001
          - S-Box Result:     00001111101110111100000010111010   [per every group of 4-bits]
          - Split Into Two:   0000111110111011 [L] 1100000010111010 [R]
          - Swap Halves:      11000000101110100000111110111011
          - Bit Inversion:    00111111010001011111000001000100
          - Compressed Key:   11010001010011101101111100100101   [done by compression P-Box]
          - XOR with Key:     11101110000010110010111101100001

          - FUNCTION OUTPUT:  11101110000010110010111101100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001110011100001100000101110

       - FUNCTION OUTPUT:          11101110000010110010111101100001

       - Left XOR FUNCTION OUTPUT: 01100111110001010011011101001111

       - Next Round Left 32 Bits:  01100000111111111110011011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111110001010011011101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000111111111110011011110001

       - Right 32 Bits:            01100111110001010011011101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111011011010111010001001000011110000110111001001011   [Subkey: 16]
          - Input Half:       01100111110001010011011101001111
          - S-Box Result:     00001101010110010001110101111011   [per every group of 4-bits]
          - Split Into Two:   0000110101011001 [L] 0001110101111011 [R]
          - Swap Halves:      00011101011110110000110101011001
          - Bit Inversion:    11100010100001001111001010100110
          - Compressed Key:   00110111110110000011001011000111   [done by compression P-Box]
          - XOR with Key:     11010101010111001100000001100001

          - FUNCTION OUTPUT:  11010101010111001100000001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000111111111110011011110001

       - FUNCTION OUTPUT:          11010101010111001100000001100001

       - Left XOR FUNCTION OUTPUT: 10110101101000110010011010010000

       - Next Round Left 32 Bits:  01100111110001010011011101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101101000110010011010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011010110100011001001101001000001100111110001010011011101001111

 > Processed Block:     1011010110100011001001101001000001100111110001010011011101001111



Plaintext Block 5: 0011101110111101101111100011010100000001110011011011011110111100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011101111011011111000110101

       - Right 32 Bits:            00000001110011011011011110111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011010010111000100100101000101110110111100001111   [Subkey: 1]
          - Input Half:       00000001110011011011011110111100
          - S-Box Result:     11111010010101101000110110000101   [per every group of 4-bits]
          - Split Into Two:   1111101001010110 [L] 1000110110000101 [R]
          - Swap Halves:      10001101100001011111101001010110
          - Bit Inversion:    01110010011110100000010110101001
          - Compressed Key:   00100101110100010100111011011111   [done by compression P-Box]
          - XOR with Key:     01010111101010110100101101110110

          - FUNCTION OUTPUT:  01010111101010110100101101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011101111011011111000110101

       - FUNCTION OUTPUT:          01010111101010110100101101110110

       - Left XOR FUNCTION OUTPUT: 01101100000101101111010101000011

       - Next Round Left 32 Bits:  00000001110011011011011110111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100000101101111010101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001110011011011011110111100

       - Right 32 Bits:            01101100000101101111010101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001001011010001110110110101110100010010000111100001   [Subkey: 2]
          - Input Half:       01101100000101101111010101000011
          - S-Box Result:     00000101101000001011100101110001   [per every group of 4-bits]
          - Split Into Two:   0000010110100000 [L] 1011100101110001 [R]
          - Swap Halves:      10111001011100010000010110100000
          - Bit Inversion:    01000110100011101111101001011111
          - Compressed Key:   11000111001101111101100000110010   [done by compression P-Box]
          - XOR with Key:     10000001101110010010001001101101

          - FUNCTION OUTPUT:  10000001101110010010001001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001110011011011011110111100

       - FUNCTION OUTPUT:          10000001101110010010001001101101

       - Left XOR FUNCTION OUTPUT: 10000000011101001001010111010001

       - Next Round Left 32 Bits:  01101100000101101111010101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000011101001001010111010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100000101101111010101000011

       - Right 32 Bits:            10000000011101001001010111010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001101101001011100010010010100010111011011110000111100   [Subkey: 3]
          - Input Half:       10000000011101001001010111010001
          - S-Box Result:     00101111110101110011100101101010   [per every group of 4-bits]
          - Split Into Two:   0010111111010111 [L] 0011100101101010 [R]
          - Swap Halves:      00111001011010100010111111010111
          - Bit Inversion:    11000110100101011101000000101000
          - Compressed Key:   10010110010001100001100101001100   [done by compression P-Box]
          - XOR with Key:     01010000110100111100100101100100

          - FUNCTION OUTPUT:  01010000110100111100100101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100000101101111010101000011

       - FUNCTION OUTPUT:          01010000110100111100100101100100

       - Left XOR FUNCTION OUTPUT: 00111100110001010011110000100111

       - Next Round Left 32 Bits:  10000000011101001001010111010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100110001010011110000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000011101001001010111010001

       - Right 32 Bits:            00111100110001010011110000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100101101000111011011010111010001001000011110000110   [Subkey: 4]
          - Input Half:       00111100110001010011110000100111
          - S-Box Result:     00010101010110010001010111101101   [per every group of 4-bits]
          - Split Into Two:   0001010101011001 [L] 0001010111101101 [R]
          - Swap Halves:      00010101111011010001010101011001
          - Bit Inversion:    11101010000100101110101010100110
          - Compressed Key:   00011110110111100101000111111001   [done by compression P-Box]
          - XOR with Key:     11110100110011001011101101011111

          - FUNCTION OUTPUT:  11110100110011001011101101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000011101001001010111010001

       - FUNCTION OUTPUT:          11110100110011001011101101011111

       - Left XOR FUNCTION OUTPUT: 01110100101110000010111010001110

       - Next Round Left 32 Bits:  00111100110001010011110000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100101110000010111010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100110001010011110000100111

       - Right 32 Bits:            01110100101110000010111010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110100101110001001001010001011101101111000011110010   [Subkey: 5]
          - Input Half:       01110100101110000010111010001110
          - S-Box Result:     11010111100000101110110000101100   [per every group of 4-bits]
          - Split Into Two:   1101011110000010 [L] 1110110000101100 [R]
          - Swap Halves:      11101100001011001101011110000010
          - Bit Inversion:    00010011110100110010100001111101
          - Compressed Key:   01111010000110100111011100100001   [done by compression P-Box]
          - XOR with Key:     01101001110010010101111101011100

          - FUNCTION OUTPUT:  01101001110010010101111101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100110001010011110000100111

       - FUNCTION OUTPUT:          01101001110010010101111101011100

       - Left XOR FUNCTION OUTPUT: 01010101000011000110001101111011

       - Next Round Left 32 Bits:  01110100101110000010111010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101000011000110001101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100101110000010111010001110

       - Right 32 Bits:            01010101000011000110001101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110100011101101101011101000100100001111000011011   [Subkey: 6]
          - Input Half:       01010101000011000110001101111011
          - S-Box Result:     10011001111101010000000111011000   [per every group of 4-bits]
          - Split Into Two:   1001100111110101 [L] 0000000111011000 [R]
          - Swap Halves:      00000001110110001001100111110101
          - Bit Inversion:    11111110001001110110011000001010
          - Compressed Key:   01101000011110100100010011000111   [done by compression P-Box]
          - XOR with Key:     10010110010111010010001011001101

          - FUNCTION OUTPUT:  10010110010111010010001011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100101110000010111010001110

       - FUNCTION OUTPUT:          10010110010111010010001011001101

       - Left XOR FUNCTION OUTPUT: 11100010111001010000110001000011

       - Next Round Left 32 Bits:  01010101000011000110001101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111001010000110001000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101000011000110001101111011

       - Right 32 Bits:            11100010111001010000110001000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010111000100100101000101110110111100001111001000   [Subkey: 7]
          - Input Half:       11100010111001010000110001000011
          - S-Box Result:     11001110110010011111010101110001   [per every group of 4-bits]
          - Split Into Two:   1100111011001001 [L] 1111010101110001 [R]
          - Swap Halves:      11110101011100011100111011001001
          - Bit Inversion:    00001010100011100011000100110110
          - Compressed Key:   11101011011010001101111110110100   [done by compression P-Box]
          - XOR with Key:     11100001111001101110111010000010

          - FUNCTION OUTPUT:  11100001111001101110111010000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101000011000110001101111011

       - FUNCTION OUTPUT:          11100001111001101110111010000010

       - Left XOR FUNCTION OUTPUT: 10110100111010101000110111111001

       - Next Round Left 32 Bits:  11100010111001010000110001000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100111010101000110111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111001010000110001000011

       - Right 32 Bits:            10110100111010101000110111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010001110110110101110100010010000111100001101110   [Subkey: 8]
          - Input Half:       10110100111010101000110111111001
          - S-Box Result:     10000111110001000010011010110011   [per every group of 4-bits]
          - Split Into Two:   1000011111000100 [L] 0010011010110011 [R]
          - Swap Halves:      00100110101100111000011111000100
          - Bit Inversion:    11011001010011000111100000111011
          - Compressed Key:   10100010111010110001001000001101   [done by compression P-Box]
          - XOR with Key:     01111011101001110110101000110110

          - FUNCTION OUTPUT:  01111011101001110110101000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111001010000110001000011

       - FUNCTION OUTPUT:          01111011101001110110101000110110

       - Left XOR FUNCTION OUTPUT: 10011001010000100110011001110101

       - Next Round Left 32 Bits:  10110100111010101000110111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011001010000100110011001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100111010101000110111111001

       - Right 32 Bits:            10011001010000100110011001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011100010010010100010111011011110000111100100011   [Subkey: 9]
          - Input Half:       10011001010000100110011001110101
          - S-Box Result:     00110011011111100000000011011001   [per every group of 4-bits]
          - Split Into Two:   0011001101111110 [L] 0000000011011001 [R]
          - Swap Halves:      00000000110110010011001101111110
          - Bit Inversion:    11111111001001101100110010000001
          - Compressed Key:   10001100100000100111110011010011   [done by compression P-Box]
          - XOR with Key:     01110011101001001011000001010010

          - FUNCTION OUTPUT:  01110011101001001011000001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100111010101000110111111001

       - FUNCTION OUTPUT:          01110011101001001011000001010010

       - Left XOR FUNCTION OUTPUT: 11000111010011100011110110101011

       - Next Round Left 32 Bits:  10011001010000100110011001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111010011100011110110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011001010000100110011001110101

       - Right 32 Bits:            11000111010011100011110110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101000111011011010111010001001000011110000110111001   [Subkey: 10]
          - Input Half:       11000111010011100011110110101011
          - S-Box Result:     01011101011111000001011001001000   [per every group of 4-bits]
          - Split Into Two:   0101110101111100 [L] 0001011001001000 [R]
          - Swap Halves:      00010110010010000101110101111100
          - Bit Inversion:    11101001101101111010001010000011
          - Compressed Key:   10011011100111100110101100110110   [done by compression P-Box]
          - XOR with Key:     01110010001010011100100110110101

          - FUNCTION OUTPUT:  01110010001010011100100110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011001010000100110011001110101

       - FUNCTION OUTPUT:          01110010001010011100100110110101

       - Left XOR FUNCTION OUTPUT: 11101011011010111010111111000000

       - Next Round Left 32 Bits:  11000111010011100011110110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011011010111010111111000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111010011100011110110101011

       - Right 32 Bits:            11101011011010111010111111000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101110001001001010001011101101111000011110010001101   [Subkey: 11]
          - Input Half:       11101011011010111010111111000000
          - S-Box Result:     11001000000010000100101101011111   [per every group of 4-bits]
          - Split Into Two:   1100100000001000 [L] 0100101101011111 [R]
          - Swap Halves:      01001011010111111100100000001000
          - Bit Inversion:    10110100101000000011011111110111
          - Compressed Key:   00010010000110101110000001101110   [done by compression P-Box]
          - XOR with Key:     10100110101110101101011110011001

          - FUNCTION OUTPUT:  10100110101110101101011110011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111010011100011110110101011

       - FUNCTION OUTPUT:          10100110101110101101011110011001

       - Left XOR FUNCTION OUTPUT: 01100001111101001110101000110010

       - Next Round Left 32 Bits:  11101011011010111010111111000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001111101001110101000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011011010111010111111000000

       - Right 32 Bits:            01100001111101001110101000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101101101011101000100100001111000011011100100   [Subkey: 12]
          - Input Half:       01100001111101001110101000110010
          - S-Box Result:     00001010101101111100010000011110   [per every group of 4-bits]
          - Split Into Two:   0000101010110111 [L] 1100010000011110 [R]
          - Swap Halves:      11000100000111100000101010110111
          - Bit Inversion:    00111011111000011111010101001000
          - Compressed Key:   01011110010110001000110111101000   [done by compression P-Box]
          - XOR with Key:     01100101101110010111100010100000

          - FUNCTION OUTPUT:  01100101101110010111100010100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011011010111010111111000000

       - FUNCTION OUTPUT:          01100101101110010111100010100000

       - Left XOR FUNCTION OUTPUT: 10001110110100101101011101100000

       - Next Round Left 32 Bits:  01100001111101001110101000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110110100101101011101100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001111101001110101000110010

       - Right 32 Bits:            10001110110100101101011101100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111000100100101000101110110111100001111001000110110   [Subkey: 13]
          - Input Half:       10001110110100101101011101100000
          - S-Box Result:     00101100011011100110110100001111   [per every group of 4-bits]
          - Split Into Two:   0010110001101110 [L] 0110110100001111 [R]
          - Swap Halves:      01101101000011110010110001101110
          - Bit Inversion:    10010010111100001101001110010001
          - Compressed Key:   01111000010110111011001110001001   [done by compression P-Box]
          - XOR with Key:     11101010101010110110000000011000

          - FUNCTION OUTPUT:  11101010101010110110000000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001111101001110101000110010

       - FUNCTION OUTPUT:          11101010101010110110000000011000

       - Left XOR FUNCTION OUTPUT: 10001011010111111000101000101010

       - Next Round Left 32 Bits:  10001110110100101101011101100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011010111111000101000101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110110100101101011101100000

       - Right 32 Bits:            10001011010111111000101000101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001110110110101110100010010000111100001101110010010   [Subkey: 14]
          - Input Half:       10001011010111111000101000101010
          - S-Box Result:     00101000100110110010010011100100   [per every group of 4-bits]
          - Split Into Two:   0010100010011011 [L] 0010010011100100 [R]
          - Swap Halves:      00100100111001000010100010011011
          - Bit Inversion:    11011011000110111101011101100100
          - Compressed Key:   01001001011100100000010010110001   [done by compression P-Box]
          - XOR with Key:     10010010011010011101001111010101

          - FUNCTION OUTPUT:  10010010011010011101001111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110110100101101011101100000

       - FUNCTION OUTPUT:          10010010011010011101001111010101

       - Left XOR FUNCTION OUTPUT: 00011100101110110000010010110101

       - Next Round Left 32 Bits:  10001011010111111000101000101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100101110110000010010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011010111111000101000101010

       - Right 32 Bits:            00011100101110110000010010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010010010100010111011011110000111100100011011010   [Subkey: 15]
          - Input Half:       00011100101110110000010010110101
          - S-Box Result:     10100101100010001111011110001001   [per every group of 4-bits]
          - Split Into Two:   1010010110001000 [L] 1111011110001001 [R]
          - Swap Halves:      11110111100010011010010110001000
          - Bit Inversion:    00001000011101100101101001110111
          - Compressed Key:   11010001010011101101111100100101   [done by compression P-Box]
          - XOR with Key:     11011001001110001000010101010010

          - FUNCTION OUTPUT:  11011001001110001000010101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011010111111000101000101010

       - FUNCTION OUTPUT:          11011001001110001000010101010010

       - Left XOR FUNCTION OUTPUT: 01010010011001110000111101111000

       - Next Round Left 32 Bits:  00011100101110110000010010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010011001110000111101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100101110110000010010110101

       - Right 32 Bits:            01010010011001110000111101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111011011010111010001001000011110000110111001001011   [Subkey: 16]
          - Input Half:       01010010011001110000111101111000
          - S-Box Result:     10011110000011011111101111010010   [per every group of 4-bits]
          - Split Into Two:   1001111000001101 [L] 1111101111010010 [R]
          - Swap Halves:      11111011110100101001111000001101
          - Bit Inversion:    00000100001011010110000111110010
          - Compressed Key:   00110111110110000011001011000111   [done by compression P-Box]
          - XOR with Key:     00110011111101010101001100110101

          - FUNCTION OUTPUT:  00110011111101010101001100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100101110110000010010110101

       - FUNCTION OUTPUT:          00110011111101010101001100110101

       - Left XOR FUNCTION OUTPUT: 00101111010011100101011110000000

       - Next Round Left 32 Bits:  01010010011001110000111101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111010011100101011110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010111101001110010101111000000001010010011001110000111101111000

 > Processed Block:     0010111101001110010101111000000001010010011001110000111101111000



Plaintext Block 6: 0101101010100111001111010111010110100111101100001011110111110111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010101001110011110101110101

       - Right 32 Bits:            10100111101100001011110111110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011010010111000100100101000101110110111100001111   [Subkey: 1]
          - Input Half:       10100111101100001011110111110111
          - S-Box Result:     01001101100011111000011010111101   [per every group of 4-bits]
          - Split Into Two:   0100110110001111 [L] 1000011010111101 [R]
          - Swap Halves:      10000110101111010100110110001111
          - Bit Inversion:    01111001010000101011001001110000
          - Compressed Key:   00100101110100010100111011011111   [done by compression P-Box]
          - XOR with Key:     01011100100100111111110010101111

          - FUNCTION OUTPUT:  01011100100100111111110010101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010101001110011110101110101

       - FUNCTION OUTPUT:          01011100100100111111110010101111

       - Left XOR FUNCTION OUTPUT: 00000110001101001100000111011010

       - Next Round Left 32 Bits:  10100111101100001011110111110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110001101001100000111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111101100001011110111110111

       - Right 32 Bits:            00000110001101001100000111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001001011010001110110110101110100010010000111100001   [Subkey: 2]
          - Input Half:       00000110001101001100000111011010
          - S-Box Result:     11110000000101110101101001100100   [per every group of 4-bits]
          - Split Into Two:   1111000000010111 [L] 0101101001100100 [R]
          - Swap Halves:      01011010011001001111000000010111
          - Bit Inversion:    10100101100110110000111111101000
          - Compressed Key:   11000111001101111101100000110010   [done by compression P-Box]
          - XOR with Key:     01100010101011001101011111011010

          - FUNCTION OUTPUT:  01100010101011001101011111011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111101100001011110111110111

       - FUNCTION OUTPUT:          01100010101011001101011111011010

       - Left XOR FUNCTION OUTPUT: 11000101000111000110101000101101

       - Next Round Left 32 Bits:  00000110001101001100000111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101000111000110101000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110001101001100000111011010

       - Right 32 Bits:            11000101000111000110101000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001101101001011100010010010100010111011011110000111100   [Subkey: 3]
          - Input Half:       11000101000111000110101000101101
          - S-Box Result:     01011001101001010000010011100110   [per every group of 4-bits]
          - Split Into Two:   0101100110100101 [L] 0000010011100110 [R]
          - Swap Halves:      00000100111001100101100110100101
          - Bit Inversion:    11111011000110011010011001011010
          - Compressed Key:   10010110010001100001100101001100   [done by compression P-Box]
          - XOR with Key:     01101101010111111011111100010110

          - FUNCTION OUTPUT:  01101101010111111011111100010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110001101001100000111011010

       - FUNCTION OUTPUT:          01101101010111111011111100010110

       - Left XOR FUNCTION OUTPUT: 01101011011010110111111011001100

       - Next Round Left 32 Bits:  11000101000111000110101000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011011010110111111011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101000111000110101000101101

       - Right 32 Bits:            01101011011010110111111011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100101101000111011011010111010001001000011110000110   [Subkey: 4]
          - Input Half:       01101011011010110111111011001100
          - S-Box Result:     00001000000010001101110001010101   [per every group of 4-bits]
          - Split Into Two:   0000100000001000 [L] 1101110001010101 [R]
          - Swap Halves:      11011100010101010000100000001000
          - Bit Inversion:    00100011101010101111011111110111
          - Compressed Key:   00011110110111100101000111111001   [done by compression P-Box]
          - XOR with Key:     00111101011101001010011000001110

          - FUNCTION OUTPUT:  00111101011101001010011000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101000111000110101000101101

       - FUNCTION OUTPUT:          00111101011101001010011000001110

       - Left XOR FUNCTION OUTPUT: 11111000011010001100110000100011

       - Next Round Left 32 Bits:  01101011011010110111111011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000011010001100110000100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011011010110111111011001100

       - Right 32 Bits:            11111000011010001100110000100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110100101110001001001010001011101101111000011110010   [Subkey: 5]
          - Input Half:       11111000011010001100110000100011
          - S-Box Result:     10110010000000100101010111100001   [per every group of 4-bits]
          - Split Into Two:   1011001000000010 [L] 0101010111100001 [R]
          - Swap Halves:      01010101111000011011001000000010
          - Bit Inversion:    10101010000111100100110111111101
          - Compressed Key:   01111010000110100111011100100001   [done by compression P-Box]
          - XOR with Key:     11010000000001000011101011011100

          - FUNCTION OUTPUT:  11010000000001000011101011011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011011010110111111011001100

       - FUNCTION OUTPUT:          11010000000001000011101011011100

       - Left XOR FUNCTION OUTPUT: 10111011011011110100010000010000

       - Next Round Left 32 Bits:  11111000011010001100110000100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011011011110100010000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000011010001100110000100011

       - Right 32 Bits:            10111011011011110100010000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110100011101101101011101000100100001111000011011   [Subkey: 6]
          - Input Half:       10111011011011110100010000010000
          - S-Box Result:     10001000000010110111011110101111   [per every group of 4-bits]
          - Split Into Two:   1000100000001011 [L] 0111011110101111 [R]
          - Swap Halves:      01110111101011111000100000001011
          - Bit Inversion:    10001000010100000111011111110100
          - Compressed Key:   01101000011110100100010011000111   [done by compression P-Box]
          - XOR with Key:     11100000001010100011001100110011

          - FUNCTION OUTPUT:  11100000001010100011001100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000011010001100110000100011

       - FUNCTION OUTPUT:          11100000001010100011001100110011

       - Left XOR FUNCTION OUTPUT: 00011000010000101111111100010000

       - Next Round Left 32 Bits:  10111011011011110100010000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000010000101111111100010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011011011110100010000010000

       - Right 32 Bits:            00011000010000101111111100010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010111000100100101000101110110111100001111001000   [Subkey: 7]
          - Input Half:       00011000010000101111111100010000
          - S-Box Result:     10100010011111101011101110101111   [per every group of 4-bits]
          - Split Into Two:   1010001001111110 [L] 1011101110101111 [R]
          - Swap Halves:      10111011101011111010001001111110
          - Bit Inversion:    01000100010100000101110110000001
          - Compressed Key:   11101011011010001101111110110100   [done by compression P-Box]
          - XOR with Key:     10101111001110001000001000110101

          - FUNCTION OUTPUT:  10101111001110001000001000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011011011110100010000010000

       - FUNCTION OUTPUT:          10101111001110001000001000110101

       - Left XOR FUNCTION OUTPUT: 00010100010101111100011000100101

       - Next Round Left 32 Bits:  00011000010000101111111100010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100010101111100011000100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000010000101111111100010000

       - Right 32 Bits:            00010100010101111100011000100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010001110110110101110100010010000111100001101110   [Subkey: 8]
          - Input Half:       00010100010101111100011000100101
          - S-Box Result:     10100111100111010101000011101001   [per every group of 4-bits]
          - Split Into Two:   1010011110011101 [L] 0101000011101001 [R]
          - Swap Halves:      01010000111010011010011110011101
          - Bit Inversion:    10101111000101100101100001100010
          - Compressed Key:   10100010111010110001001000001101   [done by compression P-Box]
          - XOR with Key:     00001101111111010100101001101111

          - FUNCTION OUTPUT:  00001101111111010100101001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000010000101111111100010000

       - FUNCTION OUTPUT:          00001101111111010100101001101111

       - Left XOR FUNCTION OUTPUT: 00010101101111111011010101111111

       - Next Round Left 32 Bits:  00010100010101111100011000100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010101101111111011010101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100010101111100011000100101

       - Right 32 Bits:            00010101101111111011010101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001011100010010010100010111011011110000111100100011   [Subkey: 9]
          - Input Half:       00010101101111111011010101111111
          - S-Box Result:     10101001100010111000100111011011   [per every group of 4-bits]
          - Split Into Two:   1010100110001011 [L] 1000100111011011 [R]
          - Swap Halves:      10001001110110111010100110001011
          - Bit Inversion:    01110110001001000101011001110100
          - Compressed Key:   10001100100000100111110011010011   [done by compression P-Box]
          - XOR with Key:     11111010101001100010101010100111

          - FUNCTION OUTPUT:  11111010101001100010101010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100010101111100011000100101

       - FUNCTION OUTPUT:          11111010101001100010101010100111

       - Left XOR FUNCTION OUTPUT: 11101110111100011110110010000010

       - Next Round Left 32 Bits:  00010101101111111011010101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110111100011110110010000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101101111111011010101111111

       - Right 32 Bits:            11101110111100011110110010000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101000111011011010111010001001000011110000110111001   [Subkey: 10]
          - Input Half:       11101110111100011110110010000010
          - S-Box Result:     11001100101110101100010100101110   [per every group of 4-bits]
          - Split Into Two:   1100110010111010 [L] 1100010100101110 [R]
          - Swap Halves:      11000101001011101100110010111010
          - Bit Inversion:    00111010110100010011001101000101
          - Compressed Key:   10011011100111100110101100110110   [done by compression P-Box]
          - XOR with Key:     10100001010011110101100001110011

          - FUNCTION OUTPUT:  10100001010011110101100001110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101101111111011010101111111

       - FUNCTION OUTPUT:          10100001010011110101100001110011

       - Left XOR FUNCTION OUTPUT: 10110100111100001110110100001100

       - Next Round Left 32 Bits:  11101110111100011110110010000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100111100001110110100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110111100011110110010000010

       - Right 32 Bits:            10110100111100001110110100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100101110001001001010001011101101111000011110010001101   [Subkey: 11]
          - Input Half:       10110100111100001110110100001100
          - S-Box Result:     10000111101111111100011011110101   [per every group of 4-bits]
          - Split Into Two:   1000011110111111 [L] 1100011011110101 [R]
          - Swap Halves:      11000110111101011000011110111111
          - Bit Inversion:    00111001000010100111100001000000
          - Compressed Key:   00010010000110101110000001101110   [done by compression P-Box]
          - XOR with Key:     00101011000100001001100000101110

          - FUNCTION OUTPUT:  00101011000100001001100000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110111100011110110010000010

       - FUNCTION OUTPUT:          00101011000100001001100000101110

       - Left XOR FUNCTION OUTPUT: 11000101111000010111010010101100

       - Next Round Left 32 Bits:  10110100111100001110110100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101111000010111010010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100111100001110110100001100

       - Right 32 Bits:            11000101111000010111010010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101101101011101000100100001111000011011100100   [Subkey: 12]
          - Input Half:       11000101111000010111010010101100
          - S-Box Result:     01011001110010101101011101000101   [per every group of 4-bits]
          - Split Into Two:   0101100111001010 [L] 1101011101000101 [R]
          - Swap Halves:      11010111010001010101100111001010
          - Bit Inversion:    00101000101110101010011000110101
          - Compressed Key:   01011110010110001000110111101000   [done by compression P-Box]
          - XOR with Key:     01110110111000100010101111011101

          - FUNCTION OUTPUT:  01110110111000100010101111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100111100001110110100001100

       - FUNCTION OUTPUT:          01110110111000100010101111011101

       - Left XOR FUNCTION OUTPUT: 11000010000100101100011011010001

       - Next Round Left 32 Bits:  11000101111000010111010010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010000100101100011011010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101111000010111010010101100

       - Right 32 Bits:            11000010000100101100011011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010111000100100101000101110110111100001111001000110110   [Subkey: 13]
          - Input Half:       11000010000100101100011011010001
          - S-Box Result:     01011110101011100101000001101010   [per every group of 4-bits]
          - Split Into Two:   0101111010101110 [L] 0101000001101010 [R]
          - Swap Halves:      01010000011010100101111010101110
          - Bit Inversion:    10101111100101011010000101010001
          - Compressed Key:   01111000010110111011001110001001   [done by compression P-Box]
          - XOR with Key:     11010111110011100001001011011000

          - FUNCTION OUTPUT:  11010111110011100001001011011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101111000010111010010101100

       - FUNCTION OUTPUT:          11010111110011100001001011011000

       - Left XOR FUNCTION OUTPUT: 00010010001011110110011001110100

       - Next Round Left 32 Bits:  11000010000100101100011011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001011110110011001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010000100101100011011010001

       - Right 32 Bits:            00010010001011110110011001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001110110110101110100010010000111100001101110010010   [Subkey: 14]
          - Input Half:       00010010001011110110011001110100
          - S-Box Result:     10101110111010110000000011010111   [per every group of 4-bits]
          - Split Into Two:   1010111011101011 [L] 0000000011010111 [R]
          - Swap Halves:      00000000110101111010111011101011
          - Bit Inversion:    11111111001010000101000100010100
          - Compressed Key:   01001001011100100000010010110001   [done by compression P-Box]
          - XOR with Key:     10110110010110100101010110100101

          - FUNCTION OUTPUT:  10110110010110100101010110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010000100101100011011010001

       - FUNCTION OUTPUT:          10110110010110100101010110100101

       - Left XOR FUNCTION OUTPUT: 01110100010010001001001101110100

       - Next Round Left 32 Bits:  00010010001011110110011001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100010010001001001101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010001011110110011001110100

       - Right 32 Bits:            01110100010010001001001101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010010010100010111011011110000111100100011011010   [Subkey: 15]
          - Input Half:       01110100010010001001001101110100
          - S-Box Result:     11010111011100100011000111010111   [per every group of 4-bits]
          - Split Into Two:   1101011101110010 [L] 0011000111010111 [R]
          - Swap Halves:      00110001110101111101011101110010
          - Bit Inversion:    11001110001010000010100010001101
          - Compressed Key:   11010001010011101101111100100101   [done by compression P-Box]
          - XOR with Key:     00011111011001101111011110101000

          - FUNCTION OUTPUT:  00011111011001101111011110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010001011110110011001110100

       - FUNCTION OUTPUT:          00011111011001101111011110101000

       - Left XOR FUNCTION OUTPUT: 00001101010010011001000111011100

       - Next Round Left 32 Bits:  01110100010010001001001101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101010010011001000111011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100010010001001001101110100

       - Right 32 Bits:            00001101010010011001000111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000111011011010111010001001000011110000110111001001011   [Subkey: 16]
          - Input Half:       00001101010010011001000111011100
          - S-Box Result:     11110110011100110011101001100101   [per every group of 4-bits]
          - Split Into Two:   1111011001110011 [L] 0011101001100101 [R]
          - Swap Halves:      00111010011001011111011001110011
          - Bit Inversion:    11000101100110100000100110001100
          - Compressed Key:   00110111110110000011001011000111   [done by compression P-Box]
          - XOR with Key:     11110010010000100011101101001011

          - FUNCTION OUTPUT:  11110010010000100011101101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100010010001001001101110100

       - FUNCTION OUTPUT:          11110010010000100011101101001011

       - Left XOR FUNCTION OUTPUT: 10000110000010101010100000111111

       - Next Round Left 32 Bits:  00001101010010011001000111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110000010101010100000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000011000001010101010000011111100001101010010011001000111011100

 > Processed Block:     1000011000001010101010000011111100001101010010011001000111011100


FINAL PROCESSED DATA BLOCKS: 1010100100000001100110111101101000101101100111010001011011011111,0110011000001110010110010011100111000111010000011110110011100100,0001110100000001011100011101010000010011100110010010111111011111,1011010110100011001001101001000001100111110001010011011101001111,0010111101001110010101111000000001010010011001110000111101111000,1000011000001010101010000011111100001101010010011001000111011100,

BLOCKS IN ASCII:             ©?Ú-?ßfY9ÇAìäqÔ?/ßµ£&?gÅ7O/NW?Rgx?
¨?I?Ü

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: HNbGwrN
In Binary:  01001000010011100110001001000111011101110111001001001110

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01101111011000110011101101110001000100010001101101100011
Subkey 2  : 00100001001110011000100100011101110111011100100100111001
Subkey 3  : 10111101100011001110110111000100010001000110110110001101
Subkey 4  : 10000100111001100010010001110111011101110010010011100100
Subkey 5  : 11110110001100111011011100010001000100011011011000110110
Subkey 6  : 00010011100110001001000111011101110111001001001110010010
Subkey 7  : 11011000110011101101110001000100010001101101100011011011
Subkey 8  : 01001110011000100100011101110111011100100100111001001000
Subkey 9  : 01100011001110110111000100010001000110110110001101101111
Subkey 10 : 00111001100010010001110111011101110010010011100100100001
Subkey 11 : 10001100111011011100010001000100011011011000110110111101
Subkey 12 : 11100110001001000111011101110111001001001110010010000100
Subkey 13 : 00110011101101110001000100010001101101100011011011110110
Subkey 14 : 10011000100100011101110111011100100100111001001000010011
Subkey 15 : 11001110110111000100010001000110110110001101101111011000
Subkey 16 : 01100010010001110111011101110010010011100100100001001110

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ©?Ú-?ßfY9ÇAìäqÔ?/ßµ£&?gÅ7O/NW?Rgx?
¨?I?Ü

Data padded with spaces : ©?Ú-?ßfY9ÇAìäqÔ?/ßµ£&?gÅ7O/NW?Rgx?
¨?I?Ü[Padded with '0' spaces]

Data in ASCII           : 169,1,155,218,45,157,22,223,102,14,89,57,199,65,236,228,29,1,113,212,19,153,47,223,181,163,38,144,103,197,55,79,47,78,87,128,82,103,15,120,134,10,168,63,13,73,145,220,

Data in Binary          : 10101001,00000001,10011011,11011010,00101101,10011101,00010110,11011111,01100110,00001110,01011001,00111001,11000111,01000001,11101100,11100100,00011101,00000001,01110001,11010100,00010011,10011001,00101111,11011111,10110101,10100011,00100110,10010000,01100111,11000101,00110111,01001111,00101111,01001110,01010111,10000000,01010010,01100111,00001111,01111000,10000110,00001010,10101000,00111111,00001101,01001001,10010001,11011100,

Data in 64-bit Blocks   : 1010100100000001100110111101101000101101100111010001011011011111,0110011000001110010110010011100111000111010000011110110011100100,0001110100000001011100011101010000010011100110010010111111011111,1011010110100011001001101001000001100111110001010011011101001111,0010111101001110010101111000000001010010011001110000111101111000,1000011000001010101010000011111100001101010010011001000111011100,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'ECB' MODE >>>>>>


Ciphertext Block 1: 1010100100000001100110111101101000101101100111010001011011011111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001000000011001101111011010

       - Right 32 Bits:            00101101100111010001011011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010001110111011101110010010011100100100001001110   [Subkey: 16]
          - Input Half:       00101101100111010001011011011111
          - S-Box Result:     11100110001101101010000001101011   [per every group of 4-bits]
          - Split Into Two:   1110011000110110 [L] 1010000001101011 [R]
          - Swap Halves:      10100000011010111110011000110110
          - Bit Inversion:    01011111100101000001100111001001
          - Compressed Key:   00100010110110110001011000001101   [done by compression P-Box]
          - XOR with Key:     01111101010011110000111111000100

          - FUNCTION OUTPUT:  01111101010011110000111111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001000000011001101111011010

       - FUNCTION OUTPUT:          01111101010011110000111111000100

       - Left XOR FUNCTION OUTPUT: 11010100010011101001010000011110

       - Next Round Left 32 Bits:  00101101100111010001011011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100010011101001010000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101100111010001011011011111

       - Right 32 Bits:            11010100010011101001010000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110111000100010001000110110110001101101111011000   [Subkey: 15]
          - Input Half:       11010100010011101001010000011110
          - S-Box Result:     01100111011111000011011110101100   [per every group of 4-bits]
          - Split Into Two:   0110011101111100 [L] 0011011110101100 [R]
          - Swap Halves:      00110111101011000110011101111100
          - Bit Inversion:    11001000010100111001100010000011
          - Compressed Key:   10111011010010001001001110110100   [done by compression P-Box]
          - XOR with Key:     01110011000110110000101100110111

          - FUNCTION OUTPUT:  01110011000110110000101100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101100111010001011011011111

       - FUNCTION OUTPUT:          01110011000110110000101100110111

       - Left XOR FUNCTION OUTPUT: 01011110100001100001110111101000

       - Next Round Left 32 Bits:  11010100010011101001010000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100001100001110111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100010011101001010000011110

       - Right 32 Bits:            01011110100001100001110111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011000100100011101110111011100100100111001001000010011   [Subkey: 14]
          - Input Half:       01011110100001100001110111101000
          - S-Box Result:     10011100001000001010011011000010   [per every group of 4-bits]
          - Split Into Two:   1001110000100000 [L] 1010011011000010 [R]
          - Swap Halves:      10100110110000101001110000100000
          - Bit Inversion:    01011001001111010110001111011111
          - Compressed Key:   11001000011111101000110110000011   [done by compression P-Box]
          - XOR with Key:     10010001010000111110111001011100

          - FUNCTION OUTPUT:  10010001010000111110111001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100010011101001010000011110

       - FUNCTION OUTPUT:          10010001010000111110111001011100

       - Left XOR FUNCTION OUTPUT: 01000101000011010111101001000010

       - Next Round Left 32 Bits:  01011110100001100001110111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101000011010111101001000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100001100001110111101000

       - Right 32 Bits:            01000101000011010111101001000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011101101110001000100010001101101100011011011110110   [Subkey: 13]
          - Input Half:       01000101000011010111101001000010
          - S-Box Result:     01111001111101101101010001111110   [per every group of 4-bits]
          - Split Into Two:   0111100111110110 [L] 1101010001111110 [R]
          - Swap Halves:      11010100011111100111100111110110
          - Bit Inversion:    00101011100000011000011000001001
          - Compressed Key:   01101110000100101110010011101001   [done by compression P-Box]
          - XOR with Key:     01000101100100110110001011100000

          - FUNCTION OUTPUT:  01000101100100110110001011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100001100001110111101000

       - FUNCTION OUTPUT:          01000101100100110110001011100000

       - Left XOR FUNCTION OUTPUT: 00011011000101010111111100001000

       - Next Round Left 32 Bits:  01000101000011010111101001000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011000101010111111100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101000011010111101001000010

       - Right 32 Bits:            00011011000101010111111100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110001001000111011101110111001001001110010010000100   [Subkey: 12]
          - Input Half:       00011011000101010111111100001000
          - S-Box Result:     10101000101010011101101111110010   [per every group of 4-bits]
          - Split Into Two:   1010100010101001 [L] 1101101111110010 [R]
          - Swap Halves:      11011011111100101010100010101001
          - Bit Inversion:    00100100000011010101011101010110
          - Compressed Key:   00110110110110110110001101101000   [done by compression P-Box]
          - XOR with Key:     00010010110101100011010000111110

          - FUNCTION OUTPUT:  00010010110101100011010000111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101000011010111101001000010

       - FUNCTION OUTPUT:          00010010110101100011010000111110

       - Left XOR FUNCTION OUTPUT: 01010111110110110100111001111100

       - Next Round Left 32 Bits:  00011011000101010111111100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111110110110100111001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011000101010111111100001000

       - Right 32 Bits:            01010111110110110100111001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100111011011100010001000100011011011000110110111101   [Subkey: 11]
          - Input Half:       01010111110110110100111001111100
          - S-Box Result:     10011101011010000111110011010101   [per every group of 4-bits]
          - Split Into Two:   1001110101101000 [L] 0111110011010101 [R]
          - Swap Halves:      01111100110101011001110101101000
          - Bit Inversion:    10000011001010100110001010010111
          - Compressed Key:   10010111010010000011100101111110   [done by compression P-Box]
          - XOR with Key:     00010100011000100101101111101001

          - FUNCTION OUTPUT:  00010100011000100101101111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011000101010111111100001000

       - FUNCTION OUTPUT:          00010100011000100101101111101001

       - Left XOR FUNCTION OUTPUT: 00001111011101110010010011100001

       - Next Round Left 32 Bits:  01010111110110110100111001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111011101110010010011100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111110110110100111001111100

       - Right 32 Bits:            00001111011101110010010011100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111001100010010001110111011101110010010011100100100001   [Subkey: 10]
          - Input Half:       00001111011101110010010011100001
          - S-Box Result:     11111011110111011110011111001010   [per every group of 4-bits]
          - Split Into Two:   1111101111011101 [L] 1110011111001010 [R]
          - Swap Halves:      11100111110010101111101111011101
          - Bit Inversion:    00011000001101010000010000100010
          - Compressed Key:   11000001001111101101100000010010   [done by compression P-Box]
          - XOR with Key:     11011001000010111101110000110000

          - FUNCTION OUTPUT:  11011001000010111101110000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111110110110100111001111100

       - FUNCTION OUTPUT:          11011001000010111101110000110000

       - Left XOR FUNCTION OUTPUT: 10001110110100001001001001001100

       - Next Round Left 32 Bits:  00001111011101110010010011100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110110100001001001001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001111011101110010010011100001

       - Right 32 Bits:            10001110110100001001001001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011001110110111000100010001000110110110001101101111   [Subkey: 9]
          - Input Half:       10001110110100001001001001001100
          - S-Box Result:     00101100011011110011111001110101   [per every group of 4-bits]
          - Split Into Two:   0010110001101111 [L] 0011111001110101 [R]
          - Swap Halves:      00111110011101010010110001101111
          - Bit Inversion:    11000001100010101101001110010000
          - Compressed Key:   00101101110100100100111010011111   [done by compression P-Box]
          - XOR with Key:     11101100010110001001110100001111

          - FUNCTION OUTPUT:  11101100010110001001110100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001111011101110010010011100001

       - FUNCTION OUTPUT:          11101100010110001001110100001111

       - Left XOR FUNCTION OUTPUT: 11100011001011111011100111101110

       - Next Round Left 32 Bits:  10001110110100001001001001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011001011111011100111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110110100001001001001001100

       - Right 32 Bits:            11100011001011111011100111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001110011000100100011101110111011100100100111001001000   [Subkey: 8]
          - Input Half:       11100011001011111011100111101110
          - S-Box Result:     11000001111010111000001111001100   [per every group of 4-bits]
          - Split Into Two:   1100000111101011 [L] 1000001111001100 [R]
          - Swap Halves:      10000011110011001100000111101011
          - Bit Inversion:    01111100001100110011111000010100
          - Compressed Key:   10110100010010110111011011000100   [done by compression P-Box]
          - XOR with Key:     11001000011110000100100011010000

          - FUNCTION OUTPUT:  11001000011110000100100011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110110100001001001001001100

       - FUNCTION OUTPUT:          11001000011110000100100011010000

       - Left XOR FUNCTION OUTPUT: 01000110101010001101101010011100

       - Next Round Left 32 Bits:  11100011001011111011100111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110101010001101101010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011001011111011100111101110

       - Right 32 Bits:            01000110101010001101101010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000110011101101110001000100010001101101100011011011   [Subkey: 7]
          - Input Half:       01000110101010001101101010011100
          - S-Box Result:     01110000010000100110010000110101   [per every group of 4-bits]
          - Split Into Two:   0111000001000010 [L] 0110010000110101 [R]
          - Swap Halves:      01100100001101010111000001000010
          - Bit Inversion:    10011011110010101000111110111101
          - Compressed Key:   11000011011110000001011100100111   [done by compression P-Box]
          - XOR with Key:     01011000101100101001100010011010

          - FUNCTION OUTPUT:  01011000101100101001100010011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011001011111011100111101110

       - FUNCTION OUTPUT:          01011000101100101001100010011010

       - Left XOR FUNCTION OUTPUT: 10111011100111010010000101110100

       - Next Round Left 32 Bits:  01000110101010001101101010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011100111010010000101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110101010001101101010011100

       - Right 32 Bits:            10111011100111010010000101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011100110001001000111011101110111001001001110010010   [Subkey: 6]
          - Input Half:       10111011100111010010000101110100
          - S-Box Result:     10001000001101101110101011010111   [per every group of 4-bits]
          - Split Into Two:   1000100000110110 [L] 1110101011010111 [R]
          - Swap Halves:      11101010110101111000100000110110
          - Bit Inversion:    00010101001010000111011111001001
          - Compressed Key:   01101001000111101101000110110001   [done by compression P-Box]
          - XOR with Key:     01111100001101101010011001111000

          - FUNCTION OUTPUT:  01111100001101101010011001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110101010001101101010011100

       - FUNCTION OUTPUT:          01111100001101101010011001111000

       - Left XOR FUNCTION OUTPUT: 00111010100111100111110011100100

       - Next Round Left 32 Bits:  10111011100111010010000101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010100111100111110011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011100111010010000101110100

       - Right 32 Bits:            00111010100111100111110011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110001100111011011100010001000100011011011000110110   [Subkey: 5]
          - Input Half:       00111010100111100111110011100100
          - S-Box Result:     00010100001111001101010111000111   [per every group of 4-bits]
          - Split Into Two:   0001010000111100 [L] 1101010111000111 [R]
          - Swap Halves:      11010101110001110001010000111100
          - Bit Inversion:    00101010001110001110101111000011
          - Compressed Key:   01111100100100100100100111001001   [done by compression P-Box]
          - XOR with Key:     01010110101010101010001000001010

          - FUNCTION OUTPUT:  01010110101010101010001000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011100111010010000101110100

       - FUNCTION OUTPUT:          01010110101010101010001000001010

       - Left XOR FUNCTION OUTPUT: 11101101001101111000001101111110

       - Next Round Left 32 Bits:  00111010100111100111110011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101001101111000001101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010100111100111110011100100

       - Right 32 Bits:            11101101001101111000001101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100111001100010010001110111011101110010010011100100   [Subkey: 4]
          - Input Half:       11101101001101111000001101111110
          - S-Box Result:     11000110000111010010000111011100   [per every group of 4-bits]
          - Split Into Two:   1100011000011101 [L] 0010000111011100 [R]
          - Swap Halves:      00100001110111001100011000011101
          - Bit Inversion:    11011110001000110011100111100010
          - Compressed Key:   00010110100010110111110001101000   [done by compression P-Box]
          - XOR with Key:     11001000101010000100010110001010

          - FUNCTION OUTPUT:  11001000101010000100010110001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010100111100111110011100100

       - FUNCTION OUTPUT:          11001000101010000100010110001010

       - Left XOR FUNCTION OUTPUT: 11110010001101100011100101101110

       - Next Round Left 32 Bits:  11101101001101111000001101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010001101100011100101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101001101111000001101111110

       - Right 32 Bits:            11110010001101100011100101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100011001110110111000100010001000110110110001101   [Subkey: 3]
          - Input Half:       11110010001101100011100101101110
          - S-Box Result:     10111110000100000001001100001100   [per every group of 4-bits]
          - Split Into Two:   1011111000010000 [L] 0001001100001100 [R]
          - Swap Halves:      00010011000011001011111000010000
          - Bit Inversion:    11101100111100110100000111101111
          - Compressed Key:   11010011111011000001001001111110   [done by compression P-Box]
          - XOR with Key:     00111111000111110101001110010001

          - FUNCTION OUTPUT:  00111111000111110101001110010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101001101111000001101111110

       - FUNCTION OUTPUT:          00111111000111110101001110010001

       - Left XOR FUNCTION OUTPUT: 11010010001010001101000011101111

       - Next Round Left 32 Bits:  11110010001101100011100101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010001010001101000011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010001101100011100101101110

       - Right 32 Bits:            11010010001010001101000011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001110011000100100011101110111011100100100111001   [Subkey: 2]
          - Input Half:       11010010001010001101000011101111
          - S-Box Result:     01101110111000100110111111001011   [per every group of 4-bits]
          - Split Into Two:   0110111011100010 [L] 0110111111001011 [R]
          - Swap Halves:      01101111110010110110111011100010
          - Bit Inversion:    10010000001101001001000100011101
          - Compressed Key:   00001101001000101101101100010110   [done by compression P-Box]
          - XOR with Key:     10011101000101100100101000001011

          - FUNCTION OUTPUT:  10011101000101100100101000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010001101100011100101101110

       - FUNCTION OUTPUT:          10011101000101100100101000001011

       - Left XOR FUNCTION OUTPUT: 01101111001000000111001101100101

       - Next Round Left 32 Bits:  11010010001010001101000011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111001000000111001101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010001010001101000011101111

       - Right 32 Bits:            01101111001000000111001101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011000110011101101110001000100010001101101100011   [Subkey: 1]
          - Input Half:       01101111001000000111001101100101
          - S-Box Result:     00001011111011111101000100001001   [per every group of 4-bits]
          - Split Into Two:   0000101111101111 [L] 1101000100001001 [R]
          - Swap Halves:      11010001000010010000101111101111
          - Bit Inversion:    00101110111101101111010000010000
          - Compressed Key:   10110100101110110100100010010011   [done by compression P-Box]
          - XOR with Key:     10011010010011011011110010000011

          - FUNCTION OUTPUT:  10011010010011011011110010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010001010001101000011101111

       - FUNCTION OUTPUT:          10011010010011011011110010000011

       - Left XOR FUNCTION OUTPUT: 01001000011001010110110001101100

       - Next Round Left 32 Bits:  01101111001000000111001101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000011001010110110001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100100001100101011011000110110001101111001000000111001101100101

 > Processed Block:     0100100001100101011011000110110001101111001000000111001101100101


Ciphertext Block 2: 0110011000001110010110010011100111000111010000011110110011100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110000011100101100100111001

       - Right 32 Bits:            11000111010000011110110011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010001110111011101110010010011100100100001001110   [Subkey: 16]
          - Input Half:       11000111010000011110110011100100
          - S-Box Result:     01011101011110101100010111000111   [per every group of 4-bits]
          - Split Into Two:   0101110101111010 [L] 1100010111000111 [R]
          - Swap Halves:      11000101110001110101110101111010
          - Bit Inversion:    00111010001110001010001010000101
          - Compressed Key:   00100010110110110001011000001101   [done by compression P-Box]
          - XOR with Key:     00011000111000111011010010001000

          - FUNCTION OUTPUT:  00011000111000111011010010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110000011100101100100111001

       - FUNCTION OUTPUT:          00011000111000111011010010001000

       - Left XOR FUNCTION OUTPUT: 01111110111011011110110110110001

       - Next Round Left 32 Bits:  11000111010000011110110011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110111011011110110110110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111010000011110110011100100

       - Right 32 Bits:            01111110111011011110110110110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110111000100010001000110110110001101101111011000   [Subkey: 15]
          - Input Half:       01111110111011011110110110110001
          - S-Box Result:     11011100110001101100011010001010   [per every group of 4-bits]
          - Split Into Two:   1101110011000110 [L] 1100011010001010 [R]
          - Swap Halves:      11000110100010101101110011000110
          - Bit Inversion:    00111001011101010010001100111001
          - Compressed Key:   10111011010010001001001110110100   [done by compression P-Box]
          - XOR with Key:     10000010001111011011000010001101

          - FUNCTION OUTPUT:  10000010001111011011000010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111010000011110110011100100

       - FUNCTION OUTPUT:          10000010001111011011000010001101

       - Left XOR FUNCTION OUTPUT: 01000101011111000101110001101001

       - Next Round Left 32 Bits:  01111110111011011110110110110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101011111000101110001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110111011011110110110110001

       - Right 32 Bits:            01000101011111000101110001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011000100100011101110111011100100100111001001000010011   [Subkey: 14]
          - Input Half:       01000101011111000101110001101001
          - S-Box Result:     01111001110101011001010100000011   [per every group of 4-bits]
          - Split Into Two:   0111100111010101 [L] 1001010100000011 [R]
          - Swap Halves:      10010101000000110111100111010101
          - Bit Inversion:    01101010111111001000011000101010
          - Compressed Key:   11001000011111101000110110000011   [done by compression P-Box]
          - XOR with Key:     10100010100000100000101110101001

          - FUNCTION OUTPUT:  10100010100000100000101110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110111011011110110110110001

       - FUNCTION OUTPUT:          10100010100000100000101110101001

       - Left XOR FUNCTION OUTPUT: 11011100011011111110011000011000

       - Next Round Left 32 Bits:  01000101011111000101110001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100011011111110011000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101011111000101110001101001

       - Right 32 Bits:            11011100011011111110011000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011101101110001000100010001101101100011011011110110   [Subkey: 13]
          - Input Half:       11011100011011111110011000011000
          - S-Box Result:     01100101000010111100000010100010   [per every group of 4-bits]
          - Split Into Two:   0110010100001011 [L] 1100000010100010 [R]
          - Swap Halves:      11000000101000100110010100001011
          - Bit Inversion:    00111111010111011001101011110100
          - Compressed Key:   01101110000100101110010011101001   [done by compression P-Box]
          - XOR with Key:     01010001010011110111111000011101

          - FUNCTION OUTPUT:  01010001010011110111111000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101011111000101110001101001

       - FUNCTION OUTPUT:          01010001010011110111111000011101

       - Left XOR FUNCTION OUTPUT: 00010100001100110010001001110100

       - Next Round Left 32 Bits:  11011100011011111110011000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010100001100110010001001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100011011111110011000011000

       - Right 32 Bits:            00010100001100110010001001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110001001000111011101110111001001001110010010000100   [Subkey: 12]
          - Input Half:       00010100001100110010001001110100
          - S-Box Result:     10100111000100011110111011010111   [per every group of 4-bits]
          - Split Into Two:   1010011100010001 [L] 1110111011010111 [R]
          - Swap Halves:      11101110110101111010011100010001
          - Bit Inversion:    00010001001010000101100011101110
          - Compressed Key:   00110110110110110110001101101000   [done by compression P-Box]
          - XOR with Key:     00100111111100110011101110000110

          - FUNCTION OUTPUT:  00100111111100110011101110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100011011111110011000011000

       - FUNCTION OUTPUT:          00100111111100110011101110000110

       - Left XOR FUNCTION OUTPUT: 11111011100111001101110110011110

       - Next Round Left 32 Bits:  00010100001100110010001001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011100111001101110110011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100001100110010001001110100

       - Right 32 Bits:            11111011100111001101110110011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100111011011100010001000100011011011000110110111101   [Subkey: 11]
          - Input Half:       11111011100111001101110110011110
          - S-Box Result:     10111000001101010110011000111100   [per every group of 4-bits]
          - Split Into Two:   1011100000110101 [L] 0110011000111100 [R]
          - Swap Halves:      01100110001111001011100000110101
          - Bit Inversion:    10011001110000110100011111001010
          - Compressed Key:   10010111010010000011100101111110   [done by compression P-Box]
          - XOR with Key:     00001110100010110111111010110100

          - FUNCTION OUTPUT:  00001110100010110111111010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100001100110010001001110100

       - FUNCTION OUTPUT:          00001110100010110111111010110100

       - Left XOR FUNCTION OUTPUT: 00011010101110000101110011000000

       - Next Round Left 32 Bits:  11111011100111001101110110011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010101110000101110011000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011100111001101110110011110

       - Right 32 Bits:            00011010101110000101110011000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111001100010010001110111011101110010010011100100100001   [Subkey: 10]
          - Input Half:       00011010101110000101110011000000
          - S-Box Result:     10100100100000101001010101011111   [per every group of 4-bits]
          - Split Into Two:   1010010010000010 [L] 1001010101011111 [R]
          - Swap Halves:      10010101010111111010010010000010
          - Bit Inversion:    01101010101000000101101101111101
          - Compressed Key:   11000001001111101101100000010010   [done by compression P-Box]
          - XOR with Key:     10101011100111101000001101101111

          - FUNCTION OUTPUT:  10101011100111101000001101101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011100111001101110110011110

       - FUNCTION OUTPUT:          10101011100111101000001101101111

       - Left XOR FUNCTION OUTPUT: 01010000000000100101111011110001

       - Next Round Left 32 Bits:  00011010101110000101110011000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000000000100101111011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010101110000101110011000000

       - Right 32 Bits:            01010000000000100101111011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011001110110111000100010001000110110110001101101111   [Subkey: 9]
          - Input Half:       01010000000000100101111011110001
          - S-Box Result:     10011111111111101001110010111010   [per every group of 4-bits]
          - Split Into Two:   1001111111111110 [L] 1001110010111010 [R]
          - Swap Halves:      10011100101110101001111111111110
          - Bit Inversion:    01100011010001010110000000000001
          - Compressed Key:   00101101110100100100111010011111   [done by compression P-Box]
          - XOR with Key:     01001110100101110010111010011110

          - FUNCTION OUTPUT:  01001110100101110010111010011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010101110000101110011000000

       - FUNCTION OUTPUT:          01001110100101110010111010011110

       - Left XOR FUNCTION OUTPUT: 01010100001011110111001001011110

       - Next Round Left 32 Bits:  01010000000000100101111011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100001011110111001001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000000000100101111011110001

       - Right 32 Bits:            01010100001011110111001001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001110011000100100011101110111011100100100111001001000   [Subkey: 8]
          - Input Half:       01010100001011110111001001011110
          - S-Box Result:     10010111111010111101111010011100   [per every group of 4-bits]
          - Split Into Two:   1001011111101011 [L] 1101111010011100 [R]
          - Swap Halves:      11011110100111001001011111101011
          - Bit Inversion:    00100001011000110110100000010100
          - Compressed Key:   10110100010010110111011011000100   [done by compression P-Box]
          - XOR with Key:     10010101001010000001111011010000

          - FUNCTION OUTPUT:  10010101001010000001111011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000000000100101111011110001

       - FUNCTION OUTPUT:          10010101001010000001111011010000

       - Left XOR FUNCTION OUTPUT: 11000101001010100100000000100001

       - Next Round Left 32 Bits:  01010100001011110111001001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101001010100100000000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100001011110111001001011110

       - Right 32 Bits:            11000101001010100100000000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000110011101101110001000100010001101101100011011011   [Subkey: 7]
          - Input Half:       11000101001010100100000000100001
          - S-Box Result:     01011001111001000111111111101010   [per every group of 4-bits]
          - Split Into Two:   0101100111100100 [L] 0111111111101010 [R]
          - Swap Halves:      01111111111010100101100111100100
          - Bit Inversion:    10000000000101011010011000011011
          - Compressed Key:   11000011011110000001011100100111   [done by compression P-Box]
          - XOR with Key:     01000011011011011011000100111100

          - FUNCTION OUTPUT:  01000011011011011011000100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100001011110111001001011110

       - FUNCTION OUTPUT:          01000011011011011011000100111100

       - Left XOR FUNCTION OUTPUT: 00010111010000101100001101100010

       - Next Round Left 32 Bits:  11000101001010100100000000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111010000101100001101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101001010100100000000100001

       - Right 32 Bits:            00010111010000101100001101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011100110001001000111011101110111001001001110010010   [Subkey: 6]
          - Input Half:       00010111010000101100001101100010
          - S-Box Result:     10101101011111100101000100001110   [per every group of 4-bits]
          - Split Into Two:   1010110101111110 [L] 0101000100001110 [R]
          - Swap Halves:      01010001000011101010110101111110
          - Bit Inversion:    10101110111100010101001010000001
          - Compressed Key:   01101001000111101101000110110001   [done by compression P-Box]
          - XOR with Key:     11000111111011111000001100110000

          - FUNCTION OUTPUT:  11000111111011111000001100110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101001010100100000000100001

       - FUNCTION OUTPUT:          11000111111011111000001100110000

       - Left XOR FUNCTION OUTPUT: 00000010110001011100001100010001

       - Next Round Left 32 Bits:  00010111010000101100001101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010110001011100001100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111010000101100001101100010

       - Right 32 Bits:            00000010110001011100001100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110001100111011011100010001000100011011011000110110   [Subkey: 5]
          - Input Half:       00000010110001011100001100010001
          - S-Box Result:     11111110010110010101000110101010   [per every group of 4-bits]
          - Split Into Two:   1111111001011001 [L] 0101000110101010 [R]
          - Swap Halves:      01010001101010101111111001011001
          - Bit Inversion:    10101110010101010000000110100110
          - Compressed Key:   01111100100100100100100111001001   [done by compression P-Box]
          - XOR with Key:     11010010110001110100100001101111

          - FUNCTION OUTPUT:  11010010110001110100100001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111010000101100001101100010

       - FUNCTION OUTPUT:          11010010110001110100100001101111

       - Left XOR FUNCTION OUTPUT: 11000101100001011000101100001101

       - Next Round Left 32 Bits:  00000010110001011100001100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101100001011000101100001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010110001011100001100010001

       - Right 32 Bits:            11000101100001011000101100001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100111001100010010001110111011101110010010011100100   [Subkey: 4]
          - Input Half:       11000101100001011000101100001101
          - S-Box Result:     01011001001010010010100011110110   [per every group of 4-bits]
          - Split Into Two:   0101100100101001 [L] 0010100011110110 [R]
          - Swap Halves:      00101000111101100101100100101001
          - Bit Inversion:    11010111000010011010011011010110
          - Compressed Key:   00010110100010110111110001101000   [done by compression P-Box]
          - XOR with Key:     11000001100000101101101010111110

          - FUNCTION OUTPUT:  11000001100000101101101010111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010110001011100001100010001

       - FUNCTION OUTPUT:          11000001100000101101101010111110

       - Left XOR FUNCTION OUTPUT: 11000011010001110001100110101111

       - Next Round Left 32 Bits:  11000101100001011000101100001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000011010001110001100110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101100001011000101100001101

       - Right 32 Bits:            11000011010001110001100110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100011001110110111000100010001000110110110001101   [Subkey: 3]
          - Input Half:       11000011010001110001100110101111
          - S-Box Result:     01010001011111011010001101001011   [per every group of 4-bits]
          - Split Into Two:   0101000101111101 [L] 1010001101001011 [R]
          - Swap Halves:      10100011010010110101000101111101
          - Bit Inversion:    01011100101101001010111010000010
          - Compressed Key:   11010011111011000001001001111110   [done by compression P-Box]
          - XOR with Key:     10001111010110001011110011111100

          - FUNCTION OUTPUT:  10001111010110001011110011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101100001011000101100001101

       - FUNCTION OUTPUT:          10001111010110001011110011111100

       - Left XOR FUNCTION OUTPUT: 01001010110111010011011111110001

       - Next Round Left 32 Bits:  11000011010001110001100110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010110111010011011111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000011010001110001100110101111

       - Right 32 Bits:            01001010110111010011011111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001110011000100100011101110111011100100100111001   [Subkey: 2]
          - Input Half:       01001010110111010011011111110001
          - S-Box Result:     01110100011001100001110110111010   [per every group of 4-bits]
          - Split Into Two:   0111010001100110 [L] 0001110110111010 [R]
          - Swap Halves:      00011101101110100111010001100110
          - Bit Inversion:    11100010010001011000101110011001
          - Compressed Key:   00001101001000101101101100010110   [done by compression P-Box]
          - XOR with Key:     11101111011001110101000010001111

          - FUNCTION OUTPUT:  11101111011001110101000010001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000011010001110001100110101111

       - FUNCTION OUTPUT:          11101111011001110101000010001111

       - Left XOR FUNCTION OUTPUT: 00101100001000000100100100100000

       - Next Round Left 32 Bits:  01001010110111010011011111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100001000000100100100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010110111010011011111110001

       - Right 32 Bits:            00101100001000000100100100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011000110011101101110001000100010001101101100011   [Subkey: 1]
          - Input Half:       00101100001000000100100100100000
          - S-Box Result:     11100101111011110111001111101111   [per every group of 4-bits]
          - Split Into Two:   1110010111101111 [L] 0111001111101111 [R]
          - Swap Halves:      01110011111011111110010111101111
          - Bit Inversion:    10001100000100000001101000010000
          - Compressed Key:   10110100101110110100100010010011   [done by compression P-Box]
          - XOR with Key:     00111000101010110101001010000011

          - FUNCTION OUTPUT:  00111000101010110101001010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010110111010011011111110001

       - FUNCTION OUTPUT:          00111000101010110101001010000011

       - Left XOR FUNCTION OUTPUT: 01110010011101100110010101110010

       - Next Round Left 32 Bits:  00101100001000000100100100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010011101100110010101110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111001001110110011001010111001000101100001000000100100100100000

 > Processed Block:     0111001001110110011001010111001000101100001000000100100100100000


Ciphertext Block 3: 0001110100000001011100011101010000010011100110010010111111011111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101000000010111000111010100

       - Right 32 Bits:            00010011100110010010111111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010001110111011101110010010011100100100001001110   [Subkey: 16]
          - Input Half:       00010011100110010010111111011111
          - S-Box Result:     10100001001100111110101101101011   [per every group of 4-bits]
          - Split Into Two:   1010000100110011 [L] 1110101101101011 [R]
          - Swap Halves:      11101011011010111010000100110011
          - Bit Inversion:    00010100100101000101111011001100
          - Compressed Key:   00100010110110110001011000001101   [done by compression P-Box]
          - XOR with Key:     00110110010011110100100011000001

          - FUNCTION OUTPUT:  00110110010011110100100011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101000000010111000111010100

       - FUNCTION OUTPUT:          00110110010011110100100011000001

       - Left XOR FUNCTION OUTPUT: 00101011010011100011100100010101

       - Next Round Left 32 Bits:  00010011100110010010111111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011010011100011100100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011100110010010111111011111

       - Right 32 Bits:            00101011010011100011100100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110111000100010001000110110110001101101111011000   [Subkey: 15]
          - Input Half:       00101011010011100011100100010101
          - S-Box Result:     11101000011111000001001110101001   [per every group of 4-bits]
          - Split Into Two:   1110100001111100 [L] 0001001110101001 [R]
          - Swap Halves:      00010011101010011110100001111100
          - Bit Inversion:    11101100010101100001011110000011
          - Compressed Key:   10111011010010001001001110110100   [done by compression P-Box]
          - XOR with Key:     01010111000111101000010000110111

          - FUNCTION OUTPUT:  01010111000111101000010000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011100110010010111111011111

       - FUNCTION OUTPUT:          01010111000111101000010000110111

       - Left XOR FUNCTION OUTPUT: 01000100100001111010101111101000

       - Next Round Left 32 Bits:  00101011010011100011100100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100100001111010101111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011010011100011100100010101

       - Right 32 Bits:            01000100100001111010101111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011000100100011101110111011100100100111001001000010011   [Subkey: 14]
          - Input Half:       01000100100001111010101111101000
          - S-Box Result:     01110111001011010100100011000010   [per every group of 4-bits]
          - Split Into Two:   0111011100101101 [L] 0100100011000010 [R]
          - Swap Halves:      01001000110000100111011100101101
          - Bit Inversion:    10110111001111011000100011010010
          - Compressed Key:   11001000011111101000110110000011   [done by compression P-Box]
          - XOR with Key:     01111111010000110000010101010001

          - FUNCTION OUTPUT:  01111111010000110000010101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011010011100011100100010101

       - FUNCTION OUTPUT:          01111111010000110000010101010001

       - Left XOR FUNCTION OUTPUT: 01010100000011010011110001000100

       - Next Round Left 32 Bits:  01000100100001111010101111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100000011010011110001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100100001111010101111101000

       - Right 32 Bits:            01010100000011010011110001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011101101110001000100010001101101100011011011110110   [Subkey: 13]
          - Input Half:       01010100000011010011110001000100
          - S-Box Result:     10010111111101100001010101110111   [per every group of 4-bits]
          - Split Into Two:   1001011111110110 [L] 0001010101110111 [R]
          - Swap Halves:      00010101011101111001011111110110
          - Bit Inversion:    11101010100010000110100000001001
          - Compressed Key:   01101110000100101110010011101001   [done by compression P-Box]
          - XOR with Key:     10000100100110101000110011100000

          - FUNCTION OUTPUT:  10000100100110101000110011100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100100001111010101111101000

       - FUNCTION OUTPUT:          10000100100110101000110011100000

       - Left XOR FUNCTION OUTPUT: 11000000000111010010011100001000

       - Next Round Left 32 Bits:  01010100000011010011110001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000000111010010011100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100000011010011110001000100

       - Right 32 Bits:            11000000000111010010011100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110001001000111011101110111001001001110010010000100   [Subkey: 12]
          - Input Half:       11000000000111010010011100001000
          - S-Box Result:     01011111101001101110110111110010   [per every group of 4-bits]
          - Split Into Two:   0101111110100110 [L] 1110110111110010 [R]
          - Swap Halves:      11101101111100100101111110100110
          - Bit Inversion:    00010010000011011010000001011001
          - Compressed Key:   00110110110110110110001101101000   [done by compression P-Box]
          - XOR with Key:     00100100110101101100001100110001

          - FUNCTION OUTPUT:  00100100110101101100001100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100000011010011110001000100

       - FUNCTION OUTPUT:          00100100110101101100001100110001

       - Left XOR FUNCTION OUTPUT: 01110000110110111111111101110101

       - Next Round Left 32 Bits:  11000000000111010010011100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000110110111111111101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000000111010010011100001000

       - Right 32 Bits:            01110000110110111111111101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100111011011100010001000100011011011000110110111101   [Subkey: 11]
          - Input Half:       01110000110110111111111101110101
          - S-Box Result:     11011111011010001011101111011001   [per every group of 4-bits]
          - Split Into Two:   1101111101101000 [L] 1011101111011001 [R]
          - Swap Halves:      10111011110110011101111101101000
          - Bit Inversion:    01000100001001100010000010010111
          - Compressed Key:   10010111010010000011100101111110   [done by compression P-Box]
          - XOR with Key:     11010011011011100001100111101001

          - FUNCTION OUTPUT:  11010011011011100001100111101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000000111010010011100001000

       - FUNCTION OUTPUT:          11010011011011100001100111101001

       - Left XOR FUNCTION OUTPUT: 00010011011100110011111011100001

       - Next Round Left 32 Bits:  01110000110110111111111101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011011100110011111011100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000110110111111111101110101

       - Right 32 Bits:            00010011011100110011111011100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111001100010010001110111011101110010010011100100100001   [Subkey: 10]
          - Input Half:       00010011011100110011111011100001
          - S-Box Result:     10100001110100010001110011001010   [per every group of 4-bits]
          - Split Into Two:   1010000111010001 [L] 0001110011001010 [R]
          - Swap Halves:      00011100110010101010000111010001
          - Bit Inversion:    11100011001101010101111000101110
          - Compressed Key:   11000001001111101101100000010010   [done by compression P-Box]
          - XOR with Key:     00100010000010111000011000111100

          - FUNCTION OUTPUT:  00100010000010111000011000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000110110111111111101110101

       - FUNCTION OUTPUT:          00100010000010111000011000111100

       - Left XOR FUNCTION OUTPUT: 01010010110100000111100101001001

       - Next Round Left 32 Bits:  00010011011100110011111011100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010110100000111100101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011011100110011111011100001

       - Right 32 Bits:            01010010110100000111100101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011001110110111000100010001000110110110001101101111   [Subkey: 9]
          - Input Half:       01010010110100000111100101001001
          - S-Box Result:     10011110011011111101001101110011   [per every group of 4-bits]
          - Split Into Two:   1001111001101111 [L] 1101001101110011 [R]
          - Swap Halves:      11010011011100111001111001101111
          - Bit Inversion:    00101100100011000110000110010000
          - Compressed Key:   00101101110100100100111010011111   [done by compression P-Box]
          - XOR with Key:     00000001010111100010111100001111

          - FUNCTION OUTPUT:  00000001010111100010111100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011011100110011111011100001

       - FUNCTION OUTPUT:          00000001010111100010111100001111

       - Left XOR FUNCTION OUTPUT: 00010010001011010001000111101110

       - Next Round Left 32 Bits:  01010010110100000111100101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001011010001000111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010110100000111100101001001

       - Right 32 Bits:            00010010001011010001000111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001110011000100100011101110111011100100100111001001000   [Subkey: 8]
          - Input Half:       00010010001011010001000111101110
          - S-Box Result:     10101110111001101010101011001100   [per every group of 4-bits]
          - Split Into Two:   1010111011100110 [L] 1010101011001100 [R]
          - Swap Halves:      10101010110011001010111011100110
          - Bit Inversion:    01010101001100110101000100011001
          - Compressed Key:   10110100010010110111011011000100   [done by compression P-Box]
          - XOR with Key:     11100001011110000010011111011101

          - FUNCTION OUTPUT:  11100001011110000010011111011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010110100000111100101001001

       - FUNCTION OUTPUT:          11100001011110000010011111011101

       - Left XOR FUNCTION OUTPUT: 10110011101010000101111010010100

       - Next Round Left 32 Bits:  00010010001011010001000111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011101010000101111010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010001011010001000111101110

       - Right 32 Bits:            10110011101010000101111010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000110011101101110001000100010001101101100011011011   [Subkey: 7]
          - Input Half:       10110011101010000101111010010100
          - S-Box Result:     10000001010000101001110000110111   [per every group of 4-bits]
          - Split Into Two:   1000000101000010 [L] 1001110000110111 [R]
          - Swap Halves:      10011100001101111000000101000010
          - Bit Inversion:    01100011110010000111111010111101
          - Compressed Key:   11000011011110000001011100100111   [done by compression P-Box]
          - XOR with Key:     10100000101100000110100110011010

          - FUNCTION OUTPUT:  10100000101100000110100110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010001011010001000111101110

       - FUNCTION OUTPUT:          10100000101100000110100110011010

       - Left XOR FUNCTION OUTPUT: 10110010100111010111100001110100

       - Next Round Left 32 Bits:  10110011101010000101111010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010100111010111100001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011101010000101111010010100

       - Right 32 Bits:            10110010100111010111100001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011100110001001000111011101110111001001001110010010   [Subkey: 6]
          - Input Half:       10110010100111010111100001110100
          - S-Box Result:     10001110001101101101001011010111   [per every group of 4-bits]
          - Split Into Two:   1000111000110110 [L] 1101001011010111 [R]
          - Swap Halves:      11010010110101111000111000110110
          - Bit Inversion:    00101101001010000111000111001001
          - Compressed Key:   01101001000111101101000110110001   [done by compression P-Box]
          - XOR with Key:     01000100001101101010000001111000

          - FUNCTION OUTPUT:  01000100001101101010000001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011101010000101111010010100

       - FUNCTION OUTPUT:          01000100001101101010000001111000

       - Left XOR FUNCTION OUTPUT: 11110111100111101111111011101100

       - Next Round Left 32 Bits:  10110010100111010111100001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111100111101111111011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010100111010111100001110100

       - Right 32 Bits:            11110111100111101111111011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110001100111011011100010001000100011011011000110110   [Subkey: 5]
          - Input Half:       11110111100111101111111011101100
          - S-Box Result:     10111101001111001011110011000101   [per every group of 4-bits]
          - Split Into Two:   1011110100111100 [L] 1011110011000101 [R]
          - Swap Halves:      10111100110001011011110100111100
          - Bit Inversion:    01000011001110100100001011000011
          - Compressed Key:   01111100100100100100100111001001   [done by compression P-Box]
          - XOR with Key:     00111111101010000000101100001010

          - FUNCTION OUTPUT:  00111111101010000000101100001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010100111010111100001110100

       - FUNCTION OUTPUT:          00111111101010000000101100001010

       - Left XOR FUNCTION OUTPUT: 10001101001101010111001101111110

       - Next Round Left 32 Bits:  11110111100111101111111011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101001101010111001101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111100111101111111011101100

       - Right 32 Bits:            10001101001101010111001101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100111001100010010001110111011101110010010011100100   [Subkey: 4]
          - Input Half:       10001101001101010111001101111110
          - S-Box Result:     00100110000110011101000111011100   [per every group of 4-bits]
          - Split Into Two:   0010011000011001 [L] 1101000111011100 [R]
          - Swap Halves:      11010001110111000010011000011001
          - Bit Inversion:    00101110001000111101100111100110
          - Compressed Key:   00010110100010110111110001101000   [done by compression P-Box]
          - XOR with Key:     00111000101010001010010110001110

          - FUNCTION OUTPUT:  00111000101010001010010110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111100111101111111011101100

       - FUNCTION OUTPUT:          00111000101010001010010110001110

       - Left XOR FUNCTION OUTPUT: 11001111001101100101101101100010

       - Next Round Left 32 Bits:  10001101001101010111001101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111001101100101101101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101001101010111001101111110

       - Right 32 Bits:            11001111001101100101101101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100011001110110111000100010001000110110110001101   [Subkey: 3]
          - Input Half:       11001111001101100101101101100010
          - S-Box Result:     01011011000100001001100000001110   [per every group of 4-bits]
          - Split Into Two:   0101101100010000 [L] 1001100000001110 [R]
          - Swap Halves:      10011000000011100101101100010000
          - Bit Inversion:    01100111111100011010010011101111
          - Compressed Key:   11010011111011000001001001111110   [done by compression P-Box]
          - XOR with Key:     10110100000111011011011010010001

          - FUNCTION OUTPUT:  10110100000111011011011010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101001101010111001101111110

       - FUNCTION OUTPUT:          10110100000111011011011010010001

       - Left XOR FUNCTION OUTPUT: 00111001001010001100010111101111

       - Next Round Left 32 Bits:  11001111001101100101101101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001001010001100010111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111001101100101101101100010

       - Right 32 Bits:            00111001001010001100010111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001110011000100100011101110111011100100100111001   [Subkey: 2]
          - Input Half:       00111001001010001100010111101111
          - S-Box Result:     00010011111000100101100111001011   [per every group of 4-bits]
          - Split Into Two:   0001001111100010 [L] 0101100111001011 [R]
          - Swap Halves:      01011001110010110001001111100010
          - Bit Inversion:    10100110001101001110110000011101
          - Compressed Key:   00001101001000101101101100010110   [done by compression P-Box]
          - XOR with Key:     10101011000101100011011100001011

          - FUNCTION OUTPUT:  10101011000101100011011100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111001101100101101101100010

       - FUNCTION OUTPUT:          10101011000101100011011100001011

       - Left XOR FUNCTION OUTPUT: 01100100001000000110110001101001

       - Next Round Left 32 Bits:  00111001001010001100010111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100001000000110110001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001001010001100010111101111

       - Right 32 Bits:            01100100001000000110110001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011000110011101101110001000100010001101101100011   [Subkey: 1]
          - Input Half:       01100100001000000110110001101001
          - S-Box Result:     00000111111011110000010100000011   [per every group of 4-bits]
          - Split Into Two:   0000011111101111 [L] 0000010100000011 [R]
          - Swap Halves:      00000101000000110000011111101111
          - Bit Inversion:    11111010111111001111100000010000
          - Compressed Key:   10110100101110110100100010010011   [done by compression P-Box]
          - XOR with Key:     01001110010001111011000010000011

          - FUNCTION OUTPUT:  01001110010001111011000010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001001010001100010111101111

       - FUNCTION OUTPUT:          01001110010001111011000010000011

       - Left XOR FUNCTION OUTPUT: 01110111011011110111010101101100

       - Next Round Left 32 Bits:  01100100001000000110110001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111011011110111010101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111011101101111011101010110110001100100001000000110110001101001

 > Processed Block:     0111011101101111011101010110110001100100001000000110110001101001


Ciphertext Block 4: 1011010110100011001001101001000001100111110001010011011101001111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101101000110010011010010000

       - Right 32 Bits:            01100111110001010011011101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010001110111011101110010010011100100100001001110   [Subkey: 16]
          - Input Half:       01100111110001010011011101001111
          - S-Box Result:     00001101010110010001110101111011   [per every group of 4-bits]
          - Split Into Two:   0000110101011001 [L] 0001110101111011 [R]
          - Swap Halves:      00011101011110110000110101011001
          - Bit Inversion:    11100010100001001111001010100110
          - Compressed Key:   00100010110110110001011000001101   [done by compression P-Box]
          - XOR with Key:     11000000010111111110010010101011

          - FUNCTION OUTPUT:  11000000010111111110010010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101101000110010011010010000

       - FUNCTION OUTPUT:          11000000010111111110010010101011

       - Left XOR FUNCTION OUTPUT: 01110101111111001100001000111011

       - Next Round Left 32 Bits:  01100111110001010011011101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110101111111001100001000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111110001010011011101001111

       - Right 32 Bits:            01110101111111001100001000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110111000100010001000110110110001101101111011000   [Subkey: 15]
          - Input Half:       01110101111111001100001000111011
          - S-Box Result:     11011001101101010101111000011000   [per every group of 4-bits]
          - Split Into Two:   1101100110110101 [L] 0101111000011000 [R]
          - Swap Halves:      01011110000110001101100110110101
          - Bit Inversion:    10100001111001110010011001001010
          - Compressed Key:   10111011010010001001001110110100   [done by compression P-Box]
          - XOR with Key:     00011010101011111011010111111110

          - FUNCTION OUTPUT:  00011010101011111011010111111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111110001010011011101001111

       - FUNCTION OUTPUT:          00011010101011111011010111111110

       - Left XOR FUNCTION OUTPUT: 01111101011010101000001010110001

       - Next Round Left 32 Bits:  01110101111111001100001000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101011010101000001010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110101111111001100001000111011

       - Right 32 Bits:            01111101011010101000001010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011000100100011101110111011100100100111001001000010011   [Subkey: 14]
          - Input Half:       01111101011010101000001010110001
          - S-Box Result:     11010110000001000010111010001010   [per every group of 4-bits]
          - Split Into Two:   1101011000000100 [L] 0010111010001010 [R]
          - Swap Halves:      00101110100010101101011000000100
          - Bit Inversion:    11010001011101010010100111111011
          - Compressed Key:   11001000011111101000110110000011   [done by compression P-Box]
          - XOR with Key:     00011001000010111010010001111000

          - FUNCTION OUTPUT:  00011001000010111010010001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110101111111001100001000111011

       - FUNCTION OUTPUT:          00011001000010111010010001111000

       - Left XOR FUNCTION OUTPUT: 01101100111101110110011001000011

       - Next Round Left 32 Bits:  01111101011010101000001010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100111101110110011001000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101011010101000001010110001

       - Right 32 Bits:            01101100111101110110011001000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011101101110001000100010001101101100011011011110110   [Subkey: 13]
          - Input Half:       01101100111101110110011001000011
          - S-Box Result:     00000101101111010000000001110001   [per every group of 4-bits]
          - Split Into Two:   0000010110111101 [L] 0000000001110001 [R]
          - Swap Halves:      00000000011100010000010110111101
          - Bit Inversion:    11111111100011101111101001000010
          - Compressed Key:   01101110000100101110010011101001   [done by compression P-Box]
          - XOR with Key:     10010001100111000001111010101011

          - FUNCTION OUTPUT:  10010001100111000001111010101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101011010101000001010110001

       - FUNCTION OUTPUT:          10010001100111000001111010101011

       - Left XOR FUNCTION OUTPUT: 11101100111101101001110000011010

       - Next Round Left 32 Bits:  01101100111101110110011001000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100111101101001110000011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100111101110110011001000011

       - Right 32 Bits:            11101100111101101001110000011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110001001000111011101110111001001001110010010000100   [Subkey: 12]
          - Input Half:       11101100111101101001110000011010
          - S-Box Result:     11000101101100000011010110100100   [per every group of 4-bits]
          - Split Into Two:   1100010110110000 [L] 0011010110100100 [R]
          - Swap Halves:      00110101101001001100010110110000
          - Bit Inversion:    11001010010110110011101001001111
          - Compressed Key:   00110110110110110110001101101000   [done by compression P-Box]
          - XOR with Key:     11111100100000000101100100100111

          - FUNCTION OUTPUT:  11111100100000000101100100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100111101110110011001000011

       - FUNCTION OUTPUT:          11111100100000000101100100100111

       - Left XOR FUNCTION OUTPUT: 10010000011101110011111101100100

       - Next Round Left 32 Bits:  11101100111101101001110000011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000011101110011111101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100111101101001110000011010

       - Right 32 Bits:            10010000011101110011111101100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100111011011100010001000100011011011000110110111101   [Subkey: 11]
          - Input Half:       10010000011101110011111101100100
          - S-Box Result:     00111111110111010001101100000111   [per every group of 4-bits]
          - Split Into Two:   0011111111011101 [L] 0001101100000111 [R]
          - Swap Halves:      00011011000001110011111111011101
          - Bit Inversion:    11100100111110001100000000100010
          - Compressed Key:   10010111010010000011100101111110   [done by compression P-Box]
          - XOR with Key:     01110011101100001111100101011100

          - FUNCTION OUTPUT:  01110011101100001111100101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100111101101001110000011010

       - FUNCTION OUTPUT:          01110011101100001111100101011100

       - Left XOR FUNCTION OUTPUT: 10011111010001100110010101000110

       - Next Round Left 32 Bits:  10010000011101110011111101100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111010001100110010101000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000011101110011111101100100

       - Right 32 Bits:            10011111010001100110010101000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111001100010010001110111011101110010010011100100100001   [Subkey: 10]
          - Input Half:       10011111010001100110010101000110
          - S-Box Result:     00111011011100000000100101110000   [per every group of 4-bits]
          - Split Into Two:   0011101101110000 [L] 0000100101110000 [R]
          - Swap Halves:      00001001011100000011101101110000
          - Bit Inversion:    11110110100011111100010010001111
          - Compressed Key:   11000001001111101101100000010010   [done by compression P-Box]
          - XOR with Key:     00110111101100010001110010011101

          - FUNCTION OUTPUT:  00110111101100010001110010011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000011101110011111101100100

       - FUNCTION OUTPUT:          00110111101100010001110010011101

       - Left XOR FUNCTION OUTPUT: 10100111110001100010001111111001

       - Next Round Left 32 Bits:  10011111010001100110010101000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111110001100010001111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111010001100110010101000110

       - Right 32 Bits:            10100111110001100010001111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011001110110111000100010001000110110110001101101111   [Subkey: 9]
          - Input Half:       10100111110001100010001111111001
          - S-Box Result:     01001101010100001110000110110011   [per every group of 4-bits]
          - Split Into Two:   0100110101010000 [L] 1110000110110011 [R]
          - Swap Halves:      11100001101100110100110101010000
          - Bit Inversion:    00011110010011001011001010101111
          - Compressed Key:   00101101110100100100111010011111   [done by compression P-Box]
          - XOR with Key:     00110011100111101111110000110000

          - FUNCTION OUTPUT:  00110011100111101111110000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111010001100110010101000110

       - FUNCTION OUTPUT:          00110011100111101111110000110000

       - Left XOR FUNCTION OUTPUT: 10101100110110001001100101110110

       - Next Round Left 32 Bits:  10100111110001100010001111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100110110001001100101110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111110001100010001111111001

       - Right 32 Bits:            10101100110110001001100101110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001110011000100100011101110111011100100100111001001000   [Subkey: 8]
          - Input Half:       10101100110110001001100101110110
          - S-Box Result:     01000101011000100011001111010000   [per every group of 4-bits]
          - Split Into Two:   0100010101100010 [L] 0011001111010000 [R]
          - Swap Halves:      00110011110100000100010101100010
          - Bit Inversion:    11001100001011111011101010011101
          - Compressed Key:   10110100010010110111011011000100   [done by compression P-Box]
          - XOR with Key:     01111000011001001100110001011001

          - FUNCTION OUTPUT:  01111000011001001100110001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111110001100010001111111001

       - FUNCTION OUTPUT:          01111000011001001100110001011001

       - Left XOR FUNCTION OUTPUT: 11011111101000101110111110100000

       - Next Round Left 32 Bits:  10101100110110001001100101110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111101000101110111110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100110110001001100101110110

       - Right 32 Bits:            11011111101000101110111110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000110011101101110001000100010001101101100011011011   [Subkey: 7]
          - Input Half:       11011111101000101110111110100000
          - S-Box Result:     01101011010011101100101101001111   [per every group of 4-bits]
          - Split Into Two:   0110101101001110 [L] 1100101101001111 [R]
          - Swap Halves:      11001011010011110110101101001110
          - Bit Inversion:    00110100101100001001010010110001
          - Compressed Key:   11000011011110000001011100100111   [done by compression P-Box]
          - XOR with Key:     11110111110010001000001110010110

          - FUNCTION OUTPUT:  11110111110010001000001110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100110110001001100101110110

       - FUNCTION OUTPUT:          11110111110010001000001110010110

       - Left XOR FUNCTION OUTPUT: 01011011000100000001101011100000

       - Next Round Left 32 Bits:  11011111101000101110111110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011000100000001101011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111101000101110111110100000

       - Right 32 Bits:            01011011000100000001101011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011100110001001000111011101110111001001001110010010   [Subkey: 6]
          - Input Half:       01011011000100000001101011100000
          - S-Box Result:     10011000101011111010010011001111   [per every group of 4-bits]
          - Split Into Two:   1001100010101111 [L] 1010010011001111 [R]
          - Swap Halves:      10100100110011111001100010101111
          - Bit Inversion:    01011011001100000110011101010000
          - Compressed Key:   01101001000111101101000110110001   [done by compression P-Box]
          - XOR with Key:     00110010001011101011011011100001

          - FUNCTION OUTPUT:  00110010001011101011011011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111101000101110111110100000

       - FUNCTION OUTPUT:          00110010001011101011011011100001

       - Left XOR FUNCTION OUTPUT: 11101101100011000101100101000001

       - Next Round Left 32 Bits:  01011011000100000001101011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101100011000101100101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011000100000001101011100000

       - Right 32 Bits:            11101101100011000101100101000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110001100111011011100010001000100011011011000110110   [Subkey: 5]
          - Input Half:       11101101100011000101100101000001
          - S-Box Result:     11000110001001011001001101111010   [per every group of 4-bits]
          - Split Into Two:   1100011000100101 [L] 1001001101111010 [R]
          - Swap Halves:      10010011011110101100011000100101
          - Bit Inversion:    01101100100001010011100111011010
          - Compressed Key:   01111100100100100100100111001001   [done by compression P-Box]
          - XOR with Key:     00010000000101110111000000010011

          - FUNCTION OUTPUT:  00010000000101110111000000010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011000100000001101011100000

       - FUNCTION OUTPUT:          00010000000101110111000000010011

       - Left XOR FUNCTION OUTPUT: 01001011000001110110101011110011

       - Next Round Left 32 Bits:  11101101100011000101100101000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011000001110110101011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101100011000101100101000001

       - Right 32 Bits:            01001011000001110110101011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100111001100010010001110111011101110010010011100100   [Subkey: 4]
          - Input Half:       01001011000001110110101011110011
          - S-Box Result:     01111000111111010000010010110001   [per every group of 4-bits]
          - Split Into Two:   0111100011111101 [L] 0000010010110001 [R]
          - Swap Halves:      00000100101100010111100011111101
          - Bit Inversion:    11111011010011101000011100000010
          - Compressed Key:   00010110100010110111110001101000   [done by compression P-Box]
          - XOR with Key:     11101101110001011111101101101010

          - FUNCTION OUTPUT:  11101101110001011111101101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101100011000101100101000001

       - FUNCTION OUTPUT:          11101101110001011111101101101010

       - Left XOR FUNCTION OUTPUT: 00000000010010011010001000101011

       - Next Round Left 32 Bits:  01001011000001110110101011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000010010011010001000101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011000001110110101011110011

       - Right 32 Bits:            00000000010010011010001000101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100011001110110111000100010001000110110110001101   [Subkey: 3]
          - Input Half:       00000000010010011010001000101011
          - S-Box Result:     11111111011100110100111011101000   [per every group of 4-bits]
          - Split Into Two:   1111111101110011 [L] 0100111011101000 [R]
          - Swap Halves:      01001110111010001111111101110011
          - Bit Inversion:    10110001000101110000000010001100
          - Compressed Key:   11010011111011000001001001111110   [done by compression P-Box]
          - XOR with Key:     01100010111110110001001011110010

          - FUNCTION OUTPUT:  01100010111110110001001011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011000001110110101011110011

       - FUNCTION OUTPUT:          01100010111110110001001011110010

       - Left XOR FUNCTION OUTPUT: 00101001111111000111100000000001

       - Next Round Left 32 Bits:  00000000010010011010001000101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001111111000111100000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000010010011010001000101011

       - Right 32 Bits:            00101001111111000111100000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001110011000100100011101110111011100100100111001   [Subkey: 2]
          - Input Half:       00101001111111000111100000000001
          - S-Box Result:     11100011101101011101001011111010   [per every group of 4-bits]
          - Split Into Two:   1110001110110101 [L] 1101001011111010 [R]
          - Swap Halves:      11010010111110101110001110110101
          - Bit Inversion:    00101101000001010001110001001010
          - Compressed Key:   00001101001000101101101100010110   [done by compression P-Box]
          - XOR with Key:     00100000001001111100011101011100

          - FUNCTION OUTPUT:  00100000001001111100011101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000010010011010001000101011

       - FUNCTION OUTPUT:          00100000001001111100011101011100

       - Left XOR FUNCTION OUTPUT: 00100000011011100110010101110111

       - Next Round Left 32 Bits:  00101001111111000111100000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000011011100110010101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001111111000111100000000001

       - Right 32 Bits:            00100000011011100110010101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011000110011101101110001000100010001101101100011   [Subkey: 1]
          - Input Half:       00100000011011100110010101110111
          - S-Box Result:     11101111000011000000100111011101   [per every group of 4-bits]
          - Split Into Two:   1110111100001100 [L] 0000100111011101 [R]
          - Swap Halves:      00001001110111011110111100001100
          - Bit Inversion:    11110110001000100001000011110011
          - Compressed Key:   10110100101110110100100010010011   [done by compression P-Box]
          - XOR with Key:     01000010100110010101100001100000

          - FUNCTION OUTPUT:  01000010100110010101100001100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001111111000111100000000001

       - FUNCTION OUTPUT:          01000010100110010101100001100000

       - Left XOR FUNCTION OUTPUT: 01101011011001010010000001100001

       - Next Round Left 32 Bits:  00100000011011100110010101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011011001010010000001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110101101100101001000000110000100100000011011100110010101110111

 > Processed Block:     0110101101100101001000000110000100100000011011100110010101110111


Ciphertext Block 5: 0010111101001110010101111000000001010010011001110000111101111000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111010011100101011110000000

       - Right 32 Bits:            01010010011001110000111101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010001110111011101110010010011100100100001001110   [Subkey: 16]
          - Input Half:       01010010011001110000111101111000
          - S-Box Result:     10011110000011011111101111010010   [per every group of 4-bits]
          - Split Into Two:   1001111000001101 [L] 1111101111010010 [R]
          - Swap Halves:      11111011110100101001111000001101
          - Bit Inversion:    00000100001011010110000111110010
          - Compressed Key:   00100010110110110001011000001101   [done by compression P-Box]
          - XOR with Key:     00100110111101100111011111111111

          - FUNCTION OUTPUT:  00100110111101100111011111111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111010011100101011110000000

       - FUNCTION OUTPUT:          00100110111101100111011111111111

       - Left XOR FUNCTION OUTPUT: 00001001101110000010000001111111

       - Next Round Left 32 Bits:  01010010011001110000111101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001101110000010000001111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010011001110000111101111000

       - Right 32 Bits:            00001001101110000010000001111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110111000100010001000110110110001101101111011000   [Subkey: 15]
          - Input Half:       00001001101110000010000001111111
          - S-Box Result:     11110011100000101110111111011011   [per every group of 4-bits]
          - Split Into Two:   1111001110000010 [L] 1110111111011011 [R]
          - Swap Halves:      11101111110110111111001110000010
          - Bit Inversion:    00010000001001000000110001111101
          - Compressed Key:   10111011010010001001001110110100   [done by compression P-Box]
          - XOR with Key:     10101011011011001001111111001001

          - FUNCTION OUTPUT:  10101011011011001001111111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010011001110000111101111000

       - FUNCTION OUTPUT:          10101011011011001001111111001001

       - Left XOR FUNCTION OUTPUT: 11111001000010111001000010110001

       - Next Round Left 32 Bits:  00001001101110000010000001111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001000010111001000010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001101110000010000001111111

       - Right 32 Bits:            11111001000010111001000010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011000100100011101110111011100100100111001001000010011   [Subkey: 14]
          - Input Half:       11111001000010111001000010110001
          - S-Box Result:     10110011111110000011111110001010   [per every group of 4-bits]
          - Split Into Two:   1011001111111000 [L] 0011111110001010 [R]
          - Swap Halves:      00111111100010101011001111111000
          - Bit Inversion:    11000000011101010100110000000111
          - Compressed Key:   11001000011111101000110110000011   [done by compression P-Box]
          - XOR with Key:     00001000000010111100000110000100

          - FUNCTION OUTPUT:  00001000000010111100000110000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001101110000010000001111111

       - FUNCTION OUTPUT:          00001000000010111100000110000100

       - Left XOR FUNCTION OUTPUT: 00000001101100111110000111111011

       - Next Round Left 32 Bits:  11111001000010111001000010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001101100111110000111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001000010111001000010110001

       - Right 32 Bits:            00000001101100111110000111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011101101110001000100010001101101100011011011110110   [Subkey: 13]
          - Input Half:       00000001101100111110000111111011
          - S-Box Result:     11111010100000011100101010111000   [per every group of 4-bits]
          - Split Into Two:   1111101010000001 [L] 1100101010111000 [R]
          - Swap Halves:      11001010101110001111101010000001
          - Bit Inversion:    00110101010001110000010101111110
          - Compressed Key:   01101110000100101110010011101001   [done by compression P-Box]
          - XOR with Key:     01011011010101011110000110010111

          - FUNCTION OUTPUT:  01011011010101011110000110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001000010111001000010110001

       - FUNCTION OUTPUT:          01011011010101011110000110010111

       - Left XOR FUNCTION OUTPUT: 10100010010111100111000100100110

       - Next Round Left 32 Bits:  00000001101100111110000111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010010111100111000100100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001101100111110000111111011

       - Right 32 Bits:            10100010010111100111000100100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110001001000111011101110111001001001110010010000100   [Subkey: 12]
          - Input Half:       10100010010111100111000100100110
          - S-Box Result:     01001110100111001101101011100000   [per every group of 4-bits]
          - Split Into Two:   0100111010011100 [L] 1101101011100000 [R]
          - Swap Halves:      11011010111000000100111010011100
          - Bit Inversion:    00100101000111111011000101100011
          - Compressed Key:   00110110110110110110001101101000   [done by compression P-Box]
          - XOR with Key:     00010011110001001101001000001011

          - FUNCTION OUTPUT:  00010011110001001101001000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001101100111110000111111011

       - FUNCTION OUTPUT:          00010011110001001101001000001011

       - Left XOR FUNCTION OUTPUT: 00010010011101110011001111110000

       - Next Round Left 32 Bits:  10100010010111100111000100100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010011101110011001111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010010111100111000100100110

       - Right 32 Bits:            00010010011101110011001111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100111011011100010001000100011011011000110110111101   [Subkey: 11]
          - Input Half:       00010010011101110011001111110000
          - S-Box Result:     10101110110111010001000110111111   [per every group of 4-bits]
          - Split Into Two:   1010111011011101 [L] 0001000110111111 [R]
          - Swap Halves:      00010001101111111010111011011101
          - Bit Inversion:    11101110010000000101000100100010
          - Compressed Key:   10010111010010000011100101111110   [done by compression P-Box]
          - XOR with Key:     01111001000010000110100001011100

          - FUNCTION OUTPUT:  01111001000010000110100001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010010111100111000100100110

       - FUNCTION OUTPUT:          01111001000010000110100001011100

       - Left XOR FUNCTION OUTPUT: 11011011010101100001100101111010

       - Next Round Left 32 Bits:  00010010011101110011001111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011010101100001100101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010011101110011001111110000

       - Right 32 Bits:            11011011010101100001100101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111001100010010001110111011101110010010011100100100001   [Subkey: 10]
          - Input Half:       11011011010101100001100101111010
          - S-Box Result:     01101000100100001010001111010100   [per every group of 4-bits]
          - Split Into Two:   0110100010010000 [L] 1010001111010100 [R]
          - Swap Halves:      10100011110101000110100010010000
          - Bit Inversion:    01011100001010111001011101101111
          - Compressed Key:   11000001001111101101100000010010   [done by compression P-Box]
          - XOR with Key:     10011101000101010100111101111101

          - FUNCTION OUTPUT:  10011101000101010100111101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010011101110011001111110000

       - FUNCTION OUTPUT:          10011101000101010100111101111101

       - Left XOR FUNCTION OUTPUT: 10001111011000100111110010001101

       - Next Round Left 32 Bits:  11011011010101100001100101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111011000100111110010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011010101100001100101111010

       - Right 32 Bits:            10001111011000100111110010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011001110110111000100010001000110110110001101101111   [Subkey: 9]
          - Input Half:       10001111011000100111110010001101
          - S-Box Result:     00101011000011101101010100100110   [per every group of 4-bits]
          - Split Into Two:   0010101100001110 [L] 1101010100100110 [R]
          - Swap Halves:      11010101001001100010101100001110
          - Bit Inversion:    00101010110110011101010011110001
          - Compressed Key:   00101101110100100100111010011111   [done by compression P-Box]
          - XOR with Key:     00000111000010111001101001101110

          - FUNCTION OUTPUT:  00000111000010111001101001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011010101100001100101111010

       - FUNCTION OUTPUT:          00000111000010111001101001101110

       - Left XOR FUNCTION OUTPUT: 11011100010111011000001100010100

       - Next Round Left 32 Bits:  10001111011000100111110010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100010111011000001100010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111011000100111110010001101

       - Right 32 Bits:            11011100010111011000001100010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001110011000100100011101110111011100100100111001001000   [Subkey: 8]
          - Input Half:       11011100010111011000001100010100
          - S-Box Result:     01100101100101100010000110100111   [per every group of 4-bits]
          - Split Into Two:   0110010110010110 [L] 0010000110100111 [R]
          - Swap Halves:      00100001101001110110010110010110
          - Bit Inversion:    11011110010110001001101001101001
          - Compressed Key:   10110100010010110111011011000100   [done by compression P-Box]
          - XOR with Key:     01101010000100111110110010101101

          - FUNCTION OUTPUT:  01101010000100111110110010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111011000100111110010001101

       - FUNCTION OUTPUT:          01101010000100111110110010101101

       - Left XOR FUNCTION OUTPUT: 11100101011100011001000000100000

       - Next Round Left 32 Bits:  11011100010111011000001100010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101011100011001000000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100010111011000001100010100

       - Right 32 Bits:            11100101011100011001000000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000110011101101110001000100010001101101100011011011   [Subkey: 7]
          - Input Half:       11100101011100011001000000100000
          - S-Box Result:     11001001110110100011111111101111   [per every group of 4-bits]
          - Split Into Two:   1100100111011010 [L] 0011111111101111 [R]
          - Swap Halves:      00111111111011111100100111011010
          - Bit Inversion:    11000000000100000011011000100101
          - Compressed Key:   11000011011110000001011100100111   [done by compression P-Box]
          - XOR with Key:     00000011011010000010000100000010

          - FUNCTION OUTPUT:  00000011011010000010000100000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100010111011000001100010100

       - FUNCTION OUTPUT:          00000011011010000010000100000010

       - Left XOR FUNCTION OUTPUT: 11011111001101011010001000010110

       - Next Round Left 32 Bits:  11100101011100011001000000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111001101011010001000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101011100011001000000100000

       - Right 32 Bits:            11011111001101011010001000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011100110001001000111011101110111001001001110010010   [Subkey: 6]
          - Input Half:       11011111001101011010001000010110
          - S-Box Result:     01101011000110010100111010100000   [per every group of 4-bits]
          - Split Into Two:   0110101100011001 [L] 0100111010100000 [R]
          - Swap Halves:      01001110101000000110101100011001
          - Bit Inversion:    10110001010111111001010011100110
          - Compressed Key:   01101001000111101101000110110001   [done by compression P-Box]
          - XOR with Key:     11011000010000010100010101010111

          - FUNCTION OUTPUT:  11011000010000010100010101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101011100011001000000100000

       - FUNCTION OUTPUT:          11011000010000010100010101010111

       - Left XOR FUNCTION OUTPUT: 00111101001100001101010101110111

       - Next Round Left 32 Bits:  11011111001101011010001000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101001100001101010101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111001101011010001000010110

       - Right 32 Bits:            00111101001100001101010101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110001100111011011100010001000100011011011000110110   [Subkey: 5]
          - Input Half:       00111101001100001101010101110111
          - S-Box Result:     00010110000111110110100111011101   [per every group of 4-bits]
          - Split Into Two:   0001011000011111 [L] 0110100111011101 [R]
          - Swap Halves:      01101001110111010001011000011111
          - Bit Inversion:    10010110001000101110100111100000
          - Compressed Key:   01111100100100100100100111001001   [done by compression P-Box]
          - XOR with Key:     11101010101100001010000000101001

          - FUNCTION OUTPUT:  11101010101100001010000000101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111001101011010001000010110

       - FUNCTION OUTPUT:          11101010101100001010000000101001

       - Left XOR FUNCTION OUTPUT: 00110101100001010000001000111111

       - Next Round Left 32 Bits:  00111101001100001101010101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101100001010000001000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101001100001101010101110111

       - Right 32 Bits:            00110101100001010000001000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100111001100010010001110111011101110010010011100100   [Subkey: 4]
          - Input Half:       00110101100001010000001000111111
          - S-Box Result:     00011001001010011111111000011011   [per every group of 4-bits]
          - Split Into Two:   0001100100101001 [L] 1111111000011011 [R]
          - Swap Halves:      11111110000110110001100100101001
          - Bit Inversion:    00000001111001001110011011010110
          - Compressed Key:   00010110100010110111110001101000   [done by compression P-Box]
          - XOR with Key:     00010111011011111001101010111110

          - FUNCTION OUTPUT:  00010111011011111001101010111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101001100001101010101110111

       - FUNCTION OUTPUT:          00010111011011111001101010111110

       - Left XOR FUNCTION OUTPUT: 00101010010111110100111111001001

       - Next Round Left 32 Bits:  00110101100001010000001000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010010111110100111111001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101100001010000001000111111

       - Right 32 Bits:            00101010010111110100111111001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100011001110110111000100010001000110110110001101   [Subkey: 3]
          - Input Half:       00101010010111110100111111001001
          - S-Box Result:     11100100100110110111101101010011   [per every group of 4-bits]
          - Split Into Two:   1110010010011011 [L] 0111101101010011 [R]
          - Swap Halves:      01111011010100111110010010011011
          - Bit Inversion:    10000100101011000001101101100100
          - Compressed Key:   11010011111011000001001001111110   [done by compression P-Box]
          - XOR with Key:     01010111010000000000100100011010

          - FUNCTION OUTPUT:  01010111010000000000100100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101100001010000001000111111

       - FUNCTION OUTPUT:          01010111010000000000100100011010

       - Left XOR FUNCTION OUTPUT: 01100010110001010000101100100101

       - Next Round Left 32 Bits:  00101010010111110100111111001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010110001010000101100100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010010111110100111111001001

       - Right 32 Bits:            01100010110001010000101100100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001110011000100100011101110111011100100100111001   [Subkey: 2]
          - Input Half:       01100010110001010000101100100101
          - S-Box Result:     00001110010110011111100011101001   [per every group of 4-bits]
          - Split Into Two:   0000111001011001 [L] 1111100011101001 [R]
          - Swap Halves:      11111000111010010000111001011001
          - Bit Inversion:    00000111000101101111000110100110
          - Compressed Key:   00001101001000101101101100010110   [done by compression P-Box]
          - XOR with Key:     00001010001101000010101010110000

          - FUNCTION OUTPUT:  00001010001101000010101010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010010111110100111111001001

       - FUNCTION OUTPUT:          00001010001101000010101010110000

       - Left XOR FUNCTION OUTPUT: 00100000011010110110010101111001

       - Next Round Left 32 Bits:  01100010110001010000101100100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000011010110110010101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010110001010000101100100101

       - Right 32 Bits:            00100000011010110110010101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011000110011101101110001000100010001101101100011   [Subkey: 1]
          - Input Half:       00100000011010110110010101111001
          - S-Box Result:     11101111000010000000100111010011   [per every group of 4-bits]
          - Split Into Two:   1110111100001000 [L] 0000100111010011 [R]
          - Swap Halves:      00001001110100111110111100001000
          - Bit Inversion:    11110110001011000001000011110111
          - Compressed Key:   10110100101110110100100010010011   [done by compression P-Box]
          - XOR with Key:     01000010100101110101100001100100

          - FUNCTION OUTPUT:  01000010100101110101100001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010110001010000101100100101

       - FUNCTION OUTPUT:          01000010100101110101100001100100

       - Left XOR FUNCTION OUTPUT: 00100000010100100101001101000001

       - Next Round Left 32 Bits:  00100000011010110110010101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000010100100101001101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010000001010010010100110100000100100000011010110110010101111001

 > Processed Block:     0010000001010010010100110100000100100000011010110110010101111001


Ciphertext Block 6: 1000011000001010101010000011111100001101010010011001000111011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110000010101010100000111111

       - Right 32 Bits:            00001101010010011001000111011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010010001110111011101110010010011100100100001001110   [Subkey: 16]
          - Input Half:       00001101010010011001000111011100
          - S-Box Result:     11110110011100110011101001100101   [per every group of 4-bits]
          - Split Into Two:   1111011001110011 [L] 0011101001100101 [R]
          - Swap Halves:      00111010011001011111011001110011
          - Bit Inversion:    11000101100110100000100110001100
          - Compressed Key:   00100010110110110001011000001101   [done by compression P-Box]
          - XOR with Key:     11100111010000010001111110000001

          - FUNCTION OUTPUT:  11100111010000010001111110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110000010101010100000111111

       - FUNCTION OUTPUT:          11100111010000010001111110000001

       - Left XOR FUNCTION OUTPUT: 01100001010010111011011110111110

       - Next Round Left 32 Bits:  00001101010010011001000111011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001010010111011011110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101010010011001000111011100

       - Right 32 Bits:            01100001010010111011011110111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110110111000100010001000110110110001101101111011000   [Subkey: 15]
          - Input Half:       01100001010010111011011110111110
          - S-Box Result:     00001010011110001000110110001100   [per every group of 4-bits]
          - Split Into Two:   0000101001111000 [L] 1000110110001100 [R]
          - Swap Halves:      10001101100011000000101001111000
          - Bit Inversion:    01110010011100111111010110000111
          - Compressed Key:   10111011010010001001001110110100   [done by compression P-Box]
          - XOR with Key:     11001001001110110110011000110011

          - FUNCTION OUTPUT:  11001001001110110110011000110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101010010011001000111011100

       - FUNCTION OUTPUT:          11001001001110110110011000110011

       - Left XOR FUNCTION OUTPUT: 11000100011100101111011111101111

       - Next Round Left 32 Bits:  01100001010010111011011110111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100011100101111011111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001010010111011011110111110

       - Right 32 Bits:            11000100011100101111011111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011000100100011101110111011100100100111001001000010011   [Subkey: 14]
          - Input Half:       11000100011100101111011111101111
          - S-Box Result:     01010111110111101011110111001011   [per every group of 4-bits]
          - Split Into Two:   0101011111011110 [L] 1011110111001011 [R]
          - Swap Halves:      10111101110010110101011111011110
          - Bit Inversion:    01000010001101001010100000100001
          - Compressed Key:   11001000011111101000110110000011   [done by compression P-Box]
          - XOR with Key:     10001010010010100010010110100010

          - FUNCTION OUTPUT:  10001010010010100010010110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001010010111011011110111110

       - FUNCTION OUTPUT:          10001010010010100010010110100010

       - Left XOR FUNCTION OUTPUT: 11101011000000011001001000011100

       - Next Round Left 32 Bits:  11000100011100101111011111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011000000011001001000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100011100101111011111101111

       - Right 32 Bits:            11101011000000011001001000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011101101110001000100010001101101100011011011110110   [Subkey: 13]
          - Input Half:       11101011000000011001001000011100
          - S-Box Result:     11001000111110100011111010100101   [per every group of 4-bits]
          - Split Into Two:   1100100011111010 [L] 0011111010100101 [R]
          - Swap Halves:      00111110101001011100100011111010
          - Bit Inversion:    11000001010110100011011100000101
          - Compressed Key:   01101110000100101110010011101001   [done by compression P-Box]
          - XOR with Key:     10101111010010001101001111101100

          - FUNCTION OUTPUT:  10101111010010001101001111101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100011100101111011111101111

       - FUNCTION OUTPUT:          10101111010010001101001111101100

       - Left XOR FUNCTION OUTPUT: 01101011001110100010010000000011

       - Next Round Left 32 Bits:  11101011000000011001001000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011001110100010010000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011000000011001001000011100

       - Right 32 Bits:            01101011001110100010010000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110001001000111011101110111001001001110010010000100   [Subkey: 12]
          - Input Half:       01101011001110100010010000000011
          - S-Box Result:     00001000000101001110011111110001   [per every group of 4-bits]
          - Split Into Two:   0000100000010100 [L] 1110011111110001 [R]
          - Swap Halves:      11100111111100010000100000010100
          - Bit Inversion:    00011000000011101111011111101011
          - Compressed Key:   00110110110110110110001101101000   [done by compression P-Box]
          - XOR with Key:     00101110110101011001010010000011

          - FUNCTION OUTPUT:  00101110110101011001010010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011000000011001001000011100

       - FUNCTION OUTPUT:          00101110110101011001010010000011

       - Left XOR FUNCTION OUTPUT: 11000101110101000000011010011111

       - Next Round Left 32 Bits:  01101011001110100010010000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101110101000000011010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011001110100010010000000011

       - Right 32 Bits:            11000101110101000000011010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100111011011100010001000100011011011000110110111101   [Subkey: 11]
          - Input Half:       11000101110101000000011010011111
          - S-Box Result:     01011001011001111111000000111011   [per every group of 4-bits]
          - Split Into Two:   0101100101100111 [L] 1111000000111011 [R]
          - Swap Halves:      11110000001110110101100101100111
          - Bit Inversion:    00001111110001001010011010011000
          - Compressed Key:   10010111010010000011100101111110   [done by compression P-Box]
          - XOR with Key:     10011000100011001001111111100110

          - FUNCTION OUTPUT:  10011000100011001001111111100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011001110100010010000000011

       - FUNCTION OUTPUT:          10011000100011001001111111100110

       - Left XOR FUNCTION OUTPUT: 11110011101101101011101111100101

       - Next Round Left 32 Bits:  11000101110101000000011010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011101101101011101111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101110101000000011010011111

       - Right 32 Bits:            11110011101101101011101111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111001100010010001110111011101110010010011100100100001   [Subkey: 10]
          - Input Half:       11110011101101101011101111100101
          - S-Box Result:     10110001100000001000100011001001   [per every group of 4-bits]
          - Split Into Two:   1011000110000000 [L] 1000100011001001 [R]
          - Swap Halves:      10001000110010011011000110000000
          - Bit Inversion:    01110111001101100100111001111111
          - Compressed Key:   11000001001111101101100000010010   [done by compression P-Box]
          - XOR with Key:     10110110000010001001011001101101

          - FUNCTION OUTPUT:  10110110000010001001011001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101110101000000011010011111

       - FUNCTION OUTPUT:          10110110000010001001011001101101

       - Left XOR FUNCTION OUTPUT: 01110011110111001001000011110010

       - Next Round Left 32 Bits:  11110011101101101011101111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011110111001001000011110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011101101101011101111100101

       - Right 32 Bits:            01110011110111001001000011110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011001110110111000100010001000110110110001101101111   [Subkey: 9]
          - Input Half:       01110011110111001001000011110010
          - S-Box Result:     11010001011001010011111110111110   [per every group of 4-bits]
          - Split Into Two:   1101000101100101 [L] 0011111110111110 [R]
          - Swap Halves:      00111111101111101101000101100101
          - Bit Inversion:    11000000010000010010111010011010
          - Compressed Key:   00101101110100100100111010011111   [done by compression P-Box]
          - XOR with Key:     11101101100100110110000000000101

          - FUNCTION OUTPUT:  11101101100100110110000000000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011101101101011101111100101

       - FUNCTION OUTPUT:          11101101100100110110000000000101

       - Left XOR FUNCTION OUTPUT: 00011110001001011101101111100000

       - Next Round Left 32 Bits:  01110011110111001001000011110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110001001011101101111100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011110111001001000011110010

       - Right 32 Bits:            00011110001001011101101111100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001110011000100100011101110111011100100100111001001000   [Subkey: 8]
          - Input Half:       00011110001001011101101111100000
          - S-Box Result:     10101100111010010110100011001111   [per every group of 4-bits]
          - Split Into Two:   1010110011101001 [L] 0110100011001111 [R]
          - Swap Halves:      01101000110011111010110011101001
          - Bit Inversion:    10010111001100000101001100010110
          - Compressed Key:   10110100010010110111011011000100   [done by compression P-Box]
          - XOR with Key:     00100011011110110010010111010010

          - FUNCTION OUTPUT:  00100011011110110010010111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011110111001001000011110010

       - FUNCTION OUTPUT:          00100011011110110010010111010010

       - Left XOR FUNCTION OUTPUT: 01010000101001111011010100100000

       - Next Round Left 32 Bits:  00011110001001011101101111100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000101001111011010100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110001001011101101111100000

       - Right 32 Bits:            01010000101001111011010100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000110011101101110001000100010001101101100011011011   [Subkey: 7]
          - Input Half:       01010000101001111011010100100000
          - S-Box Result:     10011111010011011000100111101111   [per every group of 4-bits]
          - Split Into Two:   1001111101001101 [L] 1000100111101111 [R]
          - Swap Halves:      10001001111011111001111101001101
          - Bit Inversion:    01110110000100000110000010110010
          - Compressed Key:   11000011011110000001011100100111   [done by compression P-Box]
          - XOR with Key:     10110101011010000111011110010101

          - FUNCTION OUTPUT:  10110101011010000111011110010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110001001011101101111100000

       - FUNCTION OUTPUT:          10110101011010000111011110010101

       - Left XOR FUNCTION OUTPUT: 10101011010011011010110001110101

       - Next Round Left 32 Bits:  01010000101001111011010100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101011010011011010110001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000101001111011010100100000

       - Right 32 Bits:            10101011010011011010110001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010011100110001001000111011101110111001001001110010010   [Subkey: 6]
          - Input Half:       10101011010011011010110001110101
          - S-Box Result:     01001000011101100100010111011001   [per every group of 4-bits]
          - Split Into Two:   0100100001110110 [L] 0100010111011001 [R]
          - Swap Halves:      01000101110110010100100001110110
          - Bit Inversion:    10111010001001101011011110001001
          - Compressed Key:   01101001000111101101000110110001   [done by compression P-Box]
          - XOR with Key:     11010011001110000110011000111000

          - FUNCTION OUTPUT:  11010011001110000110011000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000101001111011010100100000

       - FUNCTION OUTPUT:          11010011001110000110011000111000

       - Left XOR FUNCTION OUTPUT: 10000011100111111101001100011000

       - Next Round Left 32 Bits:  10101011010011011010110001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011100111111101001100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101011010011011010110001110101

       - Right 32 Bits:            10000011100111111101001100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110001100111011011100010001000100011011011000110110   [Subkey: 5]
          - Input Half:       10000011100111111101001100011000
          - S-Box Result:     00100001001110110110000110100010   [per every group of 4-bits]
          - Split Into Two:   0010000100111011 [L] 0110000110100010 [R]
          - Swap Halves:      01100001101000100010000100111011
          - Bit Inversion:    10011110010111011101111011000100
          - Compressed Key:   01111100100100100100100111001001   [done by compression P-Box]
          - XOR with Key:     11100010110011111001011100001101

          - FUNCTION OUTPUT:  11100010110011111001011100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101011010011011010110001110101

       - FUNCTION OUTPUT:          11100010110011111001011100001101

       - Left XOR FUNCTION OUTPUT: 01001001100000100011101101111000

       - Next Round Left 32 Bits:  10000011100111111101001100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001100000100011101101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011100111111101001100011000

       - Right 32 Bits:            01001001100000100011101101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000100111001100010010001110111011101110010010011100100   [Subkey: 4]
          - Input Half:       01001001100000100011101101111000
          - S-Box Result:     01110011001011100001100011010010   [per every group of 4-bits]
          - Split Into Two:   0111001100101110 [L] 0001100011010010 [R]
          - Swap Halves:      00011000110100100111001100101110
          - Bit Inversion:    11100111001011011000110011010001
          - Compressed Key:   00010110100010110111110001101000   [done by compression P-Box]
          - XOR with Key:     11110001101001101111000010111001

          - FUNCTION OUTPUT:  11110001101001101111000010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011100111111101001100011000

       - FUNCTION OUTPUT:          11110001101001101111000010111001

       - Left XOR FUNCTION OUTPUT: 01110010001110010010001110100001

       - Next Round Left 32 Bits:  01001001100000100011101101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010001110010010001110100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001100000100011101101111000

       - Right 32 Bits:            01110010001110010010001110100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111101100011001110110111000100010001000110110110001101   [Subkey: 3]
          - Input Half:       01110010001110010010001110100001
          - S-Box Result:     11011110000100111110000101001010   [per every group of 4-bits]
          - Split Into Two:   1101111000010011 [L] 1110000101001010 [R]
          - Swap Halves:      11100001010010101101111000010011
          - Bit Inversion:    00011110101101010010000111101100
          - Compressed Key:   11010011111011000001001001111110   [done by compression P-Box]
          - XOR with Key:     11001101010110010011001110010010

          - FUNCTION OUTPUT:  11001101010110010011001110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001100000100011101101111000

       - FUNCTION OUTPUT:          11001101010110010011001110010010

       - Left XOR FUNCTION OUTPUT: 10000100110110110000100011101010

       - Next Round Left 32 Bits:  01110010001110010010001110100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100110110110000100011101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110010001110010010001110100001

       - Right 32 Bits:            10000100110110110000100011101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100001001110011000100100011101110111011100100100111001   [Subkey: 2]
          - Input Half:       10000100110110110000100011101010
          - S-Box Result:     00100111011010001111001011000100   [per every group of 4-bits]
          - Split Into Two:   0010011101101000 [L] 1111001011000100 [R]
          - Swap Halves:      11110010110001000010011101101000
          - Bit Inversion:    00001101001110111101100010010111
          - Compressed Key:   00001101001000101101101100010110   [done by compression P-Box]
          - XOR with Key:     00000000000110010000001110000001

          - FUNCTION OUTPUT:  00000000000110010000001110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110010001110010010001110100001

       - FUNCTION OUTPUT:          00000000000110010000001110000001

       - Left XOR FUNCTION OUTPUT: 01110010001000000010000000100000

       - Next Round Left 32 Bits:  10000100110110110000100011101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110010001000000010000000100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100110110110000100011101010

       - Right 32 Bits:            01110010001000000010000000100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101111011000110011101101110001000100010001101101100011   [Subkey: 1]
          - Input Half:       01110010001000000010000000100000
          - S-Box Result:     11011110111011111110111111101111   [per every group of 4-bits]
          - Split Into Two:   1101111011101111 [L] 1110111111101111 [R]
          - Swap Halves:      11101111111011111101111011101111
          - Bit Inversion:    00010000000100000010000100010000
          - Compressed Key:   10110100101110110100100010010011   [done by compression P-Box]
          - XOR with Key:     10100100101010110110100110000011

          - FUNCTION OUTPUT:  10100100101010110110100110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100110110110000100011101010

       - FUNCTION OUTPUT:          10100100101010110110100110000011

       - Left XOR FUNCTION OUTPUT: 00100000011100000110000101101001

       - Next Round Left 32 Bits:  01110010001000000010000000100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000011100000110000101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010000001110000011000010110100101110010001000000010000000100000

 > Processed Block:     0010000001110000011000010110100101110010001000000010000000100000


FINAL PROCESSED DATA BLOCKS: 0100100001100101011011000110110001101111001000000111001101100101,0111001001110110011001010111001000101100001000000100100100100000,0111011101101111011101010110110001100100001000000110110001101001,0110101101100101001000000110000100100000011011100110010101110111,0010000001010010010100110100000100100000011010110110010101111001,0010000001110000011000010110100101110010001000000010000000100000,

BLOCKS IN ASCII:             Hello server, I would like a new RSA key pair   

