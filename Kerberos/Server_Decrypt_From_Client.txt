Triple DES Capture

168-bit key: newClientServerKey123

3 x 56-bit DES keys: newClie, ntServe, rKey123

Initialization Vector: 12345678

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: rKey123
In Binary:  01110010010010110110010101111001001100010011001000110011

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00011011011010010011010100001101100111011001101110011001
Subkey 2  : 11001001001011011001010111100100110001001100100011001101
Subkey 3  : 01101101101001001101010000110110011101100110111001100100
Subkey 4  : 00100100101101100101011110010011000100110010001100110111
Subkey 5  : 10110110100100110101000011011001110110011011100110010001
Subkey 6  : 10010010110110010101111001001100010011001000110011011100
Subkey 7  : 11011010010011010100001101100111011001101110011001000110
Subkey 8  : 01001011011001010111100100110001001100100011001101110010
Subkey 9  : 01101001001101010000110110011101100110111001100100011011
Subkey 10 : 00101101100101011110010011000100110010001100110111001001
Subkey 11 : 10100100110101000011011001110110011011100110010001101101
Subkey 12 : 10110110010101111001001100010011001000110011011100100100
Subkey 13 : 10010011010100001101100111011001101110011001000110110110
Subkey 14 : 11011001010111100100110001001100100011001101110010010010
Subkey 15 : 01001101010000110110011101100110111001100100011011011010
Subkey 16 : 01100101011110010011000100110010001100110111001001001011

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : þk?îè??y?¥ ?9¹<N+Õ³è¿òÓ-ÓÝQ»wZQ?)¨Å7?¡®BÆ

Data padded with spaces : þk?îè??y?¥ ?9¹<N+Õ³è¿òÓ-ÓÝQ»wZQ?)¨Å7?¡®BÆ[Padded with '0' spaces]

Data in ASCII           : 22,254,31,107,147,21,238,232,141,140,121,137,165,160,131,17,57,185,60,78,43,213,6,179,232,191,242,211,45,211,221,81,187,119,90,81,143,26,41,168,197,55,133,161,18,174,66,198,

Data in Binary          : 00010110,11111110,00011111,01101011,10010011,00010101,11101110,11101000,10001101,10001100,01111001,10001001,10100101,10100000,10000011,00010001,00111001,10111001,00111100,01001110,00101011,11010101,00000110,10110011,11101000,10111111,11110010,11010011,00101101,11010011,11011101,01010001,10111011,01110111,01011010,01010001,10001111,00011010,00101001,10101000,11000101,00110111,10000101,10100001,00010010,10101110,01000010,11000110,

Data in 64-bit Blocks   : 0001011011111110000111110110101110010011000101011110111011101000,1000110110001100011110011000100110100101101000001000001100010001,0011100110111001001111000100111000101011110101010000011010110011,1110100010111111111100101101001100101101110100111101110101010001,1011101101110111010110100101000110001111000110100010100110101000,1100010100110111100001011010000100010010101011100100001011000110,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011000100110010001100110011010000110101001101100011011100111000)

Ciphertext Block 1:                                      0001011011111110000111110110101110010011000101011110111011101000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110111111100001111101101011

       - Right 32 Bits:            10010011000101011110111011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011110010011000100110010001100110111001001001011   [Subkey: 16]
          - Input Half:       10010011000101011110111011101000
          - S-Box Result:     00110001101010011100110011000010   [per every group of 4-bits]
          - Split Into Two:   0011000110101001 [L] 1100110011000010 [R]
          - Swap Halves:      11001100110000100011000110101001
          - Bit Inversion:    00110011001111011100111001010110
          - Compressed Key:   00011101100100110010111010000111   [done by compression P-Box]
          - XOR with Key:     00101110101011101110000011010001

          - FUNCTION OUTPUT:  00101110101011101110000011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110111111100001111101101011

       - FUNCTION OUTPUT:          00101110101011101110000011010001

       - Left XOR FUNCTION OUTPUT: 00111000010100001111111110111010

       - Next Round Left 32 Bits:  10010011000101011110111011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000010100001111111110111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011000101011110111011101000

       - Right 32 Bits:            00111000010100001111111110111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010000110110011101100110111001100100011011011010   [Subkey: 15]
          - Input Half:       00111000010100001111111110111010
          - S-Box Result:     00010010100111111011101110000100   [per every group of 4-bits]
          - Split Into Two:   0001001010011111 [L] 1011101110000100 [R]
          - Swap Halves:      10111011100001000001001010011111
          - Bit Inversion:    01000100011110111110110101100000
          - Compressed Key:   10010000110010011011011011100101   [done by compression P-Box]
          - XOR with Key:     11010100101100100101101110000101

          - FUNCTION OUTPUT:  11010100101100100101101110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011000101011110111011101000

       - FUNCTION OUTPUT:          11010100101100100101101110000101

       - Left XOR FUNCTION OUTPUT: 01000111101001111011010101101101

       - Next Round Left 32 Bits:  00111000010100001111111110111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111101001111011010101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000010100001111111110111010

       - Right 32 Bits:            01000111101001111011010101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010111100100110001001100100011001101110010010010   [Subkey: 14]
          - Input Half:       01000111101001111011010101101101
          - S-Box Result:     01111101010011011000100100000110   [per every group of 4-bits]
          - Split Into Two:   0111110101001101 [L] 1000100100000110 [R]
          - Swap Halves:      10001001000001100111110101001101
          - Bit Inversion:    01110110111110011000001010110010
          - Compressed Key:   11001011011010001000001101100001   [done by compression P-Box]
          - XOR with Key:     10111101100100010000000111010011

          - FUNCTION OUTPUT:  10111101100100010000000111010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000010100001111111110111010

       - FUNCTION OUTPUT:          10111101100100010000000111010011

       - Left XOR FUNCTION OUTPUT: 10000101110000011111111001101001

       - Next Round Left 32 Bits:  01000111101001111011010101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101110000011111111001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111101001111011010101101101

       - Right 32 Bits:            10000101110000011111111001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010011010100001101100111011001101110011001000110110110   [Subkey: 13]
          - Input Half:       10000101110000011111111001101001
          - S-Box Result:     00101001010110101011110000000011   [per every group of 4-bits]
          - Split Into Two:   0010100101011010 [L] 1011110000000011 [R]
          - Swap Halves:      10111100000000110010100101011010
          - Bit Inversion:    01000011111111001101011010100101
          - Compressed Key:   01101000011111101110100100111001   [done by compression P-Box]
          - XOR with Key:     00101011100000100011111110011100

          - FUNCTION OUTPUT:  00101011100000100011111110011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111101001111011010101101101

       - FUNCTION OUTPUT:          00101011100000100011111110011100

       - Left XOR FUNCTION OUTPUT: 01101100001001011000101011110001

       - Next Round Left 32 Bits:  10000101110000011111111001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100001001011000101011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101110000011111111001101001

       - Right 32 Bits:            01101100001001011000101011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110010101111001001100010011001000110011011100100100   [Subkey: 12]
          - Input Half:       01101100001001011000101011110001
          - S-Box Result:     00000101111010010010010010111010   [per every group of 4-bits]
          - Split Into Two:   0000010111101001 [L] 0010010010111010 [R]
          - Swap Halves:      00100100101110100000010111101001
          - Bit Inversion:    11011011010001011111101000010110
          - Compressed Key:   01111010000100100110110011011000   [done by compression P-Box]
          - XOR with Key:     10100001010101111001011011001110

          - FUNCTION OUTPUT:  10100001010101111001011011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101110000011111111001101001

       - FUNCTION OUTPUT:          10100001010101111001011011001110

       - Left XOR FUNCTION OUTPUT: 00100100100101100110100010100111

       - Next Round Left 32 Bits:  01101100001001011000101011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100100101100110100010100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100001001011000101011110001

       - Right 32 Bits:            00100100100101100110100010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100110101000011011001110110011011100110010001101101   [Subkey: 11]
          - Input Half:       00100100100101100110100010100111
          - S-Box Result:     11100111001100000000001001001101   [per every group of 4-bits]
          - Split Into Two:   1110011100110000 [L] 0000001001001101 [R]
          - Swap Halves:      00000010010011011110011100110000
          - Bit Inversion:    11111101101100100001100011001111
          - Compressed Key:   00011010100110110011011001001110   [done by compression P-Box]
          - XOR with Key:     11100111001010010010111010000001

          - FUNCTION OUTPUT:  11100111001010010010111010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100001001011000101011110001

       - FUNCTION OUTPUT:          11100111001010010010111010000001

       - Left XOR FUNCTION OUTPUT: 10001011000011001010010001110000

       - Next Round Left 32 Bits:  00100100100101100110100010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011000011001010010001110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100100101100110100010100111

       - Right 32 Bits:            10001011000011001010010001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101100101011110010011000100110010001100110111001001   [Subkey: 10]
          - Input Half:       10001011000011001010010001110000
          - S-Box Result:     00101000111101010100011111011111   [per every group of 4-bits]
          - Split Into Two:   0010100011110101 [L] 0100011111011111 [R]
          - Swap Halves:      01000111110111110010100011110101
          - Bit Inversion:    10111000001000001101011100001010
          - Compressed Key:   10011010110011001001001101110110   [done by compression P-Box]
          - XOR with Key:     00100010111011000100010001111100

          - FUNCTION OUTPUT:  00100010111011000100010001111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100100101100110100010100111

       - FUNCTION OUTPUT:          00100010111011000100010001111100

       - Left XOR FUNCTION OUTPUT: 00000110011110100010110011011011

       - Next Round Left 32 Bits:  10001011000011001010010001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110011110100010110011011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011000011001010010001110000

       - Right 32 Bits:            00000110011110100010110011011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001001101010000110110011101100110111001100100011011   [Subkey: 9]
          - Input Half:       00000110011110100010110011011011
          - S-Box Result:     11110000110101001110010101101000   [per every group of 4-bits]
          - Split Into Two:   1111000011010100 [L] 1110010101101000 [R]
          - Swap Halves:      11100101011010001111000011010100
          - Bit Inversion:    00011010100101110000111100101011
          - Compressed Key:   10001110001001101100110100010111   [done by compression P-Box]
          - XOR with Key:     10010100101100011100001000111100

          - FUNCTION OUTPUT:  10010100101100011100001000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011000011001010010001110000

       - FUNCTION OUTPUT:          10010100101100011100001000111100

       - Left XOR FUNCTION OUTPUT: 00011111101111010110011001001100

       - Next Round Left 32 Bits:  00000110011110100010110011011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011111101111010110011001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110011110100010110011011011

       - Right 32 Bits:            00011111101111010110011001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011011001010111100100110001001100100011001101110010   [Subkey: 8]
          - Input Half:       00011111101111010110011001001100
          - S-Box Result:     10101011100001100000000001110101   [per every group of 4-bits]
          - Split Into Two:   1010101110000110 [L] 0000000001110101 [R]
          - Swap Halves:      00000000011101011010101110000110
          - Bit Inversion:    11111111100010100101010001111001
          - Compressed Key:   10100110111100110110010010010001   [done by compression P-Box]
          - XOR with Key:     01011001011110010011000011101000

          - FUNCTION OUTPUT:  01011001011110010011000011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110011110100010110011011011

       - FUNCTION OUTPUT:          01011001011110010011000011101000

       - Left XOR FUNCTION OUTPUT: 01011111000000110001110000110011

       - Next Round Left 32 Bits:  00011111101111010110011001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111000000110001110000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011111101111010110011001001100

       - Right 32 Bits:            01011111000000110001110000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010011010100001101100111011001101110011001000110   [Subkey: 7]
          - Input Half:       01011111000000110001110000110011
          - S-Box Result:     10011011111100011010010100010001   [per every group of 4-bits]
          - Split Into Two:   1001101111110001 [L] 1010010100010001 [R]
          - Swap Halves:      10100101000100011001101111110001
          - Bit Inversion:    01011010111011100110010000001110
          - Compressed Key:   11100011010010010111011111001001   [done by compression P-Box]
          - XOR with Key:     10111001101001110001001111000111

          - FUNCTION OUTPUT:  10111001101001110001001111000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011111101111010110011001001100

       - FUNCTION OUTPUT:          10111001101001110001001111000111

       - Left XOR FUNCTION OUTPUT: 10100110000110100111010110001011

       - Next Round Left 32 Bits:  01011111000000110001110000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100110000110100111010110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111000000110001110000110011

       - Right 32 Bits:            10100110000110100111010110001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110110010101111001001100010011001000110011011100   [Subkey: 6]
          - Input Half:       10100110000110100111010110001011
          - S-Box Result:     01000000101001001101100100101000   [per every group of 4-bits]
          - Split Into Two:   0100000010100100 [L] 1101100100101000 [R]
          - Swap Halves:      11011001001010000100000010100100
          - Bit Inversion:    00100110110101111011111101011011
          - Compressed Key:   01101001011110000001000101101100   [done by compression P-Box]
          - XOR with Key:     01001111101011111010111000110111

          - FUNCTION OUTPUT:  01001111101011111010111000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111000000110001110000110011

       - FUNCTION OUTPUT:          01001111101011111010111000110111

       - Left XOR FUNCTION OUTPUT: 00010000101011001011001000000100

       - Next Round Left 32 Bits:  10100110000110100111010110001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000101011001011001000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100110000110100111010110001011

       - Right 32 Bits:            00010000101011001011001000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110100100110101000011011001110110011011100110010001   [Subkey: 5]
          - Input Half:       00010000101011001011001000000100
          - S-Box Result:     10101111010001011000111011110111   [per every group of 4-bits]
          - Split Into Two:   1010111101000101 [L] 1000111011110111 [R]
          - Swap Halves:      10001110111101111010111101000101
          - Bit Inversion:    01110001000010000101000010111010
          - Compressed Key:   01111000010111101101100100110010   [done by compression P-Box]
          - XOR with Key:     00001001010101101000100110001000

          - FUNCTION OUTPUT:  00001001010101101000100110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100110000110100111010110001011

       - FUNCTION OUTPUT:          00001001010101101000100110001000

       - Left XOR FUNCTION OUTPUT: 10101111010011001111110000000011

       - Next Round Left 32 Bits:  00010000101011001011001000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111010011001111110000000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000101011001011001000000100

       - Right 32 Bits:            10101111010011001111110000000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101100101011110010011000100110010001100110111   [Subkey: 4]
          - Input Half:       10101111010011001111110000000011
          - S-Box Result:     01001011011101011011010111110001   [per every group of 4-bits]
          - Split Into Two:   0100101101110101 [L] 1011010111110001 [R]
          - Swap Halves:      10110101111100010100101101110101
          - Bit Inversion:    01001010000011101011010010001010
          - Compressed Key:   00011110010101100100110010011011   [done by compression P-Box]
          - XOR with Key:     01010100010110001111100000010001

          - FUNCTION OUTPUT:  01010100010110001111100000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000101011001011001000000100

       - FUNCTION OUTPUT:          01010100010110001111100000010001

       - Left XOR FUNCTION OUTPUT: 01000100111101000100101000010101

       - Next Round Left 32 Bits:  10101111010011001111110000000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100111101000100101000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111010011001111110000000011

       - Right 32 Bits:            01000100111101000100101000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101101001001101010000110110011101100110111001100100   [Subkey: 3]
          - Input Half:       01000100111101000100101000010101
          - S-Box Result:     01110111101101110111010010101001   [per every group of 4-bits]
          - Split Into Two:   0111011110110111 [L] 0111010010101001 [R]
          - Swap Halves:      01110100101010010111011110110111
          - Bit Inversion:    10001011010101101000100001001000
          - Compressed Key:   10010110010100110011011011001000   [done by compression P-Box]
          - XOR with Key:     00011101000001011011111010000000

          - FUNCTION OUTPUT:  00011101000001011011111010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111010011001111110000000011

       - FUNCTION OUTPUT:          00011101000001011011111010000000

       - Left XOR FUNCTION OUTPUT: 10110010010010010100001010000011

       - Next Round Left 32 Bits:  01000100111101000100101000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010010010010100001010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100111101000100101000010101

       - Right 32 Bits:            10110010010010010100001010000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001001011011001010111100100110001001100100011001101   [Subkey: 2]
          - Input Half:       10110010010010010100001010000011
          - S-Box Result:     10001110011100110111111000100001   [per every group of 4-bits]
          - Split Into Two:   1000111001110011 [L] 0111111000100001 [R]
          - Swap Halves:      01111110001000011000111001110011
          - Bit Inversion:    10000001110111100111000110001100
          - Compressed Key:   10000111000111011001001100101110   [done by compression P-Box]
          - XOR with Key:     00000110110000111110001010100010

          - FUNCTION OUTPUT:  00000110110000111110001010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100111101000100101000010101

       - FUNCTION OUTPUT:          00000110110000111110001010100010

       - Left XOR FUNCTION OUTPUT: 01000010001101111010100010110111

       - Next Round Left 32 Bits:  10110010010010010100001010000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010001101111010100010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010010010010100001010000011

       - Right 32 Bits:            01000010001101111010100010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011011010010011010100001101100111011001101110011001   [Subkey: 1]
          - Input Half:       01000010001101111010100010110111
          - S-Box Result:     01111110000111010100001010001101   [per every group of 4-bits]
          - Split Into Two:   0111111000011101 [L] 0100001010001101 [R]
          - Swap Halves:      01000010100011010111111000011101
          - Bit Inversion:    10111101011100101000000111100010
          - Compressed Key:   11100101100100001100100110110110   [done by compression P-Box]
          - XOR with Key:     01011000111000100100100001010100

          - FUNCTION OUTPUT:  01011000111000100100100001010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010010010010100001010000011

       - FUNCTION OUTPUT:          01011000111000100100100001010100

       - Left XOR FUNCTION OUTPUT: 11101010101010110000101011010111

       - Next Round Left 32 Bits:  01000010001101111010100010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010101010110000101011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110101010101011000010101101011101000010001101111010100010110111

 > Decrypted Block:     1110101010101011000010101101011101000010001101111010100010110111


!!!CBC: Previous Ciphertext:                             0011000100110010001100110011010000110101001101100011011100111000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101101110011001001110011110001101110111000000011001111110001111

 > Final Processed Block:                                1101101110011001001110011110001101110111000000011001111110001111



Ciphertext Block 2:                                      1000110110001100011110011000100110100101101000001000001100010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101100011000111100110001001

       - Right 32 Bits:            10100101101000001000001100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011110010011000100110010001100110111001001001011   [Subkey: 16]
          - Input Half:       10100101101000001000001100010001
          - S-Box Result:     01001001010011110010000110101010   [per every group of 4-bits]
          - Split Into Two:   0100100101001111 [L] 0010000110101010 [R]
          - Swap Halves:      00100001101010100100100101001111
          - Bit Inversion:    11011110010101011011011010110000
          - Compressed Key:   00011101100100110010111010000111   [done by compression P-Box]
          - XOR with Key:     11000011110001101001100000110111

          - FUNCTION OUTPUT:  11000011110001101001100000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101100011000111100110001001

       - FUNCTION OUTPUT:          11000011110001101001100000110111

       - Left XOR FUNCTION OUTPUT: 01001110010010101110000110111110

       - Next Round Left 32 Bits:  10100101101000001000001100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110010010101110000110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101101000001000001100010001

       - Right 32 Bits:            01001110010010101110000110111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010000110110011101100110111001100100011011011010   [Subkey: 15]
          - Input Half:       01001110010010101110000110111110
          - S-Box Result:     01111100011101001100101010001100   [per every group of 4-bits]
          - Split Into Two:   0111110001110100 [L] 1100101010001100 [R]
          - Swap Halves:      11001010100011000111110001110100
          - Bit Inversion:    00110101011100111000001110001011
          - Compressed Key:   10010000110010011011011011100101   [done by compression P-Box]
          - XOR with Key:     10100101101110100011010101101110

          - FUNCTION OUTPUT:  10100101101110100011010101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101101000001000001100010001

       - FUNCTION OUTPUT:          10100101101110100011010101101110

       - Left XOR FUNCTION OUTPUT: 00000000000110101011011001111111

       - Next Round Left 32 Bits:  01001110010010101110000110111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000000110101011011001111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110010010101110000110111110

       - Right 32 Bits:            00000000000110101011011001111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010111100100110001001100100011001101110010010010   [Subkey: 14]
          - Input Half:       00000000000110101011011001111111
          - S-Box Result:     11111111101001001000000011011011   [per every group of 4-bits]
          - Split Into Two:   1111111110100100 [L] 1000000011011011 [R]
          - Swap Halves:      10000000110110111111111110100100
          - Bit Inversion:    01111111001001000000000001011011
          - Compressed Key:   11001011011010001000001101100001   [done by compression P-Box]
          - XOR with Key:     10110100010011001000001100111010

          - FUNCTION OUTPUT:  10110100010011001000001100111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110010010101110000110111110

       - FUNCTION OUTPUT:          10110100010011001000001100111010

       - Left XOR FUNCTION OUTPUT: 11111010000001100110001010000100

       - Next Round Left 32 Bits:  00000000000110101011011001111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010000001100110001010000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000000110101011011001111111

       - Right 32 Bits:            11111010000001100110001010000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010011010100001101100111011001101110011001000110110110   [Subkey: 13]
          - Input Half:       11111010000001100110001010000100
          - S-Box Result:     10110100111100000000111000100111   [per every group of 4-bits]
          - Split Into Two:   1011010011110000 [L] 0000111000100111 [R]
          - Swap Halves:      00001110001001111011010011110000
          - Bit Inversion:    11110001110110000100101100001111
          - Compressed Key:   01101000011111101110100100111001   [done by compression P-Box]
          - XOR with Key:     10011001101001101010001000110110

          - FUNCTION OUTPUT:  10011001101001101010001000110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000000110101011011001111111

       - FUNCTION OUTPUT:          10011001101001101010001000110110

       - Left XOR FUNCTION OUTPUT: 10011001101111000001010001001001

       - Next Round Left 32 Bits:  11111010000001100110001010000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011001101111000001010001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010000001100110001010000100

       - Right 32 Bits:            10011001101111000001010001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110010101111001001100010011001000110011011100100100   [Subkey: 12]
          - Input Half:       10011001101111000001010001001001
          - S-Box Result:     00110011100001011010011101110011   [per every group of 4-bits]
          - Split Into Two:   0011001110000101 [L] 1010011101110011 [R]
          - Swap Halves:      10100111011100110011001110000101
          - Bit Inversion:    01011000100011001100110001111010
          - Compressed Key:   01111010000100100110110011011000   [done by compression P-Box]
          - XOR with Key:     00100010100111101010000010100010

          - FUNCTION OUTPUT:  00100010100111101010000010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010000001100110001010000100

       - FUNCTION OUTPUT:          00100010100111101010000010100010

       - Left XOR FUNCTION OUTPUT: 11011000100110001100001000100110

       - Next Round Left 32 Bits:  10011001101111000001010001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000100110001100001000100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011001101111000001010001001001

       - Right 32 Bits:            11011000100110001100001000100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100110101000011011001110110011011100110010001101101   [Subkey: 11]
          - Input Half:       11011000100110001100001000100110
          - S-Box Result:     01100010001100100101111011100000   [per every group of 4-bits]
          - Split Into Two:   0110001000110010 [L] 0101111011100000 [R]
          - Swap Halves:      01011110111000000110001000110010
          - Bit Inversion:    10100001000111111001110111001101
          - Compressed Key:   00011010100110110011011001001110   [done by compression P-Box]
          - XOR with Key:     10111011100001001010101110000011

          - FUNCTION OUTPUT:  10111011100001001010101110000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011001101111000001010001001001

       - FUNCTION OUTPUT:          10111011100001001010101110000011

       - Left XOR FUNCTION OUTPUT: 00100010001110001011111111001010

       - Next Round Left 32 Bits:  11011000100110001100001000100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010001110001011111111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000100110001100001000100110

       - Right 32 Bits:            00100010001110001011111111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101100101011110010011000100110010001100110111001001   [Subkey: 10]
          - Input Half:       00100010001110001011111111001010
          - S-Box Result:     11101110000100101000101101010100   [per every group of 4-bits]
          - Split Into Two:   1110111000010010 [L] 1000101101010100 [R]
          - Swap Halves:      10001011010101001110111000010010
          - Bit Inversion:    01110100101010110001000111101101
          - Compressed Key:   10011010110011001001001101110110   [done by compression P-Box]
          - XOR with Key:     11101110011001111000001010011011

          - FUNCTION OUTPUT:  11101110011001111000001010011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000100110001100001000100110

       - FUNCTION OUTPUT:          11101110011001111000001010011011

       - Left XOR FUNCTION OUTPUT: 00110110111111110100000010111101

       - Next Round Left 32 Bits:  00100010001110001011111111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110111111110100000010111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010001110001011111111001010

       - Right 32 Bits:            00110110111111110100000010111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001001101010000110110011101100110111001100100011011   [Subkey: 9]
          - Input Half:       00110110111111110100000010111101
          - S-Box Result:     00010000101110110111111110000110   [per every group of 4-bits]
          - Split Into Two:   0001000010111011 [L] 0111111110000110 [R]
          - Swap Halves:      01111111100001100001000010111011
          - Bit Inversion:    10000000011110011110111101000100
          - Compressed Key:   10001110001001101100110100010111   [done by compression P-Box]
          - XOR with Key:     00001110010111110010001001010011

          - FUNCTION OUTPUT:  00001110010111110010001001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010001110001011111111001010

       - FUNCTION OUTPUT:          00001110010111110010001001010011

       - Left XOR FUNCTION OUTPUT: 00101100011001111001110110011001

       - Next Round Left 32 Bits:  00110110111111110100000010111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100011001111001110110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110111111110100000010111101

       - Right 32 Bits:            00101100011001111001110110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011011001010111100100110001001100100011001101110010   [Subkey: 8]
          - Input Half:       00101100011001111001110110011001
          - S-Box Result:     11100101000011010011011000110011   [per every group of 4-bits]
          - Split Into Two:   1110010100001101 [L] 0011011000110011 [R]
          - Swap Halves:      00110110001100111110010100001101
          - Bit Inversion:    11001001110011000001101011110010
          - Compressed Key:   10100110111100110110010010010001   [done by compression P-Box]
          - XOR with Key:     01101111001111110111111001100011

          - FUNCTION OUTPUT:  01101111001111110111111001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110111111110100000010111101

       - FUNCTION OUTPUT:          01101111001111110111111001100011

       - Left XOR FUNCTION OUTPUT: 01011001110000000011111011011110

       - Next Round Left 32 Bits:  00101100011001111001110110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001110000000011111011011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100011001111001110110011001

       - Right 32 Bits:            01011001110000000011111011011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010011010100001101100111011001101110011001000110   [Subkey: 7]
          - Input Half:       01011001110000000011111011011110
          - S-Box Result:     10010011010111110001110001101100   [per every group of 4-bits]
          - Split Into Two:   1001001101011111 [L] 0001110001101100 [R]
          - Swap Halves:      00011100011011001001001101011111
          - Bit Inversion:    11100011100100110110110010100000
          - Compressed Key:   11100011010010010111011111001001   [done by compression P-Box]
          - XOR with Key:     00000000110110100001101101101001

          - FUNCTION OUTPUT:  00000000110110100001101101101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100011001111001110110011001

       - FUNCTION OUTPUT:          00000000110110100001101101101001

       - Left XOR FUNCTION OUTPUT: 00101100101111011000011011110000

       - Next Round Left 32 Bits:  01011001110000000011111011011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100101111011000011011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001110000000011111011011110

       - Right 32 Bits:            00101100101111011000011011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110110010101111001001100010011001000110011011100   [Subkey: 6]
          - Input Half:       00101100101111011000011011110000
          - S-Box Result:     11100101100001100010000010111111   [per every group of 4-bits]
          - Split Into Two:   1110010110000110 [L] 0010000010111111 [R]
          - Swap Halves:      00100000101111111110010110000110
          - Bit Inversion:    11011111010000000001101001111001
          - Compressed Key:   01101001011110000001000101101100   [done by compression P-Box]
          - XOR with Key:     10110110001110000000101100010101

          - FUNCTION OUTPUT:  10110110001110000000101100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001110000000011111011011110

       - FUNCTION OUTPUT:          10110110001110000000101100010101

       - Left XOR FUNCTION OUTPUT: 11101111111110000011010111001011

       - Next Round Left 32 Bits:  00101100101111011000011011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111111110000011010111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100101111011000011011110000

       - Right 32 Bits:            11101111111110000011010111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110100100110101000011011001110110011011100110010001   [Subkey: 5]
          - Input Half:       11101111111110000011010111001011
          - S-Box Result:     11001011101100100001100101011000   [per every group of 4-bits]
          - Split Into Two:   1100101110110010 [L] 0001100101011000 [R]
          - Swap Halves:      00011001010110001100101110110010
          - Bit Inversion:    11100110101001110011010001001101
          - Compressed Key:   01111000010111101101100100110010   [done by compression P-Box]
          - XOR with Key:     10011110111110011110110101111111

          - FUNCTION OUTPUT:  10011110111110011110110101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100101111011000011011110000

       - FUNCTION OUTPUT:          10011110111110011110110101111111

       - Left XOR FUNCTION OUTPUT: 10110010010001000110101110001111

       - Next Round Left 32 Bits:  11101111111110000011010111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010010001000110101110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111111110000011010111001011

       - Right 32 Bits:            10110010010001000110101110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101100101011110010011000100110010001100110111   [Subkey: 4]
          - Input Half:       10110010010001000110101110001111
          - S-Box Result:     10001110011101110000100000101011   [per every group of 4-bits]
          - Split Into Two:   1000111001110111 [L] 0000100000101011 [R]
          - Swap Halves:      00001000001010111000111001110111
          - Bit Inversion:    11110111110101000111000110001000
          - Compressed Key:   00011110010101100100110010011011   [done by compression P-Box]
          - XOR with Key:     11101001100000100011110100010011

          - FUNCTION OUTPUT:  11101001100000100011110100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111111110000011010111001011

       - FUNCTION OUTPUT:          11101001100000100011110100010011

       - Left XOR FUNCTION OUTPUT: 00000110011110100000100011011000

       - Next Round Left 32 Bits:  10110010010001000110101110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110011110100000100011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010010001000110101110001111

       - Right 32 Bits:            00000110011110100000100011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101101001001101010000110110011101100110111001100100   [Subkey: 3]
          - Input Half:       00000110011110100000100011011000
          - S-Box Result:     11110000110101001111001001100010   [per every group of 4-bits]
          - Split Into Two:   1111000011010100 [L] 1111001001100010 [R]
          - Swap Halves:      11110010011000101111000011010100
          - Bit Inversion:    00001101100111010000111100101011
          - Compressed Key:   10010110010100110011011011001000   [done by compression P-Box]
          - XOR with Key:     10011011110011100011100111100011

          - FUNCTION OUTPUT:  10011011110011100011100111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010010001000110101110001111

       - FUNCTION OUTPUT:          10011011110011100011100111100011

       - Left XOR FUNCTION OUTPUT: 00101001100010100101001001101100

       - Next Round Left 32 Bits:  00000110011110100000100011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001100010100101001001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110011110100000100011011000

       - Right 32 Bits:            00101001100010100101001001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001001011011001010111100100110001001100100011001101   [Subkey: 2]
          - Input Half:       00101001100010100101001001101100
          - S-Box Result:     11100011001001001001111000000101   [per every group of 4-bits]
          - Split Into Two:   1110001100100100 [L] 1001111000000101 [R]
          - Swap Halves:      10011110000001011110001100100100
          - Bit Inversion:    01100001111110100001110011011011
          - Compressed Key:   10000111000111011001001100101110   [done by compression P-Box]
          - XOR with Key:     11100110111001111000111111110101

          - FUNCTION OUTPUT:  11100110111001111000111111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110011110100000100011011000

       - FUNCTION OUTPUT:          11100110111001111000111111110101

       - Left XOR FUNCTION OUTPUT: 11100000100111011000011100101101

       - Next Round Left 32 Bits:  00101001100010100101001001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000100111011000011100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001100010100101001001101100

       - Right 32 Bits:            11100000100111011000011100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011011010010011010100001101100111011001101110011001   [Subkey: 1]
          - Input Half:       11100000100111011000011100101101
          - S-Box Result:     11001111001101100010110111100110   [per every group of 4-bits]
          - Split Into Two:   1100111100110110 [L] 0010110111100110 [R]
          - Swap Halves:      00101101111001101100111100110110
          - Bit Inversion:    11010010000110010011000011001001
          - Compressed Key:   11100101100100001100100110110110   [done by compression P-Box]
          - XOR with Key:     00110111100010011111100101111111

          - FUNCTION OUTPUT:  00110111100010011111100101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001100010100101001001101100

       - FUNCTION OUTPUT:          00110111100010011111100101111111

       - Left XOR FUNCTION OUTPUT: 00011110000000111010101100010011

       - Next Round Left 32 Bits:  11100000100111011000011100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110000000111010101100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001111000000011101010110001001111100000100111011000011100101101

 > Decrypted Block:     0001111000000011101010110001001111100000100111011000011100101101


!!!CBC: Previous Ciphertext:                             0001011011111110000111110110101110010011000101011110111011101000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0000100011111101101101000111100001110011100010000110100111000101

 > Final Processed Block:                                0000100011111101101101000111100001110011100010000110100111000101



Ciphertext Block 3:                                      0011100110111001001111000100111000101011110101010000011010110011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001101110010011110001001110

       - Right 32 Bits:            00101011110101010000011010110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011110010011000100110010001100110111001001001011   [Subkey: 16]
          - Input Half:       00101011110101010000011010110011
          - S-Box Result:     11101000011010011111000010000001   [per every group of 4-bits]
          - Split Into Two:   1110100001101001 [L] 1111000010000001 [R]
          - Swap Halves:      11110000100000011110100001101001
          - Bit Inversion:    00001111011111100001011110010110
          - Compressed Key:   00011101100100110010111010000111   [done by compression P-Box]
          - XOR with Key:     00010010111011010011100100010001

          - FUNCTION OUTPUT:  00010010111011010011100100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001101110010011110001001110

       - FUNCTION OUTPUT:          00010010111011010011100100010001

       - Left XOR FUNCTION OUTPUT: 00101011010101000000010101011111

       - Next Round Left 32 Bits:  00101011110101010000011010110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011010101000000010101011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011110101010000011010110011

       - Right 32 Bits:            00101011010101000000010101011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010000110110011101100110111001100100011011011010   [Subkey: 15]
          - Input Half:       00101011010101000000010101011111
          - S-Box Result:     11101000100101111111100110011011   [per every group of 4-bits]
          - Split Into Two:   1110100010010111 [L] 1111100110011011 [R]
          - Swap Halves:      11111001100110111110100010010111
          - Bit Inversion:    00000110011001000001011101101000
          - Compressed Key:   10010000110010011011011011100101   [done by compression P-Box]
          - XOR with Key:     10010110101011011010000110001101

          - FUNCTION OUTPUT:  10010110101011011010000110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011110101010000011010110011

       - FUNCTION OUTPUT:          10010110101011011010000110001101

       - Left XOR FUNCTION OUTPUT: 10111101011110001010011100111110

       - Next Round Left 32 Bits:  00101011010101000000010101011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101011110001010011100111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011010101000000010101011111

       - Right 32 Bits:            10111101011110001010011100111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010111100100110001001100100011001101110010010010   [Subkey: 14]
          - Input Half:       10111101011110001010011100111110
          - S-Box Result:     10000110110100100100110100011100   [per every group of 4-bits]
          - Split Into Two:   1000011011010010 [L] 0100110100011100 [R]
          - Swap Halves:      01001101000111001000011011010010
          - Bit Inversion:    10110010111000110111100100101101
          - Compressed Key:   11001011011010001000001101100001   [done by compression P-Box]
          - XOR with Key:     01111001100010111111101001001100

          - FUNCTION OUTPUT:  01111001100010111111101001001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011010101000000010101011111

       - FUNCTION OUTPUT:          01111001100010111111101001001100

       - Left XOR FUNCTION OUTPUT: 01010010110111111111111100010011

       - Next Round Left 32 Bits:  10111101011110001010011100111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010010110111111111111100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101011110001010011100111110

       - Right 32 Bits:            01010010110111111111111100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010011010100001101100111011001101110011001000110110110   [Subkey: 13]
          - Input Half:       01010010110111111111111100010011
          - S-Box Result:     10011110011010111011101110100001   [per every group of 4-bits]
          - Split Into Two:   1001111001101011 [L] 1011101110100001 [R]
          - Swap Halves:      10111011101000011001111001101011
          - Bit Inversion:    01000100010111100110000110010100
          - Compressed Key:   01101000011111101110100100111001   [done by compression P-Box]
          - XOR with Key:     00101100001000001000100010101101

          - FUNCTION OUTPUT:  00101100001000001000100010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101011110001010011100111110

       - FUNCTION OUTPUT:          00101100001000001000100010101101

       - Left XOR FUNCTION OUTPUT: 10010001010110000010111110010011

       - Next Round Left 32 Bits:  01010010110111111111111100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001010110000010111110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010010110111111111111100010011

       - Right 32 Bits:            10010001010110000010111110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110010101111001001100010011001000110011011100100100   [Subkey: 12]
          - Input Half:       10010001010110000010111110010011
          - S-Box Result:     00111010100100101110101100110001   [per every group of 4-bits]
          - Split Into Two:   0011101010010010 [L] 1110101100110001 [R]
          - Swap Halves:      11101011001100010011101010010010
          - Bit Inversion:    00010100110011101100010101101101
          - Compressed Key:   01111010000100100110110011011000   [done by compression P-Box]
          - XOR with Key:     01101110110111001010100110110101

          - FUNCTION OUTPUT:  01101110110111001010100110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010010110111111111111100010011

       - FUNCTION OUTPUT:          01101110110111001010100110110101

       - Left XOR FUNCTION OUTPUT: 00111100000000110101011010100110

       - Next Round Left 32 Bits:  10010001010110000010111110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100000000110101011010100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001010110000010111110010011

       - Right 32 Bits:            00111100000000110101011010100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100110101000011011001110110011011100110010001101101   [Subkey: 11]
          - Input Half:       00111100000000110101011010100110
          - S-Box Result:     00010101111100011001000001000000   [per every group of 4-bits]
          - Split Into Two:   0001010111110001 [L] 1001000001000000 [R]
          - Swap Halves:      10010000010000000001010111110001
          - Bit Inversion:    01101111101111111110101000001110
          - Compressed Key:   00011010100110110011011001001110   [done by compression P-Box]
          - XOR with Key:     01110101001001001101110001000000

          - FUNCTION OUTPUT:  01110101001001001101110001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001010110000010111110010011

       - FUNCTION OUTPUT:          01110101001001001101110001000000

       - Left XOR FUNCTION OUTPUT: 11100100011111001111001111010011

       - Next Round Left 32 Bits:  00111100000000110101011010100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100011111001111001111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100000000110101011010100110

       - Right 32 Bits:            11100100011111001111001111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101100101011110010011000100110010001100110111001001   [Subkey: 10]
          - Input Half:       11100100011111001111001111010011
          - S-Box Result:     11000111110101011011000101100001   [per every group of 4-bits]
          - Split Into Two:   1100011111010101 [L] 1011000101100001 [R]
          - Swap Halves:      10110001011000011100011111010101
          - Bit Inversion:    01001110100111100011100000101010
          - Compressed Key:   10011010110011001001001101110110   [done by compression P-Box]
          - XOR with Key:     11010100010100101010101101011100

          - FUNCTION OUTPUT:  11010100010100101010101101011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100000000110101011010100110

       - FUNCTION OUTPUT:          11010100010100101010101101011100

       - Left XOR FUNCTION OUTPUT: 11101000010100011111110111111010

       - Next Round Left 32 Bits:  11100100011111001111001111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000010100011111110111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100011111001111001111010011

       - Right 32 Bits:            11101000010100011111110111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001001101010000110110011101100110111001100100011011   [Subkey: 9]
          - Input Half:       11101000010100011111110111111010
          - S-Box Result:     11000010100110101011011010110100   [per every group of 4-bits]
          - Split Into Two:   1100001010011010 [L] 1011011010110100 [R]
          - Swap Halves:      10110110101101001100001010011010
          - Bit Inversion:    01001001010010110011110101100101
          - Compressed Key:   10001110001001101100110100010111   [done by compression P-Box]
          - XOR with Key:     11000111011011011111000001110010

          - FUNCTION OUTPUT:  11000111011011011111000001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100011111001111001111010011

       - FUNCTION OUTPUT:          11000111011011011111000001110010

       - Left XOR FUNCTION OUTPUT: 00100011000100010000001110100001

       - Next Round Left 32 Bits:  11101000010100011111110111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011000100010000001110100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000010100011111110111111010

       - Right 32 Bits:            00100011000100010000001110100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011011001010111100100110001001100100011001101110010   [Subkey: 8]
          - Input Half:       00100011000100010000001110100001
          - S-Box Result:     11100001101010101111000101001010   [per every group of 4-bits]
          - Split Into Two:   1110000110101010 [L] 1111000101001010 [R]
          - Swap Halves:      11110001010010101110000110101010
          - Bit Inversion:    00001110101101010001111001010101
          - Compressed Key:   10100110111100110110010010010001   [done by compression P-Box]
          - XOR with Key:     10101000010001100111101011000100

          - FUNCTION OUTPUT:  10101000010001100111101011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000010100011111110111111010

       - FUNCTION OUTPUT:          10101000010001100111101011000100

       - Left XOR FUNCTION OUTPUT: 01000000000101111000011100111110

       - Next Round Left 32 Bits:  00100011000100010000001110100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000000101111000011100111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011000100010000001110100001

       - Right 32 Bits:            01000000000101111000011100111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010011010100001101100111011001101110011001000110   [Subkey: 7]
          - Input Half:       01000000000101111000011100111110
          - S-Box Result:     01111111101011010010110100011100   [per every group of 4-bits]
          - Split Into Two:   0111111110101101 [L] 0010110100011100 [R]
          - Swap Halves:      00101101000111000111111110101101
          - Bit Inversion:    11010010111000111000000001010010
          - Compressed Key:   11100011010010010111011111001001   [done by compression P-Box]
          - XOR with Key:     00110001101010101111011110011011

          - FUNCTION OUTPUT:  00110001101010101111011110011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011000100010000001110100001

       - FUNCTION OUTPUT:          00110001101010101111011110011011

       - Left XOR FUNCTION OUTPUT: 00010010101110111111010000111010

       - Next Round Left 32 Bits:  01000000000101111000011100111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010101110111111010000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000000101111000011100111110

       - Right 32 Bits:            00010010101110111111010000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110110010101111001001100010011001000110011011100   [Subkey: 6]
          - Input Half:       00010010101110111111010000111010
          - S-Box Result:     10101110100010001011011100010100   [per every group of 4-bits]
          - Split Into Two:   1010111010001000 [L] 1011011100010100 [R]
          - Swap Halves:      10110111000101001010111010001000
          - Bit Inversion:    01001000111010110101000101110111
          - Compressed Key:   01101001011110000001000101101100   [done by compression P-Box]
          - XOR with Key:     00100001100100110100000000011011

          - FUNCTION OUTPUT:  00100001100100110100000000011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000000101111000011100111110

       - FUNCTION OUTPUT:          00100001100100110100000000011011

       - Left XOR FUNCTION OUTPUT: 01100001100001001100011100100101

       - Next Round Left 32 Bits:  00010010101110111111010000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100001100001001100011100100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101110111111010000111010

       - Right 32 Bits:            01100001100001001100011100100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110100100110101000011011001110110011011100110010001   [Subkey: 5]
          - Input Half:       01100001100001001100011100100101
          - S-Box Result:     00001010001001110101110111101001   [per every group of 4-bits]
          - Split Into Two:   0000101000100111 [L] 0101110111101001 [R]
          - Swap Halves:      01011101111010010000101000100111
          - Bit Inversion:    10100010000101101111010111011000
          - Compressed Key:   01111000010111101101100100110010   [done by compression P-Box]
          - XOR with Key:     11011010010010000010110011101010

          - FUNCTION OUTPUT:  11011010010010000010110011101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101110111111010000111010

       - FUNCTION OUTPUT:          11011010010010000010110011101010

       - Left XOR FUNCTION OUTPUT: 11001000111100111101100011010000

       - Next Round Left 32 Bits:  01100001100001001100011100100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001000111100111101100011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100001100001001100011100100101

       - Right 32 Bits:            11001000111100111101100011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101100101011110010011000100110010001100110111   [Subkey: 4]
          - Input Half:       11001000111100111101100011010000
          - S-Box Result:     01010010101100010110001001101111   [per every group of 4-bits]
          - Split Into Two:   0101001010110001 [L] 0110001001101111 [R]
          - Swap Halves:      01100010011011110101001010110001
          - Bit Inversion:    10011101100100001010110101001110
          - Compressed Key:   00011110010101100100110010011011   [done by compression P-Box]
          - XOR with Key:     10000011110001101110000111010101

          - FUNCTION OUTPUT:  10000011110001101110000111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100001100001001100011100100101

       - FUNCTION OUTPUT:          10000011110001101110000111010101

       - Left XOR FUNCTION OUTPUT: 11100010010000100010011011110000

       - Next Round Left 32 Bits:  11001000111100111101100011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010010000100010011011110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000111100111101100011010000

       - Right 32 Bits:            11100010010000100010011011110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101101001001101010000110110011101100110111001100100   [Subkey: 3]
          - Input Half:       11100010010000100010011011110000
          - S-Box Result:     11001110011111101110000010111111   [per every group of 4-bits]
          - Split Into Two:   1100111001111110 [L] 1110000010111111 [R]
          - Swap Halves:      11100000101111111100111001111110
          - Bit Inversion:    00011111010000000011000110000001
          - Compressed Key:   10010110010100110011011011001000   [done by compression P-Box]
          - XOR with Key:     10001001000100110000011101001001

          - FUNCTION OUTPUT:  10001001000100110000011101001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000111100111101100011010000

       - FUNCTION OUTPUT:          10001001000100110000011101001001

       - Left XOR FUNCTION OUTPUT: 01000001111000001101111110011001

       - Next Round Left 32 Bits:  11100010010000100010011011110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001111000001101111110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010010000100010011011110000

       - Right 32 Bits:            01000001111000001101111110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001001011011001010111100100110001001100100011001101   [Subkey: 2]
          - Input Half:       01000001111000001101111110011001
          - S-Box Result:     01111010110011110110101100110011   [per every group of 4-bits]
          - Split Into Two:   0111101011001111 [L] 0110101100110011 [R]
          - Swap Halves:      01101011001100110111101011001111
          - Bit Inversion:    10010100110011001000010100110000
          - Compressed Key:   10000111000111011001001100101110   [done by compression P-Box]
          - XOR with Key:     00010011110100010001011000011110

          - FUNCTION OUTPUT:  00010011110100010001011000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010010000100010011011110000

       - FUNCTION OUTPUT:          00010011110100010001011000011110

       - Left XOR FUNCTION OUTPUT: 11110001100100110011000011101110

       - Next Round Left 32 Bits:  01000001111000001101111110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001100100110011000011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001111000001101111110011001

       - Right 32 Bits:            11110001100100110011000011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011011010010011010100001101100111011001101110011001   [Subkey: 1]
          - Input Half:       11110001100100110011000011101110
          - S-Box Result:     10111010001100010001111111001100   [per every group of 4-bits]
          - Split Into Two:   1011101000110001 [L] 0001111111001100 [R]
          - Swap Halves:      00011111110011001011101000110001
          - Bit Inversion:    11100000001100110100010111001110
          - Compressed Key:   11100101100100001100100110110110   [done by compression P-Box]
          - XOR with Key:     00000101101000111000110001111000

          - FUNCTION OUTPUT:  00000101101000111000110001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001111000001101111110011001

       - FUNCTION OUTPUT:          00000101101000111000110001111000

       - Left XOR FUNCTION OUTPUT: 01000100010000110101001111100001

       - Next Round Left 32 Bits:  11110001100100110011000011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100010000110101001111100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100010001000011010100111110000111110001100100110011000011101110

 > Decrypted Block:     0100010001000011010100111110000111110001100100110011000011101110


!!!CBC: Previous Ciphertext:                             1000110110001100011110011000100110100101101000001000001100010001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1100100111001111001010100110100001010100001100111011001111111111

 > Final Processed Block:                                1100100111001111001010100110100001010100001100111011001111111111



Ciphertext Block 4:                                      1110100010111111111100101101001100101101110100111101110101010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000101111111111001011010011

       - Right 32 Bits:            00101101110100111101110101010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011110010011000100110010001100110111001001001011   [Subkey: 16]
          - Input Half:       00101101110100111101110101010001
          - S-Box Result:     11100110011000010110011010011010   [per every group of 4-bits]
          - Split Into Two:   1110011001100001 [L] 0110011010011010 [R]
          - Swap Halves:      01100110100110101110011001100001
          - Bit Inversion:    10011001011001010001100110011110
          - Compressed Key:   00011101100100110010111010000111   [done by compression P-Box]
          - XOR with Key:     10000100111101100011011100011001

          - FUNCTION OUTPUT:  10000100111101100011011100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000101111111111001011010011

       - FUNCTION OUTPUT:          10000100111101100011011100011001

       - Left XOR FUNCTION OUTPUT: 01101100010010011100010111001010

       - Next Round Left 32 Bits:  00101101110100111101110101010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100010010011100010111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101110100111101110101010001

       - Right 32 Bits:            01101100010010011100010111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010000110110011101100110111001100100011011011010   [Subkey: 15]
          - Input Half:       01101100010010011100010111001010
          - S-Box Result:     00000101011100110101100101010100   [per every group of 4-bits]
          - Split Into Two:   0000010101110011 [L] 0101100101010100 [R]
          - Swap Halves:      01011001010101000000010101110011
          - Bit Inversion:    10100110101010111111101010001100
          - Compressed Key:   10010000110010011011011011100101   [done by compression P-Box]
          - XOR with Key:     00110110011000100100110001101001

          - FUNCTION OUTPUT:  00110110011000100100110001101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101110100111101110101010001

       - FUNCTION OUTPUT:          00110110011000100100110001101001

       - Left XOR FUNCTION OUTPUT: 00011011101100011001000100111000

       - Next Round Left 32 Bits:  01101100010010011100010111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011101100011001000100111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100010010011100010111001010

       - Right 32 Bits:            00011011101100011001000100111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010111100100110001001100100011001101110010010010   [Subkey: 14]
          - Input Half:       00011011101100011001000100111000
          - S-Box Result:     10101000100010100011101000010010   [per every group of 4-bits]
          - Split Into Two:   1010100010001010 [L] 0011101000010010 [R]
          - Swap Halves:      00111010000100101010100010001010
          - Bit Inversion:    11000101111011010101011101110101
          - Compressed Key:   11001011011010001000001101100001   [done by compression P-Box]
          - XOR with Key:     00001110100001011101010000010100

          - FUNCTION OUTPUT:  00001110100001011101010000010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100010010011100010111001010

       - FUNCTION OUTPUT:          00001110100001011101010000010100

       - Left XOR FUNCTION OUTPUT: 01100010110011000001000111011110

       - Next Round Left 32 Bits:  00011011101100011001000100111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010110011000001000111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011011101100011001000100111000

       - Right 32 Bits:            01100010110011000001000111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010011010100001101100111011001101110011001000110110110   [Subkey: 13]
          - Input Half:       01100010110011000001000111011110
          - S-Box Result:     00001110010101011010101001101100   [per every group of 4-bits]
          - Split Into Two:   0000111001010101 [L] 1010101001101100 [R]
          - Swap Halves:      10101010011011000000111001010101
          - Bit Inversion:    01010101100100111111000110101010
          - Compressed Key:   01101000011111101110100100111001   [done by compression P-Box]
          - XOR with Key:     00111101111011010001100010010011

          - FUNCTION OUTPUT:  00111101111011010001100010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011011101100011001000100111000

       - FUNCTION OUTPUT:          00111101111011010001100010010011

       - Left XOR FUNCTION OUTPUT: 00100110010111001000100110101011

       - Next Round Left 32 Bits:  01100010110011000001000111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110010111001000100110101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010110011000001000111011110

       - Right 32 Bits:            00100110010111001000100110101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110010101111001001100010011001000110011011100100100   [Subkey: 12]
          - Input Half:       00100110010111001000100110101011
          - S-Box Result:     11100000100101010010001101001000   [per every group of 4-bits]
          - Split Into Two:   1110000010010101 [L] 0010001101001000 [R]
          - Swap Halves:      00100011010010001110000010010101
          - Bit Inversion:    11011100101101110001111101101010
          - Compressed Key:   01111010000100100110110011011000   [done by compression P-Box]
          - XOR with Key:     10100110101001010111001110110010

          - FUNCTION OUTPUT:  10100110101001010111001110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010110011000001000111011110

       - FUNCTION OUTPUT:          10100110101001010111001110110010

       - Left XOR FUNCTION OUTPUT: 11000100011010010110001001101100

       - Next Round Left 32 Bits:  00100110010111001000100110101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100011010010110001001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110010111001000100110101011

       - Right 32 Bits:            11000100011010010110001001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100110101000011011001110110011011100110010001101101   [Subkey: 11]
          - Input Half:       11000100011010010110001001101100
          - S-Box Result:     01010111000000110000111000000101   [per every group of 4-bits]
          - Split Into Two:   0101011100000011 [L] 0000111000000101 [R]
          - Swap Halves:      00001110000001010101011100000011
          - Bit Inversion:    11110001111110101010100011111100
          - Compressed Key:   00011010100110110011011001001110   [done by compression P-Box]
          - XOR with Key:     11101011011000011001111010110010

          - FUNCTION OUTPUT:  11101011011000011001111010110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110010111001000100110101011

       - FUNCTION OUTPUT:          11101011011000011001111010110010

       - Left XOR FUNCTION OUTPUT: 11001101001111010001011100011001

       - Next Round Left 32 Bits:  11000100011010010110001001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101001111010001011100011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100011010010110001001101100

       - Right 32 Bits:            11001101001111010001011100011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101100101011110010011000100110010001100110111001001   [Subkey: 10]
          - Input Half:       11001101001111010001011100011001
          - S-Box Result:     01010110000101101010110110100011   [per every group of 4-bits]
          - Split Into Two:   0101011000010110 [L] 1010110110100011 [R]
          - Swap Halves:      10101101101000110101011000010110
          - Bit Inversion:    01010010010111001010100111101001
          - Compressed Key:   10011010110011001001001101110110   [done by compression P-Box]
          - XOR with Key:     11001000100100000011101010011111

          - FUNCTION OUTPUT:  11001000100100000011101010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100011010010110001001101100

       - FUNCTION OUTPUT:          11001000100100000011101010011111

       - Left XOR FUNCTION OUTPUT: 00001100111110010101100011110011

       - Next Round Left 32 Bits:  11001101001111010001011100011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100111110010101100011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101001111010001011100011001

       - Right 32 Bits:            00001100111110010101100011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001001101010000110110011101100110111001100100011011   [Subkey: 9]
          - Input Half:       00001100111110010101100011110011
          - S-Box Result:     11110101101100111001001010110001   [per every group of 4-bits]
          - Split Into Two:   1111010110110011 [L] 1001001010110001 [R]
          - Swap Halves:      10010010101100011111010110110011
          - Bit Inversion:    01101101010011100000101001001100
          - Compressed Key:   10001110001001101100110100010111   [done by compression P-Box]
          - XOR with Key:     11100011011010001100011101011011

          - FUNCTION OUTPUT:  11100011011010001100011101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101001111010001011100011001

       - FUNCTION OUTPUT:          11100011011010001100011101011011

       - Left XOR FUNCTION OUTPUT: 00101110010101011101000001000010

       - Next Round Left 32 Bits:  00001100111110010101100011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110010101011101000001000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100111110010101100011110011

       - Right 32 Bits:            00101110010101011101000001000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011011001010111100100110001001100100011001101110010   [Subkey: 8]
          - Input Half:       00101110010101011101000001000010
          - S-Box Result:     11101100100110010110111101111110   [per every group of 4-bits]
          - Split Into Two:   1110110010011001 [L] 0110111101111110 [R]
          - Swap Halves:      01101111011111101110110010011001
          - Bit Inversion:    10010000100000010001001101100110
          - Compressed Key:   10100110111100110110010010010001   [done by compression P-Box]
          - XOR with Key:     00110110011100100111011111110111

          - FUNCTION OUTPUT:  00110110011100100111011111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100111110010101100011110011

       - FUNCTION OUTPUT:          00110110011100100111011111110111

       - Left XOR FUNCTION OUTPUT: 00111010100010110010111100000100

       - Next Round Left 32 Bits:  00101110010101011101000001000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010100010110010111100000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110010101011101000001000010

       - Right 32 Bits:            00111010100010110010111100000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010011010100001101100111011001101110011001000110   [Subkey: 7]
          - Input Half:       00111010100010110010111100000100
          - S-Box Result:     00010100001010001110101111110111   [per every group of 4-bits]
          - Split Into Two:   0001010000101000 [L] 1110101111110111 [R]
          - Swap Halves:      11101011111101110001010000101000
          - Bit Inversion:    00010100000010001110101111010111
          - Compressed Key:   11100011010010010111011111001001   [done by compression P-Box]
          - XOR with Key:     11110111010000011001110000011110

          - FUNCTION OUTPUT:  11110111010000011001110000011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110010101011101000001000010

       - FUNCTION OUTPUT:          11110111010000011001110000011110

       - Left XOR FUNCTION OUTPUT: 11011001000101000100110001011100

       - Next Round Left 32 Bits:  00111010100010110010111100000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001000101000100110001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010100010110010111100000100

       - Right 32 Bits:            11011001000101000100110001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110110010101111001001100010011001000110011011100   [Subkey: 6]
          - Input Half:       11011001000101000100110001011100
          - S-Box Result:     01100011101001110111010110010101   [per every group of 4-bits]
          - Split Into Two:   0110001110100111 [L] 0111010110010101 [R]
          - Swap Halves:      01110101100101010110001110100111
          - Bit Inversion:    10001010011010101001110001011000
          - Compressed Key:   01101001011110000001000101101100   [done by compression P-Box]
          - XOR with Key:     11100011000100101000110100110100

          - FUNCTION OUTPUT:  11100011000100101000110100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010100010110010111100000100

       - FUNCTION OUTPUT:          11100011000100101000110100110100

       - Left XOR FUNCTION OUTPUT: 11011001100110011010001000110000

       - Next Round Left 32 Bits:  11011001000101000100110001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001100110011010001000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001000101000100110001011100

       - Right 32 Bits:            11011001100110011010001000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110100100110101000011011001110110011011100110010001   [Subkey: 5]
          - Input Half:       11011001100110011010001000110000
          - S-Box Result:     01100011001100110100111000011111   [per every group of 4-bits]
          - Split Into Two:   0110001100110011 [L] 0100111000011111 [R]
          - Swap Halves:      01001110000111110110001100110011
          - Bit Inversion:    10110001111000001001110011001100
          - Compressed Key:   01111000010111101101100100110010   [done by compression P-Box]
          - XOR with Key:     11001001101111100100010111111110

          - FUNCTION OUTPUT:  11001001101111100100010111111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001000101000100110001011100

       - FUNCTION OUTPUT:          11001001101111100100010111111110

       - Left XOR FUNCTION OUTPUT: 00010000101010100000100110100010

       - Next Round Left 32 Bits:  11011001100110011010001000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000101010100000100110100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001100110011010001000110000

       - Right 32 Bits:            00010000101010100000100110100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101100101011110010011000100110010001100110111   [Subkey: 4]
          - Input Half:       00010000101010100000100110100010
          - S-Box Result:     10101111010001001111001101001110   [per every group of 4-bits]
          - Split Into Two:   1010111101000100 [L] 1111001101001110 [R]
          - Swap Halves:      11110011010011101010111101000100
          - Bit Inversion:    00001100101100010101000010111011
          - Compressed Key:   00011110010101100100110010011011   [done by compression P-Box]
          - XOR with Key:     00010010111001110001110000100000

          - FUNCTION OUTPUT:  00010010111001110001110000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001100110011010001000110000

       - FUNCTION OUTPUT:          00010010111001110001110000100000

       - Left XOR FUNCTION OUTPUT: 11001011011111101011111000010000

       - Next Round Left 32 Bits:  00010000101010100000100110100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001011011111101011111000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000101010100000100110100010

       - Right 32 Bits:            11001011011111101011111000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101101001001101010000110110011101100110111001100100   [Subkey: 3]
          - Input Half:       11001011011111101011111000010000
          - S-Box Result:     01011000110111001000110010101111   [per every group of 4-bits]
          - Split Into Two:   0101100011011100 [L] 1000110010101111 [R]
          - Swap Halves:      10001100101011110101100011011100
          - Bit Inversion:    01110011010100001010011100100011
          - Compressed Key:   10010110010100110011011011001000   [done by compression P-Box]
          - XOR with Key:     11100101000000111001000111101011

          - FUNCTION OUTPUT:  11100101000000111001000111101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000101010100000100110100010

       - FUNCTION OUTPUT:          11100101000000111001000111101011

       - Left XOR FUNCTION OUTPUT: 11110101101010011001100001001001

       - Next Round Left 32 Bits:  11001011011111101011111000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101101010011001100001001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001011011111101011111000010000

       - Right 32 Bits:            11110101101010011001100001001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001001011011001010111100100110001001100100011001101   [Subkey: 2]
          - Input Half:       11110101101010011001100001001001
          - S-Box Result:     10111001010000110011001001110011   [per every group of 4-bits]
          - Split Into Two:   1011100101000011 [L] 0011001001110011 [R]
          - Swap Halves:      00110010011100111011100101000011
          - Bit Inversion:    11001101100011000100011010111100
          - Compressed Key:   10000111000111011001001100101110   [done by compression P-Box]
          - XOR with Key:     01001010100100011101010110010010

          - FUNCTION OUTPUT:  01001010100100011101010110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001011011111101011111000010000

       - FUNCTION OUTPUT:          01001010100100011101010110010010

       - Left XOR FUNCTION OUTPUT: 10000001111011110110101110000010

       - Next Round Left 32 Bits:  11110101101010011001100001001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001111011110110101110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101101010011001100001001001

       - Right 32 Bits:            10000001111011110110101110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011011010010011010100001101100111011001101110011001   [Subkey: 1]
          - Input Half:       10000001111011110110101110000010
          - S-Box Result:     00101010110010110000100000101110   [per every group of 4-bits]
          - Split Into Two:   0010101011001011 [L] 0000100000101110 [R]
          - Swap Halves:      00001000001011100010101011001011
          - Bit Inversion:    11110111110100011101010100110100
          - Compressed Key:   11100101100100001100100110110110   [done by compression P-Box]
          - XOR with Key:     00010010010000010001110010000010

          - FUNCTION OUTPUT:  00010010010000010001110010000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101101010011001100001001001

       - FUNCTION OUTPUT:          00010010010000010001110010000010

       - Left XOR FUNCTION OUTPUT: 11100111111010001000010011001011

       - Next Round Left 32 Bits:  10000001111011110110101110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111111010001000010011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110011111101000100001001100101110000001111011110110101110000010

 > Decrypted Block:     1110011111101000100001001100101110000001111011110110101110000010


!!!CBC: Previous Ciphertext:                             0011100110111001001111000100111000101011110101010000011010110011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101111001010001101110001000010110101010001110100110110100110001

 > Final Processed Block:                                1101111001010001101110001000010110101010001110100110110100110001



Ciphertext Block 5:                                      1011101101110111010110100101000110001111000110100010100110101000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011011101110101101001010001

       - Right 32 Bits:            10001111000110100010100110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011110010011000100110010001100110111001001001011   [Subkey: 16]
          - Input Half:       10001111000110100010100110101000
          - S-Box Result:     00101011101001001110001101000010   [per every group of 4-bits]
          - Split Into Two:   0010101110100100 [L] 1110001101000010 [R]
          - Swap Halves:      11100011010000100010101110100100
          - Bit Inversion:    00011100101111011101010001011011
          - Compressed Key:   00011101100100110010111010000111   [done by compression P-Box]
          - XOR with Key:     00000001001011101111101011011100

          - FUNCTION OUTPUT:  00000001001011101111101011011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011011101110101101001010001

       - FUNCTION OUTPUT:          00000001001011101111101011011100

       - Left XOR FUNCTION OUTPUT: 10111010010110011010000010001101

       - Next Round Left 32 Bits:  10001111000110100010100110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010010110011010000010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111000110100010100110101000

       - Right 32 Bits:            10111010010110011010000010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010000110110011101100110111001100100011011011010   [Subkey: 15]
          - Input Half:       10111010010110011010000010001101
          - S-Box Result:     10000100100100110100111100100110   [per every group of 4-bits]
          - Split Into Two:   1000010010010011 [L] 0100111100100110 [R]
          - Swap Halves:      01001111001001101000010010010011
          - Bit Inversion:    10110000110110010111101101101100
          - Compressed Key:   10010000110010011011011011100101   [done by compression P-Box]
          - XOR with Key:     00100000000100001100110110001001

          - FUNCTION OUTPUT:  00100000000100001100110110001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111000110100010100110101000

       - FUNCTION OUTPUT:          00100000000100001100110110001001

       - Left XOR FUNCTION OUTPUT: 10101111000010101110010000100001

       - Next Round Left 32 Bits:  10111010010110011010000010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111000010101110010000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010010110011010000010001101

       - Right 32 Bits:            10101111000010101110010000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010111100100110001001100100011001101110010010010   [Subkey: 14]
          - Input Half:       10101111000010101110010000100001
          - S-Box Result:     01001011111101001100011111101010   [per every group of 4-bits]
          - Split Into Two:   0100101111110100 [L] 1100011111101010 [R]
          - Swap Halves:      11000111111010100100101111110100
          - Bit Inversion:    00111000000101011011010000001011
          - Compressed Key:   11001011011010001000001101100001   [done by compression P-Box]
          - XOR with Key:     11110011011111010011011101101010

          - FUNCTION OUTPUT:  11110011011111010011011101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010010110011010000010001101

       - FUNCTION OUTPUT:          11110011011111010011011101101010

       - Left XOR FUNCTION OUTPUT: 01001001001001001001011111100111

       - Next Round Left 32 Bits:  10101111000010101110010000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001001001001001011111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111000010101110010000100001

       - Right 32 Bits:            01001001001001001001011111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010011010100001101100111011001101110011001000110110110   [Subkey: 13]
          - Input Half:       01001001001001001001011111100111
          - S-Box Result:     01110011111001110011110111001101   [per every group of 4-bits]
          - Split Into Two:   0111001111100111 [L] 0011110111001101 [R]
          - Swap Halves:      00111101110011010111001111100111
          - Bit Inversion:    11000010001100101000110000011000
          - Compressed Key:   01101000011111101110100100111001   [done by compression P-Box]
          - XOR with Key:     10101010010011000110010100100001

          - FUNCTION OUTPUT:  10101010010011000110010100100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111000010101110010000100001

       - FUNCTION OUTPUT:          10101010010011000110010100100001

       - Left XOR FUNCTION OUTPUT: 00000101010001101000000100000000

       - Next Round Left 32 Bits:  01001001001001001001011111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101010001101000000100000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001001001001001011111100111

       - Right 32 Bits:            00000101010001101000000100000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110010101111001001100010011001000110011011100100100   [Subkey: 12]
          - Input Half:       00000101010001101000000100000000
          - S-Box Result:     11111001011100000010101011111111   [per every group of 4-bits]
          - Split Into Two:   1111100101110000 [L] 0010101011111111 [R]
          - Swap Halves:      00101010111111111111100101110000
          - Bit Inversion:    11010101000000000000011010001111
          - Compressed Key:   01111010000100100110110011011000   [done by compression P-Box]
          - XOR with Key:     10101111000100100110101001010111

          - FUNCTION OUTPUT:  10101111000100100110101001010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001001001001001011111100111

       - FUNCTION OUTPUT:          10101111000100100110101001010111

       - Left XOR FUNCTION OUTPUT: 11100110001101101111110110110000

       - Next Round Left 32 Bits:  00000101010001101000000100000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110001101101111110110110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101010001101000000100000000

       - Right 32 Bits:            11100110001101101111110110110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100110101000011011001110110011011100110010001101101   [Subkey: 11]
          - Input Half:       11100110001101101111110110110000
          - S-Box Result:     11000000000100001011011010001111   [per every group of 4-bits]
          - Split Into Two:   1100000000010000 [L] 1011011010001111 [R]
          - Swap Halves:      10110110100011111100000000010000
          - Bit Inversion:    01001001011100000011111111101111
          - Compressed Key:   00011010100110110011011001001110   [done by compression P-Box]
          - XOR with Key:     01010011111010110000100110100001

          - FUNCTION OUTPUT:  01010011111010110000100110100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101010001101000000100000000

       - FUNCTION OUTPUT:          01010011111010110000100110100001

       - Left XOR FUNCTION OUTPUT: 01010110101011011000100010100001

       - Next Round Left 32 Bits:  11100110001101101111110110110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110101011011000100010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110001101101111110110110000

       - Right 32 Bits:            01010110101011011000100010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101100101011110010011000100110010001100110111001001   [Subkey: 10]
          - Input Half:       01010110101011011000100010100001
          - S-Box Result:     10010000010001100010001001001010   [per every group of 4-bits]
          - Split Into Two:   1001000001000110 [L] 0010001001001010 [R]
          - Swap Halves:      00100010010010101001000001000110
          - Bit Inversion:    11011101101101010110111110111001
          - Compressed Key:   10011010110011001001001101110110   [done by compression P-Box]
          - XOR with Key:     01000111011110011111110011001111

          - FUNCTION OUTPUT:  01000111011110011111110011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110001101101111110110110000

       - FUNCTION OUTPUT:          01000111011110011111110011001111

       - Left XOR FUNCTION OUTPUT: 10100001010011110000000101111111

       - Next Round Left 32 Bits:  01010110101011011000100010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001010011110000000101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110101011011000100010100001

       - Right 32 Bits:            10100001010011110000000101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001001101010000110110011101100110111001100100011011   [Subkey: 9]
          - Input Half:       10100001010011110000000101111111
          - S-Box Result:     01001010011110111111101011011011   [per every group of 4-bits]
          - Split Into Two:   0100101001111011 [L] 1111101011011011 [R]
          - Swap Halves:      11111010110110110100101001111011
          - Bit Inversion:    00000101001001001011010110000100
          - Compressed Key:   10001110001001101100110100010111   [done by compression P-Box]
          - XOR with Key:     10001011000000100111100010010011

          - FUNCTION OUTPUT:  10001011000000100111100010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110101011011000100010100001

       - FUNCTION OUTPUT:          10001011000000100111100010010011

       - Left XOR FUNCTION OUTPUT: 11011101101011111111000000110010

       - Next Round Left 32 Bits:  10100001010011110000000101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101101011111111000000110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001010011110000000101111111

       - Right 32 Bits:            11011101101011111111000000110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011011001010111100100110001001100100011001101110010   [Subkey: 8]
          - Input Half:       11011101101011111111000000110010
          - S-Box Result:     01100110010010111011111100011110   [per every group of 4-bits]
          - Split Into Two:   0110011001001011 [L] 1011111100011110 [R]
          - Swap Halves:      10111111000111100110011001001011
          - Bit Inversion:    01000000111000011001100110110100
          - Compressed Key:   10100110111100110110010010010001   [done by compression P-Box]
          - XOR with Key:     11100110000100101111110100100101

          - FUNCTION OUTPUT:  11100110000100101111110100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001010011110000000101111111

       - FUNCTION OUTPUT:          11100110000100101111110100100101

       - Left XOR FUNCTION OUTPUT: 01000111010111011111110001011010

       - Next Round Left 32 Bits:  11011101101011111111000000110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111010111011111110001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101101011111111000000110010

       - Right 32 Bits:            01000111010111011111110001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010011010100001101100111011001101110011001000110   [Subkey: 7]
          - Input Half:       01000111010111011111110001011010
          - S-Box Result:     01111101100101101011010110010100   [per every group of 4-bits]
          - Split Into Two:   0111110110010110 [L] 1011010110010100 [R]
          - Swap Halves:      10110101100101000111110110010110
          - Bit Inversion:    01001010011010111000001001101001
          - Compressed Key:   11100011010010010111011111001001   [done by compression P-Box]
          - XOR with Key:     10101001001000101111010110100000

          - FUNCTION OUTPUT:  10101001001000101111010110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101101011111111000000110010

       - FUNCTION OUTPUT:          10101001001000101111010110100000

       - Left XOR FUNCTION OUTPUT: 01110100100011010000010110010010

       - Next Round Left 32 Bits:  01000111010111011111110001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100100011010000010110010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111010111011111110001011010

       - Right 32 Bits:            01110100100011010000010110010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110110010101111001001100010011001000110011011100   [Subkey: 6]
          - Input Half:       01110100100011010000010110010010
          - S-Box Result:     11010111001001101111100100111110   [per every group of 4-bits]
          - Split Into Two:   1101011100100110 [L] 1111100100111110 [R]
          - Swap Halves:      11111001001111101101011100100110
          - Bit Inversion:    00000110110000010010100011011001
          - Compressed Key:   01101001011110000001000101101100   [done by compression P-Box]
          - XOR with Key:     01101111101110010011100110110101

          - FUNCTION OUTPUT:  01101111101110010011100110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111010111011111110001011010

       - FUNCTION OUTPUT:          01101111101110010011100110110101

       - Left XOR FUNCTION OUTPUT: 00101000111001001100010111101111

       - Next Round Left 32 Bits:  01110100100011010000010110010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000111001001100010111101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100100011010000010110010010

       - Right 32 Bits:            00101000111001001100010111101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110100100110101000011011001110110011011100110010001   [Subkey: 5]
          - Input Half:       00101000111001001100010111101111
          - S-Box Result:     11100010110001110101100111001011   [per every group of 4-bits]
          - Split Into Two:   1110001011000111 [L] 0101100111001011 [R]
          - Swap Halves:      01011001110010111110001011000111
          - Bit Inversion:    10100110001101000001110100111000
          - Compressed Key:   01111000010111101101100100110010   [done by compression P-Box]
          - XOR with Key:     11011110011010101100010000001010

          - FUNCTION OUTPUT:  11011110011010101100010000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100100011010000010110010010

       - FUNCTION OUTPUT:          11011110011010101100010000001010

       - Left XOR FUNCTION OUTPUT: 10101010111001111100000110011000

       - Next Round Left 32 Bits:  00101000111001001100010111101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010111001111100000110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000111001001100010111101111

       - Right 32 Bits:            10101010111001111100000110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101100101011110010011000100110010001100110111   [Subkey: 4]
          - Input Half:       10101010111001111100000110011000
          - S-Box Result:     01000100110011010101101000110010   [per every group of 4-bits]
          - Split Into Two:   0100010011001101 [L] 0101101000110010 [R]
          - Swap Halves:      01011010001100100100010011001101
          - Bit Inversion:    10100101110011011011101100110010
          - Compressed Key:   00011110010101100100110010011011   [done by compression P-Box]
          - XOR with Key:     10111011100110111111011110101001

          - FUNCTION OUTPUT:  10111011100110111111011110101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000111001001100010111101111

       - FUNCTION OUTPUT:          10111011100110111111011110101001

       - Left XOR FUNCTION OUTPUT: 10010011011111110011001001000110

       - Next Round Left 32 Bits:  10101010111001111100000110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011011111110011001001000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010111001111100000110011000

       - Right 32 Bits:            10010011011111110011001001000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101101001001101010000110110011101100110111001100100   [Subkey: 3]
          - Input Half:       10010011011111110011001001000110
          - S-Box Result:     00110001110110110001111001110000   [per every group of 4-bits]
          - Split Into Two:   0011000111011011 [L] 0001111001110000 [R]
          - Swap Halves:      00011110011100000011000111011011
          - Bit Inversion:    11100001100011111100111000100100
          - Compressed Key:   10010110010100110011011011001000   [done by compression P-Box]
          - XOR with Key:     01110111110111001111100011101100

          - FUNCTION OUTPUT:  01110111110111001111100011101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010111001111100000110011000

       - FUNCTION OUTPUT:          01110111110111001111100011101100

       - Left XOR FUNCTION OUTPUT: 11011101001110110011100101110100

       - Next Round Left 32 Bits:  10010011011111110011001001000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101001110110011100101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011011111110011001001000110

       - Right 32 Bits:            11011101001110110011100101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001001011011001010111100100110001001100100011001101   [Subkey: 2]
          - Input Half:       11011101001110110011100101110100
          - S-Box Result:     01100110000110000001001111010111   [per every group of 4-bits]
          - Split Into Two:   0110011000011000 [L] 0001001111010111 [R]
          - Swap Halves:      00010011110101110110011000011000
          - Bit Inversion:    11101100001010001001100111100111
          - Compressed Key:   10000111000111011001001100101110   [done by compression P-Box]
          - XOR with Key:     01101011001101010000101011001001

          - FUNCTION OUTPUT:  01101011001101010000101011001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011011111110011001001000110

       - FUNCTION OUTPUT:          01101011001101010000101011001001

       - Left XOR FUNCTION OUTPUT: 11111000010010100011100010001111

       - Next Round Left 32 Bits:  11011101001110110011100101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000010010100011100010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101001110110011100101110100

       - Right 32 Bits:            11111000010010100011100010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011011010010011010100001101100111011001101110011001   [Subkey: 1]
          - Input Half:       11111000010010100011100010001111
          - S-Box Result:     10110010011101000001001000101011   [per every group of 4-bits]
          - Split Into Two:   1011001001110100 [L] 0001001000101011 [R]
          - Swap Halves:      00010010001010111011001001110100
          - Bit Inversion:    11101101110101000100110110001011
          - Compressed Key:   11100101100100001100100110110110   [done by compression P-Box]
          - XOR with Key:     00001000010001001000010000111101

          - FUNCTION OUTPUT:  00001000010001001000010000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101001110110011100101110100

       - FUNCTION OUTPUT:          00001000010001001000010000111101

       - Left XOR FUNCTION OUTPUT: 11010101011111111011110101001001

       - Next Round Left 32 Bits:  11111000010010100011100010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101011111111011110101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101010101111111101111010100100111111000010010100011100010001111

 > Decrypted Block:     1101010101111111101111010100100111111000010010100011100010001111


!!!CBC: Previous Ciphertext:                             1110100010111111111100101101001100101101110100111101110101010001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0011110111000000010011111001101011010101100110011110010111011110

 > Final Processed Block:                                0011110111000000010011111001101011010101100110011110010111011110



Ciphertext Block 6:                                      1100010100110111100001011010000100010010101011100100001011000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101001101111000010110100001

       - Right 32 Bits:            00010010101011100100001011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011110010011000100110010001100110111001001001011   [Subkey: 16]
          - Input Half:       00010010101011100100001011000110
          - S-Box Result:     10101110010011000111111001010000   [per every group of 4-bits]
          - Split Into Two:   1010111001001100 [L] 0111111001010000 [R]
          - Swap Halves:      01111110010100001010111001001100
          - Bit Inversion:    10000001101011110101000110110011
          - Compressed Key:   00011101100100110010111010000111   [done by compression P-Box]
          - XOR with Key:     10011100001111000111111100110100

          - FUNCTION OUTPUT:  10011100001111000111111100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101001101111000010110100001

       - FUNCTION OUTPUT:          10011100001111000111111100110100

       - Left XOR FUNCTION OUTPUT: 01011001000010111111101010010101

       - Next Round Left 32 Bits:  00010010101011100100001011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001000010111111101010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101011100100001011000110

       - Right 32 Bits:            01011001000010111111101010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101010000110110011101100110111001100100011011011010   [Subkey: 15]
          - Input Half:       01011001000010111111101010010101
          - S-Box Result:     10010011111110001011010000111001   [per every group of 4-bits]
          - Split Into Two:   1001001111111000 [L] 1011010000111001 [R]
          - Swap Halves:      10110100001110011001001111111000
          - Bit Inversion:    01001011110001100110110000000111
          - Compressed Key:   10010000110010011011011011100101   [done by compression P-Box]
          - XOR with Key:     11011011000011111101101011100010

          - FUNCTION OUTPUT:  11011011000011111101101011100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101011100100001011000110

       - FUNCTION OUTPUT:          11011011000011111101101011100010

       - Left XOR FUNCTION OUTPUT: 11001001101000011001100000100100

       - Next Round Left 32 Bits:  01011001000010111111101010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001101000011001100000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001000010111111101010010101

       - Right 32 Bits:            11001001101000011001100000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011001010111100100110001001100100011001101110010010010   [Subkey: 14]
          - Input Half:       11001001101000011001100000100100
          - S-Box Result:     01010011010010100011001011100111   [per every group of 4-bits]
          - Split Into Two:   0101001101001010 [L] 0011001011100111 [R]
          - Swap Halves:      00110010111001110101001101001010
          - Bit Inversion:    11001101000110001010110010110101
          - Compressed Key:   11001011011010001000001101100001   [done by compression P-Box]
          - XOR with Key:     00000110011100000010111111010100

          - FUNCTION OUTPUT:  00000110011100000010111111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001000010111111101010010101

       - FUNCTION OUTPUT:          00000110011100000010111111010100

       - Left XOR FUNCTION OUTPUT: 01011111011110111101010101000001

       - Next Round Left 32 Bits:  11001001101000011001100000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111011110111101010101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001101000011001100000100100

       - Right 32 Bits:            01011111011110111101010101000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010011010100001101100111011001101110011001000110110110   [Subkey: 13]
          - Input Half:       01011111011110111101010101000001
          - S-Box Result:     10011011110110000110100101111010   [per every group of 4-bits]
          - Split Into Two:   1001101111011000 [L] 0110100101111010 [R]
          - Swap Halves:      01101001011110101001101111011000
          - Bit Inversion:    10010110100001010110010000100111
          - Compressed Key:   01101000011111101110100100111001   [done by compression P-Box]
          - XOR with Key:     11111110111110111000110100011110

          - FUNCTION OUTPUT:  11111110111110111000110100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001101000011001100000100100

       - FUNCTION OUTPUT:          11111110111110111000110100011110

       - Left XOR FUNCTION OUTPUT: 00110111010110100001010100111010

       - Next Round Left 32 Bits:  01011111011110111101010101000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111010110100001010100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111011110111101010101000001

       - Right 32 Bits:            00110111010110100001010100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110010101111001001100010011001000110011011100100100   [Subkey: 12]
          - Input Half:       00110111010110100001010100111010
          - S-Box Result:     00011101100101001010100100010100   [per every group of 4-bits]
          - Split Into Two:   0001110110010100 [L] 1010100100010100 [R]
          - Swap Halves:      10101001000101000001110110010100
          - Bit Inversion:    01010110111010111110001001101011
          - Compressed Key:   01111010000100100110110011011000   [done by compression P-Box]
          - XOR with Key:     00101100111110011000111010110011

          - FUNCTION OUTPUT:  00101100111110011000111010110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111011110111101010101000001

       - FUNCTION OUTPUT:          00101100111110011000111010110011

       - Left XOR FUNCTION OUTPUT: 01110011100000100101101111110010

       - Next Round Left 32 Bits:  00110111010110100001010100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011100000100101101111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111010110100001010100111010

       - Right 32 Bits:            01110011100000100101101111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100100110101000011011001110110011011100110010001101101   [Subkey: 11]
          - Input Half:       01110011100000100101101111110010
          - S-Box Result:     11010001001011101001100010111110   [per every group of 4-bits]
          - Split Into Two:   1101000100101110 [L] 1001100010111110 [R]
          - Swap Halves:      10011000101111101101000100101110
          - Bit Inversion:    01100111010000010010111011010001
          - Compressed Key:   00011010100110110011011001001110   [done by compression P-Box]
          - XOR with Key:     01111101110110100001100010011111

          - FUNCTION OUTPUT:  01111101110110100001100010011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111010110100001010100111010

       - FUNCTION OUTPUT:          01111101110110100001100010011111

       - Left XOR FUNCTION OUTPUT: 01001010100000000000110110100101

       - Next Round Left 32 Bits:  01110011100000100101101111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010100000000000110110100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011100000100101101111110010

       - Right 32 Bits:            01001010100000000000110110100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101101100101011110010011000100110010001100110111001001   [Subkey: 10]
          - Input Half:       01001010100000000000110110100101
          - S-Box Result:     01110100001011111111011001001001   [per every group of 4-bits]
          - Split Into Two:   0111010000101111 [L] 1111011001001001 [R]
          - Swap Halves:      11110110010010010111010000101111
          - Bit Inversion:    00001001101101101000101111010000
          - Compressed Key:   10011010110011001001001101110110   [done by compression P-Box]
          - XOR with Key:     10010011011110100001100010100110

          - FUNCTION OUTPUT:  10010011011110100001100010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011100000100101101111110010

       - FUNCTION OUTPUT:          10010011011110100001100010100110

       - Left XOR FUNCTION OUTPUT: 11100000111110000100001101010100

       - Next Round Left 32 Bits:  01001010100000000000110110100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000111110000100001101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010100000000000110110100101

       - Right 32 Bits:            11100000111110000100001101010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101001001101010000110110011101100110111001100100011011   [Subkey: 9]
          - Input Half:       11100000111110000100001101010100
          - S-Box Result:     11001111101100100111000110010111   [per every group of 4-bits]
          - Split Into Two:   1100111110110010 [L] 0111000110010111 [R]
          - Swap Halves:      01110001100101111100111110110010
          - Bit Inversion:    10001110011010000011000001001101
          - Compressed Key:   10001110001001101100110100010111   [done by compression P-Box]
          - XOR with Key:     00000000010011101111110101011010

          - FUNCTION OUTPUT:  00000000010011101111110101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010100000000000110110100101

       - FUNCTION OUTPUT:          00000000010011101111110101011010

       - Left XOR FUNCTION OUTPUT: 01001010110011101111000011111111

       - Next Round Left 32 Bits:  11100000111110000100001101010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010110011101111000011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000111110000100001101010100

       - Right 32 Bits:            01001010110011101111000011111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011011001010111100100110001001100100011001101110010   [Subkey: 8]
          - Input Half:       01001010110011101111000011111111
          - S-Box Result:     01110100010111001011111110111011   [per every group of 4-bits]
          - Split Into Two:   0111010001011100 [L] 1011111110111011 [R]
          - Swap Halves:      10111111101110110111010001011100
          - Bit Inversion:    01000000010001001000101110100011
          - Compressed Key:   10100110111100110110010010010001   [done by compression P-Box]
          - XOR with Key:     11100110101101111110111100110010

          - FUNCTION OUTPUT:  11100110101101111110111100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000111110000100001101010100

       - FUNCTION OUTPUT:          11100110101101111110111100110010

       - Left XOR FUNCTION OUTPUT: 00000110010011111010110001100110

       - Next Round Left 32 Bits:  01001010110011101111000011111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110010011111010110001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010110011101111000011111111

       - Right 32 Bits:            00000110010011111010110001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011010010011010100001101100111011001101110011001000110   [Subkey: 7]
          - Input Half:       00000110010011111010110001100110
          - S-Box Result:     11110000011110110100010100000000   [per every group of 4-bits]
          - Split Into Two:   1111000001111011 [L] 0100010100000000 [R]
          - Swap Halves:      01000101000000001111000001111011
          - Bit Inversion:    10111010111111110000111110000100
          - Compressed Key:   11100011010010010111011111001001   [done by compression P-Box]
          - XOR with Key:     01011001101101100111100001001101

          - FUNCTION OUTPUT:  01011001101101100111100001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010110011101111000011111111

       - FUNCTION OUTPUT:          01011001101101100111100001001101

       - Left XOR FUNCTION OUTPUT: 00010011011110001000100010110010

       - Next Round Left 32 Bits:  00000110010011111010110001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011011110001000100010110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110010011111010110001100110

       - Right 32 Bits:            00010011011110001000100010110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010010110110010101111001001100010011001000110011011100   [Subkey: 6]
          - Input Half:       00010011011110001000100010110010
          - S-Box Result:     10100001110100100010001010001110   [per every group of 4-bits]
          - Split Into Two:   1010000111010010 [L] 0010001010001110 [R]
          - Swap Halves:      00100010100011101010000111010010
          - Bit Inversion:    11011101011100010101111000101101
          - Compressed Key:   01101001011110000001000101101100   [done by compression P-Box]
          - XOR with Key:     10110100000010010100111101000001

          - FUNCTION OUTPUT:  10110100000010010100111101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110010011111010110001100110

       - FUNCTION OUTPUT:          10110100000010010100111101000001

       - Left XOR FUNCTION OUTPUT: 10110010010001101110001100100111

       - Next Round Left 32 Bits:  00010011011110001000100010110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010010001101110001100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011011110001000100010110010

       - Right 32 Bits:            10110010010001101110001100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110110100100110101000011011001110110011011100110010001   [Subkey: 5]
          - Input Half:       10110010010001101110001100100111
          - S-Box Result:     10001110011100001100000111101101   [per every group of 4-bits]
          - Split Into Two:   1000111001110000 [L] 1100000111101101 [R]
          - Swap Halves:      11000001111011011000111001110000
          - Bit Inversion:    00111110000100100111000110001111
          - Compressed Key:   01111000010111101101100100110010   [done by compression P-Box]
          - XOR with Key:     01000110010011001010100010111101

          - FUNCTION OUTPUT:  01000110010011001010100010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011011110001000100010110010

       - FUNCTION OUTPUT:          01000110010011001010100010111101

       - Left XOR FUNCTION OUTPUT: 01010101001101000010000000001111

       - Next Round Left 32 Bits:  10110010010001101110001100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101001101000010000000001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010010001101110001100100111

       - Right 32 Bits:            01010101001101000010000000001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101100101011110010011000100110010001100110111   [Subkey: 4]
          - Input Half:       01010101001101000010000000001111
          - S-Box Result:     10011001000101111110111111111011   [per every group of 4-bits]
          - Split Into Two:   1001100100010111 [L] 1110111111111011 [R]
          - Swap Halves:      11101111111110111001100100010111
          - Bit Inversion:    00010000000001000110011011101000
          - Compressed Key:   00011110010101100100110010011011   [done by compression P-Box]
          - XOR with Key:     00001110010100100010101001110011

          - FUNCTION OUTPUT:  00001110010100100010101001110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010010001101110001100100111

       - FUNCTION OUTPUT:          00001110010100100010101001110011

       - Left XOR FUNCTION OUTPUT: 10111100000101001100100101010100

       - Next Round Left 32 Bits:  01010101001101000010000000001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100000101001100100101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101001101000010000000001111

       - Right 32 Bits:            10111100000101001100100101010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101101001001101010000110110011101100110111001100100   [Subkey: 3]
          - Input Half:       10111100000101001100100101010100
          - S-Box Result:     10000101101001110101001110010111   [per every group of 4-bits]
          - Split Into Two:   1000010110100111 [L] 0101001110010111 [R]
          - Swap Halves:      01010011100101111000010110100111
          - Bit Inversion:    10101100011010000111101001011000
          - Compressed Key:   10010110010100110011011011001000   [done by compression P-Box]
          - XOR with Key:     00111010001110110100110010010000

          - FUNCTION OUTPUT:  00111010001110110100110010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101001101000010000000001111

       - FUNCTION OUTPUT:          00111010001110110100110010010000

       - Left XOR FUNCTION OUTPUT: 01101111000011110110110010011111

       - Next Round Left 32 Bits:  10111100000101001100100101010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111000011110110110010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100000101001100100101010100

       - Right 32 Bits:            01101111000011110110110010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001001001011011001010111100100110001001100100011001101   [Subkey: 2]
          - Input Half:       01101111000011110110110010011111
          - S-Box Result:     00001011111110110000010100111011   [per every group of 4-bits]
          - Split Into Two:   0000101111111011 [L] 0000010100111011 [R]
          - Swap Halves:      00000101001110110000101111111011
          - Bit Inversion:    11111010110001001111010000000100
          - Compressed Key:   10000111000111011001001100101110   [done by compression P-Box]
          - XOR with Key:     01111101110110010110011100101010

          - FUNCTION OUTPUT:  01111101110110010110011100101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100000101001100100101010100

       - FUNCTION OUTPUT:          01111101110110010110011100101010

       - Left XOR FUNCTION OUTPUT: 11000001110011011010111001111110

       - Next Round Left 32 Bits:  01101111000011110110110010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001110011011010111001111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111000011110110110010011111

       - Right 32 Bits:            11000001110011011010111001111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011011011010010011010100001101100111011001101110011001   [Subkey: 1]
          - Input Half:       11000001110011011010111001111110
          - S-Box Result:     01011010010101100100110011011100   [per every group of 4-bits]
          - Split Into Two:   0101101001010110 [L] 0100110011011100 [R]
          - Swap Halves:      01001100110111000101101001010110
          - Bit Inversion:    10110011001000111010010110101001
          - Compressed Key:   11100101100100001100100110110110   [done by compression P-Box]
          - XOR with Key:     01010110101100110110110000011111

          - FUNCTION OUTPUT:  01010110101100110110110000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111000011110110110010011111

       - FUNCTION OUTPUT:          01010110101100110110110000011111

       - Left XOR FUNCTION OUTPUT: 00111001101111000000000010000000

       - Next Round Left 32 Bits:  11000001110011011010111001111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001101111000000000010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011100110111100000000001000000011000001110011011010111001111110

 > Decrypted Block:     0011100110111100000000001000000011000001110011011010111001111110


!!!CBC: Previous Ciphertext:                             1011101101110111010110100101000110001111000110100010100110101000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1000001011001011010110101101000101001110110101111000011111010110

 > Final Processed Block:                                1000001011001011010110101101000101001110110101111000011111010110


FINAL PROCESSED DATA BLOCKS: 1101101110011001001110011110001101110111000000011001111110001111,0000100011111101101101000111100001110011100010000110100111000101,1100100111001111001010100110100001010100001100111011001111111111,1101111001010001101110001000010110101010001110100110110100110001,0011110111000000010011111001101011010101100110011110010111011110,1000001011001011010110101101000101001110110101111000011111010110,

BLOCKS IN ASCII:             Û?9ãw??ý´xs?iÅÉÏ*hT3³ÿÞQ¸?ª:m1=ÀO?Õ?åÞ?ËZÑN×?Ö

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: ntServe
In Binary:  01101110011101000101001101100101011100100111011001100101

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00100011000101110101100100110101000110110001001100110101
Subkey 2  : 10111001110100010100110110010101110010011101100110010101
Subkey 3  : 10001100010111010110010011010100011011000100110011010100
Subkey 4  : 11100111010001010011011001010111001001110110011001010110
Subkey 5  : 00110001011101011001001101010001101100010011001101010010
Subkey 6  : 10011101000101001101100101011100100111011001100101011011
Subkey 7  : 11000101110101100100110101000110110001001100110101001000
Subkey 8  : 01110100010100110110010101110010011101100110010101101110
Subkey 9  : 00010111010110010011010100011011000100110011010100100011
Subkey 10 : 11010001010011011001010111001001110110011001010110111001
Subkey 11 : 01011101011001001101010001101100010011001101010010001100
Subkey 12 : 01000101001101100101011100100111011001100101011011100111
Subkey 13 : 01110101100100110101000110110001001100110101001000110001
Subkey 14 : 00010100110110010101110010011101100110010101101110011101
Subkey 15 : 11010110010011010100011011000100110011010100100011000101
Subkey 16 : 01010011011001010111001001110110011001010110111001110100

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : Û?9ãw??ý´xs?iÅÉÏ*hT3³ÿÞQ¸?ª:m1=ÀO?Õ?åÞ?ËZÑN×?Ö

Data padded with spaces : Û?9ãw??ý´xs?iÅÉÏ*hT3³ÿÞQ¸?ª:m1=ÀO?Õ?åÞ?ËZÑN×?Ö[Padded with '0' spaces]

Data in ASCII           : 219,153,57,227,119,1,159,143,8,253,180,120,115,136,105,197,201,207,42,104,84,51,179,255,222,81,184,133,170,58,109,49,61,192,79,154,213,153,229,222,130,203,90,209,78,215,135,214,

Data in Binary          : 11011011,10011001,00111001,11100011,01110111,00000001,10011111,10001111,00001000,11111101,10110100,01111000,01110011,10001000,01101001,11000101,11001001,11001111,00101010,01101000,01010100,00110011,10110011,11111111,11011110,01010001,10111000,10000101,10101010,00111010,01101101,00110001,00111101,11000000,01001111,10011010,11010101,10011001,11100101,11011110,10000010,11001011,01011010,11010001,01001110,11010111,10000111,11010110,

Data in 64-bit Blocks   : 1101101110011001001110011110001101110111000000011001111110001111,0000100011111101101101000111100001110011100010000110100111000101,1100100111001111001010100110100001010100001100111011001111111111,1101111001010001101110001000010110101010001110100110110100110001,0011110111000000010011111001101011010101100110011110010111011110,1000001011001011010110101101000101001110110101111000011111010110,



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011000100110010001100110011010000110101001101100011011100111000)

Plaintext Block: 1:                                      1101101110011001001110011110001101110111000000011001111110001111

!!!CBC: Previous Ciphertext:                             0011000100110010001100110011010000110101001101100011011100111000

!!!CBC: Current Block XOR with Previous Ciphertext:      1110101010101011000010101101011101000010001101111010100010110111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010101010110000101011010111

       - Right 32 Bits:            01000010001101111010100010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011000101110101100100110101000110110001001100110101   [Subkey: 1]
          - Input Half:       01000010001101111010100010110111
          - S-Box Result:     01111110000111010100001010001101   [per every group of 4-bits]
          - Split Into Two:   0111111000011101 [L] 0100001010001101 [R]
          - Swap Halves:      01000010100011010111111000011101
          - Bit Inversion:    10111101011100101000000111100010
          - Compressed Key:   00101010011100110100110010011010   [done by compression P-Box]
          - XOR with Key:     10010111000000011100110101111000

          - FUNCTION OUTPUT:  10010111000000011100110101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010101010110000101011010111

       - FUNCTION OUTPUT:          10010111000000011100110101111000

       - Left XOR FUNCTION OUTPUT: 01111101101010101100011110101111

       - Next Round Left 32 Bits:  01000010001101111010100010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101101010101100011110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010001101111010100010110111

       - Right 32 Bits:            01111101101010101100011110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001110100010100110110010101110010011101100110010101   [Subkey: 2]
          - Input Half:       01111101101010101100011110101111
          - S-Box Result:     11010110010001000101110101001011   [per every group of 4-bits]
          - Split Into Two:   1101011001000100 [L] 0101110101001011 [R]
          - Swap Halves:      01011101010010111101011001000100
          - Bit Inversion:    10100010101101000010100110111011
          - Compressed Key:   11001000011001101101101100111010   [done by compression P-Box]
          - XOR with Key:     01101010110100101111001010000001

          - FUNCTION OUTPUT:  01101010110100101111001010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010001101111010100010110111

       - FUNCTION OUTPUT:          01101010110100101111001010000001

       - Left XOR FUNCTION OUTPUT: 00101000111001010101101000110110

       - Next Round Left 32 Bits:  01111101101010101100011110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000111001010101101000110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101101010101100011110101111

       - Right 32 Bits:            00101000111001010101101000110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100010111010110010011010100011011000100110011010100   [Subkey: 3]
          - Input Half:       00101000111001010101101000110110
          - S-Box Result:     11100010110010011001010000010000   [per every group of 4-bits]
          - Split Into Two:   1110001011001001 [L] 1001010000010000 [R]
          - Swap Halves:      10010100000100001110001011001001
          - Bit Inversion:    01101011111011110001110100110110
          - Compressed Key:   10011011110011100011001001101000   [done by compression P-Box]
          - XOR with Key:     11110000001000010010111101011110

          - FUNCTION OUTPUT:  11110000001000010010111101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101101010101100011110101111

       - FUNCTION OUTPUT:          11110000001000010010111101011110

       - Left XOR FUNCTION OUTPUT: 10001101100010111110100011110001

       - Next Round Left 32 Bits:  00101000111001010101101000110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101100010111110100011110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000111001010101101000110110

       - Right 32 Bits:            10001101100010111110100011110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111010001010011011001010111001001110110011001010110   [Subkey: 4]
          - Input Half:       10001101100010111110100011110001
          - S-Box Result:     00100110001010001100001010111010   [per every group of 4-bits]
          - Split Into Two:   0010011000101000 [L] 1100001010111010 [R]
          - Swap Halves:      11000010101110100010011000101000
          - Bit Inversion:    00111101010001011101100111010111
          - Compressed Key:   00110010100110100110111011001001   [done by compression P-Box]
          - XOR with Key:     00001111110111111011011100011110

          - FUNCTION OUTPUT:  00001111110111111011011100011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000111001010101101000110110

       - FUNCTION OUTPUT:          00001111110111111011011100011110

       - Left XOR FUNCTION OUTPUT: 00100111001110101110110100101000

       - Next Round Left 32 Bits:  10001101100010111110100011110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111001110101110110100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101100010111110100011110001

       - Right 32 Bits:            00100111001110101110110100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011101011001001101010001101100010011001101010010   [Subkey: 5]
          - Input Half:       00100111001110101110110100101000
          - S-Box Result:     11101101000101001100011011100010   [per every group of 4-bits]
          - Split Into Two:   1110110100010100 [L] 1100011011100010 [R]
          - Swap Halves:      11000110111000101110110100010100
          - Bit Inversion:    00111001000111010001001011101011
          - Compressed Key:   01001110000110101110100010010001   [done by compression P-Box]
          - XOR with Key:     01110111000001111111101001111010

          - FUNCTION OUTPUT:  01110111000001111111101001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101100010111110100011110001

       - FUNCTION OUTPUT:          01110111000001111111101001111010

       - Left XOR FUNCTION OUTPUT: 11111010100011000001001010001011

       - Next Round Left 32 Bits:  00100111001110101110110100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010100011000001001010001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111001110101110110100101000

       - Right 32 Bits:            11111010100011000001001010001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101000101001101100101011100100111011001100101011011   [Subkey: 6]
          - Input Half:       11111010100011000001001010001011
          - S-Box Result:     10110100001001011010111000101000   [per every group of 4-bits]
          - Split Into Two:   1011010000100101 [L] 1010111000101000 [R]
          - Swap Halves:      10101110001010001011010000100101
          - Bit Inversion:    01010001110101110100101111011010
          - Compressed Key:   11011010011110101000100100010111   [done by compression P-Box]
          - XOR with Key:     10001011101011011100001011001101

          - FUNCTION OUTPUT:  10001011101011011100001011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111001110101110110100101000

       - FUNCTION OUTPUT:          10001011101011011100001011001101

       - Left XOR FUNCTION OUTPUT: 10101100100101110010111111100101

       - Next Round Left 32 Bits:  11111010100011000001001010001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100100101110010111111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010100011000001001010001011

       - Right 32 Bits:            10101100100101110010111111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000101110101100100110101000110110001001100110101001000   [Subkey: 7]
          - Input Half:       10101100100101110010111111100101
          - S-Box Result:     01000101001111011110101111001001   [per every group of 4-bits]
          - Split Into Two:   0100010100111101 [L] 1110101111001001 [R]
          - Swap Halves:      11101011110010010100010100111101
          - Bit Inversion:    00010100001101101011101011000010
          - Compressed Key:   00011010011010001001001101010100   [done by compression P-Box]
          - XOR with Key:     00001110010111100010100110010110

          - FUNCTION OUTPUT:  00001110010111100010100110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010100011000001001010001011

       - FUNCTION OUTPUT:          00001110010111100010100110010110

       - Left XOR FUNCTION OUTPUT: 11110100110100100011101100011101

       - Next Round Left 32 Bits:  10101100100101110010111111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110100110100100011101100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100100101110010111111100101

       - Right 32 Bits:            11110100110100100011101100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010100110110010101110010011101100110010101101110   [Subkey: 8]
          - Input Half:       11110100110100100011101100011101
          - S-Box Result:     10110111011011100001100010100110   [per every group of 4-bits]
          - Split Into Two:   1011011101101110 [L] 0001100010100110 [R]
          - Swap Halves:      00011000101001101011011101101110
          - Bit Inversion:    11100111010110010100100010010001
          - Compressed Key:   01011000110010110011011001011101   [done by compression P-Box]
          - XOR with Key:     10111111100100100111111011001100

          - FUNCTION OUTPUT:  10111111100100100111111011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100100101110010111111100101

       - FUNCTION OUTPUT:          10111111100100100111111011001100

       - Left XOR FUNCTION OUTPUT: 00010011000001010101000100101001

       - Next Round Left 32 Bits:  11110100110100100011101100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011000001010101000100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110100110100100011101100011101

       - Right 32 Bits:            00010011000001010101000100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111010110010011010100011011000100110011010100100011   [Subkey: 9]
          - Input Half:       00010011000001010101000100101001
          - S-Box Result:     10100001111110011001101011100011   [per every group of 4-bits]
          - Split Into Two:   1010000111111001 [L] 1001101011100011 [R]
          - Swap Halves:      10011010111000111010000111111001
          - Bit Inversion:    01100101000111000101111000000110
          - Compressed Key:   01111001100100100100110001010011   [done by compression P-Box]
          - XOR with Key:     00011100100011100001001001010101

          - FUNCTION OUTPUT:  00011100100011100001001001010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110100110100100011101100011101

       - FUNCTION OUTPUT:          00011100100011100001001001010101

       - Left XOR FUNCTION OUTPUT: 11101000010111000010100101001000

       - Next Round Left 32 Bits:  00010011000001010101000100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000010111000010100101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011000001010101000100101001

       - Right 32 Bits:            11101000010111000010100101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001010011011001010111001001110110011001010110111001   [Subkey: 10]
          - Input Half:       11101000010111000010100101001000
          - S-Box Result:     11000010100101011110001101110010   [per every group of 4-bits]
          - Split Into Two:   1100001010010101 [L] 1110001101110010 [R]
          - Swap Halves:      11100011011100101100001010010101
          - Bit Inversion:    00011100100011010011110101101010
          - Compressed Key:   01000011000111001101100101110110   [done by compression P-Box]
          - XOR with Key:     01011111100100011110010000011100

          - FUNCTION OUTPUT:  01011111100100011110010000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011000001010101000100101001

       - FUNCTION OUTPUT:          01011111100100011110010000011100

       - Left XOR FUNCTION OUTPUT: 01001100100101001011010100110101

       - Next Round Left 32 Bits:  11101000010111000010100101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100100101001011010100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000010111000010100101001000

       - Right 32 Bits:            01001100100101001011010100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101011001001101010001101100010011001101010010001100   [Subkey: 11]
          - Input Half:       01001100100101001011010100110101
          - S-Box Result:     01110101001101111000100100011001   [per every group of 4-bits]
          - Split Into Two:   0111010100110111 [L] 1000100100011001 [R]
          - Swap Halves:      10001001000110010111010100110111
          - Bit Inversion:    01110110111001101000101011001000
          - Compressed Key:   11010110010110010001001101101100   [done by compression P-Box]
          - XOR with Key:     10100000101111111001100110100100

          - FUNCTION OUTPUT:  10100000101111111001100110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000010111000010100101001000

       - FUNCTION OUTPUT:          10100000101111111001100110100100

       - Left XOR FUNCTION OUTPUT: 01001000111000111011000011101100

       - Next Round Left 32 Bits:  01001100100101001011010100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000111000111011000011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100100101001011010100110101

       - Right 32 Bits:            01001000111000111011000011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101100101011100100111011001100101011011100111   [Subkey: 12]
          - Input Half:       01001000111000111011000011101100
          - S-Box Result:     01110010110000011000111111000101   [per every group of 4-bits]
          - Split Into Two:   0111001011000001 [L] 1000111111000101 [R]
          - Swap Halves:      10001111110001010111001011000001
          - Bit Inversion:    01110000001110101000110100111110
          - Compressed Key:   00011110010100010111011011101011   [done by compression P-Box]
          - XOR with Key:     01101110011010111111101111010101

          - FUNCTION OUTPUT:  01101110011010111111101111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100100101001011010100110101

       - FUNCTION OUTPUT:          01101110011010111111101111010101

       - Left XOR FUNCTION OUTPUT: 00100010111111110100111011100000

       - Next Round Left 32 Bits:  01001000111000111011000011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010111111110100111011100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000111000111011000011101100

       - Right 32 Bits:            00100010111111110100111011100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101100100110101000110110001001100110101001000110001   [Subkey: 13]
          - Input Half:       00100010111111110100111011100000
          - S-Box Result:     11101110101110110111110011001111   [per every group of 4-bits]
          - Split Into Two:   1110111010111011 [L] 0111110011001111 [R]
          - Swap Halves:      01111100110011111110111010111011
          - Bit Inversion:    10000011001100000001000101000100
          - Compressed Key:   01011000010101110110111010000010   [done by compression P-Box]
          - XOR with Key:     11011011011001110111111111000110

          - FUNCTION OUTPUT:  11011011011001110111111111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000111000111011000011101100

       - FUNCTION OUTPUT:          11011011011001110111111111000110

       - Left XOR FUNCTION OUTPUT: 10010011100001001100111100101010

       - Next Round Left 32 Bits:  00100010111111110100111011100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011100001001100111100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010111111110100111011100000

       - Right 32 Bits:            10010011100001001100111100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110110010101110010011101100110010101101110011101   [Subkey: 14]
          - Input Half:       10010011100001001100111100101010
          - S-Box Result:     00110001001001110101101111100100   [per every group of 4-bits]
          - Split Into Two:   0011000100100111 [L] 0101101111100100 [R]
          - Swap Halves:      01011011111001000011000100100111
          - Bit Inversion:    10100100000110111100111011011000
          - Compressed Key:   01011001011101101100101010111110   [done by compression P-Box]
          - XOR with Key:     11111101011011010000010001100110

          - FUNCTION OUTPUT:  11111101011011010000010001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010111111110100111011100000

       - FUNCTION OUTPUT:          11111101011011010000010001100110

       - Left XOR FUNCTION OUTPUT: 11011111100100100100101010000110

       - Next Round Left 32 Bits:  10010011100001001100111100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111100100100100101010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011100001001100111100101010

       - Right 32 Bits:            11011111100100100100101010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010011010100011011000100110011010100100011000101   [Subkey: 15]
          - Input Half:       11011111100100100100101010000110
          - S-Box Result:     01101011001111100111010000100000   [per every group of 4-bits]
          - Split Into Two:   0110101100111110 [L] 0111010000100000 [R]
          - Swap Halves:      01110100001000000110101100111110
          - Bit Inversion:    10001011110111111001010011000001
          - Compressed Key:   01110011010011001001101000101010   [done by compression P-Box]
          - XOR with Key:     11111000100100110000111011101011

          - FUNCTION OUTPUT:  11111000100100110000111011101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011100001001100111100101010

       - FUNCTION OUTPUT:          11111000100100110000111011101011

       - Left XOR FUNCTION OUTPUT: 01101011000101111100000111000001

       - Next Round Left 32 Bits:  11011111100100100100101010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011000101111100000111000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111100100100100101010000110

       - Right 32 Bits:            01101011000101111100000111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011011001010111001001110110011001010110111001110100   [Subkey: 16]
          - Input Half:       01101011000101111100000111000001
          - S-Box Result:     00001000101011010101101001011010   [per every group of 4-bits]
          - Split Into Two:   0000100010101101 [L] 0101101001011010 [R]
          - Swap Halves:      01011010010110100000100010101101
          - Bit Inversion:    10100101101001011111011101010010
          - Compressed Key:   01100110110110110011101011001000   [done by compression P-Box]
          - XOR with Key:     11000011011111101100110110011010

          - FUNCTION OUTPUT:  11000011011111101100110110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111100100100100101010000110

       - FUNCTION OUTPUT:          11000011011111101100110110011010

       - Left XOR FUNCTION OUTPUT: 00011100111011001000011100011100

       - Next Round Left 32 Bits:  01101011000101111100000111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100111011001000011100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001110011101100100001110001110001101011000101111100000111000001

 > Processed Block:     0001110011101100100001110001110001101011000101111100000111000001



Plaintext Block: 2:                                      0000100011111101101101000111100001110011100010000110100111000101

!!!CBC: Previous Ciphertext:                             0001110011101100100001110001110001101011000101111100000111000001

!!!CBC: Current Block XOR with Previous Ciphertext:      0001010000010001001100110110010000011000100111111010100000000100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010100000100010011001101100100

       - Right 32 Bits:            00011000100111111010100000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011000101110101100100110101000110110001001100110101   [Subkey: 1]
          - Input Half:       00011000100111111010100000000100
          - S-Box Result:     10100010001110110100001011110111   [per every group of 4-bits]
          - Split Into Two:   1010001000111011 [L] 0100001011110111 [R]
          - Swap Halves:      01000010111101111010001000111011
          - Bit Inversion:    10111101000010000101110111000100
          - Compressed Key:   00101010011100110100110010011010   [done by compression P-Box]
          - XOR with Key:     10010111011110110001000101011110

          - FUNCTION OUTPUT:  10010111011110110001000101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010100000100010011001101100100

       - FUNCTION OUTPUT:          10010111011110110001000101011110

       - Left XOR FUNCTION OUTPUT: 10000011011010100010001000111010

       - Next Round Left 32 Bits:  00011000100111111010100000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011011010100010001000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000100111111010100000000100

       - Right 32 Bits:            10000011011010100010001000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001110100010100110110010101110010011101100110010101   [Subkey: 2]
          - Input Half:       10000011011010100010001000111010
          - S-Box Result:     00100001000001001110111000010100   [per every group of 4-bits]
          - Split Into Two:   0010000100000100 [L] 1110111000010100 [R]
          - Swap Halves:      11101110000101000010000100000100
          - Bit Inversion:    00010001111010111101111011111011
          - Compressed Key:   11001000011001101101101100111010   [done by compression P-Box]
          - XOR with Key:     11011001100011010000010111000001

          - FUNCTION OUTPUT:  11011001100011010000010111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000100111111010100000000100

       - FUNCTION OUTPUT:          11011001100011010000010111000001

       - Left XOR FUNCTION OUTPUT: 11000001000100101010110111000101

       - Next Round Left 32 Bits:  10000011011010100010001000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001000100101010110111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011011010100010001000111010

       - Right 32 Bits:            11000001000100101010110111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100010111010110010011010100011011000100110011010100   [Subkey: 3]
          - Input Half:       11000001000100101010110111000101
          - S-Box Result:     01011010101011100100011001011001   [per every group of 4-bits]
          - Split Into Two:   0101101010101110 [L] 0100011001011001 [R]
          - Swap Halves:      01000110010110010101101010101110
          - Bit Inversion:    10111001101001101010010101010001
          - Compressed Key:   10011011110011100011001001101000   [done by compression P-Box]
          - XOR with Key:     00100010011010001001011100111001

          - FUNCTION OUTPUT:  00100010011010001001011100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011011010100010001000111010

       - FUNCTION OUTPUT:          00100010011010001001011100111001

       - Left XOR FUNCTION OUTPUT: 10100001000000101011010100000011

       - Next Round Left 32 Bits:  11000001000100101010110111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001000000101011010100000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001000100101010110111000101

       - Right 32 Bits:            10100001000000101011010100000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111010001010011011001010111001001110110011001010110   [Subkey: 4]
          - Input Half:       10100001000000101011010100000011
          - S-Box Result:     01001010111111101000100111110001   [per every group of 4-bits]
          - Split Into Two:   0100101011111110 [L] 1000100111110001 [R]
          - Swap Halves:      10001001111100010100101011111110
          - Bit Inversion:    01110110000011101011010100000001
          - Compressed Key:   00110010100110100110111011001001   [done by compression P-Box]
          - XOR with Key:     01000100100101001101101111001000

          - FUNCTION OUTPUT:  01000100100101001101101111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001000100101010110111000101

       - FUNCTION OUTPUT:          01000100100101001101101111001000

       - Left XOR FUNCTION OUTPUT: 10000101100001100111011000001101

       - Next Round Left 32 Bits:  10100001000000101011010100000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101100001100111011000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001000000101011010100000011

       - Right 32 Bits:            10000101100001100111011000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011101011001001101010001101100010011001101010010   [Subkey: 5]
          - Input Half:       10000101100001100111011000001101
          - S-Box Result:     00101001001000001101000011110110   [per every group of 4-bits]
          - Split Into Two:   0010100100100000 [L] 1101000011110110 [R]
          - Swap Halves:      11010000111101100010100100100000
          - Bit Inversion:    00101111000010011101011011011111
          - Compressed Key:   01001110000110101110100010010001   [done by compression P-Box]
          - XOR with Key:     01100001000100110011111001001110

          - FUNCTION OUTPUT:  01100001000100110011111001001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001000000101011010100000011

       - FUNCTION OUTPUT:          01100001000100110011111001001110

       - Left XOR FUNCTION OUTPUT: 11000000000100011000101101001101

       - Next Round Left 32 Bits:  10000101100001100111011000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000000100011000101101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101100001100111011000001101

       - Right 32 Bits:            11000000000100011000101101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101000101001101100101011100100111011001100101011011   [Subkey: 6]
          - Input Half:       11000000000100011000101101001101
          - S-Box Result:     01011111101010100010100001110110   [per every group of 4-bits]
          - Split Into Two:   0101111110101010 [L] 0010100001110110 [R]
          - Swap Halves:      00101000011101100101111110101010
          - Bit Inversion:    11010111100010011010000001010101
          - Compressed Key:   11011010011110101000100100010111   [done by compression P-Box]
          - XOR with Key:     00001101111100110010100101000010

          - FUNCTION OUTPUT:  00001101111100110010100101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101100001100111011000001101

       - FUNCTION OUTPUT:          00001101111100110010100101000010

       - Left XOR FUNCTION OUTPUT: 10001000011101010101111101001111

       - Next Round Left 32 Bits:  11000000000100011000101101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000011101010101111101001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000000100011000101101001101

       - Right 32 Bits:            10001000011101010101111101001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000101110101100100110101000110110001001100110101001000   [Subkey: 7]
          - Input Half:       10001000011101010101111101001111
          - S-Box Result:     00100010110110011001101101111011   [per every group of 4-bits]
          - Split Into Two:   0010001011011001 [L] 1001101101111011 [R]
          - Swap Halves:      10011011011110110010001011011001
          - Bit Inversion:    01100100100001001101110100100110
          - Compressed Key:   00011010011010001001001101010100   [done by compression P-Box]
          - XOR with Key:     01111110111011000100111001110010

          - FUNCTION OUTPUT:  01111110111011000100111001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000000100011000101101001101

       - FUNCTION OUTPUT:          01111110111011000100111001110010

       - Left XOR FUNCTION OUTPUT: 10111110111111011100010100111111

       - Next Round Left 32 Bits:  10001000011101010101111101001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110111111011100010100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000011101010101111101001111

       - Right 32 Bits:            10111110111111011100010100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010100110110010101110010011101100110010101101110   [Subkey: 8]
          - Input Half:       10111110111111011100010100111111
          - S-Box Result:     10001100101101100101100100011011   [per every group of 4-bits]
          - Split Into Two:   1000110010110110 [L] 0101100100011011 [R]
          - Swap Halves:      01011001000110111000110010110110
          - Bit Inversion:    10100110111001000111001101001001
          - Compressed Key:   01011000110010110011011001011101   [done by compression P-Box]
          - XOR with Key:     11111110001011110100010100010100

          - FUNCTION OUTPUT:  11111110001011110100010100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000011101010101111101001111

       - FUNCTION OUTPUT:          11111110001011110100010100010100

       - Left XOR FUNCTION OUTPUT: 01110110010110100001101001011011

       - Next Round Left 32 Bits:  10111110111111011100010100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110010110100001101001011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110111111011100010100111111

       - Right 32 Bits:            01110110010110100001101001011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111010110010011010100011011000100110011010100100011   [Subkey: 9]
          - Input Half:       01110110010110100001101001011011
          - S-Box Result:     11010000100101001010010010011000   [per every group of 4-bits]
          - Split Into Two:   1101000010010100 [L] 1010010010011000 [R]
          - Swap Halves:      10100100100110001101000010010100
          - Bit Inversion:    01011011011001110010111101101011
          - Compressed Key:   01111001100100100100110001010011   [done by compression P-Box]
          - XOR with Key:     00100010111101010110001100111000

          - FUNCTION OUTPUT:  00100010111101010110001100111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110111111011100010100111111

       - FUNCTION OUTPUT:          00100010111101010110001100111000

       - Left XOR FUNCTION OUTPUT: 10011100000010001010011000000111

       - Next Round Left 32 Bits:  01110110010110100001101001011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100000010001010011000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110010110100001101001011011

       - Right 32 Bits:            10011100000010001010011000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001010011011001010111001001110110011001010110111001   [Subkey: 10]
          - Input Half:       10011100000010001010011000000111
          - S-Box Result:     00110101111100100100000011111101   [per every group of 4-bits]
          - Split Into Two:   0011010111110010 [L] 0100000011111101 [R]
          - Swap Halves:      01000000111111010011010111110010
          - Bit Inversion:    10111111000000101100101000001101
          - Compressed Key:   01000011000111001101100101110110   [done by compression P-Box]
          - XOR with Key:     11111100000111100001001101111011

          - FUNCTION OUTPUT:  11111100000111100001001101111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110010110100001101001011011

       - FUNCTION OUTPUT:          11111100000111100001001101111011

       - Left XOR FUNCTION OUTPUT: 10001010010001000000100100100000

       - Next Round Left 32 Bits:  10011100000010001010011000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010010001000000100100100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100000010001010011000000111

       - Right 32 Bits:            10001010010001000000100100100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101011001001101010001101100010011001101010010001100   [Subkey: 11]
          - Input Half:       10001010010001000000100100100000
          - S-Box Result:     00100100011101111111001111101111   [per every group of 4-bits]
          - Split Into Two:   0010010001110111 [L] 1111001111101111 [R]
          - Swap Halves:      11110011111011110010010001110111
          - Bit Inversion:    00001100000100001101101110001000
          - Compressed Key:   11010110010110010001001101101100   [done by compression P-Box]
          - XOR with Key:     11011010010010011100100011100100

          - FUNCTION OUTPUT:  11011010010010011100100011100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100000010001010011000000111

       - FUNCTION OUTPUT:          11011010010010011100100011100100

       - Left XOR FUNCTION OUTPUT: 01000110010000010110111011100011

       - Next Round Left 32 Bits:  10001010010001000000100100100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110010000010110111011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010010001000000100100100000

       - Right 32 Bits:            01000110010000010110111011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101100101011100100111011001100101011011100111   [Subkey: 12]
          - Input Half:       01000110010000010110111011100011
          - S-Box Result:     01110000011110100000110011000001   [per every group of 4-bits]
          - Split Into Two:   0111000001111010 [L] 0000110011000001 [R]
          - Swap Halves:      00001100110000010111000001111010
          - Bit Inversion:    11110011001111101000111110000101
          - Compressed Key:   00011110010100010111011011101011   [done by compression P-Box]
          - XOR with Key:     11101101011011111111100101101110

          - FUNCTION OUTPUT:  11101101011011111111100101101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010010001000000100100100000

       - FUNCTION OUTPUT:          11101101011011111111100101101110

       - Left XOR FUNCTION OUTPUT: 01100111001010111111000001001110

       - Next Round Left 32 Bits:  01000110010000010110111011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111001010111111000001001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110010000010110111011100011

       - Right 32 Bits:            01100111001010111111000001001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101100100110101000110110001001100110101001000110001   [Subkey: 13]
          - Input Half:       01100111001010111111000001001110
          - S-Box Result:     00001101111010001011111101111100   [per every group of 4-bits]
          - Split Into Two:   0000110111101000 [L] 1011111101111100 [R]
          - Swap Halves:      10111111011111000000110111101000
          - Bit Inversion:    01000000100000111111001000010111
          - Compressed Key:   01011000010101110110111010000010   [done by compression P-Box]
          - XOR with Key:     00011000110101001001110010010101

          - FUNCTION OUTPUT:  00011000110101001001110010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110010000010110111011100011

       - FUNCTION OUTPUT:          00011000110101001001110010010101

       - Left XOR FUNCTION OUTPUT: 01011110100101011111001001110110

       - Next Round Left 32 Bits:  01100111001010111111000001001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100101011111001001110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111001010111111000001001110

       - Right 32 Bits:            01011110100101011111001001110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110110010101110010011101100110010101101110011101   [Subkey: 14]
          - Input Half:       01011110100101011111001001110110
          - S-Box Result:     10011100001110011011111011010000   [per every group of 4-bits]
          - Split Into Two:   1001110000111001 [L] 1011111011010000 [R]
          - Swap Halves:      10111110110100001001110000111001
          - Bit Inversion:    01000001001011110110001111000110
          - Compressed Key:   01011001011101101100101010111110   [done by compression P-Box]
          - XOR with Key:     00011000010110011010100101111000

          - FUNCTION OUTPUT:  00011000010110011010100101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111001010111111000001001110

       - FUNCTION OUTPUT:          00011000010110011010100101111000

       - Left XOR FUNCTION OUTPUT: 01111111011100100101100100110110

       - Next Round Left 32 Bits:  01011110100101011111001001110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111011100100101100100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100101011111001001110110

       - Right 32 Bits:            01111111011100100101100100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010011010100011011000100110011010100100011000101   [Subkey: 15]
          - Input Half:       01111111011100100101100100110110
          - S-Box Result:     11011011110111101001001100010000   [per every group of 4-bits]
          - Split Into Two:   1101101111011110 [L] 1001001100010000 [R]
          - Swap Halves:      10010011000100001101101111011110
          - Bit Inversion:    01101100111011110010010000100001
          - Compressed Key:   01110011010011001001101000101010   [done by compression P-Box]
          - XOR with Key:     00011111101000111011111000001011

          - FUNCTION OUTPUT:  00011111101000111011111000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100101011111001001110110

       - FUNCTION OUTPUT:          00011111101000111011111000001011

       - Left XOR FUNCTION OUTPUT: 01000001001101100100110001111101

       - Next Round Left 32 Bits:  01111111011100100101100100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001001101100100110001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111011100100101100100110110

       - Right 32 Bits:            01000001001101100100110001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011011001010111001001110110011001010110111001110100   [Subkey: 16]
          - Input Half:       01000001001101100100110001111101
          - S-Box Result:     01111010000100000111010111010110   [per every group of 4-bits]
          - Split Into Two:   0111101000010000 [L] 0111010111010110 [R]
          - Swap Halves:      01110101110101100111101000010000
          - Bit Inversion:    10001010001010011000010111101111
          - Compressed Key:   01100110110110110011101011001000   [done by compression P-Box]
          - XOR with Key:     11101100111100101011111100100111

          - FUNCTION OUTPUT:  11101100111100101011111100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111011100100101100100110110

       - FUNCTION OUTPUT:          11101100111100101011111100100111

       - Left XOR FUNCTION OUTPUT: 10010011100000001110011000010001

       - Next Round Left 32 Bits:  01000001001101100100110001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011100000001110011000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001001110000000111001100001000101000001001101100100110001111101

 > Processed Block:     1001001110000000111001100001000101000001001101100100110001111101



Plaintext Block: 3:                                      1100100111001111001010100110100001010100001100111011001111111111

!!!CBC: Previous Ciphertext:                             1001001110000000111001100001000101000001001101100100110001111101

!!!CBC: Current Block XOR with Previous Ciphertext:      0101101001001111110011000111100100010101000001011111111110000010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010010011111100110001111001

       - Right 32 Bits:            00010101000001011111111110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011000101110101100100110101000110110001001100110101   [Subkey: 1]
          - Input Half:       00010101000001011111111110000010
          - S-Box Result:     10101001111110011011101100101110   [per every group of 4-bits]
          - Split Into Two:   1010100111111001 [L] 1011101100101110 [R]
          - Swap Halves:      10111011001011101010100111111001
          - Bit Inversion:    01000100110100010101011000000110
          - Compressed Key:   00101010011100110100110010011010   [done by compression P-Box]
          - XOR with Key:     01101110101000100001101010011100

          - FUNCTION OUTPUT:  01101110101000100001101010011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010010011111100110001111001

       - FUNCTION OUTPUT:          01101110101000100001101010011100

       - Left XOR FUNCTION OUTPUT: 00110100111011011101011011100101

       - Next Round Left 32 Bits:  00010101000001011111111110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100111011011101011011100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010101000001011111111110000010

       - Right 32 Bits:            00110100111011011101011011100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001110100010100110110010101110010011101100110010101   [Subkey: 2]
          - Input Half:       00110100111011011101011011100101
          - S-Box Result:     00010111110001100110000011001001   [per every group of 4-bits]
          - Split Into Two:   0001011111000110 [L] 0110000011001001 [R]
          - Swap Halves:      01100000110010010001011111000110
          - Bit Inversion:    10011111001101101110100000111001
          - Compressed Key:   11001000011001101101101100111010   [done by compression P-Box]
          - XOR with Key:     01010111010100000011001100000011

          - FUNCTION OUTPUT:  01010111010100000011001100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010101000001011111111110000010

       - FUNCTION OUTPUT:          01010111010100000011001100000011

       - Left XOR FUNCTION OUTPUT: 01000010010101011100110010000001

       - Next Round Left 32 Bits:  00110100111011011101011011100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010010101011100110010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100111011011101011011100101

       - Right 32 Bits:            01000010010101011100110010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100010111010110010011010100011011000100110011010100   [Subkey: 3]
          - Input Half:       01000010010101011100110010000001
          - S-Box Result:     01111110100110010101010100101010   [per every group of 4-bits]
          - Split Into Two:   0111111010011001 [L] 0101010100101010 [R]
          - Swap Halves:      01010101001010100111111010011001
          - Bit Inversion:    10101010110101011000000101100110
          - Compressed Key:   10011011110011100011001001101000   [done by compression P-Box]
          - XOR with Key:     00110001000110111011001100001110

          - FUNCTION OUTPUT:  00110001000110111011001100001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100111011011101011011100101

       - FUNCTION OUTPUT:          00110001000110111011001100001110

       - Left XOR FUNCTION OUTPUT: 00000101111101100110010111101011

       - Next Round Left 32 Bits:  01000010010101011100110010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000101111101100110010111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010010101011100110010000001

       - Right 32 Bits:            00000101111101100110010111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111010001010011011001010111001001110110011001010110   [Subkey: 4]
          - Input Half:       00000101111101100110010111101011
          - S-Box Result:     11111001101100000000100111001000   [per every group of 4-bits]
          - Split Into Two:   1111100110110000 [L] 0000100111001000 [R]
          - Swap Halves:      00001001110010001111100110110000
          - Bit Inversion:    11110110001101110000011001001111
          - Compressed Key:   00110010100110100110111011001001   [done by compression P-Box]
          - XOR with Key:     11000100101011010110100010000110

          - FUNCTION OUTPUT:  11000100101011010110100010000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010010101011100110010000001

       - FUNCTION OUTPUT:          11000100101011010110100010000110

       - Left XOR FUNCTION OUTPUT: 10000110111110001010010000000111

       - Next Round Left 32 Bits:  00000101111101100110010111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110111110001010010000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000101111101100110010111101011

       - Right 32 Bits:            10000110111110001010010000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011101011001001101010001101100010011001101010010   [Subkey: 5]
          - Input Half:       10000110111110001010010000000111
          - S-Box Result:     00100000101100100100011111111101   [per every group of 4-bits]
          - Split Into Two:   0010000010110010 [L] 0100011111111101 [R]
          - Swap Halves:      01000111111111010010000010110010
          - Bit Inversion:    10111000000000101101111101001101
          - Compressed Key:   01001110000110101110100010010001   [done by compression P-Box]
          - XOR with Key:     11110110000110000011011111011100

          - FUNCTION OUTPUT:  11110110000110000011011111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000101111101100110010111101011

       - FUNCTION OUTPUT:          11110110000110000011011111011100

       - Left XOR FUNCTION OUTPUT: 11110011111011100101001000110111

       - Next Round Left 32 Bits:  10000110111110001010010000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011111011100101001000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110111110001010010000000111

       - Right 32 Bits:            11110011111011100101001000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101000101001101100101011100100111011001100101011011   [Subkey: 6]
          - Input Half:       11110011111011100101001000110111
          - S-Box Result:     10110001110011001001111000011101   [per every group of 4-bits]
          - Split Into Two:   1011000111001100 [L] 1001111000011101 [R]
          - Swap Halves:      10011110000111011011000111001100
          - Bit Inversion:    01100001111000100100111000110011
          - Compressed Key:   11011010011110101000100100010111   [done by compression P-Box]
          - XOR with Key:     10111011100110001100011100100100

          - FUNCTION OUTPUT:  10111011100110001100011100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110111110001010010000000111

       - FUNCTION OUTPUT:          10111011100110001100011100100100

       - Left XOR FUNCTION OUTPUT: 00111101011000000110001100100011

       - Next Round Left 32 Bits:  11110011111011100101001000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101011000000110001100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011111011100101001000110111

       - Right 32 Bits:            00111101011000000110001100100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000101110101100100110101000110110001001100110101001000   [Subkey: 7]
          - Input Half:       00111101011000000110001100100011
          - S-Box Result:     00010110000011110000000111100001   [per every group of 4-bits]
          - Split Into Two:   0001011000001111 [L] 0000000111100001 [R]
          - Swap Halves:      00000001111000010001011000001111
          - Bit Inversion:    11111110000111101110100111110000
          - Compressed Key:   00011010011010001001001101010100   [done by compression P-Box]
          - XOR with Key:     11100100011101100111101010100100

          - FUNCTION OUTPUT:  11100100011101100111101010100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011111011100101001000110111

       - FUNCTION OUTPUT:          11100100011101100111101010100100

       - Left XOR FUNCTION OUTPUT: 00010111100110000010100010010011

       - Next Round Left 32 Bits:  00111101011000000110001100100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111100110000010100010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101011000000110001100100011

       - Right 32 Bits:            00010111100110000010100010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010100110110010101110010011101100110010101101110   [Subkey: 8]
          - Input Half:       00010111100110000010100010010011
          - S-Box Result:     10101101001100101110001000110001   [per every group of 4-bits]
          - Split Into Two:   1010110100110010 [L] 1110001000110001 [R]
          - Swap Halves:      11100010001100011010110100110010
          - Bit Inversion:    00011101110011100101001011001101
          - Compressed Key:   01011000110010110011011001011101   [done by compression P-Box]
          - XOR with Key:     01000101000001010110010010010000

          - FUNCTION OUTPUT:  01000101000001010110010010010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101011000000110001100100011

       - FUNCTION OUTPUT:          01000101000001010110010010010000

       - Left XOR FUNCTION OUTPUT: 01111000011001010000011110110011

       - Next Round Left 32 Bits:  00010111100110000010100010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000011001010000011110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111100110000010100010010011

       - Right 32 Bits:            01111000011001010000011110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111010110010011010100011011000100110011010100100011   [Subkey: 9]
          - Input Half:       01111000011001010000011110110011
          - S-Box Result:     11010010000010011111110110000001   [per every group of 4-bits]
          - Split Into Two:   1101001000001001 [L] 1111110110000001 [R]
          - Swap Halves:      11111101100000011101001000001001
          - Bit Inversion:    00000010011111100010110111110110
          - Compressed Key:   01111001100100100100110001010011   [done by compression P-Box]
          - XOR with Key:     01111011111011000110000110100101

          - FUNCTION OUTPUT:  01111011111011000110000110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111100110000010100010010011

       - FUNCTION OUTPUT:          01111011111011000110000110100101

       - Left XOR FUNCTION OUTPUT: 01101100011101000100100100110110

       - Next Round Left 32 Bits:  01111000011001010000011110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100011101000100100100110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000011001010000011110110011

       - Right 32 Bits:            01101100011101000100100100110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001010011011001010111001001110110011001010110111001   [Subkey: 10]
          - Input Half:       01101100011101000100100100110110
          - S-Box Result:     00000101110101110111001100010000   [per every group of 4-bits]
          - Split Into Two:   0000010111010111 [L] 0111001100010000 [R]
          - Swap Halves:      01110011000100000000010111010111
          - Bit Inversion:    10001100111011111111101000101000
          - Compressed Key:   01000011000111001101100101110110   [done by compression P-Box]
          - XOR with Key:     11001111111100110010001101011110

          - FUNCTION OUTPUT:  11001111111100110010001101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000011001010000011110110011

       - FUNCTION OUTPUT:          11001111111100110010001101011110

       - Left XOR FUNCTION OUTPUT: 10110111100101100010010011101101

       - Next Round Left 32 Bits:  01101100011101000100100100110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111100101100010010011101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100011101000100100100110110

       - Right 32 Bits:            10110111100101100010010011101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101011001001101010001101100010011001101010010001100   [Subkey: 11]
          - Input Half:       10110111100101100010010011101101
          - S-Box Result:     10001101001100001110011111000110   [per every group of 4-bits]
          - Split Into Two:   1000110100110000 [L] 1110011111000110 [R]
          - Swap Halves:      11100111110001101000110100110000
          - Bit Inversion:    00011000001110010111001011001111
          - Compressed Key:   11010110010110010001001101101100   [done by compression P-Box]
          - XOR with Key:     11001110011000000110000110100011

          - FUNCTION OUTPUT:  11001110011000000110000110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100011101000100100100110110

       - FUNCTION OUTPUT:          11001110011000000110000110100011

       - Left XOR FUNCTION OUTPUT: 10100010000101000010100010010101

       - Next Round Left 32 Bits:  10110111100101100010010011101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010000101000010100010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111100101100010010011101101

       - Right 32 Bits:            10100010000101000010100010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101100101011100100111011001100101011011100111   [Subkey: 12]
          - Input Half:       10100010000101000010100010010101
          - S-Box Result:     01001110101001111110001000111001   [per every group of 4-bits]
          - Split Into Two:   0100111010100111 [L] 1110001000111001 [R]
          - Swap Halves:      11100010001110010100111010100111
          - Bit Inversion:    00011101110001101011000101011000
          - Compressed Key:   00011110010100010111011011101011   [done by compression P-Box]
          - XOR with Key:     00000011100101111100011110110011

          - FUNCTION OUTPUT:  00000011100101111100011110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111100101100010010011101101

       - FUNCTION OUTPUT:          00000011100101111100011110110011

       - Left XOR FUNCTION OUTPUT: 10110100000000011110001101011110

       - Next Round Left 32 Bits:  10100010000101000010100010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100000000011110001101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010000101000010100010010101

       - Right 32 Bits:            10110100000000011110001101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101100100110101000110110001001100110101001000110001   [Subkey: 13]
          - Input Half:       10110100000000011110001101011110
          - S-Box Result:     10000111111110101100000110011100   [per every group of 4-bits]
          - Split Into Two:   1000011111111010 [L] 1100000110011100 [R]
          - Swap Halves:      11000001100111001000011111111010
          - Bit Inversion:    00111110011000110111100000000101
          - Compressed Key:   01011000010101110110111010000010   [done by compression P-Box]
          - XOR with Key:     01100110001101000001011010000111

          - FUNCTION OUTPUT:  01100110001101000001011010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010000101000010100010010101

       - FUNCTION OUTPUT:          01100110001101000001011010000111

       - Left XOR FUNCTION OUTPUT: 11000100001000000011111000010010

       - Next Round Left 32 Bits:  10110100000000011110001101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100001000000011111000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100000000011110001101011110

       - Right 32 Bits:            11000100001000000011111000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110110010101110010011101100110010101101110011101   [Subkey: 14]
          - Input Half:       11000100001000000011111000010010
          - S-Box Result:     01010111111011110001110010101110   [per every group of 4-bits]
          - Split Into Two:   0101011111101111 [L] 0001110010101110 [R]
          - Swap Halves:      00011100101011100101011111101111
          - Bit Inversion:    11100011010100011010100000010000
          - Compressed Key:   01011001011101101100101010111110   [done by compression P-Box]
          - XOR with Key:     10111010001001110110001010101110

          - FUNCTION OUTPUT:  10111010001001110110001010101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100000000011110001101011110

       - FUNCTION OUTPUT:          10111010001001110110001010101110

       - Left XOR FUNCTION OUTPUT: 00001110001001101000000111110000

       - Next Round Left 32 Bits:  11000100001000000011111000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110001001101000000111110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100001000000011111000010010

       - Right 32 Bits:            00001110001001101000000111110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010011010100011011000100110011010100100011000101   [Subkey: 15]
          - Input Half:       00001110001001101000000111110000
          - S-Box Result:     11111100111000000010101010111111   [per every group of 4-bits]
          - Split Into Two:   1111110011100000 [L] 0010101010111111 [R]
          - Swap Halves:      00101010101111111111110011100000
          - Bit Inversion:    11010101010000000000001100011111
          - Compressed Key:   01110011010011001001101000101010   [done by compression P-Box]
          - XOR with Key:     10100110000011001001100100110101

          - FUNCTION OUTPUT:  10100110000011001001100100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100001000000011111000010010

       - FUNCTION OUTPUT:          10100110000011001001100100110101

       - Left XOR FUNCTION OUTPUT: 01100010001011001010011100100111

       - Next Round Left 32 Bits:  00001110001001101000000111110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010001011001010011100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110001001101000000111110000

       - Right 32 Bits:            01100010001011001010011100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011011001010111001001110110011001010110111001110100   [Subkey: 16]
          - Input Half:       01100010001011001010011100100111
          - S-Box Result:     00001110111001010100110111101101   [per every group of 4-bits]
          - Split Into Two:   0000111011100101 [L] 0100110111101101 [R]
          - Swap Halves:      01001101111011010000111011100101
          - Bit Inversion:    10110010000100101111000100011010
          - Compressed Key:   01100110110110110011101011001000   [done by compression P-Box]
          - XOR with Key:     11010100110010011100101111010010

          - FUNCTION OUTPUT:  11010100110010011100101111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110001001101000000111110000

       - FUNCTION OUTPUT:          11010100110010011100101111010010

       - Left XOR FUNCTION OUTPUT: 11011010111011110100101000100010

       - Next Round Left 32 Bits:  01100010001011001010011100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010111011110100101000100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101101011101111010010100010001001100010001011001010011100100111

 > Processed Block:     1101101011101111010010100010001001100010001011001010011100100111



Plaintext Block: 4:                                      1101111001010001101110001000010110101010001110100110110100110001

!!!CBC: Previous Ciphertext:                             1101101011101111010010100010001001100010001011001010011100100111

!!!CBC: Current Block XOR with Previous Ciphertext:      0000010010111110111100101010011111001000000101101100101000010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100101111101111001010100111

       - Right 32 Bits:            11001000000101101100101000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011000101110101100100110101000110110001001100110101   [Subkey: 1]
          - Input Half:       11001000000101101100101000010110
          - S-Box Result:     01010010101000000101010010100000   [per every group of 4-bits]
          - Split Into Two:   0101001010100000 [L] 0101010010100000 [R]
          - Swap Halves:      01010100101000000101001010100000
          - Bit Inversion:    10101011010111111010110101011111
          - Compressed Key:   00101010011100110100110010011010   [done by compression P-Box]
          - XOR with Key:     10000001001011001110000111000101

          - FUNCTION OUTPUT:  10000001001011001110000111000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100101111101111001010100111

       - FUNCTION OUTPUT:          10000001001011001110000111000101

       - Left XOR FUNCTION OUTPUT: 10000101100100100001001101100010

       - Next Round Left 32 Bits:  11001000000101101100101000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101100100100001001101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001000000101101100101000010110

       - Right 32 Bits:            10000101100100100001001101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001110100010100110110010101110010011101100110010101   [Subkey: 2]
          - Input Half:       10000101100100100001001101100010
          - S-Box Result:     00101001001111101010000100001110   [per every group of 4-bits]
          - Split Into Two:   0010100100111110 [L] 1010000100001110 [R]
          - Swap Halves:      10100001000011100010100100111110
          - Bit Inversion:    01011110111100011101011011000001
          - Compressed Key:   11001000011001101101101100111010   [done by compression P-Box]
          - XOR with Key:     10010110100101110000110111111011

          - FUNCTION OUTPUT:  10010110100101110000110111111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001000000101101100101000010110

       - FUNCTION OUTPUT:          10010110100101110000110111111011

       - Left XOR FUNCTION OUTPUT: 01011110100000011100011111101101

       - Next Round Left 32 Bits:  10000101100100100001001101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100000011100011111101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101100100100001001101100010

       - Right 32 Bits:            01011110100000011100011111101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100010111010110010011010100011011000100110011010100   [Subkey: 3]
          - Input Half:       01011110100000011100011111101101
          - S-Box Result:     10011100001010100101110111000110   [per every group of 4-bits]
          - Split Into Two:   1001110000101010 [L] 0101110111000110 [R]
          - Swap Halves:      01011101110001101001110000101010
          - Bit Inversion:    10100010001110010110001111010101
          - Compressed Key:   10011011110011100011001001101000   [done by compression P-Box]
          - XOR with Key:     00111001111101110101000110111101

          - FUNCTION OUTPUT:  00111001111101110101000110111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101100100100001001101100010

       - FUNCTION OUTPUT:          00111001111101110101000110111101

       - Left XOR FUNCTION OUTPUT: 10111100011001010100001011011111

       - Next Round Left 32 Bits:  01011110100000011100011111101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111100011001010100001011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100000011100011111101101

       - Right 32 Bits:            10111100011001010100001011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111010001010011011001010111001001110110011001010110   [Subkey: 4]
          - Input Half:       10111100011001010100001011011111
          - S-Box Result:     10000101000010010111111001101011   [per every group of 4-bits]
          - Split Into Two:   1000010100001001 [L] 0111111001101011 [R]
          - Swap Halves:      01111110011010111000010100001001
          - Bit Inversion:    10000001100101000111101011110110
          - Compressed Key:   00110010100110100110111011001001   [done by compression P-Box]
          - XOR with Key:     10110011000011100001010000111111

          - FUNCTION OUTPUT:  10110011000011100001010000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100000011100011111101101

       - FUNCTION OUTPUT:          10110011000011100001010000111111

       - Left XOR FUNCTION OUTPUT: 11101101100011111101001111010010

       - Next Round Left 32 Bits:  10111100011001010100001011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101100011111101001111010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111100011001010100001011011111

       - Right 32 Bits:            11101101100011111101001111010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011101011001001101010001101100010011001101010010   [Subkey: 5]
          - Input Half:       11101101100011111101001111010010
          - S-Box Result:     11000110001010110110000101101110   [per every group of 4-bits]
          - Split Into Two:   1100011000101011 [L] 0110000101101110 [R]
          - Swap Halves:      01100001011011101100011000101011
          - Bit Inversion:    10011110100100010011100111010100
          - Compressed Key:   01001110000110101110100010010001   [done by compression P-Box]
          - XOR with Key:     11010000100010111101000101000101

          - FUNCTION OUTPUT:  11010000100010111101000101000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111100011001010100001011011111

       - FUNCTION OUTPUT:          11010000100010111101000101000101

       - Left XOR FUNCTION OUTPUT: 01101100111011101001001110011010

       - Next Round Left 32 Bits:  11101101100011111101001111010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100111011101001001110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101100011111101001111010010

       - Right 32 Bits:            01101100111011101001001110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101000101001101100101011100100111011001100101011011   [Subkey: 6]
          - Input Half:       01101100111011101001001110011010
          - S-Box Result:     00000101110011000011000100110100   [per every group of 4-bits]
          - Split Into Two:   0000010111001100 [L] 0011000100110100 [R]
          - Swap Halves:      00110001001101000000010111001100
          - Bit Inversion:    11001110110010111111101000110011
          - Compressed Key:   11011010011110101000100100010111   [done by compression P-Box]
          - XOR with Key:     00010100101100010111001100100100

          - FUNCTION OUTPUT:  00010100101100010111001100100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101100011111101001111010010

       - FUNCTION OUTPUT:          00010100101100010111001100100100

       - Left XOR FUNCTION OUTPUT: 11111001001111101010000011110110

       - Next Round Left 32 Bits:  01101100111011101001001110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001001111101010000011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100111011101001001110011010

       - Right 32 Bits:            11111001001111101010000011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000101110101100100110101000110110001001100110101001000   [Subkey: 7]
          - Input Half:       11111001001111101010000011110110
          - S-Box Result:     10110011000111000100111110110000   [per every group of 4-bits]
          - Split Into Two:   1011001100011100 [L] 0100111110110000 [R]
          - Swap Halves:      01001111101100001011001100011100
          - Bit Inversion:    10110000010011110100110011100011
          - Compressed Key:   00011010011010001001001101010100   [done by compression P-Box]
          - XOR with Key:     10101010001001111101111110110111

          - FUNCTION OUTPUT:  10101010001001111101111110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100111011101001001110011010

       - FUNCTION OUTPUT:          10101010001001111101111110110111

       - Left XOR FUNCTION OUTPUT: 11000110110010010100110000101101

       - Next Round Left 32 Bits:  11111001001111101010000011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110110010010100110000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001001111101010000011110110

       - Right 32 Bits:            11000110110010010100110000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010100110110010101110010011101100110010101101110   [Subkey: 8]
          - Input Half:       11000110110010010100110000101101
          - S-Box Result:     01010000010100110111010111100110   [per every group of 4-bits]
          - Split Into Two:   0101000001010011 [L] 0111010111100110 [R]
          - Swap Halves:      01110101111001100101000001010011
          - Bit Inversion:    10001010000110011010111110101100
          - Compressed Key:   01011000110010110011011001011101   [done by compression P-Box]
          - XOR with Key:     11010010110100101001100111110001

          - FUNCTION OUTPUT:  11010010110100101001100111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001001111101010000011110110

       - FUNCTION OUTPUT:          11010010110100101001100111110001

       - Left XOR FUNCTION OUTPUT: 00101011111011000011100100000111

       - Next Round Left 32 Bits:  11000110110010010100110000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011111011000011100100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110110010010100110000101101

       - Right 32 Bits:            00101011111011000011100100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111010110010011010100011011000100110011010100100011   [Subkey: 9]
          - Input Half:       00101011111011000011100100000111
          - S-Box Result:     11101000110001010001001111111101   [per every group of 4-bits]
          - Split Into Two:   1110100011000101 [L] 0001001111111101 [R]
          - Swap Halves:      00010011111111011110100011000101
          - Bit Inversion:    11101100000000100001011100111010
          - Compressed Key:   01111001100100100100110001010011   [done by compression P-Box]
          - XOR with Key:     10010101100100000101101101101001

          - FUNCTION OUTPUT:  10010101100100000101101101101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110110010010100110000101101

       - FUNCTION OUTPUT:          10010101100100000101101101101001

       - Left XOR FUNCTION OUTPUT: 01010011010110010001011101000100

       - Next Round Left 32 Bits:  00101011111011000011100100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011010110010001011101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011111011000011100100000111

       - Right 32 Bits:            01010011010110010001011101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001010011011001010111001001110110011001010110111001   [Subkey: 10]
          - Input Half:       01010011010110010001011101000100
          - S-Box Result:     10010001100100111010110101110111   [per every group of 4-bits]
          - Split Into Two:   1001000110010011 [L] 1010110101110111 [R]
          - Swap Halves:      10101101011101111001000110010011
          - Bit Inversion:    01010010100010000110111001101100
          - Compressed Key:   01000011000111001101100101110110   [done by compression P-Box]
          - XOR with Key:     00010001100101001011011100011010

          - FUNCTION OUTPUT:  00010001100101001011011100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011111011000011100100000111

       - FUNCTION OUTPUT:          00010001100101001011011100011010

       - Left XOR FUNCTION OUTPUT: 00111010011110001000111000011101

       - Next Round Left 32 Bits:  01010011010110010001011101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010011110001000111000011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011010110010001011101000100

       - Right 32 Bits:            00111010011110001000111000011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101011001001101010001101100010011001101010010001100   [Subkey: 11]
          - Input Half:       00111010011110001000111000011101
          - S-Box Result:     00010100110100100010110010100110   [per every group of 4-bits]
          - Split Into Two:   0001010011010010 [L] 0010110010100110 [R]
          - Swap Halves:      00101100101001100001010011010010
          - Bit Inversion:    11010011010110011110101100101101
          - Compressed Key:   11010110010110010001001101101100   [done by compression P-Box]
          - XOR with Key:     00000101000000001111100001000001

          - FUNCTION OUTPUT:  00000101000000001111100001000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011010110010001011101000100

       - FUNCTION OUTPUT:          00000101000000001111100001000001

       - Left XOR FUNCTION OUTPUT: 01010110010110011110111100000101

       - Next Round Left 32 Bits:  00111010011110001000111000011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110010110011110111100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010011110001000111000011101

       - Right 32 Bits:            01010110010110011110111100000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101100101011100100111011001100101011011100111   [Subkey: 12]
          - Input Half:       01010110010110011110111100000101
          - S-Box Result:     10010000100100111100101111111001   [per every group of 4-bits]
          - Split Into Two:   1001000010010011 [L] 1100101111111001 [R]
          - Swap Halves:      11001011111110011001000010010011
          - Bit Inversion:    00110100000001100110111101101100
          - Compressed Key:   00011110010100010111011011101011   [done by compression P-Box]
          - XOR with Key:     00101010010101110001100110000111

          - FUNCTION OUTPUT:  00101010010101110001100110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010011110001000111000011101

       - FUNCTION OUTPUT:          00101010010101110001100110000111

       - Left XOR FUNCTION OUTPUT: 00010000001011111001011110011010

       - Next Round Left 32 Bits:  01010110010110011110111100000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000001011111001011110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110010110011110111100000101

       - Right 32 Bits:            00010000001011111001011110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101100100110101000110110001001100110101001000110001   [Subkey: 13]
          - Input Half:       00010000001011111001011110011010
          - S-Box Result:     10101111111010110011110100110100   [per every group of 4-bits]
          - Split Into Two:   1010111111101011 [L] 0011110100110100 [R]
          - Swap Halves:      00111101001101001010111111101011
          - Bit Inversion:    11000010110010110101000000010100
          - Compressed Key:   01011000010101110110111010000010   [done by compression P-Box]
          - XOR with Key:     10011010100111000011111010010110

          - FUNCTION OUTPUT:  10011010100111000011111010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110010110011110111100000101

       - FUNCTION OUTPUT:          10011010100111000011111010010110

       - Left XOR FUNCTION OUTPUT: 11001100110001011101000110010011

       - Next Round Left 32 Bits:  00010000001011111001011110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100110001011101000110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000001011111001011110011010

       - Right 32 Bits:            11001100110001011101000110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110110010101110010011101100110010101101110011101   [Subkey: 14]
          - Input Half:       11001100110001011101000110010011
          - S-Box Result:     01010101010110010110101000110001   [per every group of 4-bits]
          - Split Into Two:   0101010101011001 [L] 0110101000110001 [R]
          - Swap Halves:      01101010001100010101010101011001
          - Bit Inversion:    10010101110011101010101010100110
          - Compressed Key:   01011001011101101100101010111110   [done by compression P-Box]
          - XOR with Key:     11001100101110000110000000011000

          - FUNCTION OUTPUT:  11001100101110000110000000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000001011111001011110011010

       - FUNCTION OUTPUT:          11001100101110000110000000011000

       - Left XOR FUNCTION OUTPUT: 11011100100101111111011110000010

       - Next Round Left 32 Bits:  11001100110001011101000110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100100101111111011110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100110001011101000110010011

       - Right 32 Bits:            11011100100101111111011110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010011010100011011000100110011010100100011000101   [Subkey: 15]
          - Input Half:       11011100100101111111011110000010
          - S-Box Result:     01100101001111011011110100101110   [per every group of 4-bits]
          - Split Into Two:   0110010100111101 [L] 1011110100101110 [R]
          - Swap Halves:      10111101001011100110010100111101
          - Bit Inversion:    01000010110100011001101011000010
          - Compressed Key:   01110011010011001001101000101010   [done by compression P-Box]
          - XOR with Key:     00110001100111010000000011101000

          - FUNCTION OUTPUT:  00110001100111010000000011101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100110001011101000110010011

       - FUNCTION OUTPUT:          00110001100111010000000011101000

       - Left XOR FUNCTION OUTPUT: 11111101010110001101000101111011

       - Next Round Left 32 Bits:  11011100100101111111011110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101010110001101000101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100100101111111011110000010

       - Right 32 Bits:            11111101010110001101000101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011011001010111001001110110011001010110111001110100   [Subkey: 16]
          - Input Half:       11111101010110001101000101111011
          - S-Box Result:     10110110100100100110101011011000   [per every group of 4-bits]
          - Split Into Two:   1011011010010010 [L] 0110101011011000 [R]
          - Swap Halves:      01101010110110001011011010010010
          - Bit Inversion:    10010101001001110100100101101101
          - Compressed Key:   01100110110110110011101011001000   [done by compression P-Box]
          - XOR with Key:     11110011111111000111001110100101

          - FUNCTION OUTPUT:  11110011111111000111001110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100100101111111011110000010

       - FUNCTION OUTPUT:          11110011111111000111001110100101

       - Left XOR FUNCTION OUTPUT: 00101111011010111000010000100111

       - Next Round Left 32 Bits:  11111101010110001101000101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111011010111000010000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010111101101011100001000010011111111101010110001101000101111011

 > Processed Block:     0010111101101011100001000010011111111101010110001101000101111011



Plaintext Block: 5:                                      0011110111000000010011111001101011010101100110011110010111011110

!!!CBC: Previous Ciphertext:                             0010111101101011100001000010011111111101010110001101000101111011

!!!CBC: Current Block XOR with Previous Ciphertext:      0001001010101011110010111011110100101000110000010011010010100101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010101010111100101110111101

       - Right 32 Bits:            00101000110000010011010010100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011000101110101100100110101000110110001001100110101   [Subkey: 1]
          - Input Half:       00101000110000010011010010100101
          - S-Box Result:     11100010010110100001011101001001   [per every group of 4-bits]
          - Split Into Two:   1110001001011010 [L] 0001011101001001 [R]
          - Swap Halves:      00010111010010011110001001011010
          - Bit Inversion:    11101000101101100001110110100101
          - Compressed Key:   00101010011100110100110010011010   [done by compression P-Box]
          - XOR with Key:     11000010110001010101000100111111

          - FUNCTION OUTPUT:  11000010110001010101000100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010101010111100101110111101

       - FUNCTION OUTPUT:          11000010110001010101000100111111

       - Left XOR FUNCTION OUTPUT: 11010000011011101001101010000010

       - Next Round Left 32 Bits:  00101000110000010011010010100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000011011101001101010000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000110000010011010010100101

       - Right 32 Bits:            11010000011011101001101010000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001110100010100110110010101110010011101100110010101   [Subkey: 2]
          - Input Half:       11010000011011101001101010000010
          - S-Box Result:     01101111000011000011010000101110   [per every group of 4-bits]
          - Split Into Two:   0110111100001100 [L] 0011010000101110 [R]
          - Swap Halves:      00110100001011100110111100001100
          - Bit Inversion:    11001011110100011001000011110011
          - Compressed Key:   11001000011001101101101100111010   [done by compression P-Box]
          - XOR with Key:     00000011101101110100101111001001

          - FUNCTION OUTPUT:  00000011101101110100101111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000110000010011010010100101

       - FUNCTION OUTPUT:          00000011101101110100101111001001

       - Left XOR FUNCTION OUTPUT: 00101011011101100111111101101100

       - Next Round Left 32 Bits:  11010000011011101001101010000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011011101100111111101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000011011101001101010000010

       - Right 32 Bits:            00101011011101100111111101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100010111010110010011010100011011000100110011010100   [Subkey: 3]
          - Input Half:       00101011011101100111111101101100
          - S-Box Result:     11101000110100001101101100000101   [per every group of 4-bits]
          - Split Into Two:   1110100011010000 [L] 1101101100000101 [R]
          - Swap Halves:      11011011000001011110100011010000
          - Bit Inversion:    00100100111110100001011100101111
          - Compressed Key:   10011011110011100011001001101000   [done by compression P-Box]
          - XOR with Key:     10111111001101000010010101000111

          - FUNCTION OUTPUT:  10111111001101000010010101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000011011101001101010000010

       - FUNCTION OUTPUT:          10111111001101000010010101000111

       - Left XOR FUNCTION OUTPUT: 01101111010110101011111111000101

       - Next Round Left 32 Bits:  00101011011101100111111101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111010110101011111111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011011101100111111101101100

       - Right 32 Bits:            01101111010110101011111111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111010001010011011001010111001001110110011001010110   [Subkey: 4]
          - Input Half:       01101111010110101011111111000101
          - S-Box Result:     00001011100101001000101101011001   [per every group of 4-bits]
          - Split Into Two:   0000101110010100 [L] 1000101101011001 [R]
          - Swap Halves:      10001011010110010000101110010100
          - Bit Inversion:    01110100101001101111010001101011
          - Compressed Key:   00110010100110100110111011001001   [done by compression P-Box]
          - XOR with Key:     01000110001111001001101010100010

          - FUNCTION OUTPUT:  01000110001111001001101010100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011011101100111111101101100

       - FUNCTION OUTPUT:          01000110001111001001101010100010

       - Left XOR FUNCTION OUTPUT: 01101101010010101110010111001110

       - Next Round Left 32 Bits:  01101111010110101011111111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101010010101110010111001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111010110101011111111000101

       - Right 32 Bits:            01101101010010101110010111001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011101011001001101010001101100010011001101010010   [Subkey: 5]
          - Input Half:       01101101010010101110010111001110
          - S-Box Result:     00000110011101001100100101011100   [per every group of 4-bits]
          - Split Into Two:   0000011001110100 [L] 1100100101011100 [R]
          - Swap Halves:      11001001010111000000011001110100
          - Bit Inversion:    00110110101000111111100110001011
          - Compressed Key:   01001110000110101110100010010001   [done by compression P-Box]
          - XOR with Key:     01111000101110010001000100011010

          - FUNCTION OUTPUT:  01111000101110010001000100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111010110101011111111000101

       - FUNCTION OUTPUT:          01111000101110010001000100011010

       - Left XOR FUNCTION OUTPUT: 00010111111000111010111011011111

       - Next Round Left 32 Bits:  01101101010010101110010111001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111111000111010111011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101010010101110010111001110

       - Right 32 Bits:            00010111111000111010111011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101000101001101100101011100100111011001100101011011   [Subkey: 6]
          - Input Half:       00010111111000111010111011011111
          - S-Box Result:     10101101110000010100110001101011   [per every group of 4-bits]
          - Split Into Two:   1010110111000001 [L] 0100110001101011 [R]
          - Swap Halves:      01001100011010111010110111000001
          - Bit Inversion:    10110011100101000101001000111110
          - Compressed Key:   11011010011110101000100100010111   [done by compression P-Box]
          - XOR with Key:     01101001111011101101101100101001

          - FUNCTION OUTPUT:  01101001111011101101101100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101010010101110010111001110

       - FUNCTION OUTPUT:          01101001111011101101101100101001

       - Left XOR FUNCTION OUTPUT: 00000100101001000011111011100111

       - Next Round Left 32 Bits:  00010111111000111010111011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100101001000011111011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111111000111010111011011111

       - Right 32 Bits:            00000100101001000011111011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000101110101100100110101000110110001001100110101001000   [Subkey: 7]
          - Input Half:       00000100101001000011111011100111
          - S-Box Result:     11110111010001110001110011001101   [per every group of 4-bits]
          - Split Into Two:   1111011101000111 [L] 0001110011001101 [R]
          - Swap Halves:      00011100110011011111011101000111
          - Bit Inversion:    11100011001100100000100010111000
          - Compressed Key:   00011010011010001001001101010100   [done by compression P-Box]
          - XOR with Key:     11111001010110101001101111101100

          - FUNCTION OUTPUT:  11111001010110101001101111101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111111000111010111011011111

       - FUNCTION OUTPUT:          11111001010110101001101111101100

       - Left XOR FUNCTION OUTPUT: 11101110101110010011010100110011

       - Next Round Left 32 Bits:  00000100101001000011111011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110101110010011010100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100101001000011111011100111

       - Right 32 Bits:            11101110101110010011010100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010100110110010101110010011101100110010101101110   [Subkey: 8]
          - Input Half:       11101110101110010011010100110011
          - S-Box Result:     11001100100000110001100100010001   [per every group of 4-bits]
          - Split Into Two:   1100110010000011 [L] 0001100100010001 [R]
          - Swap Halves:      00011001000100011100110010000011
          - Bit Inversion:    11100110111011100011001101111100
          - Compressed Key:   01011000110010110011011001011101   [done by compression P-Box]
          - XOR with Key:     10111110001001010000010100100001

          - FUNCTION OUTPUT:  10111110001001010000010100100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100101001000011111011100111

       - FUNCTION OUTPUT:          10111110001001010000010100100001

       - Left XOR FUNCTION OUTPUT: 10111010100000010011101111000110

       - Next Round Left 32 Bits:  11101110101110010011010100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010100000010011101111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110101110010011010100110011

       - Right 32 Bits:            10111010100000010011101111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111010110010011010100011011000100110011010100100011   [Subkey: 9]
          - Input Half:       10111010100000010011101111000110
          - S-Box Result:     10000100001010100001100001010000   [per every group of 4-bits]
          - Split Into Two:   1000010000101010 [L] 0001100001010000 [R]
          - Swap Halves:      00011000010100001000010000101010
          - Bit Inversion:    11100111101011110111101111010101
          - Compressed Key:   01111001100100100100110001010011   [done by compression P-Box]
          - XOR with Key:     10011110001111010011011110000110

          - FUNCTION OUTPUT:  10011110001111010011011110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110101110010011010100110011

       - FUNCTION OUTPUT:          10011110001111010011011110000110

       - Left XOR FUNCTION OUTPUT: 01110000100001000000001010110101

       - Next Round Left 32 Bits:  10111010100000010011101111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000100001000000001010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010100000010011101111000110

       - Right 32 Bits:            01110000100001000000001010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001010011011001010111001001110110011001010110111001   [Subkey: 10]
          - Input Half:       01110000100001000000001010110101
          - S-Box Result:     11011111001001111111111010001001   [per every group of 4-bits]
          - Split Into Two:   1101111100100111 [L] 1111111010001001 [R]
          - Swap Halves:      11111110100010011101111100100111
          - Bit Inversion:    00000001011101100010000011011000
          - Compressed Key:   01000011000111001101100101110110   [done by compression P-Box]
          - XOR with Key:     01000010011010101111100110101110

          - FUNCTION OUTPUT:  01000010011010101111100110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010100000010011101111000110

       - FUNCTION OUTPUT:          01000010011010101111100110101110

       - Left XOR FUNCTION OUTPUT: 11111000111010111100001001101000

       - Next Round Left 32 Bits:  01110000100001000000001010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000111010111100001001101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000100001000000001010110101

       - Right 32 Bits:            11111000111010111100001001101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101011001001101010001101100010011001101010010001100   [Subkey: 11]
          - Input Half:       11111000111010111100001001101000
          - S-Box Result:     10110010110010000101111000000010   [per every group of 4-bits]
          - Split Into Two:   1011001011001000 [L] 0101111000000010 [R]
          - Swap Halves:      01011110000000101011001011001000
          - Bit Inversion:    10100001111111010100110100110111
          - Compressed Key:   11010110010110010001001101101100   [done by compression P-Box]
          - XOR with Key:     01110111101001000101111001011011

          - FUNCTION OUTPUT:  01110111101001000101111001011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000100001000000001010110101

       - FUNCTION OUTPUT:          01110111101001000101111001011011

       - Left XOR FUNCTION OUTPUT: 00000111001000000101110011101110

       - Next Round Left 32 Bits:  11111000111010111100001001101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001000000101110011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000111010111100001001101000

       - Right 32 Bits:            00000111001000000101110011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101100101011100100111011001100101011011100111   [Subkey: 12]
          - Input Half:       00000111001000000101110011101110
          - S-Box Result:     11111101111011111001010111001100   [per every group of 4-bits]
          - Split Into Two:   1111110111101111 [L] 1001010111001100 [R]
          - Swap Halves:      10010101110011001111110111101111
          - Bit Inversion:    01101010001100110000001000010000
          - Compressed Key:   00011110010100010111011011101011   [done by compression P-Box]
          - XOR with Key:     01110100011000100111010011111011

          - FUNCTION OUTPUT:  01110100011000100111010011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000111010111100001001101000

       - FUNCTION OUTPUT:          01110100011000100111010011111011

       - Left XOR FUNCTION OUTPUT: 10001100100010011011011010010011

       - Next Round Left 32 Bits:  00000111001000000101110011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100100010011011011010010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001000000101110011101110

       - Right 32 Bits:            10001100100010011011011010010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101100100110101000110110001001100110101001000110001   [Subkey: 13]
          - Input Half:       10001100100010011011011010010011
          - S-Box Result:     00100101001000111000000000110001   [per every group of 4-bits]
          - Split Into Two:   0010010100100011 [L] 1000000000110001 [R]
          - Swap Halves:      10000000001100010010010100100011
          - Bit Inversion:    01111111110011101101101011011100
          - Compressed Key:   01011000010101110110111010000010   [done by compression P-Box]
          - XOR with Key:     00100111100110011011010001011110

          - FUNCTION OUTPUT:  00100111100110011011010001011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001000000101110011101110

       - FUNCTION OUTPUT:          00100111100110011011010001011110

       - Left XOR FUNCTION OUTPUT: 00100000101110011110100010110000

       - Next Round Left 32 Bits:  10001100100010011011011010010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000101110011110100010110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100100010011011011010010011

       - Right 32 Bits:            00100000101110011110100010110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110110010101110010011101100110010101101110011101   [Subkey: 14]
          - Input Half:       00100000101110011110100010110000
          - S-Box Result:     11101111100000111100001010001111   [per every group of 4-bits]
          - Split Into Two:   1110111110000011 [L] 1100001010001111 [R]
          - Swap Halves:      11000010100011111110111110000011
          - Bit Inversion:    00111101011100000001000001111100
          - Compressed Key:   01011001011101101100101010111110   [done by compression P-Box]
          - XOR with Key:     01100100000001101101101011000010

          - FUNCTION OUTPUT:  01100100000001101101101011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100100010011011011010010011

       - FUNCTION OUTPUT:          01100100000001101101101011000010

       - Left XOR FUNCTION OUTPUT: 11101000100011110110110001010001

       - Next Round Left 32 Bits:  00100000101110011110100010110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000100011110110110001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000101110011110100010110000

       - Right 32 Bits:            11101000100011110110110001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010011010100011011000100110011010100100011000101   [Subkey: 15]
          - Input Half:       11101000100011110110110001010001
          - S-Box Result:     11000010001010110000010110011010   [per every group of 4-bits]
          - Split Into Two:   1100001000101011 [L] 0000010110011010 [R]
          - Swap Halves:      00000101100110101100001000101011
          - Bit Inversion:    11111010011001010011110111010100
          - Compressed Key:   01110011010011001001101000101010   [done by compression P-Box]
          - XOR with Key:     10001001001010011010011111111110

          - FUNCTION OUTPUT:  10001001001010011010011111111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000101110011110100010110000

       - FUNCTION OUTPUT:          10001001001010011010011111111110

       - Left XOR FUNCTION OUTPUT: 10101001100100000100111101001110

       - Next Round Left 32 Bits:  11101000100011110110110001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001100100000100111101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000100011110110110001010001

       - Right 32 Bits:            10101001100100000100111101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011011001010111001001110110011001010110111001110100   [Subkey: 16]
          - Input Half:       10101001100100000100111101001110
          - S-Box Result:     01000011001111110111101101111100   [per every group of 4-bits]
          - Split Into Two:   0100001100111111 [L] 0111101101111100 [R]
          - Swap Halves:      01111011011111000100001100111111
          - Bit Inversion:    10000100100000111011110011000000
          - Compressed Key:   01100110110110110011101011001000   [done by compression P-Box]
          - XOR with Key:     11100010010110001000011000001000

          - FUNCTION OUTPUT:  11100010010110001000011000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000100011110110110001010001

       - FUNCTION OUTPUT:          11100010010110001000011000001000

       - Left XOR FUNCTION OUTPUT: 00001010110101111110101001011001

       - Next Round Left 32 Bits:  10101001100100000100111101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010110101111110101001011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000101011010111111010100101100110101001100100000100111101001110

 > Processed Block:     0000101011010111111010100101100110101001100100000100111101001110



Plaintext Block: 6:                                      1000001011001011010110101101000101001110110101111000011111010110

!!!CBC: Previous Ciphertext:                             0000101011010111111010100101100110101001100100000100111101001110

!!!CBC: Current Block XOR with Previous Ciphertext:      1000100000011100101100001000100011100111010001111100100010011000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000000111001011000010001000

       - Right 32 Bits:            11100111010001111100100010011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011000101110101100100110101000110110001001100110101   [Subkey: 1]
          - Input Half:       11100111010001111100100010011000
          - S-Box Result:     11001101011111010101001000110010   [per every group of 4-bits]
          - Split Into Two:   1100110101111101 [L] 0101001000110010 [R]
          - Swap Halves:      01010010001100101100110101111101
          - Bit Inversion:    10101101110011010011001010000010
          - Compressed Key:   00101010011100110100110010011010   [done by compression P-Box]
          - XOR with Key:     10000111101111100111111000011000

          - FUNCTION OUTPUT:  10000111101111100111111000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000000111001011000010001000

       - FUNCTION OUTPUT:          10000111101111100111111000011000

       - Left XOR FUNCTION OUTPUT: 00001111101000101100111010010000

       - Next Round Left 32 Bits:  11100111010001111100100010011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111101000101100111010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111010001111100100010011000

       - Right 32 Bits:            00001111101000101100111010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001110100010100110110010101110010011101100110010101   [Subkey: 2]
          - Input Half:       00001111101000101100111010010000
          - S-Box Result:     11111011010011100101110000111111   [per every group of 4-bits]
          - Split Into Two:   1111101101001110 [L] 0101110000111111 [R]
          - Swap Halves:      01011100001111111111101101001110
          - Bit Inversion:    10100011110000000000010010110001
          - Compressed Key:   11001000011001101101101100111010   [done by compression P-Box]
          - XOR with Key:     01101011101001101101111110001011

          - FUNCTION OUTPUT:  01101011101001101101111110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111010001111100100010011000

       - FUNCTION OUTPUT:          01101011101001101101111110001011

       - Left XOR FUNCTION OUTPUT: 10001100111000010001011100010011

       - Next Round Left 32 Bits:  00001111101000101100111010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100111000010001011100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001111101000101100111010010000

       - Right 32 Bits:            10001100111000010001011100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100010111010110010011010100011011000100110011010100   [Subkey: 3]
          - Input Half:       10001100111000010001011100010011
          - S-Box Result:     00100101110010101010110110100001   [per every group of 4-bits]
          - Split Into Two:   0010010111001010 [L] 1010110110100001 [R]
          - Swap Halves:      10101101101000010010010111001010
          - Bit Inversion:    01010010010111101101101000110101
          - Compressed Key:   10011011110011100011001001101000   [done by compression P-Box]
          - XOR with Key:     11001001100100001110100001011101

          - FUNCTION OUTPUT:  11001001100100001110100001011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001111101000101100111010010000

       - FUNCTION OUTPUT:          11001001100100001110100001011101

       - Left XOR FUNCTION OUTPUT: 11000110001100100010011011001101

       - Next Round Left 32 Bits:  10001100111000010001011100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110001100100010011011001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100111000010001011100010011

       - Right 32 Bits:            11000110001100100010011011001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111010001010011011001010111001001110110011001010110   [Subkey: 4]
          - Input Half:       11000110001100100010011011001101
          - S-Box Result:     01010000000111101110000001010110   [per every group of 4-bits]
          - Split Into Two:   0101000000011110 [L] 1110000001010110 [R]
          - Swap Halves:      11100000010101100101000000011110
          - Bit Inversion:    00011111101010011010111111100001
          - Compressed Key:   00110010100110100110111011001001   [done by compression P-Box]
          - XOR with Key:     00101101001100111100000100101000

          - FUNCTION OUTPUT:  00101101001100111100000100101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100111000010001011100010011

       - FUNCTION OUTPUT:          00101101001100111100000100101000

       - Left XOR FUNCTION OUTPUT: 10100001110100101101011000111011

       - Next Round Left 32 Bits:  11000110001100100010011011001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001110100101101011000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110001100100010011011001101

       - Right 32 Bits:            10100001110100101101011000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110001011101011001001101010001101100010011001101010010   [Subkey: 5]
          - Input Half:       10100001110100101101011000111011
          - S-Box Result:     01001010011011100110000000011000   [per every group of 4-bits]
          - Split Into Two:   0100101001101110 [L] 0110000000011000 [R]
          - Swap Halves:      01100000000110000100101001101110
          - Bit Inversion:    10011111111001111011010110010001
          - Compressed Key:   01001110000110101110100010010001   [done by compression P-Box]
          - XOR with Key:     11010001111111010101110100000000

          - FUNCTION OUTPUT:  11010001111111010101110100000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110001100100010011011001101

       - FUNCTION OUTPUT:          11010001111111010101110100000000

       - Left XOR FUNCTION OUTPUT: 00010111110011110111101111001101

       - Next Round Left 32 Bits:  10100001110100101101011000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111110011110111101111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001110100101101011000111011

       - Right 32 Bits:            00010111110011110111101111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011101000101001101100101011100100111011001100101011011   [Subkey: 6]
          - Input Half:       00010111110011110111101111001101
          - S-Box Result:     10101101010110111101100001010110   [per every group of 4-bits]
          - Split Into Two:   1010110101011011 [L] 1101100001010110 [R]
          - Swap Halves:      11011000010101101010110101011011
          - Bit Inversion:    00100111101010010101001010100100
          - Compressed Key:   11011010011110101000100100010111   [done by compression P-Box]
          - XOR with Key:     11111101110100111101101110110011

          - FUNCTION OUTPUT:  11111101110100111101101110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001110100101101011000111011

       - FUNCTION OUTPUT:          11111101110100111101101110110011

       - Left XOR FUNCTION OUTPUT: 01011100000000010000110110001000

       - Next Round Left 32 Bits:  00010111110011110111101111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011100000000010000110110001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111110011110111101111001101

       - Right 32 Bits:            01011100000000010000110110001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000101110101100100110101000110110001001100110101001000   [Subkey: 7]
          - Input Half:       01011100000000010000110110001000
          - S-Box Result:     10010101111110101111011000100010   [per every group of 4-bits]
          - Split Into Two:   1001010111111010 [L] 1111011000100010 [R]
          - Swap Halves:      11110110001000101001010111111010
          - Bit Inversion:    00001001110111010110101000000101
          - Compressed Key:   00011010011010001001001101010100   [done by compression P-Box]
          - XOR with Key:     00010011101101011111100101010001

          - FUNCTION OUTPUT:  00010011101101011111100101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111110011110111101111001101

       - FUNCTION OUTPUT:          00010011101101011111100101010001

       - Left XOR FUNCTION OUTPUT: 00000100011110101000001010011100

       - Next Round Left 32 Bits:  01011100000000010000110110001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100011110101000001010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100000000010000110110001000

       - Right 32 Bits:            00000100011110101000001010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100010100110110010101110010011101100110010101101110   [Subkey: 8]
          - Input Half:       00000100011110101000001010011100
          - S-Box Result:     11110111110101000010111000110101   [per every group of 4-bits]
          - Split Into Two:   1111011111010100 [L] 0010111000110101 [R]
          - Swap Halves:      00101110001101011111011111010100
          - Bit Inversion:    11010001110010100000100000101011
          - Compressed Key:   01011000110010110011011001011101   [done by compression P-Box]
          - XOR with Key:     10001001000000010011111001110110

          - FUNCTION OUTPUT:  10001001000000010011111001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100000000010000110110001000

       - FUNCTION OUTPUT:          10001001000000010011111001110110

       - Left XOR FUNCTION OUTPUT: 11010101000000000011001111111110

       - Next Round Left 32 Bits:  00000100011110101000001010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101000000000011001111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100011110101000001010011100

       - Right 32 Bits:            11010101000000000011001111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111010110010011010100011011000100110011010100100011   [Subkey: 9]
          - Input Half:       11010101000000000011001111111110
          - S-Box Result:     01101001111111110001000110111100   [per every group of 4-bits]
          - Split Into Two:   0110100111111111 [L] 0001000110111100 [R]
          - Swap Halves:      00010001101111000110100111111111
          - Bit Inversion:    11101110010000111001011000000000
          - Compressed Key:   01111001100100100100110001010011   [done by compression P-Box]
          - XOR with Key:     10010111110100011101101001010011

          - FUNCTION OUTPUT:  10010111110100011101101001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100011110101000001010011100

       - FUNCTION OUTPUT:          10010111110100011101101001010011

       - Left XOR FUNCTION OUTPUT: 10010011101010110101100011001111

       - Next Round Left 32 Bits:  11010101000000000011001111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010011101010110101100011001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101000000000011001111111110

       - Right 32 Bits:            10010011101010110101100011001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001010011011001010111001001110110011001010110111001   [Subkey: 10]
          - Input Half:       10010011101010110101100011001111
          - S-Box Result:     00110001010010001001001001011011   [per every group of 4-bits]
          - Split Into Two:   0011000101001000 [L] 1001001001011011 [R]
          - Swap Halves:      10010010010110110011000101001000
          - Bit Inversion:    01101101101001001100111010110111
          - Compressed Key:   01000011000111001101100101110110   [done by compression P-Box]
          - XOR with Key:     00101110101110000001011111000001

          - FUNCTION OUTPUT:  00101110101110000001011111000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101000000000011001111111110

       - FUNCTION OUTPUT:          00101110101110000001011111000001

       - Left XOR FUNCTION OUTPUT: 11111011101110000010010000111111

       - Next Round Left 32 Bits:  10010011101010110101100011001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011101110000010010000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011101010110101100011001111

       - Right 32 Bits:            11111011101110000010010000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101011001001101010001101100010011001101010010001100   [Subkey: 11]
          - Input Half:       11111011101110000010010000111111
          - S-Box Result:     10111000100000101110011100011011   [per every group of 4-bits]
          - Split Into Two:   1011100010000010 [L] 1110011100011011 [R]
          - Swap Halves:      11100111000110111011100010000010
          - Bit Inversion:    00011000111001000100011101111101
          - Compressed Key:   11010110010110010001001101101100   [done by compression P-Box]
          - XOR with Key:     11001110101111010101010000010001

          - FUNCTION OUTPUT:  11001110101111010101010000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011101010110101100011001111

       - FUNCTION OUTPUT:          11001110101111010101010000010001

       - Left XOR FUNCTION OUTPUT: 01011101000101100000110011011110

       - Next Round Left 32 Bits:  11111011101110000010010000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101000101100000110011011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011101110000010010000111111

       - Right 32 Bits:            01011101000101100000110011011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000101001101100101011100100111011001100101011011100111   [Subkey: 12]
          - Input Half:       01011101000101100000110011011110
          - S-Box Result:     10010110101000001111010101101100   [per every group of 4-bits]
          - Split Into Two:   1001011010100000 [L] 1111010101101100 [R]
          - Swap Halves:      11110101011011001001011010100000
          - Bit Inversion:    00001010100100110110100101011111
          - Compressed Key:   00011110010100010111011011101011   [done by compression P-Box]
          - XOR with Key:     00010100110000100001111110110100

          - FUNCTION OUTPUT:  00010100110000100001111110110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011101110000010010000111111

       - FUNCTION OUTPUT:          00010100110000100001111110110100

       - Left XOR FUNCTION OUTPUT: 11101111011110100011101110001011

       - Next Round Left 32 Bits:  01011101000101100000110011011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111011110100011101110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101000101100000110011011110

       - Right 32 Bits:            11101111011110100011101110001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101100100110101000110110001001100110101001000110001   [Subkey: 13]
          - Input Half:       11101111011110100011101110001011
          - S-Box Result:     11001011110101000001100000101000   [per every group of 4-bits]
          - Split Into Two:   1100101111010100 [L] 0001100000101000 [R]
          - Swap Halves:      00011000001010001100101111010100
          - Bit Inversion:    11100111110101110011010000101011
          - Compressed Key:   01011000010101110110111010000010   [done by compression P-Box]
          - XOR with Key:     10111111100000000101101010101001

          - FUNCTION OUTPUT:  10111111100000000101101010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101000101100000110011011110

       - FUNCTION OUTPUT:          10111111100000000101101010101001

       - Left XOR FUNCTION OUTPUT: 11100010100101100101011001110111

       - Next Round Left 32 Bits:  11101111011110100011101110001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010100101100101011001110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111011110100011101110001011

       - Right 32 Bits:            11100010100101100101011001110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110110010101110010011101100110010101101110011101   [Subkey: 14]
          - Input Half:       11100010100101100101011001110111
          - S-Box Result:     11001110001100001001000011011101   [per every group of 4-bits]
          - Split Into Two:   1100111000110000 [L] 1001000011011101 [R]
          - Swap Halves:      10010000110111011100111000110000
          - Bit Inversion:    01101111001000100011000111001111
          - Compressed Key:   01011001011101101100101010111110   [done by compression P-Box]
          - XOR with Key:     00110110010101001111101101110001

          - FUNCTION OUTPUT:  00110110010101001111101101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111011110100011101110001011

       - FUNCTION OUTPUT:          00110110010101001111101101110001

       - Left XOR FUNCTION OUTPUT: 11011001001011101100000011111010

       - Next Round Left 32 Bits:  11100010100101100101011001110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001001011101100000011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010100101100101011001110111

       - Right 32 Bits:            11011001001011101100000011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010110010011010100011011000100110011010100100011000101   [Subkey: 15]
          - Input Half:       11011001001011101100000011111010
          - S-Box Result:     01100011111011000101111110110100   [per every group of 4-bits]
          - Split Into Two:   0110001111101100 [L] 0101111110110100 [R]
          - Swap Halves:      01011111101101000110001111101100
          - Bit Inversion:    10100000010010111001110000010011
          - Compressed Key:   01110011010011001001101000101010   [done by compression P-Box]
          - XOR with Key:     11010011000001110000011000111001

          - FUNCTION OUTPUT:  11010011000001110000011000111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010100101100101011001110111

       - FUNCTION OUTPUT:          11010011000001110000011000111001

       - Left XOR FUNCTION OUTPUT: 00110001100100010101000001001110

       - Next Round Left 32 Bits:  11011001001011101100000011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001100100010101000001001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001001011101100000011111010

       - Right 32 Bits:            00110001100100010101000001001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010011011001010111001001110110011001010110111001110100   [Subkey: 16]
          - Input Half:       00110001100100010101000001001110
          - S-Box Result:     00011010001110101001111101111100   [per every group of 4-bits]
          - Split Into Two:   0001101000111010 [L] 1001111101111100 [R]
          - Swap Halves:      10011111011111000001101000111010
          - Bit Inversion:    01100000100000111110010111000101
          - Compressed Key:   01100110110110110011101011001000   [done by compression P-Box]
          - XOR with Key:     00000110010110001101111100001101

          - FUNCTION OUTPUT:  00000110010110001101111100001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001001011101100000011111010

       - FUNCTION OUTPUT:          00000110010110001101111100001101

       - Left XOR FUNCTION OUTPUT: 11011111011101100001111111110111

       - Next Round Left 32 Bits:  00110001100100010101000001001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111011101100001111111110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101111101110110000111111111011100110001100100010101000001001110

 > Processed Block:     1101111101110110000111111111011100110001100100010101000001001110


FINAL PROCESSED DATA BLOCKS: 0001110011101100100001110001110001101011000101111100000111000001,1001001110000000111001100001000101000001001101100100110001111101,1101101011101111010010100010001001100010001011001010011100100111,0010111101101011100001000010011111111101010110001101000101111011,0000101011010111111010100101100110101001100100000100111101001110,1101111101110110000111111111011100110001100100010101000001001110,

BLOCKS IN ASCII:             ì?kÁÁ??æA6L}ÚïJ"b,§'/k?'ýXÑ{
×êY©?ONßv÷1?PN

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: newClie
In Binary:  01101110011001010111011101000011011011000110100101100101

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 00100011001101010001000101111001001001110010110100110101
Subkey 2  : 10111001100101011101110100001101101100011010010110010101
Subkey 3  : 10001100110101000100010111100100100111001011010011010100
Subkey 4  : 11100110010101110111010000110110110001101001011001010110
Subkey 5  : 00110011010100010001011110010010011100101101001101010010
Subkey 6  : 10011001010111011101000011011011000110100101100101011011
Subkey 7  : 11001101010001000101111001001001110010110100110101001000
Subkey 8  : 01100101011101110100001101101100011010010110010101101110
Subkey 9  : 00110101000100010111100100100111001011010011010100100011
Subkey 10 : 10010101110111010000110110110001101001011001010110111001
Subkey 11 : 11010100010001011110010010011100101101001101010010001100
Subkey 12 : 01010111011101000011011011000110100101100101011011100110
Subkey 13 : 01010001000101111001001001110010110100110101001000110011
Subkey 14 : 01011101110100001101101100011010010110010101101110011001
Subkey 15 : 01000100010111100100100111001011010011010100100011001101
Subkey 16 : 01110111010000110110110001101001011001010110111001100101

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ì?kÁÁ??æA6L}ÚïJ"b,§'/k?'ýXÑ{
×êY©?ONßv÷1?PN

Data padded with spaces : ì?kÁÁ??æA6L}ÚïJ"b,§'/k?'ýXÑ{
×êY©?ONßv÷1?PN[Padded with '0' spaces]

Data in ASCII           : 28,236,135,28,107,23,193,193,147,128,230,17,65,54,76,125,218,239,74,34,98,44,167,39,47,107,132,39,253,88,209,123,10,215,234,89,169,144,79,78,223,118,31,247,49,145,80,78,

Data in Binary          : 00011100,11101100,10000111,00011100,01101011,00010111,11000001,11000001,10010011,10000000,11100110,00010001,01000001,00110110,01001100,01111101,11011010,11101111,01001010,00100010,01100010,00101100,10100111,00100111,00101111,01101011,10000100,00100111,11111101,01011000,11010001,01111011,00001010,11010111,11101010,01011001,10101001,10010000,01001111,01001110,11011111,01110110,00011111,11110111,00110001,10010001,01010000,01001110,

Data in 64-bit Blocks   : 0001110011101100100001110001110001101011000101111100000111000001,1001001110000000111001100001000101000001001101100100110001111101,1101101011101111010010100010001001100010001011001010011100100111,0010111101101011100001000010011111111101010110001101000101111011,0000101011010111111010100101100110101001100100000100111101001110,1101111101110110000111111111011100110001100100010101000001001110,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0011000100110010001100110011010000110101001101100011011100111000)

Ciphertext Block 1:                                      0001110011101100100001110001110001101011000101111100000111000001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100111011001000011100011100

       - Right 32 Bits:            01101011000101111100000111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010000110110110001101001011001010110111001100101   [Subkey: 16]
          - Input Half:       01101011000101111100000111000001
          - S-Box Result:     00001000101011010101101001011010   [per every group of 4-bits]
          - Split Into Two:   0000100010101101 [L] 0101101001011010 [R]
          - Swap Halves:      01011010010110100000100010101101
          - Bit Inversion:    10100101101001011111011101010010
          - Compressed Key:   01110000111010010111101011001010   [done by compression P-Box]
          - XOR with Key:     11010101010011001000110110011000

          - FUNCTION OUTPUT:  11010101010011001000110110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100111011001000011100011100

       - FUNCTION OUTPUT:          11010101010011001000110110011000

       - Left XOR FUNCTION OUTPUT: 11001001101000000000101010000100

       - Next Round Left 32 Bits:  01101011000101111100000111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001101000000000101010000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011000101111100000111000001

       - Right 32 Bits:            11001001101000000000101010000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010111100100100111001011010011010100100011001101   [Subkey: 15]
          - Input Half:       11001001101000000000101010000100
          - S-Box Result:     01010011010011111111010000100111   [per every group of 4-bits]
          - Split Into Two:   0101001101001111 [L] 1111010000100111 [R]
          - Swap Halves:      11110100001001110101001101001111
          - Bit Inversion:    00001011110110001010110010110000
          - Compressed Key:   00011011011011000101101000101110   [done by compression P-Box]
          - XOR with Key:     00010000101101001111011010011110

          - FUNCTION OUTPUT:  00010000101101001111011010011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011000101111100000111000001

       - FUNCTION OUTPUT:          00010000101101001111011010011110

       - Left XOR FUNCTION OUTPUT: 01111011101000110011011101011111

       - Next Round Left 32 Bits:  11001001101000000000101010000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011101000110011011101011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001101000000000101010000100

       - Right 32 Bits:            01111011101000110011011101011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110100001101101100011010010110010101101110011001   [Subkey: 14]
          - Input Half:       01111011101000110011011101011111
          - S-Box Result:     11011000010000010001110110011011   [per every group of 4-bits]
          - Split Into Two:   1101100001000001 [L] 0001110110011011 [R]
          - Swap Halves:      00011101100110111101100001000001
          - Bit Inversion:    11100010011001000010011110111110
          - Compressed Key:   11011000011100100001101010110110   [done by compression P-Box]
          - XOR with Key:     00111010000101100011110100001000

          - FUNCTION OUTPUT:  00111010000101100011110100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001101000000000101010000100

       - FUNCTION OUTPUT:          00111010000101100011110100001000

       - Left XOR FUNCTION OUTPUT: 11110011101101100011011110001100

       - Next Round Left 32 Bits:  01111011101000110011011101011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011101101100011011110001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011101000110011011101011111

       - Right 32 Bits:            11110011101101100011011110001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000101111001001001110010110100110101001000110011   [Subkey: 13]
          - Input Half:       11110011101101100011011110001100
          - S-Box Result:     10110001100000000001110100100101   [per every group of 4-bits]
          - Split Into Two:   1011000110000000 [L] 0001110100100101 [R]
          - Swap Halves:      00011101001001011011000110000000
          - Bit Inversion:    11100010110110100100111001111111
          - Compressed Key:   01001010000110111001111010000011   [done by compression P-Box]
          - XOR with Key:     10101000110000011101000011111100

          - FUNCTION OUTPUT:  10101000110000011101000011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011101000110011011101011111

       - FUNCTION OUTPUT:          10101000110000011101000011111100

       - Left XOR FUNCTION OUTPUT: 11010011011000101110011110100011

       - Next Round Left 32 Bits:  11110011101101100011011110001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011011000101110011110100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011101101100011011110001100

       - Right 32 Bits:            11010011011000101110011110100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101000011011011000110100101100101011011100110   [Subkey: 12]
          - Input Half:       11010011011000101110011110100011
          - S-Box Result:     01100001000011101100110101000001   [per every group of 4-bits]
          - Split Into Two:   0110000100001110 [L] 1100110101000001 [R]
          - Swap Halves:      11001101010000010110000100001110
          - Bit Inversion:    00110010101111101001111011110001
          - Compressed Key:   01111110100111001000011011101001   [done by compression P-Box]
          - XOR with Key:     01001100001000100001100000011000

          - FUNCTION OUTPUT:  01001100001000100001100000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011101101100011011110001100

       - FUNCTION OUTPUT:          01001100001000100001100000011000

       - Left XOR FUNCTION OUTPUT: 10111111100101000010111110010100

       - Next Round Left 32 Bits:  11010011011000101110011110100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111100101000010111110010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011011000101110011110100011

       - Right 32 Bits:            10111111100101000010111110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100010001011110010010011100101101001101010010001100   [Subkey: 11]
          - Input Half:       10111111100101000010111110010100
          - S-Box Result:     10001011001101111110101100110111   [per every group of 4-bits]
          - Split Into Two:   1000101100110111 [L] 1110101100110111 [R]
          - Swap Halves:      11101011001101111000101100110111
          - Bit Inversion:    00010100110010000111010011001000
          - Compressed Key:   01010010110001101010001101101100   [done by compression P-Box]
          - XOR with Key:     01000110000011101101011110100100

          - FUNCTION OUTPUT:  01000110000011101101011110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011011000101110011110100011

       - FUNCTION OUTPUT:          01000110000011101101011110100100

       - Left XOR FUNCTION OUTPUT: 10010101011011000011000000000111

       - Next Round Left 32 Bits:  10111111100101000010111110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010101011011000011000000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111100101000010111110010100

       - Right 32 Bits:            10010101011011000011000000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101110111010000110110110001101001011001010110111001   [Subkey: 10]
          - Input Half:       10010101011011000011000000000111
          - S-Box Result:     00111001000001010001111111111101   [per every group of 4-bits]
          - Split Into Two:   0011100100000101 [L] 0001111111111101 [R]
          - Swap Halves:      00011111111111010011100100000101
          - Bit Inversion:    11100000000000101100011011111010
          - Compressed Key:   01011011001001111110100101110110   [done by compression P-Box]
          - XOR with Key:     10111011001001010010111110001100

          - FUNCTION OUTPUT:  10111011001001010010111110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111100101000010111110010100

       - FUNCTION OUTPUT:          10111011001001010010111110001100

       - Left XOR FUNCTION OUTPUT: 00000100101100010000000000011000

       - Next Round Left 32 Bits:  10010101011011000011000000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100101100010000000000011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010101011011000011000000000111

       - Right 32 Bits:            00000100101100010000000000011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101000100010111100100100111001011010011010100100011   [Subkey: 9]
          - Input Half:       00000100101100010000000000011000
          - S-Box Result:     11110111100010101111111110100010   [per every group of 4-bits]
          - Split Into Two:   1111011110001010 [L] 1111111110100010 [R]
          - Swap Halves:      11111111101000101111011110001010
          - Bit Inversion:    00000000010111010000100001110101
          - Compressed Key:   01011000111100010110100001010011   [done by compression P-Box]
          - XOR with Key:     01011000101011000110000000100110

          - FUNCTION OUTPUT:  01011000101011000110000000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010101011011000011000000000111

       - FUNCTION OUTPUT:          01011000101011000110000000100110

       - Left XOR FUNCTION OUTPUT: 11001101110000000101000000100001

       - Next Round Left 32 Bits:  00000100101100010000000000011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101110000000101000000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100101100010000000000011000

       - Right 32 Bits:            11001101110000000101000000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011101110100001101101100011010010110010101101110   [Subkey: 8]
          - Input Half:       11001101110000000101000000100001
          - S-Box Result:     01010110010111111001111111101010   [per every group of 4-bits]
          - Split Into Two:   0101011001011111 [L] 1001111111101010 [R]
          - Swap Halves:      10011111111010100101011001011111
          - Bit Inversion:    01100000000101011010100110100000
          - Compressed Key:   00011110010010010011101001011101   [done by compression P-Box]
          - XOR with Key:     01111110010111001001001111111101

          - FUNCTION OUTPUT:  01111110010111001001001111111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100101100010000000000011000

       - FUNCTION OUTPUT:          01111110010111001001001111111101

       - Left XOR FUNCTION OUTPUT: 01111010111011011001001111100101

       - Next Round Left 32 Bits:  11001101110000000101000000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010111011011001001111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001101110000000101000000100001

       - Right 32 Bits:            01111010111011011001001111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010001000101111001001001110010110100110101001000   [Subkey: 7]
          - Input Half:       01111010111011011001001111100101
          - S-Box Result:     11010100110001100011000111001001   [per every group of 4-bits]
          - Split Into Two:   1101010011000110 [L] 0011000111001001 [R]
          - Swap Halves:      00110001110010011101010011000110
          - Bit Inversion:    11001110001101100010101100111001
          - Compressed Key:   10010010011110001101111001010100   [done by compression P-Box]
          - XOR with Key:     01011100010011101111010101101101

          - FUNCTION OUTPUT:  01011100010011101111010101101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001101110000000101000000100001

       - FUNCTION OUTPUT:          01011100010011101111010101101101

       - Left XOR FUNCTION OUTPUT: 10010001100011101010010101001100

       - Next Round Left 32 Bits:  01111010111011011001001111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010001100011101010010101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010111011011001001111100101

       - Right 32 Bits:            10010001100011101010010101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001010111011101000011011011000110100101100101011011   [Subkey: 6]
          - Input Half:       10010001100011101010010101001100
          - S-Box Result:     00111010001011000100100101110101   [per every group of 4-bits]
          - Split Into Two:   0011101000101100 [L] 0100100101110101 [R]
          - Swap Halves:      01001001011101010011101000101100
          - Bit Inversion:    10110110100010101100010111010011
          - Compressed Key:   11001011010111100100011000010111   [done by compression P-Box]
          - XOR with Key:     01111101110101001000001111000100

          - FUNCTION OUTPUT:  01111101110101001000001111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010111011011001001111100101

       - FUNCTION OUTPUT:          01111101110101001000001111000100

       - Left XOR FUNCTION OUTPUT: 00000111001110010001000000100001

       - Next Round Left 32 Bits:  10010001100011101010010101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111001110010001000000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010001100011101010010101001100

       - Right 32 Bits:            00000111001110010001000000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010100010001011110010010011100101101001101010010   [Subkey: 5]
          - Input Half:       00000111001110010001000000100001
          - S-Box Result:     11111101000100111010111111101010   [per every group of 4-bits]
          - Split Into Two:   1111110100010011 [L] 1010111111101010 [R]
          - Swap Halves:      10101111111010101111110100010011
          - Bit Inversion:    01010000000101010000001011101100
          - Compressed Key:   01101000000101100011011110010001   [done by compression P-Box]
          - XOR with Key:     00111000000000110011010101111101

          - FUNCTION OUTPUT:  00111000000000110011010101111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010001100011101010010101001100

       - FUNCTION OUTPUT:          00111000000000110011010101111101

       - Left XOR FUNCTION OUTPUT: 10101001100011011001000000110001

       - Next Round Left 32 Bits:  00000111001110010001000000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001100011011001000000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111001110010001000000100001

       - Right 32 Bits:            10101001100011011001000000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110010101110111010000110110110001101001011001010110   [Subkey: 4]
          - Input Half:       10101001100011011001000000110001
          - S-Box Result:     01000011001001100011111100011010   [per every group of 4-bits]
          - Split Into Two:   0100001100100110 [L] 0011111100011010 [R]
          - Swap Halves:      00111111000110100100001100100110
          - Bit Inversion:    11000000111001011011110011011001
          - Compressed Key:   00111010110100111001010111001001   [done by compression P-Box]
          - XOR with Key:     11111010001101100010100100010000

          - FUNCTION OUTPUT:  11111010001101100010100100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111001110010001000000100001

       - FUNCTION OUTPUT:          11111010001101100010100100010000

       - Left XOR FUNCTION OUTPUT: 11111101000011110011100100110001

       - Next Round Left 32 Bits:  10101001100011011001000000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101000011110011100100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001100011011001000000110001

       - Right 32 Bits:            11111101000011110011100100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100110101000100010111100100100111001011010011010100   [Subkey: 3]
          - Input Half:       11111101000011110011100100110001
          - S-Box Result:     10110110111110110001001100011010   [per every group of 4-bits]
          - Split Into Two:   1011011011111011 [L] 0001001100011010 [R]
          - Swap Halves:      00010011000110101011011011111011
          - Bit Inversion:    11101100111001010100100100000100
          - Compressed Key:   10011010010011011000000101101000   [done by compression P-Box]
          - XOR with Key:     01110110101010001100100001101100

          - FUNCTION OUTPUT:  01110110101010001100100001101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001100011011001000000110001

       - FUNCTION OUTPUT:          01110110101010001100100001101100

       - Left XOR FUNCTION OUTPUT: 11011111001001010101100001011101

       - Next Round Left 32 Bits:  11111101000011110011100100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111001001010101100001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101000011110011100100110001

       - Right 32 Bits:            11011111001001010101100001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001100101011101110100001101101100011010010110010101   [Subkey: 2]
          - Input Half:       11011111001001010101100001011101
          - S-Box Result:     01101011111010011001001010010110   [per every group of 4-bits]
          - Split Into Two:   0110101111101001 [L] 1001001010010110 [R]
          - Swap Halves:      10010010100101100110101111101001
          - Bit Inversion:    01101101011010011001010000010110
          - Compressed Key:   11001010011100001110100101111010   [done by compression P-Box]
          - XOR with Key:     10100111000110010111110101101100

          - FUNCTION OUTPUT:  10100111000110010111110101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101000011110011100100110001

       - FUNCTION OUTPUT:          10100111000110010111110101101100

       - Left XOR FUNCTION OUTPUT: 01011010000101100100010001011101

       - Next Round Left 32 Bits:  11011111001001010101100001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010000101100100010001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111001001010101100001011101

       - Right 32 Bits:            01011010000101100100010001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001101010001000101111001001001110010110100110101   [Subkey: 1]
          - Input Half:       01011010000101100100010001011101
          - S-Box Result:     10010100101000000111011110010110   [per every group of 4-bits]
          - Split Into Two:   1001010010100000 [L] 0111011110010110 [R]
          - Swap Halves:      01110111100101101001010010100000
          - Bit Inversion:    10001000011010010110101101011111
          - Compressed Key:   00101110000110110110110001011010   [done by compression P-Box]
          - XOR with Key:     10100110011100100000011100000101

          - FUNCTION OUTPUT:  10100110011100100000011100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111001001010101100001011101

       - FUNCTION OUTPUT:          10100110011100100000011100000101

       - Left XOR FUNCTION OUTPUT: 01111001010101110101111101011000

       - Next Round Left 32 Bits:  01011010000101100100010001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001010101110101111101011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111100101010111010111110101100001011010000101100100010001011101

 > Decrypted Block:     0111100101010111010111110101100001011010000101100100010001011101


!!!CBC: Previous Ciphertext:                             0011000100110010001100110011010000110101001101100011011100111000

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100001100101011011000110110001101111001000000111001101100101

 > Final Processed Block:                                0100100001100101011011000110110001101111001000000111001101100101



Ciphertext Block 2:                                      1001001110000000111001100001000101000001001101100100110001111101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010011100000001110011000010001

       - Right 32 Bits:            01000001001101100100110001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010000110110110001101001011001010110111001100101   [Subkey: 16]
          - Input Half:       01000001001101100100110001111101
          - S-Box Result:     01111010000100000111010111010110   [per every group of 4-bits]
          - Split Into Two:   0111101000010000 [L] 0111010111010110 [R]
          - Swap Halves:      01110101110101100111101000010000
          - Bit Inversion:    10001010001010011000010111101111
          - Compressed Key:   01110000111010010111101011001010   [done by compression P-Box]
          - XOR with Key:     11111010110000001111111100100101

          - FUNCTION OUTPUT:  11111010110000001111111100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010011100000001110011000010001

       - FUNCTION OUTPUT:          11111010110000001111111100100101

       - Left XOR FUNCTION OUTPUT: 01101001010000000001100100110100

       - Next Round Left 32 Bits:  01000001001101100100110001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001010000000001100100110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001001101100100110001111101

       - Right 32 Bits:            01101001010000000001100100110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010111100100100111001011010011010100100011001101   [Subkey: 15]
          - Input Half:       01101001010000000001100100110100
          - S-Box Result:     00000011011111111010001100010111   [per every group of 4-bits]
          - Split Into Two:   0000001101111111 [L] 1010001100010111 [R]
          - Swap Halves:      10100011000101110000001101111111
          - Bit Inversion:    01011100111010001111110010000000
          - Compressed Key:   00011011011011000101101000101110   [done by compression P-Box]
          - XOR with Key:     01000111100001001010011010101110

          - FUNCTION OUTPUT:  01000111100001001010011010101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001001101100100110001111101

       - FUNCTION OUTPUT:          01000111100001001010011010101110

       - Left XOR FUNCTION OUTPUT: 00000110101100101110101011010011

       - Next Round Left 32 Bits:  01101001010000000001100100110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110101100101110101011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001010000000001100100110100

       - Right 32 Bits:            00000110101100101110101011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110100001101101100011010010110010101101110011001   [Subkey: 14]
          - Input Half:       00000110101100101110101011010011
          - S-Box Result:     11110000100011101100010001100001   [per every group of 4-bits]
          - Split Into Two:   1111000010001110 [L] 1100010001100001 [R]
          - Swap Halves:      11000100011000011111000010001110
          - Bit Inversion:    00111011100111100000111101110001
          - Compressed Key:   11011000011100100001101010110110   [done by compression P-Box]
          - XOR with Key:     11100011111011000001010111000111

          - FUNCTION OUTPUT:  11100011111011000001010111000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001010000000001100100110100

       - FUNCTION OUTPUT:          11100011111011000001010111000111

       - Left XOR FUNCTION OUTPUT: 10001010101011000000110011110011

       - Next Round Left 32 Bits:  00000110101100101110101011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010101011000000110011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110101100101110101011010011

       - Right 32 Bits:            10001010101011000000110011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000101111001001001110010110100110101001000110011   [Subkey: 13]
          - Input Half:       10001010101011000000110011110011
          - S-Box Result:     00100100010001011111010110110001   [per every group of 4-bits]
          - Split Into Two:   0010010001000101 [L] 1111010110110001 [R]
          - Swap Halves:      11110101101100010010010001000101
          - Bit Inversion:    00001010010011101101101110111010
          - Compressed Key:   01001010000110111001111010000011   [done by compression P-Box]
          - XOR with Key:     01000000010101010100010100111001

          - FUNCTION OUTPUT:  01000000010101010100010100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110101100101110101011010011

       - FUNCTION OUTPUT:          01000000010101010100010100111001

       - Left XOR FUNCTION OUTPUT: 01000110111001111010111111101010

       - Next Round Left 32 Bits:  10001010101011000000110011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110111001111010111111101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010101011000000110011110011

       - Right 32 Bits:            01000110111001111010111111101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101000011011011000110100101100101011011100110   [Subkey: 12]
          - Input Half:       01000110111001111010111111101010
          - S-Box Result:     01110000110011010100101111000100   [per every group of 4-bits]
          - Split Into Two:   0111000011001101 [L] 0100101111000100 [R]
          - Swap Halves:      01001011110001000111000011001101
          - Bit Inversion:    10110100001110111000111100110010
          - Compressed Key:   01111110100111001000011011101001   [done by compression P-Box]
          - XOR with Key:     11001010101001110000100111011011

          - FUNCTION OUTPUT:  11001010101001110000100111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010101011000000110011110011

       - FUNCTION OUTPUT:          11001010101001110000100111011011

       - Left XOR FUNCTION OUTPUT: 01000000000010110000010100101000

       - Next Round Left 32 Bits:  01000110111001111010111111101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000000010110000010100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110111001111010111111101010

       - Right 32 Bits:            01000000000010110000010100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100010001011110010010011100101101001101010010001100   [Subkey: 11]
          - Input Half:       01000000000010110000010100101000
          - S-Box Result:     01111111111110001111100111100010   [per every group of 4-bits]
          - Split Into Two:   0111111111111000 [L] 1111100111100010 [R]
          - Swap Halves:      11111001111000100111111111111000
          - Bit Inversion:    00000110000111011000000000000111
          - Compressed Key:   01010010110001101010001101101100   [done by compression P-Box]
          - XOR with Key:     01010100110110110010001101101011

          - FUNCTION OUTPUT:  01010100110110110010001101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110111001111010111111101010

       - FUNCTION OUTPUT:          01010100110110110010001101101011

       - Left XOR FUNCTION OUTPUT: 00010010001111001000110010000001

       - Next Round Left 32 Bits:  01000000000010110000010100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001111001000110010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000000010110000010100101000

       - Right 32 Bits:            00010010001111001000110010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101110111010000110110110001101001011001010110111001   [Subkey: 10]
          - Input Half:       00010010001111001000110010000001
          - S-Box Result:     10101110000101010010010100101010   [per every group of 4-bits]
          - Split Into Two:   1010111000010101 [L] 0010010100101010 [R]
          - Swap Halves:      00100101001010101010111000010101
          - Bit Inversion:    11011010110101010101000111101010
          - Compressed Key:   01011011001001111110100101110110   [done by compression P-Box]
          - XOR with Key:     10000001111100101011100010011100

          - FUNCTION OUTPUT:  10000001111100101011100010011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000000010110000010100101000

       - FUNCTION OUTPUT:          10000001111100101011100010011100

       - Left XOR FUNCTION OUTPUT: 11000001111110011011110110110100

       - Next Round Left 32 Bits:  00010010001111001000110010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001111110011011110110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010001111001000110010000001

       - Right 32 Bits:            11000001111110011011110110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101000100010111100100100111001011010011010100100011   [Subkey: 9]
          - Input Half:       11000001111110011011110110110100
          - S-Box Result:     01011010101100111000011010000111   [per every group of 4-bits]
          - Split Into Two:   0101101010110011 [L] 1000011010000111 [R]
          - Swap Halves:      10000110100001110101101010110011
          - Bit Inversion:    01111001011110001010010101001100
          - Compressed Key:   01011000111100010110100001010011   [done by compression P-Box]
          - XOR with Key:     00100001100010011100110100011111

          - FUNCTION OUTPUT:  00100001100010011100110100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010001111001000110010000001

       - FUNCTION OUTPUT:          00100001100010011100110100011111

       - Left XOR FUNCTION OUTPUT: 00110011101101010100000110011110

       - Next Round Left 32 Bits:  11000001111110011011110110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011101101010100000110011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001111110011011110110110100

       - Right 32 Bits:            00110011101101010100000110011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011101110100001101101100011010010110010101101110   [Subkey: 8]
          - Input Half:       00110011101101010100000110011110
          - S-Box Result:     00010001100010010111101000111100   [per every group of 4-bits]
          - Split Into Two:   0001000110001001 [L] 0111101000111100 [R]
          - Swap Halves:      01111010001111000001000110001001
          - Bit Inversion:    10000101110000111110111001110110
          - Compressed Key:   00011110010010010011101001011101   [done by compression P-Box]
          - XOR with Key:     10011011100010101101010000101011

          - FUNCTION OUTPUT:  10011011100010101101010000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001111110011011110110110100

       - FUNCTION OUTPUT:          10011011100010101101010000101011

       - Left XOR FUNCTION OUTPUT: 01011010011100110110100110011111

       - Next Round Left 32 Bits:  00110011101101010100000110011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010011100110110100110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011101101010100000110011110

       - Right 32 Bits:            01011010011100110110100110011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010001000101111001001001110010110100110101001000   [Subkey: 7]
          - Input Half:       01011010011100110110100110011111
          - S-Box Result:     10010100110100010000001100111011   [per every group of 4-bits]
          - Split Into Two:   1001010011010001 [L] 0000001100111011 [R]
          - Swap Halves:      00000011001110111001010011010001
          - Bit Inversion:    11111100110001000110101100101110
          - Compressed Key:   10010010011110001101111001010100   [done by compression P-Box]
          - XOR with Key:     01101110101111001011010101111010

          - FUNCTION OUTPUT:  01101110101111001011010101111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011101101010100000110011110

       - FUNCTION OUTPUT:          01101110101111001011010101111010

       - Left XOR FUNCTION OUTPUT: 01011101000010011111010011100100

       - Next Round Left 32 Bits:  01011010011100110110100110011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101000010011111010011100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010011100110110100110011111

       - Right 32 Bits:            01011101000010011111010011100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001010111011101000011011011000110100101100101011011   [Subkey: 6]
          - Input Half:       01011101000010011111010011100100
          - S-Box Result:     10010110111100111011011111000111   [per every group of 4-bits]
          - Split Into Two:   1001011011110011 [L] 1011011111000111 [R]
          - Swap Halves:      10110111110001111001011011110011
          - Bit Inversion:    01001000001110000110100100001100
          - Compressed Key:   11001011010111100100011000010111   [done by compression P-Box]
          - XOR with Key:     10000011011001100010111100011011

          - FUNCTION OUTPUT:  10000011011001100010111100011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010011100110110100110011111

       - FUNCTION OUTPUT:          10000011011001100010111100011011

       - Left XOR FUNCTION OUTPUT: 11011001000101010100011010000100

       - Next Round Left 32 Bits:  01011101000010011111010011100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001000101010100011010000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101000010011111010011100100

       - Right 32 Bits:            11011001000101010100011010000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010100010001011110010010011100101101001101010010   [Subkey: 5]
          - Input Half:       11011001000101010100011010000100
          - S-Box Result:     01100011101010010111000000100111   [per every group of 4-bits]
          - Split Into Two:   0110001110101001 [L] 0111000000100111 [R]
          - Swap Halves:      01110000001001110110001110101001
          - Bit Inversion:    10001111110110001001110001010110
          - Compressed Key:   01101000000101100011011110010001   [done by compression P-Box]
          - XOR with Key:     11100111110011101010101111000111

          - FUNCTION OUTPUT:  11100111110011101010101111000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101000010011111010011100100

       - FUNCTION OUTPUT:          11100111110011101010101111000111

       - Left XOR FUNCTION OUTPUT: 10111010110001110101111100100011

       - Next Round Left 32 Bits:  11011001000101010100011010000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010110001110101111100100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001000101010100011010000100

       - Right 32 Bits:            10111010110001110101111100100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110010101110111010000110110110001101001011001010110   [Subkey: 4]
          - Input Half:       10111010110001110101111100100011
          - S-Box Result:     10000100010111011001101111100001   [per every group of 4-bits]
          - Split Into Two:   1000010001011101 [L] 1001101111100001 [R]
          - Swap Halves:      10011011111000011000010001011101
          - Bit Inversion:    01100100000111100111101110100010
          - Compressed Key:   00111010110100111001010111001001   [done by compression P-Box]
          - XOR with Key:     01011110110011011110111001101011

          - FUNCTION OUTPUT:  01011110110011011110111001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001000101010100011010000100

       - FUNCTION OUTPUT:          01011110110011011110111001101011

       - Left XOR FUNCTION OUTPUT: 10000111110110001010100011101111

       - Next Round Left 32 Bits:  10111010110001110101111100100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111110110001010100011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010110001110101111100100011

       - Right 32 Bits:            10000111110110001010100011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100110101000100010111100100100111001011010011010100   [Subkey: 3]
          - Input Half:       10000111110110001010100011101111
          - S-Box Result:     00101101011000100100001011001011   [per every group of 4-bits]
          - Split Into Two:   0010110101100010 [L] 0100001011001011 [R]
          - Swap Halves:      01000010110010110010110101100010
          - Bit Inversion:    10111101001101001101001010011101
          - Compressed Key:   10011010010011011000000101101000   [done by compression P-Box]
          - XOR with Key:     00100111011110010101001111110101

          - FUNCTION OUTPUT:  00100111011110010101001111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010110001110101111100100011

       - FUNCTION OUTPUT:          00100111011110010101001111110101

       - Left XOR FUNCTION OUTPUT: 10011101101111100000110011010110

       - Next Round Left 32 Bits:  10000111110110001010100011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101101111100000110011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111110110001010100011101111

       - Right 32 Bits:            10011101101111100000110011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001100101011101110100001101101100011010010110010101   [Subkey: 2]
          - Input Half:       10011101101111100000110011010110
          - S-Box Result:     00110110100011001111010101100000   [per every group of 4-bits]
          - Split Into Two:   0011011010001100 [L] 1111010101100000 [R]
          - Swap Halves:      11110101011000000011011010001100
          - Bit Inversion:    00001010100111111100100101110011
          - Compressed Key:   11001010011100001110100101111010   [done by compression P-Box]
          - XOR with Key:     11000000111011110010000000001001

          - FUNCTION OUTPUT:  11000000111011110010000000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111110110001010100011101111

       - FUNCTION OUTPUT:          11000000111011110010000000001001

       - Left XOR FUNCTION OUTPUT: 01000111001101111000100011100110

       - Next Round Left 32 Bits:  10011101101111100000110011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111001101111000100011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101101111100000110011010110

       - Right 32 Bits:            01000111001101111000100011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001101010001000101111001001001110010110100110101   [Subkey: 1]
          - Input Half:       01000111001101111000100011100110
          - S-Box Result:     01111101000111010010001011000000   [per every group of 4-bits]
          - Split Into Two:   0111110100011101 [L] 0010001011000000 [R]
          - Swap Halves:      00100010110000000111110100011101
          - Bit Inversion:    11011101001111111000001011100010
          - Compressed Key:   00101110000110110110110001011010   [done by compression P-Box]
          - XOR with Key:     11110011001001001110111010111000

          - FUNCTION OUTPUT:  11110011001001001110111010111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101101111100000110011010110

       - FUNCTION OUTPUT:          11110011001001001110111010111000

       - Left XOR FUNCTION OUTPUT: 01101110100110101110001001101110

       - Next Round Left 32 Bits:  01000111001101111000100011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110100110101110001001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110111010011010111000100110111001000111001101111000100011100110

 > Decrypted Block:     0110111010011010111000100110111001000111001101111000100011100110


!!!CBC: Previous Ciphertext:                             0001110011101100100001110001110001101011000101111100000111000001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111001001110110011001010111001000101100001000000100100100100111

 > Final Processed Block:                                0111001001110110011001010111001000101100001000000100100100100111



Ciphertext Block 3:                                      1101101011101111010010100010001001100010001011001010011100100111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010111011110100101000100010

       - Right 32 Bits:            01100010001011001010011100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010000110110110001101001011001010110111001100101   [Subkey: 16]
          - Input Half:       01100010001011001010011100100111
          - S-Box Result:     00001110111001010100110111101101   [per every group of 4-bits]
          - Split Into Two:   0000111011100101 [L] 0100110111101101 [R]
          - Swap Halves:      01001101111011010000111011100101
          - Bit Inversion:    10110010000100101111000100011010
          - Compressed Key:   01110000111010010111101011001010   [done by compression P-Box]
          - XOR with Key:     11000010111110111000101111010000

          - FUNCTION OUTPUT:  11000010111110111000101111010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010111011110100101000100010

       - FUNCTION OUTPUT:          11000010111110111000101111010000

       - Left XOR FUNCTION OUTPUT: 00011000000101001100000111110010

       - Next Round Left 32 Bits:  01100010001011001010011100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000000101001100000111110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010001011001010011100100111

       - Right 32 Bits:            00011000000101001100000111110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010111100100100111001011010011010100100011001101   [Subkey: 15]
          - Input Half:       00011000000101001100000111110010
          - S-Box Result:     10100010101001110101101010111110   [per every group of 4-bits]
          - Split Into Two:   1010001010100111 [L] 0101101010111110 [R]
          - Swap Halves:      01011010101111101010001010100111
          - Bit Inversion:    10100101010000010101110101011000
          - Compressed Key:   00011011011011000101101000101110   [done by compression P-Box]
          - XOR with Key:     10111110001011010000011101110110

          - FUNCTION OUTPUT:  10111110001011010000011101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010001011001010011100100111

       - FUNCTION OUTPUT:          10111110001011010000011101110110

       - Left XOR FUNCTION OUTPUT: 11011100000000011010000001010001

       - Next Round Left 32 Bits:  00011000000101001100000111110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011100000000011010000001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000000101001100000111110010

       - Right 32 Bits:            11011100000000011010000001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110100001101101100011010010110010101101110011001   [Subkey: 14]
          - Input Half:       11011100000000011010000001010001
          - S-Box Result:     01100101111110100100111110011010   [per every group of 4-bits]
          - Split Into Two:   0110010111111010 [L] 0100111110011010 [R]
          - Swap Halves:      01001111100110100110010111111010
          - Bit Inversion:    10110000011001011001101000000101
          - Compressed Key:   11011000011100100001101010110110   [done by compression P-Box]
          - XOR with Key:     01101000000101111000000010110011

          - FUNCTION OUTPUT:  01101000000101111000000010110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000000101001100000111110010

       - FUNCTION OUTPUT:          01101000000101111000000010110011

       - Left XOR FUNCTION OUTPUT: 01110000000000110100000101000001

       - Next Round Left 32 Bits:  11011100000000011010000001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000000000110100000101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011100000000011010000001010001

       - Right 32 Bits:            01110000000000110100000101000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000101111001001001110010110100110101001000110011   [Subkey: 13]
          - Input Half:       01110000000000110100000101000001
          - S-Box Result:     11011111111100010111101001111010   [per every group of 4-bits]
          - Split Into Two:   1101111111110001 [L] 0111101001111010 [R]
          - Swap Halves:      01111010011110101101111111110001
          - Bit Inversion:    10000101100001010010000000001110
          - Compressed Key:   01001010000110111001111010000011   [done by compression P-Box]
          - XOR with Key:     11001111100111101011111010001101

          - FUNCTION OUTPUT:  11001111100111101011111010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011100000000011010000001010001

       - FUNCTION OUTPUT:          11001111100111101011111010001101

       - Left XOR FUNCTION OUTPUT: 00010011100111110001111011011100

       - Next Round Left 32 Bits:  01110000000000110100000101000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011100111110001111011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000000000110100000101000001

       - Right 32 Bits:            00010011100111110001111011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101000011011011000110100101100101011011100110   [Subkey: 12]
          - Input Half:       00010011100111110001111011011100
          - S-Box Result:     10100001001110111010110001100101   [per every group of 4-bits]
          - Split Into Two:   1010000100111011 [L] 1010110001100101 [R]
          - Swap Halves:      10101100011001011010000100111011
          - Bit Inversion:    01010011100110100101111011000100
          - Compressed Key:   01111110100111001000011011101001   [done by compression P-Box]
          - XOR with Key:     00101101000001101101100000101101

          - FUNCTION OUTPUT:  00101101000001101101100000101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000000000110100000101000001

       - FUNCTION OUTPUT:          00101101000001101101100000101101

       - Left XOR FUNCTION OUTPUT: 01011101000001011001100101101100

       - Next Round Left 32 Bits:  00010011100111110001111011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101000001011001100101101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011100111110001111011011100

       - Right 32 Bits:            01011101000001011001100101101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100010001011110010010011100101101001101010010001100   [Subkey: 11]
          - Input Half:       01011101000001011001100101101100
          - S-Box Result:     10010110111110010011001100000101   [per every group of 4-bits]
          - Split Into Two:   1001011011111001 [L] 0011001100000101 [R]
          - Swap Halves:      00110011000001011001011011111001
          - Bit Inversion:    11001100111110100110100100000110
          - Compressed Key:   01010010110001101010001101101100   [done by compression P-Box]
          - XOR with Key:     10011110001111001100101001101010

          - FUNCTION OUTPUT:  10011110001111001100101001101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011100111110001111011011100

       - FUNCTION OUTPUT:          10011110001111001100101001101010

       - Left XOR FUNCTION OUTPUT: 10001101101000111101010010110110

       - Next Round Left 32 Bits:  01011101000001011001100101101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101101000111101010010110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101000001011001100101101100

       - Right 32 Bits:            10001101101000111101010010110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101110111010000110110110001101001011001010110111001   [Subkey: 10]
          - Input Half:       10001101101000111101010010110110
          - S-Box Result:     00100110010000010110011110000000   [per every group of 4-bits]
          - Split Into Two:   0010011001000001 [L] 0110011110000000 [R]
          - Swap Halves:      01100111100000000010011001000001
          - Bit Inversion:    10011000011111111101100110111110
          - Compressed Key:   01011011001001111110100101110110   [done by compression P-Box]
          - XOR with Key:     11000011010110000011000011001000

          - FUNCTION OUTPUT:  11000011010110000011000011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101000001011001100101101100

       - FUNCTION OUTPUT:          11000011010110000011000011001000

       - Left XOR FUNCTION OUTPUT: 10011110010111011010100110100100

       - Next Round Left 32 Bits:  10001101101000111101010010110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110010111011010100110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101101000111101010010110110

       - Right 32 Bits:            10011110010111011010100110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101000100010111100100100111001011010011010100100011   [Subkey: 9]
          - Input Half:       10011110010111011010100110100100
          - S-Box Result:     00111100100101100100001101000111   [per every group of 4-bits]
          - Split Into Two:   0011110010010110 [L] 0100001101000111 [R]
          - Swap Halves:      01000011010001110011110010010110
          - Bit Inversion:    10111100101110001100001101101001
          - Compressed Key:   01011000111100010110100001010011   [done by compression P-Box]
          - XOR with Key:     11100100010010011010101100111010

          - FUNCTION OUTPUT:  11100100010010011010101100111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101101000111101010010110110

       - FUNCTION OUTPUT:          11100100010010011010101100111010

       - Left XOR FUNCTION OUTPUT: 01101001111010100111111110001100

       - Next Round Left 32 Bits:  10011110010111011010100110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001111010100111111110001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110010111011010100110100100

       - Right 32 Bits:            01101001111010100111111110001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011101110100001101101100011010010110010101101110   [Subkey: 8]
          - Input Half:       01101001111010100111111110001100
          - S-Box Result:     00000011110001001101101100100101   [per every group of 4-bits]
          - Split Into Two:   0000001111000100 [L] 1101101100100101 [R]
          - Swap Halves:      11011011001001010000001111000100
          - Bit Inversion:    00100100110110101111110000111011
          - Compressed Key:   00011110010010010011101001011101   [done by compression P-Box]
          - XOR with Key:     00111010100100111100011001100110

          - FUNCTION OUTPUT:  00111010100100111100011001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110010111011010100110100100

       - FUNCTION OUTPUT:          00111010100100111100011001100110

       - Left XOR FUNCTION OUTPUT: 10100100110011100110111111000010

       - Next Round Left 32 Bits:  01101001111010100111111110001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100110011100110111111000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001111010100111111110001100

       - Right 32 Bits:            10100100110011100110111111000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010001000101111001001001110010110100110101001000   [Subkey: 7]
          - Input Half:       10100100110011100110111111000010
          - S-Box Result:     01000111010111000000101101011110   [per every group of 4-bits]
          - Split Into Two:   0100011101011100 [L] 0000101101011110 [R]
          - Swap Halves:      00001011010111100100011101011100
          - Bit Inversion:    11110100101000011011100010100011
          - Compressed Key:   10010010011110001101111001010100   [done by compression P-Box]
          - XOR with Key:     01100110110110010110011011110111

          - FUNCTION OUTPUT:  01100110110110010110011011110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001111010100111111110001100

       - FUNCTION OUTPUT:          01100110110110010110011011110111

       - Left XOR FUNCTION OUTPUT: 00001111001100110001100101111011

       - Next Round Left 32 Bits:  10100100110011100110111111000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111001100110001100101111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100110011100110111111000010

       - Right 32 Bits:            00001111001100110001100101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001010111011101000011011011000110100101100101011011   [Subkey: 6]
          - Input Half:       00001111001100110001100101111011
          - S-Box Result:     11111011000100011010001111011000   [per every group of 4-bits]
          - Split Into Two:   1111101100010001 [L] 1010001111011000 [R]
          - Swap Halves:      10100011110110001111101100010001
          - Bit Inversion:    01011100001001110000010011101110
          - Compressed Key:   11001011010111100100011000010111   [done by compression P-Box]
          - XOR with Key:     10010111011110010100001011111001

          - FUNCTION OUTPUT:  10010111011110010100001011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100110011100110111111000010

       - FUNCTION OUTPUT:          10010111011110010100001011111001

       - Left XOR FUNCTION OUTPUT: 00110011101101110010110100111011

       - Next Round Left 32 Bits:  00001111001100110001100101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011101101110010110100111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001111001100110001100101111011

       - Right 32 Bits:            00110011101101110010110100111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010100010001011110010010011100101101001101010010   [Subkey: 5]
          - Input Half:       00110011101101110010110100111011
          - S-Box Result:     00010001100011011110011000011000   [per every group of 4-bits]
          - Split Into Two:   0001000110001101 [L] 1110011000011000 [R]
          - Swap Halves:      11100110000110000001000110001101
          - Bit Inversion:    00011001111001111110111001110010
          - Compressed Key:   01101000000101100011011110010001   [done by compression P-Box]
          - XOR with Key:     01110001111100011101100111100011

          - FUNCTION OUTPUT:  01110001111100011101100111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001111001100110001100101111011

       - FUNCTION OUTPUT:          01110001111100011101100111100011

       - Left XOR FUNCTION OUTPUT: 01111110110000101100000010011000

       - Next Round Left 32 Bits:  00110011101101110010110100111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110110000101100000010011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011101101110010110100111011

       - Right 32 Bits:            01111110110000101100000010011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110010101110111010000110110110001101001011001010110   [Subkey: 4]
          - Input Half:       01111110110000101100000010011000
          - S-Box Result:     11011100010111100101111100110010   [per every group of 4-bits]
          - Split Into Two:   1101110001011110 [L] 0101111100110010 [R]
          - Swap Halves:      01011111001100101101110001011110
          - Bit Inversion:    10100000110011010010001110100001
          - Compressed Key:   00111010110100111001010111001001   [done by compression P-Box]
          - XOR with Key:     10011010000111101011011001101000

          - FUNCTION OUTPUT:  10011010000111101011011001101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011101101110010110100111011

       - FUNCTION OUTPUT:          10011010000111101011011001101000

       - Left XOR FUNCTION OUTPUT: 10101001101010011001101101010011

       - Next Round Left 32 Bits:  01111110110000101100000010011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001101010011001101101010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110110000101100000010011000

       - Right 32 Bits:            10101001101010011001101101010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100110101000100010111100100100111001011010011010100   [Subkey: 3]
          - Input Half:       10101001101010011001101101010011
          - S-Box Result:     01000011010000110011100010010001   [per every group of 4-bits]
          - Split Into Two:   0100001101000011 [L] 0011100010010001 [R]
          - Swap Halves:      00111000100100010100001101000011
          - Bit Inversion:    11000111011011101011110010111100
          - Compressed Key:   10011010010011011000000101101000   [done by compression P-Box]
          - XOR with Key:     01011101001000110011110111010100

          - FUNCTION OUTPUT:  01011101001000110011110111010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110110000101100000010011000

       - FUNCTION OUTPUT:          01011101001000110011110111010100

       - Left XOR FUNCTION OUTPUT: 00100011111000011111110101001100

       - Next Round Left 32 Bits:  10101001101010011001101101010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011111000011111110101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001101010011001101101010011

       - Right 32 Bits:            00100011111000011111110101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001100101011101110100001101101100011010010110010101   [Subkey: 2]
          - Input Half:       00100011111000011111110101001100
          - S-Box Result:     11100001110010101011011001110101   [per every group of 4-bits]
          - Split Into Two:   1110000111001010 [L] 1011011001110101 [R]
          - Swap Halves:      10110110011101011110000111001010
          - Bit Inversion:    01001001100010100001111000110101
          - Compressed Key:   11001010011100001110100101111010   [done by compression P-Box]
          - XOR with Key:     10000011111110101111011101001111

          - FUNCTION OUTPUT:  10000011111110101111011101001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001101010011001101101010011

       - FUNCTION OUTPUT:          10000011111110101111011101001111

       - Left XOR FUNCTION OUTPUT: 00101010010100110110110000011100

       - Next Round Left 32 Bits:  00100011111000011111110101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010010100110110110000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011111000011111110101001100

       - Right 32 Bits:            00101010010100110110110000011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001101010001000101111001001001110010110100110101   [Subkey: 1]
          - Input Half:       00101010010100110110110000011100
          - S-Box Result:     11100100100100010000010110100101   [per every group of 4-bits]
          - Split Into Two:   1110010010010001 [L] 0000010110100101 [R]
          - Swap Halves:      00000101101001011110010010010001
          - Bit Inversion:    11111010010110100001101101101110
          - Compressed Key:   00101110000110110110110001011010   [done by compression P-Box]
          - XOR with Key:     11010100010000010111011100110100

          - FUNCTION OUTPUT:  11010100010000010111011100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011111000011111110101001100

       - FUNCTION OUTPUT:          11010100010000010111011100110100

       - Left XOR FUNCTION OUTPUT: 11110111101000001000101001111000

       - Next Round Left 32 Bits:  00101010010100110110110000011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111101000001000101001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111011110100000100010100111100000101010010100110110110000011100

 > Decrypted Block:     1111011110100000100010100111100000101010010100110110110000011100


!!!CBC: Previous Ciphertext:                             1001001110000000111001100001000101000001001101100100110001111101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110010000100000011011000110100101101011011001010010000001100001

 > Final Processed Block:                                0110010000100000011011000110100101101011011001010010000001100001



Ciphertext Block 4:                                      0010111101101011100001000010011111111101010110001101000101111011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111011010111000010000100111

       - Right 32 Bits:            11111101010110001101000101111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010000110110110001101001011001010110111001100101   [Subkey: 16]
          - Input Half:       11111101010110001101000101111011
          - S-Box Result:     10110110100100100110101011011000   [per every group of 4-bits]
          - Split Into Two:   1011011010010010 [L] 0110101011011000 [R]
          - Swap Halves:      01101010110110001011011010010010
          - Bit Inversion:    10010101001001110100100101101101
          - Compressed Key:   01110000111010010111101011001010   [done by compression P-Box]
          - XOR with Key:     11100101110011100011001110100111

          - FUNCTION OUTPUT:  11100101110011100011001110100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111011010111000010000100111

       - FUNCTION OUTPUT:          11100101110011100011001110100111

       - Left XOR FUNCTION OUTPUT: 11001010101001011011011110000000

       - Next Round Left 32 Bits:  11111101010110001101000101111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001010101001011011011110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101010110001101000101111011

       - Right 32 Bits:            11001010101001011011011110000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010111100100100111001011010011010100100011001101   [Subkey: 15]
          - Input Half:       11001010101001011011011110000000
          - S-Box Result:     01010100010010011000110100101111   [per every group of 4-bits]
          - Split Into Two:   0101010001001001 [L] 1000110100101111 [R]
          - Swap Halves:      10001101001011110101010001001001
          - Bit Inversion:    01110010110100001010101110110110
          - Compressed Key:   00011011011011000101101000101110   [done by compression P-Box]
          - XOR with Key:     01101001101111001111000110011000

          - FUNCTION OUTPUT:  01101001101111001111000110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101010110001101000101111011

       - FUNCTION OUTPUT:          01101001101111001111000110011000

       - Left XOR FUNCTION OUTPUT: 10010100111001000010000011100011

       - Next Round Left 32 Bits:  11001010101001011011011110000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100111001000010000011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010101001011011011110000000

       - Right 32 Bits:            10010100111001000010000011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110100001101101100011010010110010101101110011001   [Subkey: 14]
          - Input Half:       10010100111001000010000011100011
          - S-Box Result:     00110111110001111110111111000001   [per every group of 4-bits]
          - Split Into Two:   0011011111000111 [L] 1110111111000001 [R]
          - Swap Halves:      11101111110000010011011111000111
          - Bit Inversion:    00010000001111101100100000111000
          - Compressed Key:   11011000011100100001101010110110   [done by compression P-Box]
          - XOR with Key:     11001000010011001101001010001110

          - FUNCTION OUTPUT:  11001000010011001101001010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010101001011011011110000000

       - FUNCTION OUTPUT:          11001000010011001101001010001110

       - Left XOR FUNCTION OUTPUT: 00000010111010010110010100001110

       - Next Round Left 32 Bits:  10010100111001000010000011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010111010010110010100001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100111001000010000011100011

       - Right 32 Bits:            00000010111010010110010100001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000101111001001001110010110100110101001000110011   [Subkey: 13]
          - Input Half:       00000010111010010110010100001110
          - S-Box Result:     11111110110000110000100111111100   [per every group of 4-bits]
          - Split Into Two:   1111111011000011 [L] 0000100111111100 [R]
          - Swap Halves:      00001001111111001111111011000011
          - Bit Inversion:    11110110000000110000000100111100
          - Compressed Key:   01001010000110111001111010000011   [done by compression P-Box]
          - XOR with Key:     10111100000110001001111110111111

          - FUNCTION OUTPUT:  10111100000110001001111110111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100111001000010000011100011

       - FUNCTION OUTPUT:          10111100000110001001111110111111

       - Left XOR FUNCTION OUTPUT: 00101000111111001011111101011100

       - Next Round Left 32 Bits:  00000010111010010110010100001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000111111001011111101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010111010010110010100001110

       - Right 32 Bits:            00101000111111001011111101011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101000011011011000110100101100101011011100110   [Subkey: 12]
          - Input Half:       00101000111111001011111101011100
          - S-Box Result:     11100010101101011000101110010101   [per every group of 4-bits]
          - Split Into Two:   1110001010110101 [L] 1000101110010101 [R]
          - Swap Halves:      10001011100101011110001010110101
          - Bit Inversion:    01110100011010100001110101001010
          - Compressed Key:   01111110100111001000011011101001   [done by compression P-Box]
          - XOR with Key:     00001010111101101001101110100011

          - FUNCTION OUTPUT:  00001010111101101001101110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010111010010110010100001110

       - FUNCTION OUTPUT:          00001010111101101001101110100011

       - Left XOR FUNCTION OUTPUT: 00001000000111111111111010101101

       - Next Round Left 32 Bits:  00101000111111001011111101011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000000111111111111010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000111111001011111101011100

       - Right 32 Bits:            00001000000111111111111010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100010001011110010010011100101101001101010010001100   [Subkey: 11]
          - Input Half:       00001000000111111111111010101101
          - S-Box Result:     11110010101010111011110001000110   [per every group of 4-bits]
          - Split Into Two:   1111001010101011 [L] 1011110001000110 [R]
          - Swap Halves:      10111100010001101111001010101011
          - Bit Inversion:    01000011101110010000110101010100
          - Compressed Key:   01010010110001101010001101101100   [done by compression P-Box]
          - XOR with Key:     00010001011111111010111000111000

          - FUNCTION OUTPUT:  00010001011111111010111000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000111111001011111101011100

       - FUNCTION OUTPUT:          00010001011111111010111000111000

       - Left XOR FUNCTION OUTPUT: 00111001100000110001000101100100

       - Next Round Left 32 Bits:  00001000000111111111111010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001100000110001000101100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000000111111111111010101101

       - Right 32 Bits:            00111001100000110001000101100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101110111010000110110110001101001011001010110111001   [Subkey: 10]
          - Input Half:       00111001100000110001000101100100
          - S-Box Result:     00010011001000011010101000000111   [per every group of 4-bits]
          - Split Into Two:   0001001100100001 [L] 1010101000000111 [R]
          - Swap Halves:      10101010000001110001001100100001
          - Bit Inversion:    01010101111110001110110011011110
          - Compressed Key:   01011011001001111110100101110110   [done by compression P-Box]
          - XOR with Key:     00001110110111110000010110101000

          - FUNCTION OUTPUT:  00001110110111110000010110101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000000111111111111010101101

       - FUNCTION OUTPUT:          00001110110111110000010110101000

       - Left XOR FUNCTION OUTPUT: 00000110110000001111101100000101

       - Next Round Left 32 Bits:  00111001100000110001000101100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110110000001111101100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001100000110001000101100100

       - Right 32 Bits:            00000110110000001111101100000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101000100010111100100100111001011010011010100100011   [Subkey: 9]
          - Input Half:       00000110110000001111101100000101
          - S-Box Result:     11110000010111111011100011111001   [per every group of 4-bits]
          - Split Into Two:   1111000001011111 [L] 1011100011111001 [R]
          - Swap Halves:      10111000111110011111000001011111
          - Bit Inversion:    01000111000001100000111110100000
          - Compressed Key:   01011000111100010110100001010011   [done by compression P-Box]
          - XOR with Key:     00011111111101110110011111110011

          - FUNCTION OUTPUT:  00011111111101110110011111110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001100000110001000101100100

       - FUNCTION OUTPUT:          00011111111101110110011111110011

       - Left XOR FUNCTION OUTPUT: 00100110011101000111011010010111

       - Next Round Left 32 Bits:  00000110110000001111101100000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110011101000111011010010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110110000001111101100000101

       - Right 32 Bits:            00100110011101000111011010010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011101110100001101101100011010010110010101101110   [Subkey: 8]
          - Input Half:       00100110011101000111011010010111
          - S-Box Result:     11100000110101111101000000111101   [per every group of 4-bits]
          - Split Into Two:   1110000011010111 [L] 1101000000111101 [R]
          - Swap Halves:      11010000001111011110000011010111
          - Bit Inversion:    00101111110000100001111100101000
          - Compressed Key:   00011110010010010011101001011101   [done by compression P-Box]
          - XOR with Key:     00110001100010110010010101110101

          - FUNCTION OUTPUT:  00110001100010110010010101110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110110000001111101100000101

       - FUNCTION OUTPUT:          00110001100010110010010101110101

       - Left XOR FUNCTION OUTPUT: 00110111010010111101111001110000

       - Next Round Left 32 Bits:  00100110011101000111011010010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111010010111101111001110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110011101000111011010010111

       - Right 32 Bits:            00110111010010111101111001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010001000101111001001001110010110100110101001000   [Subkey: 7]
          - Input Half:       00110111010010111101111001110000
          - S-Box Result:     00011101011110000110110011011111   [per every group of 4-bits]
          - Split Into Two:   0001110101111000 [L] 0110110011011111 [R]
          - Swap Halves:      01101100110111110001110101111000
          - Bit Inversion:    10010011001000001110001010000111
          - Compressed Key:   10010010011110001101111001010100   [done by compression P-Box]
          - XOR with Key:     00000001010110000011110011010011

          - FUNCTION OUTPUT:  00000001010110000011110011010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110011101000111011010010111

       - FUNCTION OUTPUT:          00000001010110000011110011010011

       - Left XOR FUNCTION OUTPUT: 00100111001011000100101001000100

       - Next Round Left 32 Bits:  00110111010010111101111001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111001011000100101001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111010010111101111001110000

       - Right 32 Bits:            00100111001011000100101001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001010111011101000011011011000110100101100101011011   [Subkey: 6]
          - Input Half:       00100111001011000100101001000100
          - S-Box Result:     11101101111001010111010001110111   [per every group of 4-bits]
          - Split Into Two:   1110110111100101 [L] 0111010001110111 [R]
          - Swap Halves:      01110100011101111110110111100101
          - Bit Inversion:    10001011100010000001001000011010
          - Compressed Key:   11001011010111100100011000010111   [done by compression P-Box]
          - XOR with Key:     01000000110101100101010000001101

          - FUNCTION OUTPUT:  01000000110101100101010000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111010010111101111001110000

       - FUNCTION OUTPUT:          01000000110101100101010000001101

       - Left XOR FUNCTION OUTPUT: 01110111100111011000101001111101

       - Next Round Left 32 Bits:  00100111001011000100101001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111100111011000101001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111001011000100101001000100

       - Right 32 Bits:            01110111100111011000101001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010100010001011110010010011100101101001101010010   [Subkey: 5]
          - Input Half:       01110111100111011000101001111101
          - S-Box Result:     11011101001101100010010011010110   [per every group of 4-bits]
          - Split Into Two:   1101110100110110 [L] 0010010011010110 [R]
          - Swap Halves:      00100100110101101101110100110110
          - Bit Inversion:    11011011001010010010001011001001
          - Compressed Key:   01101000000101100011011110010001   [done by compression P-Box]
          - XOR with Key:     10110011001111110001010101011000

          - FUNCTION OUTPUT:  10110011001111110001010101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111001011000100101001000100

       - FUNCTION OUTPUT:          10110011001111110001010101011000

       - Left XOR FUNCTION OUTPUT: 10010100000100110101111100011100

       - Next Round Left 32 Bits:  01110111100111011000101001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100000100110101111100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111100111011000101001111101

       - Right 32 Bits:            10010100000100110101111100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110010101110111010000110110110001101001011001010110   [Subkey: 4]
          - Input Half:       10010100000100110101111100011100
          - S-Box Result:     00110111101000011001101110100101   [per every group of 4-bits]
          - Split Into Two:   0011011110100001 [L] 1001101110100101 [R]
          - Swap Halves:      10011011101001010011011110100001
          - Bit Inversion:    01100100010110101100100001011110
          - Compressed Key:   00111010110100111001010111001001   [done by compression P-Box]
          - XOR with Key:     01011110100010010101110110010111

          - FUNCTION OUTPUT:  01011110100010010101110110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111100111011000101001111101

       - FUNCTION OUTPUT:          01011110100010010101110110010111

       - Left XOR FUNCTION OUTPUT: 00101001000101001101011111101010

       - Next Round Left 32 Bits:  10010100000100110101111100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001000101001101011111101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100000100110101111100011100

       - Right 32 Bits:            00101001000101001101011111101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100110101000100010111100100100111001011010011010100   [Subkey: 3]
          - Input Half:       00101001000101001101011111101010
          - S-Box Result:     11100011101001110110110111000100   [per every group of 4-bits]
          - Split Into Two:   1110001110100111 [L] 0110110111000100 [R]
          - Swap Halves:      01101101110001001110001110100111
          - Bit Inversion:    10010010001110110001110001011000
          - Compressed Key:   10011010010011011000000101101000   [done by compression P-Box]
          - XOR with Key:     00001000011101101001110100110000

          - FUNCTION OUTPUT:  00001000011101101001110100110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100000100110101111100011100

       - FUNCTION OUTPUT:          00001000011101101001110100110000

       - Left XOR FUNCTION OUTPUT: 10011100011001011100001000101100

       - Next Round Left 32 Bits:  00101001000101001101011111101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100011001011100001000101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001000101001101011111101010

       - Right 32 Bits:            10011100011001011100001000101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001100101011101110100001101101100011010010110010101   [Subkey: 2]
          - Input Half:       10011100011001011100001000101100
          - S-Box Result:     00110101000010010101111011100101   [per every group of 4-bits]
          - Split Into Two:   0011010100001001 [L] 0101111011100101 [R]
          - Swap Halves:      01011110111001010011010100001001
          - Bit Inversion:    10100001000110101100101011110110
          - Compressed Key:   11001010011100001110100101111010   [done by compression P-Box]
          - XOR with Key:     01101011011010100010001110001100

          - FUNCTION OUTPUT:  01101011011010100010001110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001000101001101011111101010

       - FUNCTION OUTPUT:          01101011011010100010001110001100

       - Left XOR FUNCTION OUTPUT: 01000010011111101111010001100110

       - Next Round Left 32 Bits:  10011100011001011100001000101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010011111101111010001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100011001011100001000101100

       - Right 32 Bits:            01000010011111101111010001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001101010001000101111001001001110010110100110101   [Subkey: 1]
          - Input Half:       01000010011111101111010001100110
          - S-Box Result:     01111110110111001011011100000000   [per every group of 4-bits]
          - Split Into Two:   0111111011011100 [L] 1011011100000000 [R]
          - Swap Halves:      10110111000000000111111011011100
          - Bit Inversion:    01001000111111111000000100100011
          - Compressed Key:   00101110000110110110110001011010   [done by compression P-Box]
          - XOR with Key:     01100110111001001110110101111001

          - FUNCTION OUTPUT:  01100110111001001110110101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100011001011100001000101100

       - FUNCTION OUTPUT:          01100110111001001110110101111001

       - Left XOR FUNCTION OUTPUT: 11111010100000010010111101010101

       - Next Round Left 32 Bits:  01000010011111101111010001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010100000010010111101010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111101010000001001011110101010101000010011111101111010001100110

 > Decrypted Block:     1111101010000001001011110101010101000010011111101111010001100110


!!!CBC: Previous Ciphertext:                             1101101011101111010010100010001001100010001011001010011100100111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001101110011001010111011100100000010100100101001101000001

 > Final Processed Block:                                0010000001101110011001010111011100100000010100100101001101000001



Ciphertext Block 5:                                      0000101011010111111010100101100110101001100100000100111101001110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010110101111110101001011001

       - Right 32 Bits:            10101001100100000100111101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010000110110110001101001011001010110111001100101   [Subkey: 16]
          - Input Half:       10101001100100000100111101001110
          - S-Box Result:     01000011001111110111101101111100   [per every group of 4-bits]
          - Split Into Two:   0100001100111111 [L] 0111101101111100 [R]
          - Swap Halves:      01111011011111000100001100111111
          - Bit Inversion:    10000100100000111011110011000000
          - Compressed Key:   01110000111010010111101011001010   [done by compression P-Box]
          - XOR with Key:     11110100011010101100011000001010

          - FUNCTION OUTPUT:  11110100011010101100011000001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010110101111110101001011001

       - FUNCTION OUTPUT:          11110100011010101100011000001010

       - Left XOR FUNCTION OUTPUT: 11111110101111010010110001010011

       - Next Round Left 32 Bits:  10101001100100000100111101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110101111010010110001010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001100100000100111101001110

       - Right 32 Bits:            11111110101111010010110001010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010111100100100111001011010011010100100011001101   [Subkey: 15]
          - Input Half:       11111110101111010010110001010011
          - S-Box Result:     10111100100001101110010110010001   [per every group of 4-bits]
          - Split Into Two:   1011110010000110 [L] 1110010110010001 [R]
          - Swap Halves:      11100101100100011011110010000110
          - Bit Inversion:    00011010011011100100001101111001
          - Compressed Key:   00011011011011000101101000101110   [done by compression P-Box]
          - XOR with Key:     00000001000000100001100101010111

          - FUNCTION OUTPUT:  00000001000000100001100101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001100100000100111101001110

       - FUNCTION OUTPUT:          00000001000000100001100101010111

       - Left XOR FUNCTION OUTPUT: 10101000100100100101011000011001

       - Next Round Left 32 Bits:  11111110101111010010110001010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000100100100101011000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110101111010010110001010011

       - Right 32 Bits:            10101000100100100101011000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110100001101101100011010010110010101101110011001   [Subkey: 14]
          - Input Half:       10101000100100100101011000011001
          - S-Box Result:     01000010001111101001000010100011   [per every group of 4-bits]
          - Split Into Two:   0100001000111110 [L] 1001000010100011 [R]
          - Swap Halves:      10010000101000110100001000111110
          - Bit Inversion:    01101111010111001011110111000001
          - Compressed Key:   11011000011100100001101010110110   [done by compression P-Box]
          - XOR with Key:     10110111001011101010011101110111

          - FUNCTION OUTPUT:  10110111001011101010011101110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110101111010010110001010011

       - FUNCTION OUTPUT:          10110111001011101010011101110111

       - Left XOR FUNCTION OUTPUT: 01001001100100111000101100100100

       - Next Round Left 32 Bits:  10101000100100100101011000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001100100111000101100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000100100100101011000011001

       - Right 32 Bits:            01001001100100111000101100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000101111001001001110010110100110101001000110011   [Subkey: 13]
          - Input Half:       01001001100100111000101100100100
          - S-Box Result:     01110011001100010010100011100111   [per every group of 4-bits]
          - Split Into Two:   0111001100110001 [L] 0010100011100111 [R]
          - Swap Halves:      00101000111001110111001100110001
          - Bit Inversion:    11010111000110001000110011001110
          - Compressed Key:   01001010000110111001111010000011   [done by compression P-Box]
          - XOR with Key:     10011101000000110001001001001101

          - FUNCTION OUTPUT:  10011101000000110001001001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000100100100101011000011001

       - FUNCTION OUTPUT:          10011101000000110001001001001101

       - Left XOR FUNCTION OUTPUT: 00110101100100010100010001010100

       - Next Round Left 32 Bits:  01001001100100111000101100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101100100010100010001010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001100100111000101100100100

       - Right 32 Bits:            00110101100100010100010001010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101000011011011000110100101100101011011100110   [Subkey: 12]
          - Input Half:       00110101100100010100010001010100
          - S-Box Result:     00011001001110100111011110010111   [per every group of 4-bits]
          - Split Into Two:   0001100100111010 [L] 0111011110010111 [R]
          - Swap Halves:      01110111100101110001100100111010
          - Bit Inversion:    10001000011010001110011011000101
          - Compressed Key:   01111110100111001000011011101001   [done by compression P-Box]
          - XOR with Key:     11110110111101000110000000101100

          - FUNCTION OUTPUT:  11110110111101000110000000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001100100111000101100100100

       - FUNCTION OUTPUT:          11110110111101000110000000101100

       - Left XOR FUNCTION OUTPUT: 10111111011001111110101100001000

       - Next Round Left 32 Bits:  00110101100100010100010001010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111011001111110101100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101100100010100010001010100

       - Right 32 Bits:            10111111011001111110101100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100010001011110010010011100101101001101010010001100   [Subkey: 11]
          - Input Half:       10111111011001111110101100001000
          - S-Box Result:     10001011000011011100100011110010   [per every group of 4-bits]
          - Split Into Two:   1000101100001101 [L] 1100100011110010 [R]
          - Swap Halves:      11001000111100101000101100001101
          - Bit Inversion:    00110111000011010111010011110010
          - Compressed Key:   01010010110001101010001101101100   [done by compression P-Box]
          - XOR with Key:     01100101110010111101011110011110

          - FUNCTION OUTPUT:  01100101110010111101011110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101100100010100010001010100

       - FUNCTION OUTPUT:          01100101110010111101011110011110

       - Left XOR FUNCTION OUTPUT: 01010000010110101001001111001010

       - Next Round Left 32 Bits:  10111111011001111110101100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000010110101001001111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111011001111110101100001000

       - Right 32 Bits:            01010000010110101001001111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101110111010000110110110001101001011001010110111001   [Subkey: 10]
          - Input Half:       01010000010110101001001111001010
          - S-Box Result:     10011111100101000011000101010100   [per every group of 4-bits]
          - Split Into Two:   1001111110010100 [L] 0011000101010100 [R]
          - Swap Halves:      00110001010101001001111110010100
          - Bit Inversion:    11001110101010110110000001101011
          - Compressed Key:   01011011001001111110100101110110   [done by compression P-Box]
          - XOR with Key:     10010101100011001000100100011101

          - FUNCTION OUTPUT:  10010101100011001000100100011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111011001111110101100001000

       - FUNCTION OUTPUT:          10010101100011001000100100011101

       - Left XOR FUNCTION OUTPUT: 00101010111010110110001000010101

       - Next Round Left 32 Bits:  01010000010110101001001111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010111010110110001000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000010110101001001111001010

       - Right 32 Bits:            00101010111010110110001000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101000100010111100100100111001011010011010100100011   [Subkey: 9]
          - Input Half:       00101010111010110110001000010101
          - S-Box Result:     11100100110010000000111010101001   [per every group of 4-bits]
          - Split Into Two:   1110010011001000 [L] 0000111010101001 [R]
          - Swap Halves:      00001110101010011110010011001000
          - Bit Inversion:    11110001010101100001101100110111
          - Compressed Key:   01011000111100010110100001010011   [done by compression P-Box]
          - XOR with Key:     10101001101001110111001101100100

          - FUNCTION OUTPUT:  10101001101001110111001101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000010110101001001111001010

       - FUNCTION OUTPUT:          10101001101001110111001101100100

       - Left XOR FUNCTION OUTPUT: 11111001111111011110000010101110

       - Next Round Left 32 Bits:  00101010111010110110001000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001111111011110000010101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010111010110110001000010101

       - Right 32 Bits:            11111001111111011110000010101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011101110100001101101100011010010110010101101110   [Subkey: 8]
          - Input Half:       11111001111111011110000010101110
          - S-Box Result:     10110011101101101100111101001100   [per every group of 4-bits]
          - Split Into Two:   1011001110110110 [L] 1100111101001100 [R]
          - Swap Halves:      11001111010011001011001110110110
          - Bit Inversion:    00110000101100110100110001001001
          - Compressed Key:   00011110010010010011101001011101   [done by compression P-Box]
          - XOR with Key:     00101110111110100111011000010100

          - FUNCTION OUTPUT:  00101110111110100111011000010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010111010110110001000010101

       - FUNCTION OUTPUT:          00101110111110100111011000010100

       - Left XOR FUNCTION OUTPUT: 00000100000100010001010000000001

       - Next Round Left 32 Bits:  11111001111111011110000010101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100000100010001010000000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001111111011110000010101110

       - Right 32 Bits:            00000100000100010001010000000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010001000101111001001001110010110100110101001000   [Subkey: 7]
          - Input Half:       00000100000100010001010000000001
          - S-Box Result:     11110111101010101010011111111010   [per every group of 4-bits]
          - Split Into Two:   1111011110101010 [L] 1010011111111010 [R]
          - Swap Halves:      10100111111110101111011110101010
          - Bit Inversion:    01011000000001010000100001010101
          - Compressed Key:   10010010011110001101111001010100   [done by compression P-Box]
          - XOR with Key:     11001010011111011101011000000001

          - FUNCTION OUTPUT:  11001010011111011101011000000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001111111011110000010101110

       - FUNCTION OUTPUT:          11001010011111011101011000000001

       - Left XOR FUNCTION OUTPUT: 00110011100000000011011010101111

       - Next Round Left 32 Bits:  00000100000100010001010000000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011100000000011011010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100000100010001010000000001

       - Right 32 Bits:            00110011100000000011011010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001010111011101000011011011000110100101100101011011   [Subkey: 6]
          - Input Half:       00110011100000000011011010101111
          - S-Box Result:     00010001001011110001000001001011   [per every group of 4-bits]
          - Split Into Two:   0001000100101111 [L] 0001000001001011 [R]
          - Swap Halves:      00010000010010110001000100101111
          - Bit Inversion:    11101111101101001110111011010000
          - Compressed Key:   11001011010111100100011000010111   [done by compression P-Box]
          - XOR with Key:     00100100111010101010100011000111

          - FUNCTION OUTPUT:  00100100111010101010100011000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100000100010001010000000001

       - FUNCTION OUTPUT:          00100100111010101010100011000111

       - Left XOR FUNCTION OUTPUT: 00100000111110111011110011000110

       - Next Round Left 32 Bits:  00110011100000000011011010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100000111110111011110011000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011100000000011011010101111

       - Right 32 Bits:            00100000111110111011110011000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010100010001011110010010011100101101001101010010   [Subkey: 5]
          - Input Half:       00100000111110111011110011000110
          - S-Box Result:     11101111101110001000010101010000   [per every group of 4-bits]
          - Split Into Two:   1110111110111000 [L] 1000010101010000 [R]
          - Swap Halves:      10000101010100001110111110111000
          - Bit Inversion:    01111010101011110001000001000111
          - Compressed Key:   01101000000101100011011110010001   [done by compression P-Box]
          - XOR with Key:     00010010101110010010011111010110

          - FUNCTION OUTPUT:  00010010101110010010011111010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011100000000011011010101111

       - FUNCTION OUTPUT:          00010010101110010010011111010110

       - Left XOR FUNCTION OUTPUT: 00100001001110010001000101111001

       - Next Round Left 32 Bits:  00100000111110111011110011000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001001110010001000101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000111110111011110011000110

       - Right 32 Bits:            00100001001110010001000101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110010101110111010000110110110001101001011001010110   [Subkey: 4]
          - Input Half:       00100001001110010001000101111001
          - S-Box Result:     11101010000100111010101011010011   [per every group of 4-bits]
          - Split Into Two:   1110101000010011 [L] 1010101011010011 [R]
          - Swap Halves:      10101010110100111110101000010011
          - Bit Inversion:    01010101001011000001010111101100
          - Compressed Key:   00111010110100111001010111001001   [done by compression P-Box]
          - XOR with Key:     01101111111111111000000000100101

          - FUNCTION OUTPUT:  01101111111111111000000000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000111110111011110011000110

       - FUNCTION OUTPUT:          01101111111111111000000000100101

       - Left XOR FUNCTION OUTPUT: 01001111000001000011110011100011

       - Next Round Left 32 Bits:  00100001001110010001000101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111000001000011110011100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001001110010001000101111001

       - Right 32 Bits:            01001111000001000011110011100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100110101000100010111100100100111001011010011010100   [Subkey: 3]
          - Input Half:       01001111000001000011110011100011
          - S-Box Result:     01111011111101110001010111000001   [per every group of 4-bits]
          - Split Into Two:   0111101111110111 [L] 0001010111000001 [R]
          - Swap Halves:      00010101110000010111101111110111
          - Bit Inversion:    11101010001111101000010000001000
          - Compressed Key:   10011010010011011000000101101000   [done by compression P-Box]
          - XOR with Key:     01110000011100110000010101100000

          - FUNCTION OUTPUT:  01110000011100110000010101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001001110010001000101111001

       - FUNCTION OUTPUT:          01110000011100110000010101100000

       - Left XOR FUNCTION OUTPUT: 01010001010010100001010000011001

       - Next Round Left 32 Bits:  01001111000001000011110011100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001010010100001010000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111000001000011110011100011

       - Right 32 Bits:            01010001010010100001010000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001100101011101110100001101101100011010010110010101   [Subkey: 2]
          - Input Half:       01010001010010100001010000011001
          - S-Box Result:     10011010011101001010011110100011   [per every group of 4-bits]
          - Split Into Two:   1001101001110100 [L] 1010011110100011 [R]
          - Swap Halves:      10100111101000111001101001110100
          - Bit Inversion:    01011000010111000110010110001011
          - Compressed Key:   11001010011100001110100101111010   [done by compression P-Box]
          - XOR with Key:     10010010001011001000110011110001

          - FUNCTION OUTPUT:  10010010001011001000110011110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111000001000011110011100011

       - FUNCTION OUTPUT:          10010010001011001000110011110001

       - Left XOR FUNCTION OUTPUT: 11011101001010001011000000010010

       - Next Round Left 32 Bits:  01010001010010100001010000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101001010001011000000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001010010100001010000011001

       - Right 32 Bits:            11011101001010001011000000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001101010001000101111001001001110010110100110101   [Subkey: 1]
          - Input Half:       11011101001010001011000000010010
          - S-Box Result:     01100110111000101000111110101110   [per every group of 4-bits]
          - Split Into Two:   0110011011100010 [L] 1000111110101110 [R]
          - Swap Halves:      10001111101011100110011011100010
          - Bit Inversion:    01110000010100011001100100011101
          - Compressed Key:   00101110000110110110110001011010   [done by compression P-Box]
          - XOR with Key:     01011110010010101111010101000111

          - FUNCTION OUTPUT:  01011110010010101111010101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001010010100001010000011001

       - FUNCTION OUTPUT:          01011110010010101111010101000111

       - Left XOR FUNCTION OUTPUT: 00001111000000001110000101011110

       - Next Round Left 32 Bits:  11011101001010001011000000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111000000001110000101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000111100000000111000010101111011011101001010001011000000010010

 > Decrypted Block:     0000111100000000111000010101111011011101001010001011000000010010


!!!CBC: Previous Ciphertext:                             0010111101101011100001000010011111111101010110001101000101111011

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001101011011001010111100100100000011100000110000101101001

 > Final Processed Block:                                0010000001101011011001010111100100100000011100000110000101101001



Ciphertext Block 6:                                      1101111101110110000111111111011100110001100100010101000001001110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111011101100001111111110111

       - Right 32 Bits:            00110001100100010101000001001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111010000110110110001101001011001010110111001100101   [Subkey: 16]
          - Input Half:       00110001100100010101000001001110
          - S-Box Result:     00011010001110101001111101111100   [per every group of 4-bits]
          - Split Into Two:   0001101000111010 [L] 1001111101111100 [R]
          - Swap Halves:      10011111011111000001101000111010
          - Bit Inversion:    01100000100000111110010111000101
          - Compressed Key:   01110000111010010111101011001010   [done by compression P-Box]
          - XOR with Key:     00010000011010101001111100001111

          - FUNCTION OUTPUT:  00010000011010101001111100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111011101100001111111110111

       - FUNCTION OUTPUT:          00010000011010101001111100001111

       - Left XOR FUNCTION OUTPUT: 11001111000111001000000011111000

       - Next Round Left 32 Bits:  00110001100100010101000001001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111000111001000000011111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001100100010101000001001110

       - Right 32 Bits:            11001111000111001000000011111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010111100100100111001011010011010100100011001101   [Subkey: 15]
          - Input Half:       11001111000111001000000011111000
          - S-Box Result:     01011011101001010010111110110010   [per every group of 4-bits]
          - Split Into Two:   0101101110100101 [L] 0010111110110010 [R]
          - Swap Halves:      00101111101100100101101110100101
          - Bit Inversion:    11010000010011011010010001011010
          - Compressed Key:   00011011011011000101101000101110   [done by compression P-Box]
          - XOR with Key:     11001011001000011111111001110100

          - FUNCTION OUTPUT:  11001011001000011111111001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001100100010101000001001110

       - FUNCTION OUTPUT:          11001011001000011111111001110100

       - Left XOR FUNCTION OUTPUT: 11111010101100001010111000111010

       - Next Round Left 32 Bits:  11001111000111001000000011111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010101100001010111000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111000111001000000011111000

       - Right 32 Bits:            11111010101100001010111000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011101110100001101101100011010010110010101101110011001   [Subkey: 14]
          - Input Half:       11111010101100001010111000111010
          - S-Box Result:     10110100100011110100110000010100   [per every group of 4-bits]
          - Split Into Two:   1011010010001111 [L] 0100110000010100 [R]
          - Swap Halves:      01001100000101001011010010001111
          - Bit Inversion:    10110011111010110100101101110000
          - Compressed Key:   11011000011100100001101010110110   [done by compression P-Box]
          - XOR with Key:     01101011100110010101000111000110

          - FUNCTION OUTPUT:  01101011100110010101000111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111000111001000000011111000

       - FUNCTION OUTPUT:          01101011100110010101000111000110

       - Left XOR FUNCTION OUTPUT: 10100100100001011101000100111110

       - Next Round Left 32 Bits:  11111010101100001010111000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100100001011101000100111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010101100001010111000111010

       - Right 32 Bits:            10100100100001011101000100111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001000101111001001001110010110100110101001000110011   [Subkey: 13]
          - Input Half:       10100100100001011101000100111110
          - S-Box Result:     01000111001010010110101000011100   [per every group of 4-bits]
          - Split Into Two:   0100011100101001 [L] 0110101000011100 [R]
          - Swap Halves:      01101010000111000100011100101001
          - Bit Inversion:    10010101111000111011100011010110
          - Compressed Key:   01001010000110111001111010000011   [done by compression P-Box]
          - XOR with Key:     11011111111110000010011001010101

          - FUNCTION OUTPUT:  11011111111110000010011001010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010101100001010111000111010

       - FUNCTION OUTPUT:          11011111111110000010011001010101

       - Left XOR FUNCTION OUTPUT: 00100101010010001000100001101111

       - Next Round Left 32 Bits:  10100100100001011101000100111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101010010001000100001101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100100001011101000100111110

       - Right 32 Bits:            00100101010010001000100001101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111011101000011011011000110100101100101011011100110   [Subkey: 12]
          - Input Half:       00100101010010001000100001101111
          - S-Box Result:     11101001011100100010001000001011   [per every group of 4-bits]
          - Split Into Two:   1110100101110010 [L] 0010001000001011 [R]
          - Swap Halves:      00100010000010111110100101110010
          - Bit Inversion:    11011101111101000001011010001101
          - Compressed Key:   01111110100111001000011011101001   [done by compression P-Box]
          - XOR with Key:     10100011011010001001000001100100

          - FUNCTION OUTPUT:  10100011011010001001000001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100100001011101000100111110

       - FUNCTION OUTPUT:          10100011011010001001000001100100

       - Left XOR FUNCTION OUTPUT: 00000111111011010100000101011010

       - Next Round Left 32 Bits:  00100101010010001000100001101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111111011010100000101011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101010010001000100001101111

       - Right 32 Bits:            00000111111011010100000101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100010001011110010010011100101101001101010010001100   [Subkey: 11]
          - Input Half:       00000111111011010100000101011010
          - S-Box Result:     11111101110001100111101010010100   [per every group of 4-bits]
          - Split Into Two:   1111110111000110 [L] 0111101010010100 [R]
          - Swap Halves:      01111010100101001111110111000110
          - Bit Inversion:    10000101011010110000001000111001
          - Compressed Key:   01010010110001101010001101101100   [done by compression P-Box]
          - XOR with Key:     11010111101011011010000101010101

          - FUNCTION OUTPUT:  11010111101011011010000101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101010010001000100001101111

       - FUNCTION OUTPUT:          11010111101011011010000101010101

       - Left XOR FUNCTION OUTPUT: 11110010111001010010100100111010

       - Next Round Left 32 Bits:  00000111111011010100000101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010111001010010100100111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111111011010100000101011010

       - Right 32 Bits:            11110010111001010010100100111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101110111010000110110110001101001011001010110111001   [Subkey: 10]
          - Input Half:       11110010111001010010100100111010
          - S-Box Result:     10111110110010011110001100010100   [per every group of 4-bits]
          - Split Into Two:   1011111011001001 [L] 1110001100010100 [R]
          - Swap Halves:      11100011000101001011111011001001
          - Bit Inversion:    00011100111010110100000100110110
          - Compressed Key:   01011011001001111110100101110110   [done by compression P-Box]
          - XOR with Key:     01000111110011001010100001000000

          - FUNCTION OUTPUT:  01000111110011001010100001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111111011010100000101011010

       - FUNCTION OUTPUT:          01000111110011001010100001000000

       - Left XOR FUNCTION OUTPUT: 01000000001000011110100100011010

       - Next Round Left 32 Bits:  11110010111001010010100100111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000001000011110100100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010111001010010100100111010

       - Right 32 Bits:            01000000001000011110100100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101000100010111100100100111001011010011010100100011   [Subkey: 9]
          - Input Half:       01000000001000011110100100011010
          - S-Box Result:     01111111111010101100001110100100   [per every group of 4-bits]
          - Split Into Two:   0111111111101010 [L] 1100001110100100 [R]
          - Swap Halves:      11000011101001000111111111101010
          - Bit Inversion:    00111100010110111000000000010101
          - Compressed Key:   01011000111100010110100001010011   [done by compression P-Box]
          - XOR with Key:     01100100101010101110100001000110

          - FUNCTION OUTPUT:  01100100101010101110100001000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010111001010010100100111010

       - FUNCTION OUTPUT:          01100100101010101110100001000110

       - Left XOR FUNCTION OUTPUT: 10010110010011111100000101111100

       - Next Round Left 32 Bits:  01000000001000011110100100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010110010011111100000101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000001000011110100100011010

       - Right 32 Bits:            10010110010011111100000101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011101110100001101101100011010010110010101101110   [Subkey: 8]
          - Input Half:       10010110010011111100000101111100
          - S-Box Result:     00110000011110110101101011010101   [per every group of 4-bits]
          - Split Into Two:   0011000001111011 [L] 0101101011010101 [R]
          - Swap Halves:      01011010110101010011000001111011
          - Bit Inversion:    10100101001010101100111110000100
          - Compressed Key:   00011110010010010011101001011101   [done by compression P-Box]
          - XOR with Key:     10111011011000111111010111011001

          - FUNCTION OUTPUT:  10111011011000111111010111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000001000011110100100011010

       - FUNCTION OUTPUT:          10111011011000111111010111011001

       - Left XOR FUNCTION OUTPUT: 11111011010000100001110011000011

       - Next Round Left 32 Bits:  10010110010011111100000101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111011010000100001110011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010110010011111100000101111100

       - Right 32 Bits:            11111011010000100001110011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010001000101111001001001110010110100110101001000   [Subkey: 7]
          - Input Half:       11111011010000100001110011000011
          - S-Box Result:     10111000011111101010010101010001   [per every group of 4-bits]
          - Split Into Two:   1011100001111110 [L] 1010010101010001 [R]
          - Swap Halves:      10100101010100011011100001111110
          - Bit Inversion:    01011010101011100100011110000001
          - Compressed Key:   10010010011110001101111001010100   [done by compression P-Box]
          - XOR with Key:     11001000110101101001100111010101

          - FUNCTION OUTPUT:  11001000110101101001100111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010110010011111100000101111100

       - FUNCTION OUTPUT:          11001000110101101001100111010101

       - Left XOR FUNCTION OUTPUT: 01011110100110010101100010101001

       - Next Round Left 32 Bits:  11111011010000100001110011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011110100110010101100010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111011010000100001110011000011

       - Right 32 Bits:            01011110100110010101100010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10011001010111011101000011011011000110100101100101011011   [Subkey: 6]
          - Input Half:       01011110100110010101100010101001
          - S-Box Result:     10011100001100111001001001000011   [per every group of 4-bits]
          - Split Into Two:   1001110000110011 [L] 1001001001000011 [R]
          - Swap Halves:      10010010010000111001110000110011
          - Bit Inversion:    01101101101111000110001111001100
          - Compressed Key:   11001011010111100100011000010111   [done by compression P-Box]
          - XOR with Key:     10100110111000100010010111011011

          - FUNCTION OUTPUT:  10100110111000100010010111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111011010000100001110011000011

       - FUNCTION OUTPUT:          10100110111000100010010111011011

       - Left XOR FUNCTION OUTPUT: 01011101101000000011100100011000

       - Next Round Left 32 Bits:  01011110100110010101100010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101101000000011100100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011110100110010101100010101001

       - Right 32 Bits:            01011101101000000011100100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010100010001011110010010011100101101001101010010   [Subkey: 5]
          - Input Half:       01011101101000000011100100011000
          - S-Box Result:     10010110010011110001001110100010   [per every group of 4-bits]
          - Split Into Two:   1001011001001111 [L] 0001001110100010 [R]
          - Swap Halves:      00010011101000101001011001001111
          - Bit Inversion:    11101100010111010110100110110000
          - Compressed Key:   01101000000101100011011110010001   [done by compression P-Box]
          - XOR with Key:     10000100010010110101111000100001

          - FUNCTION OUTPUT:  10000100010010110101111000100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011110100110010101100010101001

       - FUNCTION OUTPUT:          10000100010010110101111000100001

       - Left XOR FUNCTION OUTPUT: 11011010110100100000011010001000

       - Next Round Left 32 Bits:  01011101101000000011100100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010110100100000011010001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101101000000011100100011000

       - Right 32 Bits:            11011010110100100000011010001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100110010101110111010000110110110001101001011001010110   [Subkey: 4]
          - Input Half:       11011010110100100000011010001000
          - S-Box Result:     01100100011011101111000000100010   [per every group of 4-bits]
          - Split Into Two:   0110010001101110 [L] 1111000000100010 [R]
          - Swap Halves:      11110000001000100110010001101110
          - Bit Inversion:    00001111110111011001101110010001
          - Compressed Key:   00111010110100111001010111001001   [done by compression P-Box]
          - XOR with Key:     00110101000011100000111001011000

          - FUNCTION OUTPUT:  00110101000011100000111001011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101101000000011100100011000

       - FUNCTION OUTPUT:          00110101000011100000111001011000

       - Left XOR FUNCTION OUTPUT: 01101000101011100011011101000000

       - Next Round Left 32 Bits:  11011010110100100000011010001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000101011100011011101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010110100100000011010001000

       - Right 32 Bits:            01101000101011100011011101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10001100110101000100010111100100100111001011010011010100   [Subkey: 3]
          - Input Half:       01101000101011100011011101000000
          - S-Box Result:     00000010010011000001110101111111   [per every group of 4-bits]
          - Split Into Two:   0000001001001100 [L] 0001110101111111 [R]
          - Swap Halves:      00011101011111110000001001001100
          - Bit Inversion:    11100010100000001111110110110011
          - Compressed Key:   10011010010011011000000101101000   [done by compression P-Box]
          - XOR with Key:     01111000110011010111110011011011

          - FUNCTION OUTPUT:  01111000110011010111110011011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010110100100000011010001000

       - FUNCTION OUTPUT:          01111000110011010111110011011011

       - Left XOR FUNCTION OUTPUT: 10100010000111110111101001010011

       - Next Round Left 32 Bits:  01101000101011100011011101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010000111110111101001010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000101011100011011101000000

       - Right 32 Bits:            10100010000111110111101001010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111001100101011101110100001101101100011010010110010101   [Subkey: 2]
          - Input Half:       10100010000111110111101001010011
          - S-Box Result:     01001110101010111101010010010001   [per every group of 4-bits]
          - Split Into Two:   0100111010101011 [L] 1101010010010001 [R]
          - Swap Halves:      11010100100100010100111010101011
          - Bit Inversion:    00101011011011101011000101010100
          - Compressed Key:   11001010011100001110100101111010   [done by compression P-Box]
          - XOR with Key:     11100001000111100101100000101110

          - FUNCTION OUTPUT:  11100001000111100101100000101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000101011100011011101000000

       - FUNCTION OUTPUT:          11100001000111100101100000101110

       - Left XOR FUNCTION OUTPUT: 10001001101100000110111101101110

       - Next Round Left 32 Bits:  10100010000111110111101001010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001101100000110111101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010000111110111101001010011

       - Right 32 Bits:            10001001101100000110111101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011001101010001000101111001001001110010110100110101   [Subkey: 1]
          - Input Half:       10001001101100000110111101101110
          - S-Box Result:     00100011100011110000101100001100   [per every group of 4-bits]
          - Split Into Two:   0010001110001111 [L] 0000101100001100 [R]
          - Swap Halves:      00001011000011000010001110001111
          - Bit Inversion:    11110100111100111101110001110000
          - Compressed Key:   00101110000110110110110001011010   [done by compression P-Box]
          - XOR with Key:     11011010111010001011000000101010

          - FUNCTION OUTPUT:  11011010111010001011000000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010000111110111101001010011

       - FUNCTION OUTPUT:          11011010111010001011000000101010

       - Left XOR FUNCTION OUTPUT: 01111000111101111100101001111001

       - Next Round Left 32 Bits:  10001001101100000110111101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000111101111100101001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111100011110111110010100111100110001001101100000110111101101110

 > Decrypted Block:     0111100011110111110010100111100110001001101100000110111101101110


!!!CBC: Previous Ciphertext:                             0000101011010111111010100101100110101001100100000100111101001110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111001000100000001000000010000000100000001000000010000000100000

 > Final Processed Block:                                0111001000100000001000000010000000100000001000000010000000100000


FINAL PROCESSED DATA BLOCKS: 0100100001100101011011000110110001101111001000000111001101100101,0111001001110110011001010111001000101100001000000100100100100111,0110010000100000011011000110100101101011011001010010000001100001,0010000001101110011001010111011100100000010100100101001101000001,0010000001101011011001010111100100100000011100000110000101101001,0111001000100000001000000010000000100000001000000010000000100000,

BLOCKS IN ASCII:             Hello server, I'd like a new RSA key pair       

