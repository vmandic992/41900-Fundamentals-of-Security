Triple DES Capture

168-bit key: NoFQLkp1lvgrKV6CdOhPb

3 x 56-bit DES keys: NoFQLkp, 1lvgrKV, 6CdOhPb

Initialization Vector: ZNhgtae9

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 6CdOhPb
In Binary:  00110110010000110110010001001111011010000101000001100010

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01110010011011110010011011101100001001011110101111100111
Subkey 2  : 00100011011001000011011001000100111101101000010100000110
Subkey 3  : 01110111001001101111001001101110110000100101111010111110
Subkey 4  : 01100010001101100100001101100100010011110110100001010000
Subkey 5  : 11100111011100100110111100100110111011000010010111101011
Subkey 6  : 00000110001000110110010000110110010001001111011010000101
Subkey 7  : 10111110011101110010011011110010011011101100001001011110
Subkey 8  : 01010000011000100011011001000011011001000100111101101000
Subkey 9  : 11101011111001110111001001101111001001101110110000100101
Subkey 10 : 10000101000001100010001101100100001101100100010011110110
Subkey 11 : 01011110101111100111011100100110111100100110111011000010
Subkey 12 : 01101000010100000110001000110110010000110110010001001111
Subkey 13 : 00100101111010111110011101110010011011110010011011101100
Subkey 14 : 11110110100001010000011000100011011001000011011001000100
Subkey 15 : 11000010010111101011111001110111001001101111001001101110
Subkey 16 : 01001111011010000101000001100010001101100100001101100100

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ]ºÖ?zg?¤ÿ%ç)l"Ç"?7Û?'?¸ÑCVÄé¤k?É¹Q5|Ô*ZB­Uu=®Õ

Data padded with spaces : ]ºÖ?zg?¤ÿ%ç)l"Ç"?7Û?'?¸ÑCVÄé¤k?É¹Q5|Ô*ZB­Uu=®Õ[Padded with '0' spaces]

Data in ASCII           : 93,186,214,131,122,103,134,164,255,37,231,41,108,34,199,34,157,55,219,152,39,134,184,209,67,86,196,233,164,107,146,201,185,81,53,124,212,42,1,90,66,173,85,117,61,11,174,213,

Data in Binary          : 01011101,10111010,11010110,10000011,01111010,01100111,10000110,10100100,11111111,00100101,11100111,00101001,01101100,00100010,11000111,00100010,10011101,00110111,11011011,10011000,00100111,10000110,10111000,11010001,01000011,01010110,11000100,11101001,10100100,01101011,10010010,11001001,10111001,01010001,00110101,01111100,11010100,00101010,00000001,01011010,01000010,10101101,01010101,01110101,00111101,00001011,10101110,11010101,

Data in 64-bit Blocks   : 0101110110111010110101101000001101111010011001111000011010100100,1111111100100101111001110010100101101100001000101100011100100010,1001110100110111110110111001100000100111100001101011100011010001,0100001101010110110001001110100110100100011010111001001011001001,1011100101010001001101010111110011010100001010100000000101011010,0100001010101101010101010111010100111101000010111010111011010101,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101101001001110011010000110011101110100011000010110010100111001)

Ciphertext Block 1:                                      0101110110111010110101101000001101111010011001111000011010100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101101110101101011010000011

       - Right 32 Bits:            01111010011001111000011010100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011010000101000001100010001101100100001101100100   [Subkey: 16]
          - Input Half:       01111010011001111000011010100100
          - S-Box Result:     11010100000011010010000001000111   [per every group of 4-bits]
          - Split Into Two:   1101010000001101 [L] 0010000001000111 [R]
          - Swap Halves:      00100000010001111101010000001101
          - Bit Inversion:    11011111101110000010101111110010
          - Compressed Key:   10110101010110010010011010011000   [done by compression P-Box]
          - XOR with Key:     01101010111000010000110101101010

          - FUNCTION OUTPUT:  01101010111000010000110101101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101101110101101011010000011

       - FUNCTION OUTPUT:          01101010111000010000110101101010

       - Left XOR FUNCTION OUTPUT: 00110111010110111101101111101001

       - Next Round Left 32 Bits:  01111010011001111000011010100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111010110111101101111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010011001111000011010100100

       - Right 32 Bits:            00110111010110111101101111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000010010111101011111001110111001001101111001001101110   [Subkey: 15]
          - Input Half:       00110111010110111101101111101001
          - S-Box Result:     00011101100110000110100011000011   [per every group of 4-bits]
          - Split Into Two:   0001110110011000 [L] 0110100011000011 [R]
          - Swap Halves:      01101000110000110001110110011000
          - Bit Inversion:    10010111001111001110001001100111
          - Compressed Key:   00101011101110110110011110001101   [done by compression P-Box]
          - XOR with Key:     10111100100001111000010111101010

          - FUNCTION OUTPUT:  10111100100001111000010111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010011001111000011010100100

       - FUNCTION OUTPUT:          10111100100001111000010111101010

       - Left XOR FUNCTION OUTPUT: 11000110111000000000001101001110

       - Next Round Left 32 Bits:  00110111010110111101101111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110111000000000001101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111010110111101101111101001

       - Right 32 Bits:            11000110111000000000001101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110100001010000011000100011011001000011011001000100   [Subkey: 14]
          - Input Half:       11000110111000000000001101001110
          - S-Box Result:     01010000110011111111000101111100   [per every group of 4-bits]
          - Split Into Two:   0101000011001111 [L] 1111000101111100 [R]
          - Swap Halves:      11110001011111000101000011001111
          - Bit Inversion:    00001110100000111010111100110000
          - Compressed Key:   01110010000000010111000011001000   [done by compression P-Box]
          - XOR with Key:     01111100100000101101111111111000

          - FUNCTION OUTPUT:  01111100100000101101111111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111010110111101101111101001

       - FUNCTION OUTPUT:          01111100100000101101111111111000

       - Left XOR FUNCTION OUTPUT: 01001011110110010000010000010001

       - Next Round Left 32 Bits:  11000110111000000000001101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011110110010000010000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110111000000000001101001110

       - Right 32 Bits:            01001011110110010000010000010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101111010111110011101110010011011110010011011101100   [Subkey: 13]
          - Input Half:       01001011110110010000010000010001
          - S-Box Result:     01111000011000111111011110101010   [per every group of 4-bits]
          - Split Into Two:   0111100001100011 [L] 1111011110101010 [R]
          - Swap Halves:      11110111101010100111100001100011
          - Bit Inversion:    00001000010101011000011110011100
          - Compressed Key:   00010101110010110011110011101100   [done by compression P-Box]
          - XOR with Key:     00011101100111101011101101110000

          - FUNCTION OUTPUT:  00011101100111101011101101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110111000000000001101001110

       - FUNCTION OUTPUT:          00011101100111101011101101110000

       - Left XOR FUNCTION OUTPUT: 11011011011111101011100000111110

       - Next Round Left 32 Bits:  01001011110110010000010000010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011011111101011100000111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011110110010000010000010001

       - Right 32 Bits:            11011011011111101011100000111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010100000110001000110110010000110110010001001111   [Subkey: 12]
          - Input Half:       11011011011111101011100000111110
          - S-Box Result:     01101000110111001000001000011100   [per every group of 4-bits]
          - Split Into Two:   0110100011011100 [L] 1000001000011100 [R]
          - Swap Halves:      10000010000111000110100011011100
          - Bit Inversion:    01111101111000111001011100100011
          - Compressed Key:   10001000110000110001111001001111   [done by compression P-Box]
          - XOR with Key:     11110101001000001000100101101100

          - FUNCTION OUTPUT:  11110101001000001000100101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011110110010000010000010001

       - FUNCTION OUTPUT:          11110101001000001000100101101100

       - Left XOR FUNCTION OUTPUT: 10111110111110011000110101111101

       - Next Round Left 32 Bits:  11011011011111101011100000111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110111110011000110101111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011011111101011100000111110

       - Right 32 Bits:            10111110111110011000110101111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110101111100111011100100110111100100110111011000010   [Subkey: 11]
          - Input Half:       10111110111110011000110101111101
          - S-Box Result:     10001100101100110010011011010110   [per every group of 4-bits]
          - Split Into Two:   1000110010110011 [L] 0010011011010110 [R]
          - Swap Halves:      00100110110101101000110010110011
          - Bit Inversion:    11011001001010010111001101001100
          - Compressed Key:   11111111110100011011011011100001   [done by compression P-Box]
          - XOR with Key:     00100110111110001100010110101101

          - FUNCTION OUTPUT:  00100110111110001100010110101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011011111101011100000111110

       - FUNCTION OUTPUT:          00100110111110001100010110101101

       - Left XOR FUNCTION OUTPUT: 11111101100001100111110110010011

       - Next Round Left 32 Bits:  10111110111110011000110101111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101100001100111110110010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110111110011000110101111101

       - Right 32 Bits:            11111101100001100111110110010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000101000001100010001101100100001101100100010011110110   [Subkey: 10]
          - Input Half:       11111101100001100111110110010011
          - S-Box Result:     10110110001000001101011000110001   [per every group of 4-bits]
          - Split Into Two:   1011011000100000 [L] 1101011000110001 [R]
          - Swap Halves:      11010110001100011011011000100000
          - Bit Inversion:    00101001110011100100100111011111
          - Compressed Key:   00010010100010010010011001101001   [done by compression P-Box]
          - XOR with Key:     00111011010001110110111110110110

          - FUNCTION OUTPUT:  00111011010001110110111110110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110111110011000110101111101

       - FUNCTION OUTPUT:          00111011010001110110111110110110

       - Left XOR FUNCTION OUTPUT: 10000101101111101110001011001011

       - Next Round Left 32 Bits:  11111101100001100111110110010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101101111101110001011001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101100001100111110110010011

       - Right 32 Bits:            10000101101111101110001011001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101011111001110111001001101111001001101110110000100101   [Subkey: 9]
          - Input Half:       10000101101111101110001011001011
          - S-Box Result:     00101001100011001100111001011000   [per every group of 4-bits]
          - Split Into Two:   0010100110001100 [L] 1100111001011000 [R]
          - Swap Halves:      11001110010110000010100110001100
          - Bit Inversion:    00110001101001111101011001110011
          - Compressed Key:   10100110110110010110011101001010   [done by compression P-Box]
          - XOR with Key:     10010111011111101011000100111001

          - FUNCTION OUTPUT:  10010111011111101011000100111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101100001100111110110010011

       - FUNCTION OUTPUT:          10010111011111101011000100111001

       - Left XOR FUNCTION OUTPUT: 01101010111110001100110010101010

       - Next Round Left 32 Bits:  10000101101111101110001011001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101010111110001100110010101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101101111101110001011001011

       - Right 32 Bits:            01101010111110001100110010101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011000100011011001000011011001000100111101101000   [Subkey: 8]
          - Input Half:       01101010111110001100110010101010
          - S-Box Result:     00000100101100100101010101000100   [per every group of 4-bits]
          - Split Into Two:   0000010010110010 [L] 0101010101000100 [R]
          - Swap Halves:      01010101010001000000010010110010
          - Bit Inversion:    10101010101110111111101101001101
          - Compressed Key:   01000100100110000111001011010100   [done by compression P-Box]
          - XOR with Key:     11101110001000111000100110011001

          - FUNCTION OUTPUT:  11101110001000111000100110011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101101111101110001011001011

       - FUNCTION OUTPUT:          11101110001000111000100110011001

       - Left XOR FUNCTION OUTPUT: 01101011100111010110101101010010

       - Next Round Left 32 Bits:  01101010111110001100110010101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011100111010110101101010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101010111110001100110010101010

       - Right 32 Bits:            01101011100111010110101101010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111110011101110010011011110010011011101100001001011110   [Subkey: 7]
          - Input Half:       01101011100111010110101101010010
          - S-Box Result:     00001000001101100000100010011110   [per every group of 4-bits]
          - Split Into Two:   0000100000110110 [L] 0000100010011110 [R]
          - Swap Halves:      00001000100111100000100000110110
          - Bit Inversion:    11110111011000011111011111001001
          - Compressed Key:   11111110100011110011011110001101   [done by compression P-Box]
          - XOR with Key:     00001001111011101100000001000100

          - FUNCTION OUTPUT:  00001001111011101100000001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101010111110001100110010101010

       - FUNCTION OUTPUT:          00001001111011101100000001000100

       - Left XOR FUNCTION OUTPUT: 01100011000101100000110011101110

       - Next Round Left 32 Bits:  01101011100111010110101101010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100011000101100000110011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011100111010110101101010010

       - Right 32 Bits:            01100011000101100000110011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001000110110010000110110010001001111011010000101   [Subkey: 6]
          - Input Half:       01100011000101100000110011101110
          - S-Box Result:     00000001101000001111010111001100   [per every group of 4-bits]
          - Split Into Two:   0000000110100000 [L] 1111010111001100 [R]
          - Swap Halves:      11110101110011000000000110100000
          - Bit Inversion:    00001010001100111111111001011111
          - Compressed Key:   00110100110000110001001111101010   [done by compression P-Box]
          - XOR with Key:     00111110111100001110110110110101

          - FUNCTION OUTPUT:  00111110111100001110110110110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011100111010110101101010010

       - FUNCTION OUTPUT:          00111110111100001110110110110101

       - Left XOR FUNCTION OUTPUT: 01010101011011011000011011100111

       - Next Round Left 32 Bits:  01100011000101100000110011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101011011011000011011100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100011000101100000110011101110

       - Right 32 Bits:            01010101011011011000011011100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111011100100110111100100110111011000010010111101011   [Subkey: 5]
          - Input Half:       01010101011011011000011011100111
          - S-Box Result:     10011001000001100010000011001101   [per every group of 4-bits]
          - Split Into Two:   1001100100000110 [L] 0010000011001101 [R]
          - Swap Halves:      00100000110011011001100100000110
          - Bit Inversion:    11011111001100100110011011111001
          - Compressed Key:   00111100111000011011000001110111   [done by compression P-Box]
          - XOR with Key:     11100011110100111101011010001110

          - FUNCTION OUTPUT:  11100011110100111101011010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100011000101100000110011101110

       - FUNCTION OUTPUT:          11100011110100111101011010001110

       - Left XOR FUNCTION OUTPUT: 10000000110001011101101001100000

       - Next Round Left 32 Bits:  01010101011011011000011011100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000110001011101101001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101011011011000011011100111

       - Right 32 Bits:            10000000110001011101101001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101100100001101100100010011110110100001010000   [Subkey: 4]
          - Input Half:       10000000110001011101101001100000
          - S-Box Result:     00101111010110010110010000001111   [per every group of 4-bits]
          - Split Into Two:   0010111101011001 [L] 0110010000001111 [R]
          - Swap Halves:      01100100000011110010111101011001
          - Bit Inversion:    10011011111100001101000010100110
          - Compressed Key:   00101110010010010001111000000000   [done by compression P-Box]
          - XOR with Key:     10110101101110011100111010100110

          - FUNCTION OUTPUT:  10110101101110011100111010100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101011011011000011011100111

       - FUNCTION OUTPUT:          10110101101110011100111010100110

       - Left XOR FUNCTION OUTPUT: 11100000110101000100100001000001

       - Next Round Left 32 Bits:  10000000110001011101101001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100000110101000100100001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000110001011101101001100000

       - Right 32 Bits:            11100000110101000100100001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001101111001001101110110000100101111010111110   [Subkey: 3]
          - Input Half:       11100000110101000100100001000001
          - S-Box Result:     11001111011001110111001001111010   [per every group of 4-bits]
          - Split Into Two:   1100111101100111 [L] 0111001001111010 [R]
          - Swap Halves:      01110010011110101100111101100111
          - Bit Inversion:    10001101100001010011000010011000
          - Compressed Key:   01110110110110011001011011101101   [done by compression P-Box]
          - XOR with Key:     11111011010111001010011001110101

          - FUNCTION OUTPUT:  11111011010111001010011001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000110001011101101001100000

       - FUNCTION OUTPUT:          11111011010111001010011001110101

       - Left XOR FUNCTION OUTPUT: 01111011100110010111110000010101

       - Next Round Left 32 Bits:  11100000110101000100100001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011100110010111110000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100000110101000100100001000001

       - Right 32 Bits:            01111011100110010111110000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011001000011011001000100111101101000010100000110   [Subkey: 2]
          - Input Half:       01111011100110010111110000010101
          - S-Box Result:     11011000001100111101010110101001   [per every group of 4-bits]
          - Split Into Two:   1101100000110011 [L] 1101010110101001 [R]
          - Swap Halves:      11010101101010011101100000110011
          - Bit Inversion:    00101010010101100010011111001100
          - Compressed Key:   00100110100110001011010101011001   [done by compression P-Box]
          - XOR with Key:     00001100110011101001001010010101

          - FUNCTION OUTPUT:  00001100110011101001001010010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100000110101000100100001000001

       - FUNCTION OUTPUT:          00001100110011101001001010010101

       - Left XOR FUNCTION OUTPUT: 11101100000110101101101011010100

       - Next Round Left 32 Bits:  01111011100110010111110000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100000110101101101011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011100110010111110000010101

       - Right 32 Bits:            11101100000110101101101011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010011011110010011011101100001001011110101111100111   [Subkey: 1]
          - Input Half:       11101100000110101101101011010100
          - S-Box Result:     11000101101001000110010001100111   [per every group of 4-bits]
          - Split Into Two:   1100010110100100 [L] 0110010001100111 [R]
          - Swap Halves:      01100100011001111100010110100100
          - Bit Inversion:    10011011100110000011101001011011
          - Compressed Key:   01100111100011010010101110111011   [done by compression P-Box]
          - XOR with Key:     11111100000101010001000111100000

          - FUNCTION OUTPUT:  11111100000101010001000111100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011100110010111110000010101

       - FUNCTION OUTPUT:          11111100000101010001000111100000

       - Left XOR FUNCTION OUTPUT: 10000111100011000110110111110101

       - Next Round Left 32 Bits:  11101100000110101101101011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000111100011000110110111110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000011110001100011011011111010111101100000110101101101011010100

 > Decrypted Block:     1000011110001100011011011111010111101100000110101101101011010100


!!!CBC: Previous Ciphertext:                             0101101001001110011010000110011101110100011000010110010100111001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101110111000010000001011001001010011000011110111011111111101101

 > Final Processed Block:                                1101110111000010000001011001001010011000011110111011111111101101



Ciphertext Block 2:                                      1111111100100101111001110010100101101100001000101100011100100010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111001001011110011100101001

       - Right 32 Bits:            01101100001000101100011100100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011010000101000001100010001101100100001101100100   [Subkey: 16]
          - Input Half:       01101100001000101100011100100010
          - S-Box Result:     00000101111011100101110111101110   [per every group of 4-bits]
          - Split Into Two:   0000010111101110 [L] 0101110111101110 [R]
          - Swap Halves:      01011101111011100000010111101110
          - Bit Inversion:    10100010000100011111101000010001
          - Compressed Key:   10110101010110010010011010011000   [done by compression P-Box]
          - XOR with Key:     00010111010010001101110010001001

          - FUNCTION OUTPUT:  00010111010010001101110010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111001001011110011100101001

       - FUNCTION OUTPUT:          00010111010010001101110010001001

       - Left XOR FUNCTION OUTPUT: 11101000011011010011101110100000

       - Next Round Left 32 Bits:  01101100001000101100011100100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000011011010011101110100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100001000101100011100100010

       - Right 32 Bits:            11101000011011010011101110100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000010010111101011111001110111001001101111001001101110   [Subkey: 15]
          - Input Half:       11101000011011010011101110100000
          - S-Box Result:     11000010000001100001100001001111   [per every group of 4-bits]
          - Split Into Two:   1100001000000110 [L] 0001100001001111 [R]
          - Swap Halves:      00011000010011111100001000000110
          - Bit Inversion:    11100111101100000011110111111001
          - Compressed Key:   00101011101110110110011110001101   [done by compression P-Box]
          - XOR with Key:     11001100000010110101101001110100

          - FUNCTION OUTPUT:  11001100000010110101101001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100001000101100011100100010

       - FUNCTION OUTPUT:          11001100000010110101101001110100

       - Left XOR FUNCTION OUTPUT: 10100000001010011001110101010110

       - Next Round Left 32 Bits:  11101000011011010011101110100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000001010011001110101010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000011011010011101110100000

       - Right 32 Bits:            10100000001010011001110101010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110100001010000011000100011011001000011011001000100   [Subkey: 14]
          - Input Half:       10100000001010011001110101010110
          - S-Box Result:     01001111111000110011011010010000   [per every group of 4-bits]
          - Split Into Two:   0100111111100011 [L] 0011011010010000 [R]
          - Swap Halves:      00110110100100000100111111100011
          - Bit Inversion:    11001001011011111011000000011100
          - Compressed Key:   01110010000000010111000011001000   [done by compression P-Box]
          - XOR with Key:     10111011011011101100000011010100

          - FUNCTION OUTPUT:  10111011011011101100000011010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000011011010011101110100000

       - FUNCTION OUTPUT:          10111011011011101100000011010100

       - Left XOR FUNCTION OUTPUT: 01010011000000111111101101110100

       - Next Round Left 32 Bits:  10100000001010011001110101010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011000000111111101101110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000001010011001110101010110

       - Right 32 Bits:            01010011000000111111101101110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101111010111110011101110010011011110010011011101100   [Subkey: 13]
          - Input Half:       01010011000000111111101101110100
          - S-Box Result:     10010001111100011011100011010111   [per every group of 4-bits]
          - Split Into Two:   1001000111110001 [L] 1011100011010111 [R]
          - Swap Halves:      10111000110101111001000111110001
          - Bit Inversion:    01000111001010000110111000001110
          - Compressed Key:   00010101110010110011110011101100   [done by compression P-Box]
          - XOR with Key:     01010010111000110101001011100010

          - FUNCTION OUTPUT:  01010010111000110101001011100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000001010011001110101010110

       - FUNCTION OUTPUT:          01010010111000110101001011100010

       - Left XOR FUNCTION OUTPUT: 11110010110010101100111110110100

       - Next Round Left 32 Bits:  01010011000000111111101101110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010110010101100111110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011000000111111101101110100

       - Right 32 Bits:            11110010110010101100111110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010100000110001000110110010000110110010001001111   [Subkey: 12]
          - Input Half:       11110010110010101100111110110100
          - S-Box Result:     10111110010101000101101110000111   [per every group of 4-bits]
          - Split Into Two:   1011111001010100 [L] 0101101110000111 [R]
          - Swap Halves:      01011011100001111011111001010100
          - Bit Inversion:    10100100011110000100000110101011
          - Compressed Key:   10001000110000110001111001001111   [done by compression P-Box]
          - XOR with Key:     00101100101110110101111111100100

          - FUNCTION OUTPUT:  00101100101110110101111111100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011000000111111101101110100

       - FUNCTION OUTPUT:          00101100101110110101111111100100

       - Left XOR FUNCTION OUTPUT: 01111111101110001010010010010000

       - Next Round Left 32 Bits:  11110010110010101100111110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111101110001010010010010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010110010101100111110110100

       - Right 32 Bits:            01111111101110001010010010010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110101111100111011100100110111100100110111011000010   [Subkey: 11]
          - Input Half:       01111111101110001010010010010000
          - S-Box Result:     11011011100000100100011100111111   [per every group of 4-bits]
          - Split Into Two:   1101101110000010 [L] 0100011100111111 [R]
          - Swap Halves:      01000111001111111101101110000010
          - Bit Inversion:    10111000110000000010010001111101
          - Compressed Key:   11111111110100011011011011100001   [done by compression P-Box]
          - XOR with Key:     01000111000100011001001010011100

          - FUNCTION OUTPUT:  01000111000100011001001010011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010110010101100111110110100

       - FUNCTION OUTPUT:          01000111000100011001001010011100

       - Left XOR FUNCTION OUTPUT: 10110101110110110101110100101000

       - Next Round Left 32 Bits:  01111111101110001010010010010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101110110110101110100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111101110001010010010010000

       - Right 32 Bits:            10110101110110110101110100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000101000001100010001101100100001101100100010011110110   [Subkey: 10]
          - Input Half:       10110101110110110101110100101000
          - S-Box Result:     10001001011010001001011011100010   [per every group of 4-bits]
          - Split Into Two:   1000100101101000 [L] 1001011011100010 [R]
          - Swap Halves:      10010110111000101000100101101000
          - Bit Inversion:    01101001000111010111011010010111
          - Compressed Key:   00010010100010010010011001101001   [done by compression P-Box]
          - XOR with Key:     01111011100101000101000011111110

          - FUNCTION OUTPUT:  01111011100101000101000011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111101110001010010010010000

       - FUNCTION OUTPUT:          01111011100101000101000011111110

       - Left XOR FUNCTION OUTPUT: 00000100001011001111010001101110

       - Next Round Left 32 Bits:  10110101110110110101110100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000100001011001111010001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101110110110101110100101000

       - Right 32 Bits:            00000100001011001111010001101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101011111001110111001001101111001001101110110000100101   [Subkey: 9]
          - Input Half:       00000100001011001111010001101110
          - S-Box Result:     11110111111001011011011100001100   [per every group of 4-bits]
          - Split Into Two:   1111011111100101 [L] 1011011100001100 [R]
          - Swap Halves:      10110111000011001111011111100101
          - Bit Inversion:    01001000111100110000100000011010
          - Compressed Key:   10100110110110010110011101001010   [done by compression P-Box]
          - XOR with Key:     11101110001010100110111101010000

          - FUNCTION OUTPUT:  11101110001010100110111101010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101110110110101110100101000

       - FUNCTION OUTPUT:          11101110001010100110111101010000

       - Left XOR FUNCTION OUTPUT: 01011011111100010011001001111000

       - Next Round Left 32 Bits:  00000100001011001111010001101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011111100010011001001111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000100001011001111010001101110

       - Right 32 Bits:            01011011111100010011001001111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011000100011011001000011011001000100111101101000   [Subkey: 8]
          - Input Half:       01011011111100010011001001111000
          - S-Box Result:     10011000101110100001111011010010   [per every group of 4-bits]
          - Split Into Two:   1001100010111010 [L] 0001111011010010 [R]
          - Swap Halves:      00011110110100101001100010111010
          - Bit Inversion:    11100001001011010110011101000101
          - Compressed Key:   01000100100110000111001011010100   [done by compression P-Box]
          - XOR with Key:     10100101101101010001010110010001

          - FUNCTION OUTPUT:  10100101101101010001010110010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000100001011001111010001101110

       - FUNCTION OUTPUT:          10100101101101010001010110010001

       - Left XOR FUNCTION OUTPUT: 10100001100110011110000111111111

       - Next Round Left 32 Bits:  01011011111100010011001001111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001100110011110000111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011111100010011001001111000

       - Right 32 Bits:            10100001100110011110000111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111110011101110010011011110010011011101100001001011110   [Subkey: 7]
          - Input Half:       10100001100110011110000111111111
          - S-Box Result:     01001010001100111100101010111011   [per every group of 4-bits]
          - Split Into Two:   0100101000110011 [L] 1100101010111011 [R]
          - Swap Halves:      11001010101110110100101000110011
          - Bit Inversion:    00110101010001001011010111001100
          - Compressed Key:   11111110100011110011011110001101   [done by compression P-Box]
          - XOR with Key:     11001011110010111000001001000001

          - FUNCTION OUTPUT:  11001011110010111000001001000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011111100010011001001111000

       - FUNCTION OUTPUT:          11001011110010111000001001000001

       - Left XOR FUNCTION OUTPUT: 10010000001110101011000000111001

       - Next Round Left 32 Bits:  10100001100110011110000111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000001110101011000000111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001100110011110000111111111

       - Right 32 Bits:            10010000001110101011000000111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001000110110010000110110010001001111011010000101   [Subkey: 6]
          - Input Half:       10010000001110101011000000111001
          - S-Box Result:     00111111000101001000111100010011   [per every group of 4-bits]
          - Split Into Two:   0011111100010100 [L] 1000111100010011 [R]
          - Swap Halves:      10001111000100110011111100010100
          - Bit Inversion:    01110000111011001100000011101011
          - Compressed Key:   00110100110000110001001111101010   [done by compression P-Box]
          - XOR with Key:     01000100001011111101001100000001

          - FUNCTION OUTPUT:  01000100001011111101001100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001100110011110000111111111

       - FUNCTION OUTPUT:          01000100001011111101001100000001

       - Left XOR FUNCTION OUTPUT: 11100101101101100011001011111110

       - Next Round Left 32 Bits:  10010000001110101011000000111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100101101101100011001011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000001110101011000000111001

       - Right 32 Bits:            11100101101101100011001011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111011100100110111100100110111011000010010111101011   [Subkey: 5]
          - Input Half:       11100101101101100011001011111110
          - S-Box Result:     11001001100000000001111010111100   [per every group of 4-bits]
          - Split Into Two:   1100100110000000 [L] 0001111010111100 [R]
          - Swap Halves:      00011110101111001100100110000000
          - Bit Inversion:    11100001010000110011011001111111
          - Compressed Key:   00111100111000011011000001110111   [done by compression P-Box]
          - XOR with Key:     11011101101000101000011000001000

          - FUNCTION OUTPUT:  11011101101000101000011000001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000001110101011000000111001

       - FUNCTION OUTPUT:          11011101101000101000011000001000

       - Left XOR FUNCTION OUTPUT: 01001101100110000011011000110001

       - Next Round Left 32 Bits:  11100101101101100011001011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101100110000011011000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101101101100011001011111110

       - Right 32 Bits:            01001101100110000011011000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101100100001101100100010011110110100001010000   [Subkey: 4]
          - Input Half:       01001101100110000011011000110001
          - S-Box Result:     01110110001100100001000000011010   [per every group of 4-bits]
          - Split Into Two:   0111011000110010 [L] 0001000000011010 [R]
          - Swap Halves:      00010000000110100111011000110010
          - Bit Inversion:    11101111111001011000100111001101
          - Compressed Key:   00101110010010010001111000000000   [done by compression P-Box]
          - XOR with Key:     11000001101011001001011111001101

          - FUNCTION OUTPUT:  11000001101011001001011111001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101101101100011001011111110

       - FUNCTION OUTPUT:          11000001101011001001011111001101

       - Left XOR FUNCTION OUTPUT: 00100100000110101010010100110011

       - Next Round Left 32 Bits:  01001101100110000011011000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100000110101010010100110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101100110000011011000110001

       - Right 32 Bits:            00100100000110101010010100110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001101111001001101110110000100101111010111110   [Subkey: 3]
          - Input Half:       00100100000110101010010100110011
          - S-Box Result:     11100111101001000100100100010001   [per every group of 4-bits]
          - Split Into Two:   1110011110100100 [L] 0100100100010001 [R]
          - Swap Halves:      01001001000100011110011110100100
          - Bit Inversion:    10110110111011100001100001011011
          - Compressed Key:   01110110110110011001011011101101   [done by compression P-Box]
          - XOR with Key:     11000000001101111000111010110110

          - FUNCTION OUTPUT:  11000000001101111000111010110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101100110000011011000110001

       - FUNCTION OUTPUT:          11000000001101111000111010110110

       - Left XOR FUNCTION OUTPUT: 10001101101011111011100010000111

       - Next Round Left 32 Bits:  00100100000110101010010100110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101101011111011100010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100100000110101010010100110011

       - Right 32 Bits:            10001101101011111011100010000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011001000011011001000100111101101000010100000110   [Subkey: 2]
          - Input Half:       10001101101011111011100010000111
          - S-Box Result:     00100110010010111000001000101101   [per every group of 4-bits]
          - Split Into Two:   0010011001001011 [L] 1000001000101101 [R]
          - Swap Halves:      10000010001011010010011001001011
          - Bit Inversion:    01111101110100101101100110110100
          - Compressed Key:   00100110100110001011010101011001   [done by compression P-Box]
          - XOR with Key:     01011011010010100110110011101101

          - FUNCTION OUTPUT:  01011011010010100110110011101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100100000110101010010100110011

       - FUNCTION OUTPUT:          01011011010010100110110011101101

       - Left XOR FUNCTION OUTPUT: 01111111010100001100100111011110

       - Next Round Left 32 Bits:  10001101101011111011100010000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111010100001100100111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101101011111011100010000111

       - Right 32 Bits:            01111111010100001100100111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010011011110010011011101100001001011110101111100111   [Subkey: 1]
          - Input Half:       01111111010100001100100111011110
          - S-Box Result:     11011011100111110101001101101100   [per every group of 4-bits]
          - Split Into Two:   1101101110011111 [L] 0101001101101100 [R]
          - Swap Halves:      01010011011011001101101110011111
          - Bit Inversion:    10101100100100110010010001100000
          - Compressed Key:   01100111100011010010101110111011   [done by compression P-Box]
          - XOR with Key:     11001011000111100000111111011011

          - FUNCTION OUTPUT:  11001011000111100000111111011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101101011111011100010000111

       - FUNCTION OUTPUT:          11001011000111100000111111011011

       - Left XOR FUNCTION OUTPUT: 01000110101100011011011101011100

       - Next Round Left 32 Bits:  01111111010100001100100111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110101100011011011101011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0100011010110001101101110101110001111111010100001100100111011110

 > Decrypted Block:     0100011010110001101101110101110001111111010100001100100111011110


!!!CBC: Previous Ciphertext:                             0101110110111010110101101000001101111010011001111000011010100100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0001101100001011011000011101111100000101001101110100111101111010

 > Final Processed Block:                                0001101100001011011000011101111100000101001101110100111101111010



Ciphertext Block 3:                                      1001110100110111110110111001100000100111100001101011100011010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101001101111101101110011000

       - Right 32 Bits:            00100111100001101011100011010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011010000101000001100010001101100100001101100100   [Subkey: 16]
          - Input Half:       00100111100001101011100011010001
          - S-Box Result:     11101101001000001000001001101010   [per every group of 4-bits]
          - Split Into Two:   1110110100100000 [L] 1000001001101010 [R]
          - Swap Halves:      10000010011010101110110100100000
          - Bit Inversion:    01111101100101010001001011011111
          - Compressed Key:   10110101010110010010011010011000   [done by compression P-Box]
          - XOR with Key:     11001000110011000011010001000111

          - FUNCTION OUTPUT:  11001000110011000011010001000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101001101111101101110011000

       - FUNCTION OUTPUT:          11001000110011000011010001000111

       - Left XOR FUNCTION OUTPUT: 01010101111110111110111111011111

       - Next Round Left 32 Bits:  00100111100001101011100011010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101111110111110111111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111100001101011100011010001

       - Right 32 Bits:            01010101111110111110111111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000010010111101011111001110111001001101111001001101110   [Subkey: 15]
          - Input Half:       01010101111110111110111111011111
          - S-Box Result:     10011001101110001100101101101011   [per every group of 4-bits]
          - Split Into Two:   1001100110111000 [L] 1100101101101011 [R]
          - Swap Halves:      11001011011010111001100110111000
          - Bit Inversion:    00110100100101000110011001000111
          - Compressed Key:   00101011101110110110011110001101   [done by compression P-Box]
          - XOR with Key:     00011111001011110000000111001010

          - FUNCTION OUTPUT:  00011111001011110000000111001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111100001101011100011010001

       - FUNCTION OUTPUT:          00011111001011110000000111001010

       - Left XOR FUNCTION OUTPUT: 00111000101010011011100100011011

       - Next Round Left 32 Bits:  01010101111110111110111111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000101010011011100100011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101111110111110111111011111

       - Right 32 Bits:            00111000101010011011100100011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110100001010000011000100011011001000011011001000100   [Subkey: 14]
          - Input Half:       00111000101010011011100100011011
          - S-Box Result:     00010010010000111000001110101000   [per every group of 4-bits]
          - Split Into Two:   0001001001000011 [L] 1000001110101000 [R]
          - Swap Halves:      10000011101010000001001001000011
          - Bit Inversion:    01111100010101111110110110111100
          - Compressed Key:   01110010000000010111000011001000   [done by compression P-Box]
          - XOR with Key:     00001110010101101001110101110100

          - FUNCTION OUTPUT:  00001110010101101001110101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101111110111110111111011111

       - FUNCTION OUTPUT:          00001110010101101001110101110100

       - Left XOR FUNCTION OUTPUT: 01011011101011010111001010101011

       - Next Round Left 32 Bits:  00111000101010011011100100011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011101011010111001010101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000101010011011100100011011

       - Right 32 Bits:            01011011101011010111001010101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101111010111110011101110010011011110010011011101100   [Subkey: 13]
          - Input Half:       01011011101011010111001010101011
          - S-Box Result:     10011000010001101101111001001000   [per every group of 4-bits]
          - Split Into Two:   1001100001000110 [L] 1101111001001000 [R]
          - Swap Halves:      11011110010010001001100001000110
          - Bit Inversion:    00100001101101110110011110111001
          - Compressed Key:   00010101110010110011110011101100   [done by compression P-Box]
          - XOR with Key:     00110100011111000101101101010101

          - FUNCTION OUTPUT:  00110100011111000101101101010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000101010011011100100011011

       - FUNCTION OUTPUT:          00110100011111000101101101010101

       - Left XOR FUNCTION OUTPUT: 00001100110101011110001001001110

       - Next Round Left 32 Bits:  01011011101011010111001010101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100110101011110001001001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011101011010111001010101011

       - Right 32 Bits:            00001100110101011110001001001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010100000110001000110110010000110110010001001111   [Subkey: 12]
          - Input Half:       00001100110101011110001001001110
          - S-Box Result:     11110101011010011100111001111100   [per every group of 4-bits]
          - Split Into Two:   1111010101101001 [L] 1100111001111100 [R]
          - Swap Halves:      11001110011111001111010101101001
          - Bit Inversion:    00110001100000110000101010010110
          - Compressed Key:   10001000110000110001111001001111   [done by compression P-Box]
          - XOR with Key:     10111001010000000001010011011001

          - FUNCTION OUTPUT:  10111001010000000001010011011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011101011010111001010101011

       - FUNCTION OUTPUT:          10111001010000000001010011011001

       - Left XOR FUNCTION OUTPUT: 11100010111011010110011001110010

       - Next Round Left 32 Bits:  00001100110101011110001001001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111011010110011001110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100110101011110001001001110

       - Right 32 Bits:            11100010111011010110011001110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110101111100111011100100110111100100110111011000010   [Subkey: 11]
          - Input Half:       11100010111011010110011001110010
          - S-Box Result:     11001110110001100000000011011110   [per every group of 4-bits]
          - Split Into Two:   1100111011000110 [L] 0000000011011110 [R]
          - Swap Halves:      00000000110111101100111011000110
          - Bit Inversion:    11111111001000010011000100111001
          - Compressed Key:   11111111110100011011011011100001   [done by compression P-Box]
          - XOR with Key:     00000000111100001000011111011000

          - FUNCTION OUTPUT:  00000000111100001000011111011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100110101011110001001001110

       - FUNCTION OUTPUT:          00000000111100001000011111011000

       - Left XOR FUNCTION OUTPUT: 00001100001001010110010110010110

       - Next Round Left 32 Bits:  11100010111011010110011001110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100001001010110010110010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111011010110011001110010

       - Right 32 Bits:            00001100001001010110010110010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000101000001100010001101100100001101100100010011110110   [Subkey: 10]
          - Input Half:       00001100001001010110010110010110
          - S-Box Result:     11110101111010010000100100110000   [per every group of 4-bits]
          - Split Into Two:   1111010111101001 [L] 0000100100110000 [R]
          - Swap Halves:      00001001001100001111010111101001
          - Bit Inversion:    11110110110011110000101000010110
          - Compressed Key:   00010010100010010010011001101001   [done by compression P-Box]
          - XOR with Key:     11100100010001100010110001111111

          - FUNCTION OUTPUT:  11100100010001100010110001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111011010110011001110010

       - FUNCTION OUTPUT:          11100100010001100010110001111111

       - Left XOR FUNCTION OUTPUT: 00000110101010110100101000001101

       - Next Round Left 32 Bits:  00001100001001010110010110010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110101010110100101000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100001001010110010110010110

       - Right 32 Bits:            00000110101010110100101000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101011111001110111001001101111001001101110110000100101   [Subkey: 9]
          - Input Half:       00000110101010110100101000001101
          - S-Box Result:     11110000010010000111010011110110   [per every group of 4-bits]
          - Split Into Two:   1111000001001000 [L] 0111010011110110 [R]
          - Swap Halves:      01110100111101101111000001001000
          - Bit Inversion:    10001011000010010000111110110111
          - Compressed Key:   10100110110110010110011101001010   [done by compression P-Box]
          - XOR with Key:     00101101110100000110100011111101

          - FUNCTION OUTPUT:  00101101110100000110100011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100001001010110010110010110

       - FUNCTION OUTPUT:          00101101110100000110100011111101

       - Left XOR FUNCTION OUTPUT: 00100001111101010000110101101011

       - Next Round Left 32 Bits:  00000110101010110100101000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001111101010000110101101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110101010110100101000001101

       - Right 32 Bits:            00100001111101010000110101101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011000100011011001000011011001000100111101101000   [Subkey: 8]
          - Input Half:       00100001111101010000110101101011
          - S-Box Result:     11101010101110011111011000001000   [per every group of 4-bits]
          - Split Into Two:   1110101010111001 [L] 1111011000001000 [R]
          - Swap Halves:      11110110000010001110101010111001
          - Bit Inversion:    00001001111101110001010101000110
          - Compressed Key:   01000100100110000111001011010100   [done by compression P-Box]
          - XOR with Key:     01001101011011110110011110010010

          - FUNCTION OUTPUT:  01001101011011110110011110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110101010110100101000001101

       - FUNCTION OUTPUT:          01001101011011110110011110010010

       - Left XOR FUNCTION OUTPUT: 01001011110001000010110110011111

       - Next Round Left 32 Bits:  00100001111101010000110101101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011110001000010110110011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001111101010000110101101011

       - Right 32 Bits:            01001011110001000010110110011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111110011101110010011011110010011011101100001001011110   [Subkey: 7]
          - Input Half:       01001011110001000010110110011111
          - S-Box Result:     01111000010101111110011000111011   [per every group of 4-bits]
          - Split Into Two:   0111100001010111 [L] 1110011000111011 [R]
          - Swap Halves:      11100110001110110111100001010111
          - Bit Inversion:    00011001110001001000011110101000
          - Compressed Key:   11111110100011110011011110001101   [done by compression P-Box]
          - XOR with Key:     11100111010010111011000000100101

          - FUNCTION OUTPUT:  11100111010010111011000000100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001111101010000110101101011

       - FUNCTION OUTPUT:          11100111010010111011000000100101

       - Left XOR FUNCTION OUTPUT: 11000110101111101011110101001110

       - Next Round Left 32 Bits:  01001011110001000010110110011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110101111101011110101001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011110001000010110110011111

       - Right 32 Bits:            11000110101111101011110101001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001000110110010000110110010001001111011010000101   [Subkey: 6]
          - Input Half:       11000110101111101011110101001110
          - S-Box Result:     01010000100011001000011001111100   [per every group of 4-bits]
          - Split Into Two:   0101000010001100 [L] 1000011001111100 [R]
          - Swap Halves:      10000110011111000101000010001100
          - Bit Inversion:    01111001100000111010111101110011
          - Compressed Key:   00110100110000110001001111101010   [done by compression P-Box]
          - XOR with Key:     01001101010000001011110010011001

          - FUNCTION OUTPUT:  01001101010000001011110010011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011110001000010110110011111

       - FUNCTION OUTPUT:          01001101010000001011110010011001

       - Left XOR FUNCTION OUTPUT: 00000110100001001001000100000110

       - Next Round Left 32 Bits:  11000110101111101011110101001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110100001001001000100000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110101111101011110101001110

       - Right 32 Bits:            00000110100001001001000100000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111011100100110111100100110111011000010010111101011   [Subkey: 5]
          - Input Half:       00000110100001001001000100000110
          - S-Box Result:     11110000001001110011101011110000   [per every group of 4-bits]
          - Split Into Two:   1111000000100111 [L] 0011101011110000 [R]
          - Swap Halves:      00111010111100001111000000100111
          - Bit Inversion:    11000101000011110000111111011000
          - Compressed Key:   00111100111000011011000001110111   [done by compression P-Box]
          - XOR with Key:     11111001111011101011111110101111

          - FUNCTION OUTPUT:  11111001111011101011111110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110101111101011110101001110

       - FUNCTION OUTPUT:          11111001111011101011111110101111

       - Left XOR FUNCTION OUTPUT: 00111111010100000000001011100001

       - Next Round Left 32 Bits:  00000110100001001001000100000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111010100000000001011100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110100001001001000100000110

       - Right 32 Bits:            00111111010100000000001011100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101100100001101100100010011110110100001010000   [Subkey: 4]
          - Input Half:       00111111010100000000001011100001
          - S-Box Result:     00011011100111111111111011001010   [per every group of 4-bits]
          - Split Into Two:   0001101110011111 [L] 1111111011001010 [R]
          - Swap Halves:      11111110110010100001101110011111
          - Bit Inversion:    00000001001101011110010001100000
          - Compressed Key:   00101110010010010001111000000000   [done by compression P-Box]
          - XOR with Key:     00101111011111001111101001100000

          - FUNCTION OUTPUT:  00101111011111001111101001100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110100001001001000100000110

       - FUNCTION OUTPUT:          00101111011111001111101001100000

       - Left XOR FUNCTION OUTPUT: 00101001111110000110101101100110

       - Next Round Left 32 Bits:  00111111010100000000001011100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001111110000110101101100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111010100000000001011100001

       - Right 32 Bits:            00101001111110000110101101100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001101111001001101110110000100101111010111110   [Subkey: 3]
          - Input Half:       00101001111110000110101101100110
          - S-Box Result:     11100011101100100000100000000000   [per every group of 4-bits]
          - Split Into Two:   1110001110110010 [L] 0000100000000000 [R]
          - Swap Halves:      00001000000000001110001110110010
          - Bit Inversion:    11110111111111110001110001001101
          - Compressed Key:   01110110110110011001011011101101   [done by compression P-Box]
          - XOR with Key:     10000001001001101000101010100000

          - FUNCTION OUTPUT:  10000001001001101000101010100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111010100000000001011100001

       - FUNCTION OUTPUT:          10000001001001101000101010100000

       - Left XOR FUNCTION OUTPUT: 10111110011101101000100001000001

       - Next Round Left 32 Bits:  00101001111110000110101101100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110011101101000100001000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001111110000110101101100110

       - Right 32 Bits:            10111110011101101000100001000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011001000011011001000100111101101000010100000110   [Subkey: 2]
          - Input Half:       10111110011101101000100001000001
          - S-Box Result:     10001100110100000010001001111010   [per every group of 4-bits]
          - Split Into Two:   1000110011010000 [L] 0010001001111010 [R]
          - Swap Halves:      00100010011110101000110011010000
          - Bit Inversion:    11011101100001010111001100101111
          - Compressed Key:   00100110100110001011010101011001   [done by compression P-Box]
          - XOR with Key:     11111011000111011100011001110110

          - FUNCTION OUTPUT:  11111011000111011100011001110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001111110000110101101100110

       - FUNCTION OUTPUT:          11111011000111011100011001110110

       - Left XOR FUNCTION OUTPUT: 11010010111001011010110100010000

       - Next Round Left 32 Bits:  10111110011101101000100001000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010111001011010110100010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110011101101000100001000001

       - Right 32 Bits:            11010010111001011010110100010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010011011110010011011101100001001011110101111100111   [Subkey: 1]
          - Input Half:       11010010111001011010110100010000
          - S-Box Result:     01101110110010010100011010101111   [per every group of 4-bits]
          - Split Into Two:   0110111011001001 [L] 0100011010101111 [R]
          - Swap Halves:      01000110101011110110111011001001
          - Bit Inversion:    10111001010100001001000100110110
          - Compressed Key:   01100111100011010010101110111011   [done by compression P-Box]
          - XOR with Key:     11011110110111011011101010001101

          - FUNCTION OUTPUT:  11011110110111011011101010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110011101101000100001000001

       - FUNCTION OUTPUT:          11011110110111011011101010001101

       - Left XOR FUNCTION OUTPUT: 01100000101010110011001011001100

       - Next Round Left 32 Bits:  11010010111001011010110100010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000101010110011001011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110000010101011001100101100110011010010111001011010110100010000

 > Decrypted Block:     0110000010101011001100101100110011010010111001011010110100010000


!!!CBC: Previous Ciphertext:                             1111111100100101111001110010100101101100001000101100011100100010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1001111110001110110101011110010110111110110001110110101000110010

 > Final Processed Block:                                1001111110001110110101011110010110111110110001110110101000110010



Ciphertext Block 4:                                      0100001101010110110001001110100110100100011010111001001011001001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000011010101101100010011101001

       - Right 32 Bits:            10100100011010111001001011001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011010000101000001100010001101100100001101100100   [Subkey: 16]
          - Input Half:       10100100011010111001001011001001
          - S-Box Result:     01000111000010000011111001010011   [per every group of 4-bits]
          - Split Into Two:   0100011100001000 [L] 0011111001010011 [R]
          - Swap Halves:      00111110010100110100011100001000
          - Bit Inversion:    11000001101011001011100011110111
          - Compressed Key:   10110101010110010010011010011000   [done by compression P-Box]
          - XOR with Key:     01110100111101011001111001101111

          - FUNCTION OUTPUT:  01110100111101011001111001101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000011010101101100010011101001

       - FUNCTION OUTPUT:          01110100111101011001111001101111

       - Left XOR FUNCTION OUTPUT: 00110111101000110101101010000110

       - Next Round Left 32 Bits:  10100100011010111001001011001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111101000110101101010000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100011010111001001011001001

       - Right 32 Bits:            00110111101000110101101010000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000010010111101011111001110111001001101111001001101110   [Subkey: 15]
          - Input Half:       00110111101000110101101010000110
          - S-Box Result:     00011101010000011001010000100000   [per every group of 4-bits]
          - Split Into Two:   0001110101000001 [L] 1001010000100000 [R]
          - Swap Halves:      10010100001000000001110101000001
          - Bit Inversion:    01101011110111111110001010111110
          - Compressed Key:   00101011101110110110011110001101   [done by compression P-Box]
          - XOR with Key:     01000000011001001000010100110011

          - FUNCTION OUTPUT:  01000000011001001000010100110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100011010111001001011001001

       - FUNCTION OUTPUT:          01000000011001001000010100110011

       - Left XOR FUNCTION OUTPUT: 11100100000011110001011111111010

       - Next Round Left 32 Bits:  00110111101000110101101010000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100000011110001011111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111101000110101101010000110

       - Right 32 Bits:            11100100000011110001011111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110100001010000011000100011011001000011011001000100   [Subkey: 14]
          - Input Half:       11100100000011110001011111111010
          - S-Box Result:     11000111111110111010110110110100   [per every group of 4-bits]
          - Split Into Two:   1100011111111011 [L] 1010110110110100 [R]
          - Swap Halves:      10101101101101001100011111111011
          - Bit Inversion:    01010010010010110011100000000100
          - Compressed Key:   01110010000000010111000011001000   [done by compression P-Box]
          - XOR with Key:     00100000010010100100100011001100

          - FUNCTION OUTPUT:  00100000010010100100100011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111101000110101101010000110

       - FUNCTION OUTPUT:          00100000010010100100100011001100

       - Left XOR FUNCTION OUTPUT: 00010111111010010001001001001010

       - Next Round Left 32 Bits:  11100100000011110001011111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111111010010001001001001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100000011110001011111111010

       - Right 32 Bits:            00010111111010010001001001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101111010111110011101110010011011110010011011101100   [Subkey: 13]
          - Input Half:       00010111111010010001001001001010
          - S-Box Result:     10101101110000111010111001110100   [per every group of 4-bits]
          - Split Into Two:   1010110111000011 [L] 1010111001110100 [R]
          - Swap Halves:      10101110011101001010110111000011
          - Bit Inversion:    01010001100010110101001000111100
          - Compressed Key:   00010101110010110011110011101100   [done by compression P-Box]
          - XOR with Key:     01000100010000000110111011010000

          - FUNCTION OUTPUT:  01000100010000000110111011010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100000011110001011111111010

       - FUNCTION OUTPUT:          01000100010000000110111011010000

       - Left XOR FUNCTION OUTPUT: 10100000010011110111100100101010

       - Next Round Left 32 Bits:  00010111111010010001001001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000010011110111100100101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111111010010001001001001010

       - Right 32 Bits:            10100000010011110111100100101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010100000110001000110110010000110110010001001111   [Subkey: 12]
          - Input Half:       10100000010011110111100100101010
          - S-Box Result:     01001111011110111101001111100100   [per every group of 4-bits]
          - Split Into Two:   0100111101111011 [L] 1101001111100100 [R]
          - Swap Halves:      11010011111001000100111101111011
          - Bit Inversion:    00101100000110111011000010000100
          - Compressed Key:   10001000110000110001111001001111   [done by compression P-Box]
          - XOR with Key:     10100100110110001010111011001011

          - FUNCTION OUTPUT:  10100100110110001010111011001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111111010010001001001001010

       - FUNCTION OUTPUT:          10100100110110001010111011001011

       - Left XOR FUNCTION OUTPUT: 10110011001100011011110010000001

       - Next Round Left 32 Bits:  10100000010011110111100100101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011001100011011110010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100000010011110111100100101010

       - Right 32 Bits:            10110011001100011011110010000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110101111100111011100100110111100100110111011000010   [Subkey: 11]
          - Input Half:       10110011001100011011110010000001
          - S-Box Result:     10000001000110101000010100101010   [per every group of 4-bits]
          - Split Into Two:   1000000100011010 [L] 1000010100101010 [R]
          - Swap Halves:      10000101001010101000000100011010
          - Bit Inversion:    01111010110101010111111011100101
          - Compressed Key:   11111111110100011011011011100001   [done by compression P-Box]
          - XOR with Key:     10000101000001001100100000000100

          - FUNCTION OUTPUT:  10000101000001001100100000000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100000010011110111100100101010

       - FUNCTION OUTPUT:          10000101000001001100100000000100

       - Left XOR FUNCTION OUTPUT: 00100101010010111011000100101110

       - Next Round Left 32 Bits:  10110011001100011011110010000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101010010111011000100101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011001100011011110010000001

       - Right 32 Bits:            00100101010010111011000100101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000101000001100010001101100100001101100100010011110110   [Subkey: 10]
          - Input Half:       00100101010010111011000100101110
          - S-Box Result:     11101001011110001000101011101100   [per every group of 4-bits]
          - Split Into Two:   1110100101111000 [L] 1000101011101100 [R]
          - Swap Halves:      10001010111011001110100101111000
          - Bit Inversion:    01110101000100110001011010000111
          - Compressed Key:   00010010100010010010011001101001   [done by compression P-Box]
          - XOR with Key:     01100111100110100011000011101110

          - FUNCTION OUTPUT:  01100111100110100011000011101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011001100011011110010000001

       - FUNCTION OUTPUT:          01100111100110100011000011101110

       - Left XOR FUNCTION OUTPUT: 11010100101010111000110001101111

       - Next Round Left 32 Bits:  00100101010010111011000100101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010100101010111000110001101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101010010111011000100101110

       - Right 32 Bits:            11010100101010111000110001101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101011111001110111001001101111001001101110110000100101   [Subkey: 9]
          - Input Half:       11010100101010111000110001101111
          - S-Box Result:     01100111010010000010010100001011   [per every group of 4-bits]
          - Split Into Two:   0110011101001000 [L] 0010010100001011 [R]
          - Swap Halves:      00100101000010110110011101001000
          - Bit Inversion:    11011010111101001001100010110111
          - Compressed Key:   10100110110110010110011101001010   [done by compression P-Box]
          - XOR with Key:     01111100001011011111111111111101

          - FUNCTION OUTPUT:  01111100001011011111111111111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101010010111011000100101110

       - FUNCTION OUTPUT:          01111100001011011111111111111101

       - Left XOR FUNCTION OUTPUT: 01011001011001100100111011010011

       - Next Round Left 32 Bits:  11010100101010111000110001101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001011001100100111011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100101010111000110001101111

       - Right 32 Bits:            01011001011001100100111011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011000100011011001000011011001000100111101101000   [Subkey: 8]
          - Input Half:       01011001011001100100111011010011
          - S-Box Result:     10010011000000000111110001100001   [per every group of 4-bits]
          - Split Into Two:   1001001100000000 [L] 0111110001100001 [R]
          - Swap Halves:      01111100011000011001001100000000
          - Bit Inversion:    10000011100111100110110011111111
          - Compressed Key:   01000100100110000111001011010100   [done by compression P-Box]
          - XOR with Key:     11000111000001100001111000101011

          - FUNCTION OUTPUT:  11000111000001100001111000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100101010111000110001101111

       - FUNCTION OUTPUT:          11000111000001100001111000101011

       - Left XOR FUNCTION OUTPUT: 00010011101011011001001001000100

       - Next Round Left 32 Bits:  01011001011001100100111011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011101011011001001001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001011001100100111011010011

       - Right 32 Bits:            00010011101011011001001001000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111110011101110010011011110010011011101100001001011110   [Subkey: 7]
          - Input Half:       00010011101011011001001001000100
          - S-Box Result:     10100001010001100011111001110111   [per every group of 4-bits]
          - Split Into Two:   1010000101000110 [L] 0011111001110111 [R]
          - Swap Halves:      00111110011101111010000101000110
          - Bit Inversion:    11000001100010000101111010111001
          - Compressed Key:   11111110100011110011011110001101   [done by compression P-Box]
          - XOR with Key:     00111111000001110110100100110100

          - FUNCTION OUTPUT:  00111111000001110110100100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001011001100100111011010011

       - FUNCTION OUTPUT:          00111111000001110110100100110100

       - Left XOR FUNCTION OUTPUT: 01100110011000010010011111100111

       - Next Round Left 32 Bits:  00010011101011011001001001000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110011000010010011111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011101011011001001001000100

       - Right 32 Bits:            01100110011000010010011111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001000110110010000110110010001001111011010000101   [Subkey: 6]
          - Input Half:       01100110011000010010011111100111
          - S-Box Result:     00000000000010101110110111001101   [per every group of 4-bits]
          - Split Into Two:   0000000000001010 [L] 1110110111001101 [R]
          - Swap Halves:      11101101110011010000000000001010
          - Bit Inversion:    00010010001100101111111111110101
          - Compressed Key:   00110100110000110001001111101010   [done by compression P-Box]
          - XOR with Key:     00100110111100011110110000011111

          - FUNCTION OUTPUT:  00100110111100011110110000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011101011011001001001000100

       - FUNCTION OUTPUT:          00100110111100011110110000011111

       - Left XOR FUNCTION OUTPUT: 00110101010111000111111001011011

       - Next Round Left 32 Bits:  01100110011000010010011111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101010111000111111001011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110011000010010011111100111

       - Right 32 Bits:            00110101010111000111111001011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111011100100110111100100110111011000010010111101011   [Subkey: 5]
          - Input Half:       00110101010111000111111001011011
          - S-Box Result:     00011001100101011101110010011000   [per every group of 4-bits]
          - Split Into Two:   0001100110010101 [L] 1101110010011000 [R]
          - Swap Halves:      11011100100110000001100110010101
          - Bit Inversion:    00100011011001111110011001101010
          - Compressed Key:   00111100111000011011000001110111   [done by compression P-Box]
          - XOR with Key:     00011111100001100101011000011101

          - FUNCTION OUTPUT:  00011111100001100101011000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110011000010010011111100111

       - FUNCTION OUTPUT:          00011111100001100101011000011101

       - Left XOR FUNCTION OUTPUT: 01111001111001110111000111111010

       - Next Round Left 32 Bits:  00110101010111000111111001011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001111001110111000111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101010111000111111001011011

       - Right 32 Bits:            01111001111001110111000111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101100100001101100100010011110110100001010000   [Subkey: 4]
          - Input Half:       01111001111001110111000111111010
          - S-Box Result:     11010011110011011101101010110100   [per every group of 4-bits]
          - Split Into Two:   1101001111001101 [L] 1101101010110100 [R]
          - Swap Halves:      11011010101101001101001111001101
          - Bit Inversion:    00100101010010110010110000110010
          - Compressed Key:   00101110010010010001111000000000   [done by compression P-Box]
          - XOR with Key:     00001011000000100011001000110010

          - FUNCTION OUTPUT:  00001011000000100011001000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101010111000111111001011011

       - FUNCTION OUTPUT:          00001011000000100011001000110010

       - Left XOR FUNCTION OUTPUT: 00111110010111100100110001101001

       - Next Round Left 32 Bits:  01111001111001110111000111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110010111100100110001101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001111001110111000111111010

       - Right 32 Bits:            00111110010111100100110001101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001101111001001101110110000100101111010111110   [Subkey: 3]
          - Input Half:       00111110010111100100110001101001
          - S-Box Result:     00011100100111000111010100000011   [per every group of 4-bits]
          - Split Into Two:   0001110010011100 [L] 0111010100000011 [R]
          - Swap Halves:      01110101000000110001110010011100
          - Bit Inversion:    10001010111111001110001101100011
          - Compressed Key:   01110110110110011001011011101101   [done by compression P-Box]
          - XOR with Key:     11111100001001010111010110001110

          - FUNCTION OUTPUT:  11111100001001010111010110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001111001110111000111111010

       - FUNCTION OUTPUT:          11111100001001010111010110001110

       - Left XOR FUNCTION OUTPUT: 10000101110000100000010001110100

       - Next Round Left 32 Bits:  00111110010111100100110001101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101110000100000010001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110010111100100110001101001

       - Right 32 Bits:            10000101110000100000010001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011001000011011001000100111101101000010100000110   [Subkey: 2]
          - Input Half:       10000101110000100000010001110100
          - S-Box Result:     00101001010111101111011111010111   [per every group of 4-bits]
          - Split Into Two:   0010100101011110 [L] 1111011111010111 [R]
          - Swap Halves:      11110111110101110010100101011110
          - Bit Inversion:    00001000001010001101011010100001
          - Compressed Key:   00100110100110001011010101011001   [done by compression P-Box]
          - XOR with Key:     00101110101100000110001111111000

          - FUNCTION OUTPUT:  00101110101100000110001111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110010111100100110001101001

       - FUNCTION OUTPUT:          00101110101100000110001111111000

       - Left XOR FUNCTION OUTPUT: 00010000111011100010111110010001

       - Next Round Left 32 Bits:  10000101110000100000010001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000111011100010111110010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101110000100000010001110100

       - Right 32 Bits:            00010000111011100010111110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010011011110010011011101100001001011110101111100111   [Subkey: 1]
          - Input Half:       00010000111011100010111110010001
          - S-Box Result:     10101111110011001110101100111010   [per every group of 4-bits]
          - Split Into Two:   1010111111001100 [L] 1110101100111010 [R]
          - Swap Halves:      11101011001110101010111111001100
          - Bit Inversion:    00010100110001010101000000110011
          - Compressed Key:   01100111100011010010101110111011   [done by compression P-Box]
          - XOR with Key:     01110011010010000111101110001000

          - FUNCTION OUTPUT:  01110011010010000111101110001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101110000100000010001110100

       - FUNCTION OUTPUT:          01110011010010000111101110001000

       - Left XOR FUNCTION OUTPUT: 11110110100010100111111111111100

       - Next Round Left 32 Bits:  00010000111011100010111110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110110100010100111111111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111011010001010011111111111110000010000111011100010111110010001

 > Decrypted Block:     1111011010001010011111111111110000010000111011100010111110010001


!!!CBC: Previous Ciphertext:                             1001110100110111110110111001100000100111100001101011100011010001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110101110111101101001000110010000110111011010001001011101000000

 > Final Processed Block:                                0110101110111101101001000110010000110111011010001001011101000000



Ciphertext Block 5:                                      1011100101010001001101010111110011010100001010100000000101011010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001010100010011010101111100

       - Right 32 Bits:            11010100001010100000000101011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011010000101000001100010001101100100001101100100   [Subkey: 16]
          - Input Half:       11010100001010100000000101011010
          - S-Box Result:     01100111111001001111101010010100   [per every group of 4-bits]
          - Split Into Two:   0110011111100100 [L] 1111101010010100 [R]
          - Swap Halves:      11111010100101000110011111100100
          - Bit Inversion:    00000101011010111001100000011011
          - Compressed Key:   10110101010110010010011010011000   [done by compression P-Box]
          - XOR with Key:     10110000001100101011111010000011

          - FUNCTION OUTPUT:  10110000001100101011111010000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001010100010011010101111100

       - FUNCTION OUTPUT:          10110000001100101011111010000011

       - Left XOR FUNCTION OUTPUT: 00001001011000111000101111111111

       - Next Round Left 32 Bits:  11010100001010100000000101011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001011000111000101111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010100001010100000000101011010

       - Right 32 Bits:            00001001011000111000101111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000010010111101011111001110111001001101111001001101110   [Subkey: 15]
          - Input Half:       00001001011000111000101111111111
          - S-Box Result:     11110011000000010010100010111011   [per every group of 4-bits]
          - Split Into Two:   1111001100000001 [L] 0010100010111011 [R]
          - Swap Halves:      00101000101110111111001100000001
          - Bit Inversion:    11010111010001000000110011111110
          - Compressed Key:   00101011101110110110011110001101   [done by compression P-Box]
          - XOR with Key:     11111100111111110110101101110011

          - FUNCTION OUTPUT:  11111100111111110110101101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010100001010100000000101011010

       - FUNCTION OUTPUT:          11111100111111110110101101110011

       - Left XOR FUNCTION OUTPUT: 00101000110101010110101000101001

       - Next Round Left 32 Bits:  00001001011000111000101111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000110101010110101000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001011000111000101111111111

       - Right 32 Bits:            00101000110101010110101000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110100001010000011000100011011001000011011001000100   [Subkey: 14]
          - Input Half:       00101000110101010110101000101001
          - S-Box Result:     11100010011010010000010011100011   [per every group of 4-bits]
          - Split Into Two:   1110001001101001 [L] 0000010011100011 [R]
          - Swap Halves:      00000100111000111110001001101001
          - Bit Inversion:    11111011000111000001110110010110
          - Compressed Key:   01110010000000010111000011001000   [done by compression P-Box]
          - XOR with Key:     10001001000111010110110101011110

          - FUNCTION OUTPUT:  10001001000111010110110101011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001011000111000101111111111

       - FUNCTION OUTPUT:          10001001000111010110110101011110

       - Left XOR FUNCTION OUTPUT: 10000000011111101110011010100001

       - Next Round Left 32 Bits:  00101000110101010110101000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000011111101110011010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000110101010110101000101001

       - Right 32 Bits:            10000000011111101110011010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101111010111110011101110010011011110010011011101100   [Subkey: 13]
          - Input Half:       10000000011111101110011010100001
          - S-Box Result:     00101111110111001100000001001010   [per every group of 4-bits]
          - Split Into Two:   0010111111011100 [L] 1100000001001010 [R]
          - Swap Halves:      11000000010010100010111111011100
          - Bit Inversion:    00111111101101011101000000100011
          - Compressed Key:   00010101110010110011110011101100   [done by compression P-Box]
          - XOR with Key:     00101010011111101110110011001111

          - FUNCTION OUTPUT:  00101010011111101110110011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000110101010110101000101001

       - FUNCTION OUTPUT:          00101010011111101110110011001111

       - Left XOR FUNCTION OUTPUT: 00000010101010111000011011100110

       - Next Round Left 32 Bits:  10000000011111101110011010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010101010111000011011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000011111101110011010100001

       - Right 32 Bits:            00000010101010111000011011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010100000110001000110110010000110110010001001111   [Subkey: 12]
          - Input Half:       00000010101010111000011011100110
          - S-Box Result:     11111110010010000010000011000000   [per every group of 4-bits]
          - Split Into Two:   1111111001001000 [L] 0010000011000000 [R]
          - Swap Halves:      00100000110000001111111001001000
          - Bit Inversion:    11011111001111110000000110110111
          - Compressed Key:   10001000110000110001111001001111   [done by compression P-Box]
          - XOR with Key:     01010111111111000001111111111000

          - FUNCTION OUTPUT:  01010111111111000001111111111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000011111101110011010100001

       - FUNCTION OUTPUT:          01010111111111000001111111111000

       - Left XOR FUNCTION OUTPUT: 11010111100000101111100101011001

       - Next Round Left 32 Bits:  00000010101010111000011011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111100000101111100101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010101010111000011011100110

       - Right 32 Bits:            11010111100000101111100101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110101111100111011100100110111100100110111011000010   [Subkey: 11]
          - Input Half:       11010111100000101111100101011001
          - S-Box Result:     01101101001011101011001110010011   [per every group of 4-bits]
          - Split Into Two:   0110110100101110 [L] 1011001110010011 [R]
          - Swap Halves:      10110011100100110110110100101110
          - Bit Inversion:    01001100011011001001001011010001
          - Compressed Key:   11111111110100011011011011100001   [done by compression P-Box]
          - XOR with Key:     10110011101111010010010000110000

          - FUNCTION OUTPUT:  10110011101111010010010000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010101010111000011011100110

       - FUNCTION OUTPUT:          10110011101111010010010000110000

       - Left XOR FUNCTION OUTPUT: 10110001000101101010001011010110

       - Next Round Left 32 Bits:  11010111100000101111100101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001000101101010001011010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111100000101111100101011001

       - Right 32 Bits:            10110001000101101010001011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000101000001100010001101100100001101100100010011110110   [Subkey: 10]
          - Input Half:       10110001000101101010001011010110
          - S-Box Result:     10001010101000000100111001100000   [per every group of 4-bits]
          - Split Into Two:   1000101010100000 [L] 0100111001100000 [R]
          - Swap Halves:      01001110011000001000101010100000
          - Bit Inversion:    10110001100111110111010101011111
          - Compressed Key:   00010010100010010010011001101001   [done by compression P-Box]
          - XOR with Key:     10100011000101100101001100110110

          - FUNCTION OUTPUT:  10100011000101100101001100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111100000101111100101011001

       - FUNCTION OUTPUT:          10100011000101100101001100110110

       - Left XOR FUNCTION OUTPUT: 01110100100101001010101001101111

       - Next Round Left 32 Bits:  10110001000101101010001011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100100101001010101001101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001000101101010001011010110

       - Right 32 Bits:            01110100100101001010101001101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101011111001110111001001101111001001101110110000100101   [Subkey: 9]
          - Input Half:       01110100100101001010101001101111
          - S-Box Result:     11010111001101110100010000001011   [per every group of 4-bits]
          - Split Into Two:   1101011100110111 [L] 0100010000001011 [R]
          - Swap Halves:      01000100000010111101011100110111
          - Bit Inversion:    10111011111101000010100011001000
          - Compressed Key:   10100110110110010110011101001010   [done by compression P-Box]
          - XOR with Key:     00011101001011010100111110000010

          - FUNCTION OUTPUT:  00011101001011010100111110000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001000101101010001011010110

       - FUNCTION OUTPUT:          00011101001011010100111110000010

       - Left XOR FUNCTION OUTPUT: 10101100001110111110110101010100

       - Next Round Left 32 Bits:  01110100100101001010101001101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100001110111110110101010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100100101001010101001101111

       - Right 32 Bits:            10101100001110111110110101010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011000100011011001000011011001000100111101101000   [Subkey: 8]
          - Input Half:       10101100001110111110110101010100
          - S-Box Result:     01000101000110001100011010010111   [per every group of 4-bits]
          - Split Into Two:   0100010100011000 [L] 1100011010010111 [R]
          - Swap Halves:      11000110100101110100010100011000
          - Bit Inversion:    00111001011010001011101011100111
          - Compressed Key:   01000100100110000111001011010100   [done by compression P-Box]
          - XOR with Key:     01111101111100001100100000110011

          - FUNCTION OUTPUT:  01111101111100001100100000110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100100101001010101001101111

       - FUNCTION OUTPUT:          01111101111100001100100000110011

       - Left XOR FUNCTION OUTPUT: 00001001011001000110001001011100

       - Next Round Left 32 Bits:  10101100001110111110110101010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001011001000110001001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100001110111110110101010100

       - Right 32 Bits:            00001001011001000110001001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111110011101110010011011110010011011101100001001011110   [Subkey: 7]
          - Input Half:       00001001011001000110001001011100
          - S-Box Result:     11110011000001110000111010010101   [per every group of 4-bits]
          - Split Into Two:   1111001100000111 [L] 0000111010010101 [R]
          - Swap Halves:      00001110100101011111001100000111
          - Bit Inversion:    11110001011010100000110011111000
          - Compressed Key:   11111110100011110011011110001101   [done by compression P-Box]
          - XOR with Key:     00001111111001010011101101110101

          - FUNCTION OUTPUT:  00001111111001010011101101110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100001110111110110101010100

       - FUNCTION OUTPUT:          00001111111001010011101101110101

       - Left XOR FUNCTION OUTPUT: 10100011110111101101011000100001

       - Next Round Left 32 Bits:  00001001011001000110001001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100011110111101101011000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001011001000110001001011100

       - Right 32 Bits:            10100011110111101101011000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001000110110010000110110010001001111011010000101   [Subkey: 6]
          - Input Half:       10100011110111101101011000100001
          - S-Box Result:     01000001011011000110000011101010   [per every group of 4-bits]
          - Split Into Two:   0100000101101100 [L] 0110000011101010 [R]
          - Swap Halves:      01100000111010100100000101101100
          - Bit Inversion:    10011111000101011011111010010011
          - Compressed Key:   00110100110000110001001111101010   [done by compression P-Box]
          - XOR with Key:     10101011110101101010110101111001

          - FUNCTION OUTPUT:  10101011110101101010110101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001011001000110001001011100

       - FUNCTION OUTPUT:          10101011110101101010110101111001

       - Left XOR FUNCTION OUTPUT: 10100010101100101100111100100101

       - Next Round Left 32 Bits:  10100011110111101101011000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010101100101100111100100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011110111101101011000100001

       - Right 32 Bits:            10100010101100101100111100100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111011100100110111100100110111011000010010111101011   [Subkey: 5]
          - Input Half:       10100010101100101100111100100101
          - S-Box Result:     01001110100011100101101111101001   [per every group of 4-bits]
          - Split Into Two:   0100111010001110 [L] 0101101111101001 [R]
          - Swap Halves:      01011011111010010100111010001110
          - Bit Inversion:    10100100000101101011000101110001
          - Compressed Key:   00111100111000011011000001110111   [done by compression P-Box]
          - XOR with Key:     10011000111101110000000100000110

          - FUNCTION OUTPUT:  10011000111101110000000100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011110111101101011000100001

       - FUNCTION OUTPUT:          10011000111101110000000100000110

       - Left XOR FUNCTION OUTPUT: 00111011001010011101011100100111

       - Next Round Left 32 Bits:  10100010101100101100111100100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111011001010011101011100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010101100101100111100100101

       - Right 32 Bits:            00111011001010011101011100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101100100001101100100010011110110100001010000   [Subkey: 4]
          - Input Half:       00111011001010011101011100100111
          - S-Box Result:     00011000111000110110110111101101   [per every group of 4-bits]
          - Split Into Two:   0001100011100011 [L] 0110110111101101 [R]
          - Swap Halves:      01101101111011010001100011100011
          - Bit Inversion:    10010010000100101110011100011100
          - Compressed Key:   00101110010010010001111000000000   [done by compression P-Box]
          - XOR with Key:     10111100010110111111100100011100

          - FUNCTION OUTPUT:  10111100010110111111100100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010101100101100111100100101

       - FUNCTION OUTPUT:          10111100010110111111100100011100

       - Left XOR FUNCTION OUTPUT: 00011110111010010011011000111001

       - Next Round Left 32 Bits:  00111011001010011101011100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110111010010011011000111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111011001010011101011100100111

       - Right 32 Bits:            00011110111010010011011000111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001101111001001101110110000100101111010111110   [Subkey: 3]
          - Input Half:       00011110111010010011011000111001
          - S-Box Result:     10101100110000110001000000010011   [per every group of 4-bits]
          - Split Into Two:   1010110011000011 [L] 0001000000010011 [R]
          - Swap Halves:      00010000000100111010110011000011
          - Bit Inversion:    11101111111011000101001100111100
          - Compressed Key:   01110110110110011001011011101101   [done by compression P-Box]
          - XOR with Key:     10011001001101011100010111010001

          - FUNCTION OUTPUT:  10011001001101011100010111010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111011001010011101011100100111

       - FUNCTION OUTPUT:          10011001001101011100010111010001

       - Left XOR FUNCTION OUTPUT: 10100010000111000001001011110110

       - Next Round Left 32 Bits:  00011110111010010011011000111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010000111000001001011110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110111010010011011000111001

       - Right 32 Bits:            10100010000111000001001011110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011001000011011001000100111101101000010100000110   [Subkey: 2]
          - Input Half:       10100010000111000001001011110110
          - S-Box Result:     01001110101001011010111010110000   [per every group of 4-bits]
          - Split Into Two:   0100111010100101 [L] 1010111010110000 [R]
          - Swap Halves:      10101110101100000100111010100101
          - Bit Inversion:    01010001010011111011000101011010
          - Compressed Key:   00100110100110001011010101011001   [done by compression P-Box]
          - XOR with Key:     01110111110101110000010000000011

          - FUNCTION OUTPUT:  01110111110101110000010000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110111010010011011000111001

       - FUNCTION OUTPUT:          01110111110101110000010000000011

       - Left XOR FUNCTION OUTPUT: 01101001001111100011001000111010

       - Next Round Left 32 Bits:  10100010000111000001001011110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001001111100011001000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010000111000001001011110110

       - Right 32 Bits:            01101001001111100011001000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010011011110010011011101100001001011110101111100111   [Subkey: 1]
          - Input Half:       01101001001111100011001000111010
          - S-Box Result:     00000011000111000001111000010100   [per every group of 4-bits]
          - Split Into Two:   0000001100011100 [L] 0001111000010100 [R]
          - Swap Halves:      00011110000101000000001100011100
          - Bit Inversion:    11100001111010111111110011100011
          - Compressed Key:   01100111100011010010101110111011   [done by compression P-Box]
          - XOR with Key:     10000110011001101101011101011000

          - FUNCTION OUTPUT:  10000110011001101101011101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010000111000001001011110110

       - FUNCTION OUTPUT:          10000110011001101101011101011000

       - Left XOR FUNCTION OUTPUT: 00100100011110101100010110101110

       - Next Round Left 32 Bits:  01101001001111100011001000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100100011110101100010110101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0010010001111010110001011010111001101001001111100011001000111010

 > Decrypted Block:     0010010001111010110001011010111001101001001111100011001000111010


!!!CBC: Previous Ciphertext:                             0100001101010110110001001110100110100100011010111001001011001001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110011100101100000000010100011111001101010101011010000011110011

 > Final Processed Block:                                0110011100101100000000010100011111001101010101011010000011110011



Ciphertext Block 6:                                      0100001010101101010101010111010100111101000010111010111011010101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010101011010101010101110101

       - Right 32 Bits:            00111101000010111010111011010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001111011010000101000001100010001101100100001101100100   [Subkey: 16]
          - Input Half:       00111101000010111010111011010101
          - S-Box Result:     00010110111110000100110001101001   [per every group of 4-bits]
          - Split Into Two:   0001011011111000 [L] 0100110001101001 [R]
          - Swap Halves:      01001100011010010001011011111000
          - Bit Inversion:    10110011100101101110100100000111
          - Compressed Key:   10110101010110010010011010011000   [done by compression P-Box]
          - XOR with Key:     00000110110011111100111110011111

          - FUNCTION OUTPUT:  00000110110011111100111110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010101011010101010101110101

       - FUNCTION OUTPUT:          00000110110011111100111110011111

       - Left XOR FUNCTION OUTPUT: 01000100011000101001101011101010

       - Next Round Left 32 Bits:  00111101000010111010111011010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100011000101001101011101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101000010111010111011010101

       - Right 32 Bits:            01000100011000101001101011101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000010010111101011111001110111001001101111001001101110   [Subkey: 15]
          - Input Half:       01000100011000101001101011101010
          - S-Box Result:     01110111000011100011010011000100   [per every group of 4-bits]
          - Split Into Two:   0111011100001110 [L] 0011010011000100 [R]
          - Swap Halves:      00110100110001000111011100001110
          - Bit Inversion:    11001011001110111000100011110001
          - Compressed Key:   00101011101110110110011110001101   [done by compression P-Box]
          - XOR with Key:     11100000100000001110111101111100

          - FUNCTION OUTPUT:  11100000100000001110111101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101000010111010111011010101

       - FUNCTION OUTPUT:          11100000100000001110111101111100

       - Left XOR FUNCTION OUTPUT: 11011101100010110100000110101001

       - Next Round Left 32 Bits:  01000100011000101001101011101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101100010110100000110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100011000101001101011101010

       - Right 32 Bits:            11011101100010110100000110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11110110100001010000011000100011011001000011011001000100   [Subkey: 14]
          - Input Half:       11011101100010110100000110101001
          - S-Box Result:     01100110001010000111101001000011   [per every group of 4-bits]
          - Split Into Two:   0110011000101000 [L] 0111101001000011 [R]
          - Swap Halves:      01111010010000110110011000101000
          - Bit Inversion:    10000101101111001001100111010111
          - Compressed Key:   01110010000000010111000011001000   [done by compression P-Box]
          - XOR with Key:     11110111101111011110100100011111

          - FUNCTION OUTPUT:  11110111101111011110100100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100011000101001101011101010

       - FUNCTION OUTPUT:          11110111101111011110100100011111

       - Left XOR FUNCTION OUTPUT: 10110011110111110111001111110101

       - Next Round Left 32 Bits:  11011101100010110100000110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110011110111110111001111110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101100010110100000110101001

       - Right 32 Bits:            10110011110111110111001111110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100101111010111110011101110010011011110010011011101100   [Subkey: 13]
          - Input Half:       10110011110111110111001111110101
          - S-Box Result:     10000001011010111101000110111001   [per every group of 4-bits]
          - Split Into Two:   1000000101101011 [L] 1101000110111001 [R]
          - Swap Halves:      11010001101110011000000101101011
          - Bit Inversion:    00101110010001100111111010010100
          - Compressed Key:   00010101110010110011110011101100   [done by compression P-Box]
          - XOR with Key:     00111011100011010100001001111000

          - FUNCTION OUTPUT:  00111011100011010100001001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101100010110100000110101001

       - FUNCTION OUTPUT:          00111011100011010100001001111000

       - Left XOR FUNCTION OUTPUT: 11100110000001100000001111010001

       - Next Round Left 32 Bits:  10110011110111110111001111110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110000001100000001111010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110011110111110111001111110101

       - Right 32 Bits:            11100110000001100000001111010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101000010100000110001000110110010000110110010001001111   [Subkey: 12]
          - Input Half:       11100110000001100000001111010001
          - S-Box Result:     11000000111100001111000101101010   [per every group of 4-bits]
          - Split Into Two:   1100000011110000 [L] 1111000101101010 [R]
          - Swap Halves:      11110001011010101100000011110000
          - Bit Inversion:    00001110100101010011111100001111
          - Compressed Key:   10001000110000110001111001001111   [done by compression P-Box]
          - XOR with Key:     10000110010101100010000101000000

          - FUNCTION OUTPUT:  10000110010101100010000101000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110011110111110111001111110101

       - FUNCTION OUTPUT:          10000110010101100010000101000000

       - Left XOR FUNCTION OUTPUT: 00110101100010010101001010110101

       - Next Round Left 32 Bits:  11100110000001100000001111010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101100010010101001010110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110000001100000001111010001

       - Right 32 Bits:            00110101100010010101001010110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011110101111100111011100100110111100100110111011000010   [Subkey: 11]
          - Input Half:       00110101100010010101001010110101
          - S-Box Result:     00011001001000111001111010001001   [per every group of 4-bits]
          - Split Into Two:   0001100100100011 [L] 1001111010001001 [R]
          - Swap Halves:      10011110100010010001100100100011
          - Bit Inversion:    01100001011101101110011011011100
          - Compressed Key:   11111111110100011011011011100001   [done by compression P-Box]
          - XOR with Key:     10011110101001110101000000111101

          - FUNCTION OUTPUT:  10011110101001110101000000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110000001100000001111010001

       - FUNCTION OUTPUT:          10011110101001110101000000111101

       - Left XOR FUNCTION OUTPUT: 01111000101000010101001111101100

       - Next Round Left 32 Bits:  00110101100010010101001010110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000101000010101001111101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101100010010101001010110101

       - Right 32 Bits:            01111000101000010101001111101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10000101000001100010001101100100001101100100010011110110   [Subkey: 10]
          - Input Half:       01111000101000010101001111101100
          - S-Box Result:     11010010010010101001000111000101   [per every group of 4-bits]
          - Split Into Two:   1101001001001010 [L] 1001000111000101 [R]
          - Swap Halves:      10010001110001011101001001001010
          - Bit Inversion:    01101110001110100010110110110101
          - Compressed Key:   00010010100010010010011001101001   [done by compression P-Box]
          - XOR with Key:     01111100101100110000101111011100

          - FUNCTION OUTPUT:  01111100101100110000101111011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101100010010101001010110101

       - FUNCTION OUTPUT:          01111100101100110000101111011100

       - Left XOR FUNCTION OUTPUT: 01001001001110100101100101101001

       - Next Round Left 32 Bits:  01111000101000010101001111101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001001110100101100101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000101000010101001111101100

       - Right 32 Bits:            01001001001110100101100101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101011111001110111001001101111001001101110110000100101   [Subkey: 9]
          - Input Half:       01001001001110100101100101101001
          - S-Box Result:     01110011000101001001001100000011   [per every group of 4-bits]
          - Split Into Two:   0111001100010100 [L] 1001001100000011 [R]
          - Swap Halves:      10010011000000110111001100010100
          - Bit Inversion:    01101100111111001000110011101011
          - Compressed Key:   10100110110110010110011101001010   [done by compression P-Box]
          - XOR with Key:     11001010001001011110101110100001

          - FUNCTION OUTPUT:  11001010001001011110101110100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000101000010101001111101100

       - FUNCTION OUTPUT:          11001010001001011110101110100001

       - Left XOR FUNCTION OUTPUT: 10110010100001001011100001001101

       - Next Round Left 32 Bits:  01001001001110100101100101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010100001001011100001001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001001110100101100101101001

       - Right 32 Bits:            10110010100001001011100001001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011000100011011001000011011001000100111101101000   [Subkey: 8]
          - Input Half:       10110010100001001011100001001101
          - S-Box Result:     10001110001001111000001001110110   [per every group of 4-bits]
          - Split Into Two:   1000111000100111 [L] 1000001001110110 [R]
          - Swap Halves:      10000010011101101000111000100111
          - Bit Inversion:    01111101100010010111000111011000
          - Compressed Key:   01000100100110000111001011010100   [done by compression P-Box]
          - XOR with Key:     00111001000100010000001100001100

          - FUNCTION OUTPUT:  00111001000100010000001100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001001110100101100101101001

       - FUNCTION OUTPUT:          00111001000100010000001100001100

       - Left XOR FUNCTION OUTPUT: 01110000001010110101101001100101

       - Next Round Left 32 Bits:  10110010100001001011100001001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000001010110101101001100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010100001001011100001001101

       - Right 32 Bits:            01110000001010110101101001100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111110011101110010011011110010011011101100001001011110   [Subkey: 7]
          - Input Half:       01110000001010110101101001100101
          - S-Box Result:     11011111111010001001010000001001   [per every group of 4-bits]
          - Split Into Two:   1101111111101000 [L] 1001010000001001 [R]
          - Swap Halves:      10010100000010011101111111101000
          - Bit Inversion:    01101011111101100010000000010111
          - Compressed Key:   11111110100011110011011110001101   [done by compression P-Box]
          - XOR with Key:     10010101011110010001011110011010

          - FUNCTION OUTPUT:  10010101011110010001011110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010100001001011100001001101

       - FUNCTION OUTPUT:          10010101011110010001011110011010

       - Left XOR FUNCTION OUTPUT: 00100111111111011010111111010111

       - Next Round Left 32 Bits:  01110000001010110101101001100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111111111011010111111010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000001010110101101001100101

       - Right 32 Bits:            00100111111111011010111111010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000110001000110110010000110110010001001111011010000101   [Subkey: 6]
          - Input Half:       00100111111111011010111111010111
          - S-Box Result:     11101101101101100100101101101101   [per every group of 4-bits]
          - Split Into Two:   1110110110110110 [L] 0100101101101101 [R]
          - Swap Halves:      01001011011011011110110110110110
          - Bit Inversion:    10110100100100100001001001001001
          - Compressed Key:   00110100110000110001001111101010   [done by compression P-Box]
          - XOR with Key:     10000000010100010000000110100011

          - FUNCTION OUTPUT:  10000000010100010000000110100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000001010110101101001100101

       - FUNCTION OUTPUT:          10000000010100010000000110100011

       - Left XOR FUNCTION OUTPUT: 11110000011110100101101111000110

       - Next Round Left 32 Bits:  00100111111111011010111111010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110000011110100101101111000110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111111111011010111111010111

       - Right 32 Bits:            11110000011110100101101111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100111011100100110111100100110111011000010010111101011   [Subkey: 5]
          - Input Half:       11110000011110100101101111000110
          - S-Box Result:     10111111110101001001100001010000   [per every group of 4-bits]
          - Split Into Two:   1011111111010100 [L] 1001100001010000 [R]
          - Swap Halves:      10011000010100001011111111010100
          - Bit Inversion:    01100111101011110100000000101011
          - Compressed Key:   00111100111000011011000001110111   [done by compression P-Box]
          - XOR with Key:     01011011010011101111000001011100

          - FUNCTION OUTPUT:  01011011010011101111000001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111111111011010111111010111

       - FUNCTION OUTPUT:          01011011010011101111000001011100

       - Left XOR FUNCTION OUTPUT: 01111100101100110101111110001011

       - Next Round Left 32 Bits:  11110000011110100101101111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100101100110101111110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110000011110100101101111000110

       - Right 32 Bits:            01111100101100110101111110001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101100100001101100100010011110110100001010000   [Subkey: 4]
          - Input Half:       01111100101100110101111110001011
          - S-Box Result:     11010101100000011001101100101000   [per every group of 4-bits]
          - Split Into Two:   1101010110000001 [L] 1001101100101000 [R]
          - Swap Halves:      10011011001010001101010110000001
          - Bit Inversion:    01100100110101110010101001111110
          - Compressed Key:   00101110010010010001111000000000   [done by compression P-Box]
          - XOR with Key:     01001010100111100011010001111110

          - FUNCTION OUTPUT:  01001010100111100011010001111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110000011110100101101111000110

       - FUNCTION OUTPUT:          01001010100111100011010001111110

       - Left XOR FUNCTION OUTPUT: 10111010111001000110111110111000

       - Next Round Left 32 Bits:  01111100101100110101111110001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010111001000110111110111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100101100110101111110001011

       - Right 32 Bits:            10111010111001000110111110111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001101111001001101110110000100101111010111110   [Subkey: 3]
          - Input Half:       10111010111001000110111110111000
          - S-Box Result:     10000100110001110000101110000010   [per every group of 4-bits]
          - Split Into Two:   1000010011000111 [L] 0000101110000010 [R]
          - Swap Halves:      00001011100000101000010011000111
          - Bit Inversion:    11110100011111010111101100111000
          - Compressed Key:   01110110110110011001011011101101   [done by compression P-Box]
          - XOR with Key:     10000010101001001110110111010101

          - FUNCTION OUTPUT:  10000010101001001110110111010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100101100110101111110001011

       - FUNCTION OUTPUT:          10000010101001001110110111010101

       - Left XOR FUNCTION OUTPUT: 11111110000101111011001001011110

       - Next Round Left 32 Bits:  10111010111001000110111110111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110000101111011001001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010111001000110111110111000

       - Right 32 Bits:            11111110000101111011001001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011001000011011001000100111101101000010100000110   [Subkey: 2]
          - Input Half:       11111110000101111011001001011110
          - S-Box Result:     10111100101011011000111010011100   [per every group of 4-bits]
          - Split Into Two:   1011110010101101 [L] 1000111010011100 [R]
          - Swap Halves:      10001110100111001011110010101101
          - Bit Inversion:    01110001011000110100001101010010
          - Compressed Key:   00100110100110001011010101011001   [done by compression P-Box]
          - XOR with Key:     01010111111110111111011000001011

          - FUNCTION OUTPUT:  01010111111110111111011000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010111001000110111110111000

       - FUNCTION OUTPUT:          01010111111110111111011000001011

       - Left XOR FUNCTION OUTPUT: 11101101000111111001100110110011

       - Next Round Left 32 Bits:  11111110000101111011001001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101000111111001100110110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110000101111011001001011110

       - Right 32 Bits:            11101101000111111001100110110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010011011110010011011101100001001011110101111100111   [Subkey: 1]
          - Input Half:       11101101000111111001100110110011
          - S-Box Result:     11000110101010110011001110000001   [per every group of 4-bits]
          - Split Into Two:   1100011010101011 [L] 0011001110000001 [R]
          - Swap Halves:      00110011100000011100011010101011
          - Bit Inversion:    11001100011111100011100101010100
          - Compressed Key:   01100111100011010010101110111011   [done by compression P-Box]
          - XOR with Key:     10101011111100110001001011101111

          - FUNCTION OUTPUT:  10101011111100110001001011101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110000101111011001001011110

       - FUNCTION OUTPUT:          10101011111100110001001011101111

       - Left XOR FUNCTION OUTPUT: 01010101111001001010000010110001

       - Next Round Left 32 Bits:  11101101000111111001100110110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101111001001010000010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0101010111100100101000001011000111101101000111111001100110110011

 > Decrypted Block:     0101010111100100101000001011000111101101000111111001100110110011


!!!CBC: Previous Ciphertext:                             1011100101010001001101010111110011010100001010100000000101011010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1110110010110101100101011100110100111001001101011001100011101001

 > Final Processed Block:                                1110110010110101100101011100110100111001001101011001100011101001


FINAL PROCESSED DATA BLOCKS: 1101110111000010000001011001001010011000011110111011111111101101,0001101100001011011000011101111100000101001101110100111101111010,1001111110001110110101011110010110111110110001110110101000110010,0110101110111101101001000110010000110111011010001001011101000000,0110011100101100000000010100011111001101010101011010000011110011,1110110010110101100101011100110100111001001101011001100011101001,

BLOCKS IN ASCII:             ÝÂ??{¿íaß7Oz??Õå¾Çj2k½¤d7h?@g,GÍU óìµ?Í95?é

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 1lvgrKV
In Binary:  00110001011011000111011001100111011100100100101101010110

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 01110011101001001110001001100110001000110110110100101010
Subkey 2  : 01100011000101101100011101100110011101110010010010110101
Subkey 3  : 10100111001110100100111000100110011000100011011011010010
Subkey 4  : 01010110001100010110110001110110011001110111001001001011
Subkey 5  : 00101010011100111010010011100010011001100010001101101101
Subkey 6  : 10110101011000110001011011000111011001100111011100100100
Subkey 7  : 11010010101001110011101001001110001001100110001000110110
Subkey 8  : 01001011010101100011000101101100011101100110011101110010
Subkey 9  : 01101101001010100111001110100100111000100110011000100011
Subkey 10 : 00100100101101010110001100010110110001110110011001110111
Subkey 11 : 00110110110100101010011100111010010011100010011001100010
Subkey 12 : 01110010010010110101011000110001011011000111011001100111
Subkey 13 : 00100011011011010010101001110011101001001110001001100110
Subkey 14 : 01110111001001001011010101100011000101101100011101100110
Subkey 15 : 01100010001101101101001010100111001110100100111000100110
Subkey 16 : 01100111011100100100101101010110001100010110110001110110

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ÝÂ??{¿íaß7Oz??Õå¾Çj2k½¤d7h?@g,GÍU óìµ?Í95?é

Data padded with spaces : ÝÂ??{¿íaß7Oz??Õå¾Çj2k½¤d7h?@g,GÍU óìµ?Í95?é[Padded with '0' spaces]

Data in ASCII           : 221,194,5,146,152,123,191,237,27,11,97,223,5,55,79,122,159,142,213,229,190,199,106,50,107,189,164,100,55,104,151,64,103,44,1,71,205,85,160,243,236,181,149,205,57,53,152,233,

Data in Binary          : 11011101,11000010,00000101,10010010,10011000,01111011,10111111,11101101,00011011,00001011,01100001,11011111,00000101,00110111,01001111,01111010,10011111,10001110,11010101,11100101,10111110,11000111,01101010,00110010,01101011,10111101,10100100,01100100,00110111,01101000,10010111,01000000,01100111,00101100,00000001,01000111,11001101,01010101,10100000,11110011,11101100,10110101,10010101,11001101,00111001,00110101,10011000,11101001,

Data in 64-bit Blocks   : 1101110111000010000001011001001010011000011110111011111111101101,0001101100001011011000011101111100000101001101110100111101111010,1001111110001110110101011110010110111110110001110110101000110010,0110101110111101101001000110010000110111011010001001011101000000,0110011100101100000000010100011111001101010101011010000011110011,1110110010110101100101011100110100111001001101011001100011101001,



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101101001001110011010000110011101110100011000010110010100111001)

Plaintext Block: 1:                                      1101110111000010000001011001001010011000011110111011111111101101

!!!CBC: Previous Ciphertext:                             0101101001001110011010000110011101110100011000010110010100111001

!!!CBC: Current Block XOR with Previous Ciphertext:      1000011110001100011011011111010111101100000110101101101011010100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000111100011000110110111110101

       - Right 32 Bits:            11101100000110101101101011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011101001001110001001100110001000110110110100101010   [Subkey: 1]
          - Input Half:       11101100000110101101101011010100
          - S-Box Result:     11000101101001000110010001100111   [per every group of 4-bits]
          - Split Into Two:   1100010110100100 [L] 0110010001100111 [R]
          - Swap Halves:      01100100011001111100010110100100
          - Bit Inversion:    10011011100110000011101001011011
          - Compressed Key:   01100110110010010010111001010101   [done by compression P-Box]
          - XOR with Key:     11111101010100010001010000001110

          - FUNCTION OUTPUT:  11111101010100010001010000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000111100011000110110111110101

       - FUNCTION OUTPUT:          11111101010100010001010000001110

       - Left XOR FUNCTION OUTPUT: 01111010110111010111100111111011

       - Next Round Left 32 Bits:  11101100000110101101101011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010110111010111100111111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100000110101101101011010100

       - Right 32 Bits:            01111010110111010111100111111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011000101101100011101100110011101110010010010110101   [Subkey: 2]
          - Input Half:       01111010110111010111100111111011
          - S-Box Result:     11010100011001101101001110111000   [per every group of 4-bits]
          - Split Into Two:   1101010001100110 [L] 1101001110111000 [R]
          - Swap Halves:      11010011101110001101010001100110
          - Bit Inversion:    00101100010001110010101110011001
          - Compressed Key:   00101010010010010011110001101010   [done by compression P-Box]
          - XOR with Key:     00000110000011100001011111110011

          - FUNCTION OUTPUT:  00000110000011100001011111110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100000110101101101011010100

       - FUNCTION OUTPUT:          00000110000011100001011111110011

       - Left XOR FUNCTION OUTPUT: 11101010000101001100110100100111

       - Next Round Left 32 Bits:  01111010110111010111100111111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010000101001100110100100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010110111010111100111111011

       - Right 32 Bits:            11101010000101001100110100100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100111001110100100111000100110011000100011011011010010   [Subkey: 3]
          - Input Half:       11101010000101001100110100100111
          - S-Box Result:     11000100101001110101011011101101   [per every group of 4-bits]
          - Split Into Two:   1100010010100111 [L] 0101011011101101 [R]
          - Swap Halves:      01010110111011011100010010100111
          - Bit Inversion:    10101001000100100011101101011000
          - Compressed Key:   00111101011000010011010011100001   [done by compression P-Box]
          - XOR with Key:     10010100011100110000111110111001

          - FUNCTION OUTPUT:  10010100011100110000111110111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010110111010111100111111011

       - FUNCTION OUTPUT:          10010100011100110000111110111001

       - Left XOR FUNCTION OUTPUT: 11101110101011100111011001000010

       - Next Round Left 32 Bits:  11101010000101001100110100100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101110101011100111011001000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010000101001100110100100111

       - Right 32 Bits:            11101110101011100111011001000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100010110110001110110011001110111001001001011   [Subkey: 4]
          - Input Half:       11101110101011100111011001000010
          - S-Box Result:     11001100010011001101000001111110   [per every group of 4-bits]
          - Split Into Two:   1100110001001100 [L] 1101000001111110 [R]
          - Swap Halves:      11010000011111101100110001001100
          - Bit Inversion:    00101111100000010011001110110011
          - Compressed Key:   01111100111010110011111010000111   [done by compression P-Box]
          - XOR with Key:     01010011011010100000110100110100

          - FUNCTION OUTPUT:  01010011011010100000110100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010000101001100110100100111

       - FUNCTION OUTPUT:          01010011011010100000110100110100

       - Left XOR FUNCTION OUTPUT: 10111001011111101100000000010011

       - Next Round Left 32 Bits:  11101110101011100111011001000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001011111101100000000010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101110101011100111011001000010

       - Right 32 Bits:            10111001011111101100000000010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101010011100111010010011100010011001100010001101101101   [Subkey: 5]
          - Input Half:       10111001011111101100000000010011
          - S-Box Result:     10000011110111000101111110100001   [per every group of 4-bits]
          - Split Into Two:   1000001111011100 [L] 0101111110100001 [R]
          - Swap Halves:      01011111101000011000001111011100
          - Bit Inversion:    10100000010111100111110000100011
          - Compressed Key:   10101100100011010011010010011110   [done by compression P-Box]
          - XOR with Key:     00001100110100110100100010111101

          - FUNCTION OUTPUT:  00001100110100110100100010111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101110101011100111011001000010

       - FUNCTION OUTPUT:          00001100110100110100100010111101

       - Left XOR FUNCTION OUTPUT: 11100010011111010011111011111111

       - Next Round Left 32 Bits:  10111001011111101100000000010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010011111010011111011111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001011111101100000000010011

       - Right 32 Bits:            11100010011111010011111011111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101011000110001011011000111011001100111011100100100   [Subkey: 6]
          - Input Half:       11100010011111010011111011111111
          - S-Box Result:     11001110110101100001110010111011   [per every group of 4-bits]
          - Split Into Two:   1100111011010110 [L] 0001110010111011 [R]
          - Swap Halves:      00011100101110111100111011010110
          - Bit Inversion:    11100011010001000011000100101001
          - Compressed Key:   01010100000111000111011011011000   [done by compression P-Box]
          - XOR with Key:     10110111010110000100011111110001

          - FUNCTION OUTPUT:  10110111010110000100011111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001011111101100000000010011

       - FUNCTION OUTPUT:          10110111010110000100011111110001

       - Left XOR FUNCTION OUTPUT: 00001110001001101000011111100010

       - Next Round Left 32 Bits:  11100010011111010011111011111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110001001101000011111100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010011111010011111011111111

       - Right 32 Bits:            00001110001001101000011111100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010101001110011101001001110001001100110001000110110   [Subkey: 7]
          - Input Half:       00001110001001101000011111100010
          - S-Box Result:     11111100111000000010110111001110   [per every group of 4-bits]
          - Split Into Two:   1111110011100000 [L] 0010110111001110 [R]
          - Swap Halves:      00101101110011101111110011100000
          - Bit Inversion:    11010010001100010000001100011111
          - Compressed Key:   01100110101110000010011010001001   [done by compression P-Box]
          - XOR with Key:     10110100100010010010010110010110

          - FUNCTION OUTPUT:  10110100100010010010010110010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010011111010011111011111111

       - FUNCTION OUTPUT:          10110100100010010010010110010110

       - Left XOR FUNCTION OUTPUT: 01010110111101000001101101101001

       - Next Round Left 32 Bits:  00001110001001101000011111100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110111101000001101101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110001001101000011111100010

       - Right 32 Bits:            01010110111101000001101101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010101100011000101101100011101100110011101110010   [Subkey: 8]
          - Input Half:       01010110111101000001101101101001
          - S-Box Result:     10010000101101111010100000000011   [per every group of 4-bits]
          - Split Into Two:   1001000010110111 [L] 1010100000000011 [R]
          - Swap Halves:      10101000000000111001000010110111
          - Bit Inversion:    01010111111111000110111101001000
          - Compressed Key:   10101010100110010011011011010001   [done by compression P-Box]
          - XOR with Key:     11111101011001010101100110011001

          - FUNCTION OUTPUT:  11111101011001010101100110011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110001001101000011111100010

       - FUNCTION OUTPUT:          11111101011001010101100110011001

       - Left XOR FUNCTION OUTPUT: 11110011010000111101111001111011

       - Next Round Left 32 Bits:  01010110111101000001101101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011010000111101111001111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110111101000001101101101001

       - Right 32 Bits:            11110011010000111101111001111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101001010100111001110100100111000100110011000100011   [Subkey: 9]
          - Input Half:       11110011010000111101111001111011
          - S-Box Result:     10110001011100010110110011011000   [per every group of 4-bits]
          - Split Into Two:   1011000101110001 [L] 0110110011011000 [R]
          - Swap Halves:      01101100110110001011000101110001
          - Bit Inversion:    10010011001001110100111010001110
          - Compressed Key:   10010101110101011011011011000011   [done by compression P-Box]
          - XOR with Key:     00000110111100101111100001001101

          - FUNCTION OUTPUT:  00000110111100101111100001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110111101000001101101101001

       - FUNCTION OUTPUT:          00000110111100101111100001001101

       - Left XOR FUNCTION OUTPUT: 01010000000001101110001100100100

       - Next Round Left 32 Bits:  11110011010000111101111001111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000000001101110001100100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011010000111101111001111011

       - Right 32 Bits:            01010000000001101110001100100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101010110001100010110110001110110011001110111   [Subkey: 10]
          - Input Half:       01010000000001101110001100100100
          - S-Box Result:     10011111111100001100000111100111   [per every group of 4-bits]
          - Split Into Two:   1001111111110000 [L] 1100000111100111 [R]
          - Swap Halves:      11000001111001111001111111110000
          - Bit Inversion:    00111110000110000110000000001111
          - Compressed Key:   00011110110000101001111011001011   [done by compression P-Box]
          - XOR with Key:     00100000110110101111111011000100

          - FUNCTION OUTPUT:  00100000110110101111111011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011010000111101111001111011

       - FUNCTION OUTPUT:          00100000110110101111111011000100

       - Left XOR FUNCTION OUTPUT: 11010011100110010010000010111111

       - Next Round Left 32 Bits:  01010000000001101110001100100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011100110010010000010111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000000001101110001100100100

       - Right 32 Bits:            11010011100110010010000010111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110110100101010011100111010010011100010011001100010   [Subkey: 11]
          - Input Half:       11010011100110010010000010111111
          - S-Box Result:     01100001001100111110111110001011   [per every group of 4-bits]
          - Split Into Two:   0110000100110011 [L] 1110111110001011 [R]
          - Swap Halves:      11101111100010110110000100110011
          - Bit Inversion:    00010000011101001001111011001100
          - Compressed Key:   01111000100000110001010011000001   [done by compression P-Box]
          - XOR with Key:     01101000111101111000101000001101

          - FUNCTION OUTPUT:  01101000111101111000101000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000000001101110001100100100

       - FUNCTION OUTPUT:          01101000111101111000101000001101

       - Left XOR FUNCTION OUTPUT: 00111000111100010110100100101001

       - Next Round Left 32 Bits:  11010011100110010010000010111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000111100010110100100101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011100110010010000010111111

       - Right 32 Bits:            00111000111100010110100100101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010010010110101011000110001011011000111011001100111   [Subkey: 12]
          - Input Half:       00111000111100010110100100101001
          - S-Box Result:     00010010101110100000001111100011   [per every group of 4-bits]
          - Split Into Two:   0001001010111010 [L] 0000001111100011 [R]
          - Swap Halves:      00000011111000110001001010111010
          - Bit Inversion:    11111100000111001110110101000101
          - Compressed Key:   01100001010100110111001011001011   [done by compression P-Box]
          - XOR with Key:     10011101010011111001111110001110

          - FUNCTION OUTPUT:  10011101010011111001111110001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011100110010010000010111111

       - FUNCTION OUTPUT:          10011101010011111001111110001110

       - Left XOR FUNCTION OUTPUT: 01001110110101101011111100110001

       - Next Round Left 32 Bits:  00111000111100010110100100101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110110101101011111100110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000111100010110100100101001

       - Right 32 Bits:            01001110110101101011111100110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011011010010101001110011101001001110001001100110   [Subkey: 13]
          - Input Half:       01001110110101101011111100110001
          - S-Box Result:     01111100011000001000101100011010   [per every group of 4-bits]
          - Split Into Two:   0111110001100000 [L] 1000101100011010 [R]
          - Swap Halves:      10001011000110100111110001100000
          - Bit Inversion:    01110100111001011000001110011111
          - Compressed Key:   00100111101010111110001110001001   [done by compression P-Box]
          - XOR with Key:     01010011010011100110000000010110

          - FUNCTION OUTPUT:  01010011010011100110000000010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000111100010110100100101001

       - FUNCTION OUTPUT:          01010011010011100110000000010110

       - Left XOR FUNCTION OUTPUT: 01101011101111110000100100111111

       - Next Round Left 32 Bits:  01001110110101101011111100110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011101111110000100100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110110101101011111100110001

       - Right 32 Bits:            01101011101111110000100100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001001011010101100011000101101100011101100110   [Subkey: 14]
          - Input Half:       01101011101111110000100100111111
          - S-Box Result:     00001000100010111111001100011011   [per every group of 4-bits]
          - Split Into Two:   0000100010001011 [L] 1111001100011011 [R]
          - Swap Halves:      11110011000110110000100010001011
          - Bit Inversion:    00001100111001001111011101110100
          - Compressed Key:   01110110100110010100011111011001   [done by compression P-Box]
          - XOR with Key:     01111010011111011011000010101101

          - FUNCTION OUTPUT:  01111010011111011011000010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110110101101011111100110001

       - FUNCTION OUTPUT:          01111010011111011011000010101101

       - Left XOR FUNCTION OUTPUT: 00110100101010110000111110011100

       - Next Round Left 32 Bits:  01101011101111110000100100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100101010110000111110011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011101111110000100100111111

       - Right 32 Bits:            00110100101010110000111110011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101101101001010100111001110100100111000100110   [Subkey: 15]
          - Input Half:       00110100101010110000111110011100
          - S-Box Result:     00010111010010001111101100110101   [per every group of 4-bits]
          - Split Into Two:   0001011101001000 [L] 1111101100110101 [R]
          - Swap Halves:      11111011001101010001011101001000
          - Bit Inversion:    00000100110010101110100010110111
          - Compressed Key:   00101110010101010110011011001001   [done by compression P-Box]
          - XOR with Key:     00101010100111111000111001111110

          - FUNCTION OUTPUT:  00101010100111111000111001111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011101111110000100100111111

       - FUNCTION OUTPUT:          00101010100111111000111001111110

       - Left XOR FUNCTION OUTPUT: 01000001001000001000011101000001

       - Next Round Left 32 Bits:  00110100101010110000111110011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001001000001000011101000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100101010110000111110011100

       - Right 32 Bits:            01000001001000001000011101000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111011100100100101101010110001100010110110001110110   [Subkey: 16]
          - Input Half:       01000001001000001000011101000001
          - S-Box Result:     01111010111011110010110101111010   [per every group of 4-bits]
          - Split Into Two:   0111101011101111 [L] 0010110101111010 [R]
          - Swap Halves:      00101101011110100111101011101111
          - Bit Inversion:    11010010100001011000010100010000
          - Compressed Key:   00111100011010100010101001001001   [done by compression P-Box]
          - XOR with Key:     11101110111011111010111101011001

          - FUNCTION OUTPUT:  11101110111011111010111101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100101010110000111110011100

       - FUNCTION OUTPUT:          11101110111011111010111101011001

       - Left XOR FUNCTION OUTPUT: 11011010010001001010000011000101

       - Next Round Left 32 Bits:  01000001001000001000011101000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011010010001001010000011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101101001000100101000001100010101000001001000001000011101000001

 > Processed Block:     1101101001000100101000001100010101000001001000001000011101000001



Plaintext Block: 2:                                      0001101100001011011000011101111100000101001101110100111101111010

!!!CBC: Previous Ciphertext:                             1101101001000100101000001100010101000001001000001000011101000001

!!!CBC: Current Block XOR with Previous Ciphertext:      1100000101001111110000010001101001000100000101111100100000111011

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001010011111100000100011010

       - Right 32 Bits:            01000100000101111100100000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011101001001110001001100110001000110110110100101010   [Subkey: 1]
          - Input Half:       01000100000101111100100000111011
          - S-Box Result:     01110111101011010101001000011000   [per every group of 4-bits]
          - Split Into Two:   0111011110101101 [L] 0101001000011000 [R]
          - Swap Halves:      01010010000110000111011110101101
          - Bit Inversion:    10101101111001111000100001010010
          - Compressed Key:   01100110110010010010111001010101   [done by compression P-Box]
          - XOR with Key:     11001011001011101010011000000111

          - FUNCTION OUTPUT:  11001011001011101010011000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001010011111100000100011010

       - FUNCTION OUTPUT:          11001011001011101010011000000111

       - Left XOR FUNCTION OUTPUT: 00001010011000010110011100011101

       - Next Round Left 32 Bits:  01000100000101111100100000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010011000010110011100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100000101111100100000111011

       - Right 32 Bits:            00001010011000010110011100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011000101101100011101100110011101110010010010110101   [Subkey: 2]
          - Input Half:       00001010011000010110011100011101
          - S-Box Result:     11110100000010100000110110100110   [per every group of 4-bits]
          - Split Into Two:   1111010000001010 [L] 0000110110100110 [R]
          - Swap Halves:      00001101101001101111010000001010
          - Bit Inversion:    11110010010110010000101111110101
          - Compressed Key:   00101010010010010011110001101010   [done by compression P-Box]
          - XOR with Key:     11011000000100000011011110011111

          - FUNCTION OUTPUT:  11011000000100000011011110011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100000101111100100000111011

       - FUNCTION OUTPUT:          11011000000100000011011110011111

       - Left XOR FUNCTION OUTPUT: 10011100000001111111111110100100

       - Next Round Left 32 Bits:  00001010011000010110011100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011100000001111111111110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010011000010110011100011101

       - Right 32 Bits:            10011100000001111111111110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100111001110100100111000100110011000100011011011010010   [Subkey: 3]
          - Input Half:       10011100000001111111111110100100
          - S-Box Result:     00110101111111011011101101000111   [per every group of 4-bits]
          - Split Into Two:   0011010111111101 [L] 1011101101000111 [R]
          - Swap Halves:      10111011010001110011010111111101
          - Bit Inversion:    01000100101110001100101000000010
          - Compressed Key:   00111101011000010011010011100001   [done by compression P-Box]
          - XOR with Key:     01111001110110011111111011100011

          - FUNCTION OUTPUT:  01111001110110011111111011100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010011000010110011100011101

       - FUNCTION OUTPUT:          01111001110110011111111011100011

       - Left XOR FUNCTION OUTPUT: 01110011101110001001100111111110

       - Next Round Left 32 Bits:  10011100000001111111111110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011101110001001100111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011100000001111111111110100100

       - Right 32 Bits:            01110011101110001001100111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100010110110001110110011001110111001001001011   [Subkey: 4]
          - Input Half:       01110011101110001001100111111110
          - S-Box Result:     11010001100000100011001110111100   [per every group of 4-bits]
          - Split Into Two:   1101000110000010 [L] 0011001110111100 [R]
          - Swap Halves:      00110011101111001101000110000010
          - Bit Inversion:    11001100010000110010111001111101
          - Compressed Key:   01111100111010110011111010000111   [done by compression P-Box]
          - XOR with Key:     10110000101010000001000011111010

          - FUNCTION OUTPUT:  10110000101010000001000011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011100000001111111111110100100

       - FUNCTION OUTPUT:          10110000101010000001000011111010

       - Left XOR FUNCTION OUTPUT: 00101100101011111110111101011110

       - Next Round Left 32 Bits:  01110011101110001001100111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100101011111110111101011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011101110001001100111111110

       - Right 32 Bits:            00101100101011111110111101011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101010011100111010010011100010011001100010001101101101   [Subkey: 5]
          - Input Half:       00101100101011111110111101011110
          - S-Box Result:     11100101010010111100101110011100   [per every group of 4-bits]
          - Split Into Two:   1110010101001011 [L] 1100101110011100 [R]
          - Swap Halves:      11001011100111001110010101001011
          - Bit Inversion:    00110100011000110001101010110100
          - Compressed Key:   10101100100011010011010010011110   [done by compression P-Box]
          - XOR with Key:     10011000111011100010111000101010

          - FUNCTION OUTPUT:  10011000111011100010111000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011101110001001100111111110

       - FUNCTION OUTPUT:          10011000111011100010111000101010

       - Left XOR FUNCTION OUTPUT: 11101011010101101011011111010100

       - Next Round Left 32 Bits:  00101100101011111110111101011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011010101101011011111010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100101011111110111101011110

       - Right 32 Bits:            11101011010101101011011111010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101011000110001011011000111011001100111011100100100   [Subkey: 6]
          - Input Half:       11101011010101101011011111010100
          - S-Box Result:     11001000100100001000110101100111   [per every group of 4-bits]
          - Split Into Two:   1100100010010000 [L] 1000110101100111 [R]
          - Swap Halves:      10001101011001111100100010010000
          - Bit Inversion:    01110010100110000011011101101111
          - Compressed Key:   01010100000111000111011011011000   [done by compression P-Box]
          - XOR with Key:     00100110100001000100000110110111

          - FUNCTION OUTPUT:  00100110100001000100000110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100101011111110111101011110

       - FUNCTION OUTPUT:          00100110100001000100000110110111

       - Left XOR FUNCTION OUTPUT: 00001010001010111010111011101001

       - Next Round Left 32 Bits:  11101011010101101011011111010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010001010111010111011101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011010101101011011111010100

       - Right 32 Bits:            00001010001010111010111011101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010101001110011101001001110001001100110001000110110   [Subkey: 7]
          - Input Half:       00001010001010111010111011101001
          - S-Box Result:     11110100111010000100110011000011   [per every group of 4-bits]
          - Split Into Two:   1111010011101000 [L] 0100110011000011 [R]
          - Swap Halves:      01001100110000111111010011101000
          - Bit Inversion:    10110011001111000000101100010111
          - Compressed Key:   01100110101110000010011010001001   [done by compression P-Box]
          - XOR with Key:     11010101100001000010110110011110

          - FUNCTION OUTPUT:  11010101100001000010110110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011010101101011011111010100

       - FUNCTION OUTPUT:          11010101100001000010110110011110

       - Left XOR FUNCTION OUTPUT: 00111110110100101001101001001010

       - Next Round Left 32 Bits:  00001010001010111010111011101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110110100101001101001001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010001010111010111011101001

       - Right 32 Bits:            00111110110100101001101001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010101100011000101101100011101100110011101110010   [Subkey: 8]
          - Input Half:       00111110110100101001101001001010
          - S-Box Result:     00011100011011100011010001110100   [per every group of 4-bits]
          - Split Into Two:   0001110001101110 [L] 0011010001110100 [R]
          - Swap Halves:      00110100011101000001110001101110
          - Bit Inversion:    11001011100010111110001110010001
          - Compressed Key:   10101010100110010011011011010001   [done by compression P-Box]
          - XOR with Key:     01100001000100101101010101000000

          - FUNCTION OUTPUT:  01100001000100101101010101000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010001010111010111011101001

       - FUNCTION OUTPUT:          01100001000100101101010101000000

       - Left XOR FUNCTION OUTPUT: 01101011001110010111101110101001

       - Next Round Left 32 Bits:  00111110110100101001101001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011001110010111101110101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111110110100101001101001001010

       - Right 32 Bits:            01101011001110010111101110101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101001010100111001110100100111000100110011000100011   [Subkey: 9]
          - Input Half:       01101011001110010111101110101001
          - S-Box Result:     00001000000100111101100001000011   [per every group of 4-bits]
          - Split Into Two:   0000100000010011 [L] 1101100001000011 [R]
          - Swap Halves:      11011000010000110000100000010011
          - Bit Inversion:    00100111101111001111011111101100
          - Compressed Key:   10010101110101011011011011000011   [done by compression P-Box]
          - XOR with Key:     10110010011010010100000100101111

          - FUNCTION OUTPUT:  10110010011010010100000100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111110110100101001101001001010

       - FUNCTION OUTPUT:          10110010011010010100000100101111

       - Left XOR FUNCTION OUTPUT: 10001100101110111101101101100101

       - Next Round Left 32 Bits:  01101011001110010111101110101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001100101110111101101101100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011001110010111101110101001

       - Right 32 Bits:            10001100101110111101101101100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101010110001100010110110001110110011001110111   [Subkey: 10]
          - Input Half:       10001100101110111101101101100101
          - S-Box Result:     00100101100010000110100000001001   [per every group of 4-bits]
          - Split Into Two:   0010010110001000 [L] 0110100000001001 [R]
          - Swap Halves:      01101000000010010010010110001000
          - Bit Inversion:    10010111111101101101101001110111
          - Compressed Key:   00011110110000101001111011001011   [done by compression P-Box]
          - XOR with Key:     10001001001101000100010010111100

          - FUNCTION OUTPUT:  10001001001101000100010010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011001110010111101110101001

       - FUNCTION OUTPUT:          10001001001101000100010010111100

       - Left XOR FUNCTION OUTPUT: 11100010000011010011111100010101

       - Next Round Left 32 Bits:  10001100101110111101101101100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010000011010011111100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001100101110111101101101100101

       - Right 32 Bits:            11100010000011010011111100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110110100101010011100111010010011100010011001100010   [Subkey: 11]
          - Input Half:       11100010000011010011111100010101
          - S-Box Result:     11001110111101100001101110101001   [per every group of 4-bits]
          - Split Into Two:   1100111011110110 [L] 0001101110101001 [R]
          - Swap Halves:      00011011101010011100111011110110
          - Bit Inversion:    11100100010101100011000100001001
          - Compressed Key:   01111000100000110001010011000001   [done by compression P-Box]
          - XOR with Key:     10011100110101010010010111001000

          - FUNCTION OUTPUT:  10011100110101010010010111001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001100101110111101101101100101

       - FUNCTION OUTPUT:          10011100110101010010010111001000

       - Left XOR FUNCTION OUTPUT: 00010000011011101111111010101101

       - Next Round Left 32 Bits:  11100010000011010011111100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000011011101111111010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010000011010011111100010101

       - Right 32 Bits:            00010000011011101111111010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010010010110101011000110001011011000111011001100111   [Subkey: 12]
          - Input Half:       00010000011011101111111010101101
          - S-Box Result:     10101111000011001011110001000110   [per every group of 4-bits]
          - Split Into Two:   1010111100001100 [L] 1011110001000110 [R]
          - Swap Halves:      10111100010001101010111100001100
          - Bit Inversion:    01000011101110010101000011110011
          - Compressed Key:   01100001010100110111001011001011   [done by compression P-Box]
          - XOR with Key:     00100010111010100010001000111000

          - FUNCTION OUTPUT:  00100010111010100010001000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010000011010011111100010101

       - FUNCTION OUTPUT:          00100010111010100010001000111000

       - Left XOR FUNCTION OUTPUT: 11000000111001110001110100101101

       - Next Round Left 32 Bits:  00010000011011101111111010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000111001110001110100101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000011011101111111010101101

       - Right 32 Bits:            11000000111001110001110100101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011011010010101001110011101001001110001001100110   [Subkey: 13]
          - Input Half:       11000000111001110001110100101101
          - S-Box Result:     01011111110011011010011011100110   [per every group of 4-bits]
          - Split Into Two:   0101111111001101 [L] 1010011011100110 [R]
          - Swap Halves:      10100110111001100101111111001101
          - Bit Inversion:    01011001000110011010000000110010
          - Compressed Key:   00100111101010111110001110001001   [done by compression P-Box]
          - XOR with Key:     01111110101100100100001110111011

          - FUNCTION OUTPUT:  01111110101100100100001110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000011011101111111010101101

       - FUNCTION OUTPUT:          01111110101100100100001110111011

       - Left XOR FUNCTION OUTPUT: 01101110110111001011110100010110

       - Next Round Left 32 Bits:  11000000111001110001110100101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110110111001011110100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000111001110001110100101101

       - Right 32 Bits:            01101110110111001011110100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001001011010101100011000101101100011101100110   [Subkey: 14]
          - Input Half:       01101110110111001011110100010110
          - S-Box Result:     00001100011001011000011010100000   [per every group of 4-bits]
          - Split Into Two:   0000110001100101 [L] 1000011010100000 [R]
          - Swap Halves:      10000110101000000000110001100101
          - Bit Inversion:    01111001010111111111001110011010
          - Compressed Key:   01110110100110010100011111011001   [done by compression P-Box]
          - XOR with Key:     00001111110001101011010001000011

          - FUNCTION OUTPUT:  00001111110001101011010001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000111001110001110100101101

       - FUNCTION OUTPUT:          00001111110001101011010001000011

       - Left XOR FUNCTION OUTPUT: 11001111001000011010100101101110

       - Next Round Left 32 Bits:  01101110110111001011110100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111001000011010100101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110110111001011110100010110

       - Right 32 Bits:            11001111001000011010100101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101101101001010100111001110100100111000100110   [Subkey: 15]
          - Input Half:       11001111001000011010100101101110
          - S-Box Result:     01011011111010100100001100001100   [per every group of 4-bits]
          - Split Into Two:   0101101111101010 [L] 0100001100001100 [R]
          - Swap Halves:      01000011000011000101101111101010
          - Bit Inversion:    10111100111100111010010000010101
          - Compressed Key:   00101110010101010110011011001001   [done by compression P-Box]
          - XOR with Key:     10010010101001101100001011011100

          - FUNCTION OUTPUT:  10010010101001101100001011011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110110111001011110100010110

       - FUNCTION OUTPUT:          10010010101001101100001011011100

       - Left XOR FUNCTION OUTPUT: 11111100011110100111111111001010

       - Next Round Left 32 Bits:  11001111001000011010100101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100011110100111111111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111001000011010100101101110

       - Right 32 Bits:            11111100011110100111111111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111011100100100101101010110001100010110110001110110   [Subkey: 16]
          - Input Half:       11111100011110100111111111001010
          - S-Box Result:     10110101110101001101101101010100   [per every group of 4-bits]
          - Split Into Two:   1011010111010100 [L] 1101101101010100 [R]
          - Swap Halves:      11011011010101001011010111010100
          - Bit Inversion:    00100100101010110100101000101011
          - Compressed Key:   00111100011010100010101001001001   [done by compression P-Box]
          - XOR with Key:     00011000110000010110000001100010

          - FUNCTION OUTPUT:  00011000110000010110000001100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111001000011010100101101110

       - FUNCTION OUTPUT:          00011000110000010110000001100010

       - Left XOR FUNCTION OUTPUT: 11010111111000001100100100001100

       - Next Round Left 32 Bits:  11111100011110100111111111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111111000001100100100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101011111100000110010010000110011111100011110100111111111001010

 > Processed Block:     1101011111100000110010010000110011111100011110100111111111001010



Plaintext Block: 3:                                      1001111110001110110101011110010110111110110001110110101000110010

!!!CBC: Previous Ciphertext:                             1101011111100000110010010000110011111100011110100111111111001010

!!!CBC: Current Block XOR with Previous Ciphertext:      0100100001101110000111001110100101000010101111010001010111111000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000011011100001110011101001

       - Right 32 Bits:            01000010101111010001010111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011101001001110001001100110001000110110110100101010   [Subkey: 1]
          - Input Half:       01000010101111010001010111111000
          - S-Box Result:     01111110100001101010100110110010   [per every group of 4-bits]
          - Split Into Two:   0111111010000110 [L] 1010100110110010 [R]
          - Swap Halves:      10101001101100100111111010000110
          - Bit Inversion:    01010110010011011000000101111001
          - Compressed Key:   01100110110010010010111001010101   [done by compression P-Box]
          - XOR with Key:     00110000100001001010111100101100

          - FUNCTION OUTPUT:  00110000100001001010111100101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000011011100001110011101001

       - FUNCTION OUTPUT:          00110000100001001010111100101100

       - Left XOR FUNCTION OUTPUT: 01111000111010101011001111000101

       - Next Round Left 32 Bits:  01000010101111010001010111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000111010101011001111000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010101111010001010111111000

       - Right 32 Bits:            01111000111010101011001111000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011000101101100011101100110011101110010010010110101   [Subkey: 2]
          - Input Half:       01111000111010101011001111000101
          - S-Box Result:     11010010110001001000000101011001   [per every group of 4-bits]
          - Split Into Two:   1101001011000100 [L] 1000000101011001 [R]
          - Swap Halves:      10000001010110011101001011000100
          - Bit Inversion:    01111110101001100010110100111011
          - Compressed Key:   00101010010010010011110001101010   [done by compression P-Box]
          - XOR with Key:     01010100111011110001000101010001

          - FUNCTION OUTPUT:  01010100111011110001000101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010101111010001010111111000

       - FUNCTION OUTPUT:          01010100111011110001000101010001

       - Left XOR FUNCTION OUTPUT: 00010110010100100000010010101001

       - Next Round Left 32 Bits:  01111000111010101011001111000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010110010100100000010010101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000111010101011001111000101

       - Right 32 Bits:            00010110010100100000010010101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100111001110100100111000100110011000100011011011010010   [Subkey: 3]
          - Input Half:       00010110010100100000010010101001
          - S-Box Result:     10100000100111101111011101000011   [per every group of 4-bits]
          - Split Into Two:   1010000010011110 [L] 1111011101000011 [R]
          - Swap Halves:      11110111010000111010000010011110
          - Bit Inversion:    00001000101111000101111101100001
          - Compressed Key:   00111101011000010011010011100001   [done by compression P-Box]
          - XOR with Key:     00110101110111010110101110000000

          - FUNCTION OUTPUT:  00110101110111010110101110000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000111010101011001111000101

       - FUNCTION OUTPUT:          00110101110111010110101110000000

       - Left XOR FUNCTION OUTPUT: 01001101001101111101100001000101

       - Next Round Left 32 Bits:  00010110010100100000010010101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101001101111101100001000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010110010100100000010010101001

       - Right 32 Bits:            01001101001101111101100001000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100010110110001110110011001110111001001001011   [Subkey: 4]
          - Input Half:       01001101001101111101100001000101
          - S-Box Result:     01110110000111010110001001111001   [per every group of 4-bits]
          - Split Into Two:   0111011000011101 [L] 0110001001111001 [R]
          - Swap Halves:      01100010011110010111011000011101
          - Bit Inversion:    10011101100001101000100111100010
          - Compressed Key:   01111100111010110011111010000111   [done by compression P-Box]
          - XOR with Key:     11100001011011011011011101100101

          - FUNCTION OUTPUT:  11100001011011011011011101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010110010100100000010010101001

       - FUNCTION OUTPUT:          11100001011011011011011101100101

       - Left XOR FUNCTION OUTPUT: 11110111001111111011001111001100

       - Next Round Left 32 Bits:  01001101001101111101100001000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111001111111011001111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101001101111101100001000101

       - Right 32 Bits:            11110111001111111011001111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101010011100111010010011100010011001100010001101101101   [Subkey: 5]
          - Input Half:       11110111001111111011001111001100
          - S-Box Result:     10111101000110111000000101010101   [per every group of 4-bits]
          - Split Into Two:   1011110100011011 [L] 1000000101010101 [R]
          - Swap Halves:      10000001010101011011110100011011
          - Bit Inversion:    01111110101010100100001011100100
          - Compressed Key:   10101100100011010011010010011110   [done by compression P-Box]
          - XOR with Key:     11010010001001110111011001111010

          - FUNCTION OUTPUT:  11010010001001110111011001111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101001101111101100001000101

       - FUNCTION OUTPUT:          11010010001001110111011001111010

       - Left XOR FUNCTION OUTPUT: 10011111000100001010111000111111

       - Next Round Left 32 Bits:  11110111001111111011001111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111000100001010111000111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111001111111011001111001100

       - Right 32 Bits:            10011111000100001010111000111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101011000110001011011000111011001100111011100100100   [Subkey: 6]
          - Input Half:       10011111000100001010111000111111
          - S-Box Result:     00111011101011110100110000011011   [per every group of 4-bits]
          - Split Into Two:   0011101110101111 [L] 0100110000011011 [R]
          - Swap Halves:      01001100000110110011101110101111
          - Bit Inversion:    10110011111001001100010001010000
          - Compressed Key:   01010100000111000111011011011000   [done by compression P-Box]
          - XOR with Key:     11100111111110001011001010001000

          - FUNCTION OUTPUT:  11100111111110001011001010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111001111111011001111001100

       - FUNCTION OUTPUT:          11100111111110001011001010001000

       - Left XOR FUNCTION OUTPUT: 00010000110001110000000101000100

       - Next Round Left 32 Bits:  10011111000100001010111000111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000110001110000000101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111000100001010111000111111

       - Right 32 Bits:            00010000110001110000000101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010101001110011101001001110001001100110001000110110   [Subkey: 7]
          - Input Half:       00010000110001110000000101000100
          - S-Box Result:     10101111010111011111101001110111   [per every group of 4-bits]
          - Split Into Two:   1010111101011101 [L] 1111101001110111 [R]
          - Swap Halves:      11111010011101111010111101011101
          - Bit Inversion:    00000101100010000101000010100010
          - Compressed Key:   01100110101110000010011010001001   [done by compression P-Box]
          - XOR with Key:     01100011001100000111011000101011

          - FUNCTION OUTPUT:  01100011001100000111011000101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111000100001010111000111111

       - FUNCTION OUTPUT:          01100011001100000111011000101011

       - Left XOR FUNCTION OUTPUT: 11111100001000001101100000010100

       - Next Round Left 32 Bits:  00010000110001110000000101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100001000001101100000010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000110001110000000101000100

       - Right 32 Bits:            11111100001000001101100000010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010101100011000101101100011101100110011101110010   [Subkey: 8]
          - Input Half:       11111100001000001101100000010100
          - S-Box Result:     10110101111011110110001010100111   [per every group of 4-bits]
          - Split Into Two:   1011010111101111 [L] 0110001010100111 [R]
          - Swap Halves:      01100010101001111011010111101111
          - Bit Inversion:    10011101010110000100101000010000
          - Compressed Key:   10101010100110010011011011010001   [done by compression P-Box]
          - XOR with Key:     00110111110000010111110011000001

          - FUNCTION OUTPUT:  00110111110000010111110011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000110001110000000101000100

       - FUNCTION OUTPUT:          00110111110000010111110011000001

       - Left XOR FUNCTION OUTPUT: 00100111000001100111110110000101

       - Next Round Left 32 Bits:  11111100001000001101100000010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111000001100111110110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100001000001101100000010100

       - Right 32 Bits:            00100111000001100111110110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101001010100111001110100100111000100110011000100011   [Subkey: 9]
          - Input Half:       00100111000001100111110110000101
          - S-Box Result:     11101101111100001101011000101001   [per every group of 4-bits]
          - Split Into Two:   1110110111110000 [L] 1101011000101001 [R]
          - Swap Halves:      11010110001010011110110111110000
          - Bit Inversion:    00101001110101100001001000001111
          - Compressed Key:   10010101110101011011011011000011   [done by compression P-Box]
          - XOR with Key:     10111100000000111010010011001100

          - FUNCTION OUTPUT:  10111100000000111010010011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100001000001101100000010100

       - FUNCTION OUTPUT:          10111100000000111010010011001100

       - Left XOR FUNCTION OUTPUT: 01000000001000110111110011011000

       - Next Round Left 32 Bits:  00100111000001100111110110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000001000110111110011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111000001100111110110000101

       - Right 32 Bits:            01000000001000110111110011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101010110001100010110110001110110011001110111   [Subkey: 10]
          - Input Half:       01000000001000110111110011011000
          - S-Box Result:     01111111111000011101010101100010   [per every group of 4-bits]
          - Split Into Two:   0111111111100001 [L] 1101010101100010 [R]
          - Swap Halves:      11010101011000100111111111100001
          - Bit Inversion:    00101010100111011000000000011110
          - Compressed Key:   00011110110000101001111011001011   [done by compression P-Box]
          - XOR with Key:     00110100010111110001111011010101

          - FUNCTION OUTPUT:  00110100010111110001111011010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111000001100111110110000101

       - FUNCTION OUTPUT:          00110100010111110001111011010101

       - Left XOR FUNCTION OUTPUT: 00010011010110010110001101010000

       - Next Round Left 32 Bits:  01000000001000110111110011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011010110010110001101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000001000110111110011011000

       - Right 32 Bits:            00010011010110010110001101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110110100101010011100111010010011100010011001100010   [Subkey: 11]
          - Input Half:       00010011010110010110001101010000
          - S-Box Result:     10100001100100110000000110011111   [per every group of 4-bits]
          - Split Into Two:   1010000110010011 [L] 0000000110011111 [R]
          - Swap Halves:      00000001100111111010000110010011
          - Bit Inversion:    11111110011000000101111001101100
          - Compressed Key:   01111000100000110001010011000001   [done by compression P-Box]
          - XOR with Key:     10000110111000110100101010101101

          - FUNCTION OUTPUT:  10000110111000110100101010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000001000110111110011011000

       - FUNCTION OUTPUT:          10000110111000110100101010101101

       - Left XOR FUNCTION OUTPUT: 11000110110000000011011001110101

       - Next Round Left 32 Bits:  00010011010110010110001101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110110000000011011001110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011010110010110001101010000

       - Right 32 Bits:            11000110110000000011011001110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010010010110101011000110001011011000111011001100111   [Subkey: 12]
          - Input Half:       11000110110000000011011001110101
          - S-Box Result:     01010000010111110001000011011001   [per every group of 4-bits]
          - Split Into Two:   0101000001011111 [L] 0001000011011001 [R]
          - Swap Halves:      00010000110110010101000001011111
          - Bit Inversion:    11101111001001101010111110100000
          - Compressed Key:   01100001010100110111001011001011   [done by compression P-Box]
          - XOR with Key:     10001110011101011101110101101011

          - FUNCTION OUTPUT:  10001110011101011101110101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011010110010110001101010000

       - FUNCTION OUTPUT:          10001110011101011101110101101011

       - Left XOR FUNCTION OUTPUT: 10011101001011001011111000111011

       - Next Round Left 32 Bits:  11000110110000000011011001110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101001011001011111000111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110110000000011011001110101

       - Right 32 Bits:            10011101001011001011111000111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011011010010101001110011101001001110001001100110   [Subkey: 13]
          - Input Half:       10011101001011001011111000111011
          - S-Box Result:     00110110111001011000110000011000   [per every group of 4-bits]
          - Split Into Two:   0011011011100101 [L] 1000110000011000 [R]
          - Swap Halves:      10001100000110000011011011100101
          - Bit Inversion:    01110011111001111100100100011010
          - Compressed Key:   00100111101010111110001110001001   [done by compression P-Box]
          - XOR with Key:     01010100010011000010101010010011

          - FUNCTION OUTPUT:  01010100010011000010101010010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110110000000011011001110101

       - FUNCTION OUTPUT:          01010100010011000010101010010011

       - Left XOR FUNCTION OUTPUT: 10010010100011000001110011100110

       - Next Round Left 32 Bits:  10011101001011001011111000111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010100011000001110011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101001011001011111000111011

       - Right 32 Bits:            10010010100011000001110011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001001011010101100011000101101100011101100110   [Subkey: 14]
          - Input Half:       10010010100011000001110011100110
          - S-Box Result:     00111110001001011010010111000000   [per every group of 4-bits]
          - Split Into Two:   0011111000100101 [L] 1010010111000000 [R]
          - Swap Halves:      10100101110000000011111000100101
          - Bit Inversion:    01011010001111111100000111011010
          - Compressed Key:   01110110100110010100011111011001   [done by compression P-Box]
          - XOR with Key:     00101100101001101000011000000011

          - FUNCTION OUTPUT:  00101100101001101000011000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101001011001011111000111011

       - FUNCTION OUTPUT:          00101100101001101000011000000011

       - Left XOR FUNCTION OUTPUT: 10110001100010100011100000111000

       - Next Round Left 32 Bits:  10010010100011000001110011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110001100010100011100000111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010100011000001110011100110

       - Right 32 Bits:            10110001100010100011100000111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101101101001010100111001110100100111000100110   [Subkey: 15]
          - Input Half:       10110001100010100011100000111000
          - S-Box Result:     10001010001001000001001000010010   [per every group of 4-bits]
          - Split Into Two:   1000101000100100 [L] 0001001000010010 [R]
          - Swap Halves:      00010010000100101000101000100100
          - Bit Inversion:    11101101111011010111010111011011
          - Compressed Key:   00101110010101010110011011001001   [done by compression P-Box]
          - XOR with Key:     11000011101110000001001100010010

          - FUNCTION OUTPUT:  11000011101110000001001100010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010100011000001110011100110

       - FUNCTION OUTPUT:          11000011101110000001001100010010

       - Left XOR FUNCTION OUTPUT: 01010001001101000000111111110100

       - Next Round Left 32 Bits:  10110001100010100011100000111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001001101000000111111110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110001100010100011100000111000

       - Right 32 Bits:            01010001001101000000111111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111011100100100101101010110001100010110110001110110   [Subkey: 16]
          - Input Half:       01010001001101000000111111110100
          - S-Box Result:     10011010000101111111101110110111   [per every group of 4-bits]
          - Split Into Two:   1001101000010111 [L] 1111101110110111 [R]
          - Swap Halves:      11111011101101111001101000010111
          - Bit Inversion:    00000100010010000110010111101000
          - Compressed Key:   00111100011010100010101001001001   [done by compression P-Box]
          - XOR with Key:     00111000001000100100111110100001

          - FUNCTION OUTPUT:  00111000001000100100111110100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110001100010100011100000111000

       - FUNCTION OUTPUT:          00111000001000100100111110100001

       - Left XOR FUNCTION OUTPUT: 10001001101010000111011110011001

       - Next Round Left 32 Bits:  01010001001101000000111111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001001101010000111011110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1000100110101000011101111001100101010001001101000000111111110100

 > Processed Block:     1000100110101000011101111001100101010001001101000000111111110100



Plaintext Block: 4:                                      0110101110111101101001000110010000110111011010001001011101000000

!!!CBC: Previous Ciphertext:                             1000100110101000011101111001100101010001001101000000111111110100

!!!CBC: Current Block XOR with Previous Ciphertext:      1110001000010101110100111111110101100110010111001001100010110100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010000101011101001111111101

       - Right 32 Bits:            01100110010111001001100010110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011101001001110001001100110001000110110110100101010   [Subkey: 1]
          - Input Half:       01100110010111001001100010110100
          - S-Box Result:     00000000100101010011001010000111   [per every group of 4-bits]
          - Split Into Two:   0000000010010101 [L] 0011001010000111 [R]
          - Swap Halves:      00110010100001110000000010010101
          - Bit Inversion:    11001101011110001111111101101010
          - Compressed Key:   01100110110010010010111001010101   [done by compression P-Box]
          - XOR with Key:     10101011101100011101000100111111

          - FUNCTION OUTPUT:  10101011101100011101000100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010000101011101001111111101

       - FUNCTION OUTPUT:          10101011101100011101000100111111

       - Left XOR FUNCTION OUTPUT: 01001001101001000000001011000010

       - Next Round Left 32 Bits:  01100110010111001001100010110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001101001000000001011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110010111001001100010110100

       - Right 32 Bits:            01001001101001000000001011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011000101101100011101100110011101110010010010110101   [Subkey: 2]
          - Input Half:       01001001101001000000001011000010
          - S-Box Result:     01110011010001111111111001011110   [per every group of 4-bits]
          - Split Into Two:   0111001101000111 [L] 1111111001011110 [R]
          - Swap Halves:      11111110010111100111001101000111
          - Bit Inversion:    00000001101000011000110010111000
          - Compressed Key:   00101010010010010011110001101010   [done by compression P-Box]
          - XOR with Key:     00101011111010001011000011010010

          - FUNCTION OUTPUT:  00101011111010001011000011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110010111001001100010110100

       - FUNCTION OUTPUT:          00101011111010001011000011010010

       - Left XOR FUNCTION OUTPUT: 01001101101101000010100001100110

       - Next Round Left 32 Bits:  01001001101001000000001011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101101101000010100001100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001101001000000001011000010

       - Right 32 Bits:            01001101101101000010100001100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100111001110100100111000100110011000100011011011010010   [Subkey: 3]
          - Input Half:       01001101101101000010100001100110
          - S-Box Result:     01110110100001111110001000000000   [per every group of 4-bits]
          - Split Into Two:   0111011010000111 [L] 1110001000000000 [R]
          - Swap Halves:      11100010000000000111011010000111
          - Bit Inversion:    00011101111111111000100101111000
          - Compressed Key:   00111101011000010011010011100001   [done by compression P-Box]
          - XOR with Key:     00100000100111101011110110011001

          - FUNCTION OUTPUT:  00100000100111101011110110011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001101001000000001011000010

       - FUNCTION OUTPUT:          00100000100111101011110110011001

       - Left XOR FUNCTION OUTPUT: 01101001001110101011111101011011

       - Next Round Left 32 Bits:  01001101101101000010100001100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001001110101011111101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101101101000010100001100110

       - Right 32 Bits:            01101001001110101011111101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100010110110001110110011001110111001001001011   [Subkey: 4]
          - Input Half:       01101001001110101011111101011011
          - S-Box Result:     00000011000101001000101110011000   [per every group of 4-bits]
          - Split Into Two:   0000001100010100 [L] 1000101110011000 [R]
          - Swap Halves:      10001011100110000000001100010100
          - Bit Inversion:    01110100011001111111110011101011
          - Compressed Key:   01111100111010110011111010000111   [done by compression P-Box]
          - XOR with Key:     00001000100011001100001001101100

          - FUNCTION OUTPUT:  00001000100011001100001001101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101101101000010100001100110

       - FUNCTION OUTPUT:          00001000100011001100001001101100

       - Left XOR FUNCTION OUTPUT: 01000101001110001110101000001010

       - Next Round Left 32 Bits:  01101001001110101011111101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101001110001110101000001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001001110101011111101011011

       - Right 32 Bits:            01000101001110001110101000001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101010011100111010010011100010011001100010001101101101   [Subkey: 5]
          - Input Half:       01000101001110001110101000001010
          - S-Box Result:     01111001000100101100010011110100   [per every group of 4-bits]
          - Split Into Two:   0111100100010010 [L] 1100010011110100 [R]
          - Swap Halves:      11000100111101000111100100010010
          - Bit Inversion:    00111011000010111000011011101101
          - Compressed Key:   10101100100011010011010010011110   [done by compression P-Box]
          - XOR with Key:     10010111100001101011001001110011

          - FUNCTION OUTPUT:  10010111100001101011001001110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001001110101011111101011011

       - FUNCTION OUTPUT:          10010111100001101011001001110011

       - Left XOR FUNCTION OUTPUT: 11111110101111000000110100101000

       - Next Round Left 32 Bits:  01000101001110001110101000001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111110101111000000110100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101001110001110101000001010

       - Right 32 Bits:            11111110101111000000110100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101011000110001011011000111011001100111011100100100   [Subkey: 6]
          - Input Half:       11111110101111000000110100101000
          - S-Box Result:     10111100100001011111011011100010   [per every group of 4-bits]
          - Split Into Two:   1011110010000101 [L] 1111011011100010 [R]
          - Swap Halves:      11110110111000101011110010000101
          - Bit Inversion:    00001001000111010100001101111010
          - Compressed Key:   01010100000111000111011011011000   [done by compression P-Box]
          - XOR with Key:     01011101000000010011010110100010

          - FUNCTION OUTPUT:  01011101000000010011010110100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101001110001110101000001010

       - FUNCTION OUTPUT:          01011101000000010011010110100010

       - Left XOR FUNCTION OUTPUT: 00011000001110011101111110101000

       - Next Round Left 32 Bits:  11111110101111000000110100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000001110011101111110101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111110101111000000110100101000

       - Right 32 Bits:            00011000001110011101111110101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010101001110011101001001110001001100110001000110110   [Subkey: 7]
          - Input Half:       00011000001110011101111110101000
          - S-Box Result:     10100010000100110110101101000010   [per every group of 4-bits]
          - Split Into Two:   1010001000010011 [L] 0110101101000010 [R]
          - Swap Halves:      01101011010000101010001000010011
          - Bit Inversion:    10010100101111010101110111101100
          - Compressed Key:   01100110101110000010011010001001   [done by compression P-Box]
          - XOR with Key:     11110010000001010111101101100101

          - FUNCTION OUTPUT:  11110010000001010111101101100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111110101111000000110100101000

       - FUNCTION OUTPUT:          11110010000001010111101101100101

       - Left XOR FUNCTION OUTPUT: 00001100101110010111011001001101

       - Next Round Left 32 Bits:  00011000001110011101111110101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100101110010111011001001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000001110011101111110101000

       - Right 32 Bits:            00001100101110010111011001001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010101100011000101101100011101100110011101110010   [Subkey: 8]
          - Input Half:       00001100101110010111011001001101
          - S-Box Result:     11110101100000111101000001110110   [per every group of 4-bits]
          - Split Into Two:   1111010110000011 [L] 1101000001110110 [R]
          - Swap Halves:      11010000011101101111010110000011
          - Bit Inversion:    00101111100010010000101001111100
          - Compressed Key:   10101010100110010011011011010001   [done by compression P-Box]
          - XOR with Key:     10000101000100000011110010101101

          - FUNCTION OUTPUT:  10000101000100000011110010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000001110011101111110101000

       - FUNCTION OUTPUT:          10000101000100000011110010101101

       - Left XOR FUNCTION OUTPUT: 10011101001010011110001100000101

       - Next Round Left 32 Bits:  00001100101110010111011001001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101001010011110001100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100101110010111011001001101

       - Right 32 Bits:            10011101001010011110001100000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101001010100111001110100100111000100110011000100011   [Subkey: 9]
          - Input Half:       10011101001010011110001100000101
          - S-Box Result:     00110110111000111100000111111001   [per every group of 4-bits]
          - Split Into Two:   0011011011100011 [L] 1100000111111001 [R]
          - Swap Halves:      11000001111110010011011011100011
          - Bit Inversion:    00111110000001101100100100011100
          - Compressed Key:   10010101110101011011011011000011   [done by compression P-Box]
          - XOR with Key:     10101011110100110111111111011111

          - FUNCTION OUTPUT:  10101011110100110111111111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100101110010111011001001101

       - FUNCTION OUTPUT:          10101011110100110111111111011111

       - Left XOR FUNCTION OUTPUT: 10100111011010100000100110010010

       - Next Round Left 32 Bits:  10011101001010011110001100000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111011010100000100110010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101001010011110001100000101

       - Right 32 Bits:            10100111011010100000100110010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101010110001100010110110001110110011001110111   [Subkey: 10]
          - Input Half:       10100111011010100000100110010010
          - S-Box Result:     01001101000001001111001100111110   [per every group of 4-bits]
          - Split Into Two:   0100110100000100 [L] 1111001100111110 [R]
          - Swap Halves:      11110011001111100100110100000100
          - Bit Inversion:    00001100110000011011001011111011
          - Compressed Key:   00011110110000101001111011001011   [done by compression P-Box]
          - XOR with Key:     00010010000000110010110000110000

          - FUNCTION OUTPUT:  00010010000000110010110000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101001010011110001100000101

       - FUNCTION OUTPUT:          00010010000000110010110000110000

       - Left XOR FUNCTION OUTPUT: 10001111001010101100111100110101

       - Next Round Left 32 Bits:  10100111011010100000100110010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111001010101100111100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111011010100000100110010010

       - Right 32 Bits:            10001111001010101100111100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110110100101010011100111010010011100010011001100010   [Subkey: 11]
          - Input Half:       10001111001010101100111100110101
          - S-Box Result:     00101011111001000101101100011001   [per every group of 4-bits]
          - Split Into Two:   0010101111100100 [L] 0101101100011001 [R]
          - Swap Halves:      01011011000110010010101111100100
          - Bit Inversion:    10100100111001101101010000011011
          - Compressed Key:   01111000100000110001010011000001   [done by compression P-Box]
          - XOR with Key:     11011100011001011100000011011010

          - FUNCTION OUTPUT:  11011100011001011100000011011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111011010100000100110010010

       - FUNCTION OUTPUT:          11011100011001011100000011011010

       - Left XOR FUNCTION OUTPUT: 01111011000011111100100101001000

       - Next Round Left 32 Bits:  10001111001010101100111100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011000011111100100101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111001010101100111100110101

       - Right 32 Bits:            01111011000011111100100101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010010010110101011000110001011011000111011001100111   [Subkey: 12]
          - Input Half:       01111011000011111100100101001000
          - S-Box Result:     11011000111110110101001101110010   [per every group of 4-bits]
          - Split Into Two:   1101100011111011 [L] 0101001101110010 [R]
          - Swap Halves:      01010011011100101101100011111011
          - Bit Inversion:    10101100100011010010011100000100
          - Compressed Key:   01100001010100110111001011001011   [done by compression P-Box]
          - XOR with Key:     11001101110111100101010111001111

          - FUNCTION OUTPUT:  11001101110111100101010111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111001010101100111100110101

       - FUNCTION OUTPUT:          11001101110111100101010111001111

       - Left XOR FUNCTION OUTPUT: 01000010111101001001101011111010

       - Next Round Left 32 Bits:  01111011000011111100100101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010111101001001101011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011000011111100100101001000

       - Right 32 Bits:            01000010111101001001101011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011011010010101001110011101001001110001001100110   [Subkey: 13]
          - Input Half:       01000010111101001001101011111010
          - S-Box Result:     01111110101101110011010010110100   [per every group of 4-bits]
          - Split Into Two:   0111111010110111 [L] 0011010010110100 [R]
          - Swap Halves:      00110100101101000111111010110111
          - Bit Inversion:    11001011010010111000000101001000
          - Compressed Key:   00100111101010111110001110001001   [done by compression P-Box]
          - XOR with Key:     11101100111000000110001011000001

          - FUNCTION OUTPUT:  11101100111000000110001011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011000011111100100101001000

       - FUNCTION OUTPUT:          11101100111000000110001011000001

       - Left XOR FUNCTION OUTPUT: 10010111111011111010101110001001

       - Next Round Left 32 Bits:  01000010111101001001101011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111111011111010101110001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010111101001001101011111010

       - Right 32 Bits:            10010111111011111010101110001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001001011010101100011000101101100011101100110   [Subkey: 14]
          - Input Half:       10010111111011111010101110001001
          - S-Box Result:     00111101110010110100100000100011   [per every group of 4-bits]
          - Split Into Two:   0011110111001011 [L] 0100100000100011 [R]
          - Swap Halves:      01001000001000110011110111001011
          - Bit Inversion:    10110111110111001100001000110100
          - Compressed Key:   01110110100110010100011111011001   [done by compression P-Box]
          - XOR with Key:     11000001010001011000010111101101

          - FUNCTION OUTPUT:  11000001010001011000010111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010111101001001101011111010

       - FUNCTION OUTPUT:          11000001010001011000010111101101

       - Left XOR FUNCTION OUTPUT: 10000011101100010001111100010111

       - Next Round Left 32 Bits:  10010111111011111010101110001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011101100010001111100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111111011111010101110001001

       - Right 32 Bits:            10000011101100010001111100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101101101001010100111001110100100111000100110   [Subkey: 15]
          - Input Half:       10000011101100010001111100010111
          - S-Box Result:     00100001100010101010101110101101   [per every group of 4-bits]
          - Split Into Two:   0010000110001010 [L] 1010101110101101 [R]
          - Swap Halves:      10101011101011010010000110001010
          - Bit Inversion:    01010100010100101101111001110101
          - Compressed Key:   00101110010101010110011011001001   [done by compression P-Box]
          - XOR with Key:     01111010000001111011100010111100

          - FUNCTION OUTPUT:  01111010000001111011100010111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111111011111010101110001001

       - FUNCTION OUTPUT:          01111010000001111011100010111100

       - Left XOR FUNCTION OUTPUT: 11101101111010000001001100110101

       - Next Round Left 32 Bits:  10000011101100010001111100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101111010000001001100110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011101100010001111100010111

       - Right 32 Bits:            11101101111010000001001100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111011100100100101101010110001100010110110001110110   [Subkey: 16]
          - Input Half:       11101101111010000001001100110101
          - S-Box Result:     11000110110000101010000100011001   [per every group of 4-bits]
          - Split Into Two:   1100011011000010 [L] 1010000100011001 [R]
          - Swap Halves:      10100001000110011100011011000010
          - Bit Inversion:    01011110111001100011100100111101
          - Compressed Key:   00111100011010100010101001001001   [done by compression P-Box]
          - XOR with Key:     01100010100011000001001101110100

          - FUNCTION OUTPUT:  01100010100011000001001101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011101100010001111100010111

       - FUNCTION OUTPUT:          01100010100011000001001101110100

       - Left XOR FUNCTION OUTPUT: 11100001001111010000110001100011

       - Next Round Left 32 Bits:  11101101111010000001001100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001001111010000110001100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110000100111101000011000110001111101101111010000001001100110101

 > Processed Block:     1110000100111101000011000110001111101101111010000001001100110101



Plaintext Block: 5:                                      0110011100101100000000010100011111001101010101011010000011110011

!!!CBC: Previous Ciphertext:                             1110000100111101000011000110001111101101111010000001001100110101

!!!CBC: Current Block XOR with Previous Ciphertext:      1000011000010001000011010010010000100000101111011011001111000110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110000100010000110100100100

       - Right 32 Bits:            00100000101111011011001111000110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011101001001110001001100110001000110110110100101010   [Subkey: 1]
          - Input Half:       00100000101111011011001111000110
          - S-Box Result:     11101111100001101000000101010000   [per every group of 4-bits]
          - Split Into Two:   1110111110000110 [L] 1000000101010000 [R]
          - Swap Halves:      10000001010100001110111110000110
          - Bit Inversion:    01111110101011110001000001111001
          - Compressed Key:   01100110110010010010111001010101   [done by compression P-Box]
          - XOR with Key:     00011000011001100011111000101100

          - FUNCTION OUTPUT:  00011000011001100011111000101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110000100010000110100100100

       - FUNCTION OUTPUT:          00011000011001100011111000101100

       - Left XOR FUNCTION OUTPUT: 10011110011101110011001100001000

       - Next Round Left 32 Bits:  00100000101111011011001111000110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110011101110011001100001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100000101111011011001111000110

       - Right 32 Bits:            10011110011101110011001100001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011000101101100011101100110011101110010010010110101   [Subkey: 2]
          - Input Half:       10011110011101110011001100001000
          - S-Box Result:     00111100110111010001000111110010   [per every group of 4-bits]
          - Split Into Two:   0011110011011101 [L] 0001000111110010 [R]
          - Swap Halves:      00010001111100100011110011011101
          - Bit Inversion:    11101110000011011100001100100010
          - Compressed Key:   00101010010010010011110001101010   [done by compression P-Box]
          - XOR with Key:     11000100010001001111111101001000

          - FUNCTION OUTPUT:  11000100010001001111111101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100000101111011011001111000110

       - FUNCTION OUTPUT:          11000100010001001111111101001000

       - Left XOR FUNCTION OUTPUT: 11100100111110010100110010001110

       - Next Round Left 32 Bits:  10011110011101110011001100001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100111110010100110010001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110011101110011001100001000

       - Right 32 Bits:            11100100111110010100110010001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100111001110100100111000100110011000100011011011010010   [Subkey: 3]
          - Input Half:       11100100111110010100110010001110
          - S-Box Result:     11000111101100110111010100101100   [per every group of 4-bits]
          - Split Into Two:   1100011110110011 [L] 0111010100101100 [R]
          - Swap Halves:      01110101001011001100011110110011
          - Bit Inversion:    10001010110100110011100001001100
          - Compressed Key:   00111101011000010011010011100001   [done by compression P-Box]
          - XOR with Key:     10110111101100100000110010101101

          - FUNCTION OUTPUT:  10110111101100100000110010101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110011101110011001100001000

       - FUNCTION OUTPUT:          10110111101100100000110010101101

       - Left XOR FUNCTION OUTPUT: 00101001110001010011111110100101

       - Next Round Left 32 Bits:  11100100111110010100110010001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001110001010011111110100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100111110010100110010001110

       - Right 32 Bits:            00101001110001010011111110100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100010110110001110110011001110111001001001011   [Subkey: 4]
          - Input Half:       00101001110001010011111110100101
          - S-Box Result:     11100011010110010001101101001001   [per every group of 4-bits]
          - Split Into Two:   1110001101011001 [L] 0001101101001001 [R]
          - Swap Halves:      00011011010010011110001101011001
          - Bit Inversion:    11100100101101100001110010100110
          - Compressed Key:   01111100111010110011111010000111   [done by compression P-Box]
          - XOR with Key:     10011000010111010010001000100001

          - FUNCTION OUTPUT:  10011000010111010010001000100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100111110010100110010001110

       - FUNCTION OUTPUT:          10011000010111010010001000100001

       - Left XOR FUNCTION OUTPUT: 01111100101001000110111010101111

       - Next Round Left 32 Bits:  00101001110001010011111110100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100101001000110111010101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001110001010011111110100101

       - Right 32 Bits:            01111100101001000110111010101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101010011100111010010011100010011001100010001101101101   [Subkey: 5]
          - Input Half:       01111100101001000110111010101111
          - S-Box Result:     11010101010001110000110001001011   [per every group of 4-bits]
          - Split Into Two:   1101010101000111 [L] 0000110001001011 [R]
          - Swap Halves:      00001100010010111101010101000111
          - Bit Inversion:    11110011101101000010101010111000
          - Compressed Key:   10101100100011010011010010011110   [done by compression P-Box]
          - XOR with Key:     01011111001110010001111000100110

          - FUNCTION OUTPUT:  01011111001110010001111000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001110001010011111110100101

       - FUNCTION OUTPUT:          01011111001110010001111000100110

       - Left XOR FUNCTION OUTPUT: 01110110111111000010000110000011

       - Next Round Left 32 Bits:  01111100101001000110111010101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110111111000010000110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100101001000110111010101111

       - Right 32 Bits:            01110110111111000010000110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101011000110001011011000111011001100111011100100100   [Subkey: 6]
          - Input Half:       01110110111111000010000110000011
          - S-Box Result:     11010000101101011110101000100001   [per every group of 4-bits]
          - Split Into Two:   1101000010110101 [L] 1110101000100001 [R]
          - Swap Halves:      11101010001000011101000010110101
          - Bit Inversion:    00010101110111100010111101001010
          - Compressed Key:   01010100000111000111011011011000   [done by compression P-Box]
          - XOR with Key:     01000001110000100101100110010010

          - FUNCTION OUTPUT:  01000001110000100101100110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100101001000110111010101111

       - FUNCTION OUTPUT:          01000001110000100101100110010010

       - Left XOR FUNCTION OUTPUT: 00111101011001100011011100111101

       - Next Round Left 32 Bits:  01110110111111000010000110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101011001100011011100111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110111111000010000110000011

       - Right 32 Bits:            00111101011001100011011100111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010101001110011101001001110001001100110001000110110   [Subkey: 7]
          - Input Half:       00111101011001100011011100111101
          - S-Box Result:     00010110000000000001110100010110   [per every group of 4-bits]
          - Split Into Two:   0001011000000000 [L] 0001110100010110 [R]
          - Swap Halves:      00011101000101100001011000000000
          - Bit Inversion:    11100010111010011110100111111111
          - Compressed Key:   01100110101110000010011010001001   [done by compression P-Box]
          - XOR with Key:     10000100010100011100111101110110

          - FUNCTION OUTPUT:  10000100010100011100111101110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110111111000010000110000011

       - FUNCTION OUTPUT:          10000100010100011100111101110110

       - Left XOR FUNCTION OUTPUT: 11110010101011011110111011110101

       - Next Round Left 32 Bits:  00111101011001100011011100111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110010101011011110111011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101011001100011011100111101

       - Right 32 Bits:            11110010101011011110111011110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010101100011000101101100011101100110011101110010   [Subkey: 8]
          - Input Half:       11110010101011011110111011110101
          - S-Box Result:     10111110010001101100110010111001   [per every group of 4-bits]
          - Split Into Two:   1011111001000110 [L] 1100110010111001 [R]
          - Swap Halves:      11001100101110011011111001000110
          - Bit Inversion:    00110011010001100100000110111001
          - Compressed Key:   10101010100110010011011011010001   [done by compression P-Box]
          - XOR with Key:     10011001110111110111011101101000

          - FUNCTION OUTPUT:  10011001110111110111011101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101011001100011011100111101

       - FUNCTION OUTPUT:          10011001110111110111011101101000

       - Left XOR FUNCTION OUTPUT: 10100100101110010100000001010101

       - Next Round Left 32 Bits:  11110010101011011110111011110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100100101110010100000001010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110010101011011110111011110101

       - Right 32 Bits:            10100100101110010100000001010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101001010100111001110100100111000100110011000100011   [Subkey: 9]
          - Input Half:       10100100101110010100000001010101
          - S-Box Result:     01000111100000110111111110011001   [per every group of 4-bits]
          - Split Into Two:   0100011110000011 [L] 0111111110011001 [R]
          - Swap Halves:      01111111100110010100011110000011
          - Bit Inversion:    10000000011001101011100001111100
          - Compressed Key:   10010101110101011011011011000011   [done by compression P-Box]
          - XOR with Key:     00010101101100110000111010111111

          - FUNCTION OUTPUT:  00010101101100110000111010111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110010101011011110111011110101

       - FUNCTION OUTPUT:          00010101101100110000111010111111

       - Left XOR FUNCTION OUTPUT: 11100111000111101110000001001010

       - Next Round Left 32 Bits:  10100100101110010100000001010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111000111101110000001001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100101110010100000001010101

       - Right 32 Bits:            11100111000111101110000001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101010110001100010110110001110110011001110111   [Subkey: 10]
          - Input Half:       11100111000111101110000001001010
          - S-Box Result:     11001101101011001100111101110100   [per every group of 4-bits]
          - Split Into Two:   1100110110101100 [L] 1100111101110100 [R]
          - Swap Halves:      11001111011101001100110110101100
          - Bit Inversion:    00110000100010110011001001010011
          - Compressed Key:   00011110110000101001111011001011   [done by compression P-Box]
          - XOR with Key:     00101110010010011010110010011000

          - FUNCTION OUTPUT:  00101110010010011010110010011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100101110010100000001010101

       - FUNCTION OUTPUT:          00101110010010011010110010011000

       - Left XOR FUNCTION OUTPUT: 10001010111100001110110011001101

       - Next Round Left 32 Bits:  11100111000111101110000001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010111100001110110011001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111000111101110000001001010

       - Right 32 Bits:            10001010111100001110110011001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110110100101010011100111010010011100010011001100010   [Subkey: 11]
          - Input Half:       10001010111100001110110011001101
          - S-Box Result:     00100100101111111100010101010110   [per every group of 4-bits]
          - Split Into Two:   0010010010111111 [L] 1100010101010110 [R]
          - Swap Halves:      11000101010101100010010010111111
          - Bit Inversion:    00111010101010011101101101000000
          - Compressed Key:   01111000100000110001010011000001   [done by compression P-Box]
          - XOR with Key:     01000010001010101100111110000001

          - FUNCTION OUTPUT:  01000010001010101100111110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111000111101110000001001010

       - FUNCTION OUTPUT:          01000010001010101100111110000001

       - Left XOR FUNCTION OUTPUT: 10100101001101000010111111001011

       - Next Round Left 32 Bits:  10001010111100001110110011001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101001101000010111111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010111100001110110011001101

       - Right 32 Bits:            10100101001101000010111111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010010010110101011000110001011011000111011001100111   [Subkey: 12]
          - Input Half:       10100101001101000010111111001011
          - S-Box Result:     01001001000101111110101101011000   [per every group of 4-bits]
          - Split Into Two:   0100100100010111 [L] 1110101101011000 [R]
          - Swap Halves:      11101011010110000100100100010111
          - Bit Inversion:    00010100101001111011011011101000
          - Compressed Key:   01100001010100110111001011001011   [done by compression P-Box]
          - XOR with Key:     01110101111101001100010000100011

          - FUNCTION OUTPUT:  01110101111101001100010000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010111100001110110011001101

       - FUNCTION OUTPUT:          01110101111101001100010000100011

       - Left XOR FUNCTION OUTPUT: 11111111000001000010100011101110

       - Next Round Left 32 Bits:  10100101001101000010111111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111000001000010100011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101001101000010111111001011

       - Right 32 Bits:            11111111000001000010100011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011011010010101001110011101001001110001001100110   [Subkey: 13]
          - Input Half:       11111111000001000010100011101110
          - S-Box Result:     10111011111101111110001011001100   [per every group of 4-bits]
          - Split Into Two:   1011101111110111 [L] 1110001011001100 [R]
          - Swap Halves:      11100010110011001011101111110111
          - Bit Inversion:    00011101001100110100010000001000
          - Compressed Key:   00100111101010111110001110001001   [done by compression P-Box]
          - XOR with Key:     00111010100110001010011110000001

          - FUNCTION OUTPUT:  00111010100110001010011110000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101001101000010111111001011

       - FUNCTION OUTPUT:          00111010100110001010011110000001

       - Left XOR FUNCTION OUTPUT: 10011111101011001000100001001010

       - Next Round Left 32 Bits:  11111111000001000010100011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011111101011001000100001001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111000001000010100011101110

       - Right 32 Bits:            10011111101011001000100001001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001001011010101100011000101101100011101100110   [Subkey: 14]
          - Input Half:       10011111101011001000100001001010
          - S-Box Result:     00111011010001010010001001110100   [per every group of 4-bits]
          - Split Into Two:   0011101101000101 [L] 0010001001110100 [R]
          - Swap Halves:      00100010011101000011101101000101
          - Bit Inversion:    11011101100010111100010010111010
          - Compressed Key:   01110110100110010100011111011001   [done by compression P-Box]
          - XOR with Key:     10101011000100101000001101100011

          - FUNCTION OUTPUT:  10101011000100101000001101100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111000001000010100011101110

       - FUNCTION OUTPUT:          10101011000100101000001101100011

       - Left XOR FUNCTION OUTPUT: 01010100000101101010101110001101

       - Next Round Left 32 Bits:  10011111101011001000100001001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100000101101010101110001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011111101011001000100001001010

       - Right 32 Bits:            01010100000101101010101110001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101101101001010100111001110100100111000100110   [Subkey: 15]
          - Input Half:       01010100000101101010101110001101
          - S-Box Result:     10010111101000000100100000100110   [per every group of 4-bits]
          - Split Into Two:   1001011110100000 [L] 0100100000100110 [R]
          - Swap Halves:      01001000001001101001011110100000
          - Bit Inversion:    10110111110110010110100001011111
          - Compressed Key:   00101110010101010110011011001001   [done by compression P-Box]
          - XOR with Key:     10011001100011000000111010010110

          - FUNCTION OUTPUT:  10011001100011000000111010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011111101011001000100001001010

       - FUNCTION OUTPUT:          10011001100011000000111010010110

       - Left XOR FUNCTION OUTPUT: 00000110001000001000011011011100

       - Next Round Left 32 Bits:  01010100000101101010101110001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110001000001000011011011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100000101101010101110001101

       - Right 32 Bits:            00000110001000001000011011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111011100100100101101010110001100010110110001110110   [Subkey: 16]
          - Input Half:       00000110001000001000011011011100
          - S-Box Result:     11110000111011110010000001100101   [per every group of 4-bits]
          - Split Into Two:   1111000011101111 [L] 0010000001100101 [R]
          - Swap Halves:      00100000011001011111000011101111
          - Bit Inversion:    11011111100110100000111100010000
          - Compressed Key:   00111100011010100010101001001001   [done by compression P-Box]
          - XOR with Key:     11100011111100000010010101011001

          - FUNCTION OUTPUT:  11100011111100000010010101011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100000101101010101110001101

       - FUNCTION OUTPUT:          11100011111100000010010101011001

       - Left XOR FUNCTION OUTPUT: 10110111111001101000111011010100

       - Next Round Left 32 Bits:  00000110001000001000011011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111111001101000111011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1011011111100110100011101101010000000110001000001000011011011100

 > Processed Block:     1011011111100110100011101101010000000110001000001000011011011100



Plaintext Block: 6:                                      1110110010110101100101011100110100111001001101011001100011101001

!!!CBC: Previous Ciphertext:                             1011011111100110100011101101010000000110001000001000011011011100

!!!CBC: Current Block XOR with Previous Ciphertext:      0101101101010011000110110001100100111111000101010001111000110101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011010100110001101100011001

       - Right 32 Bits:            00111111000101010001111000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011101001001110001001100110001000110110110100101010   [Subkey: 1]
          - Input Half:       00111111000101010001111000110101
          - S-Box Result:     00011011101010011010110000011001   [per every group of 4-bits]
          - Split Into Two:   0001101110101001 [L] 1010110000011001 [R]
          - Swap Halves:      10101100000110010001101110101001
          - Bit Inversion:    01010011111001101110010001010110
          - Compressed Key:   01100110110010010010111001010101   [done by compression P-Box]
          - XOR with Key:     00110101001011111100101000000011

          - FUNCTION OUTPUT:  00110101001011111100101000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011010100110001101100011001

       - FUNCTION OUTPUT:          00110101001011111100101000000011

       - Left XOR FUNCTION OUTPUT: 01101110011111001101000100011010

       - Next Round Left 32 Bits:  00111111000101010001111000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110011111001101000100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111000101010001111000110101

       - Right 32 Bits:            01101110011111001101000100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100011000101101100011101100110011101110010010010110101   [Subkey: 2]
          - Input Half:       01101110011111001101000100011010
          - S-Box Result:     00001100110101010110101010100100   [per every group of 4-bits]
          - Split Into Two:   0000110011010101 [L] 0110101010100100 [R]
          - Swap Halves:      01101010101001000000110011010101
          - Bit Inversion:    10010101010110111111001100101010
          - Compressed Key:   00101010010010010011110001101010   [done by compression P-Box]
          - XOR with Key:     10111111000100101100111101000000

          - FUNCTION OUTPUT:  10111111000100101100111101000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111000101010001111000110101

       - FUNCTION OUTPUT:          10111111000100101100111101000000

       - Left XOR FUNCTION OUTPUT: 10000000000001111101000101110101

       - Next Round Left 32 Bits:  01101110011111001101000100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000000000001111101000101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110011111001101000100011010

       - Right 32 Bits:            10000000000001111101000101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10100111001110100100111000100110011000100011011011010010   [Subkey: 3]
          - Input Half:       10000000000001111101000101110101
          - S-Box Result:     00101111111111010110101011011001   [per every group of 4-bits]
          - Split Into Two:   0010111111111101 [L] 0110101011011001 [R]
          - Swap Halves:      01101010110110010010111111111101
          - Bit Inversion:    10010101001001101101000000000010
          - Compressed Key:   00111101011000010011010011100001   [done by compression P-Box]
          - XOR with Key:     10101000010001111110010011100011

          - FUNCTION OUTPUT:  10101000010001111110010011100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110011111001101000100011010

       - FUNCTION OUTPUT:          10101000010001111110010011100011

       - Left XOR FUNCTION OUTPUT: 11000110001110110011010111111001

       - Next Round Left 32 Bits:  10000000000001111101000101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110001110110011010111111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000000000001111101000101110101

       - Right 32 Bits:            11000110001110110011010111111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110001100010110110001110110011001110111001001001011   [Subkey: 4]
          - Input Half:       11000110001110110011010111111001
          - S-Box Result:     01010000000110000001100110110011   [per every group of 4-bits]
          - Split Into Two:   0101000000011000 [L] 0001100110110011 [R]
          - Swap Halves:      00011001101100110101000000011000
          - Bit Inversion:    11100110010011001010111111100111
          - Compressed Key:   01111100111010110011111010000111   [done by compression P-Box]
          - XOR with Key:     10011010101001111001000101100000

          - FUNCTION OUTPUT:  10011010101001111001000101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000000000001111101000101110101

       - FUNCTION OUTPUT:          10011010101001111001000101100000

       - Left XOR FUNCTION OUTPUT: 00011010101000000100000000010101

       - Next Round Left 32 Bits:  11000110001110110011010111111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011010101000000100000000010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110001110110011010111111001

       - Right 32 Bits:            00011010101000000100000000010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00101010011100111010010011100010011001100010001101101101   [Subkey: 5]
          - Input Half:       00011010101000000100000000010101
          - S-Box Result:     10100100010011110111111110101001   [per every group of 4-bits]
          - Split Into Two:   1010010001001111 [L] 0111111110101001 [R]
          - Swap Halves:      01111111101010011010010001001111
          - Bit Inversion:    10000000010101100101101110110000
          - Compressed Key:   10101100100011010011010010011110   [done by compression P-Box]
          - XOR with Key:     00101100110110110110111100101110

          - FUNCTION OUTPUT:  00101100110110110110111100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110001110110011010111111001

       - FUNCTION OUTPUT:          00101100110110110110111100101110

       - Left XOR FUNCTION OUTPUT: 11101010111000000101101011010111

       - Next Round Left 32 Bits:  00011010101000000100000000010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010111000000101101011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011010101000000100000000010101

       - Right 32 Bits:            11101010111000000101101011010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110101011000110001011011000111011001100111011100100100   [Subkey: 6]
          - Input Half:       11101010111000000101101011010111
          - S-Box Result:     11000100110011111001010001101101   [per every group of 4-bits]
          - Split Into Two:   1100010011001111 [L] 1001010001101101 [R]
          - Swap Halves:      10010100011011011100010011001111
          - Bit Inversion:    01101011100100100011101100110000
          - Compressed Key:   01010100000111000111011011011000   [done by compression P-Box]
          - XOR with Key:     00111111100011100100110111101000

          - FUNCTION OUTPUT:  00111111100011100100110111101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011010101000000100000000010101

       - FUNCTION OUTPUT:          00111111100011100100110111101000

       - Left XOR FUNCTION OUTPUT: 00100101001011100000110111111101

       - Next Round Left 32 Bits:  11101010111000000101101011010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100101001011100000110111111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010111000000101101011010111

       - Right 32 Bits:            00100101001011100000110111111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010010101001110011101001001110001001100110001000110110   [Subkey: 7]
          - Input Half:       00100101001011100000110111111101
          - S-Box Result:     11101001111011001111011010110110   [per every group of 4-bits]
          - Split Into Two:   1110100111101100 [L] 1111011010110110 [R]
          - Swap Halves:      11110110101101101110100111101100
          - Bit Inversion:    00001001010010010001011000010011
          - Compressed Key:   01100110101110000010011010001001   [done by compression P-Box]
          - XOR with Key:     01101111111100010011000010011010

          - FUNCTION OUTPUT:  01101111111100010011000010011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010111000000101101011010111

       - FUNCTION OUTPUT:          01101111111100010011000010011010

       - Left XOR FUNCTION OUTPUT: 10000101000100010110101001001101

       - Next Round Left 32 Bits:  00100101001011100000110111111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000101000100010110101001001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100101001011100000110111111101

       - Right 32 Bits:            10000101000100010110101001001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001011010101100011000101101100011101100110011101110010   [Subkey: 8]
          - Input Half:       10000101000100010110101001001101
          - S-Box Result:     00101001101010100000010001110110   [per every group of 4-bits]
          - Split Into Two:   0010100110101010 [L] 0000010001110110 [R]
          - Swap Halves:      00000100011101100010100110101010
          - Bit Inversion:    11111011100010011101011001010101
          - Compressed Key:   10101010100110010011011011010001   [done by compression P-Box]
          - XOR with Key:     01010001000100001110000010000100

          - FUNCTION OUTPUT:  01010001000100001110000010000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100101001011100000110111111101

       - FUNCTION OUTPUT:          01010001000100001110000010000100

       - Left XOR FUNCTION OUTPUT: 01110100001111101110110101111001

       - Next Round Left 32 Bits:  10000101000100010110101001001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100001111101110110101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000101000100010110101001001101

       - Right 32 Bits:            01110100001111101110110101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101101001010100111001110100100111000100110011000100011   [Subkey: 9]
          - Input Half:       01110100001111101110110101111001
          - S-Box Result:     11010111000111001100011011010011   [per every group of 4-bits]
          - Split Into Two:   1101011100011100 [L] 1100011011010011 [R]
          - Swap Halves:      11000110110100111101011100011100
          - Bit Inversion:    00111001001011000010100011100011
          - Compressed Key:   10010101110101011011011011000011   [done by compression P-Box]
          - XOR with Key:     10101100111110011001111000100000

          - FUNCTION OUTPUT:  10101100111110011001111000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000101000100010110101001001101

       - FUNCTION OUTPUT:          10101100111110011001111000100000

       - Left XOR FUNCTION OUTPUT: 00101001111010001111010001101101

       - Next Round Left 32 Bits:  01110100001111101110110101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001111010001111010001101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100001111101110110101111001

       - Right 32 Bits:            00101001111010001111010001101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100100101101010110001100010110110001110110011001110111   [Subkey: 10]
          - Input Half:       00101001111010001111010001101101
          - S-Box Result:     11100011110000101011011100000110   [per every group of 4-bits]
          - Split Into Two:   1110001111000010 [L] 1011011100000110 [R]
          - Swap Halves:      10110111000001101110001111000010
          - Bit Inversion:    01001000111110010001110000111101
          - Compressed Key:   00011110110000101001111011001011   [done by compression P-Box]
          - XOR with Key:     01010110001110111000001011110110

          - FUNCTION OUTPUT:  01010110001110111000001011110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100001111101110110101111001

       - FUNCTION OUTPUT:          01010110001110111000001011110110

       - Left XOR FUNCTION OUTPUT: 00100010000001010110111110001111

       - Next Round Left 32 Bits:  00101001111010001111010001101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010000001010110111110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001111010001111010001101101

       - Right 32 Bits:            00100010000001010110111110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110110100101010011100111010010011100010011001100010   [Subkey: 11]
          - Input Half:       00100010000001010110111110001111
          - S-Box Result:     11101110111110010000101100101011   [per every group of 4-bits]
          - Split Into Two:   1110111011111001 [L] 0000101100101011 [R]
          - Swap Halves:      00001011001010111110111011111001
          - Bit Inversion:    11110100110101000001000100000110
          - Compressed Key:   01111000100000110001010011000001   [done by compression P-Box]
          - XOR with Key:     10001100010101110000010111000111

          - FUNCTION OUTPUT:  10001100010101110000010111000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001111010001111010001101101

       - FUNCTION OUTPUT:          10001100010101110000010111000111

       - Left XOR FUNCTION OUTPUT: 10100101101111111111000110101010

       - Next Round Left 32 Bits:  00100010000001010110111110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100101101111111111000110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010000001010110111110001111

       - Right 32 Bits:            10100101101111111111000110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110010010010110101011000110001011011000111011001100111   [Subkey: 12]
          - Input Half:       10100101101111111111000110101010
          - S-Box Result:     01001001100010111011101001000100   [per every group of 4-bits]
          - Split Into Two:   0100100110001011 [L] 1011101001000100 [R]
          - Swap Halves:      10111010010001000100100110001011
          - Bit Inversion:    01000101101110111011011001110100
          - Compressed Key:   01100001010100110111001011001011   [done by compression P-Box]
          - XOR with Key:     00100100111010001100010010111111

          - FUNCTION OUTPUT:  00100100111010001100010010111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010000001010110111110001111

       - FUNCTION OUTPUT:          00100100111010001100010010111111

       - Left XOR FUNCTION OUTPUT: 00000110111011011010101100110000

       - Next Round Left 32 Bits:  10100101101111111111000110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000110111011011010101100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100101101111111111000110101010

       - Right 32 Bits:            00000110111011011010101100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011011010010101001110011101001001110001001100110   [Subkey: 13]
          - Input Half:       00000110111011011010101100110000
          - S-Box Result:     11110000110001100100100000011111   [per every group of 4-bits]
          - Split Into Two:   1111000011000110 [L] 0100100000011111 [R]
          - Swap Halves:      01001000000111111111000011000110
          - Bit Inversion:    10110111111000000000111100111001
          - Compressed Key:   00100111101010111110001110001001   [done by compression P-Box]
          - XOR with Key:     10010000010010111110110010110000

          - FUNCTION OUTPUT:  10010000010010111110110010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100101101111111111000110101010

       - FUNCTION OUTPUT:          10010000010010111110110010110000

       - Left XOR FUNCTION OUTPUT: 00110101111101000001110100011010

       - Next Round Left 32 Bits:  00000110111011011010101100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110101111101000001110100011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110111011011010101100110000

       - Right 32 Bits:            00110101111101000001110100011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110111001001001011010101100011000101101100011101100110   [Subkey: 14]
          - Input Half:       00110101111101000001110100011010
          - S-Box Result:     00011001101101111010011010100100   [per every group of 4-bits]
          - Split Into Two:   0001100110110111 [L] 1010011010100100 [R]
          - Swap Halves:      10100110101001000001100110110111
          - Bit Inversion:    01011001010110111110011001001000
          - Compressed Key:   01110110100110010100011111011001   [done by compression P-Box]
          - XOR with Key:     00101111110000101010000110010001

          - FUNCTION OUTPUT:  00101111110000101010000110010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110111011011010101100110000

       - FUNCTION OUTPUT:          00101111110000101010000110010001

       - Left XOR FUNCTION OUTPUT: 00101001001011110000101010100001

       - Next Round Left 32 Bits:  00110101111101000001110100011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001001011110000101010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110101111101000001110100011010

       - Right 32 Bits:            00101001001011110000101010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100010001101101101001010100111001110100100111000100110   [Subkey: 15]
          - Input Half:       00101001001011110000101010100001
          - S-Box Result:     11100011111010111111010001001010   [per every group of 4-bits]
          - Split Into Two:   1110001111101011 [L] 1111010001001010 [R]
          - Swap Halves:      11110100010010101110001111101011
          - Bit Inversion:    00001011101101010001110000010100
          - Compressed Key:   00101110010101010110011011001001   [done by compression P-Box]
          - XOR with Key:     00100101111000000111101011011101

          - FUNCTION OUTPUT:  00100101111000000111101011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110101111101000001110100011010

       - FUNCTION OUTPUT:          00100101111000000111101011011101

       - Left XOR FUNCTION OUTPUT: 00010000000101000110011111000111

       - Next Round Left 32 Bits:  00101001001011110000101010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000000101000110011111000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001001011110000101010100001

       - Right 32 Bits:            00010000000101000110011111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100111011100100100101101010110001100010110110001110110   [Subkey: 16]
          - Input Half:       00010000000101000110011111000111
          - S-Box Result:     10101111101001110000110101011101   [per every group of 4-bits]
          - Split Into Two:   1010111110100111 [L] 0000110101011101 [R]
          - Swap Halves:      00001101010111011010111110100111
          - Bit Inversion:    11110010101000100101000001011000
          - Compressed Key:   00111100011010100010101001001001   [done by compression P-Box]
          - XOR with Key:     11001110110010000111101000010001

          - FUNCTION OUTPUT:  11001110110010000111101000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001001011110000101010100001

       - FUNCTION OUTPUT:          11001110110010000111101000010001

       - Left XOR FUNCTION OUTPUT: 11100111111001110111000010110000

       - Next Round Left 32 Bits:  00010000000101000110011111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111111001110111000010110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110011111100111011100001011000000010000000101000110011111000111

 > Processed Block:     1110011111100111011100001011000000010000000101000110011111000111


FINAL PROCESSED DATA BLOCKS: 1101101001000100101000001100010101000001001000001000011101000001,1101011111100000110010010000110011111100011110100111111111001010,1000100110101000011101111001100101010001001101000000111111110100,1110000100111101000011000110001111101101111010000001001100110101,1011011111100110100011101101010000000110001000001000011011011100,1110011111100111011100001011000000010000000101000110011111000111,

BLOCKS IN ASCII:             ÚD ÅA ?A×àÉüzÊ?¨w?Q4ôá=cíè5·æ?Ô ?Üççp°gÇ

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: NoFQLkp
In Binary:  01001110011011110100011001010001010011000110101101110000

Subkeys:    Key i = Key (i - 1) [Shifted left by 1 and inverted]

Subkey 1  : 11101100011001000010111001101011101011001110010100100011
Subkey 2  : 00000100111001101111010001100101000101001100011010110111
Subkey 3  : 00111110110001100100001011100110101110101100111001010010
Subkey 4  : 01110000010011100110111101000110010100010100110001101011
Subkey 5  : 00100011111011000110010000101110011010111010110011100101
Subkey 6  : 10110111000001001110011011110100011001010001010011000110
Subkey 7  : 01010010001111101100011001000010111001101011101011001110
Subkey 8  : 01101011011100000100111001101111010001100101000101001100
Subkey 9  : 11100101001000111110110001100100001011100110101110101100
Subkey 10 : 11000110101101110000010011100110111101000110010100010100
Subkey 11 : 11001110010100100011111011000110010000101110011010111010
Subkey 12 : 01001100011010110111000001001110011011110100011001010001
Subkey 13 : 10101100111001010010001111101100011001000010111001101011
Subkey 14 : 00010100110001101011011100000100111001101111010001100101
Subkey 15 : 10111010110011100101001000111110110001100100001011100110
Subkey 16 : 01010001010011000110101101110000010011100110111101000110

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ÚD ÅA ?A×àÉüzÊ?¨w?Q4ôá=cíè5·æ?Ô ?Üççp°gÇ

Data padded with spaces : ÚD ÅA ?A×àÉüzÊ?¨w?Q4ôá=cíè5·æ?Ô ?Üççp°gÇ[Padded with '0' spaces]

Data in ASCII           : 218,68,160,197,65,32,135,65,215,224,201,12,252,122,127,202,137,168,119,153,81,52,15,244,225,61,12,99,237,232,19,53,183,230,142,212,6,32,134,220,231,231,112,176,16,20,103,199,

Data in Binary          : 11011010,01000100,10100000,11000101,01000001,00100000,10000111,01000001,11010111,11100000,11001001,00001100,11111100,01111010,01111111,11001010,10001001,10101000,01110111,10011001,01010001,00110100,00001111,11110100,11100001,00111101,00001100,01100011,11101101,11101000,00010011,00110101,10110111,11100110,10001110,11010100,00000110,00100000,10000110,11011100,11100111,11100111,01110000,10110000,00010000,00010100,01100111,11000111,

Data in 64-bit Blocks   : 1101101001000100101000001100010101000001001000001000011101000001,1101011111100000110010010000110011111100011110100111111111001010,1000100110101000011101111001100101010001001101000000111111110100,1110000100111101000011000110001111101101111010000001001100110101,1011011111100110100011101101010000000110001000001000011011011100,1110011111100111011100001011000000010000000101000110011111000111,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0101101001001110011010000110011101110100011000010110010100111001)

Ciphertext Block 1:                                      1101101001000100101000001100010101000001001000001000011101000001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011010010001001010000011000101

       - Right 32 Bits:            01000001001000001000011101000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011000110101101110000010011100110111101000110   [Subkey: 16]
          - Input Half:       01000001001000001000011101000001
          - S-Box Result:     01111010111011110010110101111010   [per every group of 4-bits]
          - Split Into Two:   0111101011101111 [L] 0010110101111010 [R]
          - Swap Halves:      00101101011110100111101011101111
          - Bit Inversion:    11010010100001011000010100010000
          - Compressed Key:   01000011111010110001011011011001   [done by compression P-Box]
          - XOR with Key:     10010001011011101001001111001001

          - FUNCTION OUTPUT:  10010001011011101001001111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011010010001001010000011000101

       - FUNCTION OUTPUT:          10010001011011101001001111001001

       - Left XOR FUNCTION OUTPUT: 01001011001010100011001100001100

       - Next Round Left 32 Bits:  01000001001000001000011101000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011001010100011001100001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001001000001000011101000001

       - Right 32 Bits:            01001011001010100011001100001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010110011100101001000111110110001100100001011100110   [Subkey: 15]
          - Input Half:       01001011001010100011001100001100
          - S-Box Result:     01111000111001000001000111110101   [per every group of 4-bits]
          - Split Into Two:   0111100011100100 [L] 0001000111110101 [R]
          - Swap Halves:      00010001111101010111100011100100
          - Bit Inversion:    11101110000010101000011100011011
          - Compressed Key:   11100011010100111001011010101001   [done by compression P-Box]
          - XOR with Key:     00001101010110010001000110110010

          - FUNCTION OUTPUT:  00001101010110010001000110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001001000001000011101000001

       - FUNCTION OUTPUT:          00001101010110010001000110110010

       - Left XOR FUNCTION OUTPUT: 01001100011110011001011011110011

       - Next Round Left 32 Bits:  01001011001010100011001100001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100011110011001011011110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011001010100011001100001100

       - Right 32 Bits:            01001100011110011001011011110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110001101011011100000100111001101111010001100101   [Subkey: 14]
          - Input Half:       01001100011110011001011011110011
          - S-Box Result:     01110101110100110011000010110001   [per every group of 4-bits]
          - Split Into Two:   0111010111010011 [L] 0011000010110001 [R]
          - Swap Halves:      00110000101100010111010111010011
          - Bit Inversion:    11001111010011101000101000101100
          - Compressed Key:   01010010100100001011011101001010   [done by compression P-Box]
          - XOR with Key:     10011101110111100011110101100110

          - FUNCTION OUTPUT:  10011101110111100011110101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011001010100011001100001100

       - FUNCTION OUTPUT:          10011101110111100011110101100110

       - Left XOR FUNCTION OUTPUT: 11010110111101000000111001101010

       - Next Round Left 32 Bits:  01001100011110011001011011110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010110111101000000111001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100011110011001011011110011

       - Right 32 Bits:            11010110111101000000111001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100111001010010001111101100011001000010111001101011   [Subkey: 13]
          - Input Half:       11010110111101000000111001101010
          - S-Box Result:     01100000101101111111110000000100   [per every group of 4-bits]
          - Split Into Two:   0110000010110111 [L] 1111110000000100 [R]
          - Swap Halves:      11111100000001000110000010110111
          - Bit Inversion:    00000011111110111001111101001000
          - Compressed Key:   10010110100011010011000011000111   [done by compression P-Box]
          - XOR with Key:     10010101011101101010111110001111

          - FUNCTION OUTPUT:  10010101011101101010111110001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100011110011001011011110011

       - FUNCTION OUTPUT:          10010101011101101010111110001111

       - Left XOR FUNCTION OUTPUT: 11011001000011110011100101111100

       - Next Round Left 32 Bits:  11010110111101000000111001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001000011110011100101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010110111101000000111001101010

       - Right 32 Bits:            11011001000011110011100101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100011010110111000001001110011011110100011001010001   [Subkey: 12]
          - Input Half:       11011001000011110011100101111100
          - S-Box Result:     01100011111110110001001111010101   [per every group of 4-bits]
          - Split Into Two:   0110001111111011 [L] 0001001111010101 [R]
          - Swap Halves:      00010011110101010110001111111011
          - Bit Inversion:    11101100001010101001110000000100
          - Compressed Key:   10010101110110000011111011000010   [done by compression P-Box]
          - XOR with Key:     01111001111100101010001011000110

          - FUNCTION OUTPUT:  01111001111100101010001011000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010110111101000000111001101010

       - FUNCTION OUTPUT:          01111001111100101010001011000110

       - Left XOR FUNCTION OUTPUT: 10101111000001101010110010101100

       - Next Round Left 32 Bits:  11011001000011110011100101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101111000001101010110010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001000011110011100101111100

       - Right 32 Bits:            10101111000001101010110010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110010100100011111011000110010000101110011010111010   [Subkey: 11]
          - Input Half:       10101111000001101010110010101100
          - S-Box Result:     01001011111100000100010101000101   [per every group of 4-bits]
          - Split Into Two:   0100101111110000 [L] 0100010101000101 [R]
          - Swap Halves:      01000101010001010100101111110000
          - Bit Inversion:    10111010101110101011010000001111
          - Compressed Key:   10111000101111000001011111100101   [done by compression P-Box]
          - XOR with Key:     00000010000001101010001111101010

          - FUNCTION OUTPUT:  00000010000001101010001111101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001000011110011100101111100

       - FUNCTION OUTPUT:          00000010000001101010001111101010

       - Left XOR FUNCTION OUTPUT: 11011011000010011001101010010110

       - Next Round Left 32 Bits:  10101111000001101010110010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011000010011001101010010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101111000001101010110010101100

       - Right 32 Bits:            11011011000010011001101010010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000110101101110000010011100110111101000110010100010100   [Subkey: 10]
          - Input Half:       11011011000010011001101010010110
          - S-Box Result:     01101000111100110011010000110000   [per every group of 4-bits]
          - Split Into Two:   0110100011110011 [L] 0011010000110000 [R]
          - Swap Halves:      00110100001100000110100011110011
          - Bit Inversion:    11001011110011111001011100001100
          - Compressed Key:   00111110000011011011001001011000   [done by compression P-Box]
          - XOR with Key:     11110101110000100010010101010100

          - FUNCTION OUTPUT:  11110101110000100010010101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101111000001101010110010101100

       - FUNCTION OUTPUT:          11110101110000100010010101010100

       - Left XOR FUNCTION OUTPUT: 01011010110001001000100111111000

       - Next Round Left 32 Bits:  11011011000010011001101010010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011010110001001000100111111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011000010011001101010010110

       - Right 32 Bits:            01011010110001001000100111111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101001000111110110001100100001011100110101110101100   [Subkey: 9]
          - Input Half:       01011010110001001000100111111000
          - S-Box Result:     10010100010101110010001110110010   [per every group of 4-bits]
          - Split Into Two:   1001010001010111 [L] 0010001110110010 [R]
          - Swap Halves:      00100011101100101001010001010111
          - Bit Inversion:    11011100010011010110101110101000
          - Compressed Key:   00010100111010010010011010111100   [done by compression P-Box]
          - XOR with Key:     11001000101001000100110100010100

          - FUNCTION OUTPUT:  11001000101001000100110100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011000010011001101010010110

       - FUNCTION OUTPUT:          11001000101001000100110100010100

       - Left XOR FUNCTION OUTPUT: 00010011101011011101011110000010

       - Next Round Left 32 Bits:  01011010110001001000100111111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010011101011011101011110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010110001001000100111111000

       - Right 32 Bits:            00010011101011011101011110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011011100000100111001101111010001100101000101001100   [Subkey: 8]
          - Input Half:       00010011101011011101011110000010
          - S-Box Result:     10100001010001100110110100101110   [per every group of 4-bits]
          - Split Into Two:   1010000101000110 [L] 0110110100101110 [R]
          - Swap Halves:      01101101001011101010000101000110
          - Bit Inversion:    10010010110100010101111010111001
          - Compressed Key:   10101100011010010101011000011100   [done by compression P-Box]
          - XOR with Key:     00111110101110000000100010100101

          - FUNCTION OUTPUT:  00111110101110000000100010100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010110001001000100111111000

       - FUNCTION OUTPUT:          00111110101110000000100010100101

       - Left XOR FUNCTION OUTPUT: 01100100011111001000000101011101

       - Next Round Left 32 Bits:  00010011101011011101011110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100011111001000000101011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010011101011011101011110000010

       - Right 32 Bits:            01100100011111001000000101011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010001111101100011001000010111001101011101011001110   [Subkey: 7]
          - Input Half:       01100100011111001000000101011101
          - S-Box Result:     00000111110101010010101010010110   [per every group of 4-bits]
          - Split Into Two:   0000011111010101 [L] 0010101010010110 [R]
          - Swap Halves:      00101010100101100000011111010101
          - Bit Inversion:    11010101011010011111100000101010
          - Compressed Key:   01101111010010001011010110101101   [done by compression P-Box]
          - XOR with Key:     10111010001000010100110110000111

          - FUNCTION OUTPUT:  10111010001000010100110110000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010011101011011101011110000010

       - FUNCTION OUTPUT:          10111010001000010100110110000111

       - Left XOR FUNCTION OUTPUT: 10101001100011001001101000000101

       - Next Round Left 32 Bits:  01100100011111001000000101011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101001100011001001101000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100011111001000000101011101

       - Right 32 Bits:            10101001100011001001101000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110111000001001110011011110100011001010001010011000110   [Subkey: 6]
          - Input Half:       10101001100011001001101000000101
          - S-Box Result:     01000011001001010011010011111001   [per every group of 4-bits]
          - Split Into Two:   0100001100100101 [L] 0011010011111001 [R]
          - Swap Halves:      00110100111110010100001100100101
          - Bit Inversion:    11001011000001101011110011011010
          - Compressed Key:   01110010110011110011100001101001   [done by compression P-Box]
          - XOR with Key:     10111001110010011000010010110011

          - FUNCTION OUTPUT:  10111001110010011000010010110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100011111001000000101011101

       - FUNCTION OUTPUT:          10111001110010011000010010110011

       - Left XOR FUNCTION OUTPUT: 11011101101101010000010111101110

       - Next Round Left 32 Bits:  10101001100011001001101000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101101101010000010111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001100011001001101000000101

       - Right 32 Bits:            11011101101101010000010111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011111011000110010000101110011010111010110011100101   [Subkey: 5]
          - Input Half:       11011101101101010000010111101110
          - S-Box Result:     01100110100010011111100111001100   [per every group of 4-bits]
          - Split Into Two:   0110011010001001 [L] 1111100111001100 [R]
          - Swap Halves:      11111001110011000110011010001001
          - Bit Inversion:    00000110001100111001100101110110
          - Compressed Key:   00100111110000010011110101101010   [done by compression P-Box]
          - XOR with Key:     00100001111100101010010000011100

          - FUNCTION OUTPUT:  00100001111100101010010000011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001100011001001101000000101

       - FUNCTION OUTPUT:          00100001111100101010010000011100

       - Left XOR FUNCTION OUTPUT: 10001000011111100011111000011001

       - Next Round Left 32 Bits:  11011101101101010000010111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001000011111100011111000011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101101101010000010111101110

       - Right 32 Bits:            10001000011111100011111000011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010011100110111101000110010100010100110001101011   [Subkey: 4]
          - Input Half:       10001000011111100011111000011001
          - S-Box Result:     00100010110111000001110010100011   [per every group of 4-bits]
          - Split Into Two:   0010001011011100 [L] 0001110010100011 [R]
          - Swap Halves:      00011100101000110010001011011100
          - Bit Inversion:    11100011010111001101110100100011
          - Compressed Key:   01000011111010000001101001000111   [done by compression P-Box]
          - XOR with Key:     10100000101101001100011101100100

          - FUNCTION OUTPUT:  10100000101101001100011101100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101101101010000010111101110

       - FUNCTION OUTPUT:          10100000101101001100011101100100

       - Left XOR FUNCTION OUTPUT: 01111101000000011100001010001010

       - Next Round Left 32 Bits:  10001000011111100011111000011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101000000011100001010001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001000011111100011111000011001

       - Right 32 Bits:            01111101000000011100001010001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111110110001100100001011100110101110101100111001010010   [Subkey: 3]
          - Input Half:       01111101000000011100001010001010
          - S-Box Result:     11010110111110100101111000100100   [per every group of 4-bits]
          - Split Into Two:   1101011011111010 [L] 0101111000100100 [R]
          - Swap Halves:      01011110001001001101011011111010
          - Bit Inversion:    10100001110110110010100100000101
          - Compressed Key:   11110010010011011010011111000001   [done by compression P-Box]
          - XOR with Key:     01010011100101101000111011000100

          - FUNCTION OUTPUT:  01010011100101101000111011000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001000011111100011111000011001

       - FUNCTION OUTPUT:          01010011100101101000111011000100

       - Left XOR FUNCTION OUTPUT: 11011011111010001011000011011101

       - Next Round Left 32 Bits:  01111101000000011100001010001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011111010001011000011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101000000011100001010001010

       - Right 32 Bits:            11011011111010001011000011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000100111001101111010001100101000101001100011010110111   [Subkey: 2]
          - Input Half:       11011011111010001011000011011101
          - S-Box Result:     01101000110000101000111101100110   [per every group of 4-bits]
          - Split Into Two:   0110100011000010 [L] 1000111101100110 [R]
          - Swap Halves:      10001111011001100110100011000010
          - Bit Inversion:    01110000100110011001011100111101
          - Compressed Key:   00010110110110010100001111101011   [done by compression P-Box]
          - XOR with Key:     01100110010000001101010011010110

          - FUNCTION OUTPUT:  01100110010000001101010011010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101000000011100001010001010

       - FUNCTION OUTPUT:          01100110010000001101010011010110

       - Left XOR FUNCTION OUTPUT: 00011011010000010001011001011100

       - Next Round Left 32 Bits:  11011011111010001011000011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011011010000010001011001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011111010001011000011011101

       - Right 32 Bits:            00011011010000010001011001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101100011001000010111001101011101011001110010100100011   [Subkey: 1]
          - Input Half:       00011011010000010001011001011100
          - S-Box Result:     10101000011110101010000010010101   [per every group of 4-bits]
          - Split Into Two:   1010100001111010 [L] 1010000010010101 [R]
          - Swap Halves:      10100000100101011010100001111010
          - Bit Inversion:    01011111011010100101011110000101
          - Compressed Key:   10010110101010011110001101010011   [done by compression P-Box]
          - XOR with Key:     11001001110000111011010011010110

          - FUNCTION OUTPUT:  11001001110000111011010011010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011111010001011000011011101

       - FUNCTION OUTPUT:          11001001110000111011010011010110

       - Left XOR FUNCTION OUTPUT: 00010010001010110000010000001011

       - Next Round Left 32 Bits:  00011011010000010001011001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010001010110000010000001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001001000101011000001000000101100011011010000010001011001011100

 > Decrypted Block:     0001001000101011000001000000101100011011010000010001011001011100


!!!CBC: Previous Ciphertext:                             0101101001001110011010000110011101110100011000010110010100111001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100001100101011011000110110001101111001000000111001101100101

 > Final Processed Block:                                0100100001100101011011000110110001101111001000000111001101100101



Ciphertext Block 2:                                      1101011111100000110010010000110011111100011110100111111111001010

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111111000001100100100001100

       - Right 32 Bits:            11111100011110100111111111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011000110101101110000010011100110111101000110   [Subkey: 16]
          - Input Half:       11111100011110100111111111001010
          - S-Box Result:     10110101110101001101101101010100   [per every group of 4-bits]
          - Split Into Two:   1011010111010100 [L] 1101101101010100 [R]
          - Swap Halves:      11011011010101001011010111010100
          - Bit Inversion:    00100100101010110100101000101011
          - Compressed Key:   01000011111010110001011011011001   [done by compression P-Box]
          - XOR with Key:     01100111010000000101110011110010

          - FUNCTION OUTPUT:  01100111010000000101110011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111111000001100100100001100

       - FUNCTION OUTPUT:          01100111010000000101110011110010

       - Left XOR FUNCTION OUTPUT: 10110000101000001001010111111110

       - Next Round Left 32 Bits:  11111100011110100111111111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000101000001001010111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100011110100111111111001010

       - Right 32 Bits:            10110000101000001001010111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010110011100101001000111110110001100100001011100110   [Subkey: 15]
          - Input Half:       10110000101000001001010111111110
          - S-Box Result:     10001111010011110011100110111100   [per every group of 4-bits]
          - Split Into Two:   1000111101001111 [L] 0011100110111100 [R]
          - Swap Halves:      00111001101111001000111101001111
          - Bit Inversion:    11000110010000110111000010110000
          - Compressed Key:   11100011010100111001011010101001   [done by compression P-Box]
          - XOR with Key:     00100101000100001110011000011001

          - FUNCTION OUTPUT:  00100101000100001110011000011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100011110100111111111001010

       - FUNCTION OUTPUT:          00100101000100001110011000011001

       - Left XOR FUNCTION OUTPUT: 11011001011010101001100111010011

       - Next Round Left 32 Bits:  10110000101000001001010111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011001011010101001100111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000101000001001010111111110

       - Right 32 Bits:            11011001011010101001100111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110001101011011100000100111001101111010001100101   [Subkey: 14]
          - Input Half:       11011001011010101001100111010011
          - S-Box Result:     01100011000001000011001101100001   [per every group of 4-bits]
          - Split Into Two:   0110001100000100 [L] 0011001101100001 [R]
          - Swap Halves:      00110011011000010110001100000100
          - Bit Inversion:    11001100100111101001110011111011
          - Compressed Key:   01010010100100001011011101001010   [done by compression P-Box]
          - XOR with Key:     10011110000011100010101110110001

          - FUNCTION OUTPUT:  10011110000011100010101110110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000101000001001010111111110

       - FUNCTION OUTPUT:          10011110000011100010101110110001

       - Left XOR FUNCTION OUTPUT: 00101110101011101011111001001111

       - Next Round Left 32 Bits:  11011001011010101001100111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110101011101011111001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011001011010101001100111010011

       - Right 32 Bits:            00101110101011101011111001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100111001010010001111101100011001000010111001101011   [Subkey: 13]
          - Input Half:       00101110101011101011111001001111
          - S-Box Result:     11101100010011001000110001111011   [per every group of 4-bits]
          - Split Into Two:   1110110001001100 [L] 1000110001111011 [R]
          - Swap Halves:      10001100011110111110110001001100
          - Bit Inversion:    01110011100001000001001110110011
          - Compressed Key:   10010110100011010011000011000111   [done by compression P-Box]
          - XOR with Key:     11100101000010010010001101110100

          - FUNCTION OUTPUT:  11100101000010010010001101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011001011010101001100111010011

       - FUNCTION OUTPUT:          11100101000010010010001101110100

       - Left XOR FUNCTION OUTPUT: 00111100011000111011101010100111

       - Next Round Left 32 Bits:  00101110101011101011111001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100011000111011101010100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110101011101011111001001111

       - Right 32 Bits:            00111100011000111011101010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100011010110111000001001110011011110100011001010001   [Subkey: 12]
          - Input Half:       00111100011000111011101010100111
          - S-Box Result:     00010101000000011000010001001101   [per every group of 4-bits]
          - Split Into Two:   0001010100000001 [L] 1000010001001101 [R]
          - Swap Halves:      10000100010011010001010100000001
          - Bit Inversion:    01111011101100101110101011111110
          - Compressed Key:   10010101110110000011111011000010   [done by compression P-Box]
          - XOR with Key:     11101110011010101101010000111100

          - FUNCTION OUTPUT:  11101110011010101101010000111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110101011101011111001001111

       - FUNCTION OUTPUT:          11101110011010101101010000111100

       - Left XOR FUNCTION OUTPUT: 11000000110001000110101001110011

       - Next Round Left 32 Bits:  00111100011000111011101010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000000110001000110101001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100011000111011101010100111

       - Right 32 Bits:            11000000110001000110101001110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110010100100011111011000110010000101110011010111010   [Subkey: 11]
          - Input Half:       11000000110001000110101001110011
          - S-Box Result:     01011111010101110000010011010001   [per every group of 4-bits]
          - Split Into Two:   0101111101010111 [L] 0000010011010001 [R]
          - Swap Halves:      00000100110100010101111101010111
          - Bit Inversion:    11111011001011101010000010101000
          - Compressed Key:   10111000101111000001011111100101   [done by compression P-Box]
          - XOR with Key:     01000011100100101011011101001101

          - FUNCTION OUTPUT:  01000011100100101011011101001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100011000111011101010100111

       - FUNCTION OUTPUT:          01000011100100101011011101001101

       - Left XOR FUNCTION OUTPUT: 01111111111100010000110111101010

       - Next Round Left 32 Bits:  11000000110001000110101001110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111111100010000110111101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000000110001000110101001110011

       - Right 32 Bits:            01111111111100010000110111101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000110101101110000010011100110111101000110010100010100   [Subkey: 10]
          - Input Half:       01111111111100010000110111101010
          - S-Box Result:     11011011101110101111011011000100   [per every group of 4-bits]
          - Split Into Two:   1101101110111010 [L] 1111011011000100 [R]
          - Swap Halves:      11110110110001001101101110111010
          - Bit Inversion:    00001001001110110010010001000101
          - Compressed Key:   00111110000011011011001001011000   [done by compression P-Box]
          - XOR with Key:     00110111001101101001011000011101

          - FUNCTION OUTPUT:  00110111001101101001011000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000000110001000110101001110011

       - FUNCTION OUTPUT:          00110111001101101001011000011101

       - Left XOR FUNCTION OUTPUT: 11110111111100101111110001101110

       - Next Round Left 32 Bits:  01111111111100010000110111101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111111100101111110001101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111111100010000110111101010

       - Right 32 Bits:            11110111111100101111110001101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101001000111110110001100100001011100110101110101100   [Subkey: 9]
          - Input Half:       11110111111100101111110001101110
          - S-Box Result:     10111101101111101011010100001100   [per every group of 4-bits]
          - Split Into Two:   1011110110111110 [L] 1011010100001100 [R]
          - Swap Halves:      10110101000011001011110110111110
          - Bit Inversion:    01001010111100110100001001000001
          - Compressed Key:   00010100111010010010011010111100   [done by compression P-Box]
          - XOR with Key:     01011110000110100110010011111101

          - FUNCTION OUTPUT:  01011110000110100110010011111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111111100010000110111101010

       - FUNCTION OUTPUT:          01011110000110100110010011111101

       - Left XOR FUNCTION OUTPUT: 00100001111010110110100100010111

       - Next Round Left 32 Bits:  11110111111100101111110001101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001111010110110100100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111111100101111110001101110

       - Right 32 Bits:            00100001111010110110100100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011011100000100111001101111010001100101000101001100   [Subkey: 8]
          - Input Half:       00100001111010110110100100010111
          - S-Box Result:     11101010110010000000001110101101   [per every group of 4-bits]
          - Split Into Two:   1110101011001000 [L] 0000001110101101 [R]
          - Swap Halves:      00000011101011011110101011001000
          - Bit Inversion:    11111100010100100001010100110111
          - Compressed Key:   10101100011010010101011000011100   [done by compression P-Box]
          - XOR with Key:     01010000001110110100001100101011

          - FUNCTION OUTPUT:  01010000001110110100001100101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111111100101111110001101110

       - FUNCTION OUTPUT:          01010000001110110100001100101011

       - Left XOR FUNCTION OUTPUT: 10100111110010011011111101000101

       - Next Round Left 32 Bits:  00100001111010110110100100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100111110010011011111101000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001111010110110100100010111

       - Right 32 Bits:            10100111110010011011111101000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010001111101100011001000010111001101011101011001110   [Subkey: 7]
          - Input Half:       10100111110010011011111101000101
          - S-Box Result:     01001101010100111000101101111001   [per every group of 4-bits]
          - Split Into Two:   0100110101010011 [L] 1000101101111001 [R]
          - Swap Halves:      10001011011110010100110101010011
          - Bit Inversion:    01110100100001101011001010101100
          - Compressed Key:   01101111010010001011010110101101   [done by compression P-Box]
          - XOR with Key:     00011011110011100000011100000001

          - FUNCTION OUTPUT:  00011011110011100000011100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001111010110110100100010111

       - FUNCTION OUTPUT:          00011011110011100000011100000001

       - Left XOR FUNCTION OUTPUT: 00111010001001010110111000010110

       - Next Round Left 32 Bits:  10100111110010011011111101000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010001001010110111000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100111110010011011111101000101

       - Right 32 Bits:            00111010001001010110111000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110111000001001110011011110100011001010001010011000110   [Subkey: 6]
          - Input Half:       00111010001001010110111000010110
          - S-Box Result:     00010100111010010000110010100000   [per every group of 4-bits]
          - Split Into Two:   0001010011101001 [L] 0000110010100000 [R]
          - Swap Halves:      00001100101000000001010011101001
          - Bit Inversion:    11110011010111111110101100010110
          - Compressed Key:   01110010110011110011100001101001   [done by compression P-Box]
          - XOR with Key:     10000001100100001101001101111111

          - FUNCTION OUTPUT:  10000001100100001101001101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100111110010011011111101000101

       - FUNCTION OUTPUT:          10000001100100001101001101111111

       - Left XOR FUNCTION OUTPUT: 00100110010110010110110000111010

       - Next Round Left 32 Bits:  00111010001001010110111000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110010110010110110000111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010001001010110111000010110

       - Right 32 Bits:            00100110010110010110110000111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011111011000110010000101110011010111010110011100101   [Subkey: 5]
          - Input Half:       00100110010110010110110000111010
          - S-Box Result:     11100000100100110000010100010100   [per every group of 4-bits]
          - Split Into Two:   1110000010010011 [L] 0000010100010100 [R]
          - Swap Halves:      00000101000101001110000010010011
          - Bit Inversion:    11111010111010110001111101101100
          - Compressed Key:   00100111110000010011110101101010   [done by compression P-Box]
          - XOR with Key:     11011101001010100010001000000110

          - FUNCTION OUTPUT:  11011101001010100010001000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010001001010110111000010110

       - FUNCTION OUTPUT:          11011101001010100010001000000110

       - Left XOR FUNCTION OUTPUT: 11100111000011110100110000010000

       - Next Round Left 32 Bits:  00100110010110010110110000111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100111000011110100110000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110010110010110110000111010

       - Right 32 Bits:            11100111000011110100110000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010011100110111101000110010100010100110001101011   [Subkey: 4]
          - Input Half:       11100111000011110100110000010000
          - S-Box Result:     11001101111110110111010110101111   [per every group of 4-bits]
          - Split Into Two:   1100110111111011 [L] 0111010110101111 [R]
          - Swap Halves:      01110101101011111100110111111011
          - Bit Inversion:    10001010010100000011001000000100
          - Compressed Key:   01000011111010000001101001000111   [done by compression P-Box]
          - XOR with Key:     11001001101110000010100001000011

          - FUNCTION OUTPUT:  11001001101110000010100001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110010110010110110000111010

       - FUNCTION OUTPUT:          11001001101110000010100001000011

       - Left XOR FUNCTION OUTPUT: 11101111111000010100010001111001

       - Next Round Left 32 Bits:  11100111000011110100110000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101111111000010100010001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111000011110100110000010000

       - Right 32 Bits:            11101111111000010100010001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111110110001100100001011100110101110101100111001010010   [Subkey: 3]
          - Input Half:       11101111111000010100010001111001
          - S-Box Result:     11001011110010100111011111010011   [per every group of 4-bits]
          - Split Into Two:   1100101111001010 [L] 0111011111010011 [R]
          - Swap Halves:      01110111110100111100101111001010
          - Bit Inversion:    10001000001011000011010000110101
          - Compressed Key:   11110010010011011010011111000001   [done by compression P-Box]
          - XOR with Key:     01111010011000011001001111110100

          - FUNCTION OUTPUT:  01111010011000011001001111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111000011110100110000010000

       - FUNCTION OUTPUT:          01111010011000011001001111110100

       - Left XOR FUNCTION OUTPUT: 10011101011011101101111111100100

       - Next Round Left 32 Bits:  11101111111000010100010001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011101011011101101111111100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101111111000010100010001111001

       - Right 32 Bits:            10011101011011101101111111100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000100111001101111010001100101000101001100011010110111   [Subkey: 2]
          - Input Half:       10011101011011101101111111100100
          - S-Box Result:     00110110000011000110101111000111   [per every group of 4-bits]
          - Split Into Two:   0011011000001100 [L] 0110101111000111 [R]
          - Swap Halves:      01101011110001110011011000001100
          - Bit Inversion:    10010100001110001100100111110011
          - Compressed Key:   00010110110110010100001111101011   [done by compression P-Box]
          - XOR with Key:     10000010111000011000101000011000

          - FUNCTION OUTPUT:  10000010111000011000101000011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101111111000010100010001111001

       - FUNCTION OUTPUT:          10000010111000011000101000011000

       - Left XOR FUNCTION OUTPUT: 01101101000000001100111001100001

       - Next Round Left 32 Bits:  10011101011011101101111111100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101000000001100111001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011101011011101101111111100100

       - Right 32 Bits:            01101101000000001100111001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101100011001000010111001101011101011001110010100100011   [Subkey: 1]
          - Input Half:       01101101000000001100111001100001
          - S-Box Result:     00000110111111110101110000001010   [per every group of 4-bits]
          - Split Into Two:   0000011011111111 [L] 0101110000001010 [R]
          - Swap Halves:      01011100000010100000011011111111
          - Bit Inversion:    10100011111101011111100100000000
          - Compressed Key:   10010110101010011110001101010011   [done by compression P-Box]
          - XOR with Key:     00110101010111000001101001010011

          - FUNCTION OUTPUT:  00110101010111000001101001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011101011011101101111111100100

       - FUNCTION OUTPUT:          00110101010111000001101001010011

       - Left XOR FUNCTION OUTPUT: 10101000001100101100010110110111

       - Next Round Left 32 Bits:  01101101000000001100111001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000001100101100010110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010100000110010110001011011011101101101000000001100111001100001

 > Decrypted Block:     1010100000110010110001011011011101101101000000001100111001100001


!!!CBC: Previous Ciphertext:                             1101101001000100101000001100010101000001001000001000011101000001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111001001110110011001010111001000101100001000000100100100100000

 > Final Processed Block:                                0111001001110110011001010111001000101100001000000100100100100000



Ciphertext Block 3:                                      1000100110101000011101111001100101010001001101000000111111110100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001001101010000111011110011001

       - Right 32 Bits:            01010001001101000000111111110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011000110101101110000010011100110111101000110   [Subkey: 16]
          - Input Half:       01010001001101000000111111110100
          - S-Box Result:     10011010000101111111101110110111   [per every group of 4-bits]
          - Split Into Two:   1001101000010111 [L] 1111101110110111 [R]
          - Swap Halves:      11111011101101111001101000010111
          - Bit Inversion:    00000100010010000110010111101000
          - Compressed Key:   01000011111010110001011011011001   [done by compression P-Box]
          - XOR with Key:     01000111101000110111001100110001

          - FUNCTION OUTPUT:  01000111101000110111001100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001001101010000111011110011001

       - FUNCTION OUTPUT:          01000111101000110111001100110001

       - Left XOR FUNCTION OUTPUT: 11001110000010110000010010101000

       - Next Round Left 32 Bits:  01010001001101000000111111110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110000010110000010010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001001101000000111111110100

       - Right 32 Bits:            11001110000010110000010010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010110011100101001000111110110001100100001011100110   [Subkey: 15]
          - Input Half:       11001110000010110000010010101000
          - S-Box Result:     01011100111110001111011101000010   [per every group of 4-bits]
          - Split Into Two:   0101110011111000 [L] 1111011101000010 [R]
          - Swap Halves:      11110111010000100101110011111000
          - Bit Inversion:    00001000101111011010001100000111
          - Compressed Key:   11100011010100111001011010101001   [done by compression P-Box]
          - XOR with Key:     11101011111011100011010110101110

          - FUNCTION OUTPUT:  11101011111011100011010110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001001101000000111111110100

       - FUNCTION OUTPUT:          11101011111011100011010110101110

       - Left XOR FUNCTION OUTPUT: 10111010110110100011101001011010

       - Next Round Left 32 Bits:  11001110000010110000010010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010110110100011101001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110000010110000010010101000

       - Right 32 Bits:            10111010110110100011101001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110001101011011100000100111001101111010001100101   [Subkey: 14]
          - Input Half:       10111010110110100011101001011010
          - S-Box Result:     10000100011001000001010010010100   [per every group of 4-bits]
          - Split Into Two:   1000010001100100 [L] 0001010010010100 [R]
          - Swap Halves:      00010100100101001000010001100100
          - Bit Inversion:    11101011011010110111101110011011
          - Compressed Key:   01010010100100001011011101001010   [done by compression P-Box]
          - XOR with Key:     10111001111110111100110011010001

          - FUNCTION OUTPUT:  10111001111110111100110011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110000010110000010010101000

       - FUNCTION OUTPUT:          10111001111110111100110011010001

       - Left XOR FUNCTION OUTPUT: 01110111111100001100100001111001

       - Next Round Left 32 Bits:  10111010110110100011101001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111111100001100100001111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010110110100011101001011010

       - Right 32 Bits:            01110111111100001100100001111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100111001010010001111101100011001000010111001101011   [Subkey: 13]
          - Input Half:       01110111111100001100100001111001
          - S-Box Result:     11011101101111110101001011010011   [per every group of 4-bits]
          - Split Into Two:   1101110110111111 [L] 0101001011010011 [R]
          - Swap Halves:      01010010110100111101110110111111
          - Bit Inversion:    10101101001011000010001001000000
          - Compressed Key:   10010110100011010011000011000111   [done by compression P-Box]
          - XOR with Key:     00111011101000010001001010000111

          - FUNCTION OUTPUT:  00111011101000010001001010000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010110110100011101001011010

       - FUNCTION OUTPUT:          00111011101000010001001010000111

       - Left XOR FUNCTION OUTPUT: 10000001011110110010100011011101

       - Next Round Left 32 Bits:  01110111111100001100100001111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001011110110010100011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111111100001100100001111001

       - Right 32 Bits:            10000001011110110010100011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100011010110111000001001110011011110100011001010001   [Subkey: 12]
          - Input Half:       10000001011110110010100011011101
          - S-Box Result:     00101010110110001110001001100110   [per every group of 4-bits]
          - Split Into Two:   0010101011011000 [L] 1110001001100110 [R]
          - Swap Halves:      11100010011001100010101011011000
          - Bit Inversion:    00011101100110011101010100100111
          - Compressed Key:   10010101110110000011111011000010   [done by compression P-Box]
          - XOR with Key:     10001000010000011110101111100101

          - FUNCTION OUTPUT:  10001000010000011110101111100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111111100001100100001111001

       - FUNCTION OUTPUT:          10001000010000011110101111100101

       - Left XOR FUNCTION OUTPUT: 11111111101100010010001110011100

       - Next Round Left 32 Bits:  10000001011110110010100011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111111101100010010001110011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001011110110010100011011101

       - Right 32 Bits:            11111111101100010010001110011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110010100100011111011000110010000101110011010111010   [Subkey: 11]
          - Input Half:       11111111101100010010001110011100
          - S-Box Result:     10111011100010101110000100110101   [per every group of 4-bits]
          - Split Into Two:   1011101110001010 [L] 1110000100110101 [R]
          - Swap Halves:      11100001001101011011101110001010
          - Bit Inversion:    00011110110010100100010001110101
          - Compressed Key:   10111000101111000001011111100101   [done by compression P-Box]
          - XOR with Key:     10100110011101100101001110010000

          - FUNCTION OUTPUT:  10100110011101100101001110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001011110110010100011011101

       - FUNCTION OUTPUT:          10100110011101100101001110010000

       - Left XOR FUNCTION OUTPUT: 00100111000011010111101101001101

       - Next Round Left 32 Bits:  11111111101100010010001110011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111000011010111101101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111111101100010010001110011100

       - Right 32 Bits:            00100111000011010111101101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000110101101110000010011100110111101000110010100010100   [Subkey: 10]
          - Input Half:       00100111000011010111101101001101
          - S-Box Result:     11101101111101101101100001110110   [per every group of 4-bits]
          - Split Into Two:   1110110111110110 [L] 1101100001110110 [R]
          - Swap Halves:      11011000011101101110110111110110
          - Bit Inversion:    00100111100010010001001000001001
          - Compressed Key:   00111110000011011011001001011000   [done by compression P-Box]
          - XOR with Key:     00011001100001001010000001010001

          - FUNCTION OUTPUT:  00011001100001001010000001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111111101100010010001110011100

       - FUNCTION OUTPUT:          00011001100001001010000001010001

       - Left XOR FUNCTION OUTPUT: 11100110001101011000001111001101

       - Next Round Left 32 Bits:  00100111000011010111101101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110001101011000001111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111000011010111101101001101

       - Right 32 Bits:            11100110001101011000001111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101001000111110110001100100001011100110101110101100   [Subkey: 9]
          - Input Half:       11100110001101011000001111001101
          - S-Box Result:     11000000000110010010000101010110   [per every group of 4-bits]
          - Split Into Two:   1100000000011001 [L] 0010000101010110 [R]
          - Swap Halves:      00100001010101101100000000011001
          - Bit Inversion:    11011110101010010011111111100110
          - Compressed Key:   00010100111010010010011010111100   [done by compression P-Box]
          - XOR with Key:     11001010010000000001100101011010

          - FUNCTION OUTPUT:  11001010010000000001100101011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111000011010111101101001101

       - FUNCTION OUTPUT:          11001010010000000001100101011010

       - Left XOR FUNCTION OUTPUT: 11101101010011010110001000010111

       - Next Round Left 32 Bits:  11100110001101011000001111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101101010011010110001000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110001101011000001111001101

       - Right 32 Bits:            11101101010011010110001000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011011100000100111001101111010001100101000101001100   [Subkey: 8]
          - Input Half:       11101101010011010110001000010111
          - S-Box Result:     11000110011101100000111010101101   [per every group of 4-bits]
          - Split Into Two:   1100011001110110 [L] 0000111010101101 [R]
          - Swap Halves:      00001110101011011100011001110110
          - Bit Inversion:    11110001010100100011100110001001
          - Compressed Key:   10101100011010010101011000011100   [done by compression P-Box]
          - XOR with Key:     01011101001110110110111110010101

          - FUNCTION OUTPUT:  01011101001110110110111110010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110001101011000001111001101

       - FUNCTION OUTPUT:          01011101001110110110111110010101

       - Left XOR FUNCTION OUTPUT: 10111011000011101110110001011000

       - Next Round Left 32 Bits:  11101101010011010110001000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111011000011101110110001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101010011010110001000010111

       - Right 32 Bits:            10111011000011101110110001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010001111101100011001000010111001101011101011001110   [Subkey: 7]
          - Input Half:       10111011000011101110110001011000
          - S-Box Result:     10001000111111001100010110010010   [per every group of 4-bits]
          - Split Into Two:   1000100011111100 [L] 1100010110010010 [R]
          - Swap Halves:      11000101100100101000100011111100
          - Bit Inversion:    00111010011011010111011100000011
          - Compressed Key:   01101111010010001011010110101101   [done by compression P-Box]
          - XOR with Key:     01010101001001011100001010101110

          - FUNCTION OUTPUT:  01010101001001011100001010101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101010011010110001000010111

       - FUNCTION OUTPUT:          01010101001001011100001010101110

       - Left XOR FUNCTION OUTPUT: 10111000011010001010000010111001

       - Next Round Left 32 Bits:  10111011000011101110110001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000011010001010000010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111011000011101110110001011000

       - Right 32 Bits:            10111000011010001010000010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110111000001001110011011110100011001010001010011000110   [Subkey: 6]
          - Input Half:       10111000011010001010000010111001
          - S-Box Result:     10000010000000100100111110000011   [per every group of 4-bits]
          - Split Into Two:   1000001000000010 [L] 0100111110000011 [R]
          - Swap Halves:      01001111100000111000001000000010
          - Bit Inversion:    10110000011111000111110111111101
          - Compressed Key:   01110010110011110011100001101001   [done by compression P-Box]
          - XOR with Key:     11000010101100110100010110010100

          - FUNCTION OUTPUT:  11000010101100110100010110010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111011000011101110110001011000

       - FUNCTION OUTPUT:          11000010101100110100010110010100

       - Left XOR FUNCTION OUTPUT: 01111001101111011010100111001100

       - Next Round Left 32 Bits:  10111000011010001010000010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001101111011010100111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000011010001010000010111001

       - Right 32 Bits:            01111001101111011010100111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011111011000110010000101110011010111010110011100101   [Subkey: 5]
          - Input Half:       01111001101111011010100111001100
          - S-Box Result:     11010011100001100100001101010101   [per every group of 4-bits]
          - Split Into Two:   1101001110000110 [L] 0100001101010101 [R]
          - Swap Halves:      01000011010101011101001110000110
          - Bit Inversion:    10111100101010100010110001111001
          - Compressed Key:   00100111110000010011110101101010   [done by compression P-Box]
          - XOR with Key:     10011011011010110001000100010011

          - FUNCTION OUTPUT:  10011011011010110001000100010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000011010001010000010111001

       - FUNCTION OUTPUT:          10011011011010110001000100010011

       - Left XOR FUNCTION OUTPUT: 00100011000000111011000110101010

       - Next Round Left 32 Bits:  01111001101111011010100111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100011000000111011000110101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001101111011010100111001100

       - Right 32 Bits:            00100011000000111011000110101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010011100110111101000110010100010100110001101011   [Subkey: 4]
          - Input Half:       00100011000000111011000110101010
          - S-Box Result:     11100001111100011000101001000100   [per every group of 4-bits]
          - Split Into Two:   1110000111110001 [L] 1000101001000100 [R]
          - Swap Halves:      10001010010001001110000111110001
          - Bit Inversion:    01110101101110110001111000001110
          - Compressed Key:   01000011111010000001101001000111   [done by compression P-Box]
          - XOR with Key:     00110110010100110000010001001001

          - FUNCTION OUTPUT:  00110110010100110000010001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001101111011010100111001100

       - FUNCTION OUTPUT:          00110110010100110000010001001001

       - Left XOR FUNCTION OUTPUT: 01001111111011101010110110000101

       - Next Round Left 32 Bits:  00100011000000111011000110101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111111011101010110110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011000000111011000110101010

       - Right 32 Bits:            01001111111011101010110110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111110110001100100001011100110101110101100111001010010   [Subkey: 3]
          - Input Half:       01001111111011101010110110000101
          - S-Box Result:     01111011110011000100011000101001   [per every group of 4-bits]
          - Split Into Two:   0111101111001100 [L] 0100011000101001 [R]
          - Swap Halves:      01000110001010010111101111001100
          - Bit Inversion:    10111001110101101000010000110011
          - Compressed Key:   11110010010011011010011111000001   [done by compression P-Box]
          - XOR with Key:     01001011100110110010001111110010

          - FUNCTION OUTPUT:  01001011100110110010001111110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011000000111011000110101010

       - FUNCTION OUTPUT:          01001011100110110010001111110010

       - Left XOR FUNCTION OUTPUT: 01101000100110001001001001011000

       - Next Round Left 32 Bits:  01001111111011101010110110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000100110001001001001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111111011101010110110000101

       - Right 32 Bits:            01101000100110001001001001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000100111001101111010001100101000101001100011010110111   [Subkey: 2]
          - Input Half:       01101000100110001001001001011000
          - S-Box Result:     00000010001100100011111010010010   [per every group of 4-bits]
          - Split Into Two:   0000001000110010 [L] 0011111010010010 [R]
          - Swap Halves:      00111110100100100000001000110010
          - Bit Inversion:    11000001011011011111110111001101
          - Compressed Key:   00010110110110010100001111101011   [done by compression P-Box]
          - XOR with Key:     11010111101101001011111000100110

          - FUNCTION OUTPUT:  11010111101101001011111000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111111011101010110110000101

       - FUNCTION OUTPUT:          11010111101101001011111000100110

       - Left XOR FUNCTION OUTPUT: 10011000010110100001001110100011

       - Next Round Left 32 Bits:  01101000100110001001001001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000010110100001001110100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000100110001001001001011000

       - Right 32 Bits:            10011000010110100001001110100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101100011001000010111001101011101011001110010100100011   [Subkey: 1]
          - Input Half:       10011000010110100001001110100011
          - S-Box Result:     00110010100101001010000101000001   [per every group of 4-bits]
          - Split Into Two:   0011001010010100 [L] 1010000101000001 [R]
          - Swap Halves:      10100001010000010011001010010100
          - Bit Inversion:    01011110101111101100110101101011
          - Compressed Key:   10010110101010011110001101010011   [done by compression P-Box]
          - XOR with Key:     11001000000101110010111000111000

          - FUNCTION OUTPUT:  11001000000101110010111000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000100110001001001001011000

       - FUNCTION OUTPUT:          11001000000101110010111000111000

       - Left XOR FUNCTION OUTPUT: 10100000100011111011110001100000

       - Next Round Left 32 Bits:  10011000010110100001001110100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100000100011111011110001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010000010001111101111000110000010011000010110100001001110100011

 > Decrypted Block:     1010000010001111101111000110000010011000010110100001001110100011


!!!CBC: Previous Ciphertext:                             1101011111100000110010010000110011111100011110100111111111001010

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111011101101111011101010110110001100100001000000110110001101001

 > Final Processed Block:                                0111011101101111011101010110110001100100001000000110110001101001



Ciphertext Block 4:                                      1110000100111101000011000110001111101101111010000001001100110101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001001111010000110001100011

       - Right 32 Bits:            11101101111010000001001100110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011000110101101110000010011100110111101000110   [Subkey: 16]
          - Input Half:       11101101111010000001001100110101
          - S-Box Result:     11000110110000101010000100011001   [per every group of 4-bits]
          - Split Into Two:   1100011011000010 [L] 1010000100011001 [R]
          - Swap Halves:      10100001000110011100011011000010
          - Bit Inversion:    01011110111001100011100100111101
          - Compressed Key:   01000011111010110001011011011001   [done by compression P-Box]
          - XOR with Key:     00011101000011010010111111100100

          - FUNCTION OUTPUT:  00011101000011010010111111100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001001111010000110001100011

       - FUNCTION OUTPUT:          00011101000011010010111111100100

       - Left XOR FUNCTION OUTPUT: 11111100001100000010001110000111

       - Next Round Left 32 Bits:  11101101111010000001001100110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111100001100000010001110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101101111010000001001100110101

       - Right 32 Bits:            11111100001100000010001110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010110011100101001000111110110001100100001011100110   [Subkey: 15]
          - Input Half:       11111100001100000010001110000111
          - S-Box Result:     10110101000111111110000100101101   [per every group of 4-bits]
          - Split Into Two:   1011010100011111 [L] 1110000100101101 [R]
          - Swap Halves:      11100001001011011011010100011111
          - Bit Inversion:    00011110110100100100101011100000
          - Compressed Key:   11100011010100111001011010101001   [done by compression P-Box]
          - XOR with Key:     11111101100000011101110001001001

          - FUNCTION OUTPUT:  11111101100000011101110001001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101101111010000001001100110101

       - FUNCTION OUTPUT:          11111101100000011101110001001001

       - Left XOR FUNCTION OUTPUT: 00010000011010011100111101111100

       - Next Round Left 32 Bits:  11111100001100000010001110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010000011010011100111101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111100001100000010001110000111

       - Right 32 Bits:            00010000011010011100111101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110001101011011100000100111001101111010001100101   [Subkey: 14]
          - Input Half:       00010000011010011100111101111100
          - S-Box Result:     10101111000000110101101111010101   [per every group of 4-bits]
          - Split Into Two:   1010111100000011 [L] 0101101111010101 [R]
          - Swap Halves:      01011011110101011010111100000011
          - Bit Inversion:    10100100001010100101000011111100
          - Compressed Key:   01010010100100001011011101001010   [done by compression P-Box]
          - XOR with Key:     11110110101110101110011110110110

          - FUNCTION OUTPUT:  11110110101110101110011110110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111100001100000010001110000111

       - FUNCTION OUTPUT:          11110110101110101110011110110110

       - Left XOR FUNCTION OUTPUT: 00001010100010101100010000110001

       - Next Round Left 32 Bits:  00010000011010011100111101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010100010101100010000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000011010011100111101111100

       - Right 32 Bits:            00001010100010101100010000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100111001010010001111101100011001000010111001101011   [Subkey: 13]
          - Input Half:       00001010100010101100010000110001
          - S-Box Result:     11110100001001000101011100011010   [per every group of 4-bits]
          - Split Into Two:   1111010000100100 [L] 0101011100011010 [R]
          - Swap Halves:      01010111000110101111010000100100
          - Bit Inversion:    10101000111001010000101111011011
          - Compressed Key:   10010110100011010011000011000111   [done by compression P-Box]
          - XOR with Key:     00111110011010000011101100011100

          - FUNCTION OUTPUT:  00111110011010000011101100011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000011010011100111101111100

       - FUNCTION OUTPUT:          00111110011010000011101100011100

       - Left XOR FUNCTION OUTPUT: 00101110000000011111010001100000

       - Next Round Left 32 Bits:  00001010100010101100010000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101110000000011111010001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010100010101100010000110001

       - Right 32 Bits:            00101110000000011111010001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100011010110111000001001110011011110100011001010001   [Subkey: 12]
          - Input Half:       00101110000000011111010001100000
          - S-Box Result:     11101100111110101011011100001111   [per every group of 4-bits]
          - Split Into Two:   1110110011111010 [L] 1011011100001111 [R]
          - Swap Halves:      10110111000011111110110011111010
          - Bit Inversion:    01001000111100000001001100000101
          - Compressed Key:   10010101110110000011111011000010   [done by compression P-Box]
          - XOR with Key:     11011101001010000010110111000111

          - FUNCTION OUTPUT:  11011101001010000010110111000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010100010101100010000110001

       - FUNCTION OUTPUT:          11011101001010000010110111000111

       - Left XOR FUNCTION OUTPUT: 11010111101000101110100111110110

       - Next Round Left 32 Bits:  00101110000000011111010001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111101000101110100111110110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101110000000011111010001100000

       - Right 32 Bits:            11010111101000101110100111110110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110010100100011111011000110010000101110011010111010   [Subkey: 11]
          - Input Half:       11010111101000101110100111110110
          - S-Box Result:     01101101010011101100001110110000   [per every group of 4-bits]
          - Split Into Two:   0110110101001110 [L] 1100001110110000 [R]
          - Swap Halves:      11000011101100000110110101001110
          - Bit Inversion:    00111100010011111001001010110001
          - Compressed Key:   10111000101111000001011111100101   [done by compression P-Box]
          - XOR with Key:     10000100111100111000010101010100

          - FUNCTION OUTPUT:  10000100111100111000010101010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101110000000011111010001100000

       - FUNCTION OUTPUT:          10000100111100111000010101010100

       - Left XOR FUNCTION OUTPUT: 10101010111100100111000100110100

       - Next Round Left 32 Bits:  11010111101000101110100111110110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101010111100100111000100110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111101000101110100111110110

       - Right 32 Bits:            10101010111100100111000100110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000110101101110000010011100110111101000110010100010100   [Subkey: 10]
          - Input Half:       10101010111100100111000100110100
          - S-Box Result:     01000100101111101101101000010111   [per every group of 4-bits]
          - Split Into Two:   0100010010111110 [L] 1101101000010111 [R]
          - Swap Halves:      11011010000101110100010010111110
          - Bit Inversion:    00100101111010001011101101000001
          - Compressed Key:   00111110000011011011001001011000   [done by compression P-Box]
          - XOR with Key:     00011011111001010000100100011001

          - FUNCTION OUTPUT:  00011011111001010000100100011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111101000101110100111110110

       - FUNCTION OUTPUT:          00011011111001010000100100011001

       - Left XOR FUNCTION OUTPUT: 11001100010001111110000011101111

       - Next Round Left 32 Bits:  10101010111100100111000100110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100010001111110000011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101010111100100111000100110100

       - Right 32 Bits:            11001100010001111110000011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101001000111110110001100100001011100110101110101100   [Subkey: 9]
          - Input Half:       11001100010001111110000011101111
          - S-Box Result:     01010101011111011100111111001011   [per every group of 4-bits]
          - Split Into Two:   0101010101111101 [L] 1100111111001011 [R]
          - Swap Halves:      11001111110010110101010101111101
          - Bit Inversion:    00110000001101001010101010000010
          - Compressed Key:   00010100111010010010011010111100   [done by compression P-Box]
          - XOR with Key:     00100100110111011000110000111110

          - FUNCTION OUTPUT:  00100100110111011000110000111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101010111100100111000100110100

       - FUNCTION OUTPUT:          00100100110111011000110000111110

       - Left XOR FUNCTION OUTPUT: 10001110001011111111110100001010

       - Next Round Left 32 Bits:  11001100010001111110000011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110001011111111110100001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100010001111110000011101111

       - Right 32 Bits:            10001110001011111111110100001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011011100000100111001101111010001100101000101001100   [Subkey: 8]
          - Input Half:       10001110001011111111110100001010
          - S-Box Result:     00101100111010111011011011110100   [per every group of 4-bits]
          - Split Into Two:   0010110011101011 [L] 1011011011110100 [R]
          - Swap Halves:      10110110111101000010110011101011
          - Bit Inversion:    01001001000010111101001100010100
          - Compressed Key:   10101100011010010101011000011100   [done by compression P-Box]
          - XOR with Key:     11100101011000101000010100001000

          - FUNCTION OUTPUT:  11100101011000101000010100001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100010001111110000011101111

       - FUNCTION OUTPUT:          11100101011000101000010100001000

       - Left XOR FUNCTION OUTPUT: 00101001001001010110010111100111

       - Next Round Left 32 Bits:  10001110001011111111110100001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001001001010110010111100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110001011111111110100001010

       - Right 32 Bits:            00101001001001010110010111100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010001111101100011001000010111001101011101011001110   [Subkey: 7]
          - Input Half:       00101001001001010110010111100111
          - S-Box Result:     11100011111010010000100111001101   [per every group of 4-bits]
          - Split Into Two:   1110001111101001 [L] 0000100111001101 [R]
          - Swap Halves:      00001001110011011110001111101001
          - Bit Inversion:    11110110001100100001110000010110
          - Compressed Key:   01101111010010001011010110101101   [done by compression P-Box]
          - XOR with Key:     10011001011110101010100110111011

          - FUNCTION OUTPUT:  10011001011110101010100110111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110001011111111110100001010

       - FUNCTION OUTPUT:          10011001011110101010100110111011

       - Left XOR FUNCTION OUTPUT: 00010111010101010101010010110001

       - Next Round Left 32 Bits:  00101001001001010110010111100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111010101010101010010110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001001001010110010111100111

       - Right 32 Bits:            00010111010101010101010010110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110111000001001110011011110100011001010001010011000110   [Subkey: 6]
          - Input Half:       00010111010101010101010010110001
          - S-Box Result:     10101101100110011001011110001010   [per every group of 4-bits]
          - Split Into Two:   1010110110011001 [L] 1001011110001010 [R]
          - Swap Halves:      10010111100010101010110110011001
          - Bit Inversion:    01101000011101010101001001100110
          - Compressed Key:   01110010110011110011100001101001   [done by compression P-Box]
          - XOR with Key:     00011010101110100110101000001111

          - FUNCTION OUTPUT:  00011010101110100110101000001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001001001010110010111100111

       - FUNCTION OUTPUT:          00011010101110100110101000001111

       - Left XOR FUNCTION OUTPUT: 00110011100111110000111111101000

       - Next Round Left 32 Bits:  00010111010101010101010010110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110011100111110000111111101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111010101010101010010110001

       - Right 32 Bits:            00110011100111110000111111101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011111011000110010000101110011010111010110011100101   [Subkey: 5]
          - Input Half:       00110011100111110000111111101000
          - S-Box Result:     00010001001110111111101111000010   [per every group of 4-bits]
          - Split Into Two:   0001000100111011 [L] 1111101111000010 [R]
          - Swap Halves:      11111011110000100001000100111011
          - Bit Inversion:    00000100001111011110111011000100
          - Compressed Key:   00100111110000010011110101101010   [done by compression P-Box]
          - XOR with Key:     00100011111111001101001110101110

          - FUNCTION OUTPUT:  00100011111111001101001110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111010101010101010010110001

       - FUNCTION OUTPUT:          00100011111111001101001110101110

       - Left XOR FUNCTION OUTPUT: 00110100101010011000011100011111

       - Next Round Left 32 Bits:  00110011100111110000111111101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110100101010011000011100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110011100111110000111111101000

       - Right 32 Bits:            00110100101010011000011100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010011100110111101000110010100010100110001101011   [Subkey: 4]
          - Input Half:       00110100101010011000011100011111
          - S-Box Result:     00010111010000110010110110101011   [per every group of 4-bits]
          - Split Into Two:   0001011101000011 [L] 0010110110101011 [R]
          - Swap Halves:      00101101101010110001011101000011
          - Bit Inversion:    11010010010101001110100010111100
          - Compressed Key:   01000011111010000001101001000111   [done by compression P-Box]
          - XOR with Key:     10010001101111001111001011111011

          - FUNCTION OUTPUT:  10010001101111001111001011111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110011100111110000111111101000

       - FUNCTION OUTPUT:          10010001101111001111001011111011

       - Left XOR FUNCTION OUTPUT: 10100010001000111111110100010011

       - Next Round Left 32 Bits:  00110100101010011000011100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100010001000111111110100010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110100101010011000011100011111

       - Right 32 Bits:            10100010001000111111110100010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111110110001100100001011100110101110101100111001010010   [Subkey: 3]
          - Input Half:       10100010001000111111110100010011
          - S-Box Result:     01001110111000011011011010100001   [per every group of 4-bits]
          - Split Into Two:   0100111011100001 [L] 1011011010100001 [R]
          - Swap Halves:      10110110101000010100111011100001
          - Bit Inversion:    01001001010111101011000100011110
          - Compressed Key:   11110010010011011010011111000001   [done by compression P-Box]
          - XOR with Key:     10111011000100110001011011011111

          - FUNCTION OUTPUT:  10111011000100110001011011011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110100101010011000011100011111

       - FUNCTION OUTPUT:          10111011000100110001011011011111

       - Left XOR FUNCTION OUTPUT: 10001111101110101001000111000000

       - Next Round Left 32 Bits:  10100010001000111111110100010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111101110101001000111000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100010001000111111110100010011

       - Right 32 Bits:            10001111101110101001000111000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000100111001101111010001100101000101001100011010110111   [Subkey: 2]
          - Input Half:       10001111101110101001000111000000
          - S-Box Result:     00101011100001000011101001011111   [per every group of 4-bits]
          - Split Into Two:   0010101110000100 [L] 0011101001011111 [R]
          - Swap Halves:      00111010010111110010101110000100
          - Bit Inversion:    11000101101000001101010001111011
          - Compressed Key:   00010110110110010100001111101011   [done by compression P-Box]
          - XOR with Key:     11010011011110011001011110010000

          - FUNCTION OUTPUT:  11010011011110011001011110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100010001000111111110100010011

       - FUNCTION OUTPUT:          11010011011110011001011110010000

       - Left XOR FUNCTION OUTPUT: 01110001010110100110101010000011

       - Next Round Left 32 Bits:  10001111101110101001000111000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001010110100110101010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111101110101001000111000000

       - Right 32 Bits:            01110001010110100110101010000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101100011001000010111001101011101011001110010100100011   [Subkey: 1]
          - Input Half:       01110001010110100110101010000011
          - S-Box Result:     11011010100101000000010000100001   [per every group of 4-bits]
          - Split Into Two:   1101101010010100 [L] 0000010000100001 [R]
          - Swap Halves:      00000100001000011101101010010100
          - Bit Inversion:    11111011110111100010010101101011
          - Compressed Key:   10010110101010011110001101010011   [done by compression P-Box]
          - XOR with Key:     01101101011101111100011000111000

          - FUNCTION OUTPUT:  01101101011101111100011000111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111101110101001000111000000

       - FUNCTION OUTPUT:          01101101011101111100011000111000

       - Left XOR FUNCTION OUTPUT: 11100010110011010101011111111000

       - Next Round Left 32 Bits:  01110001010110100110101010000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010110011010101011111111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1110001011001101010101111111100001110001010110100110101010000011

 > Decrypted Block:     1110001011001101010101111111100001110001010110100110101010000011


!!!CBC: Previous Ciphertext:                             1000100110101000011101111001100101010001001101000000111111110100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110101101100101001000000110000100100000011011100110010101110111

 > Final Processed Block:                                0110101101100101001000000110000100100000011011100110010101110111



Ciphertext Block 5:                                      1011011111100110100011101101010000000110001000001000011011011100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111111001101000111011010100

       - Right 32 Bits:            00000110001000001000011011011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011000110101101110000010011100110111101000110   [Subkey: 16]
          - Input Half:       00000110001000001000011011011100
          - S-Box Result:     11110000111011110010000001100101   [per every group of 4-bits]
          - Split Into Two:   1111000011101111 [L] 0010000001100101 [R]
          - Swap Halves:      00100000011001011111000011101111
          - Bit Inversion:    11011111100110100000111100010000
          - Compressed Key:   01000011111010110001011011011001   [done by compression P-Box]
          - XOR with Key:     10011100011100010001100111001001

          - FUNCTION OUTPUT:  10011100011100010001100111001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111111001101000111011010100

       - FUNCTION OUTPUT:          10011100011100010001100111001001

       - Left XOR FUNCTION OUTPUT: 00101011100101111001011100011101

       - Next Round Left 32 Bits:  00000110001000001000011011011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101011100101111001011100011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000110001000001000011011011100

       - Right 32 Bits:            00101011100101111001011100011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010110011100101001000111110110001100100001011100110   [Subkey: 15]
          - Input Half:       00101011100101111001011100011101
          - S-Box Result:     11101000001111010011110110100110   [per every group of 4-bits]
          - Split Into Two:   1110100000111101 [L] 0011110110100110 [R]
          - Swap Halves:      00111101101001101110100000111101
          - Bit Inversion:    11000010010110010001011111000010
          - Compressed Key:   11100011010100111001011010101001   [done by compression P-Box]
          - XOR with Key:     00100001000010101000000101101011

          - FUNCTION OUTPUT:  00100001000010101000000101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000110001000001000011011011100

       - FUNCTION OUTPUT:          00100001000010101000000101101011

       - Left XOR FUNCTION OUTPUT: 00100111001010100000011110110111

       - Next Round Left 32 Bits:  00101011100101111001011100011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111001010100000011110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101011100101111001011100011101

       - Right 32 Bits:            00100111001010100000011110110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110001101011011100000100111001101111010001100101   [Subkey: 14]
          - Input Half:       00100111001010100000011110110111
          - S-Box Result:     11101101111001001111110110001101   [per every group of 4-bits]
          - Split Into Two:   1110110111100100 [L] 1111110110001101 [R]
          - Swap Halves:      11111101100011011110110111100100
          - Bit Inversion:    00000010011100100001001000011011
          - Compressed Key:   01010010100100001011011101001010   [done by compression P-Box]
          - XOR with Key:     01010000111000101010010101010001

          - FUNCTION OUTPUT:  01010000111000101010010101010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101011100101111001011100011101

       - FUNCTION OUTPUT:          01010000111000101010010101010001

       - Left XOR FUNCTION OUTPUT: 01111011011101010011001001001100

       - Next Round Left 32 Bits:  00100111001010100000011110110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011011101010011001001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111001010100000011110110111

       - Right 32 Bits:            01111011011101010011001001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100111001010010001111101100011001000010111001101011   [Subkey: 13]
          - Input Half:       01111011011101010011001001001100
          - S-Box Result:     11011000110110010001111001110101   [per every group of 4-bits]
          - Split Into Two:   1101100011011001 [L] 0001111001110101 [R]
          - Swap Halves:      00011110011101011101100011011001
          - Bit Inversion:    11100001100010100010011100100110
          - Compressed Key:   10010110100011010011000011000111   [done by compression P-Box]
          - XOR with Key:     01110111000001110001011111100001

          - FUNCTION OUTPUT:  01110111000001110001011111100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111001010100000011110110111

       - FUNCTION OUTPUT:          01110111000001110001011111100001

       - Left XOR FUNCTION OUTPUT: 01010000001011010001000001010110

       - Next Round Left 32 Bits:  01111011011101010011001001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000001011010001000001010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011011101010011001001001100

       - Right 32 Bits:            01010000001011010001000001010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100011010110111000001001110011011110100011001010001   [Subkey: 12]
          - Input Half:       01010000001011010001000001010110
          - S-Box Result:     10011111111001101010111110010000   [per every group of 4-bits]
          - Split Into Two:   1001111111100110 [L] 1010111110010000 [R]
          - Swap Halves:      10101111100100001001111111100110
          - Bit Inversion:    01010000011011110110000000011001
          - Compressed Key:   10010101110110000011111011000010   [done by compression P-Box]
          - XOR with Key:     11000101101101110101111011011011

          - FUNCTION OUTPUT:  11000101101101110101111011011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011011101010011001001001100

       - FUNCTION OUTPUT:          11000101101101110101111011011011

       - Left XOR FUNCTION OUTPUT: 10111110110000100110110010010111

       - Next Round Left 32 Bits:  01010000001011010001000001010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110110000100110110010010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000001011010001000001010110

       - Right 32 Bits:            10111110110000100110110010010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110010100100011111011000110010000101110011010111010   [Subkey: 11]
          - Input Half:       10111110110000100110110010010111
          - S-Box Result:     10001100010111100000010100111101   [per every group of 4-bits]
          - Split Into Two:   1000110001011110 [L] 0000010100111101 [R]
          - Swap Halves:      00000101001111011000110001011110
          - Bit Inversion:    11111010110000100111001110100001
          - Compressed Key:   10111000101111000001011111100101   [done by compression P-Box]
          - XOR with Key:     01000010011111100110010001000100

          - FUNCTION OUTPUT:  01000010011111100110010001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000001011010001000001010110

       - FUNCTION OUTPUT:          01000010011111100110010001000100

       - Left XOR FUNCTION OUTPUT: 00010010010100110111010000010010

       - Next Round Left 32 Bits:  10111110110000100110110010010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010010100110111010000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110110000100110110010010111

       - Right 32 Bits:            00010010010100110111010000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000110101101110000010011100110111101000110010100010100   [Subkey: 10]
          - Input Half:       00010010010100110111010000010010
          - S-Box Result:     10101110100100011101011110101110   [per every group of 4-bits]
          - Split Into Two:   1010111010010001 [L] 1101011110101110 [R]
          - Swap Halves:      11010111101011101010111010010001
          - Bit Inversion:    00101000010100010101000101101110
          - Compressed Key:   00111110000011011011001001011000   [done by compression P-Box]
          - XOR with Key:     00010110010111001110001100110110

          - FUNCTION OUTPUT:  00010110010111001110001100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110110000100110110010010111

       - FUNCTION OUTPUT:          00010110010111001110001100110110

       - Left XOR FUNCTION OUTPUT: 10101000100111101000111110100001

       - Next Round Left 32 Bits:  00010010010100110111010000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101000100111101000111110100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010010100110111010000010010

       - Right 32 Bits:            10101000100111101000111110100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101001000111110110001100100001011100110101110101100   [Subkey: 9]
          - Input Half:       10101000100111101000111110100001
          - S-Box Result:     01000010001111000010101101001010   [per every group of 4-bits]
          - Split Into Two:   0100001000111100 [L] 0010101101001010 [R]
          - Swap Halves:      00101011010010100100001000111100
          - Bit Inversion:    11010100101101011011110111000011
          - Compressed Key:   00010100111010010010011010111100   [done by compression P-Box]
          - XOR with Key:     11000000010111001001101101111111

          - FUNCTION OUTPUT:  11000000010111001001101101111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010010100110111010000010010

       - FUNCTION OUTPUT:          11000000010111001001101101111111

       - Left XOR FUNCTION OUTPUT: 11010010000011111110111101101101

       - Next Round Left 32 Bits:  10101000100111101000111110100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010000011111110111101101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101000100111101000111110100001

       - Right 32 Bits:            11010010000011111110111101101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011011100000100111001101111010001100101000101001100   [Subkey: 8]
          - Input Half:       11010010000011111110111101101101
          - S-Box Result:     01101110111110111100101100000110   [per every group of 4-bits]
          - Split Into Two:   0110111011111011 [L] 1100101100000110 [R]
          - Swap Halves:      11001011000001100110111011111011
          - Bit Inversion:    00110100111110011001000100000100
          - Compressed Key:   10101100011010010101011000011100   [done by compression P-Box]
          - XOR with Key:     10011000100100001100011100011000

          - FUNCTION OUTPUT:  10011000100100001100011100011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101000100111101000111110100001

       - FUNCTION OUTPUT:          10011000100100001100011100011000

       - Left XOR FUNCTION OUTPUT: 00110000000011100100100010111001

       - Next Round Left 32 Bits:  11010010000011111110111101101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000000011100100100010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010000011111110111101101101

       - Right 32 Bits:            00110000000011100100100010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010001111101100011001000010111001101011101011001110   [Subkey: 7]
          - Input Half:       00110000000011100100100010111001
          - S-Box Result:     00011111111111000111001010000011   [per every group of 4-bits]
          - Split Into Two:   0001111111111100 [L] 0111001010000011 [R]
          - Swap Halves:      01110010100000110001111111111100
          - Bit Inversion:    10001101011111001110000000000011
          - Compressed Key:   01101111010010001011010110101101   [done by compression P-Box]
          - XOR with Key:     11100010001101000101010110101110

          - FUNCTION OUTPUT:  11100010001101000101010110101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010000011111110111101101101

       - FUNCTION OUTPUT:          11100010001101000101010110101110

       - Left XOR FUNCTION OUTPUT: 00110000001110111011101011000011

       - Next Round Left 32 Bits:  00110000000011100100100010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000001110111011101011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000000011100100100010111001

       - Right 32 Bits:            00110000001110111011101011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110111000001001110011011110100011001010001010011000110   [Subkey: 6]
          - Input Half:       00110000001110111011101011000011
          - S-Box Result:     00011111000110001000010001010001   [per every group of 4-bits]
          - Split Into Two:   0001111100011000 [L] 1000010001010001 [R]
          - Swap Halves:      10000100010100010001111100011000
          - Bit Inversion:    01111011101011101110000011100111
          - Compressed Key:   01110010110011110011100001101001   [done by compression P-Box]
          - XOR with Key:     00001001011000011101100010001110

          - FUNCTION OUTPUT:  00001001011000011101100010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000000011100100100010111001

       - FUNCTION OUTPUT:          00001001011000011101100010001110

       - Left XOR FUNCTION OUTPUT: 00111001011011111001000000110111

       - Next Round Left 32 Bits:  00110000001110111011101011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001011011111001000000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000001110111011101011000011

       - Right 32 Bits:            00111001011011111001000000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011111011000110010000101110011010111010110011100101   [Subkey: 5]
          - Input Half:       00111001011011111001000000110111
          - S-Box Result:     00010011000010110011111100011101   [per every group of 4-bits]
          - Split Into Two:   0001001100001011 [L] 0011111100011101 [R]
          - Swap Halves:      00111111000111010001001100001011
          - Bit Inversion:    11000000111000101110110011110100
          - Compressed Key:   00100111110000010011110101101010   [done by compression P-Box]
          - XOR with Key:     11100111001000111101000110011110

          - FUNCTION OUTPUT:  11100111001000111101000110011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000001110111011101011000011

       - FUNCTION OUTPUT:          11100111001000111101000110011110

       - Left XOR FUNCTION OUTPUT: 11010111000110000110101101011101

       - Next Round Left 32 Bits:  00111001011011111001000000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111000110000110101101011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001011011111001000000110111

       - Right 32 Bits:            11010111000110000110101101011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010011100110111101000110010100010100110001101011   [Subkey: 4]
          - Input Half:       11010111000110000110101101011101
          - S-Box Result:     01101101101000100000100010010110   [per every group of 4-bits]
          - Split Into Two:   0110110110100010 [L] 0000100010010110 [R]
          - Swap Halves:      00001000100101100110110110100010
          - Bit Inversion:    11110111011010011001001001011101
          - Compressed Key:   01000011111010000001101001000111   [done by compression P-Box]
          - XOR with Key:     10110100100000011000100000011010

          - FUNCTION OUTPUT:  10110100100000011000100000011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001011011111001000000110111

       - FUNCTION OUTPUT:          10110100100000011000100000011010

       - Left XOR FUNCTION OUTPUT: 10001101111011100001100000101101

       - Next Round Left 32 Bits:  11010111000110000110101101011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001101111011100001100000101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111000110000110101101011101

       - Right 32 Bits:            10001101111011100001100000101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111110110001100100001011100110101110101100111001010010   [Subkey: 3]
          - Input Half:       10001101111011100001100000101101
          - S-Box Result:     00100110110011001010001011100110   [per every group of 4-bits]
          - Split Into Two:   0010011011001100 [L] 1010001011100110 [R]
          - Swap Halves:      10100010111001100010011011001100
          - Bit Inversion:    01011101000110011101100100110011
          - Compressed Key:   11110010010011011010011111000001   [done by compression P-Box]
          - XOR with Key:     10101111010101000111111011110010

          - FUNCTION OUTPUT:  10101111010101000111111011110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111000110000110101101011101

       - FUNCTION OUTPUT:          10101111010101000111111011110010

       - Left XOR FUNCTION OUTPUT: 01111000010011000001010110101111

       - Next Round Left 32 Bits:  10001101111011100001100000101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000010011000001010110101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001101111011100001100000101101

       - Right 32 Bits:            01111000010011000001010110101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000100111001101111010001100101000101001100011010110111   [Subkey: 2]
          - Input Half:       01111000010011000001010110101111
          - S-Box Result:     11010010011101011010100101001011   [per every group of 4-bits]
          - Split Into Two:   1101001001110101 [L] 1010100101001011 [R]
          - Swap Halves:      10101001010010111101001001110101
          - Bit Inversion:    01010110101101000010110110001010
          - Compressed Key:   00010110110110010100001111101011   [done by compression P-Box]
          - XOR with Key:     01000000011011010110111001100001

          - FUNCTION OUTPUT:  01000000011011010110111001100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001101111011100001100000101101

       - FUNCTION OUTPUT:          01000000011011010110111001100001

       - Left XOR FUNCTION OUTPUT: 11001101100000110111011001001100

       - Next Round Left 32 Bits:  01111000010011000001010110101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001101100000110111011001001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000010011000001010110101111

       - Right 32 Bits:            11001101100000110111011001001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101100011001000010111001101011101011001110010100100011   [Subkey: 1]
          - Input Half:       11001101100000110111011001001100
          - S-Box Result:     01010110001000011101000001110101   [per every group of 4-bits]
          - Split Into Two:   0101011000100001 [L] 1101000001110101 [R]
          - Swap Halves:      11010000011101010101011000100001
          - Bit Inversion:    00101111100010101010100111011110
          - Compressed Key:   10010110101010011110001101010011   [done by compression P-Box]
          - XOR with Key:     10111001001000110100101010001101

          - FUNCTION OUTPUT:  10111001001000110100101010001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000010011000001010110101111

       - FUNCTION OUTPUT:          10111001001000110100101010001101

       - Left XOR FUNCTION OUTPUT: 11000001011011110101111100100010

       - Next Round Left 32 Bits:  11001101100000110111011001001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001011011110101111100100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100000101101111010111110010001011001101100000110111011001001100

 > Decrypted Block:     1100000101101111010111110010001011001101100000110111011001001100


!!!CBC: Previous Ciphertext:                             1110000100111101000011000110001111101101111010000001001100110101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001010010010100110100000100100000011010110110010101111001

 > Final Processed Block:                                0010000001010010010100110100000100100000011010110110010101111001



Ciphertext Block 6:                                      1110011111100111011100001011000000010000000101000110011111000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100111111001110111000010110000

       - Right 32 Bits:            00010000000101000110011111000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010011000110101101110000010011100110111101000110   [Subkey: 16]
          - Input Half:       00010000000101000110011111000111
          - S-Box Result:     10101111101001110000110101011101   [per every group of 4-bits]
          - Split Into Two:   1010111110100111 [L] 0000110101011101 [R]
          - Swap Halves:      00001101010111011010111110100111
          - Bit Inversion:    11110010101000100101000001011000
          - Compressed Key:   01000011111010110001011011011001   [done by compression P-Box]
          - XOR with Key:     10110001010010010100011010000001

          - FUNCTION OUTPUT:  10110001010010010100011010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100111111001110111000010110000

       - FUNCTION OUTPUT:          10110001010010010100011010000001

       - Left XOR FUNCTION OUTPUT: 01010110101011100011011000110001

       - Next Round Left 32 Bits:  00010000000101000110011111000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110101011100011011000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010000000101000110011111000111

       - Right 32 Bits:            01010110101011100011011000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111010110011100101001000111110110001100100001011100110   [Subkey: 15]
          - Input Half:       01010110101011100011011000110001
          - S-Box Result:     10010000010011000001000000011010   [per every group of 4-bits]
          - Split Into Two:   1001000001001100 [L] 0001000000011010 [R]
          - Swap Halves:      00010000000110101001000001001100
          - Bit Inversion:    11101111111001010110111110110011
          - Compressed Key:   11100011010100111001011010101001   [done by compression P-Box]
          - XOR with Key:     00001100101101101111100100011010

          - FUNCTION OUTPUT:  00001100101101101111100100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010000000101000110011111000111

       - FUNCTION OUTPUT:          00001100101101101111100100011010

       - Left XOR FUNCTION OUTPUT: 00011100101000101001111011011101

       - Next Round Left 32 Bits:  01010110101011100011011000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100101000101001111011011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110101011100011011000110001

       - Right 32 Bits:            00011100101000101001111011011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010100110001101011011100000100111001101111010001100101   [Subkey: 14]
          - Input Half:       00011100101000101001111011011101
          - S-Box Result:     10100101010011100011110001100110   [per every group of 4-bits]
          - Split Into Two:   1010010101001110 [L] 0011110001100110 [R]
          - Swap Halves:      00111100011001101010010101001110
          - Bit Inversion:    11000011100110010101101010110001
          - Compressed Key:   01010010100100001011011101001010   [done by compression P-Box]
          - XOR with Key:     10010001000010011110110111111011

          - FUNCTION OUTPUT:  10010001000010011110110111111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110101011100011011000110001

       - FUNCTION OUTPUT:          10010001000010011110110111111011

       - Left XOR FUNCTION OUTPUT: 11000111101001111101101111001010

       - Next Round Left 32 Bits:  00011100101000101001111011011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111101001111101101111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100101000101001111011011101

       - Right 32 Bits:            11000111101001111101101111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10101100111001010010001111101100011001000010111001101011   [Subkey: 13]
          - Input Half:       11000111101001111101101111001010
          - S-Box Result:     01011101010011010110100001010100   [per every group of 4-bits]
          - Split Into Two:   0101110101001101 [L] 0110100001010100 [R]
          - Swap Halves:      01101000010101000101110101001101
          - Bit Inversion:    10010111101010111010001010110010
          - Compressed Key:   10010110100011010011000011000111   [done by compression P-Box]
          - XOR with Key:     00000001001001101001001001110101

          - FUNCTION OUTPUT:  00000001001001101001001001110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100101000101001111011011101

       - FUNCTION OUTPUT:          00000001001001101001001001110101

       - Left XOR FUNCTION OUTPUT: 00011101100001000000110010101000

       - Next Round Left 32 Bits:  11000111101001111101101111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101100001000000110010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111101001111101101111001010

       - Right 32 Bits:            00011101100001000000110010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001100011010110111000001001110011011110100011001010001   [Subkey: 12]
          - Input Half:       00011101100001000000110010101000
          - S-Box Result:     10100110001001111111010101000010   [per every group of 4-bits]
          - Split Into Two:   1010011000100111 [L] 1111010101000010 [R]
          - Swap Halves:      11110101010000101010011000100111
          - Bit Inversion:    00001010101111010101100111011000
          - Compressed Key:   10010101110110000011111011000010   [done by compression P-Box]
          - XOR with Key:     10011111011001010110011100011010

          - FUNCTION OUTPUT:  10011111011001010110011100011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111101001111101101111001010

       - FUNCTION OUTPUT:          10011111011001010110011100011010

       - Left XOR FUNCTION OUTPUT: 01011000110000101011110011010000

       - Next Round Left 32 Bits:  00011101100001000000110010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000110000101011110011010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101100001000000110010101000

       - Right 32 Bits:            01011000110000101011110011010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001110010100100011111011000110010000101110011010111010   [Subkey: 11]
          - Input Half:       01011000110000101011110011010000
          - S-Box Result:     10010010010111101000010101101111   [per every group of 4-bits]
          - Split Into Two:   1001001001011110 [L] 1000010101101111 [R]
          - Swap Halves:      10000101011011111001001001011110
          - Bit Inversion:    01111010100100000110110110100001
          - Compressed Key:   10111000101111000001011111100101   [done by compression P-Box]
          - XOR with Key:     11000010001011000111101001000100

          - FUNCTION OUTPUT:  11000010001011000111101001000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101100001000000110010101000

       - FUNCTION OUTPUT:          11000010001011000111101001000100

       - Left XOR FUNCTION OUTPUT: 11011111101010000111011011101100

       - Next Round Left 32 Bits:  01011000110000101011110011010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111101010000111011011101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000110000101011110011010000

       - Right 32 Bits:            11011111101010000111011011101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11000110101101110000010011100110111101000110010100010100   [Subkey: 10]
          - Input Half:       11011111101010000111011011101100
          - S-Box Result:     01101011010000101101000011000101   [per every group of 4-bits]
          - Split Into Two:   0110101101000010 [L] 1101000011000101 [R]
          - Swap Halves:      11010000110001010110101101000010
          - Bit Inversion:    00101111001110101001010010111101
          - Compressed Key:   00111110000011011011001001011000   [done by compression P-Box]
          - XOR with Key:     00010001001101110010011011100101

          - FUNCTION OUTPUT:  00010001001101110010011011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000110000101011110011010000

       - FUNCTION OUTPUT:          00010001001101110010011011100101

       - Left XOR FUNCTION OUTPUT: 01001001111101011001101000110101

       - Next Round Left 32 Bits:  11011111101010000111011011101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001001111101011001101000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111101010000111011011101100

       - Right 32 Bits:            01001001111101011001101000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100101001000111110110001100100001011100110101110101100   [Subkey: 9]
          - Input Half:       01001001111101011001101000110101
          - S-Box Result:     01110011101110010011010000011001   [per every group of 4-bits]
          - Split Into Two:   0111001110111001 [L] 0011010000011001 [R]
          - Swap Halves:      00110100000110010111001110111001
          - Bit Inversion:    11001011111001101000110001000110
          - Compressed Key:   00010100111010010010011010111100   [done by compression P-Box]
          - XOR with Key:     11011111000011111010101011111010

          - FUNCTION OUTPUT:  11011111000011111010101011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111101010000111011011101100

       - FUNCTION OUTPUT:          11011111000011111010101011111010

       - Left XOR FUNCTION OUTPUT: 00000000101001111101110000010110

       - Next Round Left 32 Bits:  01001001111101011001101000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000000101001111101110000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001001111101011001101000110101

       - Right 32 Bits:            00000000101001111101110000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01101011011100000100111001101111010001100101000101001100   [Subkey: 8]
          - Input Half:       00000000101001111101110000010110
          - S-Box Result:     11111111010011010110010110100000   [per every group of 4-bits]
          - Split Into Two:   1111111101001101 [L] 0110010110100000 [R]
          - Swap Halves:      01100101101000001111111101001101
          - Bit Inversion:    10011010010111110000000010110010
          - Compressed Key:   10101100011010010101011000011100   [done by compression P-Box]
          - XOR with Key:     00110110001101100101011010101110

          - FUNCTION OUTPUT:  00110110001101100101011010101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001001111101011001101000110101

       - FUNCTION OUTPUT:          00110110001101100101011010101110

       - Left XOR FUNCTION OUTPUT: 01111111110000111100110010011011

       - Next Round Left 32 Bits:  00000000101001111101110000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111110000111100110010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000000101001111101110000010110

       - Right 32 Bits:            01111111110000111100110010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010010001111101100011001000010111001101011101011001110   [Subkey: 7]
          - Input Half:       01111111110000111100110010011011
          - S-Box Result:     11011011010100010101010100111000   [per every group of 4-bits]
          - Split Into Two:   1101101101010001 [L] 0101010100111000 [R]
          - Swap Halves:      01010101001110001101101101010001
          - Bit Inversion:    10101010110001110010010010101110
          - Compressed Key:   01101111010010001011010110101101   [done by compression P-Box]
          - XOR with Key:     11000101100011111001000100000011

          - FUNCTION OUTPUT:  11000101100011111001000100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000000101001111101110000010110

       - FUNCTION OUTPUT:          11000101100011111001000100000011

       - Left XOR FUNCTION OUTPUT: 11000101001010000100110100010101

       - Next Round Left 32 Bits:  01111111110000111100110010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000101001010000100110100010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111110000111100110010011011

       - Right 32 Bits:            11000101001010000100110100010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110111000001001110011011110100011001010001010011000110   [Subkey: 6]
          - Input Half:       11000101001010000100110100010101
          - S-Box Result:     01011001111000100111011010101001   [per every group of 4-bits]
          - Split Into Two:   0101100111100010 [L] 0111011010101001 [R]
          - Swap Halves:      01110110101010010101100111100010
          - Bit Inversion:    10001001010101101010011000011101
          - Compressed Key:   01110010110011110011100001101001   [done by compression P-Box]
          - XOR with Key:     11111011100110011001111001110100

          - FUNCTION OUTPUT:  11111011100110011001111001110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111110000111100110010011011

       - FUNCTION OUTPUT:          11111011100110011001111001110100

       - Left XOR FUNCTION OUTPUT: 10000100010110100101001011101111

       - Next Round Left 32 Bits:  11000101001010000100110100010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100010110100101001011101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000101001010000100110100010101

       - Right 32 Bits:            10000100010110100101001011101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011111011000110010000101110011010111010110011100101   [Subkey: 5]
          - Input Half:       10000100010110100101001011101111
          - S-Box Result:     00100111100101001001111011001011   [per every group of 4-bits]
          - Split Into Two:   0010011110010100 [L] 1001111011001011 [R]
          - Swap Halves:      10011110110010110010011110010100
          - Bit Inversion:    01100001001101001101100001101011
          - Compressed Key:   00100111110000010011110101101010   [done by compression P-Box]
          - XOR with Key:     01000110111101011110010100000001

          - FUNCTION OUTPUT:  01000110111101011110010100000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000101001010000100110100010101

       - FUNCTION OUTPUT:          01000110111101011110010100000001

       - Left XOR FUNCTION OUTPUT: 10000011110111011010100000010100

       - Next Round Left 32 Bits:  10000100010110100101001011101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011110111011010100000010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100010110100101001011101111

       - Right 32 Bits:            10000011110111011010100000010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010011100110111101000110010100010100110001101011   [Subkey: 4]
          - Input Half:       10000011110111011010100000010100
          - S-Box Result:     00100001011001100100001010100111   [per every group of 4-bits]
          - Split Into Two:   0010000101100110 [L] 0100001010100111 [R]
          - Swap Halves:      01000010101001110010000101100110
          - Bit Inversion:    10111101010110001101111010011001
          - Compressed Key:   01000011111010000001101001000111   [done by compression P-Box]
          - XOR with Key:     11111110101100001100010011011110

          - FUNCTION OUTPUT:  11111110101100001100010011011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100010110100101001011101111

       - FUNCTION OUTPUT:          11111110101100001100010011011110

       - Left XOR FUNCTION OUTPUT: 01111010111010101001011000110001

       - Next Round Left 32 Bits:  10000011110111011010100000010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010111010101001011000110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011110111011010100000010100

       - Right 32 Bits:            01111010111010101001011000110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111110110001100100001011100110101110101100111001010010   [Subkey: 3]
          - Input Half:       01111010111010101001011000110001
          - S-Box Result:     11010100110001000011000000011010   [per every group of 4-bits]
          - Split Into Two:   1101010011000100 [L] 0011000000011010 [R]
          - Swap Halves:      00110000000110101101010011000100
          - Bit Inversion:    11001111111001010010101100111011
          - Compressed Key:   11110010010011011010011111000001   [done by compression P-Box]
          - XOR with Key:     00111101101010001000110011111010

          - FUNCTION OUTPUT:  00111101101010001000110011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011110111011010100000010100

       - FUNCTION OUTPUT:          00111101101010001000110011111010

       - Left XOR FUNCTION OUTPUT: 10111110011101010010010011101110

       - Next Round Left 32 Bits:  01111010111010101001011000110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110011101010010010011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010111010101001011000110001

       - Right 32 Bits:            10111110011101010010010011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00000100111001101111010001100101000101001100011010110111   [Subkey: 2]
          - Input Half:       10111110011101010010010011101110
          - S-Box Result:     10001100110110011110011111001100   [per every group of 4-bits]
          - Split Into Two:   1000110011011001 [L] 1110011111001100 [R]
          - Swap Halves:      11100111110011001000110011011001
          - Bit Inversion:    00011000001100110111001100100110
          - Compressed Key:   00010110110110010100001111101011   [done by compression P-Box]
          - XOR with Key:     00001110111010100011000011001101

          - FUNCTION OUTPUT:  00001110111010100011000011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010111010101001011000110001

       - FUNCTION OUTPUT:          00001110111010100011000011001101

       - Left XOR FUNCTION OUTPUT: 01110100000000001010011011111100

       - Next Round Left 32 Bits:  10111110011101010010010011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100000000001010011011111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110011101010010010011101110

       - Right 32 Bits:            01110100000000001010011011111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11101100011001000010111001101011101011001110010100100011   [Subkey: 1]
          - Input Half:       01110100000000001010011011111100
          - S-Box Result:     11010111111111110100000010110101   [per every group of 4-bits]
          - Split Into Two:   1101011111111111 [L] 0100000010110101 [R]
          - Swap Halves:      01000000101101011101011111111111
          - Bit Inversion:    10111111010010100010100000000000
          - Compressed Key:   10010110101010011110001101010011   [done by compression P-Box]
          - XOR with Key:     00101001111000111100101101010011

          - FUNCTION OUTPUT:  00101001111000111100101101010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110011101010010010011101110

       - FUNCTION OUTPUT:          00101001111000111100101101010011

       - Left XOR FUNCTION OUTPUT: 10010111100101101110111110111101

       - Next Round Left 32 Bits:  01110100000000001010011011111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111100101101110111110111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001011110010110111011111011110101110100000000001010011011111100

 > Decrypted Block:     1001011110010110111011111011110101110100000000001010011011111100


!!!CBC: Previous Ciphertext:                             1011011111100110100011101101010000000110001000001000011011011100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001110000011000010110100101110010001000000010000000100000

 > Final Processed Block:                                0010000001110000011000010110100101110010001000000010000000100000


FINAL PROCESSED DATA BLOCKS: 0100100001100101011011000110110001101111001000000111001101100101,0111001001110110011001010111001000101100001000000100100100100000,0111011101101111011101010110110001100100001000000110110001101001,0110101101100101001000000110000100100000011011100110010101110111,0010000001010010010100110100000100100000011010110110010101111001,0010000001110000011000010110100101110010001000000010000000100000,

BLOCKS IN ASCII:             Hello server, I would like a new RSA key pair   

