Triple DES Capture

168-bit key: qS4enOP1eTpTeMIqwQSo2

3 x 56-bit DES keys: qS4enOP, 1eTpTeM, IqwQSo2

Initialization Vector: BpPpstr5

=========================================================================================================================
STAGE 1: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: IqwQSo2
In Binary:  01001001011100010111011101010001010100110110111100110010

Subkeys:    Key i = Key (i - 1) [Shifted left by 3 and then inverted]

Subkey 1  : 10110100011101000100010101110101011001001000011001101101
Subkey 2  : 01011100010111011101010001010100110110111100110010010010
Subkey 3  : 00011101000100010101110101011001001000011001101101101101
Subkey 4  : 00010111011101010001010100110110111100110010010010010111
Subkey 5  : 01000100010101110101011001001000011001101101101101000111
Subkey 6  : 11011101010001010100110110111100110010010010010111000101
Subkey 7  : 00010101110101011001001000011001101101101101000111010001
Subkey 8  : 01010001010100110110111100110010010010010111000101110111
Subkey 9  : 01110101011001001000011001101101101101000111010001000101
Subkey 10 : 01010100110110111100110010010010010111000101110111010100
Subkey 11 : 01011001001000011001101101101101000111010001000101011101
Subkey 12 : 00110110111100110010010010010111000101110111010100010101
Subkey 13 : 01001000011001101101101101000111010001000101011101010110
Subkey 14 : 10111100110010010010010111000101110111010100010101001101
Subkey 15 : 00011001101101101101000111010001000101011101010110010010
Subkey 16 : 00110010010010010111000101110111010100010101001101101111

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : ºýØß³®?-?Só¹ÿ¹Ípá?{¡õÊ£ÙkÕ×<=\æ/ÛÝ%ÞÖZ?:ü#+?(

Data padded with spaces : ºýØß³®?-?Só¹ÿ¹Ípá?{¡õÊ£ÙkÕ×<=\æ/ÛÝ%ÞÖZ?:ü#+?([Padded with '0' spaces]

Data in ASCII           : 186,253,216,21,223,179,174,140,45,141,15,21,83,243,185,255,185,205,112,225,152,123,161,245,202,163,217,107,213,215,60,61,92,230,47,219,221,37,222,214,90,142,58,252,35,43,146,40,

Data in Binary          : 10111010,11111101,11011000,00010101,11011111,10110011,10101110,10001100,00101101,10001101,00001111,00010101,01010011,11110011,10111001,11111111,10111001,11001101,01110000,11100001,10011000,01111011,10100001,11110101,11001010,10100011,11011001,01101011,11010101,11010111,00111100,00111101,01011100,11100110,00101111,11011011,11011101,00100101,11011110,11010110,01011010,10001110,00111010,11111100,00100011,00101011,10010010,00101000,

Data in 64-bit Blocks   : 1011101011111101110110000001010111011111101100111010111010001100,0010110110001101000011110001010101010011111100111011100111111111,1011100111001101011100001110000110011000011110111010000111110101,1100101010100011110110010110101111010101110101110011110000111101,0101110011100110001011111101101111011101001001011101111011010110,0101101010001110001110101111110000100011001010111001001000101000,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0100001001110000010100000111000001110011011101000111001000110101)

Ciphertext Block 1:                                      1011101011111101110110000001010111011111101100111010111010001100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010111111011101100000010101

       - Right 32 Bits:            11011111101100111010111010001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010010010111000101110111010100010101001101101111   [Subkey: 16]
          - Input Half:       11011111101100111010111010001100
          - S-Box Result:     01101011100000010100110000100101   [per every group of 4-bits]
          - Split Into Two:   0110101110000001 [L] 0100110000100101 [R]
          - Swap Halves:      01001100001001010110101110000001
          - Bit Inversion:    10110011110110101001010001111110
          - Compressed Key:   01100001110110110101101010011111   [done by compression P-Box]
          - XOR with Key:     11010010000000011100111011100001

          - FUNCTION OUTPUT:  11010010000000011100111011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010111111011101100000010101

       - FUNCTION OUTPUT:          11010010000000011100111011100001

       - Left XOR FUNCTION OUTPUT: 01101000111111000001011011110100

       - Next Round Left 32 Bits:  11011111101100111010111010001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000111111000001011011110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111101100111010111010001100

       - Right 32 Bits:            01101000111111000001011011110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001101101101101000111010001000101011101010110010010   [Subkey: 15]
          - Input Half:       01101000111111000001011011110100
          - S-Box Result:     00000010101101011010000010110111   [per every group of 4-bits]
          - Split Into Two:   0000001010110101 [L] 1010000010110111 [R]
          - Swap Halves:      10100000101101110000001010110101
          - Bit Inversion:    01011111010010001111110101001010
          - Compressed Key:   11001110010111100100101101110001   [done by compression P-Box]
          - XOR with Key:     10010001000101101011011000111011

          - FUNCTION OUTPUT:  10010001000101101011011000111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111101100111010111010001100

       - FUNCTION OUTPUT:          10010001000101101011011000111011

       - Left XOR FUNCTION OUTPUT: 01001110101001010001100010110111

       - Next Round Left 32 Bits:  01101000111111000001011011110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110101001010001100010110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000111111000001011011110100

       - Right 32 Bits:            01001110101001010001100010110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100110010010010010111000101110111010100010101001101   [Subkey: 14]
          - Input Half:       01001110101001010001100010110111
          - S-Box Result:     01111100010010011010001010001101   [per every group of 4-bits]
          - Split Into Two:   0111110001001001 [L] 1010001010001101 [R]
          - Swap Halves:      10100010100011010111110001001001
          - Bit Inversion:    01011101011100101000001110110110
          - Compressed Key:   11010001100011001101101001011110   [done by compression P-Box]
          - XOR with Key:     10001100111111100101100111101000

          - FUNCTION OUTPUT:  10001100111111100101100111101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000111111000001011011110100

       - FUNCTION OUTPUT:          10001100111111100101100111101000

       - Left XOR FUNCTION OUTPUT: 11100100000000100100111100011100

       - Next Round Left 32 Bits:  01001110101001010001100010110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100000000100100111100011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110101001010001100010110111

       - Right 32 Bits:            11100100000000100100111100011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011001101101101101000111010001000101011101010110   [Subkey: 13]
          - Input Half:       11100100000000100100111100011100
          - S-Box Result:     11000111111111100111101110100101   [per every group of 4-bits]
          - Split Into Two:   1100011111111110 [L] 0111101110100101 [R]
          - Swap Halves:      01111011101001011100011111111110
          - Bit Inversion:    10000100010110100011100000000001
          - Compressed Key:   10000110011110000101001011011001   [done by compression P-Box]
          - XOR with Key:     00000010001000100110101011011000

          - FUNCTION OUTPUT:  00000010001000100110101011011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110101001010001100010110111

       - FUNCTION OUTPUT:          00000010001000100110101011011000

       - Left XOR FUNCTION OUTPUT: 01001100100001110111001001101111

       - Next Round Left 32 Bits:  11100100000000100100111100011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001100100001110111001001101111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100000000100100111100011100

       - Right 32 Bits:            01001100100001110111001001101111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110111100110010010010010111000101110111010100010101   [Subkey: 12]
          - Input Half:       01001100100001110111001001101111
          - S-Box Result:     01110101001011011101111000001011   [per every group of 4-bits]
          - Split Into Two:   0111010100101101 [L] 1101111000001011 [R]
          - Swap Halves:      11011110000010110111010100101101
          - Bit Inversion:    00100001111101001000101011010010
          - Compressed Key:   01111100100001100100111001011010   [done by compression P-Box]
          - XOR with Key:     01011101011100101100010010001000

          - FUNCTION OUTPUT:  01011101011100101100010010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100000000100100111100011100

       - FUNCTION OUTPUT:          01011101011100101100010010001000

       - Left XOR FUNCTION OUTPUT: 10111001011100001000101110010100

       - Next Round Left 32 Bits:  01001100100001110111001001101111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001011100001000101110010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100100001110111001001101111

       - Right 32 Bits:            10111001011100001000101110010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001000011001101101101101000111010001000101011101   [Subkey: 11]
          - Input Half:       10111001011100001000101110010100
          - S-Box Result:     10000011110111110010100000110111   [per every group of 4-bits]
          - Split Into Two:   1000001111011111 [L] 0010100000110111 [R]
          - Swap Halves:      00101000001101111000001111011111
          - Bit Inversion:    11010111110010000111110000100000
          - Compressed Key:   11000100001110010100100000011110   [done by compression P-Box]
          - XOR with Key:     00010011111100010011010000111110

          - FUNCTION OUTPUT:  00010011111100010011010000111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100100001110111001001101111

       - FUNCTION OUTPUT:          00010011111100010011010000111110

       - Left XOR FUNCTION OUTPUT: 01011111011101100100011001010001

       - Next Round Left 32 Bits:  10111001011100001000101110010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011111011101100100011001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001011100001000101110010100

       - Right 32 Bits:            01011111011101100100011001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110110111100110010010010010111000101110111010100   [Subkey: 10]
          - Input Half:       01011111011101100100011001010001
          - S-Box Result:     10011011110100000111000010011010   [per every group of 4-bits]
          - Split Into Two:   1001101111010000 [L] 0111000010011010 [R]
          - Swap Halves:      01110000100110101001101111010000
          - Bit Inversion:    10001111011001010110010000101111
          - Compressed Key:   01011001011001100001001001111000   [done by compression P-Box]
          - XOR with Key:     11010110000000110111011001010111

          - FUNCTION OUTPUT:  11010110000000110111011001010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001011100001000101110010100

       - FUNCTION OUTPUT:          11010110000000110111011001010111

       - Left XOR FUNCTION OUTPUT: 01101111011100111111110111000011

       - Next Round Left 32 Bits:  01011111011101100100011001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101111011100111111110111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011111011101100100011001010001

       - Right 32 Bits:            01101111011100111111110111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001001000011001101101101101000111010001000101   [Subkey: 9]
          - Input Half:       01101111011100111111110111000011
          - S-Box Result:     00001011110100011011011001010001   [per every group of 4-bits]
          - Split Into Two:   0000101111010001 [L] 1011011001010001 [R]
          - Swap Halves:      10110110010100010000101111010001
          - Bit Inversion:    01001001101011101111010000101110
          - Compressed Key:   01010110000010011110001001001010   [done by compression P-Box]
          - XOR with Key:     00011111101001110001011001100100

          - FUNCTION OUTPUT:  00011111101001110001011001100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011111011101100100011001010001

       - FUNCTION OUTPUT:          00011111101001110001011001100100

       - Left XOR FUNCTION OUTPUT: 01000000110100010101000000110101

       - Next Round Left 32 Bits:  01101111011100111111110111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000000110100010101000000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101111011100111111110111000011

       - Right 32 Bits:            01000000110100010101000000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100110110111100110010010010010111000101110111   [Subkey: 8]
          - Input Half:       01000000110100010101000000110101
          - S-Box Result:     01111111011010101001111100011001   [per every group of 4-bits]
          - Split Into Two:   0111111101101010 [L] 1001111100011001 [R]
          - Swap Halves:      10011111000110010111111101101010
          - Bit Inversion:    01100000111001101000000010010101
          - Compressed Key:   01001000111000110001101000011011   [done by compression P-Box]
          - XOR with Key:     00101000000001011001101010001110

          - FUNCTION OUTPUT:  00101000000001011001101010001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101111011100111111110111000011

       - FUNCTION OUTPUT:          00101000000001011001101010001110

       - Left XOR FUNCTION OUTPUT: 01000111011101100110011101001101

       - Next Round Left 32 Bits:  01000000110100010101000000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111011101100110011101001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000000110100010101000000110101

       - Right 32 Bits:            01000111011101100110011101001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101110101011001001000011001101101101101000111010001   [Subkey: 7]
          - Input Half:       01000111011101100110011101001101
          - S-Box Result:     01111101110100000000110101110110   [per every group of 4-bits]
          - Split Into Two:   0111110111010000 [L] 0000110101110110 [R]
          - Swap Halves:      00001101011101100111110111010000
          - Bit Inversion:    11110010100010011000001000101111
          - Compressed Key:   01011010000100101110011100110010   [done by compression P-Box]
          - XOR with Key:     10101000100110110110010100011101

          - FUNCTION OUTPUT:  10101000100110110110010100011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000000110100010101000000110101

       - FUNCTION OUTPUT:          10101000100110110110010100011101

       - Left XOR FUNCTION OUTPUT: 11101000010010100011010100101000

       - Next Round Left 32 Bits:  01000111011101100110011101001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000010010100011010100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111011101100110011101001101

       - Right 32 Bits:            11101000010010100011010100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010001010100110110111100110010010010010111000101   [Subkey: 6]
          - Input Half:       11101000010010100011010100101000
          - S-Box Result:     11000010011101000001100111100010   [per every group of 4-bits]
          - Split Into Two:   1100001001110100 [L] 0001100111100010 [R]
          - Swap Halves:      00011001111000101100001001110100
          - Bit Inversion:    11100110000111010011110110001011
          - Compressed Key:   11010010011001111001100001111010   [done by compression P-Box]
          - XOR with Key:     00110100011110101010010111110001

          - FUNCTION OUTPUT:  00110100011110101010010111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111011101100110011101001101

       - FUNCTION OUTPUT:          00110100011110101010010111110001

       - Left XOR FUNCTION OUTPUT: 01110011000011001100001010111100

       - Next Round Left 32 Bits:  11101000010010100011010100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110011000011001100001010111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000010010100011010100101000

       - Right 32 Bits:            01110011000011001100001010111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101110101011001001000011001101101101101000111   [Subkey: 5]
          - Input Half:       01110011000011001100001010111100
          - S-Box Result:     11010001111101010101111010000101   [per every group of 4-bits]
          - Split Into Two:   1101000111110101 [L] 0101111010000101 [R]
          - Swap Halves:      01011110100001011101000111110101
          - Bit Inversion:    10100001011110100010111000001010
          - Compressed Key:   00011010010110000011011110011011   [done by compression P-Box]
          - XOR with Key:     10111011001000100001100110010001

          - FUNCTION OUTPUT:  10111011001000100001100110010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000010010100011010100101000

       - FUNCTION OUTPUT:          10111011001000100001100110010001

       - Left XOR FUNCTION OUTPUT: 01010011011010000010110010111001

       - Next Round Left 32 Bits:  01110011000011001100001010111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011011010000010110010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110011000011001100001010111100

       - Right 32 Bits:            01010011011010000010110010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111011101010001010100110110111100110010010010010111   [Subkey: 4]
          - Input Half:       01010011011010000010110010111001
          - S-Box Result:     10010001000000101110010110000011   [per every group of 4-bits]
          - Split Into Two:   1001000100000010 [L] 1110010110000011 [R]
          - Swap Halves:      11100101100000111001000100000010
          - Bit Inversion:    00011010011111000110111011111101
          - Compressed Key:   01111110000100111011110001101011   [done by compression P-Box]
          - XOR with Key:     01100100011011111101001010010110

          - FUNCTION OUTPUT:  01100100011011111101001010010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110011000011001100001010111100

       - FUNCTION OUTPUT:          01100100011011111101001010010110

       - Left XOR FUNCTION OUTPUT: 00010111011000110001000000101010

       - Next Round Left 32 Bits:  01010011011010000010110010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010111011000110001000000101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011011010000010110010111001

       - Right 32 Bits:            00010111011000110001000000101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101000100010101110101011001001000011001101101101101   [Subkey: 3]
          - Input Half:       00010111011000110001000000101010
          - S-Box Result:     10101101000000011010111111100100   [per every group of 4-bits]
          - Split Into Two:   1010110100000001 [L] 1010111111100100 [R]
          - Swap Halves:      10101111111001001010110100000001
          - Bit Inversion:    01010000000110110101001011111110
          - Compressed Key:   11011000011110100110100110011110   [done by compression P-Box]
          - XOR with Key:     10001000011000010011101101100000

          - FUNCTION OUTPUT:  10001000011000010011101101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011011010000010110010111001

       - FUNCTION OUTPUT:          10001000011000010011101101100000

       - Left XOR FUNCTION OUTPUT: 11011011000010010001011111011001

       - Next Round Left 32 Bits:  00010111011000110001000000101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011000010010001011111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010111011000110001000000101010

       - Right 32 Bits:            11011011000010010001011111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010111011101010001010100110110111100110010010010   [Subkey: 2]
          - Input Half:       11011011000010010001011111011001
          - S-Box Result:     01101000111100111010110101100011   [per every group of 4-bits]
          - Split Into Two:   0110100011110011 [L] 1010110101100011 [R]
          - Swap Halves:      10101101011000110110100011110011
          - Bit Inversion:    01010010100111001001011100001100
          - Compressed Key:   11011011010110101001111101100001   [done by compression P-Box]
          - XOR with Key:     10001001110001100000100001101101

          - FUNCTION OUTPUT:  10001001110001100000100001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010111011000110001000000101010

       - FUNCTION OUTPUT:          10001001110001100000100001101101

       - Left XOR FUNCTION OUTPUT: 10011110101001010001100001000111

       - Next Round Left 32 Bits:  11011011000010010001011111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011110101001010001100001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011000010010001011111011001

       - Right 32 Bits:            10011110101001010001100001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101000100010101110101011001001000011001101101   [Subkey: 1]
          - Input Half:       10011110101001010001100001000111
          - S-Box Result:     00111100010010011010001001111101   [per every group of 4-bits]
          - Split Into Two:   0011110001001001 [L] 1010001001111101 [R]
          - Swap Halves:      10100010011111010011110001001001
          - Bit Inversion:    01011101100000101100001110110110
          - Compressed Key:   01011110010010110111000111001110   [done by compression P-Box]
          - XOR with Key:     00000011110010011011001001111000

          - FUNCTION OUTPUT:  00000011110010011011001001111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011000010010001011111011001

       - FUNCTION OUTPUT:          00000011110010011011001001111000

       - Left XOR FUNCTION OUTPUT: 11011000110000001010010110100001

       - Next Round Left 32 Bits:  10011110101001010001100001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011000110000001010010110100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101100011000000101001011010000110011110101001010001100001000111

 > Decrypted Block:     1101100011000000101001011010000110011110101001010001100001000111


!!!CBC: Previous Ciphertext:                             0100001001110000010100000111000001110011011101000111001000110101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1001101010110000111101011101000111101101110100010110101001110010

 > Final Processed Block:                                1001101010110000111101011101000111101101110100010110101001110010



Ciphertext Block 2:                                      0010110110001101000011110001010101010011111100111011100111111111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101101100011010000111100010101

       - Right 32 Bits:            01010011111100111011100111111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010010010111000101110111010100010101001101101111   [Subkey: 16]
          - Input Half:       01010011111100111011100111111111
          - S-Box Result:     10010001101100011000001110111011   [per every group of 4-bits]
          - Split Into Two:   1001000110110001 [L] 1000001110111011 [R]
          - Swap Halves:      10000011101110111001000110110001
          - Bit Inversion:    01111100010001000110111001001110
          - Compressed Key:   01100001110110110101101010011111   [done by compression P-Box]
          - XOR with Key:     00011101100111110011010011010001

          - FUNCTION OUTPUT:  00011101100111110011010011010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101101100011010000111100010101

       - FUNCTION OUTPUT:          00011101100111110011010011010001

       - Left XOR FUNCTION OUTPUT: 00110000000100100011101111000100

       - Next Round Left 32 Bits:  01010011111100111011100111111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000000100100011101111000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011111100111011100111111111

       - Right 32 Bits:            00110000000100100011101111000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001101101101101000111010001000101011101010110010010   [Subkey: 15]
          - Input Half:       00110000000100100011101111000100
          - S-Box Result:     00011111101011100001100001010111   [per every group of 4-bits]
          - Split Into Two:   0001111110101110 [L] 0001100001010111 [R]
          - Swap Halves:      00011000010101110001111110101110
          - Bit Inversion:    11100111101010001110000001010001
          - Compressed Key:   11001110010111100100101101110001   [done by compression P-Box]
          - XOR with Key:     00101001111101101010101100100000

          - FUNCTION OUTPUT:  00101001111101101010101100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011111100111011100111111111

       - FUNCTION OUTPUT:          00101001111101101010101100100000

       - Left XOR FUNCTION OUTPUT: 01111010000001010001001011011111

       - Next Round Left 32 Bits:  00110000000100100011101111000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010000001010001001011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000000100100011101111000100

       - Right 32 Bits:            01111010000001010001001011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100110010010010010111000101110111010100010101001101   [Subkey: 14]
          - Input Half:       01111010000001010001001011011111
          - S-Box Result:     11010100111110011010111001101011   [per every group of 4-bits]
          - Split Into Two:   1101010011111001 [L] 1010111001101011 [R]
          - Swap Halves:      10101110011010111101010011111001
          - Bit Inversion:    01010001100101000010101100000110
          - Compressed Key:   11010001100011001101101001011110   [done by compression P-Box]
          - XOR with Key:     10000000000110001111000101011000

          - FUNCTION OUTPUT:  10000000000110001111000101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000000100100011101111000100

       - FUNCTION OUTPUT:          10000000000110001111000101011000

       - Left XOR FUNCTION OUTPUT: 10110000000010101100101010011100

       - Next Round Left 32 Bits:  01111010000001010001001011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000000010101100101010011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010000001010001001011011111

       - Right 32 Bits:            10110000000010101100101010011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011001101101101101000111010001000101011101010110   [Subkey: 13]
          - Input Half:       10110000000010101100101010011100
          - S-Box Result:     10001111111101000101010000110101   [per every group of 4-bits]
          - Split Into Two:   1000111111110100 [L] 0101010000110101 [R]
          - Swap Halves:      01010100001101011000111111110100
          - Bit Inversion:    10101011110010100111000000001011
          - Compressed Key:   10000110011110000101001011011001   [done by compression P-Box]
          - XOR with Key:     00101101101100100010001011010010

          - FUNCTION OUTPUT:  00101101101100100010001011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010000001010001001011011111

       - FUNCTION OUTPUT:          00101101101100100010001011010010

       - Left XOR FUNCTION OUTPUT: 01010111101101110011000000001101

       - Next Round Left 32 Bits:  10110000000010101100101010011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010111101101110011000000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000000010101100101010011100

       - Right 32 Bits:            01010111101101110011000000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110111100110010010010010111000101110111010100010101   [Subkey: 12]
          - Input Half:       01010111101101110011000000001101
          - S-Box Result:     10011101100011010001111111110110   [per every group of 4-bits]
          - Split Into Two:   1001110110001101 [L] 0001111111110110 [R]
          - Swap Halves:      00011111111101101001110110001101
          - Bit Inversion:    11100000000010010110001001110010
          - Compressed Key:   01111100100001100100111001011010   [done by compression P-Box]
          - XOR with Key:     10011100100011110010110000101000

          - FUNCTION OUTPUT:  10011100100011110010110000101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000000010101100101010011100

       - FUNCTION OUTPUT:          10011100100011110010110000101000

       - Left XOR FUNCTION OUTPUT: 00101100100001011110011010110100

       - Next Round Left 32 Bits:  01010111101101110011000000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100100001011110011010110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010111101101110011000000001101

       - Right 32 Bits:            00101100100001011110011010110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001000011001101101101101000111010001000101011101   [Subkey: 11]
          - Input Half:       00101100100001011110011010110100
          - S-Box Result:     11100101001010011100000010000111   [per every group of 4-bits]
          - Split Into Two:   1110010100101001 [L] 1100000010000111 [R]
          - Swap Halves:      11000000100001111110010100101001
          - Bit Inversion:    00111111011110000001101011010110
          - Compressed Key:   11000100001110010100100000011110   [done by compression P-Box]
          - XOR with Key:     11111011010000010101001011001000

          - FUNCTION OUTPUT:  11111011010000010101001011001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010111101101110011000000001101

       - FUNCTION OUTPUT:          11111011010000010101001011001000

       - Left XOR FUNCTION OUTPUT: 10101100111101100110001011000101

       - Next Round Left 32 Bits:  00101100100001011110011010110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101100111101100110001011000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100100001011110011010110100

       - Right 32 Bits:            10101100111101100110001011000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110110111100110010010010010111000101110111010100   [Subkey: 10]
          - Input Half:       10101100111101100110001011000101
          - S-Box Result:     01000101101100000000111001011001   [per every group of 4-bits]
          - Split Into Two:   0100010110110000 [L] 0000111001011001 [R]
          - Swap Halves:      00001110010110010100010110110000
          - Bit Inversion:    11110001101001101011101001001111
          - Compressed Key:   01011001011001100001001001111000   [done by compression P-Box]
          - XOR with Key:     10101000110000001010100000110111

          - FUNCTION OUTPUT:  10101000110000001010100000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100100001011110011010110100

       - FUNCTION OUTPUT:          10101000110000001010100000110111

       - Left XOR FUNCTION OUTPUT: 10000100010001010100111010000011

       - Next Round Left 32 Bits:  10101100111101100110001011000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100010001010100111010000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101100111101100110001011000101

       - Right 32 Bits:            10000100010001010100111010000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001001000011001101101101101000111010001000101   [Subkey: 9]
          - Input Half:       10000100010001010100111010000011
          - S-Box Result:     00100111011110010111110000100001   [per every group of 4-bits]
          - Split Into Two:   0010011101111001 [L] 0111110000100001 [R]
          - Swap Halves:      01111100001000010010011101111001
          - Bit Inversion:    10000011110111101101100010000110
          - Compressed Key:   01010110000010011110001001001010   [done by compression P-Box]
          - XOR with Key:     11010101110101110011101011001100

          - FUNCTION OUTPUT:  11010101110101110011101011001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101100111101100110001011000101

       - FUNCTION OUTPUT:          11010101110101110011101011001100

       - Left XOR FUNCTION OUTPUT: 01111001001000010101100000001001

       - Next Round Left 32 Bits:  10000100010001010100111010000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001001000010101100000001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100010001010100111010000011

       - Right 32 Bits:            01111001001000010101100000001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100110110111100110010010010010111000101110111   [Subkey: 8]
          - Input Half:       01111001001000010101100000001001
          - S-Box Result:     11010011111010101001001011110011   [per every group of 4-bits]
          - Split Into Two:   1101001111101010 [L] 1001001011110011 [R]
          - Swap Halves:      10010010111100111101001111101010
          - Bit Inversion:    01101101000011000010110000010101
          - Compressed Key:   01001000111000110001101000011011   [done by compression P-Box]
          - XOR with Key:     00100101111011110011011000001110

          - FUNCTION OUTPUT:  00100101111011110011011000001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100010001010100111010000011

       - FUNCTION OUTPUT:          00100101111011110011011000001110

       - Left XOR FUNCTION OUTPUT: 10100001101010100111100010001101

       - Next Round Left 32 Bits:  01111001001000010101100000001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10100001101010100111100010001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001001000010101100000001001

       - Right 32 Bits:            10100001101010100111100010001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101110101011001001000011001101101101101000111010001   [Subkey: 7]
          - Input Half:       10100001101010100111100010001101
          - S-Box Result:     01001010010001001101001000100110   [per every group of 4-bits]
          - Split Into Two:   0100101001000100 [L] 1101001000100110 [R]
          - Swap Halves:      11010010001001100100101001000100
          - Bit Inversion:    00101101110110011011010110111011
          - Compressed Key:   01011010000100101110011100110010   [done by compression P-Box]
          - XOR with Key:     01110111110010110101001010001001

          - FUNCTION OUTPUT:  01110111110010110101001010001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001001000010101100000001001

       - FUNCTION OUTPUT:          01110111110010110101001010001001

       - Left XOR FUNCTION OUTPUT: 00001110111010100000101010000000

       - Next Round Left 32 Bits:  10100001101010100111100010001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001110111010100000101010000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001101010100111100010001101

       - Right 32 Bits:            00001110111010100000101010000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010001010100110110111100110010010010010111000101   [Subkey: 6]
          - Input Half:       00001110111010100000101010000000
          - S-Box Result:     11111100110001001111010000101111   [per every group of 4-bits]
          - Split Into Two:   1111110011000100 [L] 1111010000101111 [R]
          - Swap Halves:      11110100001011111111110011000100
          - Bit Inversion:    00001011110100000000001100111011
          - Compressed Key:   11010010011001111001100001111010   [done by compression P-Box]
          - XOR with Key:     11011001101101111001101101000001

          - FUNCTION OUTPUT:  11011001101101111001101101000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001101010100111100010001101

       - FUNCTION OUTPUT:          11011001101101111001101101000001

       - Left XOR FUNCTION OUTPUT: 01111000000111011110001111001100

       - Next Round Left 32 Bits:  00001110111010100000101010000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000000111011110001111001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001110111010100000101010000000

       - Right 32 Bits:            01111000000111011110001111001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101110101011001001000011001101101101101000111   [Subkey: 5]
          - Input Half:       01111000000111011110001111001100
          - S-Box Result:     11010010101001101100000101010101   [per every group of 4-bits]
          - Split Into Two:   1101001010100110 [L] 1100000101010101 [R]
          - Swap Halves:      11000001010101011101001010100110
          - Bit Inversion:    00111110101010100010110101011001
          - Compressed Key:   00011010010110000011011110011011   [done by compression P-Box]
          - XOR with Key:     00100100111100100001101011000010

          - FUNCTION OUTPUT:  00100100111100100001101011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001110111010100000101010000000

       - FUNCTION OUTPUT:          00100100111100100001101011000010

       - Left XOR FUNCTION OUTPUT: 00101010000110000001000001000010

       - Next Round Left 32 Bits:  01111000000111011110001111001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010000110000001000001000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000000111011110001111001100

       - Right 32 Bits:            00101010000110000001000001000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111011101010001010100110110111100110010010010010111   [Subkey: 4]
          - Input Half:       00101010000110000001000001000010
          - S-Box Result:     11100100101000101010111101111110   [per every group of 4-bits]
          - Split Into Two:   1110010010100010 [L] 1010111101111110 [R]
          - Swap Halves:      10101111011111101110010010100010
          - Bit Inversion:    01010000100000010001101101011101
          - Compressed Key:   01111110000100111011110001101011   [done by compression P-Box]
          - XOR with Key:     00101110100100101010011100110110

          - FUNCTION OUTPUT:  00101110100100101010011100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000000111011110001111001100

       - FUNCTION OUTPUT:          00101110100100101010011100110110

       - Left XOR FUNCTION OUTPUT: 01010110100011110100010011111010

       - Next Round Left 32 Bits:  00101010000110000001000001000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110100011110100010011111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010000110000001000001000010

       - Right 32 Bits:            01010110100011110100010011111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101000100010101110101011001001000011001101101101101   [Subkey: 3]
          - Input Half:       01010110100011110100010011111010
          - S-Box Result:     10010000001010110111011110110100   [per every group of 4-bits]
          - Split Into Two:   1001000000101011 [L] 0111011110110100 [R]
          - Swap Halves:      01110111101101001001000000101011
          - Bit Inversion:    10001000010010110110111111010100
          - Compressed Key:   11011000011110100110100110011110   [done by compression P-Box]
          - XOR with Key:     01010000001100010000011001001010

          - FUNCTION OUTPUT:  01010000001100010000011001001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010000110000001000001000010

       - FUNCTION OUTPUT:          01010000001100010000011001001010

       - Left XOR FUNCTION OUTPUT: 01111010001010010001011000001000

       - Next Round Left 32 Bits:  01010110100011110100010011111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111010001010010001011000001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110100011110100010011111010

       - Right 32 Bits:            01111010001010010001011000001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010111011101010001010100110110111100110010010010   [Subkey: 2]
          - Input Half:       01111010001010010001011000001000
          - S-Box Result:     11010100111000111010000011110010   [per every group of 4-bits]
          - Split Into Two:   1101010011100011 [L] 1010000011110010 [R]
          - Swap Halves:      10100000111100101101010011100011
          - Bit Inversion:    01011111000011010010101100011100
          - Compressed Key:   11011011010110101001111101100001   [done by compression P-Box]
          - XOR with Key:     10000100010101111011010001111101

          - FUNCTION OUTPUT:  10000100010101111011010001111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110100011110100010011111010

       - FUNCTION OUTPUT:          10000100010101111011010001111101

       - Left XOR FUNCTION OUTPUT: 11010010110110001111000010000111

       - Next Round Left 32 Bits:  01111010001010010001011000001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010110110001111000010000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111010001010010001011000001000

       - Right 32 Bits:            11010010110110001111000010000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101000100010101110101011001001000011001101101   [Subkey: 1]
          - Input Half:       11010010110110001111000010000111
          - S-Box Result:     01101110011000101011111100101101   [per every group of 4-bits]
          - Split Into Two:   0110111001100010 [L] 1011111100101101 [R]
          - Swap Halves:      10111111001011010110111001100010
          - Bit Inversion:    01000000110100101001000110011101
          - Compressed Key:   01011110010010110111000111001110   [done by compression P-Box]
          - XOR with Key:     00011110100110011110000001010011

          - FUNCTION OUTPUT:  00011110100110011110000001010011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111010001010010001011000001000

       - FUNCTION OUTPUT:          00011110100110011110000001010011

       - Left XOR FUNCTION OUTPUT: 01100100101100001111011001011011

       - Next Round Left 32 Bits:  11010010110110001111000010000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100101100001111011001011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0110010010110000111101100101101111010010110110001111000010000111

 > Decrypted Block:     0110010010110000111101100101101111010010110110001111000010000111


!!!CBC: Previous Ciphertext:                             1011101011111101110110000001010111011111101100111010111010001100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101111001001101001011100100111000001101011010110101111000001011

 > Final Processed Block:                                1101111001001101001011100100111000001101011010110101111000001011



Ciphertext Block 3:                                      1011100111001101011100001110000110011000011110111010000111110101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001110011010111000011100001

       - Right 32 Bits:            10011000011110111010000111110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010010010111000101110111010100010101001101101111   [Subkey: 16]
          - Input Half:       10011000011110111010000111110101
          - S-Box Result:     00110010110110000100101010111001   [per every group of 4-bits]
          - Split Into Two:   0011001011011000 [L] 0100101010111001 [R]
          - Swap Halves:      01001010101110010011001011011000
          - Bit Inversion:    10110101010001101100110100100111
          - Compressed Key:   01100001110110110101101010011111   [done by compression P-Box]
          - XOR with Key:     11010100100111011001011110111000

          - FUNCTION OUTPUT:  11010100100111011001011110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001110011010111000011100001

       - FUNCTION OUTPUT:          11010100100111011001011110111000

       - Left XOR FUNCTION OUTPUT: 01101101010100001110011101011001

       - Next Round Left 32 Bits:  10011000011110111010000111110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101010100001110011101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000011110111010000111110101

       - Right 32 Bits:            01101101010100001110011101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001101101101101000111010001000101011101010110010010   [Subkey: 15]
          - Input Half:       01101101010100001110011101011001
          - S-Box Result:     00000110100111111100110110010011   [per every group of 4-bits]
          - Split Into Two:   0000011010011111 [L] 1100110110010011 [R]
          - Swap Halves:      11001101100100110000011010011111
          - Bit Inversion:    00110010011011001111100101100000
          - Compressed Key:   11001110010111100100101101110001   [done by compression P-Box]
          - XOR with Key:     11111100001100101011001000010001

          - FUNCTION OUTPUT:  11111100001100101011001000010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000011110111010000111110101

       - FUNCTION OUTPUT:          11111100001100101011001000010001

       - Left XOR FUNCTION OUTPUT: 01100100010010010001001111100100

       - Next Round Left 32 Bits:  01101101010100001110011101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100010010010001001111100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101010100001110011101011001

       - Right 32 Bits:            01100100010010010001001111100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100110010010010010111000101110111010100010101001101   [Subkey: 14]
          - Input Half:       01100100010010010001001111100100
          - S-Box Result:     00000111011100111010000111000111   [per every group of 4-bits]
          - Split Into Two:   0000011101110011 [L] 1010000111000111 [R]
          - Swap Halves:      10100001110001110000011101110011
          - Bit Inversion:    01011110001110001111100010001100
          - Compressed Key:   11010001100011001101101001011110   [done by compression P-Box]
          - XOR with Key:     10001111101101000010001011010010

          - FUNCTION OUTPUT:  10001111101101000010001011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101010100001110011101011001

       - FUNCTION OUTPUT:          10001111101101000010001011010010

       - Left XOR FUNCTION OUTPUT: 11100010111001001100010110001011

       - Next Round Left 32 Bits:  01100100010010010001001111100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010111001001100010110001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100010010010001001111100100

       - Right 32 Bits:            11100010111001001100010110001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011001101101101101000111010001000101011101010110   [Subkey: 13]
          - Input Half:       11100010111001001100010110001011
          - S-Box Result:     11001110110001110101100100101000   [per every group of 4-bits]
          - Split Into Two:   1100111011000111 [L] 0101100100101000 [R]
          - Swap Halves:      01011001001010001100111011000111
          - Bit Inversion:    10100110110101110011000100111000
          - Compressed Key:   10000110011110000101001011011001   [done by compression P-Box]
          - XOR with Key:     00100000101011110110001111100001

          - FUNCTION OUTPUT:  00100000101011110110001111100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100010010010001001111100100

       - FUNCTION OUTPUT:          00100000101011110110001111100001

       - Left XOR FUNCTION OUTPUT: 01000100111001100111000000000101

       - Next Round Left 32 Bits:  11100010111001001100010110001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100111001100111000000000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010111001001100010110001011

       - Right 32 Bits:            01000100111001100111000000000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110111100110010010010010111000101110111010100010101   [Subkey: 12]
          - Input Half:       01000100111001100111000000000101
          - S-Box Result:     01110111110000001101111111111001   [per every group of 4-bits]
          - Split Into Two:   0111011111000000 [L] 1101111111111001 [R]
          - Swap Halves:      11011111111110010111011111000000
          - Bit Inversion:    00100000000001101000100000111111
          - Compressed Key:   01111100100001100100111001011010   [done by compression P-Box]
          - XOR with Key:     01011100100000001100011001100101

          - FUNCTION OUTPUT:  01011100100000001100011001100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010111001001100010110001011

       - FUNCTION OUTPUT:          01011100100000001100011001100101

       - Left XOR FUNCTION OUTPUT: 10111110011001000000001111101110

       - Next Round Left 32 Bits:  01000100111001100111000000000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110011001000000001111101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100111001100111000000000101

       - Right 32 Bits:            10111110011001000000001111101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001000011001101101101101000111010001000101011101   [Subkey: 11]
          - Input Half:       10111110011001000000001111101110
          - S-Box Result:     10001100000001111111000111001100   [per every group of 4-bits]
          - Split Into Two:   1000110000000111 [L] 1111000111001100 [R]
          - Swap Halves:      11110001110011001000110000000111
          - Bit Inversion:    00001110001100110111001111111000
          - Compressed Key:   11000100001110010100100000011110   [done by compression P-Box]
          - XOR with Key:     11001010000010100011101111100110

          - FUNCTION OUTPUT:  11001010000010100011101111100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100111001100111000000000101

       - FUNCTION OUTPUT:          11001010000010100011101111100110

       - Left XOR FUNCTION OUTPUT: 10001110111011000100101111100011

       - Next Round Left 32 Bits:  10111110011001000000001111101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110111011000100101111100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110011001000000001111101110

       - Right 32 Bits:            10001110111011000100101111100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110110111100110010010010010111000101110111010100   [Subkey: 10]
          - Input Half:       10001110111011000100101111100011
          - S-Box Result:     00101100110001010111100011000001   [per every group of 4-bits]
          - Split Into Two:   0010110011000101 [L] 0111100011000001 [R]
          - Swap Halves:      01111000110000010010110011000101
          - Bit Inversion:    10000111001111101101001100111010
          - Compressed Key:   01011001011001100001001001111000   [done by compression P-Box]
          - XOR with Key:     11011110010110001100000101000010

          - FUNCTION OUTPUT:  11011110010110001100000101000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110011001000000001111101110

       - FUNCTION OUTPUT:          11011110010110001100000101000010

       - Left XOR FUNCTION OUTPUT: 01100000001111001100001010101100

       - Next Round Left 32 Bits:  10001110111011000100101111100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000001111001100001010101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110111011000100101111100011

       - Right 32 Bits:            01100000001111001100001010101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001001000011001101101101101000111010001000101   [Subkey: 9]
          - Input Half:       01100000001111001100001010101100
          - S-Box Result:     00001111000101010101111001000101   [per every group of 4-bits]
          - Split Into Two:   0000111100010101 [L] 0101111001000101 [R]
          - Swap Halves:      01011110010001010000111100010101
          - Bit Inversion:    10100001101110101111000011101010
          - Compressed Key:   01010110000010011110001001001010   [done by compression P-Box]
          - XOR with Key:     11110111101100110001001010100000

          - FUNCTION OUTPUT:  11110111101100110001001010100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110111011000100101111100011

       - FUNCTION OUTPUT:          11110111101100110001001010100000

       - Left XOR FUNCTION OUTPUT: 01111001010111110101100101000011

       - Next Round Left 32 Bits:  01100000001111001100001010101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001010111110101100101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000001111001100001010101100

       - Right 32 Bits:            01111001010111110101100101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100110110111100110010010010010111000101110111   [Subkey: 8]
          - Input Half:       01111001010111110101100101000011
          - S-Box Result:     11010011100110111001001101110001   [per every group of 4-bits]
          - Split Into Two:   1101001110011011 [L] 1001001101110001 [R]
          - Swap Halves:      10010011011100011101001110011011
          - Bit Inversion:    01101100100011100010110001100100
          - Compressed Key:   01001000111000110001101000011011   [done by compression P-Box]
          - XOR with Key:     00100100011011010011011001111111

          - FUNCTION OUTPUT:  00100100011011010011011001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000001111001100001010101100

       - FUNCTION OUTPUT:          00100100011011010011011001111111

       - Left XOR FUNCTION OUTPUT: 01000100010100011111010011010011

       - Next Round Left 32 Bits:  01111001010111110101100101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100010100011111010011010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001010111110101100101000011

       - Right 32 Bits:            01000100010100011111010011010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101110101011001001000011001101101101101000111010001   [Subkey: 7]
          - Input Half:       01000100010100011111010011010011
          - S-Box Result:     01110111100110101011011101100001   [per every group of 4-bits]
          - Split Into Two:   0111011110011010 [L] 1011011101100001 [R]
          - Swap Halves:      10110111011000010111011110011010
          - Bit Inversion:    01001000100111101000100001100101
          - Compressed Key:   01011010000100101110011100110010   [done by compression P-Box]
          - XOR with Key:     00010010100011000110111101010111

          - FUNCTION OUTPUT:  00010010100011000110111101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001010111110101100101000011

       - FUNCTION OUTPUT:          00010010100011000110111101010111

       - Left XOR FUNCTION OUTPUT: 01101011110100110011011000010100

       - Next Round Left 32 Bits:  01000100010100011111010011010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101011110100110011011000010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100010100011111010011010011

       - Right 32 Bits:            01101011110100110011011000010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010001010100110110111100110010010010010111000101   [Subkey: 6]
          - Input Half:       01101011110100110011011000010100
          - S-Box Result:     00001000011000010001000010100111   [per every group of 4-bits]
          - Split Into Two:   0000100001100001 [L] 0001000010100111 [R]
          - Swap Halves:      00010000101001110000100001100001
          - Bit Inversion:    11101111010110001111011110011110
          - Compressed Key:   11010010011001111001100001111010   [done by compression P-Box]
          - XOR with Key:     00111101001111110110111111100100

          - FUNCTION OUTPUT:  00111101001111110110111111100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100010100011111010011010011

       - FUNCTION OUTPUT:          00111101001111110110111111100100

       - Left XOR FUNCTION OUTPUT: 01111001011011101001101100110111

       - Next Round Left 32 Bits:  01101011110100110011011000010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111001011011101001101100110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101011110100110011011000010100

       - Right 32 Bits:            01111001011011101001101100110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101110101011001001000011001101101101101000111   [Subkey: 5]
          - Input Half:       01111001011011101001101100110111
          - S-Box Result:     11010011000011000011100000011101   [per every group of 4-bits]
          - Split Into Two:   1101001100001100 [L] 0011100000011101 [R]
          - Swap Halves:      00111000000111011101001100001100
          - Bit Inversion:    11000111111000100010110011110011
          - Compressed Key:   00011010010110000011011110011011   [done by compression P-Box]
          - XOR with Key:     11011101101110100001101101101000

          - FUNCTION OUTPUT:  11011101101110100001101101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101011110100110011011000010100

       - FUNCTION OUTPUT:          11011101101110100001101101101000

       - Left XOR FUNCTION OUTPUT: 10110110011010010010110101111100

       - Next Round Left 32 Bits:  01111001011011101001101100110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110011010010010110101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111001011011101001101100110111

       - Right 32 Bits:            10110110011010010010110101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111011101010001010100110110111100110010010010010111   [Subkey: 4]
          - Input Half:       10110110011010010010110101111100
          - S-Box Result:     10000000000000111110011011010101   [per every group of 4-bits]
          - Split Into Two:   1000000000000011 [L] 1110011011010101 [R]
          - Swap Halves:      11100110110101011000000000000011
          - Bit Inversion:    00011001001010100111111111111100
          - Compressed Key:   01111110000100111011110001101011   [done by compression P-Box]
          - XOR with Key:     01100111001110011100001110010111

          - FUNCTION OUTPUT:  01100111001110011100001110010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111001011011101001101100110111

       - FUNCTION OUTPUT:          01100111001110011100001110010111

       - Left XOR FUNCTION OUTPUT: 00011110010101110101100010100000

       - Next Round Left 32 Bits:  10110110011010010010110101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110010101110101100010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110011010010010110101111100

       - Right 32 Bits:            00011110010101110101100010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101000100010101110101011001001000011001101101101101   [Subkey: 3]
          - Input Half:       00011110010101110101100010100000
          - S-Box Result:     10101100100111011001001001001111   [per every group of 4-bits]
          - Split Into Two:   1010110010011101 [L] 1001001001001111 [R]
          - Swap Halves:      10010010010011111010110010011101
          - Bit Inversion:    01101101101100000101001101100010
          - Compressed Key:   11011000011110100110100110011110   [done by compression P-Box]
          - XOR with Key:     10110101110010100011101011111100

          - FUNCTION OUTPUT:  10110101110010100011101011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110011010010010110101111100

       - FUNCTION OUTPUT:          10110101110010100011101011111100

       - Left XOR FUNCTION OUTPUT: 00000011101000110001011110000000

       - Next Round Left 32 Bits:  00011110010101110101100010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000011101000110001011110000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110010101110101100010100000

       - Right 32 Bits:            00000011101000110001011110000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010111011101010001010100110110111100110010010010   [Subkey: 2]
          - Input Half:       00000011101000110001011110000000
          - S-Box Result:     11110001010000011010110100101111   [per every group of 4-bits]
          - Split Into Two:   1111000101000001 [L] 1010110100101111 [R]
          - Swap Halves:      10101101001011111111000101000001
          - Bit Inversion:    01010010110100000000111010111110
          - Compressed Key:   11011011010110101001111101100001   [done by compression P-Box]
          - XOR with Key:     10001001100010101001000111011111

          - FUNCTION OUTPUT:  10001001100010101001000111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110010101110101100010100000

       - FUNCTION OUTPUT:          10001001100010101001000111011111

       - Left XOR FUNCTION OUTPUT: 10010111110111011100100101111111

       - Next Round Left 32 Bits:  00000011101000110001011110000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111110111011100100101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000011101000110001011110000000

       - Right 32 Bits:            10010111110111011100100101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101000100010101110101011001001000011001101101   [Subkey: 1]
          - Input Half:       10010111110111011100100101111111
          - S-Box Result:     00111101011001100101001111011011   [per every group of 4-bits]
          - Split Into Two:   0011110101100110 [L] 0101001111011011 [R]
          - Swap Halves:      01010011110110110011110101100110
          - Bit Inversion:    10101100001001001100001010011001
          - Compressed Key:   01011110010010110111000111001110   [done by compression P-Box]
          - XOR with Key:     11110010011011111011001101010111

          - FUNCTION OUTPUT:  11110010011011111011001101010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000011101000110001011110000000

       - FUNCTION OUTPUT:          11110010011011111011001101010111

       - Left XOR FUNCTION OUTPUT: 11110001110011001010010011010111

       - Next Round Left 32 Bits:  10010111110111011100100101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001110011001010010011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111000111001100101001001101011110010111110111011100100101111111

 > Decrypted Block:     1111000111001100101001001101011110010111110111011100100101111111


!!!CBC: Previous Ciphertext:                             0010110110001101000011110001010101010011111100111011100111111111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1101110001000001101010111100001011000100001011100111000010000000

 > Final Processed Block:                                1101110001000001101010111100001011000100001011100111000010000000



Ciphertext Block 4:                                      1100101010100011110110010110101111010101110101110011110000111101

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001010101000111101100101101011

       - Right 32 Bits:            11010101110101110011110000111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010010010111000101110111010100010101001101101111   [Subkey: 16]
          - Input Half:       11010101110101110011110000111101
          - S-Box Result:     01101001011011010001010100010110   [per every group of 4-bits]
          - Split Into Two:   0110100101101101 [L] 0001010100010110 [R]
          - Swap Halves:      00010101000101100110100101101101
          - Bit Inversion:    11101010111010011001011010010010
          - Compressed Key:   01100001110110110101101010011111   [done by compression P-Box]
          - XOR with Key:     10001011001100101100110000001101

          - FUNCTION OUTPUT:  10001011001100101100110000001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001010101000111101100101101011

       - FUNCTION OUTPUT:          10001011001100101100110000001101

       - Left XOR FUNCTION OUTPUT: 01000001100100010001010101100110

       - Next Round Left 32 Bits:  11010101110101110011110000111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000001100100010001010101100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101110101110011110000111101

       - Right 32 Bits:            01000001100100010001010101100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001101101101101000111010001000101011101010110010010   [Subkey: 15]
          - Input Half:       01000001100100010001010101100110
          - S-Box Result:     01111010001110101010100100000000   [per every group of 4-bits]
          - Split Into Two:   0111101000111010 [L] 1010100100000000 [R]
          - Swap Halves:      10101001000000000111101000111010
          - Bit Inversion:    01010110111111111000010111000101
          - Compressed Key:   11001110010111100100101101110001   [done by compression P-Box]
          - XOR with Key:     10011000101000011100111010110100

          - FUNCTION OUTPUT:  10011000101000011100111010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101110101110011110000111101

       - FUNCTION OUTPUT:          10011000101000011100111010110100

       - Left XOR FUNCTION OUTPUT: 01001101011101101111001010001001

       - Next Round Left 32 Bits:  01000001100100010001010101100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001101011101101111001010001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000001100100010001010101100110

       - Right 32 Bits:            01001101011101101111001010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100110010010010010111000101110111010100010101001101   [Subkey: 14]
          - Input Half:       01001101011101101111001010001001
          - S-Box Result:     01110110110100001011111000100011   [per every group of 4-bits]
          - Split Into Two:   0111011011010000 [L] 1011111000100011 [R]
          - Swap Halves:      10111110001000110111011011010000
          - Bit Inversion:    01000001110111001000100100101111
          - Compressed Key:   11010001100011001101101001011110   [done by compression P-Box]
          - XOR with Key:     10010000010100000101001101110001

          - FUNCTION OUTPUT:  10010000010100000101001101110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000001100100010001010101100110

       - FUNCTION OUTPUT:          10010000010100000101001101110001

       - Left XOR FUNCTION OUTPUT: 11010001110000010100011000010111

       - Next Round Left 32 Bits:  01001101011101101111001010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001110000010100011000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001101011101101111001010001001

       - Right 32 Bits:            11010001110000010100011000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011001101101101101000111010001000101011101010110   [Subkey: 13]
          - Input Half:       11010001110000010100011000010111
          - S-Box Result:     01101010010110100111000010101101   [per every group of 4-bits]
          - Split Into Two:   0110101001011010 [L] 0111000010101101 [R]
          - Swap Halves:      01110000101011010110101001011010
          - Bit Inversion:    10001111010100101001010110100101
          - Compressed Key:   10000110011110000101001011011001   [done by compression P-Box]
          - XOR with Key:     00001001001010101100011101111100

          - FUNCTION OUTPUT:  00001001001010101100011101111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001101011101101111001010001001

       - FUNCTION OUTPUT:          00001001001010101100011101111100

       - Left XOR FUNCTION OUTPUT: 01000100010111000011010111110101

       - Next Round Left 32 Bits:  11010001110000010100011000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100010111000011010111110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001110000010100011000010111

       - Right 32 Bits:            01000100010111000011010111110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110111100110010010010010111000101110111010100010101   [Subkey: 12]
          - Input Half:       01000100010111000011010111110101
          - S-Box Result:     01110111100101010001100110111001   [per every group of 4-bits]
          - Split Into Two:   0111011110010101 [L] 0001100110111001 [R]
          - Swap Halves:      00011001101110010111011110010101
          - Bit Inversion:    11100110010001101000100001101010
          - Compressed Key:   01111100100001100100111001011010   [done by compression P-Box]
          - XOR with Key:     10011010110000001100011000110000

          - FUNCTION OUTPUT:  10011010110000001100011000110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001110000010100011000010111

       - FUNCTION OUTPUT:          10011010110000001100011000110000

       - Left XOR FUNCTION OUTPUT: 01001011000000011000000000100111

       - Next Round Left 32 Bits:  01000100010111000011010111110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011000000011000000000100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100010111000011010111110101

       - Right 32 Bits:            01001011000000011000000000100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001000011001101101101101000111010001000101011101   [Subkey: 11]
          - Input Half:       01001011000000011000000000100111
          - S-Box Result:     01111000111110100010111111101101   [per every group of 4-bits]
          - Split Into Two:   0111100011111010 [L] 0010111111101101 [R]
          - Swap Halves:      00101111111011010111100011111010
          - Bit Inversion:    11010000000100101000011100000101
          - Compressed Key:   11000100001110010100100000011110   [done by compression P-Box]
          - XOR with Key:     00010100001010111100111100011011

          - FUNCTION OUTPUT:  00010100001010111100111100011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100010111000011010111110101

       - FUNCTION OUTPUT:          00010100001010111100111100011011

       - Left XOR FUNCTION OUTPUT: 01010000011101111111101011101110

       - Next Round Left 32 Bits:  01001011000000011000000000100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010000011101111111101011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011000000011000000000100111

       - Right 32 Bits:            01010000011101111111101011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110110111100110010010010010111000101110111010100   [Subkey: 10]
          - Input Half:       01010000011101111111101011101110
          - S-Box Result:     10011111110111011011010011001100   [per every group of 4-bits]
          - Split Into Two:   1001111111011101 [L] 1011010011001100 [R]
          - Swap Halves:      10110100110011001001111111011101
          - Bit Inversion:    01001011001100110110000000100010
          - Compressed Key:   01011001011001100001001001111000   [done by compression P-Box]
          - XOR with Key:     00010010010101010111001001011010

          - FUNCTION OUTPUT:  00010010010101010111001001011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011000000011000000000100111

       - FUNCTION OUTPUT:          00010010010101010111001001011010

       - Left XOR FUNCTION OUTPUT: 01011001010101001111001001111101

       - Next Round Left 32 Bits:  01010000011101111111101011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001010101001111001001111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010000011101111111101011101110

       - Right 32 Bits:            01011001010101001111001001111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001001000011001101101101101000111010001000101   [Subkey: 9]
          - Input Half:       01011001010101001111001001111101
          - S-Box Result:     10010011100101111011111011010110   [per every group of 4-bits]
          - Split Into Two:   1001001110010111 [L] 1011111011010110 [R]
          - Swap Halves:      10111110110101101001001110010111
          - Bit Inversion:    01000001001010010110110001101000
          - Compressed Key:   01010110000010011110001001001010   [done by compression P-Box]
          - XOR with Key:     00010111001000001000111000100010

          - FUNCTION OUTPUT:  00010111001000001000111000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010000011101111111101011101110

       - FUNCTION OUTPUT:          00010111001000001000111000100010

       - Left XOR FUNCTION OUTPUT: 01000111010101110111010011001100

       - Next Round Left 32 Bits:  01011001010101001111001001111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000111010101110111010011001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001010101001111001001111101

       - Right 32 Bits:            01000111010101110111010011001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100110110111100110010010010010111000101110111   [Subkey: 8]
          - Input Half:       01000111010101110111010011001100
          - S-Box Result:     01111101100111011101011101010101   [per every group of 4-bits]
          - Split Into Two:   0111110110011101 [L] 1101011101010101 [R]
          - Swap Halves:      11010111010101010111110110011101
          - Bit Inversion:    00101000101010101000001001100010
          - Compressed Key:   01001000111000110001101000011011   [done by compression P-Box]
          - XOR with Key:     01100000010010011001100001111001

          - FUNCTION OUTPUT:  01100000010010011001100001111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001010101001111001001111101

       - FUNCTION OUTPUT:          01100000010010011001100001111001

       - Left XOR FUNCTION OUTPUT: 00111001000111010110101000000100

       - Next Round Left 32 Bits:  01000111010101110111010011001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111001000111010110101000000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000111010101110111010011001100

       - Right 32 Bits:            00111001000111010110101000000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101110101011001001000011001101101101101000111010001   [Subkey: 7]
          - Input Half:       00111001000111010110101000000100
          - S-Box Result:     00010011101001100000010011110111   [per every group of 4-bits]
          - Split Into Two:   0001001110100110 [L] 0000010011110111 [R]
          - Swap Halves:      00000100111101110001001110100110
          - Bit Inversion:    11111011000010001110110001011001
          - Compressed Key:   01011010000100101110011100110010   [done by compression P-Box]
          - XOR with Key:     10100001000110100000101101101011

          - FUNCTION OUTPUT:  10100001000110100000101101101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000111010101110111010011001100

       - FUNCTION OUTPUT:          10100001000110100000101101101011

       - Left XOR FUNCTION OUTPUT: 11100110010011010111111110100111

       - Next Round Left 32 Bits:  00111001000111010110101000000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110010011010111111110100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111001000111010110101000000100

       - Right 32 Bits:            11100110010011010111111110100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010001010100110110111100110010010010010111000101   [Subkey: 6]
          - Input Half:       11100110010011010111111110100111
          - S-Box Result:     11000000011101101101101101001101   [per every group of 4-bits]
          - Split Into Two:   1100000001110110 [L] 1101101101001101 [R]
          - Swap Halves:      11011011010011011100000001110110
          - Bit Inversion:    00100100101100100011111110001001
          - Compressed Key:   11010010011001111001100001111010   [done by compression P-Box]
          - XOR with Key:     11110110110101011010011111110011

          - FUNCTION OUTPUT:  11110110110101011010011111110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111001000111010110101000000100

       - FUNCTION OUTPUT:          11110110110101011010011111110011

       - Left XOR FUNCTION OUTPUT: 11001111110010001100110111110111

       - Next Round Left 32 Bits:  11100110010011010111111110100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111110010001100110111110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110010011010111111110100111

       - Right 32 Bits:            11001111110010001100110111110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101110101011001001000011001101101101101000111   [Subkey: 5]
          - Input Half:       11001111110010001100110111110111
          - S-Box Result:     01011011010100100101011010111101   [per every group of 4-bits]
          - Split Into Two:   0101101101010010 [L] 0101011010111101 [R]
          - Swap Halves:      01010110101111010101101101010010
          - Bit Inversion:    10101001010000101010010010101101
          - Compressed Key:   00011010010110000011011110011011   [done by compression P-Box]
          - XOR with Key:     10110011000110101001001100110110

          - FUNCTION OUTPUT:  10110011000110101001001100110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110010011010111111110100111

       - FUNCTION OUTPUT:          10110011000110101001001100110110

       - Left XOR FUNCTION OUTPUT: 01010101010101111110110010010001

       - Next Round Left 32 Bits:  11001111110010001100110111110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101010101111110110010010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111110010001100110111110111

       - Right 32 Bits:            01010101010101111110110010010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111011101010001010100110110111100110010010010010111   [Subkey: 4]
          - Input Half:       01010101010101111110110010010001
          - S-Box Result:     10011001100111011100010100111010   [per every group of 4-bits]
          - Split Into Two:   1001100110011101 [L] 1100010100111010 [R]
          - Swap Halves:      11000101001110101001100110011101
          - Bit Inversion:    00111010110001010110011001100010
          - Compressed Key:   01111110000100111011110001101011   [done by compression P-Box]
          - XOR with Key:     01000100110101101101101000001001

          - FUNCTION OUTPUT:  01000100110101101101101000001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111110010001100110111110111

       - FUNCTION OUTPUT:          01000100110101101101101000001001

       - Left XOR FUNCTION OUTPUT: 10001011000111100001011111111110

       - Next Round Left 32 Bits:  01010101010101111110110010010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011000111100001011111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101010101111110110010010001

       - Right 32 Bits:            10001011000111100001011111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101000100010101110101011001001000011001101101101101   [Subkey: 3]
          - Input Half:       10001011000111100001011111111110
          - S-Box Result:     00101000101011001010110110111100   [per every group of 4-bits]
          - Split Into Two:   0010100010101100 [L] 1010110110111100 [R]
          - Swap Halves:      10101101101111000010100010101100
          - Bit Inversion:    01010010010000111101011101010011
          - Compressed Key:   11011000011110100110100110011110   [done by compression P-Box]
          - XOR with Key:     10001010001110011011111011001101

          - FUNCTION OUTPUT:  10001010001110011011111011001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101010101111110110010010001

       - FUNCTION OUTPUT:          10001010001110011011111011001101

       - Left XOR FUNCTION OUTPUT: 11011111011011100101001001011100

       - Next Round Left 32 Bits:  10001011000111100001011111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111011011100101001001011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011000111100001011111111110

       - Right 32 Bits:            11011111011011100101001001011100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010111011101010001010100110110111100110010010010   [Subkey: 2]
          - Input Half:       11011111011011100101001001011100
          - S-Box Result:     01101011000011001001111010010101   [per every group of 4-bits]
          - Split Into Two:   0110101100001100 [L] 1001111010010101 [R]
          - Swap Halves:      10011110100101010110101100001100
          - Bit Inversion:    01100001011010101001010011110011
          - Compressed Key:   11011011010110101001111101100001   [done by compression P-Box]
          - XOR with Key:     10111010001100000000101110010010

          - FUNCTION OUTPUT:  10111010001100000000101110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011000111100001011111111110

       - FUNCTION OUTPUT:          10111010001100000000101110010010

       - Left XOR FUNCTION OUTPUT: 00110001001011100001110001101100

       - Next Round Left 32 Bits:  11011111011011100101001001011100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001001011100001110001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111011011100101001001011100

       - Right 32 Bits:            00110001001011100001110001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101000100010101110101011001001000011001101101   [Subkey: 1]
          - Input Half:       00110001001011100001110001101100
          - S-Box Result:     00011010111011001010010100000101   [per every group of 4-bits]
          - Split Into Two:   0001101011101100 [L] 1010010100000101 [R]
          - Swap Halves:      10100101000001010001101011101100
          - Bit Inversion:    01011010111110101110010100010011
          - Compressed Key:   01011110010010110111000111001110   [done by compression P-Box]
          - XOR with Key:     00000100101100011001010011011101

          - FUNCTION OUTPUT:  00000100101100011001010011011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111011011100101001001011100

       - FUNCTION OUTPUT:          00000100101100011001010011011101

       - Left XOR FUNCTION OUTPUT: 11011011110111111100011010000001

       - Next Round Left 32 Bits:  00110001001011100001110001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011110111111100011010000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101101111011111110001101000000100110001001011100001110001101100

 > Decrypted Block:     1101101111011111110001101000000100110001001011100001110001101100


!!!CBC: Previous Ciphertext:                             1011100111001101011100001110000110011000011110111010000111110101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110001000010010101101100110000010101001010101011011110110011001

 > Final Processed Block:                                0110001000010010101101100110000010101001010101011011110110011001



Ciphertext Block 5:                                      0101110011100110001011111101101111011101001001011101111011010110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011100111001100010111111011011

       - Right 32 Bits:            11011101001001011101111011010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010010010111000101110111010100010101001101101111   [Subkey: 16]
          - Input Half:       11011101001001011101111011010110
          - S-Box Result:     01100110111010010110110001100000   [per every group of 4-bits]
          - Split Into Two:   0110011011101001 [L] 0110110001100000 [R]
          - Swap Halves:      01101100011000000110011011101001
          - Bit Inversion:    10010011100111111001100100010110
          - Compressed Key:   01100001110110110101101010011111   [done by compression P-Box]
          - XOR with Key:     11110010010001001100001110001001

          - FUNCTION OUTPUT:  11110010010001001100001110001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011100111001100010111111011011

       - FUNCTION OUTPUT:          11110010010001001100001110001001

       - Left XOR FUNCTION OUTPUT: 10101110101000101110110001010010

       - Next Round Left 32 Bits:  11011101001001011101111011010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110101000101110110001010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101001001011101111011010110

       - Right 32 Bits:            10101110101000101110110001010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001101101101101000111010001000101011101010110010010   [Subkey: 15]
          - Input Half:       10101110101000101110110001010010
          - S-Box Result:     01001100010011101100010110011110   [per every group of 4-bits]
          - Split Into Two:   0100110001001110 [L] 1100010110011110 [R]
          - Swap Halves:      11000101100111100100110001001110
          - Bit Inversion:    00111010011000011011001110110001
          - Compressed Key:   11001110010111100100101101110001   [done by compression P-Box]
          - XOR with Key:     11110100001111111111100011000000

          - FUNCTION OUTPUT:  11110100001111111111100011000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101001001011101111011010110

       - FUNCTION OUTPUT:          11110100001111111111100011000000

       - Left XOR FUNCTION OUTPUT: 00101001000110100010011000010110

       - Next Round Left 32 Bits:  10101110101000101110110001010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101001000110100010011000010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110101000101110110001010010

       - Right 32 Bits:            00101001000110100010011000010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100110010010010010111000101110111010100010101001101   [Subkey: 14]
          - Input Half:       00101001000110100010011000010110
          - S-Box Result:     11100011101001001110000010100000   [per every group of 4-bits]
          - Split Into Two:   1110001110100100 [L] 1110000010100000 [R]
          - Swap Halves:      11100000101000001110001110100100
          - Bit Inversion:    00011111010111110001110001011011
          - Compressed Key:   11010001100011001101101001011110   [done by compression P-Box]
          - XOR with Key:     11001110110100111100011000000101

          - FUNCTION OUTPUT:  11001110110100111100011000000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110101000101110110001010010

       - FUNCTION OUTPUT:          11001110110100111100011000000101

       - Left XOR FUNCTION OUTPUT: 01100000011100010010101001010111

       - Next Round Left 32 Bits:  00101001000110100010011000010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100000011100010010101001010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101001000110100010011000010110

       - Right 32 Bits:            01100000011100010010101001010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011001101101101101000111010001000101011101010110   [Subkey: 13]
          - Input Half:       01100000011100010010101001010111
          - S-Box Result:     00001111110110101110010010011101   [per every group of 4-bits]
          - Split Into Two:   0000111111011010 [L] 1110010010011101 [R]
          - Swap Halves:      11100100100111010000111111011010
          - Bit Inversion:    00011011011000101111000000100101
          - Compressed Key:   10000110011110000101001011011001   [done by compression P-Box]
          - XOR with Key:     10011101000110101010001011111100

          - FUNCTION OUTPUT:  10011101000110101010001011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101001000110100010011000010110

       - FUNCTION OUTPUT:          10011101000110101010001011111100

       - Left XOR FUNCTION OUTPUT: 10110100000000001000010011101010

       - Next Round Left 32 Bits:  01100000011100010010101001010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110100000000001000010011101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000011100010010101001010111

       - Right 32 Bits:            10110100000000001000010011101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110111100110010010010010111000101110111010100010101   [Subkey: 12]
          - Input Half:       10110100000000001000010011101010
          - S-Box Result:     10000111111111110010011111000100   [per every group of 4-bits]
          - Split Into Two:   1000011111111111 [L] 0010011111000100 [R]
          - Swap Halves:      00100111110001001000011111111111
          - Bit Inversion:    11011000001110110111100000000000
          - Compressed Key:   01111100100001100100111001011010   [done by compression P-Box]
          - XOR with Key:     10100100101111010011011001011010

          - FUNCTION OUTPUT:  10100100101111010011011001011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000011100010010101001010111

       - FUNCTION OUTPUT:          10100100101111010011011001011010

       - Left XOR FUNCTION OUTPUT: 11000100110011000001110000001101

       - Next Round Left 32 Bits:  10110100000000001000010011101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100110011000001110000001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110100000000001000010011101010

       - Right 32 Bits:            11000100110011000001110000001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001000011001101101101101000111010001000101011101   [Subkey: 11]
          - Input Half:       11000100110011000001110000001101
          - S-Box Result:     01010111010101011010010111110110   [per every group of 4-bits]
          - Split Into Two:   0101011101010101 [L] 1010010111110110 [R]
          - Swap Halves:      10100101111101100101011101010101
          - Bit Inversion:    01011010000010011010100010101010
          - Compressed Key:   11000100001110010100100000011110   [done by compression P-Box]
          - XOR with Key:     10011110001100001110000010110100

          - FUNCTION OUTPUT:  10011110001100001110000010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110100000000001000010011101010

       - FUNCTION OUTPUT:          10011110001100001110000010110100

       - Left XOR FUNCTION OUTPUT: 00101010001100000110010001011110

       - Next Round Left 32 Bits:  11000100110011000001110000001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010001100000110010001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100110011000001110000001101

       - Right 32 Bits:            00101010001100000110010001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110110111100110010010010010111000101110111010100   [Subkey: 10]
          - Input Half:       00101010001100000110010001011110
          - S-Box Result:     11100100000111110000011110011100   [per every group of 4-bits]
          - Split Into Two:   1110010000011111 [L] 0000011110011100 [R]
          - Swap Halves:      00000111100111001110010000011111
          - Bit Inversion:    11111000011000110001101111100000
          - Compressed Key:   01011001011001100001001001111000   [done by compression P-Box]
          - XOR with Key:     10100001000001010000100110011000

          - FUNCTION OUTPUT:  10100001000001010000100110011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100110011000001110000001101

       - FUNCTION OUTPUT:          10100001000001010000100110011000

       - Left XOR FUNCTION OUTPUT: 01100101110010010001010110010101

       - Next Round Left 32 Bits:  00101010001100000110010001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100101110010010001010110010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010001100000110010001011110

       - Right 32 Bits:            01100101110010010001010110010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001001000011001101101101101000111010001000101   [Subkey: 9]
          - Input Half:       01100101110010010001010110010101
          - S-Box Result:     00001001010100111010100100111001   [per every group of 4-bits]
          - Split Into Two:   0000100101010011 [L] 1010100100111001 [R]
          - Swap Halves:      10101001001110010000100101010011
          - Bit Inversion:    01010110110001101111011010101100
          - Compressed Key:   01010110000010011110001001001010   [done by compression P-Box]
          - XOR with Key:     00000000110011110001010011100110

          - FUNCTION OUTPUT:  00000000110011110001010011100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010001100000110010001011110

       - FUNCTION OUTPUT:          00000000110011110001010011100110

       - Left XOR FUNCTION OUTPUT: 00101010111111110111000010111000

       - Next Round Left 32 Bits:  01100101110010010001010110010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010111111110111000010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100101110010010001010110010101

       - Right 32 Bits:            00101010111111110111000010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100110110111100110010010010010111000101110111   [Subkey: 8]
          - Input Half:       00101010111111110111000010111000
          - S-Box Result:     11100100101110111101111110000010   [per every group of 4-bits]
          - Split Into Two:   1110010010111011 [L] 1101111110000010 [R]
          - Swap Halves:      11011111100000101110010010111011
          - Bit Inversion:    00100000011111010001101101000100
          - Compressed Key:   01001000111000110001101000011011   [done by compression P-Box]
          - XOR with Key:     01101000100111100000000101011111

          - FUNCTION OUTPUT:  01101000100111100000000101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100101110010010001010110010101

       - FUNCTION OUTPUT:          01101000100111100000000101011111

       - Left XOR FUNCTION OUTPUT: 00001101010101110001010011001010

       - Next Round Left 32 Bits:  00101010111111110111000010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101010101110001010011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010111111110111000010111000

       - Right 32 Bits:            00001101010101110001010011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101110101011001001000011001101101101101000111010001   [Subkey: 7]
          - Input Half:       00001101010101110001010011001010
          - S-Box Result:     11110110100111011010011101010100   [per every group of 4-bits]
          - Split Into Two:   1111011010011101 [L] 1010011101010100 [R]
          - Swap Halves:      10100111010101001111011010011101
          - Bit Inversion:    01011000101010110000100101100010
          - Compressed Key:   01011010000100101110011100110010   [done by compression P-Box]
          - XOR with Key:     00000010101110011110111001010000

          - FUNCTION OUTPUT:  00000010101110011110111001010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010111111110111000010111000

       - FUNCTION OUTPUT:          00000010101110011110111001010000

       - Left XOR FUNCTION OUTPUT: 00101000010001101001111011101000

       - Next Round Left 32 Bits:  00001101010101110001010011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101000010001101001111011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101010101110001010011001010

       - Right 32 Bits:            00101000010001101001111011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010001010100110110111100110010010010010111000101   [Subkey: 6]
          - Input Half:       00101000010001101001111011101000
          - S-Box Result:     11100010011100000011110011000010   [per every group of 4-bits]
          - Split Into Two:   1110001001110000 [L] 0011110011000010 [R]
          - Swap Halves:      00111100110000101110001001110000
          - Bit Inversion:    11000011001111010001110110001111
          - Compressed Key:   11010010011001111001100001111010   [done by compression P-Box]
          - XOR with Key:     00010001010110101000010111110101

          - FUNCTION OUTPUT:  00010001010110101000010111110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101010101110001010011001010

       - FUNCTION OUTPUT:          00010001010110101000010111110101

       - Left XOR FUNCTION OUTPUT: 00011100000011011001000100111111

       - Next Round Left 32 Bits:  00101000010001101001111011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100000011011001000100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101000010001101001111011101000

       - Right 32 Bits:            00011100000011011001000100111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101110101011001001000011001101101101101000111   [Subkey: 5]
          - Input Half:       00011100000011011001000100111111
          - S-Box Result:     10100101111101100011101000011011   [per every group of 4-bits]
          - Split Into Two:   1010010111110110 [L] 0011101000011011 [R]
          - Swap Halves:      00111010000110111010010111110110
          - Bit Inversion:    11000101111001000101101000001001
          - Compressed Key:   00011010010110000011011110011011   [done by compression P-Box]
          - XOR with Key:     11011111101111000110110110010010

          - FUNCTION OUTPUT:  11011111101111000110110110010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101000010001101001111011101000

       - FUNCTION OUTPUT:          11011111101111000110110110010010

       - Left XOR FUNCTION OUTPUT: 11110111111110101111001101111010

       - Next Round Left 32 Bits:  00011100000011011001000100111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110111111110101111001101111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100000011011001000100111111

       - Right 32 Bits:            11110111111110101111001101111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111011101010001010100110110111100110010010010010111   [Subkey: 4]
          - Input Half:       11110111111110101111001101111010
          - S-Box Result:     10111101101101001011000111010100   [per every group of 4-bits]
          - Split Into Two:   1011110110110100 [L] 1011000111010100 [R]
          - Swap Halves:      10110001110101001011110110110100
          - Bit Inversion:    01001110001010110100001001001011
          - Compressed Key:   01111110000100111011110001101011   [done by compression P-Box]
          - XOR with Key:     00110000001110001111111000100000

          - FUNCTION OUTPUT:  00110000001110001111111000100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100000011011001000100111111

       - FUNCTION OUTPUT:          00110000001110001111111000100000

       - Left XOR FUNCTION OUTPUT: 00101100001101010110111100011111

       - Next Round Left 32 Bits:  11110111111110101111001101111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101100001101010110111100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110111111110101111001101111010

       - Right 32 Bits:            00101100001101010110111100011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101000100010101110101011001001000011001101101101101   [Subkey: 3]
          - Input Half:       00101100001101010110111100011111
          - S-Box Result:     11100101000110010000101110101011   [per every group of 4-bits]
          - Split Into Two:   1110010100011001 [L] 0000101110101011 [R]
          - Swap Halves:      00001011101010111110010100011001
          - Bit Inversion:    11110100010101000001101011100110
          - Compressed Key:   11011000011110100110100110011110   [done by compression P-Box]
          - XOR with Key:     00101100001011100111001101111000

          - FUNCTION OUTPUT:  00101100001011100111001101111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110111111110101111001101111010

       - FUNCTION OUTPUT:          00101100001011100111001101111000

       - Left XOR FUNCTION OUTPUT: 11011011110101001000000000000010

       - Next Round Left 32 Bits:  00101100001101010110111100011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011110101001000000000000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101100001101010110111100011111

       - Right 32 Bits:            11011011110101001000000000000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010111011101010001010100110110111100110010010010   [Subkey: 2]
          - Input Half:       11011011110101001000000000000010
          - S-Box Result:     01101000011001110010111111111110   [per every group of 4-bits]
          - Split Into Two:   0110100001100111 [L] 0010111111111110 [R]
          - Swap Halves:      00101111111111100110100001100111
          - Bit Inversion:    11010000000000011001011110011000
          - Compressed Key:   11011011010110101001111101100001   [done by compression P-Box]
          - XOR with Key:     00001011010110110000100011111001

          - FUNCTION OUTPUT:  00001011010110110000100011111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101100001101010110111100011111

       - FUNCTION OUTPUT:          00001011010110110000100011111001

       - Left XOR FUNCTION OUTPUT: 00100111011011100110011111100110

       - Next Round Left 32 Bits:  11011011110101001000000000000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111011011100110011111100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011110101001000000000000010

       - Right 32 Bits:            00100111011011100110011111100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101000100010101110101011001001000011001101101   [Subkey: 1]
          - Input Half:       00100111011011100110011111100110
          - S-Box Result:     11101101000011000000110111000000   [per every group of 4-bits]
          - Split Into Two:   1110110100001100 [L] 0000110111000000 [R]
          - Swap Halves:      00001101110000001110110100001100
          - Bit Inversion:    11110010001111110001001011110011
          - Compressed Key:   01011110010010110111000111001110   [done by compression P-Box]
          - XOR with Key:     10101100011101000110001100111101

          - FUNCTION OUTPUT:  10101100011101000110001100111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011110101001000000000000010

       - FUNCTION OUTPUT:          10101100011101000110001100111101

       - Left XOR FUNCTION OUTPUT: 01110111101000001110001100111111

       - Next Round Left 32 Bits:  00100111011011100110011111100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111101000001110001100111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111011110100000111000110011111100100111011011100110011111100110

 > Decrypted Block:     0111011110100000111000110011111100100111011011100110011111100110


!!!CBC: Previous Ciphertext:                             1100101010100011110110010110101111010101110101110011110000111101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1011110100000011001110100101010011110010101110010101101111011011

 > Final Processed Block:                                1011110100000011001110100101010011110010101110010101101111011011



Ciphertext Block 6:                                      0101101010001110001110101111110000100011001010111001001000101000

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011010100011100011101011111100

       - Right 32 Bits:            00100011001010111001001000101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110010010010010111000101110111010100010101001101101111   [Subkey: 16]
          - Input Half:       00100011001010111001001000101000
          - S-Box Result:     11100001111010000011111011100010   [per every group of 4-bits]
          - Split Into Two:   1110000111101000 [L] 0011111011100010 [R]
          - Swap Halves:      00111110111000101110000111101000
          - Bit Inversion:    11000001000111010001111000010111
          - Compressed Key:   01100001110110110101101010011111   [done by compression P-Box]
          - XOR with Key:     10100000110001100100010010001000

          - FUNCTION OUTPUT:  10100000110001100100010010001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011010100011100011101011111100

       - FUNCTION OUTPUT:          10100000110001100100010010001000

       - Left XOR FUNCTION OUTPUT: 11111010010010000111111001110100

       - Next Round Left 32 Bits:  00100011001010111001001000101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010010010000111111001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100011001010111001001000101000

       - Right 32 Bits:            11111010010010000111111001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011001101101101101000111010001000101011101010110010010   [Subkey: 15]
          - Input Half:       11111010010010000111111001110100
          - S-Box Result:     10110100011100101101110011010111   [per every group of 4-bits]
          - Split Into Two:   1011010001110010 [L] 1101110011010111 [R]
          - Swap Halves:      11011100110101111011010001110010
          - Bit Inversion:    00100011001010000100101110001101
          - Compressed Key:   11001110010111100100101101110001   [done by compression P-Box]
          - XOR with Key:     11101101011101100000000011111100

          - FUNCTION OUTPUT:  11101101011101100000000011111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100011001010111001001000101000

       - FUNCTION OUTPUT:          11101101011101100000000011111100

       - Left XOR FUNCTION OUTPUT: 11001110010111011001001011010100

       - Next Round Left 32 Bits:  11111010010010000111111001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110010111011001001011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010010010000111111001110100

       - Right 32 Bits:            11001110010111011001001011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10111100110010010010010111000101110111010100010101001101   [Subkey: 14]
          - Input Half:       11001110010111011001001011010100
          - S-Box Result:     01011100100101100011111001100111   [per every group of 4-bits]
          - Split Into Two:   0101110010010110 [L] 0011111001100111 [R]
          - Swap Halves:      00111110011001110101110010010110
          - Bit Inversion:    11000001100110001010001101101001
          - Compressed Key:   11010001100011001101101001011110   [done by compression P-Box]
          - XOR with Key:     00010000000101000111100100110111

          - FUNCTION OUTPUT:  00010000000101000111100100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010010010000111111001110100

       - FUNCTION OUTPUT:          00010000000101000111100100110111

       - Left XOR FUNCTION OUTPUT: 11101010010111000000011101000011

       - Next Round Left 32 Bits:  11001110010111011001001011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101010010111000000011101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110010111011001001011010100

       - Right 32 Bits:            11101010010111000000011101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001000011001101101101101000111010001000101011101010110   [Subkey: 13]
          - Input Half:       11101010010111000000011101000011
          - S-Box Result:     11000100100101011111110101110001   [per every group of 4-bits]
          - Split Into Two:   1100010010010101 [L] 1111110101110001 [R]
          - Swap Halves:      11111101011100011100010010010101
          - Bit Inversion:    00000010100011100011101101101010
          - Compressed Key:   10000110011110000101001011011001   [done by compression P-Box]
          - XOR with Key:     10000100111101100110100110110011

          - FUNCTION OUTPUT:  10000100111101100110100110110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110010111011001001011010100

       - FUNCTION OUTPUT:          10000100111101100110100110110011

       - Left XOR FUNCTION OUTPUT: 01001010101010111111101101100111

       - Next Round Left 32 Bits:  11101010010111000000011101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001010101010111111101101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101010010111000000011101000011

       - Right 32 Bits:            01001010101010111111101101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110110111100110010010010010111000101110111010100010101   [Subkey: 12]
          - Input Half:       01001010101010111111101101100111
          - S-Box Result:     01110100010010001011100000001101   [per every group of 4-bits]
          - Split Into Two:   0111010001001000 [L] 1011100000001101 [R]
          - Swap Halves:      10111000000011010111010001001000
          - Bit Inversion:    01000111111100101000101110110111
          - Compressed Key:   01111100100001100100111001011010   [done by compression P-Box]
          - XOR with Key:     00111011011101001100010111101101

          - FUNCTION OUTPUT:  00111011011101001100010111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101010010111000000011101000011

       - FUNCTION OUTPUT:          00111011011101001100010111101101

       - Left XOR FUNCTION OUTPUT: 11010001001010001100001010101110

       - Next Round Left 32 Bits:  01001010101010111111101101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001001010001100001010101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001010101010111111101101100111

       - Right 32 Bits:            11010001001010001100001010101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001001000011001101101101101000111010001000101011101   [Subkey: 11]
          - Input Half:       11010001001010001100001010101110
          - S-Box Result:     01101010111000100101111001001100   [per every group of 4-bits]
          - Split Into Two:   0110101011100010 [L] 0101111001001100 [R]
          - Swap Halves:      01011110010011000110101011100010
          - Bit Inversion:    10100001101100111001010100011101
          - Compressed Key:   11000100001110010100100000011110   [done by compression P-Box]
          - XOR with Key:     01100101100010101101110100000011

          - FUNCTION OUTPUT:  01100101100010101101110100000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001010101010111111101101100111

       - FUNCTION OUTPUT:          01100101100010101101110100000011

       - Left XOR FUNCTION OUTPUT: 00101111001000010010011001100100

       - Next Round Left 32 Bits:  11010001001010001100001010101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101111001000010010011001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001001010001100001010101110

       - Right 32 Bits:            00101111001000010010011001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110110111100110010010010010111000101110111010100   [Subkey: 10]
          - Input Half:       00101111001000010010011001100100
          - S-Box Result:     11101011111010101110000000000111   [per every group of 4-bits]
          - Split Into Two:   1110101111101010 [L] 1110000000000111 [R]
          - Swap Halves:      11100000000001111110101111101010
          - Bit Inversion:    00011111111110000001010000010101
          - Compressed Key:   01011001011001100001001001111000   [done by compression P-Box]
          - XOR with Key:     01000110100111100000011001101101

          - FUNCTION OUTPUT:  01000110100111100000011001101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001001010001100001010101110

       - FUNCTION OUTPUT:          01000110100111100000011001101101

       - Left XOR FUNCTION OUTPUT: 10010111101101101100010011000011

       - Next Round Left 32 Bits:  00101111001000010010011001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111101101101100010011000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101111001000010010011001100100

       - Right 32 Bits:            10010111101101101100010011000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001001000011001101101101101000111010001000101   [Subkey: 9]
          - Input Half:       10010111101101101100010011000011
          - S-Box Result:     00111101100000000101011101010001   [per every group of 4-bits]
          - Split Into Two:   0011110110000000 [L] 0101011101010001 [R]
          - Swap Halves:      01010111010100010011110110000000
          - Bit Inversion:    10101000101011101100001001111111
          - Compressed Key:   01010110000010011110001001001010   [done by compression P-Box]
          - XOR with Key:     11111110101001110010000000110101

          - FUNCTION OUTPUT:  11111110101001110010000000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101111001000010010011001100100

       - FUNCTION OUTPUT:          11111110101001110010000000110101

       - Left XOR FUNCTION OUTPUT: 11010001100001100000011001010001

       - Next Round Left 32 Bits:  10010111101101101100010011000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001100001100000011001010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010111101101101100010011000011

       - Right 32 Bits:            11010001100001100000011001010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001010100110110111100110010010010010111000101110111   [Subkey: 8]
          - Input Half:       11010001100001100000011001010001
          - S-Box Result:     01101010001000001111000010011010   [per every group of 4-bits]
          - Split Into Two:   0110101000100000 [L] 1111000010011010 [R]
          - Swap Halves:      11110000100110100110101000100000
          - Bit Inversion:    00001111011001011001010111011111
          - Compressed Key:   01001000111000110001101000011011   [done by compression P-Box]
          - XOR with Key:     01000111100001101000111111000100

          - FUNCTION OUTPUT:  01000111100001101000111111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010111101101101100010011000011

       - FUNCTION OUTPUT:          01000111100001101000111111000100

       - Left XOR FUNCTION OUTPUT: 11010000001100000100101100000111

       - Next Round Left 32 Bits:  11010001100001100000011001010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000001100000100101100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001100001100000011001010001

       - Right 32 Bits:            11010000001100000100101100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101110101011001001000011001101101101101000111010001   [Subkey: 7]
          - Input Half:       11010000001100000100101100000111
          - S-Box Result:     01101111000111110111100011111101   [per every group of 4-bits]
          - Split Into Two:   0110111100011111 [L] 0111100011111101 [R]
          - Swap Halves:      01111000111111010110111100011111
          - Bit Inversion:    10000111000000101001000011100000
          - Compressed Key:   01011010000100101110011100110010   [done by compression P-Box]
          - XOR with Key:     11011101000100000111011111010010

          - FUNCTION OUTPUT:  11011101000100000111011111010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001100001100000011001010001

       - FUNCTION OUTPUT:          11011101000100000111011111010010

       - Left XOR FUNCTION OUTPUT: 00001100100101100111000110000011

       - Next Round Left 32 Bits:  11010000001100000100101100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100100101100111000110000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000001100000100101100000111

       - Right 32 Bits:            00001100100101100111000110000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011101010001010100110110111100110010010010010111000101   [Subkey: 6]
          - Input Half:       00001100100101100111000110000011
          - S-Box Result:     11110101001100001101101000100001   [per every group of 4-bits]
          - Split Into Two:   1111010100110000 [L] 1101101000100001 [R]
          - Swap Halves:      11011010001000011111010100110000
          - Bit Inversion:    00100101110111100000101011001111
          - Compressed Key:   11010010011001111001100001111010   [done by compression P-Box]
          - XOR with Key:     11110111101110011001001010110101

          - FUNCTION OUTPUT:  11110111101110011001001010110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000001100000100101100000111

       - FUNCTION OUTPUT:          11110111101110011001001010110101

       - Left XOR FUNCTION OUTPUT: 00100111100010011101100110110010

       - Next Round Left 32 Bits:  00001100100101100111000110000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111100010011101100110110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100100101100111000110000011

       - Right 32 Bits:            00100111100010011101100110110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000100010101110101011001001000011001101101101101000111   [Subkey: 5]
          - Input Half:       00100111100010011101100110110010
          - S-Box Result:     11101101001000110110001110001110   [per every group of 4-bits]
          - Split Into Two:   1110110100100011 [L] 0110001110001110 [R]
          - Swap Halves:      01100011100011101110110100100011
          - Bit Inversion:    10011100011100010001001011011100
          - Compressed Key:   00011010010110000011011110011011   [done by compression P-Box]
          - XOR with Key:     10000110001010010010010101000111

          - FUNCTION OUTPUT:  10000110001010010010010101000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100100101100111000110000011

       - FUNCTION OUTPUT:          10000110001010010010010101000111

       - Left XOR FUNCTION OUTPUT: 10001010101111110101010011000100

       - Next Round Left 32 Bits:  00100111100010011101100110110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001010101111110101010011000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111100010011101100110110010

       - Right 32 Bits:            10001010101111110101010011000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010111011101010001010100110110111100110010010010010111   [Subkey: 4]
          - Input Half:       10001010101111110101010011000100
          - S-Box Result:     00100100100010111001011101010111   [per every group of 4-bits]
          - Split Into Two:   0010010010001011 [L] 1001011101010111 [R]
          - Swap Halves:      10010111010101110010010010001011
          - Bit Inversion:    01101000101010001101101101110100
          - Compressed Key:   01111110000100111011110001101011   [done by compression P-Box]
          - XOR with Key:     00010110101110110110011100011111

          - FUNCTION OUTPUT:  00010110101110110110011100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111100010011101100110110010

       - FUNCTION OUTPUT:          00010110101110110110011100011111

       - Left XOR FUNCTION OUTPUT: 00110001001100101011111010101101

       - Next Round Left 32 Bits:  10001010101111110101010011000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001001100101011111010101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001010101111110101010011000100

       - Right 32 Bits:            00110001001100101011111010101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00011101000100010101110101011001001000011001101101101101   [Subkey: 3]
          - Input Half:       00110001001100101011111010101101
          - S-Box Result:     00011010000111101000110001000110   [per every group of 4-bits]
          - Split Into Two:   0001101000011110 [L] 1000110001000110 [R]
          - Swap Halves:      10001100010001100001101000011110
          - Bit Inversion:    01110011101110011110010111100001
          - Compressed Key:   11011000011110100110100110011110   [done by compression P-Box]
          - XOR with Key:     10101011110000111000110001111111

          - FUNCTION OUTPUT:  10101011110000111000110001111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001010101111110101010011000100

       - FUNCTION OUTPUT:          10101011110000111000110001111111

       - Left XOR FUNCTION OUTPUT: 00100001011111001101100010111011

       - Next Round Left 32 Bits:  00110001001100101011111010101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100001011111001101100010111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001001100101011111010101101

       - Right 32 Bits:            00100001011111001101100010111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011100010111011101010001010100110110111100110010010010   [Subkey: 2]
          - Input Half:       00100001011111001101100010111011
          - S-Box Result:     11101010110101010110001010001000   [per every group of 4-bits]
          - Split Into Two:   1110101011010101 [L] 0110001010001000 [R]
          - Swap Halves:      01100010100010001110101011010101
          - Bit Inversion:    10011101011101110001010100101010
          - Compressed Key:   11011011010110101001111101100001   [done by compression P-Box]
          - XOR with Key:     01000110001011011000101001001011

          - FUNCTION OUTPUT:  01000110001011011000101001001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001001100101011111010101101

       - FUNCTION OUTPUT:          01000110001011011000101001001011

       - Left XOR FUNCTION OUTPUT: 01110111000111110011010011100110

       - Next Round Left 32 Bits:  00100001011111001101100010111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111000111110011010011100110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100001011111001101100010111011

       - Right 32 Bits:            01110111000111110011010011100110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10110100011101000100010101110101011001001000011001101101   [Subkey: 1]
          - Input Half:       01110111000111110011010011100110
          - S-Box Result:     11011101101010110001011111000000   [per every group of 4-bits]
          - Split Into Two:   1101110110101011 [L] 0001011111000000 [R]
          - Swap Halves:      00010111110000001101110110101011
          - Bit Inversion:    11101000001111110010001001010100
          - Compressed Key:   01011110010010110111000111001110   [done by compression P-Box]
          - XOR with Key:     10110110011101000101001110011010

          - FUNCTION OUTPUT:  10110110011101000101001110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100001011111001101100010111011

       - FUNCTION OUTPUT:          10110110011101000101001110011010

       - Left XOR FUNCTION OUTPUT: 10010111000010001000101100100001

       - Next Round Left 32 Bits:  01110111000111110011010011100110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010111000010001000101100100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1001011100001000100010110010000101110111000111110011010011100110

 > Decrypted Block:     1001011100001000100010110010000101110111000111110011010011100110


!!!CBC: Previous Ciphertext:                             0101110011100110001011111101101111011101001001011101111011010110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    1100101111101110101001001111101010101010001110101110101000110000

 > Final Processed Block:                                1100101111101110101001001111101010101010001110101110101000110000


FINAL PROCESSED DATA BLOCKS: 1001101010110000111101011101000111101101110100010110101001110010,1101111001001101001011100100111000001101011010110101111000001011,1101110001000001101010111100001011000100001011100111000010000000,0110001000010010101101100110000010101001010101011011110110011001,1011110100000011001110100101010011110010101110010101101111011011,1100101111101110101001001111101010101010001110101110101000110000,

BLOCKS IN ASCII:             ?°õÑíÑjrÞM.Nk^ÜA«ÂÄ.p?b¶`©U½?½:Tò¹[ÛËî¤úª:ê0

=========================================================================================================================
STAGE 2: DES [ENCRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: 1eTpTeM
In Binary:  00110001011001010101010001110000010101000110010101001101

Subkeys:    Key i = Key (i - 1) [Shifted left by 3 and then inverted]

Subkey 1  : 01110100110101010101110001111101010111001101010110010110
Subkey 2  : 01011001010101010001110000010101000110010101001101001100
Subkey 3  : 00110101010101110001111101010111001101010110010110011101
Subkey 4  : 01010101010001110000010101000110010101001101001100010110
Subkey 5  : 01010101110001111101010111001101010110010110011101001101
Subkey 6  : 01010001110000010101000110010101001101001100010110010101
Subkey 7  : 01110001111101010111001101010110010110011101001101010101
Subkey 8  : 01110000010101000110010101001101001100010110010101010100
Subkey 9  : 01111101010111001101010110010110011101001101010101011100
Subkey 10 : 00010101000110010101001101001100010110010101010100011100
Subkey 11 : 01010111001101010110010110011101001101010101011100011111
Subkey 12 : 01000110010101001101001100010110010101010100011100000101
Subkey 13 : 11001101010110010110011101001101010101011100011111010101
Subkey 14 : 10010101001101001100010110010101010100011100000101010001
Subkey 15 : 01010110010110011101001101010101011100011111010101110011
Subkey 16 : 01001101001100010110010101010100011100000101010001100101

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to encrypt         : ?°õÑíÑjrÞM.Nk^ÜA«ÂÄ.p?b¶`©U½?½:Tò¹[ÛËî¤úª:ê0

Data padded with spaces : ?°õÑíÑjrÞM.Nk^ÜA«ÂÄ.p?b¶`©U½?½:Tò¹[ÛËî¤úª:ê0[Padded with '0' spaces]

Data in ASCII           : 154,176,245,209,237,209,106,114,222,77,46,78,13,107,94,11,220,65,171,194,196,46,112,128,98,18,182,96,169,85,189,153,189,3,58,84,242,185,91,219,203,238,164,250,170,58,234,48,

Data in Binary          : 10011010,10110000,11110101,11010001,11101101,11010001,01101010,01110010,11011110,01001101,00101110,01001110,00001101,01101011,01011110,00001011,11011100,01000001,10101011,11000010,11000100,00101110,01110000,10000000,01100010,00010010,10110110,01100000,10101001,01010101,10111101,10011001,10111101,00000011,00111010,01010100,11110010,10111001,01011011,11011011,11001011,11101110,10100100,11111010,10101010,00111010,11101010,00110000,

Data in 64-bit Blocks   : 1001101010110000111101011101000111101101110100010110101001110010,1101111001001101001011100100111000001101011010110101111000001011,1101110001000001101010111100001011000100001011100111000010000000,0110001000010010101101100110000010101001010101011011110110011001,1011110100000011001110100101010011110010101110010101101111011011,1100101111101110101001001111101010101010001110101110101000110000,



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0100001001110000010100000111000001110011011101000111001000110101)

Plaintext Block: 1:                                      1001101010110000111101011101000111101101110100010110101001110010

!!!CBC: Previous Ciphertext:                             0100001001110000010100000111000001110011011101000111001000110101

!!!CBC: Current Block XOR with Previous Ciphertext:      1101100011000000101001011010000110011110101001010001100001000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011000110000001010010110100001

       - Right 32 Bits:            10011110101001010001100001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100110101010101110001111101010111001101010110010110   [Subkey: 1]
          - Input Half:       10011110101001010001100001000111
          - S-Box Result:     00111100010010011010001001111101   [per every group of 4-bits]
          - Split Into Two:   0011110001001001 [L] 1010001001111101 [R]
          - Swap Halves:      10100010011111010011110001001001
          - Bit Inversion:    01011101100000101100001110110110
          - Compressed Key:   01011010011110110101001101111001   [done by compression P-Box]
          - XOR with Key:     00000111111110011001000011001111

          - FUNCTION OUTPUT:  00000111111110011001000011001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011000110000001010010110100001

       - FUNCTION OUTPUT:          00000111111110011001000011001111

       - Left XOR FUNCTION OUTPUT: 11011111001110010011010101101110

       - Next Round Left 32 Bits:  10011110101001010001100001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011111001110010011010101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011110101001010001100001000111

       - Right 32 Bits:            11011111001110010011010101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110000010101000110010101001101001100   [Subkey: 2]
          - Input Half:       11011111001110010011010101101110
          - S-Box Result:     01101011000100110001100100001100   [per every group of 4-bits]
          - Split Into Two:   0110101100010011 [L] 0001100100001100 [R]
          - Swap Halves:      00011001000011000110101100010011
          - Bit Inversion:    11100110111100111001010011101100
          - Compressed Key:   11001010001100100100101010011100   [done by compression P-Box]
          - XOR with Key:     00101100110000011101111001110000

          - FUNCTION OUTPUT:  00101100110000011101111001110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011110101001010001100001000111

       - FUNCTION OUTPUT:          00101100110000011101111001110000

       - Left XOR FUNCTION OUTPUT: 10110010011001001100011000110111

       - Next Round Left 32 Bits:  11011111001110010011010101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010011001001100011000110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011111001110010011010101101110

       - Right 32 Bits:            10110010011001001100011000110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001111101010111001101010110010110011101   [Subkey: 3]
          - Input Half:       10110010011001001100011000110111
          - S-Box Result:     10001110000001110101000000011101   [per every group of 4-bits]
          - Split Into Two:   1000111000000111 [L] 0101000000011101 [R]
          - Swap Halves:      01010000000111011000111000000111
          - Bit Inversion:    10101111111000100111000111111000
          - Compressed Key:   01011010001110100110101001111110   [done by compression P-Box]
          - XOR with Key:     11110101110110000001101110000110

          - FUNCTION OUTPUT:  11110101110110000001101110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011111001110010011010101101110

       - FUNCTION OUTPUT:          11110101110110000001101110000110

       - Left XOR FUNCTION OUTPUT: 00101010111000010010111011101000

       - Next Round Left 32 Bits:  10110010011001001100011000110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010111000010010111011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110010011001001100011000110111

       - Right 32 Bits:            00101010111000010010111011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110000010101000110010101001101001100010110   [Subkey: 4]
          - Input Half:       00101010111000010010111011101000
          - S-Box Result:     11100100110010101110110011000010   [per every group of 4-bits]
          - Split Into Two:   1110010011001010 [L] 1110110011000010 [R]
          - Swap Halves:      11101100110000101110010011001010
          - Bit Inversion:    00010011001111010001101100110101
          - Compressed Key:   01010010000010000001001110011001   [done by compression P-Box]
          - XOR with Key:     01000001001101010000100010101100

          - FUNCTION OUTPUT:  01000001001101010000100010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110010011001001100011000110111

       - FUNCTION OUTPUT:          01000001001101010000100010101100

       - Left XOR FUNCTION OUTPUT: 11110011010100011100111010011011

       - Next Round Left 32 Bits:  00101010111000010010111011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011010100011100111010011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010111000010010111011101000

       - Right 32 Bits:            11110011010100011100111010011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001111101010111001101010110010110011101001101   [Subkey: 5]
          - Input Half:       11110011010100011100111010011011
          - S-Box Result:     10110001100110100101110000111000   [per every group of 4-bits]
          - Split Into Two:   1011000110011010 [L] 0101110000111000 [R]
          - Swap Halves:      01011100001110001011000110011010
          - Bit Inversion:    10100011110001110100111001100101
          - Compressed Key:   01010010010111000101101011011110   [done by compression P-Box]
          - XOR with Key:     11110001100110110001010010111011

          - FUNCTION OUTPUT:  11110001100110110001010010111011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010111000010010111011101000

       - FUNCTION OUTPUT:          11110001100110110001010010111011

       - Left XOR FUNCTION OUTPUT: 11011011011110100011101001010011

       - Next Round Left 32 Bits:  11110011010100011100111010011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011011011110100011101001010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011010100011100111010011011

       - Right 32 Bits:            11011011011110100011101001010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001110000010101000110010101001101001100010110010101   [Subkey: 6]
          - Input Half:       11011011011110100011101001010011
          - S-Box Result:     01101000110101000001010010010001   [per every group of 4-bits]
          - Split Into Two:   0110100011010100 [L] 0001010010010001 [R]
          - Swap Halves:      00010100100100010110100011010100
          - Bit Inversion:    11101011011011101001011100101011
          - Compressed Key:   01000000010101100110001101111010   [done by compression P-Box]
          - XOR with Key:     10101011001110001111010001010001

          - FUNCTION OUTPUT:  10101011001110001111010001010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011010100011100111010011011

       - FUNCTION OUTPUT:          10101011001110001111010001010001

       - Left XOR FUNCTION OUTPUT: 01011000011010010011101011001010

       - Next Round Left 32 Bits:  11011011011110100011101001010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000011010010011101011001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011011011110100011101001010011

       - Right 32 Bits:            01011000011010010011101011001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110001111101010111001101010110010110011101001101010101   [Subkey: 7]
          - Input Half:       01011000011010010011101011001010
          - S-Box Result:     10010010000000110001010001010100   [per every group of 4-bits]
          - Split Into Two:   1001001000000011 [L] 0001010001010100 [R]
          - Swap Halves:      00010100010101001001001000000011
          - Bit Inversion:    11101011101010110110110111111100
          - Compressed Key:   01001110110110100001101110011010   [done by compression P-Box]
          - XOR with Key:     10100101011100010111011001100110

          - FUNCTION OUTPUT:  10100101011100010111011001100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011011011110100011101001010011

       - FUNCTION OUTPUT:          10100101011100010111011001100110

       - Left XOR FUNCTION OUTPUT: 01111110000010110100110000110101

       - Next Round Left 32 Bits:  01011000011010010011101011001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111110000010110100110000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000011010010011101011001010

       - Right 32 Bits:            01111110000010110100110000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101000110010101001101001100010110010101010100   [Subkey: 8]
          - Input Half:       01111110000010110100110000110101
          - S-Box Result:     11011100111110000111010100011001   [per every group of 4-bits]
          - Split Into Two:   1101110011111000 [L] 0111010100011001 [R]
          - Swap Halves:      01110101000110011101110011111000
          - Bit Inversion:    10001010111001100010001100000111
          - Compressed Key:   01001010110010000110101001011000   [done by compression P-Box]
          - XOR with Key:     11000000001011100100100101011111

          - FUNCTION OUTPUT:  11000000001011100100100101011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000011010010011101011001010

       - FUNCTION OUTPUT:          11000000001011100100100101011111

       - Left XOR FUNCTION OUTPUT: 10011000010001110111001110010101

       - Next Round Left 32 Bits:  01111110000010110100110000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000010001110111001110010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111110000010110100110000110101

       - Right 32 Bits:            10011000010001110111001110010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111101010111001101010110010110011101001101010101011100   [Subkey: 9]
          - Input Half:       10011000010001110111001110010101
          - S-Box Result:     00110010011111011101000100111001   [per every group of 4-bits]
          - Split Into Two:   0011001001111101 [L] 1101000100111001 [R]
          - Swap Halves:      11010001001110010011001001111101
          - Bit Inversion:    00101110110001101100110110000010
          - Compressed Key:   11011011010101100011001101011100   [done by compression P-Box]
          - XOR with Key:     11110101100100001111111011011110

          - FUNCTION OUTPUT:  11110101100100001111111011011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111110000010110100110000110101

       - FUNCTION OUTPUT:          11110101100100001111111011011110

       - Left XOR FUNCTION OUTPUT: 10001011100110111011001011101011

       - Next Round Left 32 Bits:  10011000010001110111001110010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011100110111011001011101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000010001110111001110010101

       - Right 32 Bits:            10001011100110111011001011101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101000110010101001101001100010110010101010100011100   [Subkey: 10]
          - Input Half:       10001011100110111011001011101011
          - S-Box Result:     00101000001110001000111011001000   [per every group of 4-bits]
          - Split Into Two:   0010100000111000 [L] 1000111011001000 [R]
          - Swap Halves:      10001110110010000010100000111000
          - Bit Inversion:    01110001001101111101011111000111
          - Compressed Key:   01011001010110000001101001011100   [done by compression P-Box]
          - XOR with Key:     00101000011011111100110110011011

          - FUNCTION OUTPUT:  00101000011011111100110110011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000010001110111001110010101

       - FUNCTION OUTPUT:          00101000011011111100110110011011

       - Left XOR FUNCTION OUTPUT: 10110000001010001011111000001110

       - Next Round Left 32 Bits:  10001011100110111011001011101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110000001010001011111000001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011100110111011001011101011

       - Right 32 Bits:            10110000001010001011111000001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111001101010110010110011101001101010101011100011111   [Subkey: 11]
          - Input Half:       10110000001010001011111000001110
          - S-Box Result:     10001111111000101000110011111100   [per every group of 4-bits]
          - Split Into Two:   1000111111100010 [L] 1000110011111100 [R]
          - Swap Halves:      10001100111111001000111111100010
          - Bit Inversion:    01110011000000110111000000011101
          - Compressed Key:   01111110110001100110101011011111   [done by compression P-Box]
          - XOR with Key:     00001101110001010001101011000010

          - FUNCTION OUTPUT:  00001101110001010001101011000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011100110111011001011101011

       - FUNCTION OUTPUT:          00001101110001010001101011000010

       - Left XOR FUNCTION OUTPUT: 10000110010111101010100000101001

       - Next Round Left 32 Bits:  10110000001010001011111000001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110010111101010100000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110000001010001011111000001110

       - Right 32 Bits:            10000110010111101010100000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110010101001101001100010110010101010100011100000101   [Subkey: 12]
          - Input Half:       10000110010111101010100000101001
          - S-Box Result:     00100000100111000100001011100011   [per every group of 4-bits]
          - Split Into Two:   0010000010011100 [L] 0100001011100011 [R]
          - Swap Halves:      01000010111000110010000010011100
          - Bit Inversion:    10111101000111001101111101100011
          - Compressed Key:   00111010010100100001101011011010   [done by compression P-Box]
          - XOR with Key:     10000111010011101100010110111001

          - FUNCTION OUTPUT:  10000111010011101100010110111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110000001010001011111000001110

       - FUNCTION OUTPUT:          10000111010011101100010110111001

       - Left XOR FUNCTION OUTPUT: 00110111011001100111101110110111

       - Next Round Left 32 Bits:  10000110010111101010100000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111011001100111101110110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110010111101010100000101001

       - Right 32 Bits:            00110111011001100111101110110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010110010110011101001101010101011100011111010101   [Subkey: 13]
          - Input Half:       00110111011001100111101110110111
          - S-Box Result:     00011101000000001101100010001101   [per every group of 4-bits]
          - Split Into Two:   0001110100000000 [L] 1101100010001101 [R]
          - Swap Halves:      11011000100011010001110100000000
          - Bit Inversion:    00100111011100101110001011111111
          - Compressed Key:   10011001110010000101101111111010   [done by compression P-Box]
          - XOR with Key:     10111110101110101011100100000101

          - FUNCTION OUTPUT:  10111110101110101011100100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110010111101010100000101001

       - FUNCTION OUTPUT:          10111110101110101011100100000101

       - Left XOR FUNCTION OUTPUT: 00111000111001000001000100101100

       - Next Round Left 32 Bits:  00110111011001100111101110110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111000111001000001000100101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111011001100111101110110111

       - Right 32 Bits:            00111000111001000001000100101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101001101001100010110010101010100011100000101010001   [Subkey: 14]
          - Input Half:       00111000111001000001000100101100
          - S-Box Result:     00010010110001111010101011100101   [per every group of 4-bits]
          - Split Into Two:   0001001011000111 [L] 1010101011100101 [R]
          - Swap Halves:      10101010111001010001001011000111
          - Bit Inversion:    01010101000110101110110100111000
          - Compressed Key:   01011110010001100101101100010010   [done by compression P-Box]
          - XOR with Key:     00001011010111001011011000101010

          - FUNCTION OUTPUT:  00001011010111001011011000101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111011001100111101110110111

       - FUNCTION OUTPUT:          00001011010111001011011000101010

       - Left XOR FUNCTION OUTPUT: 00111100001110101100110110011101

       - Next Round Left 32 Bits:  00111000111001000001000100101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100001110101100110110011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111000111001000001000100101100

       - Right 32 Bits:            00111100001110101100110110011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010110011101001101010101011100011111010101110011   [Subkey: 15]
          - Input Half:       00111100001110101100110110011101
          - S-Box Result:     00010101000101000101011000110110   [per every group of 4-bits]
          - Split Into Two:   0001010100010100 [L] 0101011000110110 [R]
          - Swap Halves:      01010110001101100001010100010100
          - Bit Inversion:    10101001110010011110101011101011
          - Compressed Key:   01111001010110100111101101010011   [done by compression P-Box]
          - XOR with Key:     11010000100100111001000110111000

          - FUNCTION OUTPUT:  11010000100100111001000110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111000111001000001000100101100

       - FUNCTION OUTPUT:          11010000100100111001000110111000

       - Left XOR FUNCTION OUTPUT: 11101000011101111000000010010100

       - Next Round Left 32 Bits:  00111100001110101100110110011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101000011101111000000010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100001110101100110110011101

       - Right 32 Bits:            11101000011101111000000010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101001100010110010101010100011100000101010001100101   [Subkey: 16]
          - Input Half:       11101000011101111000000010010100
          - S-Box Result:     11000010110111010010111100110111   [per every group of 4-bits]
          - Split Into Two:   1100001011011101 [L] 0010111100110111 [R]
          - Swap Halves:      00101111001101111100001011011101
          - Bit Inversion:    11010000110010000011110100100010
          - Compressed Key:   10011100110010100011001001001010   [done by compression P-Box]
          - XOR with Key:     01001100000000100000111101101000

          - FUNCTION OUTPUT:  01001100000000100000111101101000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100001110101100110110011101

       - FUNCTION OUTPUT:          01001100000000100000111101101000

       - Left XOR FUNCTION OUTPUT: 01110000001110001100001011110101

       - Next Round Left 32 Bits:  11101000011101111000000010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000001110001100001011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111000000111000110000101111010111101000011101111000000010010100

 > Processed Block:     0111000000111000110000101111010111101000011101111000000010010100



Plaintext Block: 2:                                      1101111001001101001011100100111000001101011010110101111000001011

!!!CBC: Previous Ciphertext:                             0111000000111000110000101111010111101000011101111000000010010100

!!!CBC: Current Block XOR with Previous Ciphertext:      1010111001110101111011001011101111100101000111001101111010011111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110011101011110110010111011

       - Right 32 Bits:            11100101000111001101111010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100110101010101110001111101010111001101010110010110   [Subkey: 1]
          - Input Half:       11100101000111001101111010011111
          - S-Box Result:     11001001101001010110110000111011   [per every group of 4-bits]
          - Split Into Two:   1100100110100101 [L] 0110110000111011 [R]
          - Swap Halves:      01101100001110111100100110100101
          - Bit Inversion:    10010011110001000011011001011010
          - Compressed Key:   01011010011110110101001101111001   [done by compression P-Box]
          - XOR with Key:     11001001101111110110010100100011

          - FUNCTION OUTPUT:  11001001101111110110010100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110011101011110110010111011

       - FUNCTION OUTPUT:          11001001101111110110010100100011

       - Left XOR FUNCTION OUTPUT: 01100111110010101000100110011000

       - Next Round Left 32 Bits:  11100101000111001101111010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100111110010101000100110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100101000111001101111010011111

       - Right 32 Bits:            01100111110010101000100110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110000010101000110010101001101001100   [Subkey: 2]
          - Input Half:       01100111110010101000100110011000
          - S-Box Result:     00001101010101000010001100110010   [per every group of 4-bits]
          - Split Into Two:   0000110101010100 [L] 0010001100110010 [R]
          - Swap Halves:      00100011001100100000110101010100
          - Bit Inversion:    11011100110011011111001010101011
          - Compressed Key:   11001010001100100100101010011100   [done by compression P-Box]
          - XOR with Key:     00010110111111111011100000110111

          - FUNCTION OUTPUT:  00010110111111111011100000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100101000111001101111010011111

       - FUNCTION OUTPUT:          00010110111111111011100000110111

       - Left XOR FUNCTION OUTPUT: 11110011111000110110011010101000

       - Next Round Left 32 Bits:  01100111110010101000100110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011111000110110011010101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100111110010101000100110011000

       - Right 32 Bits:            11110011111000110110011010101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001111101010111001101010110010110011101   [Subkey: 3]
          - Input Half:       11110011111000110110011010101000
          - S-Box Result:     10110001110000010000000001000010   [per every group of 4-bits]
          - Split Into Two:   1011000111000001 [L] 0000000001000010 [R]
          - Swap Halves:      00000000010000101011000111000001
          - Bit Inversion:    11111111101111010100111000111110
          - Compressed Key:   01011010001110100110101001111110   [done by compression P-Box]
          - XOR with Key:     10100101100001110010010001000000

          - FUNCTION OUTPUT:  10100101100001110010010001000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100111110010101000100110011000

       - FUNCTION OUTPUT:          10100101100001110010010001000000

       - Left XOR FUNCTION OUTPUT: 11000010010011011010110111011000

       - Next Round Left 32 Bits:  11110011111000110110011010101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000010010011011010110111011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011111000110110011010101000

       - Right 32 Bits:            11000010010011011010110111011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110000010101000110010101001101001100010110   [Subkey: 4]
          - Input Half:       11000010010011011010110111011000
          - S-Box Result:     01011110011101100100011001100010   [per every group of 4-bits]
          - Split Into Two:   0101111001110110 [L] 0100011001100010 [R]
          - Swap Halves:      01000110011000100101111001110110
          - Bit Inversion:    10111001100111011010000110001001
          - Compressed Key:   01010010000010000001001110011001   [done by compression P-Box]
          - XOR with Key:     11101011100101011011001000010000

          - FUNCTION OUTPUT:  11101011100101011011001000010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011111000110110011010101000

       - FUNCTION OUTPUT:          11101011100101011011001000010000

       - Left XOR FUNCTION OUTPUT: 00011000011101101101010010111000

       - Next Round Left 32 Bits:  11000010010011011010110111011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000011101101101010010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000010010011011010110111011000

       - Right 32 Bits:            00011000011101101101010010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001111101010111001101010110010110011101001101   [Subkey: 5]
          - Input Half:       00011000011101101101010010111000
          - S-Box Result:     10100010110100000110011110000010   [per every group of 4-bits]
          - Split Into Two:   1010001011010000 [L] 0110011110000010 [R]
          - Swap Halves:      01100111100000101010001011010000
          - Bit Inversion:    10011000011111010101110100101111
          - Compressed Key:   01010010010111000101101011011110   [done by compression P-Box]
          - XOR with Key:     11001010001000010000011111110001

          - FUNCTION OUTPUT:  11001010001000010000011111110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000010010011011010110111011000

       - FUNCTION OUTPUT:          11001010001000010000011111110001

       - Left XOR FUNCTION OUTPUT: 00001000011011001010101000101001

       - Next Round Left 32 Bits:  00011000011101101101010010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001000011011001010101000101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000011101101101010010111000

       - Right 32 Bits:            00001000011011001010101000101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001110000010101000110010101001101001100010110010101   [Subkey: 6]
          - Input Half:       00001000011011001010101000101001
          - S-Box Result:     11110010000001010100010011100011   [per every group of 4-bits]
          - Split Into Two:   1111001000000101 [L] 0100010011100011 [R]
          - Swap Halves:      01000100111000111111001000000101
          - Bit Inversion:    10111011000111000000110111111010
          - Compressed Key:   01000000010101100110001101111010   [done by compression P-Box]
          - XOR with Key:     11111011010010100110111010000000

          - FUNCTION OUTPUT:  11111011010010100110111010000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000011101101101010010111000

       - FUNCTION OUTPUT:          11111011010010100110111010000000

       - Left XOR FUNCTION OUTPUT: 11100011001111001011101000111000

       - Next Round Left 32 Bits:  00001000011011001010101000101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100011001111001011101000111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001000011011001010101000101001

       - Right 32 Bits:            11100011001111001011101000111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110001111101010111001101010110010110011101001101010101   [Subkey: 7]
          - Input Half:       11100011001111001011101000111000
          - S-Box Result:     11000001000101011000010000010010   [per every group of 4-bits]
          - Split Into Two:   1100000100010101 [L] 1000010000010010 [R]
          - Swap Halves:      10000100000100101100000100010101
          - Bit Inversion:    01111011111011010011111011101010
          - Compressed Key:   01001110110110100001101110011010   [done by compression P-Box]
          - XOR with Key:     00110101001101110010010101110000

          - FUNCTION OUTPUT:  00110101001101110010010101110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001000011011001010101000101001

       - FUNCTION OUTPUT:          00110101001101110010010101110000

       - Left XOR FUNCTION OUTPUT: 00111101010110111000111101011001

       - Next Round Left 32 Bits:  11100011001111001011101000111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111101010110111000111101011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100011001111001011101000111000

       - Right 32 Bits:            00111101010110111000111101011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101000110010101001101001100010110010101010100   [Subkey: 8]
          - Input Half:       00111101010110111000111101011001
          - S-Box Result:     00010110100110000010101110010011   [per every group of 4-bits]
          - Split Into Two:   0001011010011000 [L] 0010101110010011 [R]
          - Swap Halves:      00101011100100110001011010011000
          - Bit Inversion:    11010100011011001110100101100111
          - Compressed Key:   01001010110010000110101001011000   [done by compression P-Box]
          - XOR with Key:     10011110101001001000001100111111

          - FUNCTION OUTPUT:  10011110101001001000001100111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100011001111001011101000111000

       - FUNCTION OUTPUT:          10011110101001001000001100111111

       - Left XOR FUNCTION OUTPUT: 01111101100110000011100100000111

       - Next Round Left 32 Bits:  00111101010110111000111101011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101100110000011100100000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111101010110111000111101011001

       - Right 32 Bits:            01111101100110000011100100000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111101010111001101010110010110011101001101010101011100   [Subkey: 9]
          - Input Half:       01111101100110000011100100000111
          - S-Box Result:     11010110001100100001001111111101   [per every group of 4-bits]
          - Split Into Two:   1101011000110010 [L] 0001001111111101 [R]
          - Swap Halves:      00010011111111011101011000110010
          - Bit Inversion:    11101100000000100010100111001101
          - Compressed Key:   11011011010101100011001101011100   [done by compression P-Box]
          - XOR with Key:     00110111010101000001101010010001

          - FUNCTION OUTPUT:  00110111010101000001101010010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111101010110111000111101011001

       - FUNCTION OUTPUT:          00110111010101000001101010010001

       - Left XOR FUNCTION OUTPUT: 00001010000011111001010111001000

       - Next Round Left 32 Bits:  01111101100110000011100100000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010000011111001010111001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101100110000011100100000111

       - Right 32 Bits:            00001010000011111001010111001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101000110010101001101001100010110010101010100011100   [Subkey: 10]
          - Input Half:       00001010000011111001010111001000
          - S-Box Result:     11110100111110110011100101010010   [per every group of 4-bits]
          - Split Into Two:   1111010011111011 [L] 0011100101010010 [R]
          - Swap Halves:      00111001010100101111010011111011
          - Bit Inversion:    11000110101011010000101100000100
          - Compressed Key:   01011001010110000001101001011100   [done by compression P-Box]
          - XOR with Key:     10011111111101010001000101011000

          - FUNCTION OUTPUT:  10011111111101010001000101011000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101100110000011100100000111

       - FUNCTION OUTPUT:          10011111111101010001000101011000

       - Left XOR FUNCTION OUTPUT: 11100010011011010010100001011111

       - Next Round Left 32 Bits:  00001010000011111001010111001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010011011010010100001011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001010000011111001010111001000

       - Right 32 Bits:            11100010011011010010100001011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111001101010110010110011101001101010101011100011111   [Subkey: 11]
          - Input Half:       11100010011011010010100001011111
          - S-Box Result:     11001110000001101110001010011011   [per every group of 4-bits]
          - Split Into Two:   1100111000000110 [L] 1110001010011011 [R]
          - Swap Halves:      11100010100110111100111000000110
          - Bit Inversion:    00011101011001000011000111111001
          - Compressed Key:   01111110110001100110101011011111   [done by compression P-Box]
          - XOR with Key:     01100011101000100101101100100110

          - FUNCTION OUTPUT:  01100011101000100101101100100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001010000011111001010111001000

       - FUNCTION OUTPUT:          01100011101000100101101100100110

       - Left XOR FUNCTION OUTPUT: 01101001101011011100111011101110

       - Next Round Left 32 Bits:  11100010011011010010100001011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101001101011011100111011101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010011011010010100001011111

       - Right 32 Bits:            01101001101011011100111011101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110010101001101001100010110010101010100011100000101   [Subkey: 12]
          - Input Half:       01101001101011011100111011101110
          - S-Box Result:     00000011010001100101110011001100   [per every group of 4-bits]
          - Split Into Two:   0000001101000110 [L] 0101110011001100 [R]
          - Swap Halves:      01011100110011000000001101000110
          - Bit Inversion:    10100011001100111111110010111001
          - Compressed Key:   00111010010100100001101011011010   [done by compression P-Box]
          - XOR with Key:     10011001011000011110011001100011

          - FUNCTION OUTPUT:  10011001011000011110011001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010011011010010100001011111

       - FUNCTION OUTPUT:          10011001011000011110011001100011

       - Left XOR FUNCTION OUTPUT: 01111011000011001100111000111100

       - Next Round Left 32 Bits:  01101001101011011100111011101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011000011001100111000111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101001101011011100111011101110

       - Right 32 Bits:            01111011000011001100111000111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010110010110011101001101010101011100011111010101   [Subkey: 13]
          - Input Half:       01111011000011001100111000111100
          - S-Box Result:     11011000111101010101110000010101   [per every group of 4-bits]
          - Split Into Two:   1101100011110101 [L] 0101110000010101 [R]
          - Swap Halves:      01011100000101011101100011110101
          - Bit Inversion:    10100011111010100010011100001010
          - Compressed Key:   10011001110010000101101111111010   [done by compression P-Box]
          - XOR with Key:     00111010001000100111110011110000

          - FUNCTION OUTPUT:  00111010001000100111110011110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101001101011011100111011101110

       - FUNCTION OUTPUT:          00111010001000100111110011110000

       - Left XOR FUNCTION OUTPUT: 01010011100011111011001000011110

       - Next Round Left 32 Bits:  01111011000011001100111000111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011100011111011001000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011000011001100111000111100

       - Right 32 Bits:            01010011100011111011001000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101001101001100010110010101010100011100000101010001   [Subkey: 14]
          - Input Half:       01010011100011111011001000011110
          - S-Box Result:     10010001001010111000111010101100   [per every group of 4-bits]
          - Split Into Two:   1001000100101011 [L] 1000111010101100 [R]
          - Swap Halves:      10001110101011001001000100101011
          - Bit Inversion:    01110001010100110110111011010100
          - Compressed Key:   01011110010001100101101100010010   [done by compression P-Box]
          - XOR with Key:     00101111000101010011010111000110

          - FUNCTION OUTPUT:  00101111000101010011010111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011000011001100111000111100

       - FUNCTION OUTPUT:          00101111000101010011010111000110

       - Left XOR FUNCTION OUTPUT: 01010100000110011111101111111010

       - Next Round Left 32 Bits:  01010011100011111011001000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100000110011111101111111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011100011111011001000011110

       - Right 32 Bits:            01010100000110011111101111111010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010110011101001101010101011100011111010101110011   [Subkey: 15]
          - Input Half:       01010100000110011111101111111010
          - S-Box Result:     10010111101000111011100010110100   [per every group of 4-bits]
          - Split Into Two:   1001011110100011 [L] 1011100010110100 [R]
          - Swap Halves:      10111000101101001001011110100011
          - Bit Inversion:    01000111010010110110100001011100
          - Compressed Key:   01111001010110100111101101010011   [done by compression P-Box]
          - XOR with Key:     00111110000100010001001100001111

          - FUNCTION OUTPUT:  00111110000100010001001100001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011100011111011001000011110

       - FUNCTION OUTPUT:          00111110000100010001001100001111

       - Left XOR FUNCTION OUTPUT: 01101101100111101010000100010001

       - Next Round Left 32 Bits:  01010100000110011111101111111010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101101100111101010000100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100000110011111101111111010

       - Right 32 Bits:            01101101100111101010000100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101001100010110010101010100011100000101010001100101   [Subkey: 16]
          - Input Half:       01101101100111101010000100010001
          - S-Box Result:     00000110001111000100101010101010   [per every group of 4-bits]
          - Split Into Two:   0000011000111100 [L] 0100101010101010 [R]
          - Swap Halves:      01001010101010100000011000111100
          - Bit Inversion:    10110101010101011111100111000011
          - Compressed Key:   10011100110010100011001001001010   [done by compression P-Box]
          - XOR with Key:     00101001100111111100101110001001

          - FUNCTION OUTPUT:  00101001100111111100101110001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100000110011111101111111010

       - FUNCTION OUTPUT:          00101001100111111100101110001001

       - Left XOR FUNCTION OUTPUT: 01111101100001100011000001110011

       - Next Round Left 32 Bits:  01101101100111101010000100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101100001100011000001110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0111110110000110001100000111001101101101100111101010000100010001

 > Processed Block:     0111110110000110001100000111001101101101100111101010000100010001



Plaintext Block: 3:                                      1101110001000001101010111100001011000100001011100111000010000000

!!!CBC: Previous Ciphertext:                             0111110110000110001100000111001101101101100111101010000100010001

!!!CBC: Current Block XOR with Previous Ciphertext:      1010000111000111100110111011000110101001101100001101000110010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100001110001111001101110110001

       - Right 32 Bits:            10101001101100001101000110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100110101010101110001111101010111001101010110010110   [Subkey: 1]
          - Input Half:       10101001101100001101000110010001
          - S-Box Result:     01000011100011110110101000111010   [per every group of 4-bits]
          - Split Into Two:   0100001110001111 [L] 0110101000111010 [R]
          - Swap Halves:      01101010001110100100001110001111
          - Bit Inversion:    10010101110001011011110001110000
          - Compressed Key:   01011010011110110101001101111001   [done by compression P-Box]
          - XOR with Key:     11001111101111101110111100001001

          - FUNCTION OUTPUT:  11001111101111101110111100001001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100001110001111001101110110001

       - FUNCTION OUTPUT:          11001111101111101110111100001001

       - Left XOR FUNCTION OUTPUT: 01101110011110010111010010111000

       - Next Round Left 32 Bits:  10101001101100001101000110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110011110010111010010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101001101100001101000110010001

       - Right 32 Bits:            01101110011110010111010010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110000010101000110010101001101001100   [Subkey: 2]
          - Input Half:       01101110011110010111010010111000
          - S-Box Result:     00001100110100111101011110000010   [per every group of 4-bits]
          - Split Into Two:   0000110011010011 [L] 1101011110000010 [R]
          - Swap Halves:      11010111100000100000110011010011
          - Bit Inversion:    00101000011111011111001100101100
          - Compressed Key:   11001010001100100100101010011100   [done by compression P-Box]
          - XOR with Key:     11100010010011111011100110110000

          - FUNCTION OUTPUT:  11100010010011111011100110110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101001101100001101000110010001

       - FUNCTION OUTPUT:          11100010010011111011100110110000

       - Left XOR FUNCTION OUTPUT: 01001011111111110110100000100001

       - Next Round Left 32 Bits:  01101110011110010111010010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011111111110110100000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110011110010111010010111000

       - Right 32 Bits:            01001011111111110110100000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001111101010111001101010110010110011101   [Subkey: 3]
          - Input Half:       01001011111111110110100000100001
          - S-Box Result:     01111000101110110000001011101010   [per every group of 4-bits]
          - Split Into Two:   0111100010111011 [L] 0000001011101010 [R]
          - Swap Halves:      00000010111010100111100010111011
          - Bit Inversion:    11111101000101011000011101000100
          - Compressed Key:   01011010001110100110101001111110   [done by compression P-Box]
          - XOR with Key:     10100111001011111110110100111010

          - FUNCTION OUTPUT:  10100111001011111110110100111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110011110010111010010111000

       - FUNCTION OUTPUT:          10100111001011111110110100111010

       - Left XOR FUNCTION OUTPUT: 11001001010101101001100110000010

       - Next Round Left 32 Bits:  01001011111111110110100000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001001010101101001100110000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011111111110110100000100001

       - Right 32 Bits:            11001001010101101001100110000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110000010101000110010101001101001100010110   [Subkey: 4]
          - Input Half:       11001001010101101001100110000010
          - S-Box Result:     01010011100100000011001100101110   [per every group of 4-bits]
          - Split Into Two:   0101001110010000 [L] 0011001100101110 [R]
          - Swap Halves:      00110011001011100101001110010000
          - Bit Inversion:    11001100110100011010110001101111
          - Compressed Key:   01010010000010000001001110011001   [done by compression P-Box]
          - XOR with Key:     10011110110110011011111111110110

          - FUNCTION OUTPUT:  10011110110110011011111111110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011111111110110100000100001

       - FUNCTION OUTPUT:          10011110110110011011111111110110

       - Left XOR FUNCTION OUTPUT: 11010101001001101101011111010111

       - Next Round Left 32 Bits:  11001001010101101001100110000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010101001001101101011111010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001001010101101001100110000010

       - Right 32 Bits:            11010101001001101101011111010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001111101010111001101010110010110011101001101   [Subkey: 5]
          - Input Half:       11010101001001101101011111010111
          - S-Box Result:     01101001111000000110110101101101   [per every group of 4-bits]
          - Split Into Two:   0110100111100000 [L] 0110110101101101 [R]
          - Swap Halves:      01101101011011010110100111100000
          - Bit Inversion:    10010010100100101001011000011111
          - Compressed Key:   01010010010111000101101011011110   [done by compression P-Box]
          - XOR with Key:     11000000110011101100110011000001

          - FUNCTION OUTPUT:  11000000110011101100110011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001001010101101001100110000010

       - FUNCTION OUTPUT:          11000000110011101100110011000001

       - Left XOR FUNCTION OUTPUT: 00001001100110000101010101000011

       - Next Round Left 32 Bits:  11010101001001101101011111010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001100110000101010101000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010101001001101101011111010111

       - Right 32 Bits:            00001001100110000101010101000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001110000010101000110010101001101001100010110010101   [Subkey: 6]
          - Input Half:       00001001100110000101010101000011
          - S-Box Result:     11110011001100101001100101110001   [per every group of 4-bits]
          - Split Into Two:   1111001100110010 [L] 1001100101110001 [R]
          - Swap Halves:      10011001011100011111001100110010
          - Bit Inversion:    01100110100011100000110011001101
          - Compressed Key:   01000000010101100110001101111010   [done by compression P-Box]
          - XOR with Key:     00100110110110000110111110110111

          - FUNCTION OUTPUT:  00100110110110000110111110110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010101001001101101011111010111

       - FUNCTION OUTPUT:          00100110110110000110111110110111

       - Left XOR FUNCTION OUTPUT: 11110011111111101011100001100000

       - Next Round Left 32 Bits:  00001001100110000101010101000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011111111101011100001100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001001100110000101010101000011

       - Right 32 Bits:            11110011111111101011100001100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110001111101010111001101010110010110011101001101010101   [Subkey: 7]
          - Input Half:       11110011111111101011100001100000
          - S-Box Result:     10110001101111001000001000001111   [per every group of 4-bits]
          - Split Into Two:   1011000110111100 [L] 1000001000001111 [R]
          - Swap Halves:      10000010000011111011000110111100
          - Bit Inversion:    01111101111100000100111001000011
          - Compressed Key:   01001110110110100001101110011010   [done by compression P-Box]
          - XOR with Key:     00110011001010100101010111011001

          - FUNCTION OUTPUT:  00110011001010100101010111011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001001100110000101010101000011

       - FUNCTION OUTPUT:          00110011001010100101010111011001

       - Left XOR FUNCTION OUTPUT: 00111010101100100000000010011010

       - Next Round Left 32 Bits:  11110011111111101011100001100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111010101100100000000010011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110011111111101011100001100000

       - Right 32 Bits:            00111010101100100000000010011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101000110010101001101001100010110010101010100   [Subkey: 8]
          - Input Half:       00111010101100100000000010011010
          - S-Box Result:     00010100100011101111111100110100   [per every group of 4-bits]
          - Split Into Two:   0001010010001110 [L] 1111111100110100 [R]
          - Swap Halves:      11111111001101000001010010001110
          - Bit Inversion:    00000000110010111110101101110001
          - Compressed Key:   01001010110010000110101001011000   [done by compression P-Box]
          - XOR with Key:     01001010000000111000000100101001

          - FUNCTION OUTPUT:  01001010000000111000000100101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110011111111101011100001100000

       - FUNCTION OUTPUT:          01001010000000111000000100101001

       - Left XOR FUNCTION OUTPUT: 10111001111111010011100101001001

       - Next Round Left 32 Bits:  00111010101100100000000010011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111001111111010011100101001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111010101100100000000010011010

       - Right 32 Bits:            10111001111111010011100101001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111101010111001101010110010110011101001101010101011100   [Subkey: 9]
          - Input Half:       10111001111111010011100101001001
          - S-Box Result:     10000011101101100001001101110011   [per every group of 4-bits]
          - Split Into Two:   1000001110110110 [L] 0001001101110011 [R]
          - Swap Halves:      00010011011100111000001110110110
          - Bit Inversion:    11101100100011000111110001001001
          - Compressed Key:   11011011010101100011001101011100   [done by compression P-Box]
          - XOR with Key:     00110111110110100100111100010101

          - FUNCTION OUTPUT:  00110111110110100100111100010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111010101100100000000010011010

       - FUNCTION OUTPUT:          00110111110110100100111100010101

       - Left XOR FUNCTION OUTPUT: 00001101011010000100111110001111

       - Next Round Left 32 Bits:  10111001111111010011100101001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001101011010000100111110001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111001111111010011100101001001

       - Right 32 Bits:            00001101011010000100111110001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101000110010101001101001100010110010101010100011100   [Subkey: 10]
          - Input Half:       00001101011010000100111110001111
          - S-Box Result:     11110110000000100111101100101011   [per every group of 4-bits]
          - Split Into Two:   1111011000000010 [L] 0111101100101011 [R]
          - Swap Halves:      01111011001010111111011000000010
          - Bit Inversion:    10000100110101000000100111111101
          - Compressed Key:   01011001010110000001101001011100   [done by compression P-Box]
          - XOR with Key:     11011101100011000001001110100001

          - FUNCTION OUTPUT:  11011101100011000001001110100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111001111111010011100101001001

       - FUNCTION OUTPUT:          11011101100011000001001110100001

       - Left XOR FUNCTION OUTPUT: 01100100011100010010101011101000

       - Next Round Left 32 Bits:  00001101011010000100111110001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100100011100010010101011101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001101011010000100111110001111

       - Right 32 Bits:            01100100011100010010101011101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111001101010110010110011101001101010101011100011111   [Subkey: 11]
          - Input Half:       01100100011100010010101011101000
          - S-Box Result:     00000111110110101110010011000010   [per every group of 4-bits]
          - Split Into Two:   0000011111011010 [L] 1110010011000010 [R]
          - Swap Halves:      11100100110000100000011111011010
          - Bit Inversion:    00011011001111011111100000100101
          - Compressed Key:   01111110110001100110101011011111   [done by compression P-Box]
          - XOR with Key:     01100101111110111001001011111010

          - FUNCTION OUTPUT:  01100101111110111001001011111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001101011010000100111110001111

       - FUNCTION OUTPUT:          01100101111110111001001011111010

       - Left XOR FUNCTION OUTPUT: 01101000100100111101110101110101

       - Next Round Left 32 Bits:  01100100011100010010101011101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000100100111101110101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100100011100010010101011101000

       - Right 32 Bits:            01101000100100111101110101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110010101001101001100010110010101010100011100000101   [Subkey: 12]
          - Input Half:       01101000100100111101110101110101
          - S-Box Result:     00000010001100010110011011011001   [per every group of 4-bits]
          - Split Into Two:   0000001000110001 [L] 0110011011011001 [R]
          - Swap Halves:      01100110110110010000001000110001
          - Bit Inversion:    10011001001001101111110111001110
          - Compressed Key:   00111010010100100001101011011010   [done by compression P-Box]
          - XOR with Key:     10100011011101001110011100010100

          - FUNCTION OUTPUT:  10100011011101001110011100010100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100100011100010010101011101000

       - FUNCTION OUTPUT:          10100011011101001110011100010100

       - Left XOR FUNCTION OUTPUT: 11000111000001011100110111111100

       - Next Round Left 32 Bits:  01101000100100111101110101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000111000001011100110111111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000100100111101110101110101

       - Right 32 Bits:            11000111000001011100110111111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010110010110011101001101010101011100011111010101   [Subkey: 13]
          - Input Half:       11000111000001011100110111111100
          - S-Box Result:     01011101111110010101011010110101   [per every group of 4-bits]
          - Split Into Two:   0101110111111001 [L] 0101011010110101 [R]
          - Swap Halves:      01010110101101010101110111111001
          - Bit Inversion:    10101001010010101010001000000110
          - Compressed Key:   10011001110010000101101111111010   [done by compression P-Box]
          - XOR with Key:     00110000100000101111100111111100

          - FUNCTION OUTPUT:  00110000100000101111100111111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000100100111101110101110101

       - FUNCTION OUTPUT:          00110000100000101111100111111100

       - Left XOR FUNCTION OUTPUT: 01011000000100010010010010001001

       - Next Round Left 32 Bits:  11000111000001011100110111111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000000100010010010010001001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000111000001011100110111111100

       - Right 32 Bits:            01011000000100010010010010001001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101001101001100010110010101010100011100000101010001   [Subkey: 14]
          - Input Half:       01011000000100010010010010001001
          - S-Box Result:     10010010101010101110011100100011   [per every group of 4-bits]
          - Split Into Two:   1001001010101010 [L] 1110011100100011 [R]
          - Swap Halves:      11100111001000111001001010101010
          - Bit Inversion:    00011000110111000110110101010101
          - Compressed Key:   01011110010001100101101100010010   [done by compression P-Box]
          - XOR with Key:     01000110100110100011011001000111

          - FUNCTION OUTPUT:  01000110100110100011011001000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000111000001011100110111111100

       - FUNCTION OUTPUT:          01000110100110100011011001000111

       - Left XOR FUNCTION OUTPUT: 10000001100111111111101110111011

       - Next Round Left 32 Bits:  01011000000100010010010010001001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000001100111111111101110111011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000000100010010010010001001

       - Right 32 Bits:            10000001100111111111101110111011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010110011101001101010101011100011111010101110011   [Subkey: 15]
          - Input Half:       10000001100111111111101110111011
          - S-Box Result:     00101010001110111011100010001000   [per every group of 4-bits]
          - Split Into Two:   0010101000111011 [L] 1011100010001000 [R]
          - Swap Halves:      10111000100010000010101000111011
          - Bit Inversion:    01000111011101111101010111000100
          - Compressed Key:   01111001010110100111101101010011   [done by compression P-Box]
          - XOR with Key:     00111110001011011010111010010111

          - FUNCTION OUTPUT:  00111110001011011010111010010111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000000100010010010010001001

       - FUNCTION OUTPUT:          00111110001011011010111010010111

       - Left XOR FUNCTION OUTPUT: 01100110001111001000101000011110

       - Next Round Left 32 Bits:  10000001100111111111101110111011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110001111001000101000011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000001100111111111101110111011

       - Right 32 Bits:            01100110001111001000101000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101001100010110010101010100011100000101010001100101   [Subkey: 16]
          - Input Half:       01100110001111001000101000011110
          - S-Box Result:     00000000000101010010010010101100   [per every group of 4-bits]
          - Split Into Two:   0000000000010101 [L] 0010010010101100 [R]
          - Swap Halves:      00100100101011000000000000010101
          - Bit Inversion:    11011011010100111111111111101010
          - Compressed Key:   10011100110010100011001001001010   [done by compression P-Box]
          - XOR with Key:     01000111100110011100110110100000

          - FUNCTION OUTPUT:  01000111100110011100110110100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000001100111111111101110111011

       - FUNCTION OUTPUT:          01000111100110011100110110100000

       - Left XOR FUNCTION OUTPUT: 11000110000001100011011000011011

       - Next Round Left 32 Bits:  01100110001111001000101000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000110000001100011011000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1100011000000110001101100001101101100110001111001000101000011110

 > Processed Block:     1100011000000110001101100001101101100110001111001000101000011110



Plaintext Block: 4:                                      0110001000010010101101100110000010101001010101011011110110011001

!!!CBC: Previous Ciphertext:                             1100011000000110001101100001101101100110001111001000101000011110

!!!CBC: Current Block XOR with Previous Ciphertext:      1010010000010100100000000111101111001111011010010011011110000111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100100000101001000000001111011

       - Right 32 Bits:            11001111011010010011011110000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100110101010101110001111101010111001101010110010110   [Subkey: 1]
          - Input Half:       11001111011010010011011110000111
          - S-Box Result:     01011011000000110001110100101101   [per every group of 4-bits]
          - Split Into Two:   0101101100000011 [L] 0001110100101101 [R]
          - Swap Halves:      00011101001011010101101100000011
          - Bit Inversion:    11100010110100101010010011111100
          - Compressed Key:   01011010011110110101001101111001   [done by compression P-Box]
          - XOR with Key:     10111000101010011111011110000101

          - FUNCTION OUTPUT:  10111000101010011111011110000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100100000101001000000001111011

       - FUNCTION OUTPUT:          10111000101010011111011110000101

       - Left XOR FUNCTION OUTPUT: 00011100101111010111011111111110

       - Next Round Left 32 Bits:  11001111011010010011011110000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100101111010111011111111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111011010010011011110000111

       - Right 32 Bits:            00011100101111010111011111111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110000010101000110010101001101001100   [Subkey: 2]
          - Input Half:       00011100101111010111011111111110
          - S-Box Result:     10100101100001101101110110111100   [per every group of 4-bits]
          - Split Into Two:   1010010110000110 [L] 1101110110111100 [R]
          - Swap Halves:      11011101101111001010010110000110
          - Bit Inversion:    00100010010000110101101001111001
          - Compressed Key:   11001010001100100100101010011100   [done by compression P-Box]
          - XOR with Key:     11101000011100010001000011100101

          - FUNCTION OUTPUT:  11101000011100010001000011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111011010010011011110000111

       - FUNCTION OUTPUT:          11101000011100010001000011100101

       - Left XOR FUNCTION OUTPUT: 00100111000110000010011101100010

       - Next Round Left 32 Bits:  00011100101111010111011111111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111000110000010011101100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100101111010111011111111110

       - Right 32 Bits:            00100111000110000010011101100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001111101010111001101010110010110011101   [Subkey: 3]
          - Input Half:       00100111000110000010011101100010
          - S-Box Result:     11101101101000101110110100001110   [per every group of 4-bits]
          - Split Into Two:   1110110110100010 [L] 1110110100001110 [R]
          - Swap Halves:      11101101000011101110110110100010
          - Bit Inversion:    00010010111100010001001001011101
          - Compressed Key:   01011010001110100110101001111110   [done by compression P-Box]
          - XOR with Key:     01001000110010110111100000100011

          - FUNCTION OUTPUT:  01001000110010110111100000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100101111010111011111111110

       - FUNCTION OUTPUT:          01001000110010110111100000100011

       - Left XOR FUNCTION OUTPUT: 01010100011101100000111111011101

       - Next Round Left 32 Bits:  00100111000110000010011101100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100011101100000111111011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111000110000010011101100010

       - Right 32 Bits:            01010100011101100000111111011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110000010101000110010101001101001100010110   [Subkey: 4]
          - Input Half:       01010100011101100000111111011101
          - S-Box Result:     10010111110100001111101101100110   [per every group of 4-bits]
          - Split Into Two:   1001011111010000 [L] 1111101101100110 [R]
          - Swap Halves:      11111011011001101001011111010000
          - Bit Inversion:    00000100100110010110100000101111
          - Compressed Key:   01010010000010000001001110011001   [done by compression P-Box]
          - XOR with Key:     01010110100100010111101110110110

          - FUNCTION OUTPUT:  01010110100100010111101110110110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111000110000010011101100010

       - FUNCTION OUTPUT:          01010110100100010111101110110110

       - Left XOR FUNCTION OUTPUT: 01110001100010010101110011010100

       - Next Round Left 32 Bits:  01010100011101100000111111011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001100010010101110011010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100011101100000111111011101

       - Right 32 Bits:            01110001100010010101110011010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001111101010111001101010110010110011101001101   [Subkey: 5]
          - Input Half:       01110001100010010101110011010100
          - S-Box Result:     11011010001000111001010101100111   [per every group of 4-bits]
          - Split Into Two:   1101101000100011 [L] 1001010101100111 [R]
          - Swap Halves:      10010101011001111101101000100011
          - Bit Inversion:    01101010100110000010010111011100
          - Compressed Key:   01010010010111000101101011011110   [done by compression P-Box]
          - XOR with Key:     00111000110001000111111100000010

          - FUNCTION OUTPUT:  00111000110001000111111100000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100011101100000111111011101

       - FUNCTION OUTPUT:          00111000110001000111111100000010

       - Left XOR FUNCTION OUTPUT: 01101100101100100111000011011111

       - Next Round Left 32 Bits:  01110001100010010101110011010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100101100100111000011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001100010010101110011010100

       - Right 32 Bits:            01101100101100100111000011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001110000010101000110010101001101001100010110010101   [Subkey: 6]
          - Input Half:       01101100101100100111000011011111
          - S-Box Result:     00000101100011101101111101101011   [per every group of 4-bits]
          - Split Into Two:   0000010110001110 [L] 1101111101101011 [R]
          - Swap Halves:      11011111011010110000010110001110
          - Bit Inversion:    00100000100101001111101001110001
          - Compressed Key:   01000000010101100110001101111010   [done by compression P-Box]
          - XOR with Key:     01100000110000101001100100001011

          - FUNCTION OUTPUT:  01100000110000101001100100001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001100010010101110011010100

       - FUNCTION OUTPUT:          01100000110000101001100100001011

       - Left XOR FUNCTION OUTPUT: 00010001010010111100010111011111

       - Next Round Left 32 Bits:  01101100101100100111000011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010001010010111100010111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100101100100111000011011111

       - Right 32 Bits:            00010001010010111100010111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110001111101010111001101010110010110011101001101010101   [Subkey: 7]
          - Input Half:       00010001010010111100010111011111
          - S-Box Result:     10101010011110000101100101101011   [per every group of 4-bits]
          - Split Into Two:   1010101001111000 [L] 0101100101101011 [R]
          - Swap Halves:      01011001011010111010101001111000
          - Bit Inversion:    10100110100101000101010110000111
          - Compressed Key:   01001110110110100001101110011010   [done by compression P-Box]
          - XOR with Key:     11101000010011100100111000011101

          - FUNCTION OUTPUT:  11101000010011100100111000011101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100101100100111000011011111

       - FUNCTION OUTPUT:          11101000010011100100111000011101

       - Left XOR FUNCTION OUTPUT: 10000100111111000011111011000010

       - Next Round Left 32 Bits:  00010001010010111100010111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100111111000011111011000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010001010010111100010111011111

       - Right 32 Bits:            10000100111111000011111011000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101000110010101001101001100010110010101010100   [Subkey: 8]
          - Input Half:       10000100111111000011111011000010
          - S-Box Result:     00100111101101010001110001011110   [per every group of 4-bits]
          - Split Into Two:   0010011110110101 [L] 0001110001011110 [R]
          - Swap Halves:      00011100010111100010011110110101
          - Bit Inversion:    11100011101000011101100001001010
          - Compressed Key:   01001010110010000110101001011000   [done by compression P-Box]
          - XOR with Key:     10101001011010011011001000010010

          - FUNCTION OUTPUT:  10101001011010011011001000010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010001010010111100010111011111

       - FUNCTION OUTPUT:          10101001011010011011001000010010

       - Left XOR FUNCTION OUTPUT: 10111000001000100111011111001101

       - Next Round Left 32 Bits:  10000100111111000011111011000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111000001000100111011111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100111111000011111011000010

       - Right 32 Bits:            10111000001000100111011111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111101010111001101010110010110011101001101010101011100   [Subkey: 9]
          - Input Half:       10111000001000100111011111001101
          - S-Box Result:     10000010111011101101110101010110   [per every group of 4-bits]
          - Split Into Two:   1000001011101110 [L] 1101110101010110 [R]
          - Swap Halves:      11011101010101101000001011101110
          - Bit Inversion:    00100010101010010111110100010001
          - Compressed Key:   11011011010101100011001101011100   [done by compression P-Box]
          - XOR with Key:     11111001111111110100111001001101

          - FUNCTION OUTPUT:  11111001111111110100111001001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100111111000011111011000010

       - FUNCTION OUTPUT:          11111001111111110100111001001101

       - Left XOR FUNCTION OUTPUT: 01111101000000110111000010001111

       - Next Round Left 32 Bits:  10111000001000100111011111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111101000000110111000010001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111000001000100111011111001101

       - Right 32 Bits:            01111101000000110111000010001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101000110010101001101001100010110010101010100011100   [Subkey: 10]
          - Input Half:       01111101000000110111000010001111
          - S-Box Result:     11010110111100011101111100101011   [per every group of 4-bits]
          - Split Into Two:   1101011011110001 [L] 1101111100101011 [R]
          - Swap Halves:      11011111001010111101011011110001
          - Bit Inversion:    00100000110101000010100100001110
          - Compressed Key:   01011001010110000001101001011100   [done by compression P-Box]
          - XOR with Key:     01111001100011000011001101010010

          - FUNCTION OUTPUT:  01111001100011000011001101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111000001000100111011111001101

       - FUNCTION OUTPUT:          01111001100011000011001101010010

       - Left XOR FUNCTION OUTPUT: 11000001101011100100010010011111

       - Next Round Left 32 Bits:  01111101000000110111000010001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001101011100100010010011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101000000110111000010001111

       - Right 32 Bits:            11000001101011100100010010011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111001101010110010110011101001101010101011100011111   [Subkey: 11]
          - Input Half:       11000001101011100100010010011111
          - S-Box Result:     01011010010011000111011100111011   [per every group of 4-bits]
          - Split Into Two:   0101101001001100 [L] 0111011100111011 [R]
          - Swap Halves:      01110111001110110101101001001100
          - Bit Inversion:    10001000110001001010010110110011
          - Compressed Key:   01111110110001100110101011011111   [done by compression P-Box]
          - XOR with Key:     11110110000000101100111101101100

          - FUNCTION OUTPUT:  11110110000000101100111101101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101000000110111000010001111

       - FUNCTION OUTPUT:          11110110000000101100111101101100

       - Left XOR FUNCTION OUTPUT: 10001011000000011011111111100011

       - Next Round Left 32 Bits:  11000001101011100100010010011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001011000000011011111111100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001101011100100010010011111

       - Right 32 Bits:            10001011000000011011111111100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110010101001101001100010110010101010100011100000101   [Subkey: 12]
          - Input Half:       10001011000000011011111111100011
          - S-Box Result:     00101000111110101000101111000001   [per every group of 4-bits]
          - Split Into Two:   0010100011111010 [L] 1000101111000001 [R]
          - Swap Halves:      10001011110000010010100011111010
          - Bit Inversion:    01110100001111101101011100000101
          - Compressed Key:   00111010010100100001101011011010   [done by compression P-Box]
          - XOR with Key:     01001110011011001100110111011111

          - FUNCTION OUTPUT:  01001110011011001100110111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001101011100100010010011111

       - FUNCTION OUTPUT:          01001110011011001100110111011111

       - Left XOR FUNCTION OUTPUT: 10001111110000101000100101000000

       - Next Round Left 32 Bits:  10001011000000011011111111100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111110000101000100101000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001011000000011011111111100011

       - Right 32 Bits:            10001111110000101000100101000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010110010110011101001101010101011100011111010101   [Subkey: 13]
          - Input Half:       10001111110000101000100101000000
          - S-Box Result:     00101011010111100010001101111111   [per every group of 4-bits]
          - Split Into Two:   0010101101011110 [L] 0010001101111111 [R]
          - Swap Halves:      00100011011111110010101101011110
          - Bit Inversion:    11011100100000001101010010100001
          - Compressed Key:   10011001110010000101101111111010   [done by compression P-Box]
          - XOR with Key:     01000101010010001000111101011011

          - FUNCTION OUTPUT:  01000101010010001000111101011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001011000000011011111111100011

       - FUNCTION OUTPUT:          01000101010010001000111101011011

       - Left XOR FUNCTION OUTPUT: 11001110010010010011000010111000

       - Next Round Left 32 Bits:  10001111110000101000100101000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001110010010010011000010111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111110000101000100101000000

       - Right 32 Bits:            11001110010010010011000010111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101001101001100010110010101010100011100000101010001   [Subkey: 14]
          - Input Half:       11001110010010010011000010111000
          - S-Box Result:     01011100011100110001111110000010   [per every group of 4-bits]
          - Split Into Two:   0101110001110011 [L] 0001111110000010 [R]
          - Swap Halves:      00011111100000100101110001110011
          - Bit Inversion:    11100000011111011010001110001100
          - Compressed Key:   01011110010001100101101100010010   [done by compression P-Box]
          - XOR with Key:     10111110001110111111100010011110

          - FUNCTION OUTPUT:  10111110001110111111100010011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111110000101000100101000000

       - FUNCTION OUTPUT:          10111110001110111111100010011110

       - Left XOR FUNCTION OUTPUT: 00110001111110010111000111011110

       - Next Round Left 32 Bits:  11001110010010010011000010111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110001111110010111000111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001110010010010011000010111000

       - Right 32 Bits:            00110001111110010111000111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010110011101001101010101011100011111010101110011   [Subkey: 15]
          - Input Half:       00110001111110010111000111011110
          - S-Box Result:     00011010101100111101101001101100   [per every group of 4-bits]
          - Split Into Two:   0001101010110011 [L] 1101101001101100 [R]
          - Swap Halves:      11011010011011000001101010110011
          - Bit Inversion:    00100101100100111110010101001100
          - Compressed Key:   01111001010110100111101101010011   [done by compression P-Box]
          - XOR with Key:     01011100110010011001111000011111

          - FUNCTION OUTPUT:  01011100110010011001111000011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001110010010010011000010111000

       - FUNCTION OUTPUT:          01011100110010011001111000011111

       - Left XOR FUNCTION OUTPUT: 10010010100000001010111010100111

       - Next Round Left 32 Bits:  00110001111110010111000111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010010100000001010111010100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110001111110010111000111011110

       - Right 32 Bits:            10010010100000001010111010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101001100010110010101010100011100000101010001100101   [Subkey: 16]
          - Input Half:       10010010100000001010111010100111
          - S-Box Result:     00111110001011110100110001001101   [per every group of 4-bits]
          - Split Into Two:   0011111000101111 [L] 0100110001001101 [R]
          - Swap Halves:      01001100010011010011111000101111
          - Bit Inversion:    10110011101100101100000111010000
          - Compressed Key:   10011100110010100011001001001010   [done by compression P-Box]
          - XOR with Key:     00101111011110001111001110011010

          - FUNCTION OUTPUT:  00101111011110001111001110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110001111110010111000111011110

       - FUNCTION OUTPUT:          00101111011110001111001110011010

       - Left XOR FUNCTION OUTPUT: 00011110100000011000001001000100

       - Next Round Left 32 Bits:  10010010100000001010111010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011110100000011000001001000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0001111010000001100000100100010010010010100000001010111010100111

 > Processed Block:     0001111010000001100000100100010010010010100000001010111010100111



Plaintext Block: 5:                                      1011110100000011001110100101010011110010101110010101101111011011

!!!CBC: Previous Ciphertext:                             0001111010000001100000100100010010010010100000001010111010100111

!!!CBC: Current Block XOR with Previous Ciphertext:      1010001110000010101110000001000001100000001110011111010101111100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10100011100000101011100000010000

       - Right 32 Bits:            01100000001110011111010101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100110101010101110001111101010111001101010110010110   [Subkey: 1]
          - Input Half:       01100000001110011111010101111100
          - S-Box Result:     00001111000100111011100111010101   [per every group of 4-bits]
          - Split Into Two:   0000111100010011 [L] 1011100111010101 [R]
          - Swap Halves:      10111001110101010000111100010011
          - Bit Inversion:    01000110001010101111000011101100
          - Compressed Key:   01011010011110110101001101111001   [done by compression P-Box]
          - XOR with Key:     00011100010100011010001110010101

          - FUNCTION OUTPUT:  00011100010100011010001110010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10100011100000101011100000010000

       - FUNCTION OUTPUT:          00011100010100011010001110010101

       - Left XOR FUNCTION OUTPUT: 10111111110100110001101110000101

       - Next Round Left 32 Bits:  01100000001110011111010101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111111110100110001101110000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100000001110011111010101111100

       - Right 32 Bits:            10111111110100110001101110000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110000010101000110010101001101001100   [Subkey: 2]
          - Input Half:       10111111110100110001101110000101
          - S-Box Result:     10001011011000011010100000101001   [per every group of 4-bits]
          - Split Into Two:   1000101101100001 [L] 1010100000101001 [R]
          - Swap Halves:      10101000001010011000101101100001
          - Bit Inversion:    01010111110101100111010010011110
          - Compressed Key:   11001010001100100100101010011100   [done by compression P-Box]
          - XOR with Key:     10011101111001000011111000000010

          - FUNCTION OUTPUT:  10011101111001000011111000000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100000001110011111010101111100

       - FUNCTION OUTPUT:          10011101111001000011111000000010

       - Left XOR FUNCTION OUTPUT: 11111101110111011100101101111110

       - Next Round Left 32 Bits:  10111111110100110001101110000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101110111011100101101111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111111110100110001101110000101

       - Right 32 Bits:            11111101110111011100101101111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001111101010111001101010110010110011101   [Subkey: 3]
          - Input Half:       11111101110111011100101101111110
          - S-Box Result:     10110110011001100101100011011100   [per every group of 4-bits]
          - Split Into Two:   1011011001100110 [L] 0101100011011100 [R]
          - Swap Halves:      01011000110111001011011001100110
          - Bit Inversion:    10100111001000110100100110011001
          - Compressed Key:   01011010001110100110101001111110   [done by compression P-Box]
          - XOR with Key:     11111101000110010010001111100111

          - FUNCTION OUTPUT:  11111101000110010010001111100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111111110100110001101110000101

       - FUNCTION OUTPUT:          11111101000110010010001111100111

       - Left XOR FUNCTION OUTPUT: 01000010110010100011100001100010

       - Next Round Left 32 Bits:  11111101110111011100101101111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010110010100011100001100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101110111011100101101111110

       - Right 32 Bits:            01000010110010100011100001100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110000010101000110010101001101001100010110   [Subkey: 4]
          - Input Half:       01000010110010100011100001100010
          - S-Box Result:     01111110010101000001001000001110   [per every group of 4-bits]
          - Split Into Two:   0111111001010100 [L] 0001001000001110 [R]
          - Swap Halves:      00010010000011100111111001010100
          - Bit Inversion:    11101101111100011000000110101011
          - Compressed Key:   01010010000010000001001110011001   [done by compression P-Box]
          - XOR with Key:     10111111111110011001001000110010

          - FUNCTION OUTPUT:  10111111111110011001001000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101110111011100101101111110

       - FUNCTION OUTPUT:          10111111111110011001001000110010

       - Left XOR FUNCTION OUTPUT: 01000010001001000101100101001100

       - Next Round Left 32 Bits:  01000010110010100011100001100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010001001000101100101001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010110010100011100001100010

       - Right 32 Bits:            01000010001001000101100101001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001111101010111001101010110010110011101001101   [Subkey: 5]
          - Input Half:       01000010001001000101100101001100
          - S-Box Result:     01111110111001111001001101110101   [per every group of 4-bits]
          - Split Into Two:   0111111011100111 [L] 1001001101110101 [R]
          - Swap Halves:      10010011011101010111111011100111
          - Bit Inversion:    01101100100010101000000100011000
          - Compressed Key:   01010010010111000101101011011110   [done by compression P-Box]
          - XOR with Key:     00111110110101101101101111000110

          - FUNCTION OUTPUT:  00111110110101101101101111000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010110010100011100001100010

       - FUNCTION OUTPUT:          00111110110101101101101111000110

       - Left XOR FUNCTION OUTPUT: 01111100000111001110001110100100

       - Next Round Left 32 Bits:  01000010001001000101100101001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111100000111001110001110100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010001001000101100101001100

       - Right 32 Bits:            01111100000111001110001110100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001110000010101000110010101001101001100010110010101   [Subkey: 6]
          - Input Half:       01111100000111001110001110100100
          - S-Box Result:     11010101101001011100000101000111   [per every group of 4-bits]
          - Split Into Two:   1101010110100101 [L] 1100000101000111 [R]
          - Swap Halves:      11000001010001111101010110100101
          - Bit Inversion:    00111110101110000010101001011010
          - Compressed Key:   01000000010101100110001101111010   [done by compression P-Box]
          - XOR with Key:     01111110111011100100100100100000

          - FUNCTION OUTPUT:  01111110111011100100100100100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010001001000101100101001100

       - FUNCTION OUTPUT:          01111110111011100100100100100000

       - Left XOR FUNCTION OUTPUT: 00111100110010100001000001101100

       - Next Round Left 32 Bits:  01111100000111001110001110100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111100110010100001000001101100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111100000111001110001110100100

       - Right 32 Bits:            00111100110010100001000001101100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110001111101010111001101010110010110011101001101010101   [Subkey: 7]
          - Input Half:       00111100110010100001000001101100
          - S-Box Result:     00010101010101001010111100000101   [per every group of 4-bits]
          - Split Into Two:   0001010101010100 [L] 1010111100000101 [R]
          - Swap Halves:      10101111000001010001010101010100
          - Bit Inversion:    01010000111110101110101010101011
          - Compressed Key:   01001110110110100001101110011010   [done by compression P-Box]
          - XOR with Key:     00011110001000001111000100110001

          - FUNCTION OUTPUT:  00011110001000001111000100110001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111100000111001110001110100100

       - FUNCTION OUTPUT:          00011110001000001111000100110001

       - Left XOR FUNCTION OUTPUT: 01100010001111000001001010010101

       - Next Round Left 32 Bits:  00111100110010100001000001101100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100010001111000001001010010101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111100110010100001000001101100

       - Right 32 Bits:            01100010001111000001001010010101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101000110010101001101001100010110010101010100   [Subkey: 8]
          - Input Half:       01100010001111000001001010010101
          - S-Box Result:     00001110000101011010111000111001   [per every group of 4-bits]
          - Split Into Two:   0000111000010101 [L] 1010111000111001 [R]
          - Swap Halves:      10101110001110010000111000010101
          - Bit Inversion:    01010001110001101111000111101010
          - Compressed Key:   01001010110010000110101001011000   [done by compression P-Box]
          - XOR with Key:     00011011000011101001101110110010

          - FUNCTION OUTPUT:  00011011000011101001101110110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111100110010100001000001101100

       - FUNCTION OUTPUT:          00011011000011101001101110110010

       - Left XOR FUNCTION OUTPUT: 00100111110001001000101111011110

       - Next Round Left 32 Bits:  01100010001111000001001010010101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111110001001000101111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100010001111000001001010010101

       - Right 32 Bits:            00100111110001001000101111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111101010111001101010110010110011101001101010101011100   [Subkey: 9]
          - Input Half:       00100111110001001000101111011110
          - S-Box Result:     11101101010101110010100001101100   [per every group of 4-bits]
          - Split Into Two:   1110110101010111 [L] 0010100001101100 [R]
          - Swap Halves:      00101000011011001110110101010111
          - Bit Inversion:    11010111100100110001001010101000
          - Compressed Key:   11011011010101100011001101011100   [done by compression P-Box]
          - XOR with Key:     00001100110001010010000111110100

          - FUNCTION OUTPUT:  00001100110001010010000111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100010001111000001001010010101

       - FUNCTION OUTPUT:          00001100110001010010000111110100

       - Left XOR FUNCTION OUTPUT: 01101110111110010011001101100001

       - Next Round Left 32 Bits:  00100111110001001000101111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101110111110010011001101100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111110001001000101111011110

       - Right 32 Bits:            01101110111110010011001101100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101000110010101001101001100010110010101010100011100   [Subkey: 10]
          - Input Half:       01101110111110010011001101100001
          - S-Box Result:     00001100101100110001000100001010   [per every group of 4-bits]
          - Split Into Two:   0000110010110011 [L] 0001000100001010 [R]
          - Swap Halves:      00010001000010100000110010110011
          - Bit Inversion:    11101110111101011111001101001100
          - Compressed Key:   01011001010110000001101001011100   [done by compression P-Box]
          - XOR with Key:     10110111101011011110100100010000

          - FUNCTION OUTPUT:  10110111101011011110100100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111110001001000101111011110

       - FUNCTION OUTPUT:          10110111101011011110100100010000

       - Left XOR FUNCTION OUTPUT: 10010000011010010110001011001110

       - Next Round Left 32 Bits:  01101110111110010011001101100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010000011010010110001011001110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101110111110010011001101100001

       - Right 32 Bits:            10010000011010010110001011001110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111001101010110010110011101001101010101011100011111   [Subkey: 11]
          - Input Half:       10010000011010010110001011001110
          - S-Box Result:     00111111000000110000111001011100   [per every group of 4-bits]
          - Split Into Two:   0011111100000011 [L] 0000111001011100 [R]
          - Swap Halves:      00001110010111000011111100000011
          - Bit Inversion:    11110001101000111100000011111100
          - Compressed Key:   01111110110001100110101011011111   [done by compression P-Box]
          - XOR with Key:     10001111011001011010101000100011

          - FUNCTION OUTPUT:  10001111011001011010101000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101110111110010011001101100001

       - FUNCTION OUTPUT:          10001111011001011010101000100011

       - Left XOR FUNCTION OUTPUT: 11100001100111001001100101000010

       - Next Round Left 32 Bits:  10010000011010010110001011001110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001100111001001100101000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010000011010010110001011001110

       - Right 32 Bits:            11100001100111001001100101000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110010101001101001100010110010101010100011100000101   [Subkey: 12]
          - Input Half:       11100001100111001001100101000010
          - S-Box Result:     11001010001101010011001101111110   [per every group of 4-bits]
          - Split Into Two:   1100101000110101 [L] 0011001101111110 [R]
          - Swap Halves:      00110011011111101100101000110101
          - Bit Inversion:    11001100100000010011010111001010
          - Compressed Key:   00111010010100100001101011011010   [done by compression P-Box]
          - XOR with Key:     11110110110100110010111100010000

          - FUNCTION OUTPUT:  11110110110100110010111100010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010000011010010110001011001110

       - FUNCTION OUTPUT:          11110110110100110010111100010000

       - Left XOR FUNCTION OUTPUT: 01100110101110100100110111011110

       - Next Round Left 32 Bits:  11100001100111001001100101000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01100110101110100100110111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001100111001001100101000010

       - Right 32 Bits:            01100110101110100100110111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010110010110011101001101010101011100011111010101   [Subkey: 13]
          - Input Half:       01100110101110100100110111011110
          - S-Box Result:     00000000100001000111011001101100   [per every group of 4-bits]
          - Split Into Two:   0000000010000100 [L] 0111011001101100 [R]
          - Swap Halves:      01110110011011000000000010000100
          - Bit Inversion:    10001001100100111111111101111011
          - Compressed Key:   10011001110010000101101111111010   [done by compression P-Box]
          - XOR with Key:     00010000010110111010010010000001

          - FUNCTION OUTPUT:  00010000010110111010010010000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001100111001001100101000010

       - FUNCTION OUTPUT:          00010000010110111010010010000001

       - Left XOR FUNCTION OUTPUT: 11110001110001110011110111000011

       - Next Round Left 32 Bits:  01100110101110100100110111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110001110001110011110111000011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110101110100100110111011110

       - Right 32 Bits:            11110001110001110011110111000011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101001101001100010110010101010100011100000101010001   [Subkey: 14]
          - Input Half:       11110001110001110011110111000011
          - S-Box Result:     10111010010111010001011001010001   [per every group of 4-bits]
          - Split Into Two:   1011101001011101 [L] 0001011001010001 [R]
          - Swap Halves:      00010110010100011011101001011101
          - Bit Inversion:    11101001101011100100010110100010
          - Compressed Key:   01011110010001100101101100010010   [done by compression P-Box]
          - XOR with Key:     10110111111010000001111010110000

          - FUNCTION OUTPUT:  10110111111010000001111010110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110101110100100110111011110

       - FUNCTION OUTPUT:          10110111111010000001111010110000

       - Left XOR FUNCTION OUTPUT: 11010001010100100101001101101110

       - Next Round Left 32 Bits:  11110001110001110011110111000011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001010100100101001101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110001110001110011110111000011

       - Right 32 Bits:            11010001010100100101001101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010110011101001101010101011100011111010101110011   [Subkey: 15]
          - Input Half:       11010001010100100101001101101110
          - S-Box Result:     01101010100111101001000100001100   [per every group of 4-bits]
          - Split Into Two:   0110101010011110 [L] 1001000100001100 [R]
          - Swap Halves:      10010001000011000110101010011110
          - Bit Inversion:    01101110111100111001010101100001
          - Compressed Key:   01111001010110100111101101010011   [done by compression P-Box]
          - XOR with Key:     00010111101010011110111000110010

          - FUNCTION OUTPUT:  00010111101010011110111000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110001110001110011110111000011

       - FUNCTION OUTPUT:          00010111101010011110111000110010

       - Left XOR FUNCTION OUTPUT: 11100110011011101101001111110001

       - Next Round Left 32 Bits:  11010001010100100101001101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100110011011101101001111110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001010100100101001101101110

       - Right 32 Bits:            11100110011011101101001111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101001100010110010101010100011100000101010001100101   [Subkey: 16]
          - Input Half:       11100110011011101101001111110001
          - S-Box Result:     11000000000011000110000110111010   [per every group of 4-bits]
          - Split Into Two:   1100000000001100 [L] 0110000110111010 [R]
          - Swap Halves:      01100001101110101100000000001100
          - Bit Inversion:    10011110010001010011111111110011
          - Compressed Key:   10011100110010100011001001001010   [done by compression P-Box]
          - XOR with Key:     00000010100011110000110110111001

          - FUNCTION OUTPUT:  00000010100011110000110110111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001010100100101001101101110

       - FUNCTION OUTPUT:          00000010100011110000110110111001

       - Left XOR FUNCTION OUTPUT: 11010011110111010101111011010111

       - Next Round Left 32 Bits:  11100110011011101101001111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010011110111010101111011010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1101001111011101010111101101011111100110011011101101001111110001

 > Processed Block:     1101001111011101010111101101011111100110011011101101001111110001



Plaintext Block: 6:                                      1100101111101110101001001111101010101010001110101110101000110000

!!!CBC: Previous Ciphertext:                             1101001111011101010111101101011111100110011011101101001111110001

!!!CBC: Current Block XOR with Previous Ciphertext:      0001100000110011111110100010110101001100010101000011100111000001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000001100111111101000101101

       - Right 32 Bits:            01001100010101000011100111000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110100110101010101110001111101010111001101010110010110   [Subkey: 1]
          - Input Half:       01001100010101000011100111000001
          - S-Box Result:     01110101100101110001001101011010   [per every group of 4-bits]
          - Split Into Two:   0111010110010111 [L] 0001001101011010 [R]
          - Swap Halves:      00010011010110100111010110010111
          - Bit Inversion:    11101100101001011000101001101000
          - Compressed Key:   01011010011110110101001101111001   [done by compression P-Box]
          - XOR with Key:     10110110110111101101100100010001

          - FUNCTION OUTPUT:  10110110110111101101100100010001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000001100111111101000101101

       - FUNCTION OUTPUT:          10110110110111101101100100010001

       - Left XOR FUNCTION OUTPUT: 10101110111011010010001100111100

       - Next Round Left 32 Bits:  01001100010101000011100111000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101110111011010010001100111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001100010101000011100111000001

       - Right 32 Bits:            10101110111011010010001100111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001010101010001110000010101000110010101001101001100   [Subkey: 2]
          - Input Half:       10101110111011010010001100111100
          - S-Box Result:     01001100110001101110000100010101   [per every group of 4-bits]
          - Split Into Two:   0100110011000110 [L] 1110000100010101 [R]
          - Swap Halves:      11100001000101010100110011000110
          - Bit Inversion:    00011110111010101011001100111001
          - Compressed Key:   11001010001100100100101010011100   [done by compression P-Box]
          - XOR with Key:     11010100110110001111100110100101

          - FUNCTION OUTPUT:  11010100110110001111100110100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001100010101000011100111000001

       - FUNCTION OUTPUT:          11010100110110001111100110100101

       - Left XOR FUNCTION OUTPUT: 10011000100011001100000001100100

       - Next Round Left 32 Bits:  10101110111011010010001100111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000100011001100000001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10101110111011010010001100111100

       - Right 32 Bits:            10011000100011001100000001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110101010101110001111101010111001101010110010110011101   [Subkey: 3]
          - Input Half:       10011000100011001100000001100100
          - S-Box Result:     00110010001001010101111100000111   [per every group of 4-bits]
          - Split Into Two:   0011001000100101 [L] 0101111100000111 [R]
          - Swap Halves:      01011111000001110011001000100101
          - Bit Inversion:    10100000111110001100110111011010
          - Compressed Key:   01011010001110100110101001111110   [done by compression P-Box]
          - XOR with Key:     11111010110000101010011110100100

          - FUNCTION OUTPUT:  11111010110000101010011110100100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10101110111011010010001100111100

       - FUNCTION OUTPUT:          11111010110000101010011110100100

       - Left XOR FUNCTION OUTPUT: 01010100001011111000010010011000

       - Next Round Left 32 Bits:  10011000100011001100000001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010100001011111000010010011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000100011001100000001100100

       - Right 32 Bits:            01010100001011111000010010011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101010001110000010101000110010101001101001100010110   [Subkey: 4]
          - Input Half:       01010100001011111000010010011000
          - S-Box Result:     10010111111010110010011100110010   [per every group of 4-bits]
          - Split Into Two:   1001011111101011 [L] 0010011100110010 [R]
          - Swap Halves:      00100111001100101001011111101011
          - Bit Inversion:    11011000110011010110100000010100
          - Compressed Key:   01010010000010000001001110011001   [done by compression P-Box]
          - XOR with Key:     10001010110001010111101110001101

          - FUNCTION OUTPUT:  10001010110001010111101110001101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000100011001100000001100100

       - FUNCTION OUTPUT:          10001010110001010111101110001101

       - Left XOR FUNCTION OUTPUT: 00010010010010011011101111101001

       - Next Round Left 32 Bits:  01010100001011111000010010011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010010010011011101111101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010100001011111000010010011000

       - Right 32 Bits:            00010010010010011011101111101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010101110001111101010111001101010110010110011101001101   [Subkey: 5]
          - Input Half:       00010010010010011011101111101001
          - S-Box Result:     10101110011100111000100011000011   [per every group of 4-bits]
          - Split Into Two:   1010111001110011 [L] 1000100011000011 [R]
          - Swap Halves:      10001000110000111010111001110011
          - Bit Inversion:    01110111001111000101000110001100
          - Compressed Key:   01010010010111000101101011011110   [done by compression P-Box]
          - XOR with Key:     00100101011000000000101101010010

          - FUNCTION OUTPUT:  00100101011000000000101101010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010100001011111000010010011000

       - FUNCTION OUTPUT:          00100101011000000000101101010010

       - Left XOR FUNCTION OUTPUT: 01110001010011111000111111001010

       - Next Round Left 32 Bits:  00010010010010011011101111101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110001010011111000111111001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010010010011011101111101001

       - Right 32 Bits:            01110001010011111000111111001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010001110000010101000110010101001101001100010110010101   [Subkey: 6]
          - Input Half:       01110001010011111000111111001010
          - S-Box Result:     11011010011110110010101101010100   [per every group of 4-bits]
          - Split Into Two:   1101101001111011 [L] 0010101101010100 [R]
          - Swap Halves:      00101011010101001101101001111011
          - Bit Inversion:    11010100101010110010010110000100
          - Compressed Key:   01000000010101100110001101111010   [done by compression P-Box]
          - XOR with Key:     10010100111111010100011011111110

          - FUNCTION OUTPUT:  10010100111111010100011011111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010010010011011101111101001

       - FUNCTION OUTPUT:          10010100111111010100011011111110

       - Left XOR FUNCTION OUTPUT: 10000110101101001111110100010111

       - Next Round Left 32 Bits:  01110001010011111000111111001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110101101001111110100010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110001010011111000111111001010

       - Right 32 Bits:            10000110101101001111110100010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110001111101010111001101010110010110011101001101010101   [Subkey: 7]
          - Input Half:       10000110101101001111110100010111
          - S-Box Result:     00100000100001111011011010101101   [per every group of 4-bits]
          - Split Into Two:   0010000010000111 [L] 1011011010101101 [R]
          - Swap Halves:      10110110101011010010000010000111
          - Bit Inversion:    01001001010100101101111101111000
          - Compressed Key:   01001110110110100001101110011010   [done by compression P-Box]
          - XOR with Key:     00000111100010001100010011100010

          - FUNCTION OUTPUT:  00000111100010001100010011100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110001010011111000111111001010

       - FUNCTION OUTPUT:          00000111100010001100010011100010

       - Left XOR FUNCTION OUTPUT: 01110110110001110100101100101000

       - Next Round Left 32 Bits:  10000110101101001111110100010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110110110001110100101100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110101101001111110100010111

       - Right 32 Bits:            01110110110001110100101100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110000010101000110010101001101001100010110010101010100   [Subkey: 8]
          - Input Half:       01110110110001110100101100101000
          - S-Box Result:     11010000010111010111100011100010   [per every group of 4-bits]
          - Split Into Two:   1101000001011101 [L] 0111100011100010 [R]
          - Swap Halves:      01111000111000101101000001011101
          - Bit Inversion:    10000111000111010010111110100010
          - Compressed Key:   01001010110010000110101001011000   [done by compression P-Box]
          - XOR with Key:     11001101110101010100010111111010

          - FUNCTION OUTPUT:  11001101110101010100010111111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110101101001111110100010111

       - FUNCTION OUTPUT:          11001101110101010100010111111010

       - Left XOR FUNCTION OUTPUT: 01001011011000011011100011101101

       - Next Round Left 32 Bits:  01110110110001110100101100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011011000011011100011101101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110110110001110100101100101000

       - Right 32 Bits:            01001011011000011011100011101101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01111101010111001101010110010110011101001101010101011100   [Subkey: 9]
          - Input Half:       01001011011000011011100011101101
          - S-Box Result:     01111000000010101000001011000110   [per every group of 4-bits]
          - Split Into Two:   0111100000001010 [L] 1000001011000110 [R]
          - Swap Halves:      10000010110001100111100000001010
          - Bit Inversion:    01111101001110011000011111110101
          - Compressed Key:   11011011010101100011001101011100   [done by compression P-Box]
          - XOR with Key:     10100110011011111011010010101001

          - FUNCTION OUTPUT:  10100110011011111011010010101001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110110110001110100101100101000

       - FUNCTION OUTPUT:          10100110011011111011010010101001

       - Left XOR FUNCTION OUTPUT: 11010000101010001111111110000001

       - Next Round Left 32 Bits:  01001011011000011011100011101101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010000101010001111111110000001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011011000011011100011101101

       - Right 32 Bits:            11010000101010001111111110000001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101000110010101001101001100010110010101010100011100   [Subkey: 10]
          - Input Half:       11010000101010001111111110000001
          - S-Box Result:     01101111010000101011101100101010   [per every group of 4-bits]
          - Split Into Two:   0110111101000010 [L] 1011101100101010 [R]
          - Swap Halves:      10111011001010100110111101000010
          - Bit Inversion:    01000100110101011001000010111101
          - Compressed Key:   01011001010110000001101001011100   [done by compression P-Box]
          - XOR with Key:     00011101100011011000101011100001

          - FUNCTION OUTPUT:  00011101100011011000101011100001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011011000011011100011101101

       - FUNCTION OUTPUT:          00011101100011011000101011100001

       - Left XOR FUNCTION OUTPUT: 01010110111011000011001000001100

       - Next Round Left 32 Bits:  11010000101010001111111110000001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110111011000011001000001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010000101010001111111110000001

       - Right 32 Bits:            01010110111011000011001000001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010111001101010110010110011101001101010101011100011111   [Subkey: 11]
          - Input Half:       01010110111011000011001000001100
          - S-Box Result:     10010000110001010001111011110101   [per every group of 4-bits]
          - Split Into Two:   1001000011000101 [L] 0001111011110101 [R]
          - Swap Halves:      00011110111101011001000011000101
          - Bit Inversion:    11100001000010100110111100111010
          - Compressed Key:   01111110110001100110101011011111   [done by compression P-Box]
          - XOR with Key:     10011111110011000000010111100101

          - FUNCTION OUTPUT:  10011111110011000000010111100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010000101010001111111110000001

       - FUNCTION OUTPUT:          10011111110011000000010111100101

       - Left XOR FUNCTION OUTPUT: 01001111011001001111101001100100

       - Next Round Left 32 Bits:  01010110111011000011001000001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001111011001001111101001100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110111011000011001000001100

       - Right 32 Bits:            01001111011001001111101001100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01000110010101001101001100010110010101010100011100000101   [Subkey: 12]
          - Input Half:       01001111011001001111101001100100
          - S-Box Result:     01111011000001111011010000000111   [per every group of 4-bits]
          - Split Into Two:   0111101100000111 [L] 1011010000000111 [R]
          - Swap Halves:      10110100000001110111101100000111
          - Bit Inversion:    01001011111110001000010011111000
          - Compressed Key:   00111010010100100001101011011010   [done by compression P-Box]
          - XOR with Key:     01110001101010101001111000100010

          - FUNCTION OUTPUT:  01110001101010101001111000100010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110111011000011001000001100

       - FUNCTION OUTPUT:          01110001101010101001111000100010

       - Left XOR FUNCTION OUTPUT: 00100111010001101010110000101110

       - Next Round Left 32 Bits:  01001111011001001111101001100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100111010001101010110000101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001111011001001111101001100100

       - Right 32 Bits:            00100111010001101010110000101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11001101010110010110011101001101010101011100011111010101   [Subkey: 13]
          - Input Half:       00100111010001101010110000101110
          - S-Box Result:     11101101011100000100010111101100   [per every group of 4-bits]
          - Split Into Two:   1110110101110000 [L] 0100010111101100 [R]
          - Swap Halves:      01000101111011001110110101110000
          - Bit Inversion:    10111010000100110001001010001111
          - Compressed Key:   10011001110010000101101111111010   [done by compression P-Box]
          - XOR with Key:     00100011110110110100100101110101

          - FUNCTION OUTPUT:  00100011110110110100100101110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001111011001001111101001100100

       - FUNCTION OUTPUT:          00100011110110110100100101110101

       - Left XOR FUNCTION OUTPUT: 01101100101111111011001100010001

       - Next Round Left 32 Bits:  00100111010001101010110000101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100101111111011001100010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100111010001101010110000101110

       - Right 32 Bits:            01101100101111111011001100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        10010101001101001100010110010101010100011100000101010001   [Subkey: 14]
          - Input Half:       01101100101111111011001100010001
          - S-Box Result:     00000101100010111000000110101010   [per every group of 4-bits]
          - Split Into Two:   0000010110001011 [L] 1000000110101010 [R]
          - Swap Halves:      10000001101010100000010110001011
          - Bit Inversion:    01111110010101011111101001110100
          - Compressed Key:   01011110010001100101101100010010   [done by compression P-Box]
          - XOR with Key:     00100000000100111010000101100110

          - FUNCTION OUTPUT:  00100000000100111010000101100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100111010001101010110000101110

       - FUNCTION OUTPUT:          00100000000100111010000101100110

       - Left XOR FUNCTION OUTPUT: 00000111010101010000110101001000

       - Next Round Left 32 Bits:  01101100101111111011001100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111010101010000110101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100101111111011001100010001

       - Right 32 Bits:            00000111010101010000110101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010110010110011101001101010101011100011111010101110011   [Subkey: 15]
          - Input Half:       00000111010101010000110101001000
          - S-Box Result:     11111101100110011111011001110010   [per every group of 4-bits]
          - Split Into Two:   1111110110011001 [L] 1111011001110010 [R]
          - Swap Halves:      11110110011100101111110110011001
          - Bit Inversion:    00001001100011010000001001100110
          - Compressed Key:   01111001010110100111101101010011   [done by compression P-Box]
          - XOR with Key:     01110000110101110111100100110101

          - FUNCTION OUTPUT:  01110000110101110111100100110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100101111111011001100010001

       - FUNCTION OUTPUT:          01110000110101110111100100110101

       - Left XOR FUNCTION OUTPUT: 00011100011010001100101000100100

       - Next Round Left 32 Bits:  00000111010101010000110101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100011010001100101000100100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111010101010000110101001000

       - Right 32 Bits:            00011100011010001100101000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01001101001100010110010101010100011100000101010001100101   [Subkey: 16]
          - Input Half:       00011100011010001100101000100100
          - S-Box Result:     10100101000000100101010011100111   [per every group of 4-bits]
          - Split Into Two:   1010010100000010 [L] 0101010011100111 [R]
          - Swap Halves:      01010100111001111010010100000010
          - Bit Inversion:    10101011000110000101101011111101
          - Compressed Key:   10011100110010100011001001001010   [done by compression P-Box]
          - XOR with Key:     00110111110100100110100010110111

          - FUNCTION OUTPUT:  00110111110100100110100010110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111010101010000110101001000

       - FUNCTION OUTPUT:          00110111110100100110100010110111

       - Left XOR FUNCTION OUTPUT: 00110000100001110110010111111111

       - Next Round Left 32 Bits:  00011100011010001100101000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110000100001110110010111111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011000010000111011001011111111100011100011010001100101000100100

 > Processed Block:     0011000010000111011001011111111100011100011010001100101000100100


FINAL PROCESSED DATA BLOCKS: 0111000000111000110000101111010111101000011101111000000010010100,0111110110000110001100000111001101101101100111101010000100010001,1100011000000110001101100001101101100110001111001000101000011110,0001111010000001100000100100010010010010100000001010111010100111,1101001111011101010111101101011111100110011011101101001111110001,0011000010000111011001011111111100011100011010001100101000100100,

BLOCKS IN ASCII:             p8Âõèw??}?0sm?¡Æ6f<???D??®§ÓÝ^×ænÓñ0?eÿhÊ$

=========================================================================================================================
STAGE 3: DES [DECRYPT] ==================================================================================================
=========================================================================================================================

56-bit key: qS4enOP
In Binary:  01110001010100110011010001100101011011100100111101010000

Subkeys:    Key i = Key (i - 1) [Shifted left by 3 and then inverted]

Subkey 1  : 01110101011001100101110011010100100011011000010101111100
Subkey 2  : 01010100110011010001100101011011100100111101010000011100
Subkey 3  : 01011001100101110011010100100011011000010101111100011101
Subkey 4  : 00110011010001100101011011100100111101010000011100010101
Subkey 5  : 01100101110011010100100011011000010101111100011101010110
Subkey 6  : 11010001100101011011100100111101010000011100010101001100
Subkey 7  : 01110011010100100011011000010101111100011101010110011001
Subkey 8  : 01100101011011100100111101010000011100010101001100110100
Subkey 9  : 11010100100011011000010101111100011101010110011001011100
Subkey 10 : 01011011100100111101010000011100010101001100110100011001
Subkey 11 : 00100011011000010101111100011101010110011001011100110101
Subkey 12 : 11100100111101010000011100010101001100110100011001010110
Subkey 13 : 11011000010101111100011101010110011001011100110101001000
Subkey 14 : 00111101010000011100010101001100110100011001010110111001
Subkey 15 : 00010101111100011101010110011001011100110101001000110110
Subkey 16 : 01010000011100010101001100110100011001010110111001001111

S-BOX (4x4):
INPUT | OUTPUT
------|-------
0000  | 1111
0001  | 1010
0010  | 1110
0011  | 0001
0100  | 0111
0101  | 1001
0110  | 0000
0111  | 1101
1000  | 0010
1001  | 0011
1010  | 0100
1011  | 1000
1100  | 0101
1101  | 0110
1110  | 1100
1111  | 1011

P-BOX (7 bits compressed to 4 bits)
Bit at Position X goes to Position Y
X: | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
Y: | 4 | 3 | 1 | 2 | 1 | 4 | 3 |


Data to decrypt         : p8Âõèw??}?0sm?¡Æ6f<???D??®§ÓÝ^×ænÓñ0?eÿhÊ$

Data padded with spaces : p8Âõèw??}?0sm?¡Æ6f<???D??®§ÓÝ^×ænÓñ0?eÿhÊ$[Padded with '0' spaces]

Data in ASCII           : 112,56,194,245,232,119,128,148,125,134,48,115,109,158,161,17,198,6,54,27,102,60,138,30,30,129,130,68,146,128,174,167,211,221,94,215,230,110,211,241,48,135,101,255,28,104,202,36,

Data in Binary          : 01110000,00111000,11000010,11110101,11101000,01110111,10000000,10010100,01111101,10000110,00110000,01110011,01101101,10011110,10100001,00010001,11000110,00000110,00110110,00011011,01100110,00111100,10001010,00011110,00011110,10000001,10000010,01000100,10010010,10000000,10101110,10100111,11010011,11011101,01011110,11010111,11100110,01101110,11010011,11110001,00110000,10000111,01100101,11111111,00011100,01101000,11001010,00100100,

Data in 64-bit Blocks   : 0111000000111000110000101111010111101000011101111000000010010100,0111110110000110001100000111001101101101100111101010000100010001,1100011000000110001101100001101101100110001111001000101000011110,0001111010000001100000100100010010010010100000001010111010100111,1101001111011101010111101101011111100110011011101101001111110001,0011000010000111011001011111111100011100011010001100101000100100,

!!!!NOTE: Subkeys used in REVERSE order for DECRYPTION



<<<<<< PROCESSING IN 'CBC' MODE >>>>>>


!!!CBC: Initial Previous Ciphertext = IV:               (0100001001110000010100000111000001110011011101000111001000110101)

Ciphertext Block 1:                                      0111000000111000110000101111010111101000011101111000000010010100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000001110001100001011110101

       - Right 32 Bits:            11101000011101111000000010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011100010101001100110100011001010110111001001111   [Subkey: 16]
          - Input Half:       11101000011101111000000010010100
          - S-Box Result:     11000010110111010010111100110111   [per every group of 4-bits]
          - Split Into Two:   1100001011011101 [L] 0010111100110111 [R]
          - Swap Halves:      00101111001101111100001011011101
          - Bit Inversion:    11010000110010000011110100100010
          - Compressed Key:   01001100010100110011101011001111   [done by compression P-Box]
          - XOR with Key:     10011100100110110000011111101101

          - FUNCTION OUTPUT:  10011100100110110000011111101101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000001110001100001011110101

       - FUNCTION OUTPUT:          10011100100110110000011111101101

       - Left XOR FUNCTION OUTPUT: 11101100101000111100010100011000

       - Next Round Left 32 Bits:  11101000011101111000000010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100101000111100010100011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101000011101111000000010010100

       - Right 32 Bits:            11101100101000111100010100011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101111100011101010110011001011100110101001000110110   [Subkey: 15]
          - Input Half:       11101100101000111100010100011000
          - S-Box Result:     11000101010000010101100110100010   [per every group of 4-bits]
          - Split Into Two:   1100010101000001 [L] 0101100110100010 [R]
          - Swap Halves:      01011001101000101100010101000001
          - Bit Inversion:    10100110010111010011101010111110
          - Compressed Key:   01011100010101100111111010001001   [done by compression P-Box]
          - XOR with Key:     11111010000010110100010000110111

          - FUNCTION OUTPUT:  11111010000010110100010000110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101000011101111000000010010100

       - FUNCTION OUTPUT:          11111010000010110100010000110111

       - Left XOR FUNCTION OUTPUT: 00010010011111001100010010100011

       - Next Round Left 32 Bits:  11101100101000111100010100011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00010010011111001100010010100011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100101000111100010100011000

       - Right 32 Bits:            00010010011111001100010010100011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101010000011100010101001100110100011001010110111001   [Subkey: 14]
          - Input Half:       00010010011111001100010010100011
          - S-Box Result:     10101110110101010101011101000001   [per every group of 4-bits]
          - Split Into Two:   1010111011010101 [L] 0101011101000001 [R]
          - Swap Halves:      01010111010000011010111011010101
          - Bit Inversion:    10101000101111100101000100101010
          - Compressed Key:   11010000010010001001100101110110   [done by compression P-Box]
          - XOR with Key:     01111000111101101100100001011100

          - FUNCTION OUTPUT:  01111000111101101100100001011100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100101000111100010100011000

       - FUNCTION OUTPUT:          01111000111101101100100001011100

       - Left XOR FUNCTION OUTPUT: 10010100010101010000110101000100

       - Next Round Left 32 Bits:  00010010011111001100010010100011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100010101010000110101000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00010010011111001100010010100011

       - Right 32 Bits:            10010100010101010000110101000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000010101111100011101010110011001011100110101001000   [Subkey: 13]
          - Input Half:       10010100010101010000110101000100
          - S-Box Result:     00110111100110011111011001110111   [per every group of 4-bits]
          - Split Into Two:   0011011110011001 [L] 1111011001110111 [R]
          - Swap Halves:      11110110011101110011011110011001
          - Bit Inversion:    00001001100010001100100001100110
          - Compressed Key:   11001010010010100011101101010100   [done by compression P-Box]
          - XOR with Key:     11000011110000101111001100110010

          - FUNCTION OUTPUT:  11000011110000101111001100110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00010010011111001100010010100011

       - FUNCTION OUTPUT:          11000011110000101111001100110010

       - Left XOR FUNCTION OUTPUT: 11010001101111100011011110010001

       - Next Round Left 32 Bits:  10010100010101010000110101000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010001101111100011011110010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010100010101010000110101000100

       - Right 32 Bits:            11010001101111100011011110010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100111101010000011100010101001100110100011001010110   [Subkey: 12]
          - Input Half:       11010001101111100011011110010001
          - S-Box Result:     01101010100011000001110100111010   [per every group of 4-bits]
          - Split Into Two:   0110101010001100 [L] 0001110100111010 [R]
          - Swap Halves:      00011101001110100110101010001100
          - Bit Inversion:    11100010110001011001010101110011
          - Compressed Key:   00011110000000100110111011001001   [done by compression P-Box]
          - XOR with Key:     11111100110001111111101110111010

          - FUNCTION OUTPUT:  11111100110001111111101110111010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010100010101010000110101000100

       - FUNCTION OUTPUT:          11111100110001111111101110111010

       - Left XOR FUNCTION OUTPUT: 01101000100100101111011011111110

       - Next Round Left 32 Bits:  11010001101111100011011110010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000100100101111011011111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010001101111100011011110010001

       - Right 32 Bits:            01101000100100101111011011111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011000010101111100011101010110011001011100110101   [Subkey: 11]
          - Input Half:       01101000100100101111011011111110
          - S-Box Result:     00000010001111101011000010111100   [per every group of 4-bits]
          - Split Into Two:   0000001000111110 [L] 1011000010111100 [R]
          - Swap Halves:      10110000101111000000001000111110
          - Bit Inversion:    01001111010000111111110111000001
          - Compressed Key:   00100100011100100101100111011010   [done by compression P-Box]
          - XOR with Key:     01101011001100011010010000011011

          - FUNCTION OUTPUT:  01101011001100011010010000011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010001101111100011011110010001

       - FUNCTION OUTPUT:          01101011001100011010010000011011

       - Left XOR FUNCTION OUTPUT: 10111010100011111001001110001010

       - Next Round Left 32 Bits:  01101000100100101111011011111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010100011111001001110001010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000100100101111011011111110

       - Right 32 Bits:            10111010100011111001001110001010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100100111101010000011100010101001100110100011001   [Subkey: 10]
          - Input Half:       10111010100011111001001110001010
          - S-Box Result:     10000100001010110011000100100100   [per every group of 4-bits]
          - Split Into Two:   1000010000101011 [L] 0011000100100100 [R]
          - Swap Halves:      00110001001001001000010000101011
          - Bit Inversion:    11001110110110110111101111010100
          - Compressed Key:   11101000010100100001001101010110   [done by compression P-Box]
          - XOR with Key:     00100110100010010110100010000010

          - FUNCTION OUTPUT:  00100110100010010110100010000010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000100100101111011011111110

       - FUNCTION OUTPUT:          00100110100010010110100010000010

       - Left XOR FUNCTION OUTPUT: 01001110000110111001111001111100

       - Next Round Left 32 Bits:  10111010100011111001001110001010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001110000110111001111001111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010100011111001001110001010

       - Right 32 Bits:            01001110000110111001111001111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011011000010101111100011101010110011001011100   [Subkey: 9]
          - Input Half:       01001110000110111001111001111100
          - S-Box Result:     01111100101010000011110011010101   [per every group of 4-bits]
          - Split Into Two:   0111110010101000 [L] 0011110011010101 [R]
          - Swap Halves:      00111100110101010111110010101000
          - Bit Inversion:    11000011001010101000001101010111
          - Compressed Key:   01010011000010110011101011001100   [done by compression P-Box]
          - XOR with Key:     10010000001000011011100110011011

          - FUNCTION OUTPUT:  10010000001000011011100110011011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010100011111001001110001010

       - FUNCTION OUTPUT:          10010000001000011011100110011011

       - Left XOR FUNCTION OUTPUT: 00101010101011100010101000010001

       - Next Round Left 32 Bits:  01001110000110111001111001111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00101010101011100010101000010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001110000110111001111001111100

       - Right 32 Bits:            00101010101011100010101000010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011011100100111101010000011100010101001100110100   [Subkey: 8]
          - Input Half:       00101010101011100010101000010001
          - S-Box Result:     11100100010011001110010010101010   [per every group of 4-bits]
          - Split Into Two:   1110010001001100 [L] 1110010010101010 [R]
          - Swap Halves:      11100100101010101110010001001100
          - Bit Inversion:    00011011010101010001101110110011
          - Compressed Key:   00010111011010100011101010011000   [done by compression P-Box]
          - XOR with Key:     00001100001111110010000100101011

          - FUNCTION OUTPUT:  00001100001111110010000100101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001110000110111001111001111100

       - FUNCTION OUTPUT:          00001100001111110010000100101011

       - Left XOR FUNCTION OUTPUT: 01000010001001001011111101010111

       - Next Round Left 32 Bits:  00101010101011100010101000010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000010001001001011111101010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00101010101011100010101000010001

       - Right 32 Bits:            01000010001001001011111101010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011010100100011011000010101111100011101010110011001   [Subkey: 7]
          - Input Half:       01000010001001001011111101010111
          - S-Box Result:     01111110111001111000101110011101   [per every group of 4-bits]
          - Split Into Two:   0111111011100111 [L] 1000101110011101 [R]
          - Swap Halves:      10001011100111010111111011100111
          - Bit Inversion:    01110100011000101000000100011000
          - Compressed Key:   01101000100100101111101101110110   [done by compression P-Box]
          - XOR with Key:     00011100111100000111101001101110

          - FUNCTION OUTPUT:  00011100111100000111101001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00101010101011100010101000010001

       - FUNCTION OUTPUT:          00011100111100000111101001101110

       - Left XOR FUNCTION OUTPUT: 00110110010111100101000001111111

       - Next Round Left 32 Bits:  01000010001001001011111101010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110010111100101000001111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000010001001001011111101010111

       - Right 32 Bits:            00110110010111100101000001111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100101011011100100111101010000011100010101001100   [Subkey: 6]
          - Input Half:       00110110010111100101000001111111
          - S-Box Result:     00010000100111001001111111011011   [per every group of 4-bits]
          - Split Into Two:   0001000010011100 [L] 1001111111011011 [R]
          - Swap Halves:      10011111110110110001000010011100
          - Bit Inversion:    01100000001001001110111101100011
          - Compressed Key:   01001010101100110101101101011100   [done by compression P-Box]
          - XOR with Key:     00101010100101111011010000111111

          - FUNCTION OUTPUT:  00101010100101111011010000111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000010001001001011111101010111

       - FUNCTION OUTPUT:          00101010100101111011010000111111

       - Left XOR FUNCTION OUTPUT: 01101000101100110000101101101000

       - Next Round Left 32 Bits:  00110110010111100101000001111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101000101100110000101101101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110010111100101000001111111

       - Right 32 Bits:            01101000101100110000101101101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101110011010100100011011000010101111100011101010110   [Subkey: 5]
          - Input Half:       01101000101100110000101101101000
          - S-Box Result:     00000010100000011111100000000010   [per every group of 4-bits]
          - Split Into Two:   0000001010000001 [L] 1111100000000010 [R]
          - Swap Halves:      11111000000000100000001010000001
          - Bit Inversion:    00000111111111011111110101111110
          - Compressed Key:   00010011011011100001111111011001   [done by compression P-Box]
          - XOR with Key:     00010100100100111110001010100111

          - FUNCTION OUTPUT:  00010100100100111110001010100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110010111100101000001111111

       - FUNCTION OUTPUT:          00010100100100111110001010100111

       - Left XOR FUNCTION OUTPUT: 00100010110011011011001011011000

       - Next Round Left 32 Bits:  01101000101100110000101101101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100010110011011011001011011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101000101100110000101101101000

       - Right 32 Bits:            00100010110011011011001011011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010001100101011011100100111101010000011100010101   [Subkey: 4]
          - Input Half:       00100010110011011011001011011000
          - S-Box Result:     11101110010101101000111001100010   [per every group of 4-bits]
          - Split Into Two:   1110111001010110 [L] 1000111001100010 [R]
          - Swap Halves:      10001110011000101110111001010110
          - Bit Inversion:    01110001100111010001000110101001
          - Compressed Key:   01100010010111011011100011011010   [done by compression P-Box]
          - XOR with Key:     00010011110000001010100101110011

          - FUNCTION OUTPUT:  00010011110000001010100101110011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101000101100110000101101101000

       - FUNCTION OUTPUT:          00010011110000001010100101110011

       - Left XOR FUNCTION OUTPUT: 01111011011100111010001000011011

       - Next Round Left 32 Bits:  00100010110011011011001011011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111011011100111010001000011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100010110011011011001011011000

       - Right 32 Bits:            01111011011100111010001000011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001100101110011010100100011011000010101111100011101   [Subkey: 3]
          - Input Half:       01111011011100111010001000011011
          - S-Box Result:     11011000110100010100111010101000   [per every group of 4-bits]
          - Split Into Two:   1101100011010001 [L] 0100111010101000 [R]
          - Swap Halves:      01001110101010001101100011010001
          - Bit Inversion:    10110001010101110010011100101110
          - Compressed Key:   11001010100100010111101011011110   [done by compression P-Box]
          - XOR with Key:     01111011110001100101110111110000

          - FUNCTION OUTPUT:  01111011110001100101110111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100010110011011011001011011000

       - FUNCTION OUTPUT:          01111011110001100101110111110000

       - Left XOR FUNCTION OUTPUT: 01011001000010111110111100101000

       - Next Round Left 32 Bits:  01111011011100111010001000011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011001000010111110111100101000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111011011100111010001000011011

       - Right 32 Bits:            01011001000010111110111100101000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110011010001100101011011100100111101010000011100   [Subkey: 2]
          - Input Half:       01011001000010111110111100101000
          - S-Box Result:     10010011111110001100101111100010   [per every group of 4-bits]
          - Split Into Two:   1001001111111000 [L] 1100101111100010 [R]
          - Swap Halves:      11001011111000101001001111111000
          - Bit Inversion:    00110100000111010110110000000111
          - Compressed Key:   01010011001110101100111101001100   [done by compression P-Box]
          - XOR with Key:     01100111001001111010001101001011

          - FUNCTION OUTPUT:  01100111001001111010001101001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111011011100111010001000011011

       - FUNCTION OUTPUT:          01100111001001111010001101001011

       - Left XOR FUNCTION OUTPUT: 00011100010101000000000101010000

       - Next Round Left 32 Bits:  01011001000010111110111100101000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011100010101000000000101010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011001000010111110111100101000

       - Right 32 Bits:            00011100010101000000000101010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001100101110011010100100011011000010101111100   [Subkey: 1]
          - Input Half:       00011100010101000000000101010000
          - S-Box Result:     10100101100101111111101010011111   [per every group of 4-bits]
          - Split Into Two:   1010010110010111 [L] 1111101010011111 [R]
          - Swap Halves:      11111010100111111010010110010111
          - Bit Inversion:    00000101011000000101101001101000
          - Compressed Key:   01010110011111101000100101011100   [done by compression P-Box]
          - XOR with Key:     01010011000111101101001100110100

          - FUNCTION OUTPUT:  01010011000111101101001100110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011001000010111110111100101000

       - FUNCTION OUTPUT:          01010011000111101101001100110100

       - Left XOR FUNCTION OUTPUT: 00001010000101010011110000011100

       - Next Round Left 32 Bits:  00011100010101000000000101010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010000101010011110000011100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000101000010101001111000001110000011100010101000000000101010000

 > Decrypted Block:     0000101000010101001111000001110000011100010101000000000101010000


!!!CBC: Previous Ciphertext:                             0100001001110000010100000111000001110011011101000111001000110101

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0100100001100101011011000110110001101111001000000111001101100101

 > Final Processed Block:                                0100100001100101011011000110110001101111001000000111001101100101



Ciphertext Block 2:                                      0111110110000110001100000111001101101101100111101010000100010001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111101100001100011000001110011

       - Right 32 Bits:            01101101100111101010000100010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011100010101001100110100011001010110111001001111   [Subkey: 16]
          - Input Half:       01101101100111101010000100010001
          - S-Box Result:     00000110001111000100101010101010   [per every group of 4-bits]
          - Split Into Two:   0000011000111100 [L] 0100101010101010 [R]
          - Swap Halves:      01001010101010100000011000111100
          - Bit Inversion:    10110101010101011111100111000011
          - Compressed Key:   01001100010100110011101011001111   [done by compression P-Box]
          - XOR with Key:     11111001000001101100001100001100

          - FUNCTION OUTPUT:  11111001000001101100001100001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111101100001100011000001110011

       - FUNCTION OUTPUT:          11111001000001101100001100001100

       - Left XOR FUNCTION OUTPUT: 10000100100000001111001101111111

       - Next Round Left 32 Bits:  01101101100111101010000100010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000100100000001111001101111111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101101100111101010000100010001

       - Right 32 Bits:            10000100100000001111001101111111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101111100011101010110011001011100110101001000110110   [Subkey: 15]
          - Input Half:       10000100100000001111001101111111
          - S-Box Result:     00100111001011111011000111011011   [per every group of 4-bits]
          - Split Into Two:   0010011100101111 [L] 1011000111011011 [R]
          - Swap Halves:      10110001110110110010011100101111
          - Bit Inversion:    01001110001001001101100011010000
          - Compressed Key:   01011100010101100111111010001001   [done by compression P-Box]
          - XOR with Key:     00010010011100101010011001011001

          - FUNCTION OUTPUT:  00010010011100101010011001011001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101101100111101010000100010001

       - FUNCTION OUTPUT:          00010010011100101010011001011001

       - Left XOR FUNCTION OUTPUT: 01111111111011000000011101001000

       - Next Round Left 32 Bits:  10000100100000001111001101111111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111111111011000000011101001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000100100000001111001101111111

       - Right 32 Bits:            01111111111011000000011101001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101010000011100010101001100110100011001010110111001   [Subkey: 14]
          - Input Half:       01111111111011000000011101001000
          - S-Box Result:     11011011110001011111110101110010   [per every group of 4-bits]
          - Split Into Two:   1101101111000101 [L] 1111110101110010 [R]
          - Swap Halves:      11111101011100101101101111000101
          - Bit Inversion:    00000010100011010010010000111010
          - Compressed Key:   11010000010010001001100101110110   [done by compression P-Box]
          - XOR with Key:     11010010110001011011110101001100

          - FUNCTION OUTPUT:  11010010110001011011110101001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000100100000001111001101111111

       - FUNCTION OUTPUT:          11010010110001011011110101001100

       - Left XOR FUNCTION OUTPUT: 01010110010001010100111000110011

       - Next Round Left 32 Bits:  01111111111011000000011101001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010110010001010100111000110011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111111111011000000011101001000

       - Right 32 Bits:            01010110010001010100111000110011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000010101111100011101010110011001011100110101001000   [Subkey: 13]
          - Input Half:       01010110010001010100111000110011
          - S-Box Result:     10010000011110010111110000010001   [per every group of 4-bits]
          - Split Into Two:   1001000001111001 [L] 0111110000010001 [R]
          - Swap Halves:      01111100000100011001000001111001
          - Bit Inversion:    10000011111011100110111110000110
          - Compressed Key:   11001010010010100011101101010100   [done by compression P-Box]
          - XOR with Key:     01001001101001000101010011010010

          - FUNCTION OUTPUT:  01001001101001000101010011010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111111111011000000011101001000

       - FUNCTION OUTPUT:          01001001101001000101010011010010

       - Left XOR FUNCTION OUTPUT: 00110110010010000101001110011010

       - Next Round Left 32 Bits:  01010110010001010100111000110011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110010010000101001110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010110010001010100111000110011

       - Right 32 Bits:            00110110010010000101001110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100111101010000011100010101001100110100011001010110   [Subkey: 12]
          - Input Half:       00110110010010000101001110011010
          - S-Box Result:     00010000011100101001000100110100   [per every group of 4-bits]
          - Split Into Two:   0001000001110010 [L] 1001000100110100 [R]
          - Swap Halves:      10010001001101000001000001110010
          - Bit Inversion:    01101110110010111110111110001101
          - Compressed Key:   00011110000000100110111011001001   [done by compression P-Box]
          - XOR with Key:     01110000110010011000000101000100

          - FUNCTION OUTPUT:  01110000110010011000000101000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010110010001010100111000110011

       - FUNCTION OUTPUT:          01110000110010011000000101000100

       - Left XOR FUNCTION OUTPUT: 00100110100011001100111101110111

       - Next Round Left 32 Bits:  00110110010010000101001110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110100011001100111101110111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110010010000101001110011010

       - Right 32 Bits:            00100110100011001100111101110111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011000010101111100011101010110011001011100110101   [Subkey: 11]
          - Input Half:       00100110100011001100111101110111
          - S-Box Result:     11100000001001010101101111011101   [per every group of 4-bits]
          - Split Into Two:   1110000000100101 [L] 0101101111011101 [R]
          - Swap Halves:      01011011110111011110000000100101
          - Bit Inversion:    10100100001000100001111111011010
          - Compressed Key:   00100100011100100101100111011010   [done by compression P-Box]
          - XOR with Key:     10000000010100000100011000000000

          - FUNCTION OUTPUT:  10000000010100000100011000000000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110010010000101001110011010

       - FUNCTION OUTPUT:          10000000010100000100011000000000

       - Left XOR FUNCTION OUTPUT: 10110110000110000001010110011010

       - Next Round Left 32 Bits:  00100110100011001100111101110111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110000110000001010110011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110100011001100111101110111

       - Right 32 Bits:            10110110000110000001010110011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100100111101010000011100010101001100110100011001   [Subkey: 10]
          - Input Half:       10110110000110000001010110011010
          - S-Box Result:     10000000101000101010100100110100   [per every group of 4-bits]
          - Split Into Two:   1000000010100010 [L] 1010100100110100 [R]
          - Swap Halves:      10101001001101001000000010100010
          - Bit Inversion:    01010110110010110111111101011101
          - Compressed Key:   11101000010100100001001101010110   [done by compression P-Box]
          - XOR with Key:     10111110100110010110110000001011

          - FUNCTION OUTPUT:  10111110100110010110110000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110100011001100111101110111

       - FUNCTION OUTPUT:          10111110100110010110110000001011

       - Left XOR FUNCTION OUTPUT: 10011000000101011010001101111100

       - Next Round Left 32 Bits:  10110110000110000001010110011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10011000000101011010001101111100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110000110000001010110011010

       - Right 32 Bits:            10011000000101011010001101111100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011011000010101111100011101010110011001011100   [Subkey: 9]
          - Input Half:       10011000000101011010001101111100
          - S-Box Result:     00110010101010010100000111010101   [per every group of 4-bits]
          - Split Into Two:   0011001010101001 [L] 0100000111010101 [R]
          - Swap Halves:      01000001110101010011001010101001
          - Bit Inversion:    10111110001010101100110101010110
          - Compressed Key:   01010011000010110011101011001100   [done by compression P-Box]
          - XOR with Key:     11101101001000011111011110011010

          - FUNCTION OUTPUT:  11101101001000011111011110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110000110000001010110011010

       - FUNCTION OUTPUT:          11101101001000011111011110011010

       - Left XOR FUNCTION OUTPUT: 01011011001110011110001000000000

       - Next Round Left 32 Bits:  10011000000101011010001101111100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011011001110011110001000000000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10011000000101011010001101111100

       - Right 32 Bits:            01011011001110011110001000000000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011011100100111101010000011100010101001100110100   [Subkey: 8]
          - Input Half:       01011011001110011110001000000000
          - S-Box Result:     10011000000100111100111011111111   [per every group of 4-bits]
          - Split Into Two:   1001100000010011 [L] 1100111011111111 [R]
          - Swap Halves:      11001110111111111001100000010011
          - Bit Inversion:    00110001000000000110011111101100
          - Compressed Key:   00010111011010100011101010011000   [done by compression P-Box]
          - XOR with Key:     00100110011010100101110101110100

          - FUNCTION OUTPUT:  00100110011010100101110101110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10011000000101011010001101111100

       - FUNCTION OUTPUT:          00100110011010100101110101110100

       - Left XOR FUNCTION OUTPUT: 10111110011111111111111000001000

       - Next Round Left 32 Bits:  01011011001110011110001000000000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111110011111111111111000001000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011011001110011110001000000000

       - Right 32 Bits:            10111110011111111111111000001000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011010100100011011000010101111100011101010110011001   [Subkey: 7]
          - Input Half:       10111110011111111111111000001000
          - S-Box Result:     10001100110110111011110011110010   [per every group of 4-bits]
          - Split Into Two:   1000110011011011 [L] 1011110011110010 [R]
          - Swap Halves:      10111100111100101000110011011011
          - Bit Inversion:    01000011000011010111001100100100
          - Compressed Key:   01101000100100101111101101110110   [done by compression P-Box]
          - XOR with Key:     00101011100111111000100001010010

          - FUNCTION OUTPUT:  00101011100111111000100001010010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011011001110011110001000000000

       - FUNCTION OUTPUT:          00101011100111111000100001010010

       - Left XOR FUNCTION OUTPUT: 01110000101001100110101001010010

       - Next Round Left 32 Bits:  10111110011111111111111000001000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000101001100110101001010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111110011111111111111000001000

       - Right 32 Bits:            01110000101001100110101001010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100101011011100100111101010000011100010101001100   [Subkey: 6]
          - Input Half:       01110000101001100110101001010010
          - S-Box Result:     11011111010000000000010010011110   [per every group of 4-bits]
          - Split Into Two:   1101111101000000 [L] 0000010010011110 [R]
          - Swap Halves:      00000100100111101101111101000000
          - Bit Inversion:    11111011011000010010000010111111
          - Compressed Key:   01001010101100110101101101011100   [done by compression P-Box]
          - XOR with Key:     10110001110100100111101111100011

          - FUNCTION OUTPUT:  10110001110100100111101111100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111110011111111111111000001000

       - FUNCTION OUTPUT:          10110001110100100111101111100011

       - Left XOR FUNCTION OUTPUT: 00001111101011011000010111101011

       - Next Round Left 32 Bits:  01110000101001100110101001010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001111101011011000010111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000101001100110101001010010

       - Right 32 Bits:            00001111101011011000010111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101110011010100100011011000010101111100011101010110   [Subkey: 5]
          - Input Half:       00001111101011011000010111101011
          - S-Box Result:     11111011010001100010100111001000   [per every group of 4-bits]
          - Split Into Two:   1111101101000110 [L] 0010100111001000 [R]
          - Swap Halves:      00101001110010001111101101000110
          - Bit Inversion:    11010110001101110000010010111001
          - Compressed Key:   00010011011011100001111111011001   [done by compression P-Box]
          - XOR with Key:     11000101010110010001101101100000

          - FUNCTION OUTPUT:  11000101010110010001101101100000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000101001100110101001010010

       - FUNCTION OUTPUT:          11000101010110010001101101100000

       - Left XOR FUNCTION OUTPUT: 10110101111111110111000100110010

       - Next Round Left 32 Bits:  00001111101011011000010111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101111111110111000100110010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001111101011011000010111101011

       - Right 32 Bits:            10110101111111110111000100110010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010001100101011011100100111101010000011100010101   [Subkey: 4]
          - Input Half:       10110101111111110111000100110010
          - S-Box Result:     10001001101110111101101000011110   [per every group of 4-bits]
          - Split Into Two:   1000100110111011 [L] 1101101000011110 [R]
          - Swap Halves:      11011010000111101000100110111011
          - Bit Inversion:    00100101111000010111011001000100
          - Compressed Key:   01100010010111011011100011011010   [done by compression P-Box]
          - XOR with Key:     01000111101111001100111010011110

          - FUNCTION OUTPUT:  01000111101111001100111010011110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001111101011011000010111101011

       - FUNCTION OUTPUT:          01000111101111001100111010011110

       - Left XOR FUNCTION OUTPUT: 01001000000100010100101101110101

       - Next Round Left 32 Bits:  10110101111111110111000100110010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001000000100010100101101110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101111111110111000100110010

       - Right 32 Bits:            01001000000100010100101101110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001100101110011010100100011011000010101111100011101   [Subkey: 3]
          - Input Half:       01001000000100010100101101110101
          - S-Box Result:     01110010101010100111100011011001   [per every group of 4-bits]
          - Split Into Two:   0111001010101010 [L] 0111100011011001 [R]
          - Swap Halves:      01111000110110010111001010101010
          - Bit Inversion:    10000111001001101000110101010101
          - Compressed Key:   11001010100100010111101011011110   [done by compression P-Box]
          - XOR with Key:     01001101101101111111011110001011

          - FUNCTION OUTPUT:  01001101101101111111011110001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101111111110111000100110010

       - FUNCTION OUTPUT:          01001101101101111111011110001011

       - Left XOR FUNCTION OUTPUT: 11111000010010001000011010111001

       - Next Round Left 32 Bits:  01001000000100010100101101110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111000010010001000011010111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001000000100010100101101110101

       - Right 32 Bits:            11111000010010001000011010111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110011010001100101011011100100111101010000011100   [Subkey: 2]
          - Input Half:       11111000010010001000011010111001
          - S-Box Result:     10110010011100100010000010000011   [per every group of 4-bits]
          - Split Into Two:   1011001001110010 [L] 0010000010000011 [R]
          - Swap Halves:      00100000100000111011001001110010
          - Bit Inversion:    11011111011111000100110110001101
          - Compressed Key:   01010011001110101100111101001100   [done by compression P-Box]
          - XOR with Key:     10001100010001101000001011000001

          - FUNCTION OUTPUT:  10001100010001101000001011000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001000000100010100101101110101

       - FUNCTION OUTPUT:          10001100010001101000001011000001

       - Left XOR FUNCTION OUTPUT: 11000100010101111100100110110100

       - Next Round Left 32 Bits:  11111000010010001000011010111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100010101111100100110110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111000010010001000011010111001

       - Right 32 Bits:            11000100010101111100100110110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001100101110011010100100011011000010101111100   [Subkey: 1]
          - Input Half:       11000100010101111100100110110100
          - S-Box Result:     01010111100111010101001110000111   [per every group of 4-bits]
          - Split Into Two:   0101011110011101 [L] 0101001110000111 [R]
          - Swap Halves:      01010011100001110101011110011101
          - Bit Inversion:    10101100011110001010100001100010
          - Compressed Key:   01010110011111101000100101011100   [done by compression P-Box]
          - XOR with Key:     11111010000001100010000100111110

          - FUNCTION OUTPUT:  11111010000001100010000100111110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111000010010001000011010111001

       - FUNCTION OUTPUT:          11111010000001100010000100111110

       - Left XOR FUNCTION OUTPUT: 00000010010011101010011110000111

       - Next Round Left 32 Bits:  11000100010101111100100110110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010010011101010011110000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000001001001110101001111000011111000100010101111100100110110100

 > Decrypted Block:     0000001001001110101001111000011111000100010101111100100110110100


!!!CBC: Previous Ciphertext:                             0111000000111000110000101111010111101000011101111000000010010100

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111001001110110011001010111001000101100001000000100100100100000

 > Final Processed Block:                                0111001001110110011001010111001000101100001000000100100100100000



Ciphertext Block 3:                                      1100011000000110001101100001101101100110001111001000101000011110

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000110000001100011011000011011

       - Right 32 Bits:            01100110001111001000101000011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011100010101001100110100011001010110111001001111   [Subkey: 16]
          - Input Half:       01100110001111001000101000011110
          - S-Box Result:     00000000000101010010010010101100   [per every group of 4-bits]
          - Split Into Two:   0000000000010101 [L] 0010010010101100 [R]
          - Swap Halves:      00100100101011000000000000010101
          - Bit Inversion:    11011011010100111111111111101010
          - Compressed Key:   01001100010100110011101011001111   [done by compression P-Box]
          - XOR with Key:     10010111000000001100010100100101

          - FUNCTION OUTPUT:  10010111000000001100010100100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000110000001100011011000011011

       - FUNCTION OUTPUT:          10010111000000001100010100100101

       - Left XOR FUNCTION OUTPUT: 01010001000001101111001100111110

       - Next Round Left 32 Bits:  01100110001111001000101000011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010001000001101111001100111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01100110001111001000101000011110

       - Right 32 Bits:            01010001000001101111001100111110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101111100011101010110011001011100110101001000110110   [Subkey: 15]
          - Input Half:       01010001000001101111001100111110
          - S-Box Result:     10011010111100001011000100011100   [per every group of 4-bits]
          - Split Into Two:   1001101011110000 [L] 1011000100011100 [R]
          - Swap Halves:      10110001000111001001101011110000
          - Bit Inversion:    01001110111000110110010100001111
          - Compressed Key:   01011100010101100111111010001001   [done by compression P-Box]
          - XOR with Key:     00010010101101010001101110000110

          - FUNCTION OUTPUT:  00010010101101010001101110000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01100110001111001000101000011110

       - FUNCTION OUTPUT:          00010010101101010001101110000110

       - Left XOR FUNCTION OUTPUT: 01110100100010011001000110011000

       - Next Round Left 32 Bits:  01010001000001101111001100111110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110100100010011001000110011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010001000001101111001100111110

       - Right 32 Bits:            01110100100010011001000110011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101010000011100010101001100110100011001010110111001   [Subkey: 14]
          - Input Half:       01110100100010011001000110011000
          - S-Box Result:     11010111001000110011101000110010   [per every group of 4-bits]
          - Split Into Two:   1101011100100011 [L] 0011101000110010 [R]
          - Swap Halves:      00111010001100101101011100100011
          - Bit Inversion:    11000101110011010010100011011100
          - Compressed Key:   11010000010010001001100101110110   [done by compression P-Box]
          - XOR with Key:     00010101100001011011000110101010

          - FUNCTION OUTPUT:  00010101100001011011000110101010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010001000001101111001100111110

       - FUNCTION OUTPUT:          00010101100001011011000110101010

       - Left XOR FUNCTION OUTPUT: 01000100100000110100001010010100

       - Next Round Left 32 Bits:  01110100100010011001000110011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000100100000110100001010010100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110100100010011001000110011000

       - Right 32 Bits:            01000100100000110100001010010100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000010101111100011101010110011001011100110101001000   [Subkey: 13]
          - Input Half:       01000100100000110100001010010100
          - S-Box Result:     01110111001000010111111000110111   [per every group of 4-bits]
          - Split Into Two:   0111011100100001 [L] 0111111000110111 [R]
          - Swap Halves:      01111110001101110111011100100001
          - Bit Inversion:    10000001110010001000100011011110
          - Compressed Key:   11001010010010100011101101010100   [done by compression P-Box]
          - XOR with Key:     01001011100000101011001110001010

          - FUNCTION OUTPUT:  01001011100000101011001110001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110100100010011001000110011000

       - FUNCTION OUTPUT:          01001011100000101011001110001010

       - Left XOR FUNCTION OUTPUT: 00111111000010110010001000010010

       - Next Round Left 32 Bits:  01000100100000110100001010010100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111111000010110010001000010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000100100000110100001010010100

       - Right 32 Bits:            00111111000010110010001000010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100111101010000011100010101001100110100011001010110   [Subkey: 12]
          - Input Half:       00111111000010110010001000010010
          - S-Box Result:     00011011111110001110111010101110   [per every group of 4-bits]
          - Split Into Two:   0001101111111000 [L] 1110111010101110 [R]
          - Swap Halves:      11101110101011100001101111111000
          - Bit Inversion:    00010001010100011110010000000111
          - Compressed Key:   00011110000000100110111011001001   [done by compression P-Box]
          - XOR with Key:     00001111010100111000101011001110

          - FUNCTION OUTPUT:  00001111010100111000101011001110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000100100000110100001010010100

       - FUNCTION OUTPUT:          00001111010100111000101011001110

       - Left XOR FUNCTION OUTPUT: 01001011110100001100100001011010

       - Next Round Left 32 Bits:  00111111000010110010001000010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01001011110100001100100001011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00111111000010110010001000010010

       - Right 32 Bits:            01001011110100001100100001011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011000010101111100011101010110011001011100110101   [Subkey: 11]
          - Input Half:       01001011110100001100100001011010
          - S-Box Result:     01111000011011110101001010010100   [per every group of 4-bits]
          - Split Into Two:   0111100001101111 [L] 0101001010010100 [R]
          - Swap Halves:      01010010100101000111100001101111
          - Bit Inversion:    10101101011010111000011110010000
          - Compressed Key:   00100100011100100101100111011010   [done by compression P-Box]
          - XOR with Key:     10001001000110011101111001001010

          - FUNCTION OUTPUT:  10001001000110011101111001001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00111111000010110010001000010010

       - FUNCTION OUTPUT:          10001001000110011101111001001010

       - Left XOR FUNCTION OUTPUT: 10110110000100101111110001011000

       - Next Round Left 32 Bits:  01001011110100001100100001011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110110000100101111110001011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01001011110100001100100001011010

       - Right 32 Bits:            10110110000100101111110001011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100100111101010000011100010101001100110100011001   [Subkey: 10]
          - Input Half:       10110110000100101111110001011000
          - S-Box Result:     10000000101011101011010110010010   [per every group of 4-bits]
          - Split Into Two:   1000000010101110 [L] 1011010110010010 [R]
          - Swap Halves:      10110101100100101000000010101110
          - Bit Inversion:    01001010011011010111111101010001
          - Compressed Key:   11101000010100100001001101010110   [done by compression P-Box]
          - XOR with Key:     10100010001111110110110000000111

          - FUNCTION OUTPUT:  10100010001111110110110000000111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01001011110100001100100001011010

       - FUNCTION OUTPUT:          10100010001111110110110000000111

       - Left XOR FUNCTION OUTPUT: 11101001111011111010010001011101

       - Next Round Left 32 Bits:  10110110000100101111110001011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101001111011111010010001011101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110110000100101111110001011000

       - Right 32 Bits:            11101001111011111010010001011101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011011000010101111100011101010110011001011100   [Subkey: 9]
          - Input Half:       11101001111011111010010001011101
          - S-Box Result:     11000011110010110100011110010110   [per every group of 4-bits]
          - Split Into Two:   1100001111001011 [L] 0100011110010110 [R]
          - Swap Halves:      01000111100101101100001111001011
          - Bit Inversion:    10111000011010010011110000110100
          - Compressed Key:   01010011000010110011101011001100   [done by compression P-Box]
          - XOR with Key:     11101011011000100000011011111000

          - FUNCTION OUTPUT:  11101011011000100000011011111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110110000100101111110001011000

       - FUNCTION OUTPUT:          11101011011000100000011011111000

       - Left XOR FUNCTION OUTPUT: 01011101011100001111101010100000

       - Next Round Left 32 Bits:  11101001111011111010010001011101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011101011100001111101010100000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101001111011111010010001011101

       - Right 32 Bits:            01011101011100001111101010100000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011011100100111101010000011100010101001100110100   [Subkey: 8]
          - Input Half:       01011101011100001111101010100000
          - S-Box Result:     10010110110111111011010001001111   [per every group of 4-bits]
          - Split Into Two:   1001011011011111 [L] 1011010001001111 [R]
          - Swap Halves:      10110100010011111001011011011111
          - Bit Inversion:    01001011101100000110100100100000
          - Compressed Key:   00010111011010100011101010011000   [done by compression P-Box]
          - XOR with Key:     01011100110110100101001110111000

          - FUNCTION OUTPUT:  01011100110110100101001110111000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101001111011111010010001011101

       - FUNCTION OUTPUT:          01011100110110100101001110111000

       - Left XOR FUNCTION OUTPUT: 10110101001101011111011111100101

       - Next Round Left 32 Bits:  01011101011100001111101010100000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101001101011111011111100101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011101011100001111101010100000

       - Right 32 Bits:            10110101001101011111011111100101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011010100100011011000010101111100011101010110011001   [Subkey: 7]
          - Input Half:       10110101001101011111011111100101
          - S-Box Result:     10001001000110011011110111001001   [per every group of 4-bits]
          - Split Into Two:   1000100100011001 [L] 1011110111001001 [R]
          - Swap Halves:      10111101110010011000100100011001
          - Bit Inversion:    01000010001101100111011011100110
          - Compressed Key:   01101000100100101111101101110110   [done by compression P-Box]
          - XOR with Key:     00101010101001001000110110010000

          - FUNCTION OUTPUT:  00101010101001001000110110010000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011101011100001111101010100000

       - FUNCTION OUTPUT:          00101010101001001000110110010000

       - Left XOR FUNCTION OUTPUT: 01110111110101000111011100110000

       - Next Round Left 32 Bits:  10110101001101011111011111100101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110111110101000111011100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101001101011111011111100101

       - Right 32 Bits:            01110111110101000111011100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100101011011100100111101010000011100010101001100   [Subkey: 6]
          - Input Half:       01110111110101000111011100110000
          - S-Box Result:     11011101011001111101110100011111   [per every group of 4-bits]
          - Split Into Two:   1101110101100111 [L] 1101110100011111 [R]
          - Swap Halves:      11011101000111111101110101100111
          - Bit Inversion:    00100010111000000010001010011000
          - Compressed Key:   01001010101100110101101101011100   [done by compression P-Box]
          - XOR with Key:     01101000010100110111100111000100

          - FUNCTION OUTPUT:  01101000010100110111100111000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101001101011111011111100101

       - FUNCTION OUTPUT:          01101000010100110111100111000100

       - Left XOR FUNCTION OUTPUT: 11011101011001101000111000100001

       - Next Round Left 32 Bits:  01110111110101000111011100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101011001101000111000100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110111110101000111011100110000

       - Right 32 Bits:            11011101011001101000111000100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101110011010100100011011000010101111100011101010110   [Subkey: 5]
          - Input Half:       11011101011001101000111000100001
          - S-Box Result:     01100110000000000010110011101010   [per every group of 4-bits]
          - Split Into Two:   0110011000000000 [L] 0010110011101010 [R]
          - Swap Halves:      00101100111010100110011000000000
          - Bit Inversion:    11010011000101011001100111111111
          - Compressed Key:   00010011011011100001111111011001   [done by compression P-Box]
          - XOR with Key:     11000000011110111000011000100110

          - FUNCTION OUTPUT:  11000000011110111000011000100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110111110101000111011100110000

       - FUNCTION OUTPUT:          11000000011110111000011000100110

       - Left XOR FUNCTION OUTPUT: 10110111101011111111000100010110

       - Next Round Left 32 Bits:  11011101011001101000111000100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110111101011111111000100010110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101011001101000111000100001

       - Right 32 Bits:            10110111101011111111000100010110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010001100101011011100100111101010000011100010101   [Subkey: 4]
          - Input Half:       10110111101011111111000100010110
          - S-Box Result:     10001101010010111011101010100000   [per every group of 4-bits]
          - Split Into Two:   1000110101001011 [L] 1011101010100000 [R]
          - Swap Halves:      10111010101000001000110101001011
          - Bit Inversion:    01000101010111110111001010110100
          - Compressed Key:   01100010010111011011100011011010   [done by compression P-Box]
          - XOR with Key:     00100111000000101100101001101110

          - FUNCTION OUTPUT:  00100111000000101100101001101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101011001101000111000100001

       - FUNCTION OUTPUT:          00100111000000101100101001101110

       - Left XOR FUNCTION OUTPUT: 11111010011001000100010001001111

       - Next Round Left 32 Bits:  10110111101011111111000100010110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111010011001000100010001001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110111101011111111000100010110

       - Right 32 Bits:            11111010011001000100010001001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001100101110011010100100011011000010101111100011101   [Subkey: 3]
          - Input Half:       11111010011001000100010001001111
          - S-Box Result:     10110100000001110111011101111011   [per every group of 4-bits]
          - Split Into Two:   1011010000000111 [L] 0111011101111011 [R]
          - Swap Halves:      01110111011110111011010000000111
          - Bit Inversion:    10001000100001000100101111111000
          - Compressed Key:   11001010100100010111101011011110   [done by compression P-Box]
          - XOR with Key:     01000010000101010011000100100110

          - FUNCTION OUTPUT:  01000010000101010011000100100110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110111101011111111000100010110

       - FUNCTION OUTPUT:          01000010000101010011000100100110

       - Left XOR FUNCTION OUTPUT: 11110101101110101100000000110000

       - Next Round Left 32 Bits:  11111010011001000100010001001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110101101110101100000000110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111010011001000100010001001111

       - Right 32 Bits:            11110101101110101100000000110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110011010001100101011011100100111101010000011100   [Subkey: 2]
          - Input Half:       11110101101110101100000000110000
          - S-Box Result:     10111001100001000101111100011111   [per every group of 4-bits]
          - Split Into Two:   1011100110000100 [L] 0101111100011111 [R]
          - Swap Halves:      01011111000111111011100110000100
          - Bit Inversion:    10100000111000000100011001111011
          - Compressed Key:   01010011001110101100111101001100   [done by compression P-Box]
          - XOR with Key:     11110011110110101000100100110111

          - FUNCTION OUTPUT:  11110011110110101000100100110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111010011001000100010001001111

       - FUNCTION OUTPUT:          11110011110110101000100100110111

       - Left XOR FUNCTION OUTPUT: 00001001101111101100110101111000

       - Next Round Left 32 Bits:  11110101101110101100000000110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001001101111101100110101111000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11110101101110101100000000110000

       - Right 32 Bits:            00001001101111101100110101111000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001100101110011010100100011011000010101111100   [Subkey: 1]
          - Input Half:       00001001101111101100110101111000
          - S-Box Result:     11110011100011000101011011010010   [per every group of 4-bits]
          - Split Into Two:   1111001110001100 [L] 0101011011010010 [R]
          - Swap Halves:      01010110110100101111001110001100
          - Bit Inversion:    10101001001011010000110001110011
          - Compressed Key:   01010110011111101000100101011100   [done by compression P-Box]
          - XOR with Key:     11111111010100111000010100101111

          - FUNCTION OUTPUT:  11111111010100111000010100101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11110101101110101100000000110000

       - FUNCTION OUTPUT:          11111111010100111000010100101111

       - Left XOR FUNCTION OUTPUT: 00001010111010010100010100011111

       - Next Round Left 32 Bits:  00001001101111101100110101111000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001010111010010100010100011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0000101011101001010001010001111100001001101111101100110101111000

 > Decrypted Block:     0000101011101001010001010001111100001001101111101100110101111000


!!!CBC: Previous Ciphertext:                             0111110110000110001100000111001101101101100111101010000100010001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0111011101101111011101010110110001100100001000000110110001101001

 > Final Processed Block:                                0111011101101111011101010110110001100100001000000110110001101001



Ciphertext Block 4:                                      0001111010000001100000100100010010010010100000001010111010100111

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011110100000011000001001000100

       - Right 32 Bits:            10010010100000001010111010100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011100010101001100110100011001010110111001001111   [Subkey: 16]
          - Input Half:       10010010100000001010111010100111
          - S-Box Result:     00111110001011110100110001001101   [per every group of 4-bits]
          - Split Into Two:   0011111000101111 [L] 0100110001001101 [R]
          - Swap Halves:      01001100010011010011111000101111
          - Bit Inversion:    10110011101100101100000111010000
          - Compressed Key:   01001100010100110011101011001111   [done by compression P-Box]
          - XOR with Key:     11111111111000011111101100011111

          - FUNCTION OUTPUT:  11111111111000011111101100011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011110100000011000001001000100

       - FUNCTION OUTPUT:          11111111111000011111101100011111

       - Left XOR FUNCTION OUTPUT: 11100001011000000111100101011011

       - Next Round Left 32 Bits:  10010010100000001010111010100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100001011000000111100101011011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10010010100000001010111010100111

       - Right 32 Bits:            11100001011000000111100101011011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101111100011101010110011001011100110101001000110110   [Subkey: 15]
          - Input Half:       11100001011000000111100101011011
          - S-Box Result:     11001010000011111101001110011000   [per every group of 4-bits]
          - Split Into Two:   1100101000001111 [L] 1101001110011000 [R]
          - Swap Halves:      11010011100110001100101000001111
          - Bit Inversion:    00101100011001110011010111110000
          - Compressed Key:   01011100010101100111111010001001   [done by compression P-Box]
          - XOR with Key:     01110000001100010100101101111001

          - FUNCTION OUTPUT:  01110000001100010100101101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10010010100000001010111010100111

       - FUNCTION OUTPUT:          01110000001100010100101101111001

       - Left XOR FUNCTION OUTPUT: 11100010101100011110010111011110

       - Next Round Left 32 Bits:  11100001011000000111100101011011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100010101100011110010111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100001011000000111100101011011

       - Right 32 Bits:            11100010101100011110010111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101010000011100010101001100110100011001010110111001   [Subkey: 14]
          - Input Half:       11100010101100011110010111011110
          - S-Box Result:     11001110100010101100100101101100   [per every group of 4-bits]
          - Split Into Two:   1100111010001010 [L] 1100100101101100 [R]
          - Swap Halves:      11001001011011001100111010001010
          - Bit Inversion:    00110110100100110011000101110101
          - Compressed Key:   11010000010010001001100101110110   [done by compression P-Box]
          - XOR with Key:     11100110110110111010100000000011

          - FUNCTION OUTPUT:  11100110110110111010100000000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100001011000000111100101011011

       - FUNCTION OUTPUT:          11100110110110111010100000000011

       - Left XOR FUNCTION OUTPUT: 00000111101110111101000101011000

       - Next Round Left 32 Bits:  11100010101100011110010111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000111101110111101000101011000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100010101100011110010111011110

       - Right 32 Bits:            00000111101110111101000101011000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000010101111100011101010110011001011100110101001000   [Subkey: 13]
          - Input Half:       00000111101110111101000101011000
          - S-Box Result:     11111101100010000110101010010010   [per every group of 4-bits]
          - Split Into Two:   1111110110001000 [L] 0110101010010010 [R]
          - Swap Halves:      01101010100100101111110110001000
          - Bit Inversion:    10010101011011010000001001110111
          - Compressed Key:   11001010010010100011101101010100   [done by compression P-Box]
          - XOR with Key:     01011111001001110011100100100011

          - FUNCTION OUTPUT:  01011111001001110011100100100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100010101100011110010111011110

       - FUNCTION OUTPUT:          01011111001001110011100100100011

       - Left XOR FUNCTION OUTPUT: 10111101100101101101110011111101

       - Next Round Left 32 Bits:  00000111101110111101000101011000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111101100101101101110011111101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000111101110111101000101011000

       - Right 32 Bits:            10111101100101101101110011111101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100111101010000011100010101001100110100011001010110   [Subkey: 12]
          - Input Half:       10111101100101101101110011111101
          - S-Box Result:     10000110001100000110010110110110   [per every group of 4-bits]
          - Split Into Two:   1000011000110000 [L] 0110010110110110 [R]
          - Swap Halves:      01100101101101101000011000110000
          - Bit Inversion:    10011010010010010111100111001111
          - Compressed Key:   00011110000000100110111011001001   [done by compression P-Box]
          - XOR with Key:     10000100010010110001011100000110

          - FUNCTION OUTPUT:  10000100010010110001011100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000111101110111101000101011000

       - FUNCTION OUTPUT:          10000100010010110001011100000110

       - Left XOR FUNCTION OUTPUT: 10000011111100001100011001011110

       - Next Round Left 32 Bits:  10111101100101101101110011111101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000011111100001100011001011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111101100101101101110011111101

       - Right 32 Bits:            10000011111100001100011001011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011000010101111100011101010110011001011100110101   [Subkey: 11]
          - Input Half:       10000011111100001100011001011110
          - S-Box Result:     00100001101111110101000010011100   [per every group of 4-bits]
          - Split Into Two:   0010000110111111 [L] 0101000010011100 [R]
          - Swap Halves:      01010000100111000010000110111111
          - Bit Inversion:    10101111011000111101111001000000
          - Compressed Key:   00100100011100100101100111011010   [done by compression P-Box]
          - XOR with Key:     10001011000100011000011110011010

          - FUNCTION OUTPUT:  10001011000100011000011110011010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111101100101101101110011111101

       - FUNCTION OUTPUT:          10001011000100011000011110011010

       - Left XOR FUNCTION OUTPUT: 00110110100001110101101101100111

       - Next Round Left 32 Bits:  10000011111100001100011001011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110110100001110101101101100111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000011111100001100011001011110

       - Right 32 Bits:            00110110100001110101101101100111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100100111101010000011100010101001100110100011001   [Subkey: 10]
          - Input Half:       00110110100001110101101101100111
          - S-Box Result:     00010000001011011001100000001101   [per every group of 4-bits]
          - Split Into Two:   0001000000101101 [L] 1001100000001101 [R]
          - Swap Halves:      10011000000011010001000000101101
          - Bit Inversion:    01100111111100101110111111010010
          - Compressed Key:   11101000010100100001001101010110   [done by compression P-Box]
          - XOR with Key:     10001111101000001111110010000100

          - FUNCTION OUTPUT:  10001111101000001111110010000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000011111100001100011001011110

       - FUNCTION OUTPUT:          10001111101000001111110010000100

       - Left XOR FUNCTION OUTPUT: 00001100010100000011101011011010

       - Next Round Left 32 Bits:  00110110100001110101101101100111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00001100010100000011101011011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110110100001110101101101100111

       - Right 32 Bits:            00001100010100000011101011011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011011000010101111100011101010110011001011100   [Subkey: 9]
          - Input Half:       00001100010100000011101011011010
          - S-Box Result:     11110101100111110001010001100100   [per every group of 4-bits]
          - Split Into Two:   1111010110011111 [L] 0001010001100100 [R]
          - Swap Halves:      00010100011001001111010110011111
          - Bit Inversion:    11101011100110110000101001100000
          - Compressed Key:   01010011000010110011101011001100   [done by compression P-Box]
          - XOR with Key:     10111000100100000011000010101100

          - FUNCTION OUTPUT:  10111000100100000011000010101100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110110100001110101101101100111

       - FUNCTION OUTPUT:          10111000100100000011000010101100

       - Left XOR FUNCTION OUTPUT: 10001110000101110110101111001011

       - Next Round Left 32 Bits:  00001100010100000011101011011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110000101110110101111001011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00001100010100000011101011011010

       - Right 32 Bits:            10001110000101110110101111001011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011011100100111101010000011100010101001100110100   [Subkey: 8]
          - Input Half:       10001110000101110110101111001011
          - S-Box Result:     00101100101011010000100001011000   [per every group of 4-bits]
          - Split Into Two:   0010110010101101 [L] 0000100001011000 [R]
          - Swap Halves:      00001000010110000010110010101101
          - Bit Inversion:    11110111101001111101001101010010
          - Compressed Key:   00010111011010100011101010011000   [done by compression P-Box]
          - XOR with Key:     11100000110011011110100111001010

          - FUNCTION OUTPUT:  11100000110011011110100111001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00001100010100000011101011011010

       - FUNCTION OUTPUT:          11100000110011011110100111001010

       - Left XOR FUNCTION OUTPUT: 11101100100111011101001100010000

       - Next Round Left 32 Bits:  10001110000101110110101111001011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101100100111011101001100010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110000101110110101111001011

       - Right 32 Bits:            11101100100111011101001100010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011010100100011011000010101111100011101010110011001   [Subkey: 7]
          - Input Half:       11101100100111011101001100010000
          - S-Box Result:     11000101001101100110000110101111   [per every group of 4-bits]
          - Split Into Two:   1100010100110110 [L] 0110000110101111 [R]
          - Swap Halves:      01100001101011111100010100110110
          - Bit Inversion:    10011110010100000011101011001001
          - Compressed Key:   01101000100100101111101101110110   [done by compression P-Box]
          - XOR with Key:     11110110110000101100000110111111

          - FUNCTION OUTPUT:  11110110110000101100000110111111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110000101110110101111001011

       - FUNCTION OUTPUT:          11110110110000101100000110111111

       - Left XOR FUNCTION OUTPUT: 01111000110101011010101001110100

       - Next Round Left 32 Bits:  11101100100111011101001100010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01111000110101011010101001110100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101100100111011101001100010000

       - Right 32 Bits:            01111000110101011010101001110100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100101011011100100111101010000011100010101001100   [Subkey: 6]
          - Input Half:       01111000110101011010101001110100
          - S-Box Result:     11010010011010010100010011010111   [per every group of 4-bits]
          - Split Into Two:   1101001001101001 [L] 0100010011010111 [R]
          - Swap Halves:      01000100110101111101001001101001
          - Bit Inversion:    10111011001010000010110110010110
          - Compressed Key:   01001010101100110101101101011100   [done by compression P-Box]
          - XOR with Key:     11110001100110110111011011001010

          - FUNCTION OUTPUT:  11110001100110110111011011001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101100100111011101001100010000

       - FUNCTION OUTPUT:          11110001100110110111011011001010

       - Left XOR FUNCTION OUTPUT: 00011101000001101010010111011010

       - Next Round Left 32 Bits:  01111000110101011010101001110100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011101000001101010010111011010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01111000110101011010101001110100

       - Right 32 Bits:            00011101000001101010010111011010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101110011010100100011011000010101111100011101010110   [Subkey: 5]
          - Input Half:       00011101000001101010010111011010
          - S-Box Result:     10100110111100000100100101100100   [per every group of 4-bits]
          - Split Into Two:   1010011011110000 [L] 0100100101100100 [R]
          - Swap Halves:      01001001011001001010011011110000
          - Bit Inversion:    10110110100110110101100100001111
          - Compressed Key:   00010011011011100001111111011001   [done by compression P-Box]
          - XOR with Key:     10100101111101010100011011010110

          - FUNCTION OUTPUT:  10100101111101010100011011010110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01111000110101011010101001110100

       - FUNCTION OUTPUT:          10100101111101010100011011010110

       - Left XOR FUNCTION OUTPUT: 11011101001000001110110010100010

       - Next Round Left 32 Bits:  00011101000001101010010111011010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101001000001110110010100010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011101000001101010010111011010

       - Right 32 Bits:            11011101001000001110110010100010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010001100101011011100100111101010000011100010101   [Subkey: 4]
          - Input Half:       11011101001000001110110010100010
          - S-Box Result:     01100110111011111100010101001110   [per every group of 4-bits]
          - Split Into Two:   0110011011101111 [L] 1100010101001110 [R]
          - Swap Halves:      11000101010011100110011011101111
          - Bit Inversion:    00111010101100011001100100010000
          - Compressed Key:   01100010010111011011100011011010   [done by compression P-Box]
          - XOR with Key:     01011000111011000010000111001010

          - FUNCTION OUTPUT:  01011000111011000010000111001010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011101000001101010010111011010

       - FUNCTION OUTPUT:          01011000111011000010000111001010

       - Left XOR FUNCTION OUTPUT: 01000101111010101000010000010000

       - Next Round Left 32 Bits:  11011101001000001110110010100010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000101111010101000010000010000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101001000001110110010100010

       - Right 32 Bits:            01000101111010101000010000010000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001100101110011010100100011011000010101111100011101   [Subkey: 3]
          - Input Half:       01000101111010101000010000010000
          - S-Box Result:     01111001110001000010011110101111   [per every group of 4-bits]
          - Split Into Two:   0111100111000100 [L] 0010011110101111 [R]
          - Swap Halves:      00100111101011110111100111000100
          - Bit Inversion:    11011000010100001000011000111011
          - Compressed Key:   11001010100100010111101011011110   [done by compression P-Box]
          - XOR with Key:     00010010110000011111110011100101

          - FUNCTION OUTPUT:  00010010110000011111110011100101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101001000001110110010100010

       - FUNCTION OUTPUT:          00010010110000011111110011100101

       - Left XOR FUNCTION OUTPUT: 11001111111000010001000001000111

       - Next Round Left 32 Bits:  01000101111010101000010000010000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111111000010001000001000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000101111010101000010000010000

       - Right 32 Bits:            11001111111000010001000001000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110011010001100101011011100100111101010000011100   [Subkey: 2]
          - Input Half:       11001111111000010001000001000111
          - S-Box Result:     01011011110010101010111101111101   [per every group of 4-bits]
          - Split Into Two:   0101101111001010 [L] 1010111101111101 [R]
          - Swap Halves:      10101111011111010101101111001010
          - Bit Inversion:    01010000100000101010010000110101
          - Compressed Key:   01010011001110101100111101001100   [done by compression P-Box]
          - XOR with Key:     00000011101110000110101101111001

          - FUNCTION OUTPUT:  00000011101110000110101101111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000101111010101000010000010000

       - FUNCTION OUTPUT:          00000011101110000110101101111001

       - Left XOR FUNCTION OUTPUT: 01000110010100101110111101101001

       - Next Round Left 32 Bits:  11001111111000010001000001000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110010100101110111101101001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111111000010001000001000111

       - Right 32 Bits:            01000110010100101110111101101001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001100101110011010100100011011000010101111100   [Subkey: 1]
          - Input Half:       01000110010100101110111101101001
          - S-Box Result:     01110000100111101100101100000011   [per every group of 4-bits]
          - Split Into Two:   0111000010011110 [L] 1100101100000011 [R]
          - Swap Halves:      11001011000000110111000010011110
          - Bit Inversion:    00110100111111001000111101100001
          - Compressed Key:   01010110011111101000100101011100   [done by compression P-Box]
          - XOR with Key:     01100010100000100000011000111101

          - FUNCTION OUTPUT:  01100010100000100000011000111101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111111000010001000001000111

       - FUNCTION OUTPUT:          01100010100000100000011000111101

       - Left XOR FUNCTION OUTPUT: 10101101011000110001011001111010

       - Next Round Left 32 Bits:  01000110010100101110111101101001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10101101011000110001011001111010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1010110101100011000101100111101001000110010100101110111101101001

 > Decrypted Block:     1010110101100011000101100111101001000110010100101110111101101001


!!!CBC: Previous Ciphertext:                             1100011000000110001101100001101101100110001111001000101000011110

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0110101101100101001000000110000100100000011011100110010101110111

 > Final Processed Block:                                0110101101100101001000000110000100100000011011100110010101110111



Ciphertext Block 5:                                      1101001111011101010111101101011111100110011011101101001111110001

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010011110111010101111011010111

       - Right 32 Bits:            11100110011011101101001111110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011100010101001100110100011001010110111001001111   [Subkey: 16]
          - Input Half:       11100110011011101101001111110001
          - S-Box Result:     11000000000011000110000110111010   [per every group of 4-bits]
          - Split Into Two:   1100000000001100 [L] 0110000110111010 [R]
          - Swap Halves:      01100001101110101100000000001100
          - Bit Inversion:    10011110010001010011111111110011
          - Compressed Key:   01001100010100110011101011001111   [done by compression P-Box]
          - XOR with Key:     11010010000101100000010100111100

          - FUNCTION OUTPUT:  11010010000101100000010100111100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010011110111010101111011010111

       - FUNCTION OUTPUT:          11010010000101100000010100111100

       - Left XOR FUNCTION OUTPUT: 00000001110010110101101111101011

       - Next Round Left 32 Bits:  11100110011011101101001111110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000001110010110101101111101011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100110011011101101001111110001

       - Right 32 Bits:            00000001110010110101101111101011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101111100011101010110011001011100110101001000110110   [Subkey: 15]
          - Input Half:       00000001110010110101101111101011
          - S-Box Result:     11111010010110001001100011001000   [per every group of 4-bits]
          - Split Into Two:   1111101001011000 [L] 1001100011001000 [R]
          - Swap Halves:      10011000110010001111101001011000
          - Bit Inversion:    01100111001101110000010110100111
          - Compressed Key:   01011100010101100111111010001001   [done by compression P-Box]
          - XOR with Key:     00111011011000010111101100101110

          - FUNCTION OUTPUT:  00111011011000010111101100101110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100110011011101101001111110001

       - FUNCTION OUTPUT:          00111011011000010111101100101110

       - Left XOR FUNCTION OUTPUT: 11011101000011111010100011011111

       - Next Round Left 32 Bits:  00000001110010110101101111101011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11011101000011111010100011011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000001110010110101101111101011

       - Right 32 Bits:            11011101000011111010100011011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101010000011100010101001100110100011001010110111001   [Subkey: 14]
          - Input Half:       11011101000011111010100011011111
          - S-Box Result:     01100110111110110100001001101011   [per every group of 4-bits]
          - Split Into Two:   0110011011111011 [L] 0100001001101011 [R]
          - Swap Halves:      01000010011010110110011011111011
          - Bit Inversion:    10111101100101001001100100000100
          - Compressed Key:   11010000010010001001100101110110   [done by compression P-Box]
          - XOR with Key:     01101101110111000000000001110010

          - FUNCTION OUTPUT:  01101101110111000000000001110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000001110010110101101111101011

       - FUNCTION OUTPUT:          01101101110111000000000001110010

       - Left XOR FUNCTION OUTPUT: 01101100000101110101101110011001

       - Next Round Left 32 Bits:  11011101000011111010100011011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100000101110101101110011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11011101000011111010100011011111

       - Right 32 Bits:            01101100000101110101101110011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000010101111100011101010110011001011100110101001000   [Subkey: 13]
          - Input Half:       01101100000101110101101110011001
          - S-Box Result:     00000101101011011001100000110011   [per every group of 4-bits]
          - Split Into Two:   0000010110101101 [L] 1001100000110011 [R]
          - Swap Halves:      10011000001100110000010110101101
          - Bit Inversion:    01100111110011001111101001010010
          - Compressed Key:   11001010010010100011101101010100   [done by compression P-Box]
          - XOR with Key:     10101101100001101100000100000110

          - FUNCTION OUTPUT:  10101101100001101100000100000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11011101000011111010100011011111

       - FUNCTION OUTPUT:          10101101100001101100000100000110

       - Left XOR FUNCTION OUTPUT: 01110000100010010110100111011001

       - Next Round Left 32 Bits:  01101100000101110101101110011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01110000100010010110100111011001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100000101110101101110011001

       - Right 32 Bits:            01110000100010010110100111011001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100111101010000011100010101001100110100011001010110   [Subkey: 12]
          - Input Half:       01110000100010010110100111011001
          - S-Box Result:     11011111001000110000001101100011   [per every group of 4-bits]
          - Split Into Two:   1101111100100011 [L] 0000001101100011 [R]
          - Swap Halves:      00000011011000111101111100100011
          - Bit Inversion:    11111100100111000010000011011100
          - Compressed Key:   00011110000000100110111011001001   [done by compression P-Box]
          - XOR with Key:     11100010100111100100111000010101

          - FUNCTION OUTPUT:  11100010100111100100111000010101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100000101110101101110011001

       - FUNCTION OUTPUT:          11100010100111100100111000010101

       - Left XOR FUNCTION OUTPUT: 10001110100010010001010110001100

       - Next Round Left 32 Bits:  01110000100010010110100111011001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001110100010010001010110001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01110000100010010110100111011001

       - Right 32 Bits:            10001110100010010001010110001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011000010101111100011101010110011001011100110101   [Subkey: 11]
          - Input Half:       10001110100010010001010110001100
          - S-Box Result:     00101100001000111010100100100101   [per every group of 4-bits]
          - Split Into Two:   0010110000100011 [L] 1010100100100101 [R]
          - Swap Halves:      10101001001001010010110000100011
          - Bit Inversion:    01010110110110101101001111011100
          - Compressed Key:   00100100011100100101100111011010   [done by compression P-Box]
          - XOR with Key:     01110010101010001000101000000110

          - FUNCTION OUTPUT:  01110010101010001000101000000110

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01110000100010010110100111011001

       - FUNCTION OUTPUT:          01110010101010001000101000000110

       - Left XOR FUNCTION OUTPUT: 00000010001000011110001111011111

       - Next Round Left 32 Bits:  10001110100010010001010110001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00000010001000011110001111011111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001110100010010001010110001100

       - Right 32 Bits:            00000010001000011110001111011111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100100111101010000011100010101001100110100011001   [Subkey: 10]
          - Input Half:       00000010001000011110001111011111
          - S-Box Result:     11111110111010101100000101101011   [per every group of 4-bits]
          - Split Into Two:   1111111011101010 [L] 1100000101101011 [R]
          - Swap Halves:      11000001011010111111111011101010
          - Bit Inversion:    00111110100101000000000100010101
          - Compressed Key:   11101000010100100001001101010110   [done by compression P-Box]
          - XOR with Key:     11010110110001100001001001000011

          - FUNCTION OUTPUT:  11010110110001100001001001000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001110100010010001010110001100

       - FUNCTION OUTPUT:          11010110110001100001001001000011

       - Left XOR FUNCTION OUTPUT: 01011000010011110000011111001111

       - Next Round Left 32 Bits:  00000010001000011110001111011111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01011000010011110000011111001111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00000010001000011110001111011111

       - Right 32 Bits:            01011000010011110000011111001111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011011000010101111100011101010110011001011100   [Subkey: 9]
          - Input Half:       01011000010011110000011111001111
          - S-Box Result:     10010010011110111111110101011011   [per every group of 4-bits]
          - Split Into Two:   1001001001111011 [L] 1111110101011011 [R]
          - Swap Halves:      11111101010110111001001001111011
          - Bit Inversion:    00000010101001000110110110000100
          - Compressed Key:   01010011000010110011101011001100   [done by compression P-Box]
          - XOR with Key:     01010001101011110101011101001000

          - FUNCTION OUTPUT:  01010001101011110101011101001000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00000010001000011110001111011111

       - FUNCTION OUTPUT:          01010001101011110101011101001000

       - Left XOR FUNCTION OUTPUT: 01010011100011101011010010010111

       - Next Round Left 32 Bits:  01011000010011110000011111001111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010011100011101011010010010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01011000010011110000011111001111

       - Right 32 Bits:            01010011100011101011010010010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011011100100111101010000011100010101001100110100   [Subkey: 8]
          - Input Half:       01010011100011101011010010010111
          - S-Box Result:     10010001001011001000011100111101   [per every group of 4-bits]
          - Split Into Two:   1001000100101100 [L] 1000011100111101 [R]
          - Swap Halves:      10000111001111011001000100101100
          - Bit Inversion:    01111000110000100110111011010011
          - Compressed Key:   00010111011010100011101010011000   [done by compression P-Box]
          - XOR with Key:     01101111101010000101010001001011

          - FUNCTION OUTPUT:  01101111101010000101010001001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01011000010011110000011111001111

       - FUNCTION OUTPUT:          01101111101010000101010001001011

       - Left XOR FUNCTION OUTPUT: 00110111111001110101001110000100

       - Next Round Left 32 Bits:  01010011100011101011010010010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00110111111001110101001110000100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010011100011101011010010010111

       - Right 32 Bits:            00110111111001110101001110000100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011010100100011011000010101111100011101010110011001   [Subkey: 7]
          - Input Half:       00110111111001110101001110000100
          - S-Box Result:     00011101110011011001000100100111   [per every group of 4-bits]
          - Split Into Two:   0001110111001101 [L] 1001000100100111 [R]
          - Swap Halves:      10010001001001110001110111001101
          - Bit Inversion:    01101110110110001110001000110010
          - Compressed Key:   01101000100100101111101101110110   [done by compression P-Box]
          - XOR with Key:     00000110010010100001100101000100

          - FUNCTION OUTPUT:  00000110010010100001100101000100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010011100011101011010010010111

       - FUNCTION OUTPUT:          00000110010010100001100101000100

       - Left XOR FUNCTION OUTPUT: 01010101110001001010110111010011

       - Next Round Left 32 Bits:  00110111111001110101001110000100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01010101110001001010110111010011 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110111111001110101001110000100

       - Right 32 Bits:            01010101110001001010110111010011

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100101011011100100111101010000011100010101001100   [Subkey: 6]
          - Input Half:       01010101110001001010110111010011
          - S-Box Result:     10011001010101110100011001100001   [per every group of 4-bits]
          - Split Into Two:   1001100101010111 [L] 0100011001100001 [R]
          - Swap Halves:      01000110011000011001100101010111
          - Bit Inversion:    10111001100111100110011010101000
          - Compressed Key:   01001010101100110101101101011100   [done by compression P-Box]
          - XOR with Key:     11110011001011010011110111110100

          - FUNCTION OUTPUT:  11110011001011010011110111110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110111111001110101001110000100

       - FUNCTION OUTPUT:          11110011001011010011110111110100

       - Left XOR FUNCTION OUTPUT: 11000100110010100110111001110000

       - Next Round Left 32 Bits:  01010101110001001010110111010011 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000100110010100110111001110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01010101110001001010110111010011

       - Right 32 Bits:            11000100110010100110111001110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101110011010100100011011000010101111100011101010110   [Subkey: 5]
          - Input Half:       11000100110010100110111001110000
          - S-Box Result:     01010111010101000000110011011111   [per every group of 4-bits]
          - Split Into Two:   0101011101010100 [L] 0000110011011111 [R]
          - Swap Halves:      00001100110111110101011101010100
          - Bit Inversion:    11110011001000001010100010101011
          - Compressed Key:   00010011011011100001111111011001   [done by compression P-Box]
          - XOR with Key:     11100000010011101011011101110010

          - FUNCTION OUTPUT:  11100000010011101011011101110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01010101110001001010110111010011

       - FUNCTION OUTPUT:          11100000010011101011011101110010

       - Left XOR FUNCTION OUTPUT: 10110101100010100001101010100001

       - Next Round Left 32 Bits:  11000100110010100110111001110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110101100010100001101010100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000100110010100110111001110000

       - Right 32 Bits:            10110101100010100001101010100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010001100101011011100100111101010000011100010101   [Subkey: 4]
          - Input Half:       10110101100010100001101010100001
          - S-Box Result:     10001001001001001010010001001010   [per every group of 4-bits]
          - Split Into Two:   1000100100100100 [L] 1010010001001010 [R]
          - Swap Halves:      10100100010010101000100100100100
          - Bit Inversion:    01011011101101010111011011011011
          - Compressed Key:   01100010010111011011100011011010   [done by compression P-Box]
          - XOR with Key:     00111001111010001100111000000001

          - FUNCTION OUTPUT:  00111001111010001100111000000001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000100110010100110111001110000

       - FUNCTION OUTPUT:          00111001111010001100111000000001

       - Left XOR FUNCTION OUTPUT: 11111101001000101010000001110001

       - Next Round Left 32 Bits:  10110101100010100001101010100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111101001000101010000001110001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10110101100010100001101010100001

       - Right 32 Bits:            11111101001000101010000001110001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001100101110011010100100011011000010101111100011101   [Subkey: 3]
          - Input Half:       11111101001000101010000001110001
          - S-Box Result:     10110110111011100100111111011010   [per every group of 4-bits]
          - Split Into Two:   1011011011101110 [L] 0100111111011010 [R]
          - Swap Halves:      01001111110110101011011011101110
          - Bit Inversion:    10110000001001010100100100010001
          - Compressed Key:   11001010100100010111101011011110   [done by compression P-Box]
          - XOR with Key:     01111010101101000011001111001111

          - FUNCTION OUTPUT:  01111010101101000011001111001111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10110101100010100001101010100001

       - FUNCTION OUTPUT:          01111010101101000011001111001111

       - Left XOR FUNCTION OUTPUT: 11001111001111100010100101101110

       - Next Round Left 32 Bits:  11111101001000101010000001110001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001111001111100010100101101110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111101001000101010000001110001

       - Right 32 Bits:            11001111001111100010100101101110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110011010001100101011011100100111101010000011100   [Subkey: 2]
          - Input Half:       11001111001111100010100101101110
          - S-Box Result:     01011011000111001110001100001100   [per every group of 4-bits]
          - Split Into Two:   0101101100011100 [L] 1110001100001100 [R]
          - Swap Halves:      11100011000011000101101100011100
          - Bit Inversion:    00011100111100111010010011100011
          - Compressed Key:   01010011001110101100111101001100   [done by compression P-Box]
          - XOR with Key:     01001111110010010110101110101111

          - FUNCTION OUTPUT:  01001111110010010110101110101111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111101001000101010000001110001

       - FUNCTION OUTPUT:          01001111110010010110101110101111

       - Left XOR FUNCTION OUTPUT: 10110010111010111100101111011110

       - Next Round Left 32 Bits:  11001111001111100010100101101110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10110010111010111100101111011110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001111001111100010100101101110

       - Right 32 Bits:            10110010111010111100101111011110

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001100101110011010100100011011000010101111100   [Subkey: 1]
          - Input Half:       10110010111010111100101111011110
          - S-Box Result:     10001110110010000101100001101100   [per every group of 4-bits]
          - Split Into Two:   1000111011001000 [L] 0101100001101100 [R]
          - Swap Halves:      01011000011011001000111011001000
          - Bit Inversion:    10100111100100110111000100110111
          - Compressed Key:   01010110011111101000100101011100   [done by compression P-Box]
          - XOR with Key:     11110001111011011111100001101011

          - FUNCTION OUTPUT:  11110001111011011111100001101011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001111001111100010100101101110

       - FUNCTION OUTPUT:          11110001111011011111100001101011

       - Left XOR FUNCTION OUTPUT: 00111110110100111101000100000101

       - Next Round Left 32 Bits:  10110010111010111100101111011110 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00111110110100111101000100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 0011111011010011110100010000010110110010111010111100101111011110

 > Decrypted Block:     0011111011010011110100010000010110110010111010111100101111011110


!!!CBC: Previous Ciphertext:                             0001111010000001100000100100010010010010100000001010111010100111

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001010010010100110100000100100000011010110110010101111001

 > Final Processed Block:                                0010000001010010010100110100000100100000011010110110010101111001



Ciphertext Block 6:                                      0011000010000111011001011111111100011100011010001100101000100100

 <<< START FEISTEL STRUCTURE >>>

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 1 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00110000100001110110010111111111

       - Right 32 Bits:            00011100011010001100101000100100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010000011100010101001100110100011001010110111001001111   [Subkey: 16]
          - Input Half:       00011100011010001100101000100100
          - S-Box Result:     10100101000000100101010011100111   [per every group of 4-bits]
          - Split Into Two:   1010010100000010 [L] 0101010011100111 [R]
          - Swap Halves:      01010100111001111010010100000010
          - Bit Inversion:    10101011000110000101101011111101
          - Compressed Key:   01001100010100110011101011001111   [done by compression P-Box]
          - XOR with Key:     11100111010010110110000000110010

          - FUNCTION OUTPUT:  11100111010010110110000000110010

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00110000100001110110010111111111

       - FUNCTION OUTPUT:          11100111010010110110000000110010

       - Left XOR FUNCTION OUTPUT: 11010111110011000000010111001101

       - Next Round Left 32 Bits:  00011100011010001100101000100100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010111110011000000010111001101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 2 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011100011010001100101000100100

       - Right 32 Bits:            11010111110011000000010111001101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00010101111100011101010110011001011100110101001000110110   [Subkey: 15]
          - Input Half:       11010111110011000000010111001101
          - S-Box Result:     01101101010101011111100101010110   [per every group of 4-bits]
          - Split Into Two:   0110110101010101 [L] 1111100101010110 [R]
          - Swap Halves:      11111001010101100110110101010101
          - Bit Inversion:    00000110101010011001001010101010
          - Compressed Key:   01011100010101100111111010001001   [done by compression P-Box]
          - XOR with Key:     01011010111111111110110000100011

          - FUNCTION OUTPUT:  01011010111111111110110000100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011100011010001100101000100100

       - FUNCTION OUTPUT:          01011010111111111110110000100011

       - Left XOR FUNCTION OUTPUT: 01000110100101110010011000000111

       - Next Round Left 32 Bits:  11010111110011000000010111001101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01000110100101110010011000000111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 3 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010111110011000000010111001101

       - Right 32 Bits:            01000110100101110010011000000111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00111101010000011100010101001100110100011001010110111001   [Subkey: 14]
          - Input Half:       01000110100101110010011000000111
          - S-Box Result:     01110000001111011110000011111101   [per every group of 4-bits]
          - Split Into Two:   0111000000111101 [L] 1110000011111101 [R]
          - Swap Halves:      11100000111111010111000000111101
          - Bit Inversion:    00011111000000101000111111000010
          - Compressed Key:   11010000010010001001100101110110   [done by compression P-Box]
          - XOR with Key:     11001111010010100001011010110100

          - FUNCTION OUTPUT:  11001111010010100001011010110100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010111110011000000010111001101

       - FUNCTION OUTPUT:          11001111010010100001011010110100

       - Left XOR FUNCTION OUTPUT: 00011000100001100001001101111001

       - Next Round Left 32 Bits:  01000110100101110010011000000111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00011000100001100001001101111001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 4 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01000110100101110010011000000111

       - Right 32 Bits:            00011000100001100001001101111001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11011000010101111100011101010110011001011100110101001000   [Subkey: 13]
          - Input Half:       00011000100001100001001101111001
          - S-Box Result:     10100010001000001010000111010011   [per every group of 4-bits]
          - Split Into Two:   1010001000100000 [L] 1010000111010011 [R]
          - Swap Halves:      10100001110100111010001000100000
          - Bit Inversion:    01011110001011000101110111011111
          - Compressed Key:   11001010010010100011101101010100   [done by compression P-Box]
          - XOR with Key:     10010100011001100110011010001011

          - FUNCTION OUTPUT:  10010100011001100110011010001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01000110100101110010011000000111

       - FUNCTION OUTPUT:          10010100011001100110011010001011

       - Left XOR FUNCTION OUTPUT: 11010010111100010100000010001100

       - Next Round Left 32 Bits:  00011000100001100001001101111001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11010010111100010100000010001100 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 5 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00011000100001100001001101111001

       - Right 32 Bits:            11010010111100010100000010001100

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11100100111101010000011100010101001100110100011001010110   [Subkey: 12]
          - Input Half:       11010010111100010100000010001100
          - S-Box Result:     01101110101110100111111100100101   [per every group of 4-bits]
          - Split Into Two:   0110111010111010 [L] 0111111100100101 [R]
          - Swap Halves:      01111111001001010110111010111010
          - Bit Inversion:    10000000110110101001000101000101
          - Compressed Key:   00011110000000100110111011001001   [done by compression P-Box]
          - XOR with Key:     10011110110110001111111110001100

          - FUNCTION OUTPUT:  10011110110110001111111110001100

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00011000100001100001001101111001

       - FUNCTION OUTPUT:          10011110110110001111111110001100

       - Left XOR FUNCTION OUTPUT: 10000110010111101110110011110101

       - Next Round Left 32 Bits:  11010010111100010100000010001100 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10000110010111101110110011110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 6 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11010010111100010100000010001100

       - Right 32 Bits:            10000110010111101110110011110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00100011011000010101111100011101010110011001011100110101   [Subkey: 11]
          - Input Half:       10000110010111101110110011110101
          - S-Box Result:     00100000100111001100010110111001   [per every group of 4-bits]
          - Split Into Two:   0010000010011100 [L] 1100010110111001 [R]
          - Swap Halves:      11000101101110010010000010011100
          - Bit Inversion:    00111010010001101101111101100011
          - Compressed Key:   00100100011100100101100111011010   [done by compression P-Box]
          - XOR with Key:     00011110001101001000011010111001

          - FUNCTION OUTPUT:  00011110001101001000011010111001

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11010010111100010100000010001100

       - FUNCTION OUTPUT:          00011110001101001000011010111001

       - Left XOR FUNCTION OUTPUT: 11001100110001011100011000110101

       - Next Round Left 32 Bits:  10000110010111101110110011110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11001100110001011100011000110101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 7 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10000110010111101110110011110101

       - Right 32 Bits:            11001100110001011100011000110101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011011100100111101010000011100010101001100110100011001   [Subkey: 10]
          - Input Half:       11001100110001011100011000110101
          - S-Box Result:     01010101010110010101000000011001   [per every group of 4-bits]
          - Split Into Two:   0101010101011001 [L] 0101000000011001 [R]
          - Swap Halves:      01010000000110010101010101011001
          - Bit Inversion:    10101111111001101010101010100110
          - Compressed Key:   11101000010100100001001101010110   [done by compression P-Box]
          - XOR with Key:     01000111101101001011100111110000

          - FUNCTION OUTPUT:  01000111101101001011100111110000

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10000110010111101110110011110101

       - FUNCTION OUTPUT:          01000111101101001011100111110000

       - Left XOR FUNCTION OUTPUT: 11000001111010100101010100000101

       - Next Round Left 32 Bits:  11001100110001011100011000110101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11000001111010100101010100000101 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 8 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11001100110001011100011000110101

       - Right 32 Bits:            11000001111010100101010100000101

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010100100011011000010101111100011101010110011001011100   [Subkey: 9]
          - Input Half:       11000001111010100101010100000101
          - S-Box Result:     01011010110001001001100111111001   [per every group of 4-bits]
          - Split Into Two:   0101101011000100 [L] 1001100111111001 [R]
          - Swap Halves:      10011001111110010101101011000100
          - Bit Inversion:    01100110000001101010010100111011
          - Compressed Key:   01010011000010110011101011001100   [done by compression P-Box]
          - XOR with Key:     00110101000011011001111111110111

          - FUNCTION OUTPUT:  00110101000011011001111111110111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11001100110001011100011000110101

       - FUNCTION OUTPUT:          00110101000011011001111111110111

       - Left XOR FUNCTION OUTPUT: 11111001110010000101100111000010

       - Next Round Left 32 Bits:  11000001111010100101010100000101 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11111001110010000101100111000010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 9 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11000001111010100101010100000101

       - Right 32 Bits:            11111001110010000101100111000010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101011011100100111101010000011100010101001100110100   [Subkey: 8]
          - Input Half:       11111001110010000101100111000010
          - S-Box Result:     10110011010100101001001101011110   [per every group of 4-bits]
          - Split Into Two:   1011001101010010 [L] 1001001101011110 [R]
          - Swap Halves:      10010011010111101011001101010010
          - Bit Inversion:    01101100101000010100110010101101
          - Compressed Key:   00010111011010100011101010011000   [done by compression P-Box]
          - XOR with Key:     01111011110010110111011000110101

          - FUNCTION OUTPUT:  01111011110010110111011000110101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11000001111010100101010100000101

       - FUNCTION OUTPUT:          01111011110010110111011000110101

       - Left XOR FUNCTION OUTPUT: 10111010001000010010001100110000

       - Next Round Left 32 Bits:  11111001110010000101100111000010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10111010001000010010001100110000 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 10 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11111001110010000101100111000010

       - Right 32 Bits:            10111010001000010010001100110000

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110011010100100011011000010101111100011101010110011001   [Subkey: 7]
          - Input Half:       10111010001000010010001100110000
          - S-Box Result:     10000100111010101110000100011111   [per every group of 4-bits]
          - Split Into Two:   1000010011101010 [L] 1110000100011111 [R]
          - Swap Halves:      11100001000111111000010011101010
          - Bit Inversion:    00011110111000000111101100010101
          - Compressed Key:   01101000100100101111101101110110   [done by compression P-Box]
          - XOR with Key:     01110110011100101000000001100011

          - FUNCTION OUTPUT:  01110110011100101000000001100011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11111001110010000101100111000010

       - FUNCTION OUTPUT:          01110110011100101000000001100011

       - Left XOR FUNCTION OUTPUT: 10001111101110101101100110100001

       - Next Round Left 32 Bits:  10111010001000010010001100110000 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10001111101110101101100110100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 11 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10111010001000010010001100110000

       - Right 32 Bits:            10001111101110101101100110100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        11010001100101011011100100111101010000011100010101001100   [Subkey: 6]
          - Input Half:       10001111101110101101100110100001
          - S-Box Result:     00101011100001000110001101001010   [per every group of 4-bits]
          - Split Into Two:   0010101110000100 [L] 0110001101001010 [R]
          - Swap Halves:      01100011010010100010101110000100
          - Bit Inversion:    10011100101101011101010001111011
          - Compressed Key:   01001010101100110101101101011100   [done by compression P-Box]
          - XOR with Key:     11010110000001101000111100100111

          - FUNCTION OUTPUT:  11010110000001101000111100100111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10111010001000010010001100110000

       - FUNCTION OUTPUT:          11010110000001101000111100100111

       - Left XOR FUNCTION OUTPUT: 01101100001001111010110000010111

       - Next Round Left 32 Bits:  10001111101110101101100110100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 01101100001001111010110000010111 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 12 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            10001111101110101101100110100001

       - Right 32 Bits:            01101100001001111010110000010111

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01100101110011010100100011011000010101111100011101010110   [Subkey: 5]
          - Input Half:       01101100001001111010110000010111
          - S-Box Result:     00000101111011010100010110101101   [per every group of 4-bits]
          - Split Into Two:   0000010111101101 [L] 0100010110101101 [R]
          - Swap Halves:      01000101101011010000010111101101
          - Bit Inversion:    10111010010100101111101000010010
          - Compressed Key:   00010011011011100001111111011001   [done by compression P-Box]
          - XOR with Key:     10101001001111001110010111001011

          - FUNCTION OUTPUT:  10101001001111001110010111001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            10001111101110101101100110100001

       - FUNCTION OUTPUT:          10101001001111001110010111001011

       - Left XOR FUNCTION OUTPUT: 00100110100001100011110001101010

       - Next Round Left 32 Bits:  01101100001001111010110000010111 [Round's Original Right Half]

       - Next Round Right 32 Bits: 00100110100001100011110001101010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 13 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            01101100001001111010110000010111

       - Right 32 Bits:            00100110100001100011110001101010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        00110011010001100101011011100100111101010000011100010101   [Subkey: 4]
          - Input Half:       00100110100001100011110001101010
          - S-Box Result:     11100000001000000001010100000100   [per every group of 4-bits]
          - Split Into Two:   1110000000100000 [L] 0001010100000100 [R]
          - Swap Halves:      00010101000001001110000000100000
          - Bit Inversion:    11101010111110110001111111011111
          - Compressed Key:   01100010010111011011100011011010   [done by compression P-Box]
          - XOR with Key:     10001000101001101010011100000101

          - FUNCTION OUTPUT:  10001000101001101010011100000101

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            01101100001001111010110000010111

       - FUNCTION OUTPUT:          10001000101001101010011100000101

       - Left XOR FUNCTION OUTPUT: 11100100100000010000101100010010

       - Next Round Left 32 Bits:  00100110100001100011110001101010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11100100100000010000101100010010 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 14 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            00100110100001100011110001101010

       - Right 32 Bits:            11100100100000010000101100010010

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01011001100101110011010100100011011000010101111100011101   [Subkey: 3]
          - Input Half:       11100100100000010000101100010010
          - S-Box Result:     11000111001010101111100010101110   [per every group of 4-bits]
          - Split Into Two:   1100011100101010 [L] 1111100010101110 [R]
          - Swap Halves:      11111000101011101100011100101010
          - Bit Inversion:    00000111010100010011100011010101
          - Compressed Key:   11001010100100010111101011011110   [done by compression P-Box]
          - XOR with Key:     11001101110000000100001000001011

          - FUNCTION OUTPUT:  11001101110000000100001000001011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            00100110100001100011110001101010

       - FUNCTION OUTPUT:          11001101110000000100001000001011

       - Left XOR FUNCTION OUTPUT: 11101011010001100111111001100001

       - Next Round Left 32 Bits:  11100100100000010000101100010010 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11101011010001100111111001100001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 15 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11100100100000010000101100010010

       - Right 32 Bits:            11101011010001100111111001100001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01010100110011010001100101011011100100111101010000011100   [Subkey: 2]
          - Input Half:       11101011010001100111111001100001
          - S-Box Result:     11001000011100001101110000001010   [per every group of 4-bits]
          - Split Into Two:   1100100001110000 [L] 1101110000001010 [R]
          - Swap Halves:      11011100000010101100100001110000
          - Bit Inversion:    00100011111101010011011110001111
          - Compressed Key:   01010011001110101100111101001100   [done by compression P-Box]
          - XOR with Key:     01110000110011111111100011000011

          - FUNCTION OUTPUT:  01110000110011111111100011000011

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11100100100000010000101100010010

       - FUNCTION OUTPUT:          01110000110011111111100011000011

       - Left XOR FUNCTION OUTPUT: 10010100010011101111001111010001

       - Next Round Left 32 Bits:  11101011010001100111111001100001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 10010100010011101111001111010001 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
   <<< ROUND 16 >>> --------------------------------------------------------------------------------------------
   ------------------------------------------------------------------------------------------------------------
       - Left 32 Bits :            11101011010001100111111001100001

       - Right 32 Bits:            10010100010011101111001111010001

      <<< START FEISTEL FUNCTION >>> [Input = RIGHT 32-bit half]

          - Round Key:        01110101011001100101110011010100100011011000010101111100   [Subkey: 1]
          - Input Half:       10010100010011101111001111010001
          - S-Box Result:     00110111011111001011000101101010   [per every group of 4-bits]
          - Split Into Two:   0011011101111100 [L] 1011000101101010 [R]
          - Swap Halves:      10110001011010100011011101111100
          - Bit Inversion:    01001110100101011100100010000011
          - Compressed Key:   01010110011111101000100101011100   [done by compression P-Box]
          - XOR with Key:     00011000111010110100000111011111

          - FUNCTION OUTPUT:  00011000111010110100000111011111

      <<< END FEISTEL FUNCTION >>> [Output = NEW RIGHT 32-bit half]

       - Left 32 Bits :            11101011010001100111111001100001

       - FUNCTION OUTPUT:          00011000111010110100000111011111

       - Left XOR FUNCTION OUTPUT: 11110011101011010011111110111110

       - Next Round Left 32 Bits:  10010100010011101111001111010001 [Round's Original Right Half]

       - Next Round Right 32 Bits: 11110011101011010011111110111110 [Left XOR FUNCTION OUTPUT]

   ------------------------------------------------------------------------------------------------------------
 <<< END FEISTEL STRUCTURE >>>

 > Swap Left and Right: 1111001110101101001111111011111010010100010011101111001111010001

 > Decrypted Block:     1111001110101101001111111011111010010100010011101111001111010001


!!!CBC: Previous Ciphertext:                             1101001111011101010111101101011111100110011011101101001111110001

!!!CBC: Decrypted Block XOR with Previous Ciphertext:    0010000001110000011000010110100101110010001000000010000000100000

 > Final Processed Block:                                0010000001110000011000010110100101110010001000000010000000100000


FINAL PROCESSED DATA BLOCKS: 0100100001100101011011000110110001101111001000000111001101100101,0111001001110110011001010111001000101100001000000100100100100000,0111011101101111011101010110110001100100001000000110110001101001,0110101101100101001000000110000100100000011011100110010101110111,0010000001010010010100110100000100100000011010110110010101111001,0010000001110000011000010110100101110010001000000010000000100000,

BLOCKS IN ASCII:             Hello server, I would like a new RSA key pair   

